From rpindiproli at google.com  Mon Aug  1 19:24:04 2005
From: rpindiproli at google.com (Ravi Pindiproli)
Date: Mon, 1 Aug 2005 16:24:04 -0700
Subject: [Twisted-Python] Engineering Opportunities at Google
Message-ID: <200508012324.j71NO4Al008262@216-239-45-4.google.com>

Hello Folks
 
My name is Ravi Pindiproli and I am a Recruiter for the SRE (Site
Reliability Engineering) Group at Google.  This is the most dynamic,
challenging and fun group at Google.  The SRE group is responsible for our
Google website from start to finish and it is different from the Operations
group.

 

We are constantly seeking Extraordinary developers and UNIX Administrators
(Linux) experts to join our exciting team and growing organization.   We
have positions open in the USA in Mountain View (CA), Santa Monica (CA), New
York (NY), and Kirkland (WA) as well as Dublin (Ireland) and Zurich
(Switzerland).  I am enclosing job descriptions of two positions.

 

If any of you feel that either of these positions is something that may be
of interest to you, please send me an email so we can schedule a time for me
to call you to speak with you to discuss more details.  

 

Thanks!

 

Senior Systems Administrator/Architect, Google.com (SRE)

This position is available in Mountain View, CA, / New York, NY / Kirkland,
WA / Dublin, Ireland / and Zurich, Switzerland.

Are you a detail-oriented systems professional, seasoned Unix jockey,
Internet services architect, database whiz, performance analyst, or software
engineer, at the top of your game? 

*	Looking for the next cool problem to solve, in a fast-paced and
engineering-driven environment? 

*	Can you write a script or application that performs practically the
entire job you once held earlier in your career? 

*	Does your idea of a good time involve taking things apart just to
see how they work? Are you successful putting them back together when you're
done? 

*	Can you help achieve increased Availability, Reliability, Uptime,
and Quality? (for our systems and services, naturally) 

If you answered "Yes" to more than three of the above questions, you may
have what it takes. Keep reading. 

Google.com Engineers are involved in all aspects of running our site. From
design to debug, from architecture to applications, Google.com engineers
spend their time troubleshooting problems in large-scale clustered
application service environments, and focus on making continual improvements
to our services. 

Working for Google.com, you will wear many hats: performance analyst,
service architect, system/database administrator, capacity planner, tools
developer, monitoring expert, and technical evangelist, for all components
of Google.com's services. 

This position requires a passion for problem solving, deep understanding of
networks, operating systems, multi-tiered Internet services, and the ability
to learn new applications and concepts quickly. Strong scripting skills are
essential. 

Requirements: 

*	3+ years experience in Unix or Linux Systems Administrator. 

*	Experience in a high-volume or critical production service
environment. 

*	Strong understanding of networking; understanding of how to isolate,
diagnose, and resolve service delivery components (service delivery
components include servers, networks, and applications); be familiar with
the functionality, operating, and failure modes of key networking devices
(routers, switches, bridges, firewalls, hardware load balancers); be able to
identify networking as the potential cause of a service issue using
server-resident tools to generate this data (tcpdump, ping, traceroute,
etc.); familiarity in interpreting the output of these tools; familiarity
with common network topologies, protocols, and tools; have some notion of
common network security exploits -- and their remedies; understanding of
troubleshooting at the packet level. 

*	Skilled in leading projects, especially in deploying live end-user
systems. 

*	Proven technical troubleshooting experience. 

*	Database administration experience a plus. 

*	Programming or debugging of web applications running under Java VM. 

*	In-depth knowledge of Linux, networking, and shell scripting. 

*	Knowledge of Python programming a plus. 

*	Experience with MySQL a plus. 

*	Programming and troubleshooting skills in C/C++ and/or Java a plus. 

*	Excellent written and verbal communication skills. 

*	Ability to handle periodic on-call duty as well as out-of-band
requests. 

*	BA/BS in Computer Science or a related technical discipline. 

Senior Software Engineer/Unix System & Network Administrator, Google.com
(SRE) 

This position is available in Mountain View, CA, / New York, NY / Kirkland,
WA / Dublin, Ireland / and Zurich, Switzerland. 

Are you part ace coder, part adrenaline junkie? Do you have a knack for
seeing a problem and immediately discerning the likely solution? Maybe
you've been coding for years, are bored with the old
design-build-review-test-ship-repeat routine, and yearn for some
faster-paced challenges? Or perhaps you're a seasoned software engineer who
is also a genius at jockeying networks and administering UNIX clusters. 

We're looking for top-notch thrill seeking, software engineers to join the
Google.com team. Google.com engineers are in the thick of everything
involved with keeping Google running, from code-level troubleshooting of
traffic anomalies to maintenance of our most cutting edge services; from
monitoring and alerts to building new automation infrastructure. We are
aggressively building this elite team of high level engineers in this
mission critical environment. All team members must have strong analytical
and troubleshooting skills, fluency in coding, good communication skills,
and most of all enthusiasm for tackling the complex problems of scale which
are uniquely Google. Google.com engineers tackle challenging, novel
situations every day, and work with just about every other engineering and
operations team in the process. 

Qualifications: 

*	Strong programming/scripting skills in any of the following: C, C++,
Java, Perl, Python. 

*	Senior Level experience with Unix system administration. 

*	Strong understanding of networking; understanding of how to isolate,
diagnose, and resolve service delivery components (service delivery
components include servers, networks, and applications); be familiar with
the functionality, operating, and failure modes of key networking devices
(routers, switches, bridges, firewalls, hardware load balancers); be able to
identify networking as the potential cause of a service issue using
server-resident tools to generate this data (tcpdump, ping, traceroute,
etc.); familiarity in interpreting the output of these tools; familiarity
with common network topologies, protocols, and tools; have some notion of
common network security exploits -- and their remedies; understanding of
troubleshooting at the packet level. 

*	Strong project management skills, especially in deploying live
end-user systems. 

*	In-depth knowledge of Unix (preferably Linux), and shell scripting. 

*	Proven technical troubleshooting experience. 

*	Excellent analytic ability, strong communication skills, and a
strong sense of urgency. 

*	Ability to handle periodic on-call duty as well as out-of-band
requests. 

*	6-15+ years experience for Senior SWE position, or 3-8 years
experience for SWE position. 

*	BA/BS in CS, or equivalent experience. 

 

Ravi Pindiproli
G O O G L E
Technical Sourcer, SRE
1600 Amphitheatre Pkwy, 
Bldg., 43
Mountain View, CA 94043
650-253-7888: Direct
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050801/26a484dd/attachment.htm 

From mary-twisted at puzzling.org  Tue Aug  2 09:21:24 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 2 Aug 2005 23:21:24 +1000
Subject: [Twisted-Python] Sydney Twisted Sprint (19-21/8): Linux Australia
	grants
Message-ID: <20050802132124.GB4807@sourdust.home.puzzling.org>

Hi everyone,

Another reminder about the Sydney Twisted Sprint on 19th-21st August,
but this time a reminder with a difference... Linux Australia is
sponsoring the sprint and is providing a few grants. They are providing
two subsidised domestic airfares and three accommodation subsidies to
needy Twisted folk, and further provided some funding for a sprint
dinner.

I need to hear from people wanting the airfares or accommodation
subsidies by this Friday by email. People wanting to come to the dinner
just need to RSVP on the wiki.

Info is at these pages:

 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredFlights
 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredAccommodation
 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredDinner

General information on the sprint is available at
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/FrontPage

Thanks very much to both Linux Australia and to Matthew Beauregard of
UTS's Programming Society (Matthew got the venue together for us).

-Mary



From disen at geo.unizh.ch  Tue Aug  2 13:10:39 2005
From: disen at geo.unizh.ch (Daniel Isenegger)
Date: Tue, 02 Aug 2005 19:10:39 +0200
Subject: [Twisted-Python] process status
Message-ID: <42EFA90F.8070603@geo.unizh.ch>

How to query process state and receive back control?

Hi,
a  newbie question: i struggle with the defer-mechanism.
i start from a client program a using defers a 
protocol.ProcessProtocol-class to invoke a local application (grass) to 
display a raster.
This works fine, the problem is now how to propagate back the final 
state of the invoked process back to the invoking instance and then to 
get the control back over the shell the process has been running in.

I can see that the state of the invoked process can be accesses in 
processEnded(), but when this function is invoked the connection to the 
invoking instance is already closed, so the state cannot be propagated 
to this invoking instance.

Additionaly the shell the process has been invoked does not receive 
further output of the invoking process., so i assume that the control is 
not handed back to the invoking process

Any hints?
Thanks Dani

In the following some excerpts of code to illustrate my problem:
 
invoking process:
#############################################################
    # invokes GIS to display the raster cmd, using IpodlasProcess to
    # call a process on the machine
    def displayRaster(self):
        
        # init deferred object d
        d = defer.Deferred()
        # add the pair of callbacks
        d.addCallback(self.handleDisplayRaster)
        d.addErrback(self.handleDisplayRasterFailure)
        #
        #invoke the deferred functions: i.e. handleDisplayRaster
        # and handleDisplayRasterFailure
        d.callback(rasterfile)
        print "displayRaster: after d.callback()"
    #
 ############################################################
    # handles the successfull call of the display of the raster theRaster
    def handleDisplayRaster(self,theRaster):
        #
        # init IpodlasProcess
        ip = IpodlasProcess()
        #
        #
        # invoke IpodlasProcess to invoke Grass to display the raster 
theRaster
        ip.displayRaster(theRaster)
        #
 #########################################################
    # handles the failed call of the display of the file theFoile
    # and its return object theFailure
    def handleDisplayRasterFailure(self,theFailure):
        #
        theFailure.trap(RuntimeError)
        #
###############################################################################
# IpodlasClientFactory is derived from ReconnectingClientFactory, which 
tries
# to reconnect if connection is lost
class IpodlasClientFactory(ReconnectingClientFactory):
    # creates protocol and receives events relating to connection state
    #
    def startedConnecting(self, connector):
        print 'Started to connect.'

    def buildProtocol(self, addr):
        print 'Connected.'
        print 'Resetting reconnection delay'
        self.resetDelay()
        # associated subsystem is the GUI
        return IpodlasClient()

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection.  Reason:', reason
        # tries to reconnect, if conn fails with exponentially delays
        ReconnectingClientFactory.clientConnectionLost(self, connector, 
reason)
    #
    # if connection could not be established
    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector,
                                                         reason)

###################################################################
if __name__ == "__main__":
    #
    if len(sys.argv) > 1:
        # set global subsystem
        assoSubsys = sys.argv[1]
        #print assoSubsys
    #
    from twisted.internet import reactor
    reactor.connectTCP("localhost",51423,IpodlasClientFactory())
    reactor.run()




invoked Process:
#! /usr/bin/python
# File:ipodlasProcess.py

"""
ipodlasProcess.py
usage: python ipodlasProcess.py
"""

from twisted.internet import protocol
from twisted.internet import reactor
from twisted.internet import utils #needed to query process termination 
status
import re
import os
import gc
# own classes

class IpodlasProcess(protocol.ProcessProtocol):
    def __init__(self):
        self.data = ""
        #
    #
    def connectionMade(self):
        print "IP connectionMade"
        self.transport.closeStdin()
    # data from standard output is receieve in outReceived.
    def outReceived(self, data):
        print "IP outReceived: " + self.data
        self.data = self.data + data
    #
    def errReceived(self, data):
        print "IP errReceived():" + data
    #
    def inConnectionLost(self):
        print "IP inConnectionLost! stdin is closed! (we probably did it)"
    #
    def outConnectionLost(self):
        print "IP outConnectionLost data: " + self.data
    #
    def errConnectionLost(self):
        print "IP errConnectionLost! stdin is closed! (we probably did it)"
    #
    def processEnded(self, status_object):
        self.processStatus = status_object.value.exitCode
        print "IP processEnded, status: " + 
str(status_object.value.exitCode) \
              + "\nquitting "
        # this is outcommented, since otherwise the reactor of 
ipodlasClient would
        # stopped, since this is the one which controls ipodlasProcess 
(the own in
        # the main fctn is only started, when invoked from cmd-line)
        # reactor.stop
        
    #
    def displayRaster(self,theRaster):
        #
        cmd = "d.rast"
        arg1 = theRaster
        arg2 = "bg=white"
        # processes are runned trough reactor using spawnProcess
        # invoke process cmd with the args arg1, arg2 and the parent process
        # environment env
        reactor.spawnProcess(self,cmd,[cmd,arg1,arg2],env=os.environ)
        #
        print "IP displayRaster"
###################################################################
if __name__ == "__main__":
    #
    ip = IpodlasProcess()
    ip.displayRaster("upperEngadine_raster")
    #
    reactor.run()





From snacktime at gmail.com  Wed Aug  3 01:45:07 2005
From: snacktime at gmail.com (snacktime)
Date: Tue, 2 Aug 2005 22:45:07 -0700
Subject: [Twisted-Python] Twisted api docs
Message-ID: <1f060c4c05080222453f3ba89f@mail.gmail.com>

I remember there being very complete api documentation for twisted
1.3, but I can't find anything similar on the website for twisted 2. 
Do they no longer exist or am I just blind?

Chris



From jon+twisted at indelible.org  Wed Aug  3 01:58:53 2005
From: jon+twisted at indelible.org (Jon Parise)
Date: Tue, 2 Aug 2005 22:58:53 -0700
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <1f060c4c05080222453f3ba89f@mail.gmail.com>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
Message-ID: <20050803055853.GB89481@indelible.org>

On Tue, Aug 02, 2005 at 10:45:07PM -0700, snacktime wrote:

> I remember there being very complete api documentation for twisted
> 1.3, but I can't find anything similar on the website for twisted 2. 
> Do they no longer exist or am I just blind?

I've been using these:

    http://twistedmatrix.com/documents/current/api/

-- 
Jon Parise (jon of indelible.org)  ::  "Scientia est Potentia"



From dguaraglia at gmx.de  Wed Aug  3 02:04:30 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Wed, 03 Aug 2005 03:04:30 -0300
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <1f060c4c05080222453f3ba89f@mail.gmail.com>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
Message-ID: <42F05E6E.3090205@gmx.de>

Hi Chris,

It's not very obvious but you can find the documentation here: 
http://twistedmatrix.com/documents/current/api/ and here: 
http://twistedmatrix.com/projects/core/documentation/ . First link is 
the API documentation (what I think you are looking for) and the second 
one is a link to the how-tos, etc.

Hope it helps you,

David


snacktime wrote:

>I remember there being very complete api documentation for twisted
>1.3, but I can't find anything similar on the website for twisted 2. 
>Do they no longer exist or am I just blind?
>
>Chris
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From snacktime at gmail.com  Wed Aug  3 02:39:27 2005
From: snacktime at gmail.com (snacktime)
Date: Tue, 2 Aug 2005 23:39:27 -0700
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <42F05E6E.3090205@gmx.de>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
	<42F05E6E.3090205@gmx.de>
Message-ID: <1f060c4c05080223396cb5801e@mail.gmail.com>

On 8/2/05, David Guaraglia <dguaraglia at gmx.de> wrote:
> Hi Chris,
> 
> It's not very obvious but you can find the documentation here:
> http://twistedmatrix.com/documents/current/api/ and here:
> http://twistedmatrix.com/projects/core/documentation/ . First link is
> the API documentation (what I think you are looking for) and the second
> one is a link to the how-tos, etc.
> 
> Hope it helps you,

Yep that's exactly what I was looking for, thanks!

Chris



From michele.petrazzo at unipex.it  Wed Aug  3 06:22:59 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 12:22:59 +0200
Subject: [Twisted-Python] Ftp client
Message-ID: <42F09B03.3040405@unipex.it>

I want to port my ftp client class from standard library (ftplib) to 
twisted ftpclient. I start to work with ftpclient example and with a 
"standard" ftp server, it work well, of course :), but I'm working on a 
not standard server (hylafax), that not accept the standard commands, so 
now with the standard library, every time that I want to communicate 
with it, I send its internal commands.

Is it possible to "translate" my very short and simple code to twisted 
ftpclint?

However, I have already tried to modify the simple generic client 
example "EchoClient", and it work until I make a "LIST status" request, 
that it would have to return a short string (100-150 characters),
because if I use passive mode (command 'PASV') I receive a 425 error, 
and if I don't use it, I don't receive anything (I wait...).

Can someone point me to the right direction ?

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 08:25:52 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Aug 2005 22:25:52 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F09B03.3040405@unipex.it>
References: <42F09B03.3040405@unipex.it>
Message-ID: <20050803122552.GB30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 12:22:59PM +0200, Michele Petrazzo wrote:
> I want to port my ftp client class from standard library (ftplib) to 
> twisted ftpclient. I start to work with ftpclient example and with a 
> "standard" ftp server, it work well, of course :), but I'm working on a 
> not standard server (hylafax), that not accept the standard commands, so 
> now with the standard library, every time that I want to communicate 
> with it, I send its internal commands.
> 
> Is it possible to "translate" my very short and simple code to twisted 
> ftpclint?

Probably.  If you need to send non-standard commands, you can do that with
ftpclient.queueStringCommand("BLAH blah blah").

> However, I have already tried to modify the simple generic client 
> example "EchoClient", and it work until I make a "LIST status" request, 
> that it would have to return a short string (100-150 characters),
> because if I use passive mode (command 'PASV') I receive a 425 error, 
> and if I don't use it, I don't receive anything (I wait...).
> 
> Can someone point me to the right direction ?

The right way is to re-use the existing FTPClient logic as much as possible,
rather than reimplementing it.

What specific problems are you having with twisted.protocols.ftp.FTPClient?

-Andrew.




From andrea at cpushare.com  Wed Aug  3 10:39:33 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 3 Aug 2005 16:39:33 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
Message-ID: <20050803143933.GQ7606@g5.random>

Hello,

a CPUShare user reported a failure in the process protocol processEneded
method.

The status parameter passed to the processEnded callback is like this:

	status.value.signal == 11
	status.value.status == 139

My server code was validating the sigsegv status returned by the client,
and it noticed it wasn't 11. But status.value.signal == 11.

See the debugging patch that produced the below output:

http://www.cpushare.com/hypermail/cpushare-discuss/05/08/0018.html

How can it be that the same status has .value.signal == 11 and
.value.status == 139 at the same time?

I suspect this is a twisted bug.

Thanks for any help!

----- Forwarded message from Andrea Arcangeli <andrea at cpushare.com> -----

Date: Wed, 3 Aug 2005 16:35:37 +0200
From: Andrea Arcangeli <andrea at cpushare.com>
To: cpushare-discuss at cpushare.com
Subject: Re: error after launching cpushare client

On Wed, Aug 03, 2005 at 03:26:39PM +0200, Lo?c Le Loarer wrote:
> Le Wednesday 03 August 2005 ? 13:09:35 +0200, Andrea Arcangeli a ?crit:
> > Hi,
> > 
> > On Mon, Aug 01, 2005 at 06:36:13PM +0200, lll+cpushare at m4x.org wrote:
> > > 2005/08/01 17:48 CEST [cpushare_protocol,client] 'sigsegv not killed with signal 11: status 139.'
> > 
> > This is weird, it looks like twisted reports status 139 and signal 11 at
> > the same time (while status should be 11 == signal), at first glance it
> > looks a twisted bug.
> > 
> > Can you please try to apply this patch and see what it prints? (this way
> > it will be printed on the client side, previously the number 139 is
> > generated by the server side)
> 
> Hi,
> 
> I have applyed your patch and here is the output :
> 2005/08/03 15:23 CEST [-] Log opened.
> 2005/08/03 15:23 CEST [-] twistd 2.0.1 (/usr/bin/python 2.4.1) starting up
> 2005/08/03 15:23 CEST [-] reactor class: twisted.internet.selectreactor.SelectReactor
> 2005/08/03 15:23 CEST [-] Loading cpushare.tap...
> 2005/08/03 15:23 CEST [-] Loaded.
> 2005/08/03 15:23 CEST [-] Starting factory <cpushare.proto.cpushare_factory instance at 0xb78251ac>
> 2005/08/03 15:23 CEST [-] Enabling Multithreading.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Starting seccomp task
> 2005/08/03 15:23 CEST [-] Seccomp task gracefully killed by seccomp.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Starting seccomp task
> 2005/08/03 15:23 CEST [-] Seccomp task gracefully killed by sigsegv, status 139.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] 'sigsegv not killed with signal 11: status 139.'
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Lost connection. Reason: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionLost: Connection to the other side was lost in a non-clean fashion: Connection lost.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] ]
> 2005/08/03 15:23 CEST [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0xb783114c> will retry in 2 seconds
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0xb78251ac>
> 2005/08/03 15:23 CEST [-] Main loop terminated.
> 2005/08/03 15:23 CEST [-] Server Shut Down.
> 
> The status is 139, does this help ?

Yes it helps since it verified that for some reason twisted reports an
exit status of 139, which collides with an exist status of 11. (it
wasn't a communication error between client and server)

I think it's a twisted bug and not a mistake from my part. I'll ask on
the twisted lists to be sure. What distro/twisted are you using?

In the meantime this will work around it so you can start earning
CPUCoins ;)

Index: cpushare/proto.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
retrieving revision 1.49
diff -u -p -r1.49 proto.py
--- cpushare/proto.py	6 Jul 2005 23:19:02 -0000	1.49
+++ cpushare/proto.py	3 Aug 2005 14:34:34 -0000
@@ -82,7 +82,7 @@ class state_machine(object):
 			self.protocol.sendString(PROTO_SECCOMP_SUCCESS)
 		def end_failure(failure):
 			end_common()
-			self.protocol.sendString(PROTO_SECCOMP_FAILURE + struct.pack('!i', failure.value.status))
+			self.protocol.sendString(PROTO_SECCOMP_FAILURE + struct.pack('!i', failure.value.signal))
 
 		def started(result):
 			self.protocol.sendString(PROTO_SECCOMP_RUN)

Thanks!

----- End forwarded message -----



From michele.petrazzo at unipex.it  Wed Aug  3 10:53:34 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 16:53:34 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803122552.GB30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
Message-ID: <42F0DA6E.8090804@unipex.it>

Andrew Bennetts wrote:

>>Is it possible to "translate" my very short and simple code to twisted 
>>ftpclint?
> 
> Probably.  If you need to send non-standard commands, you can do that with
> ftpclient.queueStringCommand("BLAH blah blah").
> 
> 

<-cut->

> 
> The right way is to re-use the existing FTPClient logic as much as possible,
> rather than reimplementing it.
> 
> What specific problems are you having with twisted.protocols.ftp.FTPClient?
> 

I change the ftpclient example with this code:

def run():
  # Create the client
  creator = ClientCreator(reactor, FTPClient, user, passwd, 0)
  creator.connectTCP('192.168.1.1', 4559).addCallback(connectionMade)
  reactor.run()

def connectionMade(ftpClient):
  # Get the current working directory
  ftpClient.pwd().addCallbacks(success, fail)


One problem is that if the user has no password, I receive an error [1] 
(if I try to connect with a simple ftp client, when I connect to the 
server, if it see that I have no password, it connect me without 
password request), however if the user _has_ password, the client 
connect correctly.

Second:
if the user _has_ password, so I can connect, I want to send "LIST 
status" command, if I use:

ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)

I receive [2], and if I use:

fileList = FTPFileListProtocol()
d = ftpClient.list(' status ', fileList)
d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))

I receive [3]



Returned data:

[1]
Failed.  Error was:
[Failure instance: Traceback (failure with no frames): 
twisted.protocols.ftp.ConnectionLost: ('FTP connection lost', 
<twisted.python.failure.Failure twisted.protocols.ftp.CommandFailed>)


[2]
Success!  Got response:
---
257 "/" is the current directory.
---

Failed.  Error was:
[Failure instance: Traceback (failure with no frames): 
twisted.protocols.ftp.CommandFailed: ['425 Cannot build data connection: 
Connection refused.']


[3]

Success!  Got response:
---
257 "/" is the current directory.
---
Failed.  Error was:
[Failure instance: Traceback (failure with no frames): <type 'tuple'>: 
(<twisted.python.failure.Failure <type 'tuple'>>, 0)
]


> -Andrew.
> 

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 11:21:48 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 01:21:48 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F0DA6E.8090804@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
Message-ID: <20050803152148.GD30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 04:53:34PM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
[...]
> >
> >What specific problems are you having with twisted.protocols.ftp.FTPClient?
> >
> 
> I change the ftpclient example with this code:
> 
> def run():
>  # Create the client
>  creator = ClientCreator(reactor, FTPClient, user, passwd, 0)
>  creator.connectTCP('192.168.1.1', 4559).addCallback(connectionMade)
>  reactor.run()
> 
> def connectionMade(ftpClient):
>  # Get the current working directory
>  ftpClient.pwd().addCallbacks(success, fail)
> 
> 
> One problem is that if the user has no password, I receive an error [1] 
> (if I try to connect with a simple ftp client, when I connect to the 
> server, if it see that I have no password, it connect me without 
> password request), however if the user _has_ password, the client 
> connect correctly.

Before connecting, can you add:

    FTPClient.debug = True

Then we can see a full transcript of what's going on.

> Second:
> if the user _has_ password, so I can connect, I want to send "LIST 
> status" command, if I use:
> 
> ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
> 
> I receive [2], and if I use:

Right.  LIST requires a data connection to be established, and directly
issuing a LIST without arranging for a PASV or PORT command and associated
connection will fail.

> fileList = FTPFileListProtocol()
> d = ftpClient.list(' status ', fileList)
> d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))
> 
> I receive [3]

Can you retry this with latest Twisted from SVN?  There's a bug in error
reporting and DeferredLists here that's been fixed in SVN that will make
this much clearer.

I don't understand why you're passing ' status ' instead of just 'status',
though.

-Andrew.




From michele.petrazzo at unipex.it  Wed Aug  3 13:23:56 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 19:23:56 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803152148.GD30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
Message-ID: <42F0FDAC.6060505@unipex.it>

Andrew Bennetts wrote:
>>One problem is that if the user has no password, I receive an error [1] 
>>(if I try to connect with a simple ftp client, when I connect to the 
>>server, if it see that I have no password, it connect me without 
>>password request), however if the user _has_ password, the client 
>>connect correctly.
> 
> 
> Before connecting, can you add:
> 
>     FTPClient.debug = True
> 
> Then we can see a full transcript of what's going on.
> 

I add that line, but I can't see any new line except that I already seen

> 
>>Second:
>>if the user _has_ password, so I can connect, I want to send "LIST 
>>status" command, if I use:
>>
>>ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
>>
>>I receive [2], and if I use:
> 
> 
> Right.  LIST requires a data connection to be established, and directly
> issuing a LIST without arranging for a PASV or PORT command and associated
> connection will fail.
> 

Ok, but what I do with to make it work?

> 
>>fileList = FTPFileListProtocol()
>>d = ftpClient.list(' status ', fileList)
>>d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))
>>
>>I receive [3]
> 
> 
> Can you retry this with latest Twisted from SVN?  There's a bug in error
> reporting and DeferredLists here that's been fixed in SVN that will make
> this much clearer.

Yes. Just update the my two (win and lin) machines.

[1]

> 
> I don't understand why you're passing ' status ' instead of just 'status',
> though.

But, I don't know :)

With this change " status " -> "status" now I don't receive any error!
But what I receive is an empty file list [2] (on all status and recvq 
sub-directory), both case if I change directory with the cwd command and 
call ftpClient.list(".") or, call it with "status/"-"recvq/".
But I know that into that sub-directory there are a lot of files...


[1]
The return are (on both OS):

[Failure instance: Traceback (failure with no frames): 
twisted.internet.defer.FirstError: 
FirstError(<twisted.python.failure.Failure 
twisted.internet.defer.FirstError>, 0)
]

[2]
Processed file listing:
Total: 0 files

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 14:42:58 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 04:42:58 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F0FDAC.6060505@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
	<42F0FDAC.6060505@unipex.it>
Message-ID: <20050803184258.GF30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 07:23:56PM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
> >>One problem is that if the user has no password, I receive an error [1] 
> >>(if I try to connect with a simple ftp client, when I connect to the 
> >>server, if it see that I have no password, it connect me without 
> >>password request), however if the user _has_ password, the client 
> >>connect correctly.
> >
> >
> >Before connecting, can you add:
> >
> >    FTPClient.debug = True
> >
> >Then we can see a full transcript of what's going on.
> >
> 
> I add that line, but I can't see any new line except that I already seen

Odd.  It should log everything.

> >>Second:
> >>if the user _has_ password, so I can connect, I want to send "LIST 
> >>status" command, if I use:
> >>
> >>ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
> >>
> >>I receive [2], and if I use:
> >
> >
> >Right.  LIST requires a data connection to be established, and directly
> >issuing a LIST without arranging for a PASV or PORT command and associated
> >connection will fail.
> >
> 
> Ok, but what I do with to make it work?

Use FTPClient.list ;)

Seriously, look at the implementation of FTPClient.list, it's very simple:

    def list(self, path, protocol):
        # ...docstring elided...
        if path is None:
            path = ''
        return self.receiveFromConnection(['LIST ' + self.escapePath(path)], protocol)

FTPClient.receiveFromConnection is a helper function that Does The Right
Thing depending on if self.passive is set or not.

[...]
> >
> >I don't understand why you're passing ' status ' instead of just 'status',
> >though.
> 
> But, I don't know :)
> 
> With this change " status " -> "status" now I don't receive any error!

Ok, I suspect what was happening was that the server was returning an error
like "' status ' does not exist".  The error reporting from FTPClient is
pretty messy, unfortunately.

> But what I receive is an empty file list [2] (on all status and recvq 
> sub-directory), both case if I change directory with the cwd command and 
> call ftpClient.list(".") or, call it with "status/"-"recvq/".
> But I know that into that sub-directory there are a lot of files...

Perhaps FTPFileListProtocol can't parse your file listing -- it tries to
parse stuff more-or-less like:

        -rw-r--r--   1 root     other        531 Jan 29 03:26 README

If you have another format, you'll need to write your own.  As a starting
point, you could try:

class LineRecorder(basic.LineReceiver):
    def connectionMade(self):
        self.lines = []
    def lineReceived(self,line):
        self.lines.append(line)

Alternatively, subclass FTPFileListProtocol and override the unknownLine
method.

> [1]
> The return are (on both OS):
> 
> [Failure instance: Traceback (failure with no frames): 
> twisted.internet.defer.FirstError: 
> FirstError(<twisted.python.failure.Failure 
> twisted.internet.defer.FirstError>, 0)
> ]

Sorry, I was too hasty here -- you also need to change your errback to print
failure.subFailure or perhaps failure.subFailure.subFailure rather than just
failure.  There are several layers of failure here (because of several
layers of DeferredLists), which makes it ugly.  FTPClient shouldn't be
exposing the implementation detail of DeferredLists like this, but at the
moment it does.

-Andrew.




From fritcher at corp.earthlink.net  Wed Aug  3 15:09:53 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Wed, 03 Aug 2005 15:09:53 -0400
Subject: [Twisted-Python] Manually adding a file descriptor to the reactor
Message-ID: <42F11681.8060507@corp.earthlink.net>

Hello,

I have a C library I've written an extension wrapper around that manages
 connections to an external server for me. When I create a connection
through this library, I get a file descriptor back that I need to
monitor for activity. I've been poking through the twisted code to see
how I can add these file descriptors to the reactor, but I'm just not
seeing how it can be done. My closest guess right now would be to wrap
my file descriptor in a FileDescriptor object, but I'm not seeing how to
add that to the reactor, or how to tell it what code to call when there
is activity on that descriptor. Can anyone give me some insight into
what I need to do, or point me at some documentation that would explain
what I need to do?

For system details, I'll be doing this with Python 2.3.5, Twisted 2.0.1,
on both Mac OS X Tiger, and Red Hat Linux.

Thanks.

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050803/4ce9db9e/attachment.pgp 

From tv at twistedmatrix.com  Wed Aug  3 15:16:55 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 03 Aug 2005 22:16:55 +0300
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <20050803143933.GQ7606@g5.random>
References: <20050803143933.GQ7606@g5.random>
Message-ID: <42F11827.8030006@twistedmatrix.com>

Andrea Arcangeli wrote:
> The status parameter passed to the processEnded callback is like this:
> 
> 	status.value.signal == 11
> 	status.value.status == 139
> 
> My server code was validating the sigsegv status returned by the client,
> and it noticed it wasn't 11. But status.value.signal == 11.
> 
> See the debugging patch that produced the below output:
> 
> http://www.cpushare.com/hypermail/cpushare-discuss/05/08/0018.html
> 
> How can it be that the same status has .value.signal == 11 and
> .value.status == 139 at the same time?
> 
> I suspect this is a twisted bug.

.status is the _raw_ status.

You probably mean .exitCode instead.

Actual .status values are unportable, thus transferring them raw over
the network is not a good idea.



From andrea at cpushare.com  Wed Aug  3 16:55:08 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 3 Aug 2005 22:55:08 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <42F11827.8030006@twistedmatrix.com>
References: <20050803143933.GQ7606@g5.random>
	<42F11827.8030006@twistedmatrix.com>
Message-ID: <20050803205508.GT7606@g5.random>

On Wed, Aug 03, 2005 at 10:16:55PM +0300, Tommi Virtanen wrote:
> .status is the _raw_ status.
>
> You probably mean .exitCode instead.

Ok but then do you have an idea where the 139 comes from? I'd like to
understand what's going on, to me that 139 number comes out of the blue.

> Actual .status values are unportable, thus transferring them raw over
> the network is not a good idea.

status should be the same that waitpid returns, from the docs:

"return a tuple containing its pid and exit status indication: a 16-bit
number, whose low byte is the signal number that killed the process, and
whose high byte is the exit status (if the signal number is zero); the
high bit of the low byte is set if a core file was produced.
Availability: Unix."

Now I will ask to use exitCode but still I'd like to understand how
status is connected with exitCode.

BTW, I was using exitCode already, but I thought it would be set only if
a signal wasn't delivered. Infact I wrote code like this:

		if status.value.exitCode or status.value.signal:
			if status.value.exitCode == 4:
				print 'Failure in setting the stack size to %d bytes.' % self.seccomp.stack
			if status.value.signal == signal.SIGKILL:
				print 'Seccomp task gracefully killed by seccomp.'
			elif status.value.signal == signal.SIGSEGV:
				print 'Seccomp task gracefully killed by sigsegv, status %r.' % status.value.status
			elif status.value.signal == signal.SIGQUIT:
				print 'Seccomp task killed by sigquit - should never happen.'
			self.d_end.errback(status)
		else:
			print 'Seccomp task completed successfully.'
			self.d_end.callback(None)

(and in the above code status.value.signal == signal.SIGSEGV but
status.value.status == 139 ;)



From tv at twistedmatrix.com  Thu Aug  4 01:47:39 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 04 Aug 2005 08:47:39 +0300
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <20050803205508.GT7606@g5.random>
References: <20050803143933.GQ7606@g5.random>	<42F11827.8030006@twistedmatrix.com>
	<20050803205508.GT7606@g5.random>
Message-ID: <42F1ABFB.1010904@twistedmatrix.com>

Andrea Arcangeli wrote:
> Ok but then do you have an idea where the 139 comes from? I'd like to
> understand what's going on, to me that 139 number comes out of the blue.

139 == 128 + 11.

One way to set up the numbering is that exit codes are 0..127, signals
etc. have hight bit set.

Naturally, all real access should go through the macros WIFEXITED etc,
but that's how the number ranges are classically set up.

>>Actual .status values are unportable, thus transferring them raw over
>>the network is not a good idea.
> 
> status should be the same that waitpid returns, from the docs:
> 
> "return a tuple containing its pid and exit status indication: a 16-bit
> number, whose low byte is the signal number that killed the process, and
> whose high byte is the exit status (if the signal number is zero); the
> high bit of the low byte is set if a core file was produced.
> Availability: Unix."

I think you are reading about os.wait and twisted is using
os.waitpid. Otherwise, the document is lying to you. The status _may_ be
laid out like that on _some_ platform, but unless python does some
readjustment, the only portable way to access it is WIFEXITED and
friends.

cat >crash.c <<EOF
int main(void) {
  /* comment out the next line if you want a normal exit */
  *(char*)0 = 42;
  return 34;
}
EOF
cat >run.py <<EOF
#!/usr/bin/python
import os

pid = os.fork()
if pid:
    # parent
    pid, status = os.waitpid(pid, 0)
    print pid, status
    if os.WIFEXITED(status):
        print 'exited', os.WEXITSTATUS(status)
    elif os.WIFSIGNALED(status):
        print 'signaled', os.WTERMSIG(status)
        print 'coredump', os.WCOREDUMP(status)
    elif os.WIFSTOPPED(status):
        print 'stopped', os.WSTOPSIG(status)
    elif os.WIFCONTINUED(status):
        print 'continued'
    else:
        print 'unknown'
else:
    # child
    os.execv('./a.out', ['a.out'])
    raise RuntimeError, "exec failed"
EOF
chmod a+x run.py
gcc -Wall crash.c
./run.py

> Now I will ask to use exitCode but still I'd like to understand how
> status is connected with exitCode.

exitCode and signal are decoded from status.

> BTW, I was using exitCode already, but I thought it would be set only if
> a signal wasn't delivered. Infact I wrote code like this:

Exactly. If a process exits due to a signal, there is no exit code in
the sense of calling _exit(2).



From andrea at cpushare.com  Thu Aug  4 03:14:28 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 4 Aug 2005 09:14:28 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <42F1ABFB.1010904@twistedmatrix.com>
References: <20050803143933.GQ7606@g5.random>
	<42F11827.8030006@twistedmatrix.com>
	<20050803205508.GT7606@g5.random>
	<42F1ABFB.1010904@twistedmatrix.com>
Message-ID: <20050804071428.GD15814@g5.random>

On Thu, Aug 04, 2005 at 08:47:39AM +0300, Tommi Virtanen wrote:
> Andrea Arcangeli wrote:
> > Ok but then do you have an idea where the 139 comes from? I'd like to
> > understand what's going on, to me that 139 number comes out of the blue.
> 
> 139 == 128 + 11.
> 
> One way to set up the numbering is that exit codes are 0..127, signals
> etc. have hight bit set.
> 
> Naturally, all real access should go through the macros WIFEXITED etc,
> but that's how the number ranges are classically set up.

Ah, I think I got why he gets 139, that's because the core dumping was
enabled.

> >>Actual .status values are unportable, thus transferring them raw over
> >>the network is not a good idea.
> > 
> > status should be the same that waitpid returns, from the docs:
> > 
> > "return a tuple containing its pid and exit status indication: a 16-bit
> > number, whose low byte is the signal number that killed the process, and
> > whose high byte is the exit status (if the signal number is zero); the
> > high bit of the low byte is set if a core file was produced.
> > Availability: Unix."
> 
> I think you are reading about os.wait and twisted is using
> os.waitpid. Otherwise, the document is lying to you. The status _may_ be

Yes, the status is the same in wait and waitpid, and it's the same as
well in C (I doubt that python does any mangling of the C value).

> laid out like that on _some_ platform, but unless python does some
> readjustment, the only portable way to access it is WIFEXITED and
> friends.

It's not like I've an huge portability, because seccomp currently
only available on linux, but I'll follow your suggestion and I'll try to
make it more portable.

> cat >crash.c <<EOF
> int main(void) {
>   /* comment out the next line if you want a normal exit */
>   *(char*)0 = 42;
>   return 34;
> }
> EOF
> cat >run.py <<EOF
> #!/usr/bin/python
> import os
> 
> pid = os.fork()
> if pid:
>     # parent
>     pid, status = os.waitpid(pid, 0)
>     print pid, status
>     if os.WIFEXITED(status):
>         print 'exited', os.WEXITSTATUS(status)
>     elif os.WIFSIGNALED(status):
>         print 'signaled', os.WTERMSIG(status)
>         print 'coredump', os.WCOREDUMP(status)
>     elif os.WIFSTOPPED(status):
>         print 'stopped', os.WSTOPSIG(status)
>     elif os.WIFCONTINUED(status):
>         print 'continued'
>     else:
>         print 'unknown'
> else:
>     # child
>     os.execv('./a.out', ['a.out'])
>     raise RuntimeError, "exec failed"
> EOF
> chmod a+x run.py
> gcc -Wall crash.c
> ./run.py

Ok thanks a lot for the example.

> Exactly. If a process exits due to a signal, there is no exit code in
> the sense of calling _exit(2).

Ok, same as with C.



From michele.petrazzo at unipex.it  Thu Aug  4 05:30:43 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 04 Aug 2005 11:30:43 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803184258.GF30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>	<20050803152148.GD30038@trogdor.home.puzzling.org>	<42F0FDAC.6060505@unipex.it>
	<20050803184258.GF30038@trogdor.home.puzzling.org>
Message-ID: <42F1E043.8040107@unipex.it>

Andrew Bennetts wrote:
>>> Before connecting, can you add:
>>> 
>>> FTPClient.debug = True
>>> 
>>> Then we can see a full transcript of what's going on.
>>> 
>> 
>> I add that line, but I can't see any new line except that I already
>> seen
> 
> 
> Odd.  It should log everything.

Strange. Do you want that I change something to understand the problem?
This happen also with the demo "ftpclient.py"!

>> Ok, but what I do with to make it work?
> 
> 
> Use FTPClient.list ;)

Obviously! :)

>> But what I receive is an empty file list

> Perhaps FTPFileListProtocol can't parse your file listing -- it tries
> to parse stuff more-or-less like:
> 
> -rw-r--r--   1 root     other        531 Jan 29 03:26 README
> 
> If you have another format, you'll need to write your own.  As a
> starting point, you could try:
> 
> class LineRecorder(basic.LineReceiver): def connectionMade(self): 
> self.lines = [] def lineReceived(self,line): self.lines.append(line)
> 
> Alternatively, subclass FTPFileListProtocol and override the
> unknownLine method.

With unknownLine overwritten I receive all the data correctly.

What the are more right way (the advice method) to proceed? Simple
override that method or create a new HylafaxFTPFileListProtocol ?

> 
> 
> Sorry, I was too hasty here -- you also need to change your errback
> to print failure.subFailure or perhaps failure.subFailure.subFailure
> rather than just failure.

After some code tries, I receive this response:
user login that has no password : [1]
user login with password, list of not exist directory: [2]

Like you can see, I must find the return errors inside the failure
instance at two differents point (I believe because, like you wrote,
there are several layers). You think that this "problem" will be fixed
in the future, for make the error more simple to understand?

I attach a diff file that solve my problem with the empty password and
the "PASS" command. For me it work well. I'll very happy if you include
my patch!

[1]
code:
def fail(error):
     print error.value[1]

[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.CommandFailed: ["500 'PASS ': Syntax error, 
expecting password."]
]


[1]
code:
def fail(error):
     print error.value[0].value.subFailure

test_new_hylaproto.py:49: DeprecationWarning: FirstError.__getitem__ is 
deprecated.  Use attributes instead.
[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.CommandFailed: ['550 pippo: No such file or 
directory.']


Thanks,
Michele
-------------- next part --------------
A non-text attachment was scrubbed...
Name: diff_ftp.diff
Type: text/x-patch
Size: 777 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050804/01f8d34b/attachment.bin 

From andrew-twisted at puzzling.org  Thu Aug  4 08:44:13 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 22:44:13 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F1E043.8040107@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
	<42F0FDAC.6060505@unipex.it>
	<20050803184258.GF30038@trogdor.home.puzzling.org>
	<42F1E043.8040107@unipex.it>
Message-ID: <20050804124413.GG30038@trogdor.home.puzzling.org>

On Thu, Aug 04, 2005 at 11:30:43AM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
> >>>Before connecting, can you add:
> >>>
> >>>FTPClient.debug = True
> >>>
> >>>Then we can see a full transcript of what's going on.
> >>>
> >>
> >>I add that line, but I can't see any new line except that I already
> >>seen
> >
> >
> >Odd.  It should log everything.
> 
> Strange. Do you want that I change something to understand the problem?
> This happen also with the demo "ftpclient.py"!

If you can figure out why, I'd be happy, but I don't have time to
investigate right now (I'm quite busy atm, which is why my replies are so
brief, sorry).

> >>But what I receive is an empty file list
> 
> >Perhaps FTPFileListProtocol can't parse your file listing -- it tries
> >to parse stuff more-or-less like:
> >
> >-rw-r--r--   1 root     other        531 Jan 29 03:26 README
> >
> >If you have another format, you'll need to write your own.  As a
> >starting point, you could try:
> >
> >class LineRecorder(basic.LineReceiver): def connectionMade(self): 
> >self.lines = [] def lineReceived(self,line): self.lines.append(line)
> >
> >Alternatively, subclass FTPFileListProtocol and override the
> >unknownLine method.
> 
> With unknownLine overwritten I receive all the data correctly.
> 
> What the are more right way (the advice method) to proceed? Simple
> override that method or create a new HylafaxFTPFileListProtocol ?

Create a new HylafaxFTPFileListProtocol would be simplest, I think.

> >Sorry, I was too hasty here -- you also need to change your errback
> >to print failure.subFailure or perhaps failure.subFailure.subFailure
> >rather than just failure.
> 
> After some code tries, I receive this response:
> user login that has no password : [1]

Ok, so your FTP server requires a password.

> user login with password, list of not exist directory: [2]

Great, thanks for that output.

> 
> Like you can see, I must find the return errors inside the failure
> instance at two differents point (I believe because, like you wrote,
> there are several layers). You think that this "problem" will be fixed
> in the future, for make the error more simple to understand?

Yes, it will, I'll file a bug on it so that I don't forget.  Thanks for
uncovering it!

> I attach a diff file that solve my problem with the empty password and
> the "PASS" command. For me it work well. I'll very happy if you include
> my patch!

Interesting.  Please file this at http://twistedmatrix.com/bugs, assign to
spiv.  Also, please use unified diffs ("diff -u") if you can.

I think perhaps passing password=None might be a better way than
sendPass=False, I'll think about it.

Thank you very much!

-Andrew.




From ajchos at wp.pl  Thu Aug  4 09:48:08 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 04 Aug 2005 15:48:08 +0200
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
Message-ID: <1123163288.2925.51.camel@localhost.localdomain>

I try to get from standard telnet server answer. I connect to this
server, and now dataReceived() should give me a full answer from server
like:
Ret Hat Linux relase: ... login:, but it does not.
I would like to know how to connect to this server and grab this data.
        
dataReceived gives me something like that:  #' 
(translation in telnet codes: IAC DO TERMINAL_TYPE IAC DO SPEED IAC DO
X_DISPALY_LOCATION IAC DO NEW_ENVI_OPTION ((hex)FF FD 18 FF FD 20 FF FD
23 FF FD 27)). What should I do with this. I try to transport a answers
for this questions. Maybe i got a mistake in code, somthing i do in
wrong way? Code I working on in attachment.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attach.py
Type: text/x-python
Size: 1724 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050804/a4316b79/attachment.py 

From tom at thebrownboys.net  Thu Aug  4 09:58:44 2005
From: tom at thebrownboys.net (Tom Brown)
Date: Thu, 04 Aug 2005 06:58:44 -0700
Subject: [Twisted-Python] Twisted and Qt
Message-ID: <200508040658.45284.tom@thebrownboys.net>

Hi,

I am trying to write yet another internet based chess game. I am writing 
the client gui using Qt. When reactor.run() is called in the client, 
there is communication with the server. However, the main window is 
never shown. A code snippet is given below. I followed the qtdemo.py 
example. What am I missing?

Thanks,
Tom

from qt import *
from twisted.internet.qtreactor import install
from twisted.internet import reactor, protocol
from mainwindowimpl import MainWindowImpl

...

def main(server, port):
  a = QApplication(argv)
  install(a)
  chessClientFactory = ChessClientFactory()
  w = MainWindowImpl()
  w.show()
  reactor.addSystemEventTrigger('after', 'shutdown', a.quit)
  a.connect(a, SIGNAL("lastWindowClosed()"), reactor.stop)
  reactor.connectTCP(server, port, chessClientFactory)
  reactor.run()



From glyph at divmod.com  Thu Aug  4 10:07:48 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 4 Aug 2005 10:07:48 -0400
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
In-Reply-To: <1123163288.2925.51.camel@localhost.localdomain>
Message-ID: <20050804140827.3914.1105346612.divmod.quotient.2273@ohm>



On Thu, 04 Aug 2005 15:48:08 +0200, Micha? Tyde <ajchos at wp.pl> wrote:
>I try to get from standard telnet server answer. I connect to this
>server, and now dataReceived() should give me a full answer from server
>like:
>Ret Hat Linux relase: ... login:, but it does not.
>I would like to know how to connect to this server and grab this data.

Read the Telnet RFC, and either implement the telnet protocol or use Twisted's telnet protocol and answer the various IAC requests, then save the non-protocol stuff in some buffer.  Twisted's API for this is twisted.protocols.telnet.Telnet.processChunk'.



From michele.petrazzo at unipex.it  Thu Aug  4 10:09:23 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 04 Aug 2005 16:09:23 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050804124413.GG30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>	<20050803152148.GD30038@trogdor.home.puzzling.org>	<42F0FDAC.6060505@unipex.it>	<20050803184258.GF30038@trogdor.home.puzzling.org>	<42F1E043.8040107@unipex.it>
	<20050804124413.GG30038@trogdor.home.puzzling.org>
Message-ID: <42F22193.5090702@unipex.it>

Andrew Bennetts wrote:
> On Thu, Aug 04, 2005 at 11:30:43AM +0200, Michele Petrazzo wrote:

>>Strange. Do you want that I change something to understand the problem?
>>This happen also with the demo "ftpclient.py"!
> 
> 
> If you can figure out why, I'd be happy, but I don't have time to
> investigate right now (I'm quite busy atm, which is why my replies are so
> brief, sorry).
> 

I'll try next week. Now I have to modify my code to make the 
HylafaxFTPFileListProtocol work! :)

>>What the are more right way (the advice method) to proceed? Simple
>>override that method or create a new HylafaxFTPFileListProtocol ?
> 
> 
> Create a new HylafaxFTPFileListProtocol would be simplest, I think.
> 

Ok, I'll try

> 
>>>Sorry, I was too hasty here -- you also need to change your errback
>>>to print failure.subFailure or perhaps failure.subFailure.subFailure
>>>rather than just failure.
>>
>>After some code tries, I receive this response:
>>user login that has no password : [1]
> 
> 
> Ok, so your FTP server requires a password.
> 

No, the server don't required a password, so if the ftp library send the 
"PASS" command, it "anger".

>>I attach a diff file that solve my problem with the empty password and
>>the "PASS" command. For me it work well. I'll very happy if you include
>>my patch!
> 
> 
> Interesting.  Please file this at http://twistedmatrix.com/bugs, assign to
> spiv.  Also, please use unified diffs ("diff -u") if you can.

Done, issue 1130

> 
> I think perhaps passing password=None might be a better way than
> sendPass=False, I'll think about it.
> 
> Thank you very much!
> 

Thank you to you for all the help.

> -Andrew.
> 

Michele



From exarkun at divmod.com  Thu Aug  4 10:12:57 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 4 Aug 2005 10:12:57 -0400
Subject: [Twisted-Python] Twisted and Qt
In-Reply-To: <200508040658.45284.tom@thebrownboys.net>
Message-ID: <20050804141257.3914.1419877436.divmod.quotient.2275@ohm>

On Thu, 04 Aug 2005 06:58:44 -0700, Tom Brown <tom at thebrownboys.net> wrote:
>Hi,
>
>I am trying to write yet another internet based chess game. I am writing
>the client gui using Qt. When reactor.run() is called in the client,
>there is communication with the server. However, the main window is
>never shown. A code snippet is given below. I followed the qtdemo.py
>example. What am I missing?
>
>Thanks,
>Tom
>
>from qt import *
>from twisted.internet.qtreactor import install

install()

>from twisted.internet import reactor, protocol
>from mainwindowimpl import MainWindowImpl
>
> [snip]

If you don't install the qt reactor, when you import twisted.internet.reactor, the default reactor will be used.

Jp



From exarkun at divmod.com  Thu Aug  4 10:34:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 4 Aug 2005 10:34:15 -0400
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
In-Reply-To: <20050804140827.3914.1105346612.divmod.quotient.2273@ohm>
Message-ID: <20050804143415.3914.135847435.divmod.quotient.2282@ohm>

On Thu, 4 Aug 2005 10:07:48 -0400, glyph at divmod.com wrote:
>
>
>On Thu, 04 Aug 2005 15:48:08 +0200, Micha? Tyde <ajchos at wp.pl> wrote:
>>I try to get from standard telnet server answer. I connect to this
>>server, and now dataReceived() should give me a full answer from server
>>like:
>>Ret Hat Linux relase: ... login:, but it does not.
>>I would like to know how to connect to this server and grab this data.
>
>Read the Telnet RFC, and either implement the telnet protocol or use 
>Twisted's telnet protocol and answer the various IAC requests, then save the 
>non-protocol stuff in some buffer.  Twisted's API for this is 
>twisted.protocols.telnet.Telnet.processChunk'.

And/Or use twisted.conch.telnet instead (which presents a completely different, but non-line-oriented API).

Jp



From ajchos at wp.pl  Fri Aug  5 07:30:06 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 05 Aug 2005 13:30:06 +0200
Subject: [Twisted-Python] How to get initialize values of function
Message-ID: <1123241406.2974.27.camel@localhost.localdomain>

I have code like that:

class class1:
	def funct1(self, some_args):
		if a==b:#(the condition doesn't matter)
			self.funct30("value")
			enother_val=funct30().__init__ #it doesn't work
			#i want to have in enother_value="value" - argument from function
funct30()
	def funct30(self, value):		
		# do something
		# i can't return here a value, because the program work inappropriate

Maybe this is a very simple solution, but i have got now any idea.
Thanks in advance for answers




From Stephan.Popp at iisb.fraunhofer.de  Fri Aug  5 07:50:17 2005
From: Stephan.Popp at iisb.fraunhofer.de (Stephan Popp)
Date: Fri, 5 Aug 2005 13:50:17 +0200
Subject: [Twisted-Python] How to get initialize values of function
In-Reply-To: <1123241406.2974.27.camel@localhost.localdomain>
References: <1123241406.2974.27.camel@localhost.localdomain>
Message-ID: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>

On Friday 05 August 2005 13:30, Micha? Tyde wrote:
> I have code like that:
>
> class class1:
> 	def funct1(self, some_args):
> 		if a==b:#(the condition doesn't matter)
> 			self.funct30("value")
			enother_val=self.value

> 	def funct30(self, value):
		self.value = value
> 		# do something
> 		# i can't return here a value, because the program work inappropriate
>
> Maybe this is a very simple solution, but i have got now any idea.
> Thanks in advance for answers
>
I don't know if I got right with what you mean, but I think you mean something 
like I added above. Or did you mean something completely different?




From antonykummel at yahoo.com  Tue Aug  9 09:08:53 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Tue, 9 Aug 2005 06:08:53 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
Message-ID: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>

Hi,

I felt a need for an interactive interpreter that
continued to be interactive when the reactor ran. Here
is my adaptation of the console class in codes.py.
Please comment.

Yours,

Antony Kummel


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistcon.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050809/ea0bb11f/attachment.txt 

From itamar at itamarst.org  Tue Aug  9 11:07:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Aug 2005 11:07:37 -0400
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>
References: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>
Message-ID: <1123600057.8679.33.camel@localhost.localdomain>

On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel wrote:

> I felt a need for an interactive interpreter that
> continued to be interactive when the reactor ran. Here
> is my adaptation of the console class in codes.py.
> Please comment.

twisted.manhole provides one, and there's probably some way to hook it
up to the console using twisted.internet.stdio.




From luca.gaballo at rd.francetelecom.com  Tue Aug  9 13:00:11 2005
From: luca.gaballo at rd.francetelecom.com (Gaballo Luca)
Date: Tue, 09 Aug 2005 19:00:11 +0200
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
Message-ID: <42F8E11B.9080507@rd.francetelecom.com>

hi,
i'm working with socket and i need to make two consecutive connection
binding the client on the same address. When i try to execute the code i
have an error like this:
     socket.error: (98, 'Address already in use')
even if i have correctly closed the socket !?!
I use a code like this:

v----------------------------------------------------------------------------------------------v
def main(self):
  self.connect(remoteAddress, localAddress)
  ...do something...
  self.closeSocket()
  self.connect(remoteAddress, localAddress)

  def connect(self, remoteAddress, localAddress):
    self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    self.s.bind(localAddress)
    self.s.connect(remoteAddress)
    self.connectionMade()

  def closeSocket(self):
    self.s.shutdown(2)
    self.s.close()
^----------------------------------------------------------------------------------------------^

I tried with the twisted api too doing something like:

v----------------------------------------------------------------------------------------------v
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30,
(localIp, localPort))
...
self.transport.loseConnection()
...
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30,
(localIp, localPort))
^----------------------------------------------------------------------------------------------^

but the result is the same.


Any suggestions?

thanks

Luca Gaballo







From luca.gaballo at rd.francetelecom.com  Tue Aug  9 12:44:59 2005
From: luca.gaballo at rd.francetelecom.com (Gaballo Luca)
Date: Tue, 09 Aug 2005 18:44:59 +0200
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
Message-ID: <42F8DD8B.1040209@rd.francetelecom.com>

hi,
i'm working with socket and i need to make two consecutive connection 
binding the client on the same address. When i try to execute the code i 
have an error like this:
     socket.error: (98, 'Address already in use')
even if i have correctly closed the socket !?!
I use a code like this:

v----------------------------------------------------------------------------------------------v
def main(self):
  self.connect(remoteAddress, localAddress)
  ...do something...
  self.closeSocket()
  self.connect(remoteAddress, localAddress)

  def connect(self, remoteAddress, localAddress):
    self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    self.s.bind(localAddress)
    self.s.connect(remoteAddress)
    self.connectionMade()

  def closeSocket(self):
    self.s.shutdown(2)
    self.s.close()
^----------------------------------------------------------------------------------------------^

I tried with the twisted api too doing something like:

v----------------------------------------------------------------------------------------------v
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30, 
(localIp, localPort))
...
self.transport.loseConnection()
...
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30, 
(localIp, localPort))
^----------------------------------------------------------------------------------------------^

but the result is the same.


Any suggestions?

thanks

Luca Gaballo

 
  



From bv at bnl.gov  Tue Aug  9 13:56:54 2005
From: bv at bnl.gov (Brett Viren)
Date: Tue, 09 Aug 2005 13:56:54 -0400
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <42F8E11B.9080507@rd.francetelecom.com> (Gaballo Luca's message
	of "Tue, 09 Aug 2005 19:00:11 +0200")
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
	<42F8E11B.9080507@rd.francetelecom.com>
Message-ID: <ir4oe87q9i1.fsf@minos.phy.bnl.gov>

Gaballo Luca <luca.gaballo at rd.francetelecom.com> writes:

>      socket.error: (98, 'Address already in use')

The pure Python TCPServer and UDPServer classes have a class variable
"allow_reuse_address".  Set to "True" will allow quick re-binding.  It
needs to be set before any server instances are created.  For example
I use this bit of code in some non-Twisted XML-RPC server code:

from SimpleXMLRPCServer import *
SimpleXMLRPCServer.allow_reuse_address = True


However, I don't know if your Twisted based server ultimately inherits
from one of these classes.

-Brett.



From foom at fuhm.net  Tue Aug  9 14:21:57 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 9 Aug 2005 14:21:57 -0400
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <42F8DD8B.1040209@rd.francetelecom.com>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
	<42F8DD8B.1040209@rd.francetelecom.com>
Message-ID: <8E60194A-EA07-45DA-94C8-8DAE6AF5CAC0@fuhm.net>


On Aug 9, 2005, at 12:44 PM, Gaballo Luca wrote:

> hi,
> i'm working with socket and i need to make two consecutive  
> connection binding the client on the same address. When i try to  
> execute the code i have an error like this:
>     socket.error: (98, 'Address already in use')
> even if i have correctly closed the socket !?!

The kernel prevents you from reusing a local port for a few seconds  
in order to properly implement some timeout in the TCP spec. You  
don't really want to bypass this. There is pretty much no reason to  
ever bind a client tcp socket to a specific port. So, your problem is  
solved simply by removing the 'bind' call. Or, if you do want to bind  
to a local IP addr, simply set the local port to 0 so the kernel will  
autoselect.

James



From jmbenski at micron.com  Tue Aug  9 18:34:17 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Tue, 9 Aug 2005 16:34:17 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72813@NTXBOIMBX15.micron.com>

I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.

 

I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.

 

If I run this program without the sleep everything works correctly.  If I add the sleeps before the write, the write never registers with the process.  It is almost as if the pipe never gets flushed with the transport write.  I've looked through the API and haven't seen a way to flush the pipes and I have tried using the sys.stdout.flush().

 

What am I doing wrong?  Is there an easier way to setup inter-process communication through Twisted?

 

Thanks,

 

Jon

 

 

from twisted.internet import reactor, protocol

import threading

from twisted.python import threadable

import os

import sys

import time

 

threadable.init( with_threads=1)

 

class procProtocol(protocol.ProcessProtocol):

    def __init__(self):

        pass

    def connectionMade(self):

        print "Connection Made\n"

 

    def outReceived(self, data):

        file = open("bob.txt","a")

        file.write("outReceived\n" + data)

        file.close()

          

class ReactorFacade:

 

            def __init__( self ):

                        self.reactorThread = threading.Thread(

                                    target=reactor.run,

                                    name="ReactorThread",

                                    kwargs={'installSignalHandlers':0},

                                    )

 

            def start(self):

                        # assume not yet started

                        print "Facade: starting..."

                        self.reactorThread.start()

                        print "Facade: started ok"

 

            def stop(self):

                        # assume already running

                        print "Facade: request stop"

                        reactor.callFromThread(reactor.stop)

                        print "Facade: request stopped ok"

                        self.reactorThread.join()

 

    executable = "foo"

    program = "MSsync"

    args = ["arg1","arg2", "path", str(os.getpid())]      

 

    #create the handler for the communication

    processProtocol = procProtocol()

    reactor.spawnProcess(processProtocol, executable, args,

                env=os.environ, path=args[2],

                uid=None, gid=None, usePTY=True)

 

    rf = ReactorFacade()

    rf.start()

    

    time.sleep(3)  #If I remove this sleep the following write will register with my process.

    processProtocol.transport.write( "some command \r\n" )

    time.sleep(3)

    processProtocol.transport.write( "some command \r\n" )

    rf.stop()

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050809/40717143/attachment.htm 

From exarkun at divmod.com  Wed Aug 10 01:58:57 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 10 Aug 2005 01:58:57 -0400
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <1123600057.8679.33.camel@localhost.localdomain>
Message-ID: <20050810055857.3914.1747834441.divmod.quotient.3942@ohm>

On Tue, 09 Aug 2005 11:07:37 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel wrote:
>
>> I felt a need for an interactive interpreter that
>> continued to be interactive when the reactor ran. Here
>> is my adaptation of the console class in codes.py.
>> Please comment.
>
>twisted.manhole provides one, and there's probably some way to hook it
>up to the console using twisted.internet.stdio.
>

Except it's twisted.conch.manhole.  twisted.conch.stdio demonstrates how one much hook it up to stdio.

Note in particular the absence of raw_input(), which will segfault as often as not, when invoked in a non-main thread.

Jp



From exarkun at divmod.com  Wed Aug 10 02:04:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 10 Aug 2005 02:04:14 -0400
Subject: [Twisted-Python] simple spawnProcess
In-Reply-To: <3E7F9D21F31D094DB7721553EA2CD1B5E72813@NTXBOIMBX15.micron.com>
Message-ID: <20050810060414.3914.1312757949.divmod.quotient.3944@ohm>

On Tue, 9 Aug 2005 16:34:17 -0600, jmbenski at micron.com wrote:
>I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.
>
>
>
>I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.
>

Why are you using threads at all?  Twisted's process support presents an asynchronous API, like most other things Twisted does.  You don't need threads here.  Their presence is what is breaking your program.  You cannot call reactor.run() from one thread and /any/ other Twisted API (unless explicitly marked as an exception) from a different thread.  In particular, reactor.spawnProcess() and transport.write() in the code you included are being called from the wrong thread.

Jp



From mwh at python.net  Wed Aug 10 08:24:28 2005
From: mwh at python.net (Michael Hudson)
Date: Wed, 10 Aug 2005 13:24:28 +0100
Subject: [Twisted-Python] Re: twisted-compliant interactive interpreter
References: <1123600057.8679.33.camel@localhost.localdomain>
	<20050810055857.3914.1747834441.divmod.quotient.3942@ohm>
Message-ID: <2mll3avv2b.fsf@starship.python.net>

Jp Calderone <exarkun at divmod.com> writes:

> Note in particular the absence of raw_input(), which will segfault
> as often as not, when invoked in a non-main thread.

I think this is fixed in Python CVS (and somewhat in 2.4.1)...

Cheers,
mwh

-- 
  We did requirements and task analysis, iterative design, and user
  testing. You'd almost think programming languages were an interface
  between people and computers.                    -- Steven Pemberton
          (one of the designers of Python's direct ancestor ABC)




From ajchos at wp.pl  Wed Aug 10 09:17:03 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Wed, 10 Aug 2005 15:17:03 +0200
Subject: [Twisted-Python] [Twisted - Python] Telnet client & keeping
	connection alive
Message-ID: <1123679823.4427.85.camel@localhost.localdomain>

First i want to thank all people that responsed for my ealier questions.
I have done a progress in my project.I am a green in Twisted/Python, and
network programming in general.
Now I got a working telnet client. I have got two kind of telnet
servers. First one (after succesfuly login) keeps connection even if I
don't send a command to him. Second one disconnect me every 30 sec., if
I don't send command to him. So I want to create a thread (after
connection to the server) that will send to him a "pwd" command. I want
this thread to run constantly and sending every 20 sec "pwd" command. Of
course in the meantime i want to get responses for my enother commands.
Is this the best idea? Where should I do this (in protocol or in
factory)? Maybe there is another solution.
Where can I find some tutorials with code examples about threads in
Python/Twisted? Please send me a link with working pattern of telnet
client in Twisted. I have look for this kind of code but i couldn't find
anything. I don't know if my code is good (he works, but sometimes I
dont know why). Maybe some suggestions.
Thank You in advance for answers.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: stara.py
Type: text/x-python
Size: 2971 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050810/a8734d50/attachment.py 

From itamar at itamarst.org  Wed Aug 10 10:43:13 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Aug 2005 10:43:13 -0400
Subject: [Twisted-Python] [Twisted - Python] Telnet client & keeping
	connection alive
In-Reply-To: <1123679823.4427.85.camel@localhost.localdomain>
References: <1123679823.4427.85.camel@localhost.localdomain>
Message-ID: <1123684993.8224.16.camel@localhost.localdomain>

On Wed, 2005-08-10 at 15:17 +0200, Micha? Tyde wrote:
> First i want to thank all people that responsed for my ealier questions.
> I have done a progress in my project.I am a green in Twisted/Python, and
> network programming in general.
> Now I got a working telnet client. I have got two kind of telnet
> servers. First one (after succesfuly login) keeps connection even if I
> don't send a command to him. Second one disconnect me every 30 sec., if
> I don't send command to him. So I want to create a thread (after
> connection to the server) that will send to him a "pwd" command.

You don't need a thread; twisted lets you schedule events. Look at
reactor.callLater and twisted.internet.task.LoopingCall:

http://twistedmatrix.com/projects/core/documentation/howto/time.html




From jmbenski at micron.com  Wed Aug 10 10:53:48 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Wed, 10 Aug 2005 08:53:48 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72817@NTXBOIMBX15.micron.com>

Ok, obviously I'm missing something in the API.  

When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

from twisted.internet import reactor
import os
import sys
import time

class procProtocol(protocol.ProcessProtocol):

    def __init__(self):
        pass

    def connectionMade(self):
        print "Connection Made\n"

    def outReceived(self, data):
        file = open("bob.txt","a")
        file.write("outReceived\n" + data)
        file.close()

    executable = "foo"
    program = "MSsync"
    args = ["arg1","arg2", "path", str(os.getpid())]      

    #create the handler for the communication
    processProtocol = procProtocol()
    reactor.spawnProcess(processProtocol, executable, args,
                env=os.environ, path=args[2],
                uid=None, gid=None, usePTY=True)

    #launch the reactor to grab events.
    reactor.run()    

    ### I will never get here ###

    ##At some unknown point in the future I might need to issue commands
    processProtocol.transport.write( "some command \r\n" )
    processProtocol.transport.write( "some command \r\n" )


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jp Calderone
Sent: Wednesday, August 10, 2005 12:04 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] simple spawnProcess

On Tue, 9 Aug 2005 16:34:17 -0600, jmbenski at micron.com wrote:
>I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.
>
>
>
>I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.
>

Why are you using threads at all?  Twisted's process support presents an asynchronous API, like most other things Twisted does.  You don't need threads here.  Their presence is what is breaking your program.  You cannot call reactor.run() from one thread and /any/ other Twisted API (unless explicitly marked as an exception) from a different thread.  In particular, reactor.spawnProcess() and transport.write() in the code you included are being called from the wrong thread.

Jp

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From david at ddahl.com  Wed Aug 10 11:02:29 2005
From: david at ddahl.com (David Dahl)
Date: Wed, 10 Aug 2005 10:02:29 -0500
Subject: [Twisted-Python] new to Twisted
In-Reply-To: <1123679823.4427.85.camel@localhost.localdomain>
References: <1123679823.4427.85.camel@localhost.localdomain>
Message-ID: <29D29156-A37E-4E19-92B0-87A21CF572A6@ddahl.com>

Hello:

I would like to implement a backup client in Python - possibly with  
Twisted Conch or similar tools. I would like the client to operate  
like rsync through ssh, and I am not sure how I should approach this  
functionality. Can I use the OS' rsync through Twisted's ssh client?  
Is there a python module that can be used through twisted's ssh  
client? Has anyone on this list worked on anything like this?

I saw this posted on a newsgroup:


 >  As for scp and rsync-ssh I don't know of
 >any out of the box solutions, however if you're good with Python you
 >may want to take a look at conch (a component of Twisted,
 >http://twistedmatrix.com/), which is a Python implementation of the  
SSH
 >protocol.  I've personally seen it used to implement restricted  
virtual
 >scp, but I don't think any such package has been released.  Twisted
 >does of course also have a FTP component that can be used more or less
 >out of the box.  I'm not really very familiar with the implementation
 >of rsync, but I can't imagine it would be too hard to implement  
either.
link: http://lists.nycbug.org/pipermail/talk/2004-June/001512.html

I am not sure how true this is after reading the twisted docs and  
examples.

I did some searching in the twisted archives, but not all of it...  
sorrry in advance if this topic has been hammered into the ground.


David




From lyndsey.franklin at pnl.gov  Wed Aug 10 11:25:50 2005
From: lyndsey.franklin at pnl.gov (Franklin, Lyndsey)
Date: Wed, 10 Aug 2005 08:25:50 -0700
Subject: [Twisted-Python] Twisted on QNX
Message-ID: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>

  I'm trying to get Twisted to work on a QNX computer (actually, I'm
after buildbot but I need Twisted first) but I'm having problems getting
it to run correctly.  The long and short is that for some reason,
threads and forks don't like each other much on QNX.  I've been taking
stabs at the code for Twisted but I'm not making much progress on my own
yet.  Is there some way to get rid of the forking in Twisted? (For those
who have played with buildbot, the problems crop up when I try to
checkout source code, it complains about the os.fork() not being
implemented).
 
Thanks in advance,
Lyndsey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050810/e7ad7824/attachment.htm 

From itamar at itamarst.org  Wed Aug 10 11:59:29 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Aug 2005 11:59:29 -0400
Subject: [Twisted-Python] Twisted on QNX
In-Reply-To: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>
References: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>
Message-ID: <1123689569.8224.26.camel@localhost.localdomain>

On Wed, 2005-08-10 at 08:25 -0700, Franklin, Lyndsey wrote:
>   I'm trying to get Twisted to work on a QNX computer (actually, I'm
> after buildbot but I need Twisted first) but I'm having problems
> getting it to run correctly.  The long and short is that for some
> reason, threads and forks don't like each other much on QNX.  I've
> been taking stabs at the code for Twisted but I'm not making much
> progress on my own yet.  Is there some way to get rid of the forking
> in Twisted? (For those who have played with buildbot, the problems
> crop up when I try to checkout source code, it complains about the
> os.fork() not being implemented).

fork() is how you run a subprocess in Unix, and Buildbot needs to do
that in order to run the program that checks out the sourcecode. If QNX
has a different API for running subprograms, and that API is wrapped in
Python, you could use that instead, though you may need to patch
Buildbot to support that method, or better yet provide a patch for
Twisted to implement reactor.spawnProcess for QNX.




From antonykummel at yahoo.com  Wed Aug 10 13:32:24 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Wed, 10 Aug 2005 10:32:24 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050810055857.3914.1747834441.divmod.quotient.3942@ohm>
Message-ID: <20050810173224.31760.qmail@web33909.mail.mud.yahoo.com>

Using twisted.manhole sounds like a good idea, but
twisted.internet.stdio doesn't support Windows, which
I am using. My version with deferToThread(raw_input)
works fine in windows. Could it be that there are no
problems doing it under windows?

Anyway, to be compatible I tried a variety of methods
to implement twisted.internet.stdio for windows
(attached is a msvcrt version which is probably
worthless). I wonder, if raw_inputting in a non-main
thread works for windows, if it can be used to do the
windows version of twisted.internet.stdio.

If it works, how difficult would it be to make a
worthwhile manhole client for windows?

Thanks,

Antony Kummel

--- Jp Calderone <exarkun at divmod.com> wrote:

> On Tue, 09 Aug 2005 11:07:37 -0400, Itamar
> Shtull-Trauring <itamar at itamarst.org> wrote:
> >On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel
> wrote:
> >
> >> I felt a need for an interactive interpreter that
> >> continued to be interactive when the reactor ran.
> Here
> >> is my adaptation of the console class in
> codes.py.
> >> Please comment.
> >
> >twisted.manhole provides one, and there's probably
> some way to hook it
> >up to the console using twisted.internet.stdio.
> >
> 
> Except it's twisted.conch.manhole. 
> twisted.conch.stdio demonstrates how one much hook
> it up to stdio.
> 
> Note in particular the absence of raw_input(), which
> will segfault as often as not, when invoked in a
> non-main thread.
> 
> Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: winstdio.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050810/a82865ef/attachment.txt 

From glyph at divmod.com  Wed Aug 10 16:37:42 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 10 Aug 2005 16:37:42 -0400
Subject: [Twisted-Python] simple spawnProcess
In-Reply-To: <3E7F9D21F31D094DB7721553EA2CD1B5E72817@NTXBOIMBX15.micron.com>
Message-ID: <20050810203742.3914.1300900061.divmod.quotient.4136@ohm>



On Wed, 10 Aug 2005 08:53:48 -0600, jmbenski at micron.com wrote:
>Ok, obviously I'm missing something in the API.
>
>When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

That is rather the point.  Using threads to "get around this" will break Twisted.  Threads are not supported for most APIs, and as JP said, they are what is breaking your program.

>    ##At some unknown point in the future I might need to issue commands

You are correct that your program will never get there.  Code after run() is not a place that your program should really ever *expect* to get.

If you need to run some code 'in the future', see reactor.callLater.  In general though, you will have to issue commands to your spawned process in response to some event.  Was it a button click?  Use Twisted's integration with a toolkit (such as GTK or Qt).  Was it a network request?  Set up a ProtocolFactory with a reference to your spawned process, or set up one that spawns processes itself when network connections are made.

There are lots of events which can potentially hpppen while the main loop is running.  Think of your program as a series of responses to those things, and the bit before reactor.run() as simply the set-up to make sure appropriate events get caught (your initial callLater to set up a timed loop, or a listenTCP to connect your program to the network) rather than as the program in its entirety.



From glyph at divmod.com  Wed Aug 10 16:49:04 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 10 Aug 2005 16:49:04 -0400
Subject: [Twisted-Python] Twisted on QNX
In-Reply-To: <1123689569.8224.26.camel@localhost.localdomain>
Message-ID: <20050810204904.3914.462677039.divmod.quotient.4143@ohm>



On Wed, 10 Aug 2005 11:59:29 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

>fork() is how you run a subprocess in Unix, and Buildbot needs to do
>that in order to run the program that checks out the sourcecode. If QNX
>has a different API for running subprograms, and that API is wrapped in
>Python, you could use that instead, though you may need to patch
>Buildbot to support that method, or better yet provide a patch for
>Twisted to implement reactor.spawnProcess for QNX.

or possibly get a site-license for all the Twisted developers to run QNX neutrino development environments.  Just a thought ;-)




From jmbenski at micron.com  Wed Aug 10 18:36:32 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Wed, 10 Aug 2005 16:36:32 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72821@NTXBOIMBX15.micron.com>

Ok, thanks.  I got it working.  I was just thinking of it in reverse.  All the google hits I came up with had someone talking about running the Qt and Twisted threads separately.  Apparently that is a good way to run in circles for awhile.

Thanks for the help.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
Sent: Wednesday, August 10, 2005 2:38 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] simple spawnProcess



On Wed, 10 Aug 2005 08:53:48 -0600, jmbenski at micron.com wrote:
>Ok, obviously I'm missing something in the API.
>
>When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

That is rather the point.  Using threads to "get around this" will break Twisted.  Threads are not supported for most APIs, and as JP said, they are what is breaking your program.

>    ##At some unknown point in the future I might need to issue commands

You are correct that your program will never get there.  Code after run() is not a place that your program should really ever *expect* to get.

If you need to run some code 'in the future', see reactor.callLater.  In general though, you will have to issue commands to your spawned process in response to some event.  Was it a button click?  Use Twisted's integration with a toolkit (such as GTK or Qt).  Was it a network request?  Set up a ProtocolFactory with a reference to your spawned process, or set up one that spawns processes itself when network connections are made.

There are lots of events which can potentially hpppen while the main loop is running.  Think of your program as a series of responses to those things, and the bit before reactor.run() as simply the set-up to make sure appropriate events get caught (your initial callLater to set up a timed loop, or a listenTCP to connect your program to the network) rather than as the program in its entirety.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From ajchos at wp.pl  Thu Aug 11 05:01:13 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 11:01:13 +0200
Subject: [Twisted-Python] What is wrong with this instance?
Message-ID: <1123750874.2846.8.camel@localhost.localdomain>

As a topic. I got the code:
^^^
form twisted.protocols.telnet import Telnet

def keep():
	telnet=Telnet()
	print type(telnet)
	print getattr(telnet,'write')#all OK until here
	telnet.write("msg")
	print "msg"
keep()
^^^
and I got

TypeError: unbound method write() must be called with Telnet instance as
first argument (got str instance instead)

I really don't understand where is the mistake.




From andrew-twisted at puzzling.org  Thu Aug 11 05:33:01 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 11 Aug 2005 19:33:01 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123750874.2846.8.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
Message-ID: <20050811093301.GU11932@trogdor.home.puzzling.org>

On Thu, Aug 11, 2005 at 11:01:13AM +0200, Micha? Tyde wrote:
> As a topic. I got the code:
> ^^^
> form twisted.protocols.telnet import Telnet
> 
> def keep():
> 	telnet=Telnet()
> 	print type(telnet)
> 	print getattr(telnet,'write')#all OK until here
> 	telnet.write("msg")
> 	print "msg"
> keep()
> ^^^

No, you don't have that code.  Your code has a syntax error in the first
line.  Also:

> and I got
> 
> TypeError: unbound method write() must be called with Telnet instance as
> first argument (got str instance instead)

That's not the error I get with your code, and that's not the error I get
with your code after correcting the obvious typo in the first line.

> I really don't understand where is the mistake.

Neither do I.  I could guess, but I'd have no idea if I was right or not,
because I've no idea what your problem actually is.

Give us the exact code that reproduces your problem, so that we know what's
going on, and then we'll be able to help you.

-Andrew.




From ajchos at wp.pl  Thu Aug 11 06:26:30 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 12:26:30 +0200
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123750874.2846.8.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
Message-ID: <1123755990.2846.22.camel@localhost.localdomain>

Sorry I dont want to send too large posts, so I shorten the problem. I
am writing a telnet client, and I got a little problem with keeping
connection alive (thread: [Twisted - Python] Telnet client & keeping
connection alive). I use a reactor.callLater() loop, and i can't exectue
a method i have written in Protocol class. I try to execute this method
in the end of code before reactor.run(). 

Code below:
#---------------------#
#Client Side Protocol #
#---------------------#
from twisted.protocols.telnet import Telnet
from twisted.internet.protocol import Protocol
from twisted.internet.protocol import ClientFactory
from twisted.internet import reactor, task, defer, threads
import telnetlib as tln
from twisted.python import threadable
threadable.init()
import logging, thread
delimiters = ['\r\n', '\r\x00']

class TelnetProtocol(Telnet):
#	log = logging.getLogger("telnet.protocol.")
	buffer = ''
	global ciag
	licznik = 0

	def makeConnection(self, transport):
		print "Making a connection"
		Telnet.makeConnection(self, transport)
		
	def connectionMade(self):
		print "Connection made"
#		self.log.info("telnet_protocol connected")
		Telnet.connectionMade(self)
		
	def connectionLost(self, reason):
#		self.log.debug("Connection lost: %s", reason)
		print "connection lost, %s" % reason
		Telnet.connectionLost(self, reason)

	def dataReceived(self, data):
		print "Data recived"
		ciag=""
		self.buffer+=data
		f=open("new.txt","a+")
		print self.buffer
		f.write(self.buffer)
		odp = self.responseFunct(data)
		self.write(odp)
		if self.buffer == '':
			print "nic nie ma"
			self.transport.loseConnection()
		if ("login:" in  data) and ("Last login:" not in data):
			print "wchodze 4"
			# here i take a username from USE CASE
			self.telnet_User()
			print "wychodze 4"
		if "Password:" in  data:
			print "wchodze 5"
			# here i take a password from USE CASE
			self.telnet_Password()
			print "wychodze 5"
		try:
			print "try 1"
			if "[mkl at julia mkl]$" in data:
				self.telnet_Check_OK(data)
				print "try 2"
			else:
				print "else 1"
				self.telnet_Check_DENY() 
				print "else 2"
				pass
		except:
			pass
	
	def responseFunct(self, buffer):
		response = ""
		print "funkcja in"
		f = open("dlugosc.txt","a+")
		length = len(buffer)# buffer - string
		response_buffer=""
		for i in range(length/3):
			# every seqence I should RESponse, should begin from IAC - \xff (255)
			# i dont get a terminal type
			sequence=buffer[0+(i*3):3+(i*3)]
			f.write("seq:"+sequence)
			if sequence.count(tln.IAC):
				f.write("<-: YES\n")
				if sequence.count(tln.DO) and sequence.count(tln.SNDLOC):
					response = tln.IAC + tln.DO + tln.SNDLOC
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.BINARY):
					response = tln.IAC + tln.WILL + tln.BINARY
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.ECHO):
					response = tln.IAC + tln.WILL + tln.ECHO
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.SGA):
					response = tln.IAC + tln.WILL + tln.SGA
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.BINARY):
					response = tln.IAC + tln.DO + tln.BINARY
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.ECHO):
					response = tln.IAC + tln.DO + tln.ECHO
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.SGA):
					response = tln.IAC + tln.DO + tln.SGA
					f.write("RES:"+str(response)+"\n")
				elif tln.DO in sequence or tln.DONT in sequence:
					response = tln.IAC + tln.WONT + sequence[2]
					f.write("RES:"+str(response)+"\n")
				elif tln.WILL in sequence or tln.WONT in sequence:
					response = tln.IAC + tln.DONT + sequence[2]
					f.write("RES:"+str(response)+"\n")
			else:
				f.write("\n")
			response_buffer +=response
		print "funkcja out"
		return response_buffer

	def telnet_User(self, user="mkl"):
		print "user1"
		self.transport.write(user+"\n\r")
		print "user2"
		
	def telnet_Password(self, paswd="Kznjsnm"):
		print "pass1"
		self.transport.write(paswd+"\n\r")
		print "pass2"
	
	def loggedIn(self):
		# i know that user succesfuly login
		f=open("zewn.txt","w")
		f.write("logged In")
		print "logged In"
			
	def telnet_Check_OK(self, data):
		if "[mkl at julia mkl]$" in data:
			print "wchodze spr log"
			f=open("new.txt","a+")
			f.write("udalo sie zalogowac")
			print "wychodze spr log"
		pass
#			self.loggedIn(tf=False)


	def telnet_Check_DENY(self):
		print "zly user we"
		f=open("new.txt","a+")
		f.write("zly user - nie udalo sie zalogowac")
		print "zly user wy"	
		self.tansport.loseConnection()
		reactor.stop()
	
	def telnet_KeepAlive(self):
		print "KA 1"
		self.write("pwd\n\r")
		print "KA 2"
	
	def telnet_Command(self, command="pwd"):
		print "comm1"
		print command
		self.write(command+"\r\n")
		f.write(command)
		print "comm2"
	
#-------------------------#
# Client Side Factories 2 #
#-------------------------#

class MyFactory(ClientFactory):
	protocol = TelnetProtocol

	def startedConnecting(self, connector):
		#self.makeConnection()
		#connector.connect()
		pass # we could connector.stopConnecting()
	
	def clientConnectionLost(self, connector, reason):
		print "Connection lost reconecting %s" % reason
		reactor.stop()
#		connector.connect() # reconnect
	
	def clientConnectionFailed(self, connector, reason):
		print "connection failed %s" % reason
		reactor.stop()
	
#-------------------------------------#
# Connection API					  #
#-------------------------------------#
if __name__=="__main__":
	def command(commd):
#		tel=TelnetProtocol()
		print "command"
		print commd
		
	def telnet_KeepAlive():
		print "keeping alive 1"
		tel=TelnetProtocol()
		print type(tel)
		print hasattr(tel,'telnet_KeepAlive')
		c=tel.telnet_KeepAlive
		print c
		#c()#doesn't execute
		print "keeping alive 2"	
	
	HOST='127.0.0.1'
	port=23
	l = task.LoopingCall(telnet_KeepAlive)
	l.start(5.0)
#	reactor.callLater(5,command(commd="ls"))
	reactor.connectTCP(HOST, port, MyFactory())
	reactor.run()






From mary-twisted at puzzling.org  Thu Aug 11 06:39:53 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 11 Aug 2005 20:39:53 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123755990.2846.22.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
	<1123755990.2846.22.camel@localhost.localdomain>
Message-ID: <20050811103953.GA8485@sourdust.home.puzzling.org>

On Thu, Aug 11, 2005, Micha? Tyde wrote:
> Sorry I dont want to send too large posts, so I shorten the problem.

This is the right thing to do. But it's not all that you need to do,
unfortunately.

Your shorter problem did not have the error you claimed it had: in fact,
it did not run at all. It is very hard to guess what it is you want when
you give a piece of code that doesn't even give the error you are
complaining about. You need to provide:

 1. a short example of a piece of code that doesn't do what you want
 2. a description of what it actually does, ie what the error is
 3. a description of what it is you want it to do when it is fixed

You gave us 1 and 2, but the problem was that the code didn't actually
even do what you said it did at 2. That makes it even harder to guess
what it is that you want to happen at 3.

-Mary



From andrew-twisted at puzzling.org  Thu Aug 11 06:44:43 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 11 Aug 2005 20:44:43 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123755990.2846.22.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
	<1123755990.2846.22.camel@localhost.localdomain>
Message-ID: <20050811104443.GV11932@trogdor.home.puzzling.org>

On Thu, Aug 11, 2005 at 12:26:30PM +0200, Micha? Tyde wrote:
> Sorry I dont want to send too large posts, so I shorten the problem. I
> am writing a telnet client, and I got a little problem with keeping
> connection alive (thread: [Twisted - Python] Telnet client & keeping
> connection alive). I use a reactor.callLater() loop, and i can't exectue
> a method i have written in Protocol class. I try to execute this method
> in the end of code before reactor.run(). 

Sorry, I'm not sure exactly what the problem you're having is.

Shortening the problem is great, but it needs to be something that I can run
and see the exact same error you are seeing, rather than SyntaxErrors or
completely different errors.

With this longer example I'm not sure what part of it is not behaving as you
expect.  Taking a guess and uncommenting this line:

> 		#c()#doesn't execute

Gives me this error when I run your code:

Traceback (most recent call last):
  File "/tmp/blah.py", line 201, in ?
    telnet_KeepAlive()
  File "/tmp/blah.py", line 198, in telnet_KeepAlive
    c()#doesn't execute
  File "/tmp/blah.py", line 151, in telnet_KeepAlive
    self.write("pwd\n\r")
  File "/usr/lib/python2.4/site-packages/twisted/protocols/telnet.py", line 181, in write
    self.transport.write(data)
AttributeError: 'NoneType' object has no attribute 'write'

Is this what you're referring to?

I feel like I'm trying to read minds here, and I'm not very good at that :)

-Andrew.




From lycka at carmensystems.com  Thu Aug 11 07:24:08 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 11 Aug 2005 13:24:08 +0200
Subject: [Twisted-Python] Unix platforms?
Message-ID: <42FB3558.4020306@carmensystems.com>

Are people using Twisted on HP-UX, AIX or Solaris? (I saw that Marcus 
Kimpenhaus
asked about HP-UX and AIX two years ago, and I read Moshe's reply, but 
maybe
someone tried since then? Since I can't connect to tmrc now, I haven't 
even tried to
build it yet...but even if I could, it would be nice to know if someone 
was using it
for real...)



From lycka at carmensystems.com  Thu Aug 11 07:24:47 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 11 Aug 2005 13:24:47 +0200
Subject: [Twisted-Python] Getting twisted tar balls?
Message-ID: <42FB357F.60006@carmensystems.com>

It seems tmrc.mit.edu is down. (Or is that just some kind of DNS
problem in my end?)  Is there any other place I can download
TwistedSumo-2005-05-25.tar.bz2 or something equivalent from?

Due to firewalls and stuff, I have problems using svn at work...




From ajchos at wp.pl  Thu Aug 11 09:50:39 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 15:50:39 +0200
Subject: [Twisted-Python] What is wrong with this instance?
Message-ID: <1123768239.4673.29.camel@localhost.localdomain>

First I wanted to say is that i attached a file with _working_ code.
Please try to change a user nad password in telnet_User, and
telnet_Password.
> With this longer example I'm not sure what part of it is not behaving
> as you expect.
Please read the thread: [Twisted - Python] Telnet client & keeping
connection alive. I want to send to connected telnet server a "pwd"
command every 20 sec. Here I got less (5 sec.) to wait for effects ->
see task.LoopingCall(telnet_KeepAlive2). In function telnet_KeepAlive2 I
try to execute function from TelnetProtocol class (function
telnet_KeepAlive). It doesn't execute, and becouse of that is after #
sign. 

With this line commented program works just fine (executes every 5 sec.
a telnet_KeepAlive2() ),but it does nothing important. Run this program
with this line commented, You should see that he prints (after
connection):
keeping alive 1
keeping alive 2
keeping alive 1
keeping alive 2
...
but I must to execute telnet_KeepAlive() method (from TelnetProtocol,
_and this is the problem_). This method should send by self.write("pwd\n
\r") command to telnet server. Sorry if I repeat myself, but I try to
explain the problem the best way I could. If I uncoment line in
telnet_KeepAlive2 (line: tel.telnet_KeepAlive()),my telnet client
connect to server and now do nothing (doesn't get into telnet_KeepAlive2
loop).
> I feel like I'm trying to read minds here, and I'm not very good at
> that :)
Me neither :).

I know that my problem has something common with instance of class
TelnetProtocol. How to could I pass on a TelnetProtocol method or
instance to interior of telnet_KeepAlive function? Or maybe there is
another solution.
Thank You in advance for answers.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: stara.py
Type: text/x-python
Size: 5407 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050811/69dfa38e/attachment.py 

From itamar at itamarst.org  Thu Aug 11 11:01:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Aug 2005 11:01:30 -0400
Subject: [Twisted-Python] Twisted download site (TMRC) is down temporarily
In-Reply-To: <42FB357F.60006@carmensystems.com>
References: <42FB357F.60006@carmensystems.com>
Message-ID: <1123772491.8198.23.camel@localhost.localdomain>

NStar, the local power company, screwed something up or something and
the building it's in isn't getting power.

Meanwhile you can download twisted from
http://twistedmatrix.com/downloads/ - for example, Twisted 2.0 and the
sumo tarballs are at http://twistedmatrix.com/downloads/Twisted/2.0/




From leszczynscy at yahoo.com  Thu Aug 11 13:16:14 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 10:16:14 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the protocol.Protocol
Message-ID: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>

In the protocol derived class and dataReceived
function, I need to send response with given delay
using self.transport.write(str(msg)).

I guess I would use "maybeDeferred" class to do that.
How to pass the delay value.

Please advice,

A.



From ww at groovy.net  Thu Aug 11 13:23:14 2005
From: ww at groovy.net (William Waites)
Date: Thu, 11 Aug 2005 13:23:14 -0400
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
References: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
Message-ID: <20050811172314.GC19620@groovy.net>

On Thu, Aug 11, 2005 at 10:16:14AM -0700, Andrzej Leszczynski wrote:
> In the protocol derived class and dataReceived
> function, I need to send response with given delay
> using self.transport.write(str(msg)).

how about reactor.callLater(delay, self.transport.write, str(msg))?

-w



From bob at redivi.com  Thu Aug 11 13:32:50 2005
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 11 Aug 2005 07:32:50 -1000
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
References: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
Message-ID: <3A75FC75-8531-4CC0-8397-528EE0C95318@redivi.com>


On Aug 11, 2005, at 7:16 AM, Andrzej Leszczynski wrote:

> In the protocol derived class and dataReceived
> function, I need to send response with given delay
> using self.transport.write(str(msg)).
>
> I guess I would use "maybeDeferred" class to do that.
> How to pass the delay value.

No, you'd use callLater(delay, self.transport.write, str(msg))

-bob




From leszczynscy at yahoo.com  Thu Aug 11 13:36:35 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 10:36:35 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811172314.GC19620@groovy.net>
Message-ID: <20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>

--- William Waites <ww at groovy.net> wrote:
> On Thu, Aug 11, 2005 at 10:16:14AM -0700, Andrzej
> Leszczynski wrote:
> > In the protocol derived class and dataReceived
> > function, I need to send response with given delay
> > using self.transport.write(str(msg)).
> 
> how about reactor.callLater(delay,
> self.transport.write, str(msg))?

Will try that but this assumes that you know msg at
point of handling the dataReceived. The hidden part of
my question is that I would like to deffer/delay
processing the dataReceived in general becasue of a
few design reasons. This is why I asked about that
Deffered. 

I learn Twisted, so sorry for simple question. Want to
have most Pythonic/Twisthonic solution.

Thx,
A.







From ww at groovy.net  Thu Aug 11 13:44:18 2005
From: ww at groovy.net (William Waites)
Date: Thu, 11 Aug 2005 13:44:18 -0400
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>
References: <20050811172314.GC19620@groovy.net>
	<20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>
Message-ID: <20050811174418.GD19620@groovy.net>

On Thu, Aug 11, 2005 at 10:36:35AM -0700, Andrzej Leszczynski wrote:
> 
> Will try that but this assumes that you know msg at
> point of handling the dataReceived. The hidden part of
> my question is that I would like to deffer/delay
> processing the dataReceived in general becasue of a
> few design reasons. This is why I asked about that
> Deffered. 

Well, then you'd do the same sort of thing:

	reactor.callLater(delay, self.processDataAndSend, data)

> I learn Twisted, so sorry for simple question. Want to
> have most Pythonic/Twisthonic solution.

No need to apologize. Deferreds are not what you are after,
they represent data that will be available at some undefined
but hopefully bounded time in the future. They're note used
for scheduling in the sense that you are talking about.

Cheers,
-w



From leszczynscy at yahoo.com  Thu Aug 11 17:07:52 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 14:07:52 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811174418.GD19620@groovy.net>
Message-ID: <20050811210752.63709.qmail@web30503.mail.mud.yahoo.com>

--- William Waites <ww at groovy.net> wrote:
>
> 	reactor.callLater(delay, self.processDataAndSend,
> data)


thx for the help, works perfectly fine.

A.




From alwyn.schoeman at gmail.com  Fri Aug 12 03:56:58 2005
From: alwyn.schoeman at gmail.com (Alwyn Schoeman)
Date: Fri, 12 Aug 2005 15:56:58 +0800
Subject: [Twisted-Python] Searchable mailing list?
Message-ID: <22d55aea05081200561504ed48@mail.gmail.com>

Hi everyone,

Any version of this mailing list that one can search?

-- 
Alwyn Schoeman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050812/07b076ec/attachment.htm 

From mary-twisted at puzzling.org  Fri Aug 12 04:13:32 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 12 Aug 2005 18:13:32 +1000
Subject: [Twisted-Python] Searchable mailing list?
In-Reply-To: <22d55aea05081200561504ed48@mail.gmail.com>
References: <22d55aea05081200561504ed48@mail.gmail.com>
Message-ID: <20050812081332.GA28531@sourdust.home.puzzling.org>

On Fri, Aug 12, 2005, Alwyn Schoeman wrote:
> Hi everyone,
> 
> Any version of this mailing list that one can search?

You can search the Twisted Matrix site, including the lists, using the
Google search down the bottom of http://twistedmatrix.com/

-Mary



From nkeric at gmail.com  Fri Aug 12 04:37:32 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Fri, 12 Aug 2005 16:37:32 +0800
Subject: [Twisted-Python] Searchable mailing list?
In-Reply-To: <22d55aea05081200561504ed48@mail.gmail.com>
References: <22d55aea05081200561504ed48@mail.gmail.com>
Message-ID: <43c0d2b505081201376a1e70ef@mail.gmail.com>

2005/8/12, Alwyn Schoeman <alwyn.schoeman at gmail.com>:
> Hi everyone,
>  
>  Any version of this mailing list that one can search?
> 

You can search via gmane : )

http://dir.gmane.org/gmane.comp.python.twisted

- Eric



From ajchos at wp.pl  Fri Aug 12 07:48:27 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 12 Aug 2005 13:48:27 +0200
Subject: [Twisted-Python] How to run function from protocol class
Message-ID: <1123847308.2844.10.camel@localhost.localdomain>

I got the code:
from twisted.internet.protocol import Protocol

class MyClientProtocol(Protocol):
	buffer = ''
	def connectionMade(self):
		self.transport.write('hello world')
	def myFunction(self):
		self.transport.write('blah')
	def dataReceived(self, data):
		self.buffer += data
		if self.buffer == 'hello world':
			self.transport.loseConnection()
from twisted.internet.protocol import ClientFactory

class MyFactory(ClientFactory):
	protocol = MyClientProtocol
	def startedConnecting(self, connector):
		pass # we could connector.stopConnecting()
	def clientConnectionLost(self, connector, reason):
		connector.connect() # reconnect
	def clientConnectionFailed(self, connector, reason):
		print "connection failed"
		reactor.stop()

from twisted.internet import reactor, task

#t=MyClientProtocol()
#l = task.LoopingCall(t.myFunction)
#l.start(5.0)

reactor.connectTCP('localhost', 7771, MyFactory(), timeout=30)
reactor.run()

I want to run my function myFunction every 5 sec (commented code). I want to use a task.LoopingCall loop. 
I am run out of new ideas. I don't know how to do this. Help please.




From exarkun at divmod.com  Fri Aug 12 09:11:10 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 12 Aug 2005 09:11:10 -0400
Subject: [Twisted-Python] How to run function from protocol class
In-Reply-To: <1123847308.2844.10.camel@localhost.localdomain>
Message-ID: <20050812131110.3914.161684071.divmod.quotient.4665@ohm>

On Fri, 12 Aug 2005 13:48:27 +0200, Micha? Tyde <ajchos at wp.pl> wrote:
>I got the code:
>from twisted.internet.protocol import Protocol
>
>class MyClientProtocol(Protocol):
>	buffer = ''
>	def connectionMade(self):
>		self.transport.write('hello world')

                l = task.LoopingCall(self.myFunction)
                l.start(5.0)

>	def myFunction(self):
>		self.transport.write('blah')
>	def dataReceived(self, data):
>		self.buffer += data
>		if self.buffer == 'hello world':
>			self.transport.loseConnection()
>from twisted.internet.protocol import ClientFactory
>
>class MyFactory(ClientFactory):
>	protocol = MyClientProtocol
>	def startedConnecting(self, connector):
>		pass # we could connector.stopConnecting()
>	def clientConnectionLost(self, connector, reason):
>		connector.connect() # reconnect
>	def clientConnectionFailed(self, connector, reason):
>		print "connection failed"
>		reactor.stop()
>
>from twisted.internet import reactor, task
>
>
>reactor.connectTCP('localhost', 7771, MyFactory(), timeout=30)
>reactor.run()
>

Jp



From nkeric at gmail.com  Fri Aug 12 09:12:45 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Fri, 12 Aug 2005 21:12:45 +0800
Subject: [Twisted-Python] How to run function from protocol class
In-Reply-To: <1123847308.2844.10.camel@localhost.localdomain>
References: <1123847308.2844.10.camel@localhost.localdomain>
Message-ID: <43c0d2b505081206122c58c147@mail.gmail.com>

AFAIK, the Factory class creates a Protocol instance for each
connection, then if you would like to achieve what you want, you'll
have to do the looping call _inside_ the Protocol class.

So I guess you could try this to see if it works:

class MyClientProtocol(Protocol):
    ...
    def connectionMade(self):
        ...
        l = task.LoopingCall(t.myFunction)
        l.start(5.0)
[snip]

I'm not sure whether we can do this in the __init__(self) method, I
guess that would failed since the protocol's transport instance
haven't even been created during __init__... so it would be much
better to do that inside the connectionMade(self) method.

Hope that helps : )

(sorry for my poor english ;p )

- Eric

2005/8/12, Micha? Tyde <ajchos at wp.pl>:
> I got the code:
> I want to run my function myFunction every 5 sec (commented code). I want to use a task.LoopingCall loop.
> I am run out of new ideas. I don't know how to do this. Help please.
>

From ajchos at wp.pl  Fri Aug 12 09:22:26 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 12 Aug 2005 15:22:26 +0200
Subject: [Twisted-Python] How to run function from protocol class
Message-ID: <1123852947.3561.7.camel@localhost.localdomain>

Thank You it works just fine.




From antonykummel at yahoo.com  Sun Aug 14 08:15:27 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050810173224.31760.qmail@web33909.mail.mud.yahoo.com>
Message-ID: <20050814121527.92362.qmail@web33908.mail.mud.yahoo.com>

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tcrust.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/281b827c/attachment.txt 

From pbector at yahoo.com  Sun Aug 14 10:11:39 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
Subject: [Twisted-Python] Query
Message-ID: <20050814141139.57997.qmail@web34305.mail.mud.yahoo.com>

Hi All
 
I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available  under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.
 
Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/0a106808/attachment.htm 

From mark at junklight.com  Sun Aug 14 13:11:18 2005
From: mark at junklight.com (markw)
Date: Sun, 14 Aug 2005 18:11:18 +0100
Subject: [Twisted-Python] SSL Example?
Message-ID: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>

Hi,

I am contemplating running XML-RPC over SSL (basically for site to  
site process communication over the internet). Has anyone got any  
example code that would point me in the right direction (or just some  
clues :-) )

cheers

mark 



From exarkun at divmod.com  Sun Aug 14 13:28:44 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 14 Aug 2005 13:28:44 -0400
Subject: [Twisted-Python] Query
In-Reply-To: <20050814141139.57997.qmail@web34305.mail.mud.yahoo.com>
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866@ohm>

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector <pbector at yahoo.com> wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available  under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB.  Any IRC client should be able to connect to it.  The PB interface allows for easy programmatic access.  It does support groups.  It uses unicode internally, and transcodes messages received/delivered via IRC.  The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms.  For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



From pbector at yahoo.com  Sun Aug 14 14:55:28 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 11:55:28 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 12
In-Reply-To: <E1E4MmD-0003DW-02@pyramid.twistedmatrix.com>
Message-ID: <20050814185528.49160.qmail@web34312.mail.mud.yahoo.com>

Hi
 
Thanks for the quick reply.
 
PLease let me know if the twisted word chat server   is available as a software download??
>From where can i download the server and client software?
 
Thanks
twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: twisted-compliant interactive interpreter (Antony Kummel)
2. Query (pooja bector)
3. SSL Example? (markw)
4. Re: Query (Jp Calderone)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
From: Antony Kummel 
Subject: Re: [Twisted-Python] twisted-compliant interactive
interpreter
To: Twisted general discussion 
Message-ID: <20050814121527.92362.qmail at web33908.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
"""
PyCrust is a python shell and namespace browser application.
tCrust is a version of PyCrust that works with Twisted.
"""

# The next two lines, and the other code below that makes use of
# ``__main__`` and ``original``, serve the purpose of cleaning up the
# main namespace to look as much as possible like the regular Python
# shell environment.
import __main__
original = __main__.__dict__.keys()

__original_author__ = "Patrick K. O'Brien 
"

import wx

class App(wx.App):
"""PyCrust standalone application."""

def OnInit(self):
import wx
from wx import py

wx.InitAllImageHandlers()

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# make some adaptations
self.frame = py.crust.CrustFrame(title="Twisted PyCrust!",
InterpClass=self.getInterpClass())
def myOnClose(self, event):
from twisted.internet import reactor
reactor.addSystemEventTrigger('after', 'shutdown', self._OnClose, (None,))
reactor.stop()
self.frame._OnClose = self.frame.OnClose
self.frame.OnClose = myOnClose
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

self.frame.SetSize((800, 600))
self.frame.Show()
self.SetTopWindow(self.frame)
return True

def getInterpClass(self):
import sys
from wx import py
from twisted.conch.manhole import ManholeInterpreter

class ManholeCrustInterpreter(py.interpreter.Interpreter):
"""A version of the PyCrust interpreter that uses the manhole display hook"""
def __init__(self, locals=None, rawin=None,
stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr):
py.interpreter.Interpreter.__init__(self, locals, rawin,
stdin, stdout, stderr)
self.manhole = ManholeInterpreter(self, locals)

def addOutput(self, data, async):
self.write(data)

def runcode(self, *a, **kw):
orighook, sys.displayhook = sys.displayhook, self.manhole.displayhook
try:
py.interpreter.Interpreter.runcode(self, *a, **kw)
finally:
sys.displayhook = orighook

return ManholeCrustInterpreter 

'''
The main() function needs to handle being imported, such as with the
pycrust script that wxPython installs:

#!/usr/bin/env python

from wx.py.PyCrust import main
main()
'''

def main():
"""The main function for the PyCrust program."""
# Cleanup the main namespace, leaving the App class.
import __main__
md = __main__.__dict__
keepers = original
keepers.append('App')
for key in md.keys():
if key not in keepers:
del md[key]
# Create an application instance.
app = App(0)
# Mimic the contents of the standard Python shell's sys.path.
import sys
if sys.path[0]:
sys.path[0] = ''
# Add the application object to the sys module's namespace.
# This allows a shell user to do:
# >>> import sys
# >>> sys.app.whatever
sys.app = app
del sys
# Cleanup the main namespace some more.
if md.has_key('App') and md['App'] is App:
del md['App']
if md.has_key('__main__') and md['__main__'] is __main__:
del md['__main__']
# Start the wxPython event loop.

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# this is to integrate Twisted and wxPython
from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor
import wx
reactor.interleave(wx.CallAfter)
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

app.MainLoop()

if __name__ == '__main__':
main()

------------------------------

Message: 2
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Query
To: twisted-python at twistedmatrix.com
Message-ID: <20050814141139.57997.qmail at web34305.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi All

I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.

Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/0a106808/attachment-0001.htm

------------------------------

Message: 3
Date: Sun, 14 Aug 2005 18:11:18 +0100
From: markw 
Subject: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: 
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Hi,

I am contemplating running XML-RPC over SSL (basically for site to 
site process communication over the internet). Has anyone got any 
example code that would point me in the right direction (or just some 
clues :-) )

cheers

mark 



------------------------------

Message: 4
Date: Sun, 14 Aug 2005 13:28:44 -0400
From: Jp Calderone 
Subject: Re: [Twisted-Python] Query
To: Twisted general discussion 
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866 at ohm>
Content-Type: text/plain; format=flowed

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector 
wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB. Any IRC client should be able to connect to it. The PB interface allows for easy programmatic access. It does support groups. It uses unicode internally, and transcodes messages received/delivered via IRC. The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms. For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 12
**********************************************

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/62d0e620/attachment.htm 

From nkeric at gmail.com  Sun Aug 14 22:11:40 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Mon, 15 Aug 2005 10:11:40 +0800
Subject: [Twisted-Python] SSL Example?
In-Reply-To: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
References: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
Message-ID: <43c0d2b505081419113dacfc12@mail.gmail.com>

here're some code examples from the official website, may them helpful
for you :)

http://twistedmatrix.com/projects/core/documentation/examples/

2005/8/15, markw <mark at junklight.com>:
> Hi,
> 
> I am contemplating running XML-RPC over SSL (basically for site to
> site process communication over the internet). Has anyone got any
> example code that would point me in the right direction (or just some
> clues :-) )
> 
> cheers
> 
> mark



From mary-twisted at puzzling.org  Sun Aug 14 23:22:57 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 15 Aug 2005 13:22:57 +1000
Subject: [Twisted-Python] Australian Twisted folk at the OSDC: Melbourne Dec
	5th - 7th 2005
Message-ID: <20050815032257.GF27318@home.puzzling.org>

We haven't even gotten to the second sprint yet (this weekend, Sydney,
see you there), and there's talk of a third one.

The Australian Open Source Developers Conference is being held at Monash
University, Caulfield, Melbourne from December 5th to 7th this year.
Seems like all of the Tassie Twisted folk are submitting papers and a
few others are thinking of submitting or attending.

Hence, while it probably won't be even as formally informal (or
informally formal?) as the Hobart and Sydney sprints, it seems likely
that critical mass will be achieved in Melbourne and Twisted coding
might take place...

....

Conference details:

Monday, December the 5th to Wednesday December the 7th, 2005

Call for papers is currently open:
http://osdc2005.cgpublisher.com/cfp.html but deadline is *this Friday*
19th August.

Details at http://www.osdc2005.com.au/

....

And after that... anyone going to linux.conf.au 2006 in Dunedin New
Zealand...?

-Mary



From mary-twisted at puzzling.org  Sun Aug 14 23:26:26 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 15 Aug 2005 13:26:26 +1000
Subject: [Twisted-Python] Australian Twisted folk at the OSDC: Melbourne
	Dec 5th - 7th 2005
In-Reply-To: <20050815032257.GF27318@home.puzzling.org>
References: <20050815032257.GF27318@home.puzzling.org>
Message-ID: <20050815032626.GG27318@home.puzzling.org>

On Mon, Aug 15, 2005, Mary Gardiner wrote:
> Details at http://www.osdc2005.com.au/

Sorry, just http://www.osdc.com.au/

-Mary



From mark at junklight.com  Mon Aug 15 02:21:02 2005
From: mark at junklight.com (markw)
Date: Mon, 15 Aug 2005 07:21:02 +0100
Subject: [Twisted-Python] SSL Example?
In-Reply-To: <43c0d2b505081419113dacfc12@mail.gmail.com>
References: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
	<43c0d2b505081419113dacfc12@mail.gmail.com>
Message-ID: <1EAEDD24-055A-4942-8C23-804B7600BFDA@junklight.com>

Ok - there is an ssl example. Missed it the first time round. Thank  
you for your help

On 15 Aug 2005, at 03:11, Eric Hsu wrote:

> here're some code examples from the official website, may them helpful
> for you :)
>
> http://twistedmatrix.com/projects/core/documentation/examples/
>
> 2005/8/15, markw <mark at junklight.com>:
>
>> Hi,
>>
>> I am contemplating running XML-RPC over SSL (basically for site to
>> site process communication over the internet). Has anyone got any
>> example code that would point me in the right direction (or just some
>> clues :-) )
>>
>> cheers
>>
>> mark
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From pbector at yahoo.com  Mon Aug 15 02:34:47 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 23:34:47 -0700 (PDT)
Subject: [Twisted-Python] Query on Twisted word
Message-ID: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>

HI
 
I want to knpw whether twisted word chat server is available as software download?
What platforms does it support?
can i download it and ue it with a compatible client to chat?
does it support group chat and multilanguages?
 
thanks a lot
 
 

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/d7d9db5d/attachment.htm 

From pbector at yahoo.com  Mon Aug 15 02:35:03 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 23:35:03 -0700 (PDT)
Subject: [Twisted-Python] Query on Twisted word
Message-ID: <20050815063503.64557.qmail@web34315.mail.mud.yahoo.com>

HI
 
I want to know whether twisted word chat server is available as software download?
What platforms does it support?
can i download it and use it with a compatible client to chat?
does it support group chat and multilanguages?
 
thanks a lot
 
 

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/e6d0e7fb/attachment.htm 

From andrew-twisted at puzzling.org  Mon Aug 15 02:42:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Aug 2005 16:42:09 +1000
Subject: [Twisted-Python] Query on Twisted word
In-Reply-To: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
References: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
Message-ID: <20050815064209.GM11932@trogdor.home.puzzling.org>

On Sun, Aug 14, 2005 at 11:34:47PM -0700, pooja bector wrote:
> HI
>  
> I want to knpw whether twisted word chat server is available as software
> download?
> What platforms does it support?
> can i download it and ue it with a compatible client to chat?
> does it support group chat and multilanguages?

Have you seen http://twistedmatrix.com/projects/words/ ?

-Andrew.




From itamar at itamarst.org  Mon Aug 15 08:16:15 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Aug 2005 08:16:15 -0400
Subject: [Twisted-Python] Query on Twisted word
In-Reply-To: <20050815064209.GM11932@trogdor.home.puzzling.org>
References: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
	<20050815064209.GM11932@trogdor.home.puzzling.org>
Message-ID: <1124108175.8353.23.camel@localhost.localdomain>

On Mon, 2005-08-15 at 16:42 +1000, Andrew Bennetts wrote:

> Have you seen http://twistedmatrix.com/projects/words/ ?

0.1 is old and crufty. The SVN trunk version is much nicer but not
released yet.




From emes at pld-linux.org  Mon Aug 15 12:41:37 2005
From: emes at pld-linux.org (michal salaban)
Date: Mon, 15 Aug 2005 18:41:37 +0200
Subject: [Twisted-Python] problem with combining deferreds together
Message-ID: <20050815164137.GA21164@skunk.one.pl>

hello all,

i've been playing with twisted adbapi for last three days to figure out if
it's a goot framework for application that i'm going to write soon.

i've stuck on one problem (probably i'm not the first, but couldn't google out
the soultion).

i have an object, which data is spread between two tables - the MainTable with
some data and reference to some row in SubTable with additional things.

what i'm trying to do is to create repository class with method .getByID()
that takes ID from MainTable and returns deferred, which in callback evaluates
to fully instatinated and data-populated object.

i've come up to this:

class ObjectRepository:

    def getById(self, id):
        dMain = self.dbpool.runInteraction(
                fetchOneAndMapToDictionary,
                "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
                )
        dMain.addCallback(self._gotMainData)
        return dMain

    def _gotMainData(self, mappedRow):
        dSub = self.dbpool.runInteraction(
                fetchOneAndMapToDictionary,
                "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
                )
        dSub.addCallback(self._gotSubData)
        return [what to return ????]


how can i return the result that consist of data from both queries?
chaining callbacks is impossible. i cannot have dSub before dMain.callback()
is called, and also cannot do dMain.chainDeferred(dSub) in _gotMainData()
because dMain has already been returned to calling code and contains callbacks
attached there.

i suppose the solution is simple, but im 100% newbie to twisted and
event-driven programming.

thanks in advance :)

-- 
michal salaban -=- emes (at) pld-linux.org -=- jabber: emes at jabber.org



From fritcher at corp.earthlink.net  Mon Aug 15 13:13:44 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Mon, 15 Aug 2005 13:13:44 -0400
Subject: [Twisted-Python] problem with combining deferreds together
In-Reply-To: <20050815164137.GA21164@skunk.one.pl>
References: <20050815164137.GA21164@skunk.one.pl>
Message-ID: <4300CD48.5070302@corp.earthlink.net>

michal salaban wrote:
> class ObjectRepository:
> 
>     def getById(self, id):
>         dMain = self.dbpool.runInteraction(
>                 fetchOneAndMapToDictionary,
>                 "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
>                 )
>         dMain.addCallback(self._gotMainData)
>         return dMain
> 
>     def _gotMainData(self, mappedRow):
>         dSub = self.dbpool.runInteraction(
>                 fetchOneAndMapToDictionary,
>                 "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
>                 )
>         dSub.addCallback(self._gotSubData)
>         return [what to return ????]
> 
> 
> how can i return the result that consist of data from both queries?
> chaining callbacks is impossible. i cannot have dSub before dMain.callback()
> is called, and also cannot do dMain.chainDeferred(dSub) in _gotMainData()
> because dMain has already been returned to calling code and contains callbacks
> attached there.

Give this a try and see how it works for you...

def _gotMainData(self, mappedRow):
    dSub = self.dbpool.runInteraction(
        fetchOneAndMapToDictionary,
        "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
        )
        dSub.addCallback(self._gotSubData, mappedRow)
        return dSub

def _gotSubData(self, subMappedRow, mainMappedRow):
    # Do work here.


When adding callbacks to a deferred, you can add arguments that will get
passed to the argument, independant of the result from previous
callbacks. Like above, you can take the mappedRow dictionary from the
first callback and pass it as an argument to the callback for the
subrequest. Also, for the new deferred to be useful, you return it from
the callback. When Twisted sees that, it'll pause the callback chain
until that deferred fires and processes all of its callbacks. It'll take
the result that is produced from that deferred and use it as the result
for the next callback in the main deferred.

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050815/0d71fccb/attachment.pgp 

From Henning.Ramm at mediapro-gmbh.de  Mon Aug 15 13:21:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 15 Aug 2005 19:21:38 +0200
Subject: [Twisted-Python] problem with combining deferreds together
Message-ID: <F92274058556DE42B94B148EEFB91839021CB522@exchange-03.suedkurier.de>

>i've stuck on one problem (probably i'm not the first, but 
>couldn't google out
>the soultion).
>
>i have an object, which data is spread between two tables - 
>the MainTable with
>some data and reference to some row in SubTable with additional things.

Why don't you fetch both in one query (using LEFT JOIN or just WHERE clauses),
that would be faster anyway.

>class ObjectRepository:
>
>    def getById(self, id):
>        dMain = self.dbpool.runInteraction(
>                fetchOneAndMapToDictionary,
>                "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
>                )
>        dMain.addCallback(self._gotMainData)
>        return dMain
>
>    def _gotMainData(self, mappedRow):
>        dSub = self.dbpool.runInteraction(
>                fetchOneAndMapToDictionary,
>                "SELECT * FROM SubTable WHERE id = '%d'" % 
>(mappedRow['SubID'],)
>                )
>        dSub.addCallback(self._gotSubData)
>        return [what to return ????]
>
>
>how can i return the result that consist of data from both queries?

dSub.addCallback(self._gotSubData, mappedRow)
return dSub # what else?

Just make sure you handle mappedRow in _gotSubData.

Or did I miss your point?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From emes at pld-linux.org  Mon Aug 15 18:30:56 2005
From: emes at pld-linux.org (michal salaban)
Date: Tue, 16 Aug 2005 00:30:56 +0200
Subject: [Twisted-Python] problem with combining deferreds together
In-Reply-To: <4300CD48.5070302@corp.earthlink.net>
References: <20050815164137.GA21164@skunk.one.pl>
	<4300CD48.5070302@corp.earthlink.net>
Message-ID: <20050815223056.GA22649@skunk.one.pl>

on Mon, Aug 15, 2005 at 01:13:44PM -0400, Jason Fritcher wrote:

> Give this a try and see how it works for you...

works perfectly. thanks! :)

> subrequest. Also, for the new deferred to be useful, you return it from
> the callback. When Twisted sees that, it'll pause the callback chain
> until that deferred fires and processes all of its callbacks. It'll take
> the result that is produced from that deferred and use it as the result
> for the next callback in the main deferred.

and that's the key. the docs I read didn't mention that (or I didn't notice :)

-- 
michal salaban -=- emes (at) pld-linux.org -=- jabber: emes at jabber.org



From pbector at yahoo.com  Wed Aug 17 08:21:25 2005
From: pbector at yahoo.com (pooja bector)
Date: Wed, 17 Aug 2005 05:21:25 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 13
In-Reply-To: <E1E4YLZ-0008AU-02@pyramid.twistedmatrix.com>
Message-ID: <20050817122125.57402.qmail@web34314.mail.mud.yahoo.com>

Hi
 
Thanks for the reply.I need further clarification on Twisted word chat server.Your previous reply to my query mentions that "Twisted word provides  a server that is accessible via IRC and PB.And it does support groups and multilanguages."
I downloaded the implementation from http://twistedmatrix.com/projects/words/
As such there is no "Twisted Word Chat Server " implementation available here.
Could you please suggest that from where can I get the server implementation for it ?
 
Thanks for your time.
 
Regards
Pooja
 


twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: Twisted-Python Digest, Vol 17, Issue 12 (pooja bector)
2. Re: SSL Example? (Eric Hsu)
3. Australian Twisted folk at the OSDC: Melbourne Dec 5th - 7th
2005 (Mary Gardiner)
4. Re: Australian Twisted folk at the OSDC: Melbourne Dec 5th -
7th 2005 (Mary Gardiner)
5. Re: SSL Example? (markw)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 11:55:28 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 12
To: twisted-python at twistedmatrix.com, exarkun at divmod.com
Message-ID: <20050814185528.49160.qmail at web34312.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi

Thanks for the quick reply.

PLease let me know if the twisted word chat server is available as a software download??
>From where can i download the server and client software?

Thanks
twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: twisted-compliant interactive interpreter (Antony Kummel)
2. Query (pooja bector)
3. SSL Example? (markw)
4. Re: Query (Jp Calderone)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
From: Antony Kummel 
Subject: Re: [Twisted-Python] twisted-compliant interactive
interpreter
To: Twisted general discussion 
Message-ID: <20050814121527.92362.qmail at web33908.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
"""
PyCrust is a python shell and namespace browser application.
tCrust is a version of PyCrust that works with Twisted.
"""

# The next two lines, and the other code below that makes use of
# ``__main__`` and ``original``, serve the purpose of cleaning up the
# main namespace to look as much as possible like the regular Python
# shell environment.
import __main__
original = __main__.__dict__.keys()

__original_author__ = "Patrick K. O'Brien 
"

import wx

class App(wx.App):
"""PyCrust standalone application."""

def OnInit(self):
import wx
from wx import py

wx.InitAllImageHandlers()

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# make some adaptations
self.frame = py.crust.CrustFrame(title="Twisted PyCrust!",
InterpClass=self.getInterpClass())
def myOnClose(self, event):
from twisted.internet import reactor
reactor.addSystemEventTrigger('after', 'shutdown', self._OnClose, (None,))
reactor.stop()
self.frame._OnClose = self.frame.OnClose
self.frame.OnClose = myOnClose
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

self.frame.SetSize((800, 600))
self.frame.Show()
self.SetTopWindow(self.frame)
return True

def getInterpClass(self):
import sys
from wx import py
from twisted.conch.manhole import ManholeInterpreter

class ManholeCrustInterpreter(py.interpreter.Interpreter):
"""A version of the PyCrust interpreter that uses the manhole display hook"""
def __init__(self, locals=None, rawin=None,
stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr):
py.interpreter.Interpreter.__init__(self, locals, rawin,
stdin, stdout, stderr)
self.manhole = ManholeInterpreter(self, locals)

def addOutput(self, data, async):
self.write(data)

def runcode(self, *a, **kw):
orighook, sys.displayhook = sys.displayhook, self.manhole.displayhook
try:
py.interpreter.Interpreter.runcode(self, *a, **kw)
finally:
sys.displayhook = orighook

return ManholeCrustInterpreter 

'''
The main() function needs to handle being imported, such as with the
pycrust script that wxPython installs:

#!/usr/bin/env python

from wx.py.PyCrust import main
main()
'''

def main():
"""The main function for the PyCrust program."""
# Cleanup the main namespace, leaving the App class.
import __main__
md = __main__.__dict__
keepers = original
keepers.append('App')
for key in md.keys():
if key not in keepers:
del md[key]
# Create an application instance.
app = App(0)
# Mimic the contents of the standard Python shell's sys.path.
import sys
if sys.path[0]:
sys.path[0] = ''
# Add the application object to the sys module's namespace.
# This allows a shell user to do:
# >>> import sys
# >>> sys.app.whatever
sys.app = app
del sys
# Cleanup the main namespace some more.
if md.has_key('App') and md['App'] is App:
del md['App']
if md.has_key('__main__') and md['__main__'] is __main__:
del md['__main__']
# Start the wxPython event loop.

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# this is to integrate Twisted and wxPython
from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor
import wx
reactor.interleave(wx.CallAfter)
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

app.MainLoop()

if __name__ == '__main__':
main()

------------------------------

Message: 2
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Query
To: twisted-python at twistedmatrix.com
Message-ID: <20050814141139.57997.qmail at web34305.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi All

I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.

Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/0a106808/attachment-0001.htm

------------------------------

Message: 3
Date: Sun, 14 Aug 2005 18:11:18 +0100
From: markw 
Subject: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: 
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Hi,

I am contemplating running XML-RPC over SSL (basically for site to 
site process communication over the internet). Has anyone got any 
example code that would point me in the right direction (or just some 
clues :-) )

cheers

mark 



------------------------------

Message: 4
Date: Sun, 14 Aug 2005 13:28:44 -0400
From: Jp Calderone 
Subject: Re: [Twisted-Python] Query
To: Twisted general discussion 
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866 at ohm>
Content-Type: text/plain; format=flowed

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector 
wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB. Any IRC client should be able to connect to it. The PB interface allows for easy programmatic access. It does support groups. It uses unicode internally, and transcodes messages received/delivered via IRC. The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms. For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 12
**********************************************


---------------------------------
Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/62d0e620/attachment-0001.htm

------------------------------

Message: 2
Date: Mon, 15 Aug 2005 10:11:40 +0800
From: Eric Hsu 
Subject: Re: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: <43c0d2b505081419113dacfc12 at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

here're some code examples from the official website, may them helpful
for you :)

http://twistedmatrix.com/projects/core/documentation/examples/

2005/8/15, markw :
> Hi,
> 
> I am contemplating running XML-RPC over SSL (basically for site to
> site process communication over the internet). Has anyone got any
> example code that would point me in the right direction (or just some
> clues :-) )
> 
> cheers
> 
> mark



------------------------------

Message: 3
Date: Mon, 15 Aug 2005 13:22:57 +1000
From: Mary Gardiner 
Subject: [Twisted-Python] Australian Twisted folk at the OSDC:
Melbourne Dec 5th - 7th 2005
To: Twisted general discussion 
Message-ID: <20050815032257.GF27318 at home.puzzling.org>
Content-Type: text/plain; charset=us-ascii

We haven't even gotten to the second sprint yet (this weekend, Sydney,
see you there), and there's talk of a third one.

The Australian Open Source Developers Conference is being held at Monash
University, Caulfield, Melbourne from December 5th to 7th this year.
Seems like all of the Tassie Twisted folk are submitting papers and a
few others are thinking of submitting or attending.

Hence, while it probably won't be even as formally informal (or
informally formal?) as the Hobart and Sydney sprints, it seems likely
that critical mass will be achieved in Melbourne and Twisted coding
might take place...

....

Conference details:

Monday, December the 5th to Wednesday December the 7th, 2005

Call for papers is currently open:
http://osdc2005.cgpublisher.com/cfp.html but deadline is *this Friday*
19th August.

Details at http://www.osdc2005.com.au/

....

And after that... anyone going to linux.conf.au 2006 in Dunedin New
Zealand...?

-Mary



------------------------------

Message: 4
Date: Mon, 15 Aug 2005 13:26:26 +1000
From: Mary Gardiner 
Subject: Re: [Twisted-Python] Australian Twisted folk at the OSDC:
Melbourne Dec 5th - 7th 2005
To: twisted-python at twistedmatrix.com
Message-ID: <20050815032626.GG27318 at home.puzzling.org>
Content-Type: text/plain; charset=us-ascii

On Mon, Aug 15, 2005, Mary Gardiner wrote:
> Details at http://www.osdc2005.com.au/

Sorry, just http://www.osdc.com.au/

-Mary



------------------------------

Message: 5
Date: Mon, 15 Aug 2005 07:21:02 +0100
From: markw 
Subject: Re: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: <1EAEDD24-055A-4942-8C23-804B7600BFDA at junklight.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Ok - there is an ssl example. Missed it the first time round. Thank 
you for your help

On 15 Aug 2005, at 03:11, Eric Hsu wrote:

> here're some code examples from the official website, may them helpful
> for you :)
>
> http://twistedmatrix.com/projects/core/documentation/examples/
>
> 2005/8/15, markw :
>
>> Hi,
>>
>> I am contemplating running XML-RPC over SSL (basically for site to
>> site process communication over the internet). Has anyone got any
>> example code that would point me in the right direction (or just some
>> clues :-) )
>>
>> cheers
>>
>> mark
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 13
**********************************************

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050817/757674df/attachment.htm 

From tazzo at email.it  Wed Aug 17 11:02:57 2005
From: tazzo at email.it (tazzo)
Date: Wed, 17 Aug 2005 17:02:57 +0200
Subject: [Twisted-Python] PEP 342 now in python CVS
Message-ID: <430351A1.5050109@email.it>

Hi all,
referring to the news about the implementation of PEP 342 in python CVS:

http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html

I know that is a great news for asynchronous programming in python and for
other aspects but I wonder what will be the future of  Twisted, what 
will change
(if something will change) in Twisted when PEP 342 will come?
I think that with PEP 342 we could write a more readable code but does 
it mean
rewrite all twisted?
What is the opinion of  Twisted developers??

thanks,

Tazzo



-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o
protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di
e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente
proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione,
copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed
e' risultato NON infetto.





From solipsis at pitrou.net  Wed Aug 17 11:32:06 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 17 Aug 2005 17:32:06 +0200
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>


Hi,

For what it's worth, I started writing a pure Python cooperative threads
package, some weeks ago. It's called "softlets" and uses, of course,
generators. There is a simple scheduler centered around the notion of
"wait objects" - you yield a wait object (e.g. a Queue) and it comes
back when the underlying condition is satisfied (e.g. the Queue has
something to give to you).

I'm writing it for fun but it does have some interesting
characteristics:
- no C extension required, no compiling, no annoying dependency (even
not Twisted actually)
- scalability: you can create thousands of threads with nearly no
overhead, and run them all "at the same time"
- a more comfortable way of writing certain operation sequences than
with cascades of deferreds
- robustness: in contrast to preemptive multithreading, cooperative MT
means you define the synchronisation points explicitly, so you don't
have any resource sharing problems in case you forget some
synchonisation points (latency will be worse, but your program will stay
correct)

Although there is no web page currently, you can get the source here (*)
and play with the examples in the examples directory (it's very alpha
and lacks most fonctionality but it does work, and it won't hose your
machine). Nothing is needed except Python 2.4; no setup required, just
checkout the sources.
(*) http://developer.berlios.de/svn/?group_id=4330

Future work would be to add actual useful functionality (timers,
integration with Twisted deferreds, etc.).

Feel free to subscribe to the mailing-list and talk a little ;)
http://developer.berlios.de/mail/?group_id=4330
I'm open to feedback, and to people willing to contribute.

Regards

Antoine.


Le mercredi 17 ao?t 2005 ? 17:02 +0200, tazzo a ?crit :
> Hi all,
> referring to the news about the implementation of PEP 342 in python CVS:
> 
> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
> 
> I know that is a great news for asynchronous programming in python and for
> other aspects but I wonder what will be the future of  Twisted, what 
> will change
> (if something will change) in Twisted when PEP 342 will come?
> I think that with PEP 342 we could write a more readable code but does 
> it mean
> rewrite all twisted?
> What is the opinion of  Twisted developers??
> 
> thanks,
> 
> Tazzo





From washort at twistedmatrix.com  Wed Aug 17 12:02:04 2005
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 17 Aug 2005 11:02:04 -0500 (CDT)
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <20050817.110204.327287531.washort@divmod.org>

>>>>> "tazzo" == tazzo  <tazzo at email.it> writes:

    > I know that is a great news for asynchronous programming in
    > python


I have to wonder if it really is. I think that even if this goes into
python, I will continue to write my code in the same way, using
separate callback functions. I'd do this mainly because I find it less
confusing -- that way code that executes in different reactor
iterations will be in different blocks. Getting confused about what
the time-relationship between various pieces of code is one of the
problems that multithreading increases -- coroutines do that as well,
I think, though obviously not to the same degree. 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050817/099d48ec/attachment.pgp 

From radeex at gmail.com  Wed Aug 17 19:20:15 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 18 Aug 2005 09:20:15 +1000
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <60ed19d405081716204b7f2f50@mail.gmail.com>

On 8/18/05, tazzo <tazzo at email.it> wrote:
> Hi all,
> referring to the news about the implementation of PEP 342 in python CVS:
> 
> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
> 
> I know that is a great news for asynchronous programming in python and for
> other aspects but I wonder what will be the future of  Twisted, what
> will change
> (if something will change) in Twisted when PEP 342 will come?
> I think that with PEP 342 we could write a more readable code but does
> it mean
> rewrite all twisted?
> What is the opinion of  Twisted developers??

Have you seen Deferred Generators, in twisted.internet.defer
(deferredGenerator and waitForDeferred are relevant)? I'm planning on
either adding support for PEP342-style generators to them, or writing
an alternate implementation specifically for PEP342. I'm happy about
PEP342, because it means I'll no longer have to install a buggy C
extension module (greenlet) to get decent cooperative threading.

This integration is very lightweight and doesn't require any mangling
of the guts of Twisted.

I'll just note that I am mostly alone amongst the developers of
Twisted who think that this kind of cooperative threading + Deferred
integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
have all said it's a bad idea to have such magical code. On the other
hand, it's definitely not as bad as pre-emptive threading, where you
basically can't know where context switches will happen.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From bob at redivi.com  Wed Aug 17 20:24:45 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 17 Aug 2005 14:24:45 -1000
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <5B284242-EE77-453F-A892-BABFD359CA4A@redivi.com>


On Aug 17, 2005, at 1:20 PM, Christopher Armstrong wrote:

> On 8/18/05, tazzo <tazzo at email.it> wrote:
>
>> Hi all,
>> referring to the news about the implementation of PEP 342 in  
>> python CVS:
>>
>> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
>>
>> I know that is a great news for asynchronous programming in python  
>> and for
>> other aspects but I wonder what will be the future of  Twisted, what
>> will change
>> (if something will change) in Twisted when PEP 342 will come?
>> I think that with PEP 342 we could write a more readable code but  
>> does
>> it mean
>> rewrite all twisted?
>> What is the opinion of  Twisted developers??
>>
>
> Have you seen Deferred Generators, in twisted.internet.defer
> (deferredGenerator and waitForDeferred are relevant)? I'm planning on
> either adding support for PEP342-style generators to them, or writing
> an alternate implementation specifically for PEP342. I'm happy about
> PEP342, because it means I'll no longer have to install a buggy C
> extension module (greenlet) to get decent cooperative threading.
>
> This integration is very lightweight and doesn't require any mangling
> of the guts of Twisted.
>
> I'll just note that I am mostly alone amongst the developers of
> Twisted who think that this kind of cooperative threading + Deferred
> integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
> have all said it's a bad idea to have such magical code. On the other
> hand, it's definitely not as bad as pre-emptive threading, where you
> basically can't know where context switches will happen.

I think it's a good idea, so long as you know when to use it.  It's  
particularly useful when doing things that are inherently serial when  
you don't need the power of arbitrary call graphs hooked up to your  
asynchronous goodness.

-bob




From glyph at divmod.com  Wed Aug 17 20:30:23 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 17 Aug 2005 20:30:23 -0400
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <20050818003023.3914.874381586.divmod.quotient.5552@ohm>



On Thu, 18 Aug 2005 09:20:15 +1000, Christopher Armstrong <radeex at gmail.com> wrote:

>I'll just note that I am mostly alone amongst the developers of
>Twisted who think that this kind of cooperative threading + Deferred
>integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
>have all said it's a bad idea to have such magical code. On the other
>hand, it's definitely not as bad as pre-emptive threading, where you
>basically can't know where context switches will happen.

Perhaps my opinion has glacially shifted over time, (I think I've always thought this way) but it's a bit more nuanced than that.  I think that there is some merit to synchronous-looking code in some situations.  I've written some networking code recently that had indentation 10-deep; this PEP might have really helped with that.

I think it's a good thing in some situations and will probably reduce the length of some of the nastiest parts of my Q2Q implementation (AKA "Divmod Vertex") by at least half.  However, it is limiting - it still doesn't expose the full power of a cooperative threading system.  At the same time, it provides some of the same implicit-state facilities that create problems with those same cooperative thread systems.  Depending on how it's regarded by Twisted developers, it could give us the bbest of both worlds or the worst of them.

How it's regarded is important because that will affect how it's used.  I believe that in particularly hairy code, it will probably help, and reduce bugs (code that already has hugely nested functions, that needs to be audited by 3 or 4 people before it works at all).  However, in average code it will likely be a source of them, since it tends to reduce line count at the cost of explicit transfer of control.  Since people like code that looks blocking a *whole lot*, and are willing to forego the benefits of event-driven programming most of the time (and by "most of the time" I mean the 90% of the world that doesn't even use Twisted, or any other event driven system), I am a bit concerned that this PEP will catch on like wildfire and Twisted programs will get a reputation for being really buggy and never handling edge cases or out-of-order input correctly.

So please, use this and enahnce your Twisted programs with it, but please tread lightly.  It's a powerful tool but it is still (perhaps even therefore) dangerous.



From tv at twistedmatrix.com  Thu Aug 18 01:58:41 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 18 Aug 2005 08:58:41 +0300
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
Message-ID: <43042391.7080808@twistedmatrix.com>

Antoine Pitrou wrote:
> For what it's worth, I started writing a pure Python cooperative threads
> package, some weeks ago. It's called "softlets" and uses, of course,
> generators. There is a simple scheduler centered around the notion of
> "wait objects" - you yield a wait object (e.g. a Queue) and it comes
> back when the underlying condition is satisfied (e.g. the Queue has
> something to give to you).

You should look at Kamelia.



From radeex at gmail.com  Thu Aug 18 02:05:02 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 18 Aug 2005 16:05:02 +1000
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <43042391.7080808@twistedmatrix.com>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
	<43042391.7080808@twistedmatrix.com>
Message-ID: <60ed19d4050817230511cd1ae7@mail.gmail.com>

That's Kam*a*elia, unless you really are talking about a porn star. :)
(googling "kamelia python" was pretty interesting).

On 8/18/05, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> Antoine Pitrou wrote:
> > For what it's worth, I started writing a pure Python cooperative threads
> > package, some weeks ago. It's called "softlets" and uses, of course,
> > generators. There is a simple scheduler centered around the notion of
> > "wait objects" - you yield a wait object (e.g. a Queue) and it comes
> > back when the underlying condition is satisfied (e.g. the Queue has
> > something to give to you).
> 
> You should look at Kamelia.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From tazzo at email.it  Thu Aug 18 03:29:13 2005
From: tazzo at email.it (tazzo)
Date: Thu, 18 Aug 2005 09:29:13 +0200
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <430438C9.9070108@email.it>

Christopher Armstrong wrote:

>Have you seen Deferred Generators, in twisted.internet.defer
>(deferredGenerator and waitForDeferred are relevant)? I'm planning on
>either adding support for PEP342-style generators to them, or writing
>an alternate implementation specifically for PEP342.
>
Yes I saw it and I use it very often, this is why I made the question. 
When I write code
for a intensive and massive cooperation task, writing code in a 
synchronous-looking way
help to understand what happen.

> I'm happy about
>PEP342, because it means I'll no longer have to install a buggy C
>extension module (greenlet) to get decent cooperative threading.
>
>This integration is very lightweight and doesn't require any mangling
>of the guts of Twisted.
>
>  
>
:-)


-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o
protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di
e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente
proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione,
copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed
e' risultato NON infetto.





From solipsis at pitrou.net  Thu Aug 18 05:05:22 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 18 Aug 2005 11:05:22 +0200
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <60ed19d4050817230511cd1ae7@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
	<43042391.7080808@twistedmatrix.com>
	<60ed19d4050817230511cd1ae7@mail.gmail.com>
Message-ID: <1124355922.30550.4.camel@p-dvsi-395-20.rd.francetelecom.fr>


Le jeudi 18 ao?t 2005 ? 16:05 +1000, Christopher Armstrong a ?crit :
> That's Kam*a*elia, unless you really are talking about a porn star. :)
> (googling "kamelia python" was pretty interesting).

Thanks!
I didn't know Kamaelia. According to the simple example given here
(http://kamaelia.sourceforge.net/Docs/Axon.html), the programming
paradigm is not quite the same: with Kamaelia you explicitly link
producers and consumers together, whereas in my approach you just wait
on the shared object that represents the communication channel (this
object can be used by more than one reader and one writer, by the way).
This means a cooperative thread is more self-contained and doesn't need
external logic to be linked to other threads.

If you want a point of comparison, my approach is similar to that of
gtasklets (http://www.gnome.org/~gjc/gtasklet/gtasklets.html), except
that I don't use GTK at all - everything is done in plain Python.

regards

Antoine.





From garry at sage.att.com  Thu Aug 18 15:29:13 2005
From: garry at sage.att.com (Garry Hodgson)
Date: Thu, 18 Aug 2005 15:29:13 -0400 (EDT)
Subject: [Twisted-Python] passing command line args to twistd daemons
Message-ID: <2005081815281124393299@k2.sage.att.com>


i've got an application (invoked via: twistd -noy fpc.py) that i'd
like to use for multiple purposes by passing command line arguments.
when i do so, twistd objects that they are invalid arguments.  i'd
hoped for some magic arg that partitions the args into twistd
arguments and app arguments, something like:

    twist -noy fpc.py -- -x -y -z

but no such luck.

so, is there a way to accomplish this?  if not, what is the
preferred mechanism for customizing an application's
behavior at startup time?

thanks


----
Garry Hodgson, Technical Consultant, AT&T Labs

Your love, your anger, your kindness, your hate.
All of it creates the future for you and your children.
What kind of future are you creating today?



From itamar at itamarst.org  Thu Aug 18 15:42:09 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Aug 2005 15:42:09 -0400
Subject: [Twisted-Python] passing command line args to twistd daemons
In-Reply-To: <2005081815281124393299@k2.sage.att.com>
References: <2005081815281124393299@k2.sage.att.com>
Message-ID: <1124394130.8915.29.camel@localhost.localdomain>

On Thu, 2005-08-18 at 15:29 -0400, Garry Hodgson wrote:

> so, is there a way to accomplish this?  if not, what is the
> preferred mechanism for customizing an application's
> behavior at startup time?

Not at the moment. Two alternatives (not contradictory) we've been
considering:

1. Turn twistd into a library, so you can write your own command-line
tools reusing its functionality. Patches accepted, this should be a
pretty easy refactor.

2. Adding coil support to twistd and twisted in general
(http://itamarst.org/software/coil-0.1.1.tar.gz); in addition to the
general configuration power this gives you, coil files can also be
overridden by command-line tools in a generic way.


Short term, you could have the .tac point at a configuration file which
you could edit separately.





From sifu-twisted at 0xx0.net  Fri Aug 19 01:56:58 2005
From: sifu-twisted at 0xx0.net (Siegmund Fuehringer)
Date: Fri, 19 Aug 2005 07:56:58 +0200
Subject: [Twisted-Python] passing command line args to twistd daemons
In-Reply-To: <2005081815281124393299@k2.sage.att.com>
References: <2005081815281124393299@k2.sage.att.com>
Message-ID: <20050819055658.GA2996@x41.0xx0.net>

On Thu, Aug 18, 2005 at 03:29:13PM -0400, Garry Hodgson wrote:
> 
> i've got an application (invoked via: twistd -noy fpc.py) that i'd
> like to use for multiple purposes by passing command line arguments.
> when i do so, twistd objects that they are invalid arguments.  i'd
> hoped for some magic arg that partitions the args into twistd
> arguments and app arguments, something like:
> 
>     twist -noy fpc.py -- -x -y -z
> 
> but no such luck.
> 
> so, is there a way to accomplish this?  if not, what is the
> preferred mechanism for customizing an application's
> behavior at startup time?

i would use environment variables:
env "X=1" twistd -noy fpc.py

--
sifu



From ajchos at wp.pl  Fri Aug 19 09:56:17 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 19 Aug 2005 15:56:17 +0200
Subject: [Twisted-Python] Telnet & echo
Message-ID: <1124459777.2967.30.camel@localhost.localdomain>

I try to find a solution on google, but nothing I have found there
worked in my code. The situation is:
I have a telnet client. When I am sending a command to a server my
dataReceived loop gets a command I send and response. For example I send
a "pwd" command, and in dataReceived i got:
pwd
/home/user/
I want to have only response.
I try to send before sending command IAC WONT ECHO or send command
"unset echo" but I have still a command and response in dataReceived.
How to shutdown echo?




From dguaraglia at gmx.de  Fri Aug 19 10:13:00 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Fri, 19 Aug 2005 11:13:00 -0300
Subject: [Twisted-Python] Telnet & echo
In-Reply-To: <1124459777.2967.30.camel@localhost.localdomain>
References: <1124459777.2967.30.camel@localhost.localdomain>
Message-ID: <4305E8EC.1040508@gmx.de>

Hi Michal,

Well, it depends. If the server has a command to disable echo, then you 
should ask the server mantainer. In the case of a client side way to 
"disable" echo, there's a simple way: just save the last sent command in 
a string, and then ignore it as input in the dataReceived event. It's 
quite ugly but worked for me.

David

Micha? Tyde wrote:

>I try to find a solution on google, but nothing I have found there
>worked in my code. The situation is:
>I have a telnet client. When I am sending a command to a server my
>dataReceived loop gets a command I send and response. For example I send
>a "pwd" command, and in dataReceived i got:
>pwd
>/home/user/
>I want to have only response.
>I try to send before sending command IAC WONT ECHO or send command
>"unset echo" but I have still a command and response in dataReceived.
>How to shutdown echo?
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From foom at fuhm.net  Fri Aug 19 14:17:00 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Aug 2005 14:17:00 -0400
Subject: [Twisted-Python] Telnet & echo
In-Reply-To: <1124459777.2967.30.camel@localhost.localdomain>
References: <1124459777.2967.30.camel@localhost.localdomain>
Message-ID: <ED73E020-CD9A-41DE-A9F3-FDE89C4801BC@fuhm.net>

On Aug 19, 2005, at 9:56 AM, Micha? Tyde wrote:
> I try to find a solution on google, but nothing I have found there
> worked in my code. The situation is:
> I have a telnet client. When I am sending a command to a server my
> dataReceived loop gets a command I send and response. For example I  
> send
> a "pwd" command, and in dataReceived i got:
> pwd
> /home/user/
> I want to have only response.
> I try to send before sending command IAC WONT ECHO or send command
> "unset echo" but I have still a command and response in dataReceived.
> How to shutdown echo?

You want to send IAC DONT ECHO, to which the server should respond  
IAC WONT ECHO.

James




From xing at mac.com  Fri Aug 19 17:55:11 2005
From: xing at mac.com (xing at mac.com)
Date: Fri, 19 Aug 2005 14:55:11 -0700
Subject: [Twisted-Python] twisted.mail newbie question
Message-ID: <4306553F.2010303@mac.com>

Hi all,

I have read the twisted.mail.smtp source and ran the sample code 
(included below) in the debugger with break points and yet I still do 
not know where I can inject my code to handle actual message delivery 
where both the email message and all the recipients are available at one 
point in time.

The IMessageDelivery handler doesn't appear to see the message, and the 
IMessage only sees the message and not the recipients. As such, I'm 
thorughly confused. Very new to twisted and async programming model.

Thanks for any pointers.

I have written a basic smtp relayer wrapped around twisted smtp.sendmail 
using my own delivery queue and mx selection management and trying to 
put the last piece in: the smtp server which will hand off all incoming 
messages into my queues.


Xing Li


code
----------------------------------

from twisted.internet import defer
from twisted.protocols import smtp
from twisted.internet import reactor

class ConsoleMessageDelivery:
     __implements__ = (smtp.IMessageDelivery)

     def receivedHeader(self, helo, origin, recipients):
         for i in recipients:
             print i
         return "Received: ConsoleMessageDelivery"

     def validateFrom(self, helo, origin):
         # All addresses are accepted
         return origin

     def validateTo(self, user):
         # Only messages directed to the "console" user are accepted.
         #if user.dest.local == "console":
         return lambda: ConsoleMessage()

         #raise smtp.SMTPBadRcpt(user)

class ConsoleMessage:
     __implements__ = (smtp.IMessage,)

     def __init__(self):
         self.lines = []

     def lineReceived(self, line):
         self.lines.append(line)

     def eomReceived(self):
         print "New message received:"
         print "\n".join(self.lines)
         self.lines = None
         return defer.succeed(None)

     def connectionLost(self):
         # There was an error, throw away the stored lines
         self.lines = None

class ConsoleSMTPFactory(smtp.SMTPFactory):
     def __init__(self, *a, **kw):
         smtp.SMTPFactory.__init__(self, *a, **kw)
         self.delivery = ConsoleMessageDelivery()

     def buildProtocol(self, addr):
         p = smtp.SMTPFactory.buildProtocol(self, addr)
         p.delivery = self.delivery
         return p




if __name__ == '__main__':
     f = ConsoleSMTPFactory()

     reactor.listenTCP(25, f)
     reactor.run()




From exarkun at divmod.com  Sun Aug 21 09:04:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 21 Aug 2005 09:04:29 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14280 - Less fragile error
	checking.
In-Reply-To: <E1E6j6f-00067j-00@wolfwood>
Message-ID: <20050821130429.3914.1845873557.divmod.quotient.6493@ohm>

On Sun, 21 Aug 2005 00:14:57 -0600, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Sun Aug 21 00:14:54 2005
>New Revision: 14280
>
>Modified:
>   trunk/twisted/protocols/ftp.py
>Log:
>Less fragile error checking.
>
>Modified: trunk/twisted/protocols/ftp.py
>==============================================================================
>--- trunk/twisted/protocols/ftp.py	(original)
>+++ trunk/twisted/protocols/ftp.py	Sun Aug 21 00:14:54 2005
>@@ -598,7 +598,8 @@
>             if err.check(FTPCmdError):
>                 msg = RESPONSE[err.value.errorCode] % (err.value.errorMessage,)
>                 self.sendLine(msg)
>-            elif err.check(TypeError):
>+            elif (err.check(TypeError) and
>+                  err.value.args[0].find('takes exactly') != -1):
>                 self.reply(SYNTAX_ERR, "%s requires an argument." % (cmd,))
>             else:
>                 log.msg("Unexpected FTP error")
>

If you want to make it "less fragile", please use inspect.getargspec() to determine the number of arguments it expects.  Messages are likely to be changed or localized.

Jp



From exarkun at divmod.com  Sun Aug 21 09:06:25 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 21 Aug 2005 09:06:25 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14281 - Cope with integer
	owner/group info.
In-Reply-To: <E1E6j8C-00068H-00@wolfwood>
Message-ID: <20050821130625.3914.1041415014.divmod.quotient.6494@ohm>

On Sun, 21 Aug 2005 00:16:32 -0600, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Sun Aug 21 00:16:32 2005
>New Revision: 14281
>
>Modified:
>   trunk/twisted/protocols/ftp.py
>Log:
>Cope with integer owner/group info.
>
>Modified: trunk/twisted/protocols/ftp.py
>==============================================================================
>--- trunk/twisted/protocols/ftp.py	(original)
>+++ trunk/twisted/protocols/ftp.py	Sun Aug 21 00:16:32 2005
>@@ -370,8 +370,8 @@
>             'directory': directory and 'd' or '-',
>             'permissions': formatMode(permissions),
>             'hardlinks': hardlinks,
>-            'owner': owner[:8],
>-            'group': group[:8],
>+            'owner': str(owner)[:8],
>+            'group': str(group)[:8],
>             'size': size,
>             'date': formatDate(time.gmtime(modified)),
>             'name': name}

The interface doc string explicitly states 'owner' and 'group' here will already be strings.  I don't see any reason to widen the interface, but if you do, please update the documentation.

Jp



From Henning.Ramm at mediapro-gmbh.de  Sun Aug 21 17:29:23 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Sun, 21 Aug 2005 23:29:23 +0200
Subject: [Twisted-Python] twisted & pydispatcher?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>

Hi ho!

Would you recommend or discourage using pyDispatcher in a twisted application?
Are there any known traps?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From mcfletch at rogers.com  Sun Aug 21 18:16:18 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Sun, 21 Aug 2005 18:16:18 -0400
Subject: [Twisted-Python] twisted & pydispatcher?
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>
Message-ID: <4308FD32.5090801@rogers.com>

Henning.Ramm at mediapro-gmbh.de wrote:

>Hi ho!
>
>Would you recommend or discourage using pyDispatcher in a twisted application?
>Are there any known traps?
>  
>
We use PyDispatcher + Twisted extensively in Cinemon.  Thing to keep in 
mind is that PyDispatcher is *synchronous*, so if you have a large 
number of handlers/observers registered for a given event you could 
stall Twisted as you process the one event.  We often use a callLater( 
0, send ) pattern to move the event processing into its own "timeslice" 
for heavily-observed events.

Good luck,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From andrew-twisted at puzzling.org  Sun Aug 21 20:00:50 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 22 Aug 2005 10:00:50 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol wrapper
	which logs everything that goes through it
In-Reply-To: <E1E6r1t-0007XJ-00@wolfwood>
References: <E1E6r1t-0007XJ-00@wolfwood>
Message-ID: <20050822000050.GB2277@trogdor.home.puzzling.org>

On Sun, Aug 21, 2005 at 08:42:33AM -0600, Jp Calderone wrote:
> Author: exarkun
> Date: Sun Aug 21 08:42:33 2005
> New Revision: 14296
> 
> Modified:
>    trunk/twisted/protocols/policies.py
>    trunk/twisted/test/test_policies.py
> Log:
> protocol wrapper which logs everything that goes through it
> 
> Modified: trunk/twisted/protocols/policies.py
> ==============================================================================
> --- trunk/twisted/protocols/policies.py	(original)
> +++ trunk/twisted/protocols/policies.py	Sun Aug 21 08:42:33 2005
> @@ -428,6 +428,69 @@
>                               timeoutPeriod=self.timeoutPeriod)
>  
>  
> +class TrafficLoggingProtocol(ProtocolWrapper):
[...]

Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
Can they be combined?

-Andrew.
 



From jonathan.lange at gmail.com  Sun Aug 21 22:47:58 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Sun, 21 Aug 2005 19:47:58 -0700
Subject: [Twisted-Python] Trial: The Volunteering
Message-ID: <d06a5cd3050821194763afeb68@mail.gmail.com>

Hello Everyone.

I've been off-list for a while, but I am back.  As the original author
of Trial, I still feel partly responsible for it.  So, I would like to
become the official maintainer of Trial again.

I am _not_ planning on re-writing Trial.  Rather, I'm going to
restrict myself to fixing bugs, doing incremental refactorings to
clean-up the cruft and rejecting ideas for new features.

I've asked Jonathan Simms (slyphon) whether he would mind.  He is more
than happy for me to assume the mantle of Trial maintainer.

Let me know if there are any objections.  Otherwise, start assigning
trial bugs to me by default.

cheers,
jml



From tim at se.linux.org  Mon Aug 22 06:53:41 2005
From: tim at se.linux.org (Tim =?iso-8859-1?Q?Terleg=E5rd?=)
Date: Mon, 22 Aug 2005 12:53:41 +0200
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822105341.GA20205@kraftur.se.linux.org>

> I've been off-list for a while, but I am back.  As the original author
> of Trial, I still feel partly responsible for it.  So, I would like to
> become the official maintainer of Trial again.

Would you like to describe what Trial is? I have no clue and don't know
where to find those clues either.

Tim



From andrew-twisted at puzzling.org  Mon Aug 22 06:56:27 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 22 Aug 2005 20:56:27 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14281 - Cope with integer
	owner/group info.
In-Reply-To: <20050821130625.3914.1041415014.divmod.quotient.6494@ohm>
References: <E1E6j8C-00068H-00@wolfwood>
	<20050821130625.3914.1041415014.divmod.quotient.6494@ohm>
Message-ID: <20050822105627.GI2277@trogdor.home.puzzling.org>

On Sun, Aug 21, 2005 at 09:06:25AM -0400, Jp Calderone wrote:
[...]
> 
> The interface doc string explicitly states 'owner' and 'group' here will 
> already be strings.  I don't see any reason to widen the interface, but if 
> you do, please update the documentation.

You're right.  I've put it back in r14298, and put the str where it belongs
(in twisted.vfs.adapters.ftp).

-Andrew.




From glyph at divmod.com  Mon Aug 22 08:23:26 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 22 Aug 2005 08:23:26 -0400
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822122326.3914.86477952.divmod.quotient.6589@ohm>

On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:

>I would like to become the official maintainer of Trial again.

Excellent.  Please allow me to officially present you with the ceremonial lead albatross ;-).

I believe the main direction that Trial has to go in, to wit, removing all reactor-spinning calls, requires first that all Twisted unit tests which call wait() or deferredResult() or the like be converted to instead return Deferreds.

This is probably a pretty big effort so feel free to harrass individual project maintainers; but please consider coordinating that effort.



From exarkun at divmod.com  Mon Aug 22 08:35:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Aug 2005 08:35:39 -0400
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822123539.3914.2117396197.divmod.quotient.6593@ohm>

On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:
>Hello Everyone.
>
>I've been off-list for a while, but I am back.  As the original author
>of Trial, I still feel partly responsible for it.  So, I would like to
>become the official maintainer of Trial again.
>
>I am _not_ planning on re-writing Trial.  Rather, I'm going to
>restrict myself to fixing bugs, doing incremental refactorings to
>clean-up the cruft and rejecting ideas for new features.
>
>I've asked Jonathan Simms (slyphon) whether he would mind.  He is more
>than happy for me to assume the mantle of Trial maintainer.
>
>Let me know if there are any objections.  Otherwise, start assigning
>trial bugs to me by default.

I'd like to talk about any big changes you'd like to make before you make them.  Trial has recently almost become just barely usable, and I'd like to keep it from slipping back at all.

Also, there is some major refactoring/rewriting that is definitely required.  If you don't want to tackle these, that's fine, but someone's going to have to.

Jp



From ms at cerenity.org  Mon Aug 22 08:23:20 2005
From: ms at cerenity.org (Michael Sparks)
Date: Mon, 22 Aug 2005 13:23:20 +0100
Subject: [Twisted-Python] Possibly of interest
Message-ID: <200508221323.20083.ms@cerenity.org>

[ Please excuse me if this isn't of interest. I saw this and suspected that
 people here might be interested (whether agreed with or not) though - if
 it isn't, my apologies! ]

Hi,


I was forwarded a link to this paper just recently (and skimming the past
5-6 months of archives here it doesn't look like it's been posted to this
list). Since it looks interesting I thought I'd forward a copy to yourselves.

http://www.usenix.org/events/hotos03/tech/full_papers/vonbehren/vonbehren_html/index.html

Whilst the paper is a couple of years old, the comments are probably 
interesting because whilst it describes itself really as "threads are better 
than events" their implementation is based on C-Coroutine library (that 
doesn't use threads...) and suggests in its conclusions:

"In the future, we advocate tight integration between the compiler and the 
thread system, which will result in a programming model that offers a clean 
and simple interface to the programmer while achieving superior performance."

Which to me smacks of generators - which IMO can be viewed as just a different 
way of wrapping up the event stack. (Which doesn't entirely surprise me - one
of their influences listed in para 3 of the introduction was Inktomi's Traffic
Server - somewhere I worked before the BBC, and came to the same
conclusions they did. //Wrongly or rightly//, dunno :-)

(On an unrelated note: Tommi - after the discussions we had at Europython I 
came back and discussed general timelines for making our Kamaelia stuff work 
transparently with Twisted for an alpha stage. We came to the conclusion that 
we'd like to push that out to a 1.0.0 timeframe, which would probably be 
around a year from now. It gives us still the freedom in that respect to be 
able to answer "use twisted" when people ask us what they should use when 
using python for production servers :-) Also it means that /if/ we do achieve 
clean integration, that the answer won't change ;-)

Anyway, hopefully the paper is of interest (even if disagreed with!), if it 
isn't, my apologies!

Best Regards,


-- 
Michael Sparks, Senior R&D Engineer, Digital Media Group
Michael.Sparks at rd.bbc.co.uk, http://kamaelia.sourceforge.net/
British Broadcasting Corporation, Research and Development
Kingswood Warren, Surrey KT20 6NP

This e-mail may contain personal views which are not the views of the BBC.



From jonathan.lange at gmail.com  Mon Aug 22 10:28:53 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Tue, 23 Aug 2005 00:28:53 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
Message-ID: <d06a5cd305082207282e63e4be@mail.gmail.com>

On 22/08/05, Jp Calderone <exarkun at divmod.com> wrote:
> On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:
> >Hello Everyone.
> >
> >I am _not_ planning on re-writing Trial.  Rather, I'm going to
> >restrict myself to fixing bugs, doing incremental refactorings to
> >clean-up the cruft and rejecting ideas for new features.
> >
> >Let me know if there are any objections.  Otherwise, start assigning
> >trial bugs to me by default.
> 
> I'd like to talk about any big changes you'd like to make before you make them.  Trial has recently almost become just barely usable, and I'd like to keep it from slipping back at all.
> 
> Also, there is some major refactoring/rewriting that is definitely required.  If you don't want to tackle these, that's fine, but someone's going to have to.
> 

I do want to tackle them, but carefully and slowly.  Like you said,
Trial has reached a local optimum of utility.

I'm more than happy to discuss big changes.  I have a largish patch
that Robert Collins and I worked on at the .au sprint.  The changes
separate dry run from the main tree, and are a step towards separating
the code that runs tests from the code that finds tests.  Tell me
where you want it mailed.

jml



From itamar at itamarst.org  Mon Aug 22 11:23:20 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 22 Aug 2005 11:23:20 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol
	wrapper which logs everything that goes through it
In-Reply-To: <20050822000050.GB2277@trogdor.home.puzzling.org>
References: <E1E6r1t-0007XJ-00@wolfwood>
	<20050822000050.GB2277@trogdor.home.puzzling.org>
Message-ID: <1124724200.8782.22.camel@localhost.localdomain>

On Mon, 2005-08-22 at 10:00 +1000, Andrew Bennetts wrote:

> Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
> Can they be combined?

With some refactoring of the new code to make it more generic, yes. Open
an issue I guess?




From itamar at itamarst.org  Mon Aug 22 11:44:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 22 Aug 2005 11:44:37 -0400
Subject: [Twisted-Python] Possibly of interest
In-Reply-To: <200508221323.20083.ms@cerenity.org>
References: <200508221323.20083.ms@cerenity.org>
Message-ID: <1124725477.8782.30.camel@localhost.localdomain>

On Mon, 2005-08-22 at 13:23 +0100, Michael Sparks wrote:

> Which to me smacks of generators - which IMO can be viewed as just a different 
> way of wrapping up the event stack. (Which doesn't entirely surprise me - one
> of their influences listed in para 3 of the introduction was Inktomi's Traffic
> Server - somewhere I worked before the BBC, and came to the same
> conclusions they did. //Wrongly or rightly//, dunno :-)

I think that stackless (or greenlets) are closest to what they are
talking about in the Python domain. 

Because of the title of their paper, people who like kernel threads keep
quoting this paper as evidence (e.g. the C10K page), without bothering
to read it and noticing it's not about kernel threads. This is
annoying :)

As a counterargument to their claim one could point to growing need to
deal with multi-CPU machines, something their architecture doesn't
address. Also IIRC the gains in performance they got wouldn't
necessarily show up in something as slow as Python :) But I read that
paper a long time ago so maybe I'm misremembering or they address these
issues.




From nico at tekNico.net  Mon Aug 22 12:59:48 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 22 Aug 2005 18:59:48 +0200
Subject: [Twisted-Python] What about doctest support [was: Re: Trial: The
	Volunteering]
In-Reply-To: <20050822122326.3914.86477952.divmod.quotient.6589@ohm>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822122326.3914.86477952.divmod.quotient.6589@ohm>
Message-ID: <ded0a5$a9h$1@sea.gmane.org>

> I believe the main direction that Trial has to go in, to wit, removing
> all reactor-spinning calls, requires first that all Twisted unit tests
> which call wait() or deferredResult() or the like be converted to
> instead return Deferreds.

There's a couple of files in twisted.trial, doctest.py and tdoctest.py .
The first looks like a patched version of the stdlib one. What about
present and/or future support for writing tests in doctest format?

-- 
Nicola Larosa - nico at tekNico.net

PHP is such a load of crap, right down to the standard library, that it
creates a culture where it's acceptable to write horrible code. [...]
Maybe with PHP 5 they are trying to clean up the neighborhood, but that
doesn't change the fact when you program in PHP you are programming in
a dump. -- Ian Bicking, July 2005




From jarrod.roberson at gmail.com  Mon Aug 22 13:16:29 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 22 Aug 2005 13:16:29 -0400
Subject: [Twisted-Python] Possibly of interest
In-Reply-To: <200508221323.20083.ms@cerenity.org>
References: <200508221323.20083.ms@cerenity.org>
Message-ID: <2389d47305082210162fa9fb3c@mail.gmail.com>

On 8/22/05, Michael Sparks <ms at cerenity.org> wrote:
> 
> [ Please excuse me if this isn't of interest. I saw this and suspected 
> that
> people here might be interested (whether agreed with or not) though - if
> it isn't, my apologies! ]
> 
> Hi,
> 
> 
> I was forwarded a link to this paper just recently (and skimming the past
> 5-6 months of archives here it doesn't look like it's been posted to this
> list). Since it looks interesting I thought I'd forward a copy to 
> yourselves.
> 
> 
> http://www.usenix.org/events/hotos03/tech/full_papers/vonbehren/vonbehren_html/index.html
> 

you have to take this paper in CONTEXT of the previous paper tha one of 
these same authors wrote about a year earlier.
The SEDA paper -> 
http://www.google.com/url?sa=t&ct=res&cd=5&url=http%3A//www.eecs.harvard.edu/%7Emdw/papers/seda-sosp01.pdf&ei=IQcKQ6ilLMPc4QGu0rGXDg

Where they come to the exact OPPOSITE conclusion :-)

It is all good reading!

They are NOT promoting threads as much as they are promoting a better 
scheduler for threads. Which is what SEDA ( and Twisted ) provide with the 
event driven model. 

Their basic conclusion is that EXISTING threading implementations are too 
general/generic and a more specialized scheduler that is way more effiecent 
would make Threaded programs scale better AND have the more friendly Thread 
style interface.

Until someone picks up thair Carpaccio project and make it produciton 
worthy, we will probably just have to keep dealing with the complexity of 
event driven async programming idioms like Twisted.

-- 
If you don't know what you want, you probably need a nap.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050822/a5ddcd1f/attachment.htm 

From mary-twisted at puzzling.org  Mon Aug 22 17:22:25 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:22:25 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd305082207282e63e4be@mail.gmail.com>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
	<d06a5cd305082207282e63e4be@mail.gmail.com>
Message-ID: <20050822212225.GB15924@sourdust.home.puzzling.org>

On Tue, Aug 23, 2005, Jonathan Lange wrote:
> I'm more than happy to discuss big changes.  I have a largish patch
> that Robert Collins and I worked on at the .au sprint.  The changes
> separate dry run from the main tree, and are a step towards separating
> the code that runs tests from the code that finds tests.  Tell me
> where you want it mailed.

Not that it's likely that I personally will be reviewing it in any shape
or form, but why not move it onto a subversion branch? I gather people
are slowly moving in that direction, and it does at least potentially
allow people to call "halt this madness!" when they see your commits
rather than when they see a big change land in trunk.

(It might also be useful eventually to be able to specify that the
buildbot tests run over at least some branches?)

-Mary



From mary-twisted at puzzling.org  Mon Aug 22 17:27:22 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:27:22 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822105341.GA20205@kraftur.se.linux.org>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822105341.GA20205@kraftur.se.linux.org>
Message-ID: <20050822212722.GC15924@sourdust.home.puzzling.org>

On Mon, Aug 22, 2005, Tim Terleg?rd wrote:
> Would you like to describe what Trial is? I have no clue and don't know
> where to find those clues either.

It's the Twisted unit testing framework. API documentation is available
at [1]

What other documentation there is seems to be in the Testing Standard
HOWTO at [2]

-Mary

[1] http://twistedmatrix.com/documents/current/api/twisted.trial.html
[2] http://twistedmatrix.com/projects/core/documentation/howto/policy/test-standard.html



From mary-twisted at puzzling.org  Mon Aug 22 17:33:07 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:33:07 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822212225.GB15924@sourdust.home.puzzling.org>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
	<d06a5cd305082207282e63e4be@mail.gmail.com>
	<20050822212225.GB15924@sourdust.home.puzzling.org>
Message-ID: <20050822213307.GE15924@sourdust.home.puzzling.org>

On Tue, Aug 23, 2005, Mary Gardiner wrote:
> Not that it's likely that I personally will be reviewing it in any shape
> or form, but why not move it onto a subversion branch?

This does have the disadvantage that you'd need to find a good way to
commit Robert's changes to the branch if he does any more work on it.
Andrew had at least some kind of way to make Subversion and bzr
sandboxes co-exist, it might have been more or less as simple as having
.bzr and .svn directories in the same sandbox.

-Mary



From mary-twisted at puzzling.org  Mon Aug 22 17:50:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:50:13 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.
	Let's keep this file simple, please.
In-Reply-To: <E1DQ4bg-0007iQ-00@wolfwood>
References: <E1DQ4bg-0007iQ-00@wolfwood>
Message-ID: <20050822215013.GB17669@sourdust.home.puzzling.org>

On Mon, Apr 25, 2005, Glyph Lefkowitz wrote:
> Modified:
>    trunk/LICENSE
> Log:
> No, consigning copyright means it is _not_ (C) you.  Let's keep this file simple, please.

[snip]

> +Copyright (c) 2004,2005 Twisted Matrix Labs, http://www.twistedmatrix.com/
> +(except as listed below)
>  
>  Permission is hereby granted, free of charge, to any person obtaining
>  a copy of this software and associated documentation files (the
> @@ -47,4 +23,5 @@
>  Copyright Exceptions:
> -
> +	- Portions copyright Massachusetts Institute of Technology, due to
> +	  contributions of staff and students.

I was reminded at the sprint that I needed to ask about this. My
understanding of the license policy was as per
http://twistedmatrix.com/bugs/issue903 -- ie, that the *only* thing
commiters needed to do was to MIT license their contributions. This is
all that http://twistedmatrix.com/developers/contributing currently
states. Therefore, that was what I'd been getting people who
contributed documentation to agree to, and that was my understanding of
the licencing and copyright of my own contributions as of the date when
the MIT licensing of Twisted began.

If the current policy is that copyright must be consigned to an entity
called "Twisted Matrix Labs", then this policy needs to be confirmed,
restored to the webpage, and the status of all contributions at least
since the website change and probably since the licence change needs to
be confirmed with individual contributors. Also, my own network of
nebulous legal advice from dubious sources suggests that Australian
contributors might want to seek legal advice about how to do copyright
consignment: it was suggested to me that the status of your moral right
to be identified as author needs to be firmly nailed down for the
consignment to have any validity whatsoever.

-Mary



From exarkun at divmod.com  Mon Aug 22 18:31:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Aug 2005 18:31:47 -0400
Subject: [Twisted-Python] What about doctest support [was: Re: Trial: The
	Volunteering]
In-Reply-To: <ded0a5$a9h$1@sea.gmane.org>
Message-ID: <20050822223147.3914.691809055.divmod.quotient.6775@ohm>

On Mon, 22 Aug 2005 18:59:48 +0200, Nicola Larosa <nico at teknico.net> wrote:
>> I believe the main direction that Trial has to go in, to wit, removing
>> all reactor-spinning calls, requires first that all Twisted unit tests
>> which call wait() or deferredResult() or the like be converted to
>> instead return Deferreds.
>
>There's a couple of files in twisted.trial, doctest.py and tdoctest.py .
>The first looks like a patched version of the stdlib one. What about
>present and/or future support for writing tests in doctest format?

It's a mess.  I think it should be removed.  A future version of trial might have support added in a more maintainable fashion.

Jp



From andrew-twisted at puzzling.org  Mon Aug 22 19:33:34 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 23 Aug 2005 09:33:34 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol wrapper
	which logs everything that goes through it
In-Reply-To: <1124724200.8782.22.camel@localhost.localdomain>
References: <E1E6r1t-0007XJ-00@wolfwood>
	<20050822000050.GB2277@trogdor.home.puzzling.org>
	<1124724200.8782.22.camel@localhost.localdomain>
Message-ID: <20050822233334.GJ2277@trogdor.home.puzzling.org>

On Mon, Aug 22, 2005 at 11:23:20AM -0400, Itamar Shtull-Trauring wrote:
> On Mon, 2005-08-22 at 10:00 +1000, Andrew Bennetts wrote:
> 
> > Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
> > Can they be combined?
> 
> With some refactoring of the new code to make it more generic, yes. Open
> an issue I guess?

Done: http://twistedmatrix.com/bugs/issue1150

-Andrew.




From solipsis at pitrou.net  Tue Aug 23 07:37:20 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 23 Aug 2005 13:37:20 +0200
Subject: [Twisted-Python] moral rights
In-Reply-To: <20050822215013.GB17669@sourdust.home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
Message-ID: <1124797040.29527.27.camel@p-dvsi-395-20.rd.francetelecom.fr>


Just my 2 cents...

> Also, my own network of
> nebulous legal advice from dubious sources suggests that Australian
> contributors might want to seek legal advice about how to do copyright
> consignment: it was suggested to me that the status of your moral right
> to be identified as author needs to be firmly nailed down for the
> consignment to have any validity whatsoever.

In many continental Europe countries as well (including France), moral
rights of the author can't be given away - they are "fundamental rights"
of the author. For software, it mainly includes the right to be
mentioned and recognized as an author (or co-author).

Personally, I'm not quite convinced of the validity of copyright
assignments on a multi-national scale. There probably are very specific
(legal) wording requirements to be met that a free software project
can't afford to deal with. Of course, as long as the author doesn't try
to oppose and nullify the copyright assignment, there's no real problem.

(I know, GNU does it. But that still doesn't convince me, although I'm
rather pro-copyleft and pro-FSF ;-))

Regards

Antoine.





From gns24 at sphinx.mythic-beasts.com  Tue Aug 23 08:17:40 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Tue, 23 Aug 2005 13:17:40 +0100 (BST)
Subject: [Twisted-Python] twistd and SqlObject
Message-ID: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>

I'm sure the answer to this question should be obvious, but I can't find
it.

I've written a twisted server which recieves a request, looks up the
requested data in its cache, and returns the data.  It accesses its
database via SQLObject - the database is small, so I don't care that it
blocks.  Twisted has certainly made this very simple.

I now want to run that same process using twistd (-noy), but SqlObject
gives the error
Failed to load application: 'NoneType' object has no attribute
'tableExists'

on the last line of the listing below, which works fine when run normally.

I guess I'm being very naive about the way in which twistd works, but I
can't find any comprehensive documentation saying what it does.

Thanks for any pointers,

Graham



import _mysql_exceptions
from elementtree.ElementTree import Element, SubElement, ElementTree,
parse
from twisted.internet import reactor
from twisted.web import server
from twisted.web.resource import Resource
from twisted.web.client import getPage
from cStringIO import StringIO
import sqlobject
import datetime
now = datetime.datetime.now

cacheDurationDays = 90
__connection__ = sqlobject.MySQLConnection(host='localhost',
db='DomainInfoCache',
                                           user='root', passwd='chubchub')

class CachedDomain(sqlobject.SQLObject):
    """The table that the data is cached in"""
    domain = sqlobject.StringCol(length=80)
    alexa3monthtraffic = sqlobject.FloatCol()
    lastUpdate = sqlobject.DateTimeCol()
    domainIndex = sqlobject.DatabaseIndex({'column':domain, 'length':8})

CachedDomain.createTable(ifNotExists=True)



From dialtone at divmod.com  Tue Aug 23 08:46:45 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Tue, 23 Aug 2005 14:46:45 +0200
Subject: [Twisted-Python] twistd and SqlObject
In-Reply-To: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>
References: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>
Message-ID: <430B1AB5.2020305@divmod.com>

Graham Stratton wrote:

>I guess I'm being very naive about the way in which twistd works, but I
>can't find any comprehensive documentation saying what it does.
>  
>
This is mostly a problem with the way you use tac files.

>Thanks for any pointers,
>  
>
Avoid putting everything in one file.
The .tac file is not really a module and it's 'execfile'd.
Change the code to have everything except a very simple and declarative
configuration code inside
the tac file and put everything else in a separate module. It should
work then.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4.1
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From hikenboots at gmail.com  Tue Aug 23 12:33:35 2005
From: hikenboots at gmail.com (J French)
Date: Tue, 23 Aug 2005 11:33:35 -0500
Subject: [Twisted-Python] Making a Persistent SSH connection w/ Conch - How?
Message-ID: <35b7725f0508230933694036f4@mail.gmail.com>

I'm trying to design a ssh client that establishes a connection that
it persistent until I close it so that I can use it for constant
bi-directional communication.  I want it to act like a shell with a
gui top of it (wxPython).  I think I need to keep a channel open
continuously to effect this.  This is my first attempt at using ssh so
I'm probably missing some important paradigms here, please fill me in
if possible.  I grabbed the the sshsimpleclient.py code from
http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleclient.py
 and modified (to test the behavior):

    def closed(self):
        print 'got data from cat: %s' % repr(self.data)
        #self.loseConnection()
        #reactor.stop()

The server connection still closes as soon as I receive the callback
data. I'm using freebsd and it works as advertised (I see the
connection in auth.log but of course, its closed before I can 'who'
and check it out)  Any advice on the right way to get started would be
appreciated!

-John



From bbum at mac.com  Tue Aug 23 16:47:13 2005
From: bbum at mac.com (Bill Bumgarner)
Date: Tue, 23 Aug 2005 13:47:13 -0700
Subject: [Twisted-Python] FileSender stability.
Message-ID: <FC0151E5-DD07-4232-A1F1-C0E527027263@mac.com>

I'm in need of moving data between various LineReceiver based  
instances.   So far, this has proved to be as easy as sending a line  
with the # of bytes of raw data to be sent, throwing the receiver  
into raw mode, and receiving said bytes.

No problem.

Now I'm about to start sending files between LineReceiver  
instances.   I could certainly do this by writing a bunch of code.   
Well, not that much code (it seems that most of the challenge of  
using Twisted is figuring out what code not to write!).

However, there is the wonderful class called "FileSender" that seems  
to do 1/2 of exactly what I need to do;  send a file.  However, the  
documentation for the class indicates that it will "at some point" do  
what I want and that the API is stable.

So -- should I bother using the FileSender class or roll my own?

thanks,
b.bum

(BTW:  Twisted has to be one of the coolest pieces of software I have  
worked with in a very, very long time.)




From tv at twistedmatrix.com  Wed Aug 24 00:29:34 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 24 Aug 2005 07:29:34 +0300
Subject: [Twisted-Python] Making a Persistent SSH connection w/ Conch
	- How?
In-Reply-To: <35b7725f0508230933694036f4@mail.gmail.com>
References: <35b7725f0508230933694036f4@mail.gmail.com>
Message-ID: <430BF7AE.5020201@twistedmatrix.com>

J French wrote:
> if possible.  I grabbed the the sshsimpleclient.py code from
> http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleclient.py
>  and modified (to test the behavior):
> 
>     def closed(self):
>         print 'got data from cat: %s' % repr(self.data)
>         #self.loseConnection()
>         #reactor.stop()
> 
> The server connection still closes as soon as I receive the callback
> data. I'm using freebsd and it works as advertised (I see the

Of course it closes, that's what the client side is programmed to do.

    def channelOpen(self, ignoredData):
        self.data = ''
        d = self.conn.sendRequest(self, 'exec', common.NS('cat'),
wantReply = 1)
        d.addCallback(self._cbRequest)

    def _cbRequest(self, ignored):
        self.write('hello conch\n')
        self.conn.sendEOF(self)

Maybe sending EOF isn't the smartest move if you want to keep the thing
open..



From jonathan.lange at gmail.com  Wed Aug 24 02:35:18 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Wed, 24 Aug 2005 16:35:18 +1000
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
Message-ID: <d06a5cd3050823233526060f78@mail.gmail.com>

Hello,

Trial currently does some black magic to support remote reporters,
defined in t.trial.remote.  What use cases does t.trial.remote
implement?  Does anyone actually use it?

Rumour has it that it was originally written to make buildbot easier
to write.  However, I'm told that buildbot just parses stdio output.

Let me know if you use it.  If you don't, I'll remove the code (in my
branch) at my next hacking session :)

cheers,
jml



From gns24 at sphinx.mythic-beasts.com  Wed Aug 24 07:31:33 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Wed, 24 Aug 2005 12:31:33 +0100 (BST)
Subject: [Twisted-Python] twisted.news
In-Reply-To: <d06a5cd3050823233526060f78@mail.gmail.com>
References: <d06a5cd3050823233526060f78@mail.gmail.com>
Message-ID: <Pine.LNX.4.58.0508241224470.27796@sphinx.mythic-beasts.com>

Hi, I'd like to try out twisted.news, but the documentation seems to be
missing at the moment.

Also on running setup.py I get the warning

package init file 'twisted/plugins/__init__.py' not found (or not a
regular file)

Can I just ignore it?

Many thanks for the support,

Graham



From hikenboots at gmail.com  Wed Aug 24 09:36:20 2005
From: hikenboots at gmail.com (J French)
Date: Wed, 24 Aug 2005 08:36:20 -0500
Subject: [Twisted-Python] Accessing shell over a pseudo terminal via
	conch/ssh Totally lost...
Message-ID: <35b7725f0508240636cfec497@mail.gmail.com>

I am trying to get access to bash on freebsd from a pty using
ssh/conch.  I can't find information on this; I've googled for two
days now.  Seems like something that would be frequently done.  I have
played with sshsimpleclient.py and it works as advertised but I don't
understand how to open a pty for continuous access to the shell.  Can
anyone shed some light on this for me?

Thanks in advance,
JF



From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 14:10:44 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 24 Aug 2005 20:10:44 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>

If my server app crashes, it often leaves its ports open, so that I get a CannotListenError 'Address already in use'.
(I'm on Win2k.)
Is there any possibility to set this address free other than re-logon the user?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Wed Aug 24 14:27:31 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 14:27:31 -0400
Subject: [Twisted-Python] CannotListenError
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>
Message-ID: <1124908051.8545.39.camel@localhost.localdomain>

On Wed, 2005-08-24 at 20:10 +0200, Henning.Ramm at mediapro-gmbh.de wrote:
> If my server app crashes, it often leaves its ports open, so that I get a CannotListenError 'Address already in use'.
> (I'm on Win2k.)

SO_REUSEADDR is supposed to allow this. I think I disabled that for TCP
on windows as it caused some failing tests, but in retrospect those
tests are probably less important than the actual functionality it
provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
me.




From bgranger at scu.edu  Wed Aug 24 14:58:46 2005
From: bgranger at scu.edu (Brian Granger)
Date: Wed, 24 Aug 2005 11:58:46 -0700
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
Message-ID: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>

Hello,,

I am designing and implementing a custom protocol using Twisted.  I  
have wanted to design the protocol to use int 32 prefixed strings.  I  
wrote a test version of my server using Twisted's Int32StringReceiver  
protocol class but it seemed really slow.  To test this out I have  
written and tested two echo servers: one that uses LineReceiver and  
one that uses Int32StringReceiver.  I have benchmarked both of these  
echo servers by making multiple connections to each.  I find that the  
LineReceiver based echo server is about 200 times as fast as the  
Int32StringReceiver!

Is the Int32StringReceiver really that slow?  Why?  What am I  
missing?  Are there hidden assumptions that I am missing?  Can it be  
made faster?

Thanks in advance!

Brian





From itamar at itamarst.org  Wed Aug 24 15:14:47 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 15:14:47 -0400
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
In-Reply-To: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
References: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
Message-ID: <1124910887.8545.44.camel@localhost.localdomain>

On Wed, 2005-08-24 at 11:58 -0700, Brian Granger wrote:

> Is the Int32StringReceiver really that slow?  Why?  What am I  
> missing?  Are there hidden assumptions that I am missing?  Can it be  
> made faster?

There were some optimizations made to LineReceiver that weren't made to
Int32StringReceiver, so that may be it.




From bgranger at scu.edu  Wed Aug 24 15:22:37 2005
From: bgranger at scu.edu (Brian Granger)
Date: Wed, 24 Aug 2005 12:22:37 -0700
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
In-Reply-To: <1124910887.8545.44.camel@localhost.localdomain>
References: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
	<1124910887.8545.44.camel@localhost.localdomain>
Message-ID: <D93F6026-16E6-423F-8BE7-C340819B91EA@scu.edu>


On Aug 24, 2005, at 12:14 PM, Itamar Shtull-Trauring wrote:

> On Wed, 2005-08-24 at 11:58 -0700, Brian Granger wrote:
>
>
>> Is the Int32StringReceiver really that slow?  Why?  What am I
>> missing?  Are there hidden assumptions that I am missing?  Can it be
>> made faster?
>>
>
> There were some optimizations made to LineReceiver that weren't  
> made to
> Int32StringReceiver, so that may be it.
>
>

OK, thanks.  I will probably just use a line based approach then.   
Unless I find time to optimize Int32StringReceiver myself....
Until Int32StringReceiver gets optimized, it might make sense to  
document the fact that it could be very slow compared with LineReceiver.

Brian

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 16:35:21 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 24 Aug 2005 22:35:21 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>

>provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
>me.

I would like, but I cannot - I got no mail regarding my login.
Must someone handle that manually?

HR



From itamar at itamarst.org  Wed Aug 24 16:52:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 16:52:21 -0400
Subject: [Twisted-Python] CannotListenError
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>
Message-ID: <1124916741.8545.48.camel@localhost.localdomain>

On Wed, 2005-08-24 at 22:35 +0200, Henning.Ramm at mediapro-gmbh.de wrote:
> >provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
> >me.
> 
> I would like, but I cannot - I got no mail regarding my login.
> Must someone handle that manually?

Probably not; have you tried just logging in with the username and
password you gave?




From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 18:09:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 25 Aug 2005 00:09:38 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB53B@exchange-03.suedkurier.de>

>> I would like, but I cannot - I got no mail regarding my login.
>> Must someone handle that manually?
>Probably not; have you tried just logging in with the username and
>password you gave?

That didn't work. I registered again, and it worked. Issue opened.
Thank you!

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From alengarbage at yahoo.com  Wed Aug 24 18:57:54 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 24 Aug 2005 15:57:54 -0700 (PDT)
Subject: [Twisted-Python] URL length limits in twisted
Message-ID: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>

I'm noticing silent failures using HTTPClientFactory
with len(url) >= 16400.  The factory's deferred object
immediately calls its associated callBack() method
without sending any data  (the server is likewise
written with twisted python, but it doesn't appear to
ever receive data).  The errorBack() doesn't fire,
either.

A url with len <= 16398 works just fine, firing the
callback /after/ sending the data.

According to RFC 2616, arbitrary length URLs are
allowed by HTTP, but I understand that there are
practical limitations in many implementations.  Is the
16400 url-length ceiling a known limitation in
twisted, or am I banging up against something else?

thanks,
Lenny


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 



From alengarbage at yahoo.com  Wed Aug 24 23:28:16 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 24 Aug 2005 20:28:16 -0700 (PDT)
Subject: [Twisted-Python] Re: URL length limits in twisted [wrong list]
Message-ID: <20050825032816.65388.qmail@web31510.mail.mud.yahoo.com>

Argh.  Sorry, thought I was posting to twisted-web. 
Please forgive and ignore.

- Lenny


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 



From rabs at dimension-virtual.com  Wed Aug 24 18:15:38 2005
From: rabs at dimension-virtual.com (=?iso-8859-1?q?Ra=FAl_Alexis_Betancor_Santana?=)
Date: Wed, 24 Aug 2005 23:15:38 +0100
Subject: [Twisted-Python] URL length limits in twisted
In-Reply-To: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>
References: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>
Message-ID: <200508242315.39217.rabs@dimension-virtual.com>

El Mi?rcoles, 24 de Agosto de 2005 23:57, Lenny G Arbage escribi?:
> I'm noticing silent failures using HTTPClientFactory
> with len(url) >= 16400.  The factory's deferred object
> immediately calls its associated callBack() method
> without sending any data  (the server is likewise
> written with twisted python, but it doesn't appear to
> ever receive data).  The errorBack() doesn't fire,
> either.
>
> A url with len <= 16398 works just fine, firing the
> callback /after/ sending the data.
>
> According to RFC 2616, arbitrary length URLs are
> allowed by HTTP, but I understand that there are
> practical limitations in many implementations.  Is the
> 16400 url-length ceiling a known limitation in
> twisted, or am I banging up against something else?

Wooooooohhh!! .. more than 16400 chars for an URL !! ..., thats more than 16K 
request send to the server ...
Maybe I'm wrong but, are you using the GET method ?, if so change it and use 
the PUT one and try again. As far as I know most of http protocol 
implementations have that kind of limitations on the GET method, but I could 
be wrong, I dont know enought about twisted to tell you.

Best regards



From exarkun at divmod.com  Thu Aug 25 01:35:11 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 25 Aug 2005 01:35:11 -0400
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <d06a5cd3050823233526060f78@mail.gmail.com>
Message-ID: <20050825053511.3914.1560123285.divmod.quotient.8037@ohm>

On Wed, 24 Aug 2005 16:35:18 +1000, Jonathan Lange <jonathan.lange at gmail.com> wrote:
>Hello,
>
>Trial currently does some black magic to support remote reporters,
>defined in t.trial.remote.  What use cases does t.trial.remote
>implement?  Does anyone actually use it?
>
>Rumour has it that it was originally written to make buildbot easier
>to write.  However, I'm told that buildbot just parses stdio output.
>
The reporter API should support Deferreds, but twisted.trial.remote doesn't do anything.  I don't see any reason not to delete it (it should have been deleted when all its functionality was removed).

>Let me know if you use it.  If you don't, I'll remove the code (in my
>branch) at my next hacking session :)
>

Be careful about letting that branch get too big or too old.  The smaller it is, the easier it will be to review and merge into trunk.  The younger it is, the less the chance it will conflict with other changes.

Jp



From jonathan.lange at gmail.com  Thu Aug 25 02:05:00 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Thu, 25 Aug 2005 16:05:00 +1000
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <20050825053511.3914.1560123285.divmod.quotient.8037@ohm>
References: <d06a5cd3050823233526060f78@mail.gmail.com>
	<20050825053511.3914.1560123285.divmod.quotient.8037@ohm>
Message-ID: <d06a5cd305082423053d04b7ce@mail.gmail.com>

On 25/08/05, Jp Calderone <exarkun at divmod.com> wrote:
> On Wed, 24 Aug 2005 16:35:18 +1000, Jonathan Lange <jonathan.lange at gmail.com> wrote:
> >Trial currently does some black magic to support remote reporters,
> >defined in t.trial.remote.  What use cases does t.trial.remote
> >implement?  Does anyone actually use it?
> >
> The reporter API should support Deferreds, but twisted.trial.remote doesn't do anything.  I don't see any reason not to delete it (it should have been deleted when all its functionality was removed).

No worries.  Still, can you please provide a use case?  
 
> >Let me know if you use it.  If you don't, I'll remove the code (in my
> >branch) at my next hacking session :)
> >
> 
> Be careful about letting that branch get too big or too old.  The smaller it is, the easier it will be to review and merge into trunk.  The younger it is, the less the chance it will conflict with other changes.
> 

Good call.  I think its ready to go in as it stands.   Please review
it (anyone).

As far as I can tell, the only API change is that setUpReporter and
tearDownReporter are now assumed to be synchronous.

thanks,
jml



From sflist at ihonk.com  Thu Aug 25 09:57:44 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 07:57:44 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
Message-ID: <1124978264.18072.7.camel@localhost.localdomain>

Hi,

In some cases I need to force a client to disconnect. Is there some
factory call that I can use to do this? On the client side, I know I can
use factory._broker.transport.loseConnection(), but on the server side,
though I've looked at the source a bit, I'm not sure how to get at the
correct transport.

Thanks!

Steve




From dguaraglia at gmx.de  Thu Aug 25 10:12:22 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 11:12:22 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <430DD1C6.3050801@gmx.de>

Hi Steve,

It depends, if you decide you should disconnect the client while 
processing data in the Protocol, then you can just 
"self.transport.loseConnection()".

(e.g):
class MyProt(Protocol):
    dataReceived(data):
       if data <> "hello":
          self.transport.loseConnection()
       else:
          ....

So the most important question is: where do you decide that you should 
disconnect the client?

Hope this helps,

David

Steve Freitas wrote:

>Hi,
>
>In some cases I need to force a client to disconnect. Is there some
>factory call that I can use to do this? On the client side, I know I can
>use factory._broker.transport.loseConnection(), but on the server side,
>though I've looked at the source a bit, I'm not sure how to get at the
>correct transport.
>
>Thanks!
>
>Steve
>  
>




From sflist at ihonk.com  Thu Aug 25 10:35:30 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 08:35:30 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DD1C6.3050801@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<430DD1C6.3050801@gmx.de>
Message-ID: <1124980531.25858.2.camel@localhost.localdomain>

Hi David,

Thanks for the reply. I'm aware of using loseConnection() from inside
the protocol, but I'm using PBServerFactory. So I'm looking for a way to
choose an arbitrary PB client that's already connected and logged in
(cred) through that factory and kill the connection -- in other words,
of all the clients that may be connected to that factory, I need to know
how to get the transport that I want, so I can call loseConnection() on
it.

If I need to subclass PBServerFactory, that's fine, but I'm hoping to
find something a little more direct.

Thanks,

Steve

On Thu, 2005-08-25 at 11:12 -0300, David Guaraglia wrote:
> Hi Steve,
> 
> It depends, if you decide you should disconnect the client while 
> processing data in the Protocol, then you can just 
> "self.transport.loseConnection()".
> 
> (e.g):
> class MyProt(Protocol):
>     dataReceived(data):
>        if data <> "hello":
>           self.transport.loseConnection()
>        else:
>           ....
> 
> So the most important question is: where do you decide that you should 
> disconnect the client?
> 
> Hope this helps,
> 
> David
> 
> Steve Freitas wrote:
> 
> >Hi,
> >
> >In some cases I need to force a client to disconnect. Is there some
> >factory call that I can use to do this? On the client side, I know I can
> >use factory._broker.transport.loseConnection(), but on the server side,
> >though I've looked at the source a bit, I'm not sure how to get at the
> >correct transport.
> >
> >Thanks!
> >
> >Steve
> >  
> >
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From psanchez at nortel.com  Thu Aug 25 10:10:50 2005
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 25 Aug 2005 10:10:50 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
Message-ID: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>

Hello,

I need to implement a function (say, myfunc) that fires several
independent Deferreds (using deferToThread), and that returns a deferred
itself. A client of this function (say, client) is expected to do
something like this:

def client():
    def done(success)
        if success:
           print 'd1 and d2 are done'

    d = myfunc()
    d.addCallback(done)
    ...


myfuct() above does something like this:

def myfunc():
    def checkFunc1(success):
    ...

    def checkFunc2(success):
    ...

    d = defer.Deferred()
    d1 = deferToThread(func1).addCallback(checkFunc1)
    d2 = deferToThread(func2).addCallback(checkFunc2)
    d.addCallback(????)

    return d

Clearly d, d1, and d2 in the above are disconnected. And I don't want to
serialize d1 and d2 which would be a way to connect them all.

The problem is I don't know how d should be defined. The idea is that
the 'done' function in the client function is only called when both
threads d1 and d2 are done.

Can you give me any suggestions on how to implement myfunc()?

Thank you,

-- 
Pedro






From sflist at ihonk.com  Thu Aug 25 10:51:45 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 08:51:45 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <1124981505.28176.2.camel@localhost.localdomain>

Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
arguments of requestAvatar(), the logical place to find the broker has
to be in the mind." And whaddya know, there it is. Lovely. Thanks,
Glyph!

Steve




From dguaraglia at gmx.de  Thu Aug 25 11:02:21 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 12:02:21 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124980531.25858.2.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>	<430DD1C6.3050801@gmx.de>
	<1124980531.25858.2.camel@localhost.localdomain>
Message-ID: <430DDD7D.5090009@gmx.de>

Hi Steve,

Well, in that case you could override connectionMade and connectionLost 
in your protocol to append 'self' to a list in the factory. You don't 
even need to subclass the factory if you are careful enough (this means, 
if you check that the list exists before doing anything). Anyway, the 
simplest thing would be to declare the list in a sublcass of 
PBServerFactory.

Could be something like this:

class MyPBFactory(PBServerFactory):
    protocol = MyBroker
    connections = []
    ....

class MyBroker(Broker):
    def connectionMade(...):
       self.factory.connections.append(self)

    def connectionLost(...):
       self.factory.connections.remove(self)

Then you just use 'factory.connections' to look up for your particular 
connection, and do a 'loseConnection()" on it. I'm not pretty sure, but 
I think some of the protocols do even have this kind of connections list 
built in, but looking into the documentation it does seem that 
PBServerFactory is not one of those.

Hope it helps,

David

Steve Freitas wrote:

>Hi David,
>
>Thanks for the reply. I'm aware of using loseConnection() from inside
>the protocol, but I'm using PBServerFactory. So I'm looking for a way to
>choose an arbitrary PB client that's already connected and logged in
>(cred) through that factory and kill the connection -- in other words,
>of all the clients that may be connected to that factory, I need to know
>how to get the transport that I want, so I can call loseConnection() on
>it.
>
>If I need to subclass PBServerFactory, that's fine, but I'm hoping to
>find something a little more direct.
>
>Thanks,
>
>Steve
>
>On Thu, 2005-08-25 at 11:12 -0300, David Guaraglia wrote:
>  
>
>>Hi Steve,
>>
>>It depends, if you decide you should disconnect the client while 
>>processing data in the Protocol, then you can just 
>>"self.transport.loseConnection()".
>>
>>(e.g):
>>class MyProt(Protocol):
>>    dataReceived(data):
>>       if data <> "hello":
>>          self.transport.loseConnection()
>>       else:
>>          ....
>>
>>So the most important question is: where do you decide that you should 
>>disconnect the client?
>>
>>Hope this helps,
>>
>>David
>>
>>Steve Freitas wrote:
>>
>>    
>>
>>>Hi,
>>>
>>>In some cases I need to force a client to disconnect. Is there some
>>>factory call that I can use to do this? On the client side, I know I can
>>>use factory._broker.transport.loseConnection(), but on the server side,
>>>though I've looked at the source a bit, I'm not sure how to get at the
>>>correct transport.
>>>
>>>Thanks!
>>>
>>>Steve
>>> 
>>>
>>>      
>>>




From dguaraglia at gmx.de  Thu Aug 25 11:03:57 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 12:03:57 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124981505.28176.2.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<1124981505.28176.2.camel@localhost.localdomain>
Message-ID: <430DDDDD.9090706@gmx.de>

LOL, I just finished writing a lengthy mail explaining an unlikely solution!

Nice to hear you already got this done :)

David

Steve Freitas wrote:

>Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
>arguments of requestAvatar(), the logical place to find the broker has
>to be in the mind." And whaddya know, there it is. Lovely. Thanks,
>Glyph!
>
>Steve
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From tv at twistedmatrix.com  Thu Aug 25 12:08:41 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 25 Aug 2005 19:08:41 +0300
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
Message-ID: <430DED09.9090308@twistedmatrix.com>

Pedro Sanchez wrote:
> Can you give me any suggestions on how to implement myfunc()?

twisted.internet.defer.gatherResults()



From tv at twistedmatrix.com  Thu Aug 25 12:10:46 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 25 Aug 2005 19:10:46 +0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DDD7D.5090009@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>	<430DD1C6.3050801@gmx.de>	<1124980531.25858.2.camel@localhost.localdomain>
	<430DDD7D.5090009@gmx.de>
Message-ID: <430DED86.8090808@twistedmatrix.com>

David Guaraglia wrote:
> class MyPBFactory(PBServerFactory):
>    protocol = MyBroker
>    connections = []
>    ....

That makes all MyPBFactory instances' connections attribute refer to the
same list. That may not be what you wanted.



From gns24 at sphinx.mythic-beasts.com  Thu Aug 25 12:50:28 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Thu, 25 Aug 2005 17:50:28 +0100 (BST)
Subject: [Twisted-Python] Transport for news client
In-Reply-To: <430DED09.9090308@twistedmatrix.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430DED09.9090308@twistedmatrix.com>
Message-ID: <Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>

Hi,

I'm trying to use twisted.news.nntp.NNTPClient.  As I understand it, to
connect to the server I need to call makeConnection,  to which I need to
pass a transport.  How do I create a suitable transport?  I've looked at
what implements ITransport, and nothing appeals.

Many thanks,

Graham



From itamar at itamarst.org  Thu Aug 25 12:51:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 25 Aug 2005 12:51:19 -0400
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <1124988680.8219.15.camel@localhost.localdomain>

On Thu, 2005-08-25 at 07:57 -0600, Steve Freitas wrote:

> In some cases I need to force a client to disconnect. Is there some
> factory call that I can use to do this? On the client side, I know I can
> use factory._broker.transport.loseConnection(), but on the server side,
> though I've looked at the source a bit, I'm not sure how to get at the
> correct transport.

remoteReference.broker.transport.loseConnection()





From itamar at itamarst.org  Thu Aug 25 13:10:22 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 25 Aug 2005 13:10:22 -0400
Subject: [Twisted-Python] Transport for news client
In-Reply-To: <Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430DED09.9090308@twistedmatrix.com>
	<Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>
Message-ID: <1124989822.8219.18.camel@localhost.localdomain>

On Thu, 2005-08-25 at 17:50 +0100, Graham Stratton wrote:

> I'm trying to use twisted.news.nntp.NNTPClient.  As I understand it, to
> connect to the server I need to call makeConnection, 

Nope, you want to use reactor.connectTCP with a factory - see the client
howto in the main Twisted documentation.




From sflist at ihonk.com  Thu Aug 25 17:54:08 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 15:54:08 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DDDDD.9090706@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<1124981505.28176.2.camel@localhost.localdomain>
	<430DDDDD.9090706@gmx.de>
Message-ID: <1125006848.30163.6.camel@localhost.localdomain>

Heh, thanks for the help -- it wouldn't have been the first time I'd
have come up with a complicated solution to something Twisted made
easy. :-)

Thanks,

Steve

On Thu, 2005-08-25 at 12:03 -0300, David Guaraglia wrote:
> LOL, I just finished writing a lengthy mail explaining an unlikely solution!
> 
> Nice to hear you already got this done :)
> 
> David
> 
> Steve Freitas wrote:
> 
> >Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
> >arguments of requestAvatar(), the logical place to find the broker has
> >to be in the mind." And whaddya know, there it is. Lovely. Thanks,
> >Glyph!
> >
> >Steve
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >  
> >
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From fritcher at corp.earthlink.net  Thu Aug 25 18:00:53 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Thu, 25 Aug 2005 18:00:53 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
Message-ID: <430E3F95.30303@corp.earthlink.net>

Pedro Sanchez wrote:
> Hello,
> 
> I need to implement a function (say, myfunc) that fires several
> independent Deferreds (using deferToThread), and that returns a deferred
> itself. A client of this function (say, client) is expected to do
> something like this:
> 
> def client():
>     def done(success)
>         if success:
>            print 'd1 and d2 are done'
> 
>     d = myfunc()
>     d.addCallback(done)
>     ...
> 
> 
> myfuct() above does something like this:
> 
> def myfunc():
>     def checkFunc1(success):
>     ...
> 
>     def checkFunc2(success):
>     ...
> 
>     d = defer.Deferred()
>     d1 = deferToThread(func1).addCallback(checkFunc1)
>     d2 = deferToThread(func2).addCallback(checkFunc2)
>     d.addCallback(????)
> 
>     return d
> 
> Clearly d, d1, and d2 in the above are disconnected. And I don't want to
> serialize d1 and d2 which would be a way to connect them all.
> 
> The problem is I don't know how d should be defined. The idea is that
> the 'done' function in the client function is only called when both
> threads d1 and d2 are done.

I think what you're looking for is DeferredList. You pass it a list of
deferreds you want to wait on and DeferredList will only fire its
callback method once all of the other deferred are complete. Read the
docs because the first callback you add to it will get a list of results
from all the defereds.

So for your above code, you'd want to do something like...

d1 = deferToThread(...)
d2 = deferToThread(...)
dl = defer.DeferredList([d1, d2])
dl.addCallback(...) # If needed here.
return dl

Just be aware to not add any additional callbacks to d1 or d2 after you
add them to the deferredlist.

Hope this helps. :)

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050825/f1fd0150/attachment.pgp 

From en.karpachov at ospaz.ru  Fri Aug 26 02:17:07 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 10:17:07 +0400
Subject: [Twisted-Python] Interfaces and adapters
Message-ID: <20050826101707.6efe7dcf.jk@ospaz.ru>

Let's say we defined an interface and an adapter:

class IFoo(zope.interfaces.Interface):
    pass

twisted.python.components.registerAdapter(Foo, Bar, IFoo)

As it is for now, the registerAdapter accepts any Foo, without regarding
what it implements.

Could somebody give any rationale why this condition shouldn't always hold:

foo = IFoo(bar)
assert IFoo.providedBy(foo)

Seems it is not unreasonable to expect this behaviour, because it is
exactly what interfaces are all about, or am I wrong?

-- 
jk



From andrew-twisted at puzzling.org  Fri Aug 26 02:30:26 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 16:30:26 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826101707.6efe7dcf.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
Message-ID: <20050826063026.GZ8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 10:17:07AM +0400, en.karpachov at ospaz.ru wrote:
> Let's say we defined an interface and an adapter:
> 
> class IFoo(zope.interfaces.Interface):
>     pass
> 
> twisted.python.components.registerAdapter(Foo, Bar, IFoo)
> 
> As it is for now, the registerAdapter accepts any Foo, without regarding
> what it implements.

It has to accept pretty much anything -- adapters can be e.g. functions as
well as classes.

> Could somebody give any rationale why this condition shouldn't always hold:
> 
> foo = IFoo(bar)
> assert IFoo.providedBy(foo)
> 
> Seems it is not unreasonable to expect this behaviour, because it is
> exactly what interfaces are all about, or am I wrong?

That's a pretty reasonable expectation.  I think emitting a warning if this
doesn't hold would be a sane thing to do, and it wouldn't break any code.

-Andrew.




From bob at redivi.com  Fri Aug 26 03:54:47 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 26 Aug 2005 00:54:47 -0700
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>


On Aug 25, 2005, at 11:30 PM, Andrew Bennetts wrote:

> On Fri, Aug 26, 2005 at 10:17:07AM +0400, en.karpachov at ospaz.ru wrote:
>
>> Let's say we defined an interface and an adapter:
>>
>> class IFoo(zope.interfaces.Interface):
>>     pass
>>
>> twisted.python.components.registerAdapter(Foo, Bar, IFoo)
>>
>> As it is for now, the registerAdapter accepts any Foo, without  
>> regarding
>> what it implements.
>>
>
> It has to accept pretty much anything -- adapters can be e.g.  
> functions as
> well as classes.
>
>
>> Could somebody give any rationale why this condition shouldn't  
>> always hold:
>>
>> foo = IFoo(bar)
>> assert IFoo.providedBy(foo)
>>
>> Seems it is not unreasonable to expect this behaviour, because it is
>> exactly what interfaces are all about, or am I wrong?
>>
>
> That's a pretty reasonable expectation.  I think emitting a warning  
> if this
> doesn't hold would be a sane thing to do, and it wouldn't break any  
> code.

It would certainly slow it down, though.  I think this is a  
"consenting adults" kind of scenario.  If someone registers an  
adapter, they probably didn't do it by accident!

-bob




From en.karpachov at ospaz.ru  Fri Aug 26 04:00:39 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 12:00:39 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <20050826120039.56be717d.jk@ospaz.ru>

On Fri, 26 Aug 2005 16:30:26 +1000
Andrew Bennetts wrote:

> > Could somebody give any rationale why this condition shouldn't always hold:
> > 
> > foo = IFoo(bar)
> > assert IFoo.providedBy(foo)
> > 
> > Seems it is not unreasonable to expect this behaviour, because it is
> > exactly what interfaces are all about, or am I wrong?
> 
> That's a pretty reasonable expectation.  I think emitting a warning if this
> doesn't hold would be a sane thing to do, and it wouldn't break any code.

For me, raising CannotAdapt would be better choice. After all, getting an
object that implements requested interface is the very thing what
adaptation is used for.

If I, say, adapt WovenContext to ISession, I get a session object which
does not implement the ISession interface itself. Absurdly.

-- 
jk



From andrew-twisted at puzzling.org  Fri Aug 26 04:40:07 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 18:40:07 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826120039.56be717d.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
	<20050826120039.56be717d.jk@ospaz.ru>
Message-ID: <20050826084007.GA8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 12:00:39PM +0400, en.karpachov at ospaz.ru wrote:
> On Fri, 26 Aug 2005 16:30:26 +1000
> Andrew Bennetts wrote:
> 
> > > Could somebody give any rationale why this condition shouldn't always hold:
> > > 
> > > foo = IFoo(bar)
> > > assert IFoo.providedBy(foo)
> > > 
> > > Seems it is not unreasonable to expect this behaviour, because it is
> > > exactly what interfaces are all about, or am I wrong?
> > 
> > That's a pretty reasonable expectation.  I think emitting a warning if this
> > doesn't hold would be a sane thing to do, and it wouldn't break any code.
> 
> For me, raising CannotAdapt would be better choice. After all, getting an
> object that implements requested interface is the very thing what
> adaptation is used for.
> 
> If I, say, adapt WovenContext to ISession, I get a session object which
> does not implement the ISession interface itself. Absurdly.

Yep.  But that's a trivially fixable bug in that adapter.  And this is
exactly why raising an exception would be bad -- it will break code that
otherwise works fine.  Even though such code is arguably buggy, Twisted
tries reasonably hard not to break backwards compatibility without warning.
We couldn't raise CannotAdapt here without first giving DeprecationWarnings
for at least one release.

-Andrew.




From warner at lothar.com  Fri Aug 26 04:41:03 2005
From: warner at lothar.com (Brian Warner)
Date: Fri, 26 Aug 2005 01:41:03 -0700 (PDT)
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
Message-ID: <20050826.014103.07620193.warner@lothar.com>

> Trial currently does some black magic to support remote reporters,
> defined in t.trial.remote.  What use cases does t.trial.remote
> implement?  Does anyone actually use it?

Not me.

> Rumour has it that it was originally written to make buildbot easier
> to write.  However, I'm told that buildbot just parses stdio output.

Both rumors are correct. The buildbot currently just captures stdout/stderr
and parses the last few lines for the test-count summaries.

The original idea was to make a PB connection from the trial process to the
parent buildbot slave, and send fine-grained test results over that
connection. To accomplish this, we (slyphon and I) were planning to write a
Reporter class that would actually be distributed with the buildbot, then use
a trial option like --reporter-class=buildbot.trialreporter.RemoteReporter or
something. Another direction was to use PB running over stdin/stdout, using
the same scheme. The goal was to get a tuple of (testname, results,
exceptions, log.msg output, stdout, stderr, starttime, finishtime) for each
test, over on the buildslave, so that the buildbot status reporting could
give extremely fine-grained information about the tests which failed (perhaps
including full stack traces with local variables for the ERROR cases). The
most important thing to me is that we can get a list of test names and their
individual results, but having the trial.log text for each one separately
would make debugging test failures a lot easier (and the buildbot could
arrange to just mail the relevant parts of the logs to the person responsible
for that test, instead of sending the whole multi-megabyte logfile).

If I remember correctly, the extra Reporter functionality was there to give
buildbot enough feedback about tests starting/stopping to provide useful
status information (specifically to accurately update the ETA timing info: it
could eventually figure out that 45 tests out of 90 total means that it's N%
complete and therefore has an ETA of 2 minutes, etc). It's been a while since
I looked at the code, though.

I gave up on it at some point, mainly because the reactor cleanup routines
were getting in the way. (somewhat embarrassing because I was the one who put
many of those cleanup routines in there in the first place). Basically the PB
connection that was established by our RemoteReporter was torn down with a
vengeance by the clean-up-all-Selectables pass, flunking the first test and
condemning the rest to be run with no hope of ever delivering their status to
the buildslave. I decided to put off the whole clever machine-parseable
status thing until the trial's reactor cleanup had a way to let specific
selectables stick around.

So if that code is in the way, don't keep it around on account of the
buildbot. Having a pluggable reporter will be handy once reactor cleanup is
more convenient, but as long as that feature is retained in some form I think
we'll be able to figure out a way to get the status information to the
buildslave later.

cheers,
 -Brian

PS: another approach (implemented in trial at some point, I think, but I
don't believe I ever got buildbot to use it) was to jelly some status objects
and fling them out stdout in the hopes of being picked up by whoever launched
trial. This might have worked better, because one-way jelly over stdout
wouldn't have involved a Selectable (unlike two-way PB over stdio), so the
cleanup might not have stomped on it. However, I was uncomfortable with the
potential version skew of the code creating these jellied objects (coming
from twisted.trial) and the code that was hoping to interpret them (coming
from buildbot). The pluggable Reporter allowed the buildbot to supply the
code on both sides of the wire, which struck me as a better long-term
solution.



From andrew-twisted at puzzling.org  Fri Aug 26 04:47:36 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 18:47:36 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
	<8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>
Message-ID: <20050826084736.GB8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 12:54:47AM -0700, Bob Ippolito wrote:
> 
> On Aug 25, 2005, at 11:30 PM, Andrew Bennetts wrote:
[...]
> >
> >That's a pretty reasonable expectation.  I think emitting a warning  if
> >this doesn't hold would be a sane thing to do, and it wouldn't break any
> >code.
> 
> It would certainly slow it down, though.  I think this is a  
> "consenting adults" kind of scenario.  If someone registers an  
> adapter, they probably didn't do it by accident!

Right.  The bug the OP has here isn't that the adapter shouldn't have been
registered, but that the adapter fails to properly declare what interfaces
it provides, so that the result of IBar(IFoo(x)) will fail even though x ->
IFoo and IFoo -> IBar adapters are registered.

The performance question is important... benchmarks of any changes here
would be a good idea.

A weaker solution would be to only check at registration time, but that's
uglier, because it only works for adapters that are classes, and that don't
have creative __new__ methods.  That's almost certainly 99% of adapters, but
ugly and incomplete solutions make me nervous.

Anyway, the underlying zope.interface machinery allows this -- and includes
doctest documentation that relies on this (it registers *ints* as adapters,
iirc!).  I'm inclined to agree with your "consenting adults" approach, but I
don't feel strongly either way.

-Andrew.




From en.karpachov at ospaz.ru  Fri Aug 26 06:09:10 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 14:09:10 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826084007.GA8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru> <20050826063026.GZ8963@trog
	dor.home.puzzling.org> <20050826120039.56be717d.jk@ospaz.ru>
	<20050826084007.GA8963@trogdor.home.puzzling.org>
Message-ID: <20050826140910.77a9ce97.jk@ospaz.ru>

On Fri, 26 Aug 2005 18:40:07 +1000
Andrew Bennetts wrote:

> On Fri, Aug 26, 2005 at 12:00:39PM +0400, en.karpachov at ospaz.ru wrote:
> > 
> > If I, say, adapt WovenContext to ISession, I get a session object which
> > does not implement the ISession interface itself. Absurdly.
> 
> Yep.  But that's a trivially fixable bug in that adapter.  And this is

Should it be considered as a bug then?

> exactly why raising an exception would be bad -- it will break code that
> otherwise works fine.  Even though such code is arguably buggy, Twisted

One could say that the code in question is already broken. At least, the
exception would point to the programmer that they forgot to declare what
interfaces are implemented by the adapter.

> tries reasonably hard not to break backwards compatibility without warning.
> We couldn't raise CannotAdapt here without first giving DeprecationWarnings
> for at least one release.

Well, if raising CannotAdapt is not appropriate, then probably some
decorator to AdapterFactory could help? Something like (pseudocode):

def affirm(adapterFactory, interface):

     def safe_factory(orig):
          adapter = adapterFactory(orig)
          if not interface.providedBy(adapter):
               warn("Failed to adapt")
               adapter = MakeTheObjectToProvide(adapter, interface)
          return adapter

     return safe_factory

adapterFactory = affirm(adapterFactory, interface)

-- 
jk



From psanchez at nortel.com  Fri Aug 26 10:00:16 2005
From: psanchez at nortel.com (Pedro Sanchez)
Date: Fri, 26 Aug 2005 10:00:16 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <430E3F95.30303@corp.earthlink.net>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430E3F95.30303@corp.earthlink.net>
Message-ID: <1125064816.16031.8.camel@pcard0ze.ca.nortel.com>

I already tested DeferredList and it does just what I was looking for.

There was another suggestion to use defer.gatherResults() for which I
didn't find any documentation. I have yet to browse the code to see what
it does.

Thanks for the reply. 

-- 
Pedro



On Thu, 2005-25-08 at 18:00 -0400, Jason Fritcher wrote:
> Pedro Sanchez wrote:
> > Hello,
> > 
> > I need to implement a function (say, myfunc) that fires several
> > independent Deferreds (using deferToThread), and that returns a deferred
> > itself. A client of this function (say, client) is expected to do
> > something like this:
> > 
> > def client():
> >     def done(success)
> >         if success:
> >            print 'd1 and d2 are done'
> > 
> >     d = myfunc()
> >     d.addCallback(done)
> >     ...
> > 
> > 
> > myfuct() above does something like this:
> > 
> > def myfunc():
> >     def checkFunc1(success):
> >     ...
> > 
> >     def checkFunc2(success):
> >     ...
> > 
> >     d = defer.Deferred()
> >     d1 = deferToThread(func1).addCallback(checkFunc1)
> >     d2 = deferToThread(func2).addCallback(checkFunc2)
> >     d.addCallback(????)
> > 
> >     return d
> > 
> > Clearly d, d1, and d2 in the above are disconnected. And I don't want to
> > serialize d1 and d2 which would be a way to connect them all.
> > 
> > The problem is I don't know how d should be defined. The idea is that
> > the 'done' function in the client function is only called when both
> > threads d1 and d2 are done.
> 
> I think what you're looking for is DeferredList. You pass it a list of
> deferreds you want to wait on and DeferredList will only fire its
> callback method once all of the other deferred are complete. Read the
> docs because the first callback you add to it will get a list of results
> from all the defereds.
> 
> So for your above code, you'd want to do something like...
> 
> d1 = deferToThread(...)
> d2 = deferToThread(...)
> dl = defer.DeferredList([d1, d2])
> dl.addCallback(...) # If needed here.
> return dl
> 
> Just be aware to not add any additional callbacks to d1 or d2 after you
> add them to the deferredlist.
> 
> Hope this helps. :)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Fri Aug 26 12:12:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Aug 2005 12:12:02 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <1125072722.8930.15.camel@localhost.localdomain>

On Fri, 2005-08-26 at 16:30 +1000, Andrew Bennetts wrote:

> > As it is for now, the registerAdapter accepts any Foo, without regarding
> > what it implements.
> 
> It has to accept pretty much anything -- adapters can be e.g. functions as
> well as classes.
> 
> > Could somebody give any rationale why this condition shouldn't always hold:
> > 
> > foo = IFoo(bar)
> > assert IFoo.providedBy(foo)
> > 
> > Seems it is not unreasonable to expect this behaviour, because it is
> > exactly what interfaces are all about, or am I wrong?

If the adapter is a function, the function may not implement the
interface. The actual expected behavior is that the result of *calling*
the adapter *provides* the interface. An adapter class may well
implement the interface in order for this to happen, but it's not a
necessary condition.






From en.karpachov at ospaz.ru  Fri Aug 26 17:17:54 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 01:17:54 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <1125072722.8930.15.camel@localhost.localdomain>
References: <20050826101707.6efe7dcf.jk@ospaz.ru> <20050826063026.GZ8963@trog
	dor.home.puzzling.org>
	<1125072722.8930.15.camel@localhost.localdomain>
Message-ID: <20050827011754.12b3590e.jk@ospaz.ru>

On Fri, 26 Aug 2005 12:12:02 -0400
Itamar Shtull-Trauring wrote:

> > > Could somebody give any rationale why this condition shouldn't always hold:
> > > 
> > > foo = IFoo(bar)
> > > assert IFoo.providedBy(foo)
> > > 
> > > Seems it is not unreasonable to expect this behaviour, because it is
> > > exactly what interfaces are all about, or am I wrong?
> 
> If the adapter is a function, the function may not implement the
> interface. The actual expected behavior is that the result of *calling*
> the adapter *provides* the interface. An adapter class may well
> implement the interface in order for this to happen, but it's not a
> necessary condition.

That's true, and I don't see how does it differ from my pseudocode example.
And neither the twisted.web.server.Session class implements, nor it's
objects provides the ISession interface.

-- 
jk



From itamar at itamarst.org  Fri Aug 26 18:00:34 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Aug 2005 18:00:34 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827011754.12b3590e.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trog dor.home.puzzling.org>
	<1125072722.8930.15.camel@localhost.localdomain>
	<20050827011754.12b3590e.jk@ospaz.ru>
Message-ID: <1125093634.8930.28.camel@localhost.localdomain>

On Sat, 2005-08-27 at 01:17 +0400, en.karpachov at ospaz.ru wrote:

> > If the adapter is a function, the function may not implement the
> > interface. The actual expected behavior is that the result of *calling*
> > the adapter *provides* the interface. An adapter class may well
> > implement the interface in order for this to happen, but it's not a
> > necessary condition.
> 
> That's true, and I don't see how does it differ from my pseudocode example.

Your pseudo-code does indeed match what I said, and would be useful to
have. I have a bug open for "mode of running that is slower but does a
lot more runtime checking" and this should probably be one of the
features.




From glyph at divmod.com  Fri Aug 26 23:22:38 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Aug 2005 23:22:38 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826084007.GA8963@trogdor.home.puzzling.org>
Message-ID: <20050827032238.3914.842326235.divmod.quotient.8937@ohm>

Adaptation is slow enough as it is.  Enforcing this convention would be a fairly substantial cost for something which is already multiplying the cost of what would normally be a function call by tens or hundreds.

Not enforcing it is also in the spirit of Python's "language for consenting adults".  If your object really doesn't implement the interface, the unit tests will catch it, right? ;-)

I do hope that we eventually have a "pedantic mode" where Twisted will spew copious warnings about things like this, but in the default case it's just not worth the effort to dot every i and cross every |.




From glyph at divmod.com  Fri Aug 26 23:27:55 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Aug 2005 23:27:55 -0400
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <20050826.014103.07620193.warner@lothar.com>
Message-ID: <20050827032755.3914.1950332112.divmod.quotient.8939@ohm>

>PS: another approach (implemented in trial at some point, I think, but I
>don't believe I ever got buildbot to use it) was to jelly some status objects
>and fling them out stdout in the hopes of being picked up by whoever launched
>trial. This might have worked better, because one-way jelly over stdout
>wouldn't have involved a Selectable (unlike two-way PB over stdio), so the
>cleanup might not have stomped on it. However, I was uncomfortable with the
>potential version skew of the code creating these jellied objects (coming
>from twisted.trial) and the code that was hoping to interpret them (coming
>from buildbot). The pluggable Reporter allowed the buildbot to supply the
>code on both sides of the wire, which struck me as a better long-term
>solution.

The problem with this approach is that really, *everything* in trial ought to be going through the reactor, and cleanup will have to be smart enough to understand which objects shouldn't be cleaned up (generalizing the case of the waker, for example).

Pluggable reporters are indeed a worthwhile idea, but could we make them an actual plugin interface with twisted?  Passing classnames on the commandline is verbose and pretty gross IMHO (except for cases like the test-case-name, where you're actually referring to the user of the program's code) and it should use a domain-specific plugin name... aside from the aesthetic concern though, using plugins makes it possible to have 'trial --help' (or the Trial->Help menu option in your favorite twisted-enabled IDE...) list all possible reporter plugins, and to reduce confusion between import errors related to trial bugs and import errors related to plugins being unavailable or misspelled.



From en.karpachov at ospaz.ru  Sat Aug 27 05:09:21 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 13:09:21 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827032238.3914.842326235.divmod.quotient.8937@ohm>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>
	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
Message-ID: <20050827130921.024a1e33.jk@ospaz.ru>

On Fri, 26 Aug 2005 23:22:38 -0400
glyph at divmod.com wrote:

> Adaptation is slow enough as it is.  Enforcing this convention would be a fairly substantial cost for something which is already multiplying the cost of what would normally be a function call by tens or hundreds.
> 
> Not enforcing it is also in the spirit of Python's "language for consenting adults".  If your object really doesn't implement the interface, the unit tests will catch it, right? ;-)

For an object I own, yes, that's right. For someone else's objects, I'm not
sure how to deal with them.

The question is, if the object doesn't declare itself provides the
interface it adapts to, should this be considered as a bug? If so, then we
have it with twisted.web.server.Session and nevow.guard.GuardSession (and
probably the same situation with twisted.web2).

There is another problem with it. The twisted.web.server.Session cannot
declare itself implementing nevow.inevow.ISession as it doesn't know
anything about nevow; but nevow registers it as default adapter from
WovenContext to inevow.ISession. So we have a situation:

    session = inevow.ISession(ctx)
    assert inevow.ISession.providedBy(sess) # oops! it is not

What use in the adaptation above then? It's not really an adapter to the
interface we need but just some arbitrary function call, not related to
interfaces at all, incidentally looking like an adapter.

Probably, a decorator to the adapterFactory could help; even if all got a
bit slower, we'll get more correct behaviour. Anyway, is it that slower?
I've heard the nevow as well as Python are not about speed, but about
building robust applications.

-- 
jk



From dialtone at divmod.com  Sat Aug 27 07:47:58 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Sat, 27 Aug 2005 13:47:58 +0200
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827130921.024a1e33.jk@ospaz.ru>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz.ru>
Message-ID: <431052EE.5050808@divmod.com>

en.karpachov at ospaz.ru wrote:

>The question is, if the object doesn't declare itself provides the
>interface it adapts to, should this be considered as a bug? If so, then we
>have it with twisted.web.server.Session and nevow.guard.GuardSession (and
>probably the same situation with twisted.web2).
>  
>
twisted.web2 is yet to come and also nevow working on it although
there's a branch in nevow
that works with it right now. So everything is in flux and yet to be
decided.

>There is another problem with it. The twisted.web.server.Session cannot
>declare itself implementing nevow.inevow.ISession as it doesn't know
>anything about nevow; but nevow registers it as default adapter from
>WovenContext to inevow.ISession. So we have a situation:
>
>    session = inevow.ISession(ctx)
>    assert inevow.ISession.providedBy(sess) # oops! it is no
>
>What use in the adaptation above then? It's not really an adapter to the
>interface we need but just some arbitrary function call, not related to
>interfaces at all, incidentally looking like an adapter.
>  
>
Woah, wait a bit :)
If you want to really use sessions in nevow you have to use guard, if
you use guard the session
object will be GuardSession that knows about nevow and can implement
inevow.ISession.
Currently GuardSession doesn't implement inevow.ISession but will in a
sec when I commit the fix.

If you don't use guard you are really getting a server.Session object
from twisted.web returned by
nevow.appserver.sessionFactory that calls NevowRequest.getSession()
which will return the GuardSession
if you are using guard or the other one if not (as I already said). Oh,
server.Session does suck.

>Probably, a decorator to the adapterFactory could help; even if all got a
>bit slower, we'll get more correct behaviour. Anyway, is it that slower?
>I've heard the nevow as well as Python are not about speed, but about
>building robust applications.
>  
>
True, but doing more than what is really needed doesn't do good anyway.
Losing speed for free is not something
you really wish.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4.1
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From en.karpachov at ospaz.ru  Sat Aug 27 09:52:49 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 17:52:49 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <431052EE.5050808@divmod.com>
References: <20050826084007.GA8963@trogdor.home.puzzling.org> <2005082703223
	8.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz .ru>
	<431052EE.5050808@divmod.com>
Message-ID: <20050827175249.4799af7f.jk@ospaz.ru>

On Sat, 27 Aug 2005 13:47:58 +0200
Valentino Volonghi aka Dialtone wrote:

> twisted.web2 is yet to come and also nevow working on it although
> there's a branch in nevow
> that works with it right now. So everything is in flux and yet to be
> decided.

Of course, I'm aware of that but I couldn't help but try it right now :)

> If you want to really use sessions in nevow you have to use guard, if
> you use guard the session
> object will be GuardSession that knows about nevow and can implement
> inevow.ISession.
> Currently GuardSession doesn't implement inevow.ISession but will in a
> sec when I commit the fix.

Good news, thanks! I'd like to operate with interfaces, not with
implementation classes:

registerAdapter(MyUserInfo, ISession, IMyUserInfo)

> If you don't use guard you are really getting a server.Session object
> from twisted.web returned by
> nevow.appserver.sessionFactory that calls NevowRequest.getSession()
> which will return the GuardSession
> if you are using guard or the other one if not (as I already said). Oh,
> server.Session does suck.

Ok. I didn't know that using guard is mandatory for sessions in the Nevow,
but now I do. Deprecation warning about twisted.web.server.Session as the
default adapter would be nice, eventually.

Thanks for the suggestion.

-- 
jk



From andrew-twisted at puzzling.org  Sat Aug 27 12:07:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 28 Aug 2005 02:07:09 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827130921.024a1e33.jk@ospaz.ru>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>
	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz.ru>
Message-ID: <20050827160709.GF8963@trogdor.home.puzzling.org>

On Sat, Aug 27, 2005 at 01:09:21PM +0400, en.karpachov at ospaz.ru wrote:
[...]
> There is another problem with it. The twisted.web.server.Session cannot
> declare itself implementing nevow.inevow.ISession as it doesn't know
> anything about nevow; but nevow registers it as default adapter from
> WovenContext to inevow.ISession. So we have a situation:

zope.interface allows for this case -- nevow.inevow just needs to say:

    zope.interface.classImplements(twisted.web.server.Session, ISession)

-Andrew.




From en.karpachov at ospaz.ru  Sun Aug 28 09:42:41 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sun, 28 Aug 2005 17:42:41 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827160709.GF8963@trogdor.home.puzzling.org>
References: <20050826084007.GA8963@trogdor.home.puzzling.org> <20050827032238
	.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz. ru>
	<20050827160709.GF8963@trogdor.home.puzzling.org>
Message-ID: <20050828174241.5ca3022c.jk@ospaz.ru>

On Sun, 28 Aug 2005 02:07:09 +1000
Andrew Bennetts wrote:

> zope.interface allows for this case -- nevow.inevow just needs to say:
> 
>     zope.interface.classImplements(twisted.web.server.Session, ISession)

Good idea. If the Nevow did this workaround at it's startup time, it would
be useful.

-- 
jk



From wpollans at gmail.com  Sun Aug 28 11:22:07 2005
From: wpollans at gmail.com (Warren Pollans)
Date: Sun, 28 Aug 2005 11:22:07 -0400
Subject: [Twisted-Python] twisted 1.3.0 unit test errors
Message-ID: <01c4e68f3996ec7d624fc5c99716b740@gmail.com>

Hello,

I've started installing selenium on my ibook (OSX.3.9, python 2.3)

I just installed Twisted 1.3.0.  When I run admin/runtests from the  
install directory, I get the following results - Are these failures and  
errors acceptable?  I've installed pyOpenSSL and pyCrypto, but not  
pySerial

FAILED (failures=4, errors=2, skips=33, expectedFailures=4)

Are these acceptable?  Or what do I need to do to try to fix this  
before continuing the selenium install?

Thanks,

Warren

======================================================================== 
=======
FAILURE: testWhich (twisted.test.test_process.UtilTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_process.py",  
line 661, in testWhich
     self.assertEquals(paths, [
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 127, in failUnlessEqual
     raise FailTest, (msg or '%r != %r' % (first, second))
FailTest: ['foo/baz/executable', 'baz/foo/executable',  
'baz/bar/executable'] != ['foo/baz/executable', 'baz/foo/executable']
======================================================================== 
=======
FAILURE: testWhichPathExt (twisted.test.test_process.UtilTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_process.py",  
line 676, in testWhichPathExt
     self.assertEquals(paths, [
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 127, in failUnlessEqual
     raise FailTest, (msg or '%r != %r' % (first, second))
FailTest: ['foo/baz/executable', 'baz/foo/executable',  
'baz/foo/executable.bin', 'baz/bar/executable'] !=  
['foo/baz/executable', 'baz/foo/executable', 'baz/foo/executable.bin']
======================================================================== 
=======
FAILURE: testDownloadPageError3  
(twisted.test.test_webclient.WebClientSSLTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_webclient.py",  
line 175, in testDownloadPageError3
     f = unittest.deferredError(d)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/util.py",  
line 106, in deferredError
     raise unittest.FailTest, "Deferred did not fail: %r" % (result,)
FailTest: Deferred did not fail: None
======================================================================== 
=======
FAILURE: testDownloadPageError3  
(twisted.test.test_webclient.WebClientTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_webclient.py",  
line 175, in testDownloadPageError3
     f = unittest.deferredError(d)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/util.py",  
line 106, in deferredError
     raise unittest.FailTest, "Deferred did not fail: %r" % (result,)
FailTest: Deferred did not fail: None
======================================================================== 
=======
ERROR: testConnectionRefused  
(twisted.test.test_udp.OldConnectedUDPTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_udp.py",  
line 123, in testConnectionRefused
     self.assertEquals(client.refused, 1)
AttributeError: Client instance has no attribute 'refused'
======================================================================== 
=======
ERROR: testConnectionRefused (twisted.test.test_udp.UDPTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_udp.py",  
line 216, in testConnectionRefused
     self.assertEquals(client.refused, 1)
AttributeError: GoodClient instance has no attribute 'refused'
------------------------------------------------------------------------ 
-------
Ran 1227 tests in 501.362s

FAILED (failures=4, errors=2, skips=33, expectedFailures=4)




From glyph at divmod.com  Mon Aug 29 07:05:46 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 29 Aug 2005 07:05:46 -0400
Subject: [Twisted-Python] twisted 1.3.0 unit test errors
In-Reply-To: <01c4e68f3996ec7d624fc5c99716b740@gmail.com>
Message-ID: <20050829110546.3914.18511417.divmod.quotient.9691@ohm>



On Sun, 28 Aug 2005 11:22:07 -0400, Warren Pollans <wpollans at gmail.com> wrote:
>Hello,
>
>I've started installing selenium on my ibook (OSX.3.9, python 2.3)
>
>I just installed Twisted 1.3.0.  When I run admin/runtests from the  install 
>directory, I get the following results - Are these failures and  errors 
>acceptable?  I've installed pyOpenSSL and pyCrypto, but not  pySerial

Those do look like real problems, but we barely have the developer resources around here to maintain one stable branch at a time - 1.3 is sadly unmaintained.

Can you try this with 2.0, or better yet, SVN trunk?  the OS X buildbot is green, for trunk at least, so failures would be real news.



From mailinglists at smartology.nl  Mon Aug 29 10:29:39 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 29 Aug 2005 16:29:39 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <43131BD3.3080803@smartology.nl>

G'day,

I've created an xmlrpc server with twisted and was wondering if it would
be possible to use twisted logging and the python logging module
together. This because  the xmlrpc server uses a 'back-end' that
contains python modules that are also used by other processes/servers.

It should be possible if a twisted handler for the python logging module
existed ... it would then be a case of attaching the twisted handler to
the logger and the connection would be established.

Before I take on this task myself, I wonder if someone else has created
such a handler or maybe has some other/better way of interconnecting to
the python logging module?

BTW .. where can I find some (detailed) documentation on the twisted
logging system use?

Regards,
Remi Cool



From stefano at pragma2000.com  Mon Aug 29 13:25:16 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Mon, 29 Aug 2005 19:25:16 +0200
Subject: [Twisted-Python] gthreadless.py
Message-ID: <432742240508291025144be04e@mail.gmail.com>

Hello twisted folks,

I reimplemented gthreadless.py, originally implemented by Chris Armstrong.
My implementation aims to be more robust and is currently used in a
large project, therefore it is already usable.

http://www.pragma2000.com/wiki/index.php?GThreadless

gthreadless is a twisted module that makes use of greenlets to
implement the very nice primitive blockOn(d), that suspends the
execution in the current stack frame while waiting for the deferred to
fire. This way you can use a synchronous blocking-style programming
model while still using twisted, all nicely integrated.

It's a great great thing. Give it a try.

cheers,
Stefano Masini



From Henning.Ramm at mediapro-gmbh.de  Mon Aug 29 14:56:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 29 Aug 2005 20:56:16 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <F92274058556DE42B94B148EEFB91839021CB540@exchange-03.suedkurier.de>

>Before I take on this task myself, I wonder if someone else has created
>such a handler or maybe has some other/better way of interconnecting to
>the python logging module?

Sorry, I can't help you, but I'd need the same (plus logging to some wx window), and I've no time to investigate and write it myself - so would you please release it, if you implement such? I'd be very glad!


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Mon Aug 29 16:13:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Aug 2005 16:13:30 -0400
Subject: [Twisted-Python] Use python logging module with Twisted log
In-Reply-To: <43131BD3.3080803@smartology.nl>
References: <43131BD3.3080803@smartology.nl>
Message-ID: <1125346410.9440.87.camel@localhost.localdomain>

On Mon, 2005-08-29 at 16:29 +0200, Remi Cool wrote:

> BTW .. where can I find some (detailed) documentation on the twisted
> logging system use?

There isn't any, and really it needs some work. However, the basics are,
you write a callable that accepts a dictionary, and then:

twisted.python.log.addObserver(yourCallable)

The dictionary you get depends on whether it's log.msg or log.err. You
can then do what you want with it.

Important notes:
1. Never raise an exception from a log observer. It will be removed.

2. Never block in a log observer, as it may run in main Twisted thread.
This means you can't use socket or syslog Python-logging backends.

3. The observer needs to be thread safe if you anticipate using threads
in your program.





From Henning.Ramm at mediapro-gmbh.de  Mon Aug 29 16:37:43 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 29 Aug 2005 22:37:43 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <F92274058556DE42B94B148EEFB91839021CB541@exchange-03.suedkurier.de>

>The dictionary you get depends on whether it's log.msg or log.err. You
>can then do what you want with it.

A little bit of information, what keys can occurr and what they mean would be nice.

How about this (if self.log is a logging.Logger);
code is partly stolen from twisted.python.log:

    def twisted_logger(self, logdict):
        """
        log observer for twisted.python.log, receives a dict and writes to self.log
        """
        if 'failure' in logdict:
            text = logdict['failure'].getTraceback()
        else:
            text = " ".join([str(m) for m in logdict["message"]])
        if logdict['isError']:
            self.log.error(text)
        else:
            self.log.warning(text)


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From nico at tekNico.net  Mon Aug 29 18:12:11 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 30 Aug 2005 00:12:11 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508291025144be04e@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
Message-ID: <df0180$jfu$1@sea.gmane.org>

> gthreadless is a twisted module that makes use of greenlets to
> implement the very nice primitive blockOn(d), that suspends the
> execution in the current stack frame while waiting for the deferred to
> fire. This way you can use a synchronous blocking-style programming
> model while still using twisted, all nicely integrated.

>From v.2.0, inside the twisted/internet/defer.py there are one class,
waitForDeferred, and one function, deferredGenerator, that implement a
similar pseudo-synchronous style, but using standard generators instead of
greenlets.

Defgen: Just one more reason that Twisted freakin' rocks
http://mesozoic.geecs.org/cogito/archives/000160.html

Furthermore, PEP 342 has been accepted for v.2.5:

Coroutines via Enhanced Generators
http://www.python.org/peps/pep-0342.html

its enhancements should further simplify such a coding style in Twisted.

However, a couple of recent blog entries show that this way of "hiding"
Deferreds raises some eyebrows within Twisted's inner circle:

Magical Concurrency Faeries or How I Learned To Stop Worrying and Love
Deferreds
http://www.livejournal.com/users/jcalderone/9531.html

Knowing Santa Claus is Fake Doesn't Ruin Christmas
http://www.livejournal.com/users/glyf/40037.html

Personally, I think that while explicitly specifying deferreds and
callbacks and errbacks can be quite verbose, and may sometimes obscure the
program flow, the comfort of seeing clearly the boundaries of each
uninterruptible execution unit makes it worthwhile.

-- 
Nicola Larosa - nico at tekNico.net

My god carries a hammer. Your god died nailed to a tree. Any questions?
 -- maxpublic on Slashdot, July 2005




From glyph at divmod.com  Mon Aug 29 22:12:17 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 29 Aug 2005 22:12:17 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,	consigning
	copyright means it is _not_ (C) you.	Let's keep this file simple,
	please.
In-Reply-To: <20050822215013.GB17669@sourdust.home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
Message-ID: <4313C081.9000800@divmod.com>

Mary Gardiner wrote:
> I was reminded at the sprint that I needed to ask about this.

Hi Mary, sorry for leaving this unanswered for so long.  I've been ... 
busy :)

> My understanding of the license policy was as per
> http://twistedmatrix.com/bugs/issue903 -- ie, that the *only* thing
> commiters needed to do was to MIT license their contributions. This is
> all that http://twistedmatrix.com/developers/contributing currently
> states. Therefore, that was what I'd been getting people who
> contributed documentation to agree to, and that was my understanding of
> the licencing and copyright of my own contributions as of the date when
> the MIT licensing of Twisted began.

OK, I apologize.  This was apparently the impression I gave many people.

Just for the record, my intent was originally that we leave all of the 
already-consigned contributors still consigned, refer to myself as 
"Twisted Matrix Labs" for the purposes of holding the copyrights, until 
such time as a foundation with that name could be established.  The 
individual contributors who could not consign (such as MIT) could be 
listed independently.

However, while the legal advice I've received over the years has 
conflicted, folks seem pretty unanimous on the fact that this is 
confusing and tenuous legally.  Let's just put the names of *all* the 
individual contributors back into the license.

I think that also obviates the need for the "CREDITS" file.



From mary-twisted at puzzling.org  Mon Aug 29 22:17:07 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 30 Aug 2005 12:17:07 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.	Let's keep this file
	simple, please.
In-Reply-To: <4313C081.9000800@divmod.com>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
	<4313C081.9000800@divmod.com>
Message-ID: <20050830021707.GL14250@home.puzzling.org>

On Mon, Aug 29, 2005, Glyph Lefkowitz wrote:
> However, while the legal advice I've received over the years has 
> conflicted, folks seem pretty unanimous on the fact that this is 
> confusing and tenuous legally.  Let's just put the names of *all* the 
> individual contributors back into the license.

This is an OK resolution to me. For that matter, so would firming up the
legal position of consignment, but I hear nought but a soft sighing
sound where we'd want volunteers to do that work.

-Mary

-- 
<spiv> AaronSw: You should never, ever be creating a transport... Twisted is supposed to do that for you.
<AaronSw> I should never create the tcp.Client stuff or I shouldn't manually set them as the transport?
<spiv> AaronSw: Use reactor.clientTCP (or better yet, reactor.connectTCP in CVS).
<spiv> Don't create tcp.Client directly either.       
<spiv> http://twistedmatrix.com/documents/TwistedDocs/Twisted-0.19.0/twisted/internet/interfaces_IReactorTCP.py.html
<spiv> AaronSw: But of course, that API is deprecated in 0.99  (but creating a tcp.Client directly is even more deprecated :P)
<AaronSw> Are you guys abstraction astronauts or something? ;-)



From mary-twisted at puzzling.org  Mon Aug 29 22:18:36 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 30 Aug 2005 12:18:36 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.	Let's keep this file
	simple, please.
In-Reply-To: <20050830021707.GL14250@home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
	<4313C081.9000800@divmod.com>
	<20050830021707.GL14250@home.puzzling.org>
Message-ID: <20050830021836.GM14250@home.puzzling.org>

And thanks for taking the time out to reply, too.

-Mary

-- 
<fzZzy> why is the king in yellow paperback 20 bucks :(
<glyph> fzZzy: I *seriously* hope you mean "The Yellow Sign" or something
<glyph> fzZzy: if you found an actual copy of The King in Yellow, DON'T TALK ABOUT IT HERE



From stefano at pragma2000.com  Tue Aug 30 02:47:28 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 08:47:28 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <df0180$jfu$1@sea.gmane.org>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
Message-ID: <432742240508292347261339d8@mail.gmail.com>

On 8/30/05, Nicola Larosa <nico at teknico.net> wrote:
> From v.2.0, inside the twisted/internet/defer.py there are one class,
> waitForDeferred, and one function, deferredGenerator, that implement a
> similar pseudo-synchronous style, but using standard generators instead of
> greenlets.

I'm familiar with deferredGenerator. I've been using twisted full time
for two years and a half now and used deferredGenerator for quite a
lot too. That's why I reimplemented gthreadless! :)
 
> Furthermore, PEP 342 has been accepted for v.2.5:
> 
> Coroutines via Enhanced Generators
> http://www.python.org/peps/pep-0342.html
> 
> its enhancements should further simplify such a coding style in Twisted.

The problem with generators and enhanced generators, as I've been
discussing with a few people at Europython, is that they allow you to
jump back and forth between two stack *frames*. Whereas greenlets
support jumping among *full* stacks. This means that from within a
@deferredGreenlet'ed function you can make calls to other functions
that call blockOn, while from a @deferredGenerator'ed function you
can't call a method that in turn calls waitForDeferred.
 
While this may seems quite a subtle difference, I think it is not if
you look at it from the perspective of code readability -- let alone
the 3 liner horrible hack that waitForDeferred forces you to, at least
until PEP 342, as we all know.
 
> However, a couple of recent blog entries show that this way of "hiding"
> Deferreds raises some eyebrows within Twisted's inner circle:
> 
> Magical Concurrency Faeries or How I Learned To Stop Worrying and Love
> Deferreds
> http://www.livejournal.com/users/jcalderone/9531.html
> 
> Knowing Santa Claus is Fake Doesn't Ruin Christmas
> http://www.livejournal.com/users/glyf/40037.html
> 
> Personally, I think that while explicitly specifying deferreds and
> callbacks and errbacks can be quite verbose, and may sometimes obscure the
> program flow, the comfort of seeing clearly the boundaries of each
> uninterruptible execution unit makes it worthwhile.
> 

Believe me. I'm not one of those users in the "periphery of the
Twisted community" thinking that asynchronous programming is too hard.
I've been writing network code for quite a while and I matured the
idea that threads get in your way back when I still didn't know
python.
What I'm only concerned about now is coding *style*. Making code
better looking, thus more easily maintainable.
I rewrote gthreadless because having a usable implementation allowed
rewriting parts of my existing (big) application in a much simpler
way. And let me stress this: *parts* of it. I think gthreadless should
only be used here and there, not everywhere. One should always keep
thinking of deferreds, and even inside a @deferredGreenlet'ed function
one should be very clear that blockOn() really only spits back a
deferred to the reactor. But at least, you can debug your function
without having to jump back and forth 40 lines at a time just to get
to the proper callback or errback. I think sometimes this verbosity
may get in the way of the pythonic spirit of keeping stuff simple.
 
Here is an example that makes justice to this approach. It involves
Perspective Broker. Think of writing a web frontend to an application
on the backend that exports functionality through pb. (the code may
not work, I'm just making it up now without testing it)
(I hope everybody is familiar with nevow.stan. If not, take a look at
it. It's worth.)
 
@deferredGreenlet
def renderPage(self):
    dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
                        for elementId in self.idList]
    return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

Without gthreadless:

def renderPage(self):
    dataList = []
    def fetchDataRemotely(elementList):
        def cbFetch(elementData):
            dataList.append(elementData)
            if len(elementList) > 0:
                return fetchDataRemotely(elementList[1:])
        return self.backend.callRemote('getDataFromId',
elementId).addCallback(cbFetch)
    def cb(crap):
        return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for
txt in dataList ] ] ]
    return fetchDataRemotely(self.idList).addCallback(cb)

I hope everyone agrees that the level of complexity in *reading* and
*understanting* what the above code snippets do is not the same.
The above code could have actually been written the same way using
deferredGenerator and PEP 342, or in a slightly more verbose way
without PEP 342. But the example is simple. If instead of simply
callRemote() you had to use another method, that in turn needed
callRemote, maybe a couple of times (very possible if you use pb),
then greenlets would have been indispensable, in order to keep the
renderPage() the same as you saw.

Cheers,
stefano



From bahriesz at yahoo.com  Tue Aug 30 06:20:03 2005
From: bahriesz at yahoo.com (bahriesz at yahoo.com)
Date: Tue, 30 Aug 2005 03:20:03 -0700 (PDT)
Subject: [Twisted-Python] multiple connection to mysql with adbapi
Message-ID: <20050830102004.57179.qmail@web51307.mail.yahoo.com>

Hello,

i tried to make a connection to mysql with adbapi and
call thread that make use of these connection.
Everytime i call the thread, it makes new connection
to mysql. How do i close this connection in the thread
once it finish?

thanks.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From radeex at gmail.com  Tue Aug 30 08:54:42 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 30 Aug 2005 22:54:42 +1000
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <60ed19d405083005543f56f9dc@mail.gmail.com>

On 8/30/05, Stefano Masini <stefano at pragma2000.com> wrote:
> The problem with generators and enhanced generators, as I've been
> discussing with a few people at Europython, is that they allow you to
> jump back and forth between two stack *frames*. Whereas greenlets
> support jumping among *full* stacks. This means that from within a
> @deferredGreenlet'ed function you can make calls to other functions
> that call blockOn, while from a @deferredGenerator'ed function you
> can't call a method that in turn calls waitForDeferred.
> 
> While this may seems quite a subtle difference, I think it is not if
> you look at it from the perspective of code readability -- let alone
> the 3 liner horrible hack that waitForDeferred forces you to, at least
> until PEP 342, as we all know.

The effect that being able to call things that do context switches
without explicitly marking them as doing so is much farther reaching
than code readability. I consider it something of a feature that
deferredGenerator forces you to know when context switches will happen
at every level, and when I wrote gthreadless I was not intending it to
be used in a way that didn't require that same knowledge at every
level. And I don't think that this extra knowledge along the line
isn't detracting at all to readability, but instead helping it.

As I said in another thread, I'm really looking forward to PEP 342 and
I'm looking forward to obsoleting all of these other deferred +
cooperative multitasking things I've written (threadless, gthreadless,
and old-school-defgen) with newschool-PEP342-defgen.

And, just for onlookers, I'd like to point out that the code example
below is not showing the difference between non-explicit-greenlets and
explicit-defgen, but instead showing the difference between
explicit-greenlets and plain ond deferreds, which most of us in the
know about the various deferred+cooperative multitasking integration
modules already understand. No one as yet has shown an example showing
where implicit context switching is a good thing.

...

> Here is an example that makes justice to this approach. It involves
> Perspective Broker. Think of writing a web frontend to an application
> on the backend that exports functionality through pb. (the code may
> not work, I'm just making it up now without testing it)
> (I hope everybody is familiar with nevow.stan. If not, take a look at
> it. It's worth.)
> 
> @deferredGreenlet
> def renderPage(self):
>     dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
>                         for elementId in self.idList]
>     return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
> in dataList ] ] ]
> 
> Without gthreadless:
> 
> def renderPage(self):
>     dataList = []
>     def fetchDataRemotely(elementList):
>         def cbFetch(elementData):
>             dataList.append(elementData)
>             if len(elementList) > 0:
>                 return fetchDataRemotely(elementList[1:])
>         return self.backend.callRemote('getDataFromId',
> elementId).addCallback(cbFetch)
>     def cb(crap):
>         return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for
> txt in dataList ] ] ]
>     return fetchDataRemotely(self.idList).addCallback(cb)


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From glyph at divmod.com  Tue Aug 30 10:33:37 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 30 Aug 2005 10:33:37 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <43146E41.30408@divmod.com>

Stefano Masini wrote:

> Believe me. I'm not one of those users in the "periphery of the
> Twisted community" thinking that asynchronous programming is too hard.
> I've been writing network code for quite a while and I matured the
> idea that threads get in your way back when I still didn't know
> python.

Thanks for the example, Stefano!  I think that this serves as an 
excellent counterpoint to my blog ramblings, and I think your ideas 
about where using gthreadless is appropriate are right on target.

I think it might even be appropriate to include this in Twisted, with 
some appropriate disclaimers about needing to understand Deferreds 
*first*... what do you think?



From stefano at pragma2000.com  Tue Aug 30 10:36:43 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 16:36:43 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <60ed19d405083005543f56f9dc@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<60ed19d405083005543f56f9dc@mail.gmail.com>
Message-ID: <4327422405083007362cc98f3a@mail.gmail.com>

On 8/30/05, Christopher Armstrong <radeex at gmail.com> wrote:
> The effect that being able to call things that do context switches
> without explicitly marking them as doing so is much farther reaching
> than code readability. I consider it something of a feature that
> deferredGenerator forces you to know when context switches will happen
> at every level, and when I wrote gthreadless I was not intending it to
> be used in a way that didn't require that same knowledge at every
> level. And I don't think that this extra knowledge along the line
> isn't detracting at all to readability, but instead helping it.

I can agree on this.

> And, just for onlookers, I'd like to point out that the code example
> below is not showing the difference between non-explicit-greenlets and
> explicit-defgen, but instead showing the difference between
> explicit-greenlets and plain ond deferreds, which most of us in the

You are perfectly right.
After my first post the discussion went on privately between me and
Nicola, so I should post some of it here, since it contains exactly
such example.

I'll elaborate a bit on my first example, that was as follows (just to
remind and get started with the rest):

@deferredGreenlet
def renderPage(self):
  dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
                      for elementId in self.idList]
  return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

I basically build a list of values obtained by performing subsequent
calls to callRemote(), everytime passing a parameter from a list.

Let's say that instead of a list of parameters we have a list of
objects, and I build the list of values by calling a method on each of
these objects. Like so:

def renderPage(self):
  dataList = [ element.getData() for element in self.elementList ]
  return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

As you can see, I took out @deferredGreenlet for now, because it's not needed.
Let's say that self.elementList is made of objects defined like this:

class ElementObject(object):
   def getData(self):
       return 1

Indeed @deferredGreenlet is not needed because I'm not even using pb.

Now, let's say that in a new version of the software I introduce
objects that in order to obtain the result of getData() have to go and
query a remote server through pb. Things get more complicated now
because getData() would return a deferred, while other objects would
return a straight result. This difference is very uncomfortable to
live with because you don't know how to treat the result. The are two
ways out, and in both cases you have to change code you've already
written:
1) return defer.succeed(1) instead of return 1
2) defer.maybeDeferred(element.getData()) instead of element.getData()

In other words, as soon as a blocking method pops up among your
methods, you're forced to change and treat all of them as blocking,
even by making up deferred if needed.
In any case, you're also compelled to change the code of renderPage()
from synchronos style to asynchronous, unless you use waitForDeferred.

I often found myself propagating maybeDeferred's back up several
levels in my code, and I didn't like it, to tell the truth.

On the other hand, if you use greenlets, you can keep renderPage the
same exact way as I wrote it the first time, you just need to decorate
it with @deferredGreenlet. And those methods that perform blocking
calls, simply need to wrap the deferreds with blockOn, and that's it.

Yes, I agree on the following point: code that you though was non
blocking, now can all of a sudden become blocking. In this respect,
yes, a gthreadless implementation that would force you to decorate
every method along the way could help gaining awareness.

But let's think about it: why is it so bad that a method that was
supposed to be non blocking now becomes blocking? I can't think of
anything else than shared resources that now can get accessed
concurrently by other parts of code. Right?
But this problem persists with pure-deferred programming style too!
The problem of concurrent access to shared resources does not depend
on the programming model being synchronous or asynchronous, but simply
on the presence of blocking operations. You have to use locks if you
want to protect a shared resource while you block on a lengthy
operation, no matter what programming model you're using.

So, I hope this example makes my point a little more clear. As I was
saying with Nicola, I don't think gthreadless should be used
everywhere, like it was a solution to some horrible problem with
asynchronous programming. Using deferreds is just great and the
awareness you gain of the internals of your implementation by using
them is just irreplaceable.
But *some* code snippets just come out so much more naturally if you
write them using a synchronous model, that being able to mix the two
is just a terrific feature I think.

cheers,
stefano



From stefano at pragma2000.com  Tue Aug 30 11:43:42 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 17:43:42 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43146E41.30408@divmod.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<43146E41.30408@divmod.com>
Message-ID: <43274224050830084366418ca2@mail.gmail.com>

On 8/30/05, Glyph Lefkowitz <glyph at divmod.com> wrote:
> I think it might even be appropriate to include this in Twisted, with
> some appropriate disclaimers about needing to understand Deferreds
> *first*... what do you think?

I think I agree. After all this is a discussion. If you have anything
to share with us other than rudeness, like maybe some code that will
help understand your point of view, I'll be the first one to change
his mind, and maybe decide that gthreadless is useless.



From itamar at itamarst.org  Tue Aug 30 12:40:41 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Aug 2005 12:40:41 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <1125420041.8541.30.camel@localhost.localdomain>

On Tue, 2005-08-30 at 08:47 +0200, Stefano Masini wrote:

> Here is an example that makes justice to this approach. It involves
> Perspective Broker. Think of writing a web frontend to an application
> on the backend that exports functionality through pb. (the code may
> not work, I'm just making it up now without testing it)
> (I hope everybody is familiar with nevow.stan. If not, take a look at
> it. It's worth.)
>  
> @deferredGreenlet
> def renderPage(self):
>     dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
>                         for elementId in self.idList]
>     return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
> in dataList ] ] ]

Let me give a counterargument to this specific example - regardless of
whether it uses greenlets or just Deferreds: it's slow. Really in this
case you'd want callRemote("getDataFromIds", self.idList), or at least
to run all the getDataFromId() in parallel, *not* wait for one to finish
before calling the other.

That being said, I have seen code where something like greenlets or
defgen really makes the code much easier to read, so having one of those
is worthwhile.




From glyph at divmod.com  Tue Aug 30 12:55:13 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 30 Aug 2005 12:55:13 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43274224050830084366418ca2@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>	<df0180$jfu$1@sea.gmane.org>	<432742240508292347261339d8@mail.gmail.com>	<43146E41.30408@divmod.com>
	<43274224050830084366418ca2@mail.gmail.com>
Message-ID: <43148F71.4070304@divmod.com>

Stefano Masini wrote:

> I think I agree. After all this is a discussion. If you have anything
> to share with us other than rudeness, like maybe some code that will
> help understand your point of view, I'll be the first one to change
> his mind, and maybe decide that gthreadless is useless.

Erm...

You seem to have interpreted my point sarcastically.  I am not sure why 
it seemed rude, but I was being serious, and I thought, polite.



From stefano at pragma2000.com  Tue Aug 30 13:06:43 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 19:06:43 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <1125420041.8541.30.camel@localhost.localdomain>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<1125420041.8541.30.camel@localhost.localdomain>
Message-ID: <4327422405083010063699b7d2@mail.gmail.com>

On 8/30/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> Let me give a counterargument to this specific example - regardless of
> whether it uses greenlets or just Deferreds: it's slow. Really in this
> case you'd want callRemote("getDataFromIds", self.idList), or at least
> to run all the getDataFromId() in parallel, *not* wait for one to finish
> before calling the other.

Sure, I agree. That example should be taken as a proof of concept.
But we can easily think of another situation, where the parties carry
over some distributed computation that *does* require going back and
forth with intermediate results, like some cryptography algorithm for
example.



From stefano at pragma2000.com  Tue Aug 30 13:21:47 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 19:21:47 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43148F71.4070304@divmod.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<43146E41.30408@divmod.com>
	<43274224050830084366418ca2@mail.gmail.com>
	<43148F71.4070304@divmod.com>
Message-ID: <432742240508301021596e4727@mail.gmail.com>

On 8/30/05, Glyph Lefkowitz <glyph at divmod.com> wrote:
> You seem to have interpreted my point sarcastically.  I am not sure why

... and this is the reply I was fearing would have arrived. :)
I must really apologize, it always makes you feel really stupid to
misinterpret politeness with sarcasm. I had this doubt ever since I
posted my unfortunate reply... I'm not sure either, I guess it was
defining your own blog posting as "ramblings" that made my head spin
the wrong way. Sorry. :)

By the way, back on track... sure! I'd be very happy to contribute to
the twisted project.

blushing,
stefano



From bgranger at scu.edu  Tue Aug 30 14:18:22 2005
From: bgranger at scu.edu (Brian Granger)
Date: Tue, 30 Aug 2005 11:18:22 -0700
Subject: [Twisted-Python] Nagle delays and twisted
Message-ID: <75D302E9-B746-455A-AFEC-E0E63711C029@scu.edu>

Hello all,

I have been implementing a custom protocol with twisted and have been  
having some odd performance problems.  My protocol consists of a TCP  
connection with multiple client/server commands.  For some types of  
commands, I found it took about 200 ms for the client and server to  
complete.  Because this was over loopback (which has a ping of 0.1  
ms), it seems very slow.  Because I am keeping the socket connected,  
I am not measuring the socket setup time.  Lucky for me, there was a  
discussion about this issue on comp.lang.python recently:

http://groups.google.com/group/comp.lang.python/browse_frm/thread/ 
507a711c61df7ad5/d6e871a24d8506a6#d6e871a24d8506a6

I guess the 200 ms delay is a well known effect of the Nagle  
Algorithm that TCP uses.  Supposedly, this delay can be eliminated by  
i) setting TCP_NODELAY on the socket or ii) avoiding sending multiple  
small messages without a response from the other end.

My understanding is that protocols that do the following will run  
into the problem:

C: short message 1
C: short message 2
S: reply for message 1 and 2

What is the preferred way of setting TCP_NODELAY on a socket  
controlled by twisted?  Are there any adverse side effects that this  
will have?

And second: does anyone have any tips for designing protocols that  
avoid this delay without setting TCP_NODELAY?  The obvious solution  
is to have a reply for each message:

C: short message 1
S: reply for 1
C: short message 2
S: reply for 2

But... this increases the latency of the protocol.  Any ideas or  
experiences with these issues would be greatly appreciated.

Thanks

Brian

  
  



From exarkun at divmod.com  Tue Aug 30 14:31:54 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 30 Aug 2005 14:31:54 -0400
Subject: [Twisted-Python] Nagle delays and twisted
In-Reply-To: <75D302E9-B746-455A-AFEC-E0E63711C029@scu.edu>
Message-ID: <20050830183154.3914.1198907817.divmod.quotient.10264@ohm>

On Tue, 30 Aug 2005 11:18:22 -0700, Brian Granger <bgranger at scu.edu> wrote:
>Hello all,
>
>I have been implementing a custom protocol with twisted and have been 
>having some odd performance problems.  My protocol consists of a TCP 
>connection with multiple client/server commands.  For some types of 
>commands, I found it took about 200 ms for the client and server to 
>complete.  Because this was over loopback (which has a ping of 0.1  ms), it 
>seems very slow.  Because I am keeping the socket connected,  I am not 
>measuring the socket setup time.  Lucky for me, there was a  discussion 
>about this issue on comp.lang.python recently:
>
>http://groups.google.com/group/comp.lang.python/browse_frm/thread/ 
>507a711c61df7ad5/d6e871a24d8506a6#d6e871a24d8506a6
>
>I guess the 200 ms delay is a well known effect of the Nagle  Algorithm that 
>TCP uses.  Supposedly, this delay can be eliminated by  i) setting 
>TCP_NODELAY on the socket or ii) avoiding sending multiple  small messages 
>without a response from the other end.
>
>My understanding is that protocols that do the following will run  into the 
>problem:
>
>C: short message 1
>C: short message 2
>S: reply for message 1 and 2
>
>What is the preferred way of setting TCP_NODELAY on a socket  controlled by 
>twisted?  Are there any adverse side effects that this  will have?
>

In your protocol's connectionMade (or at any other time you desire):

    self.transport.setTcpNoDelay(True)

Passing False will re-enable nagling.  The problems this can cause are primarily an increase in bandwidth usage (and thus increased latency if a link carrying the traffic is near or at saturation) if the change results in segments which would have been combined to be sent separately.

Jp



From bgranger at scu.edu  Wed Aug 31 00:17:10 2005
From: bgranger at scu.edu (Brian Granger)
Date: Tue, 30 Aug 2005 21:17:10 -0700
Subject: [Twisted-Python] deferToThread and thread pool
Message-ID: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>

I have a few questions about the default implementation of  
deferToThread.

1.  Does deferToThread use a thread pool by default?  If not, how can  
I enable this?

2.  Which thread are the callbacks and errbacks of the deferred  
returned by deferToThread run in?

Thanks in advance!

Brian





From radeex at gmail.com  Wed Aug 31 01:01:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 31 Aug 2005 15:01:08 +1000
Subject: [Twisted-Python] deferToThread and thread pool
In-Reply-To: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
References: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
Message-ID: <60ed19d405083022013e3c7f65@mail.gmail.com>

On 8/31/05, Brian Granger <bgranger at scu.edu> wrote:
> I have a few questions about the default implementation of
> deferToThread.
> 
> 1.  Does deferToThread use a thread pool by default?  If not, how can
> I enable this?

Yes

> 
> 2.  Which thread are the callbacks and errbacks of the deferred
> returned by deferToThread run in?

The reactor (i.e., probably the main) thread.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From andrew-twisted at puzzling.org  Wed Aug 31 01:18:08 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 31 Aug 2005 15:18:08 +1000
Subject: [Twisted-Python] deferToThread and thread pool
In-Reply-To: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
References: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
Message-ID: <20050831051808.GL8963@trogdor.home.puzzling.org>

On Tue, Aug 30, 2005 at 09:17:10PM -0700, Brian Granger wrote:
> I have a few questions about the default implementation of  
> deferToThread.
> 
> 1.  Does deferToThread use a thread pool by default?  If not, how can  
> I enable this?

Yes.  You can adjust the threadpool size using
reactor.suggestThreadPoolSize:

    http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html#suggestThreadPoolSize
    http://twistedmatrix.com/projects/core/documentation/howto/threading.html#auto4

> 2.  Which thread are the callbacks and errbacks of the deferred  
> returned by deferToThread run in?

The main thread, i.e. the reactor thread.

-Andrew.




From yves at sita.lu  Wed Aug 31 06:03:03 2005
From: yves at sita.lu (Yves Glodt)
Date: Wed, 31 Aug 2005 12:03:03 +0200
Subject: [Twisted-Python] database connection through ssh tunnel using
	twisted
Message-ID: <43158057.5080901@sita.lu>

Hello,


(I am new to twisted, so please excuse me if my question is not 
appropriate...)

I am using the python module kinterbasdb [1] for connecting to a 
Firebird DB, and I wonder if it's possible, using twisted, to pass this 
connection through a ssh tunnel, which should be created on the fly by 
twisted (without running a /usr/bin/ssh commandline)...

best regards and thanks in advance,
Yves



[1]: 
http://kinterbasdb.sourceforge.net/dist_docs/usage.html#tutorial_connect



From matt at pollenation.net  Wed Aug 31 08:31:11 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 13:31:11 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
Message-ID: <4315A30F.6020007@pollenation.net>

Hi,

In response to the announcement of the Twisted Asynchronous Database Api
(tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
mention something I wrote.

[Unfortunately, tada does not use threads correctly so it's likely to
break. The author knows this and has added a warning to the module for now.]

A while back, I started messing around with making a standard, blocking
db-api module appear non-blocking but with a deferred API. I called it
laxdb and it's in my sandbox.

  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup

laxdb is quite literally an async db-api interface and not a
t.enterprise.adbapi style interface. In particular, it provides exactly
the same API (but deferred) and it doesn't take over transaction
management. It also doesn't wrongly call a cursor, "Transaction" ;-).

I recently went back to laxdb and finished it off, also adding a
connection pool implementation.

Now, I haven't used laxdb in a real project and there are no unit tests
but I think it's reasonably complete. It should work with any dbapi
module that has threadsafety level 1 or higher, just like adbapi.

If there's interest in this way of accessing a database then I would be
happy to write tests etc, move it into Twisted and maintain it.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From yves at sita.lu  Wed Aug 31 09:45:23 2005
From: yves at sita.lu (Yves Glodt)
Date: Wed, 31 Aug 2005 15:45:23 +0200
Subject: [Twisted-Python] database connection through ssh tunnel using
	twisted
In-Reply-To: <43158057.5080901@sita.lu>
References: <43158057.5080901@sita.lu>
Message-ID: <4315B473.9020104@sita.lu>

Yves Glodt wrote:
> Hello,
> 
> 
> (I am new to twisted, so please excuse me if my question is not 
> appropriate...)
> 
> I am using the python module kinterbasdb [1] for connecting to a 
> Firebird DB, and I wonder if it's possible, using twisted, to pass this 
> connection through a ssh tunnel, which should be created on the fly by 
> twisted (without running a /usr/bin/ssh commandline)...

Sorry for selfreplying, but I guess I need the conch.ssh.forwarding module:
http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.forwarding.html

The doc is a little spartanic, does anybody have an example around...?

I need a forwarding from box_a:3051 <-ssh-over-internet-> box_b:3050

box_a is my local box where my python daemon is running. This daemon 
connects from time to time to box_b over the internet.

Regards,
Yves


> best regards and thanks in advance,
> Yves
> 
> 
> 
> [1]: 
> http://kinterbasdb.sourceforge.net/dist_docs/usage.html#tutorial_connect
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> .
> 



From prabaharpython at yahoo.co.in  Wed Aug 31 10:04:02 2005
From: prabaharpython at yahoo.co.in (Mosas)
Date: Wed, 31 Aug 2005 15:04:02 +0100 (BST)
Subject: [Twisted-Python] how to install twisted in redhat linux?
Message-ID: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>

Dear sir,
        Is there any rpm packages available for
twisted , if any get me the link for the source
package. If anyone had tried twisted in Redhat linux
kindly guide me out for the installation. 



Regards,
S.Rajkumar


	

	
		
__________________________________________________________ 
Yahoo! India Matrimony: Find your partner online. Go to http://yahoo.shaadi.com



From itamar at itamarst.org  Wed Aug 31 10:25:08 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Aug 2005 10:25:08 -0400
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <1125498308.8767.21.camel@localhost.localdomain>

On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:

> A while back, I started messing around with making a standard, blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.
> 
>   svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>   http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup

I get the impression from your example:

    def connected(conn):
        curs = conn.cursor()
        d = curs.execute("select * from test")
        d.addCallback(lambda ignore: curs.fetchall())
        d.addCallback(lambda rows: pprint(rows))
        # ...

that you keep dispatching to a thread, then passing it back to Twisted
thread, repeatedly, unlike runInteraction which only does this once. I
would guess that this will slow down complex database interactions
somewhat.




From matt at pollenation.net  Wed Aug 31 10:34:38 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 15:34:38 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <1125498308.8767.21.camel@localhost.localdomain>
References: <4315A30F.6020007@pollenation.net>
	<1125498308.8767.21.camel@localhost.localdomain>
Message-ID: <4315BFFE.2020309@pollenation.net>



Itamar Shtull-Trauring wrote:

>On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
>
>  
>
>>A while back, I started messing around with making a standard, blocking
>>db-api module appear non-blocking but with a deferred API. I called it
>>laxdb and it's in my sandbox.
>>
>>  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>>  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>>    
>>
>
>I get the impression from your example:
>
>    def connected(conn):
>        curs = conn.cursor()
>        d = curs.execute("select * from test")
>        d.addCallback(lambda ignore: curs.fetchall())
>        d.addCallback(lambda rows: pprint(rows))
>        # ...
>
>that you keep dispatching to a thread, then passing it back to Twisted
>thread, repeatedly, unlike runInteraction which only does this once. I
>would guess that this will slow down complex database interactions
>somewhat.
>
Yep, I'm sure it will although I don't know how bad the effect is
because I have done no timing tests. Has anyone else investigated this
sort of issue before?

There is actually a comment in the module's docstring about the use of
threads:

  "The amount of thread context switching may hurt laxdb performance."

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From foom at fuhm.net  Wed Aug 31 10:35:27 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 31 Aug 2005 10:35:27 -0400
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>

On Aug 31, 2005, at 8:31 AM, Matt Goodall wrote:
> In response to the announcement of the Twisted Asynchronous  
> Database Api
> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
> mention something I wrote.
>
> A while back, I started messing around with making a standard,  
> blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.

I think it'd be nice to get something like one of these into twisted  
to supplement/replace adbapi, but it'd probably be best to make sure  
that the wrapper for blocking databases and pgasync can use the same  
interface first.

James



From exarkun at divmod.com  Wed Aug 31 10:51:08 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 31 Aug 2005 10:51:08 -0400
Subject: [Twisted-Python] Re: Sockets: code works locally but fails over LAN
In-Reply-To: <1125493380.805663.16800@g44g2000cwa.googlegroups.com>
Message-ID: <20050831145108.3914.126223980.divmod.quotient.10565@ohm>

On 31 Aug 2005 06:03:00 -0700, n00m <n00m at narod.ru> wrote:
>import socket, thread
>host, port = '192.168.0.3', 1434
>s1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
>s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
>s2.connect((host, 1433))
>s1.bind((host, port))
>s1.listen(1)
>cn, addr = s1.accept()
>
>def VB_SCRIPT():
>    while 1:
>        data = cn.recv(4096)
>        if not data: return
>        s2.send(data)
>        print 'VB_SCRIPT:' + data + '\n\n'
>
>def SQL_SERVER():
>    while 1:
>        data = s2.recv(4096)
>        if not data: return
>        cn.send(data)
>        print 'SQL_SERVER:' + data + '\n\n'
>
>thread.start_new_thread(VB_SCRIPT,())
>thread.start_new_thread(SQL_SERVER,())

This is about the same as:

    mktap portforward --port 1434 --host 192.168.0.3 --dest_port 1433
    twistd -f portforward.tap

You'll find the code behind these two commands here:

<http://cvs.twistedmatrix.com/cvs/trunk/twisted/tap/portforward.py?view=markup&rev=13278>

and here:

<http://cvs.twistedmatrix.com/cvs/trunk/twisted/protocols/portforward.py?view=markup&rev=12914>

And of course, the main Twisted site is <http://twistedmatrix.com/>.

Some differences between portforward.tap and your code include:

portforward.tap will accept multiple connections, rather than just one.  portforward.tap won't print out all the bytes it receives (I assume this is just for debugging purposes anyway - if not, a simple modification will cause it to do this).  portforward.tap won't non-deterministically drop traffic, since Twisted checks the return value of send() and properly re-transmits anything which has not actually been sent.

Hope this helps,

Jp



From disen at geo.unizh.ch  Wed Aug 31 11:19:27 2005
From: disen at geo.unizh.ch (Daniel Isenegger)
Date: Wed, 31 Aug 2005 17:19:27 +0200
Subject: [Twisted-Python] twisted.internet.error.ConnectionLost
Message-ID: <4315CA7F.8010800@geo.unizh.ch>

Hi
in an instance of protocol.basic.lineOnlyReceiver i i read in a file in 
a string and try to send this string to another instance of 
protocol.basic.lineOnlyReceiver trough the normal 
self.transport.write(theString + "\r\n")

when doing this i get the error message:
IK_IC_TSS 16:13:53:03  connectionLost() for the instance IK_IC_TSS due 
to reason: [Failure instance: Traceback (failure with no frames): 
twisted.internet.error.ConnectionLost: Connection to the other side was 
lost in a non-clean fashion.

The file is a normal text file of about 200KB.

I googled for similar types of errors, but could not find smth.

Is there an explicit string size limit or is it just the fact the the 
lineOnlyReceiver is not built for that kind of data transfer?

Thanks
 Dani




From matt at pollenation.net  Wed Aug 31 11:26:24 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 16:26:24 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>
References: <4315A30F.6020007@pollenation.net>
	<ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>
Message-ID: <4315CC20.1050601@pollenation.net>



James Y Knight wrote:

> On Aug 31, 2005, at 8:31 AM, Matt Goodall wrote:
>
>> In response to the announcement of the Twisted Asynchronous  Database
>> Api
>> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
>> mention something I wrote.
>>
>> A while back, I started messing around with making a standard,  blocking
>> db-api module appear non-blocking but with a deferred API. I called it
>> laxdb and it's in my sandbox.
>
>
> I think it'd be nice to get something like one of these into twisted 
> to supplement/replace adbapi, but it'd probably be best to make sure 
> that the wrapper for blocking databases and pgasync can use the same 
> interface first.


Well ... I did do that at first but pgasync isn't quite dbapi compatible
and it also has a couple of oddities that I'm not sure about.

My memory is a bit fuzzy about all this now but the main thing is that
pgasync queues queries.

There's basically a chain of deferreds internal to a pgasync connection.
In some ways, it makes pgasync easier to use, because it looks like
stuff is not deferred, but I actually found it irritating after a while.
Personally, I think if something is async it might as well look async.

There are also a number of bugs (in my opinion) which mean pgasync is
not dbapi  compatible but those can probably be fixed over time.

Anyway, I agree that this would be good but there are a couple of API
issues that need solving first before it's possible.

Note: I don't think laxdb is an adbapi replacement. adbapi has its
advantages but at the cost of losing a bit of control over how and when
database operations happen. They're probably just different.

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From mwl at point45.com  Wed Aug 31 11:43:57 2005
From: mwl at point45.com (Mark Leonard)
Date: Wed, 31 Aug 2005 17:43:57 +0200
Subject: [Twisted-Python] Another adbapi (and some Twisted goodness)
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <4315D03D.9040800@point45.com>

All this talk of adbapi's has finally prompted us to release our adbapi. 
It has been in use for about 10 months now on production sites and we 
consider it stable. It is also somewhat dbapi compliant.

Also included in the package is a useful function decorator: defertrap, 
analagous to twisted's defgen in that it enables generators to yield 
deferreds, resuming them upon callback and synchronously raising 
exceptions on errback.

Download the package here:
http://www.point45.org/download/point45-0.01.tar.gz

We put up a trac wiki, which at some point (soon) will be home for the 
svn repo of these modules. In the mean time it hosts some examples on 
using the adbapi and defertrap:
http://www.point45.org/

As more of our modules become fit for public consumption we'll be adding 
them to this package.

-Mark

-- 
Mark Leonard - mwl at point45.com
Technical Director
Point 45 Entertainment (Pty) Ltd.
office: +27(0)21 4876900
mobile: +27(0)83 7373776









From npk.gangadhar at gmail.com  Wed Aug 31 12:17:08 2005
From: npk.gangadhar at gmail.com (Gangadhar NPK)
Date: Wed, 31 Aug 2005 21:47:08 +0530
Subject: [Twisted-Python] how to install twisted in redhat linux?
In-Reply-To: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
References: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
Message-ID: <61b4e70f0508310917160fc783@mail.gmail.com>

IIRC I could do a python setup.py install to install the twisted package
hth


On 8/31/05, Mosas <prabaharpython at yahoo.co.in> wrote:
> Dear sir,
>         Is there any rpm packages available for
> twisted , if any get me the link for the source
> package. If anyone had tried twisted in Redhat linux
> kindly guide me out for the installation.
> 
> 
> 
> Regards,
> S.Rajkumar
> 
> 
> 
> 
> 
> 
> __________________________________________________________
> Yahoo! India Matrimony: Find your partner online. Go to http://yahoo.shaadi.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Aug 31 12:34:07 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Aug 2005 12:34:07 -0400
Subject: [Twisted-Python] how to install twisted in redhat linux?
In-Reply-To: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
References: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
Message-ID: <1125506047.13879.4.camel@localhost.localdomain>

On Wed, 2005-08-31 at 15:04 +0100, Mosas wrote:
> Dear sir,
>         Is there any rpm packages available for
> twisted , if any get me the link for the source
> package. If anyone had tried twisted in Redhat linux
> kindly guide me out for the installation. 

http://www.python.org/pyvault/ seems to have some.




From foom at fuhm.net  Wed Aug 31 17:50:50 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 31 Aug 2005 17:50:50 -0400
Subject: [Twisted-Python] Weekly Bug Summary
References: <E1EAaOI-0005Zu-00@pyramid.twistedmatrix.com>
Message-ID: <C95EDE8A-D0DD-495F-9B31-E6E1886C7286@fuhm.net>

So I forgot to generate this report for a few weeks now...but to make  
up for that, I made a crontab to do it for me, finally.

Bug summary
______________________
Since 2005-07-27 12:20:33.530000:
  Bugs opened: 29   Bugs closed: 28   Total open bugs: 418 (+1)
   Urgent: 10 (+1)
   Bug: 186 (+5)
   Feature: 151 (+1)
   Wish: 71 (-6)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE] CannotListenError (SO_REUSEADDR)  (6 days ago)
        http://twistedmatrix.com/bugs/issue1151 opened by hraban

                     ==== Bug ====
Raised Jellyable pb.Error doesn't jelly if raised in callback  (1 1/2  
hours ago)
        http://twistedmatrix.com/bugs/issue1156 opened by justinj

[DOCUMENTATION] Rename "HOWTOs" to "Developer Guide"  (yesterday)
        http://twistedmatrix.com/bugs/issue1155 opened by spiv

basic.LineReceiver doesn't handle variable line delimiters  (yesterday)
        http://twistedmatrix.com/bugs/issue1154 opened by jeffsilver

[WEB] web.proxy does not set or use 'Via' header  (1 week ago)
        http://twistedmatrix.com/bugs/issue1149 opened by jeffsilver

[DOCUMENTATION] Need a howto for Twisted's logging  
(twisted.python.log)  (yesterday)
        http://twistedmatrix.com/bugs/issue1153 opened by spiv

[DOCUMENTATION] Documentation: Aliases not covered in the API  
documentation  (1 week ago)
        http://twistedmatrix.com/bugs/issue1143 opened by moof

Combine twisted.manhole._inspectro.LoggingProtocol and  
twisted.protocols.policies.TrafficLoggingProtocol  (1 week ago)
        http://twistedmatrix.com/bugs/issue1150 opened by spiv

twisted.mail.smtp.py  timeout can cause runtime error  (1 week ago)
        http://twistedmatrix.com/bugs/issue1147 opened by xing

[DOCUMENTATION] Is the Deferred tutorial actually a good document?   
(2 weeks ago)
        http://twistedmatrix.com/bugs/issue1138 opened by remote

[DOCUMENTATION] Documentation: twisted.internet.reactor does not  
appear in the API docs  (1 week ago)
        http://twistedmatrix.com/bugs/issue1144 opened by moof

[DOCUMENTATION, WEBSITE] Generate official documents at commit time   
(1 week ago)
        http://twistedmatrix.com/bugs/issue1140 opened by hypatia

[WEBSITE] Web site menu disappears when window not big  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1137 opened by justinj

Documentation: man pages appear as source rather thn HTML on the doc  
website  (1 week ago)
        http://twistedmatrix.com/bugs/issue1146 opened by moof

Numerous broken URLs in documentation  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue1142 opened by TimothyFitz

[NEEP HELP] Update mktap.xhtml to reflect current best practices  (1  
week ago)
        http://twistedmatrix.com/bugs/issue1139 opened by hypatia

[CORE] Finite object leak in threadpool  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1134 opened by jeffsilver

[PATCH] gthreadless.py  (4 weeks ago)
        http://twistedmatrix.com/bugs/issue1129 opened by stefanomasini

trial misnames temporary directories  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1135 opened by exarkun

[CORE] possible leak/cycle-reference in baseclient &amp; connector   
(3 weeks ago)
        http://twistedmatrix.com/bugs/issue1131 opened by jerry

[FTP] [PATCH] FTPClientBasic PASS command problem  (3 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1130 opened by  
michele.petrazzo

Need to use portable windowing API  (3 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1133 opened by duanev

                     ==== Feature ====
[DOCUMENTATION, WEB] xmlrpc.html doesn't describe how to return  
errors to the client  (2 days ago)
        http://twistedmatrix.com/bugs/issue1152 opened by spiv

[DOCUMENTATION] Replace current finger examples with lifeless's and  
radix's work on a TDD finger example  (1 week ago)
        http://twistedmatrix.com/bugs/issue1148 opened by hypatia

Trial spews color codes by default  on win32  (1 week ago)
        http://twistedmatrix.com/bugs/issue1141 opened by TimothyFitz

[DOCUMENTATION] documenting some 'tips' for newbies  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1136 opened by tjs

[WEB] XML-RPC for web2 - propose API changes  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1132 opened by itamarst

Protocol-level wrapper for transport.loseConnection  (1 month ago)
        http://twistedmatrix.com/bugs/issue1128 opened by subterrific

                     ==== Wish ====
[DOCUMENTATION] Documentation: Reactor "quick reference"  (1 week ago)
        http://twistedmatrix.com/bugs/issue1145 opened by moof

Bugs Closed
______________________
                     ==== Bug ====
Numerous broken URLs in documentation  (1 week ago)
        http://twistedmatrix.com/bugs/issue1142 opened by  
TimothyFitz, closed by exarkun

[CORE, DOCUMENTATION] [PATCH] UDP Doc Update: Multicast Howto and  
Example  (2 months ago)
        http://twistedmatrix.com/bugs/issue1084 opened by ra1n,  
closed by hypatia

[DOCUMENTATION, PB] Doc-Example QuoteTap isn't easy to run  (18  
months ago)
        http://twistedmatrix.com/bugs/issue508 opened by nferchen,  
closed by hypatia

pbsimple.py code is missing from the "Using Perspective Broker" howto  
on web site  (3 months ago)
        http://twistedmatrix.com/bugs/issue1053 opened by mg, closed  
by hypatia

[DOCUMENTATION] [PATCH] Twisted overview howto needs updating  (19  
months ago)
        http://twistedmatrix.com/bugs/issue481 opened by jml, closed  
by hypatia

[APPLICATION, DOCUMENTATION] Application howto should have better  
explanation of services  (15 months ago)
        http://twistedmatrix.com/bugs/issue633 opened by hypatia,  
closed by hypatia

[DOCUMENTATION] [PATCH] Changes to HOWTO index page  (3 months ago)
        http://twistedmatrix.com/bugs/issue1043 opened by STemplar,  
closed by hypatia

[PATCH] Light editing of "Using Application" for flow and continuity   
(3 months ago)
        http://twistedmatrix.com/bugs/issue1052 opened by waterbug,  
closed by hypatia

[CORE] BUG: exceptions in setUpClass cause trial to exit prematurely   
(5 months ago)
        http://twistedmatrix.com/bugs/issue960 opened by exarkun,  
closed by exarkun

[TRIAL] Trial --tbformat=emacs now shows plain-style tracebacks  (9  
months ago)
        http://twistedmatrix.com/bugs/issue783 opened by radix,  
closed by exarkun

trial misnames temporary directories  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1135 opened by exarkun,  
closed by exarkun

[FTP] bug in mozilla ftp support  (21 months ago)
        http://twistedmatrix.com/bugs/issue412 opened by slyphon,  
closed by spiv

[FTP] ftp blocks unless using a passive client  (11 months ago)
        http://twistedmatrix.com/bugs/issue723 opened by cablehead,  
closed by cablehead

TypeError in Failure.raiseException when using  
defer.deferredGenerator and perspective broker  (1 month ago)
        http://twistedmatrix.com/bugs/issue1103 opened by titty,  
closed by titty

[FTP] [PATCH] FTPClientBasic PASS command problem  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1130 opened by  
michele.petrazzo, closed by spiv

Need to use portable windowing API  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1133 opened by duanev,  
closed by exarkun

                     ==== Feature ====
[DOCUMENTATION] Document how to write a Service correctly  (1 month ago)
        http://twistedmatrix.com/bugs/issue1118 opened by spiv,  
closed by hypatia

[DOCUMENTATION] Document Services available in Twisted  (1 month ago)
        http://twistedmatrix.com/bugs/issue1119 opened by spiv,  
closed by hypatia

[FTP] [PATCH] STOR, MKD, RMD and DELE for twisted.protocols.ftp.  (4  
months ago)
        http://twistedmatrix.com/bugs/issue1003 opened by mkerrin,  
closed by mkerrin

deferToThread decorator  (3 months ago)
        http://twistedmatrix.com/bugs/issue1071 opened by tjs, closed  
by tjs

Make Twisted pychecker friendly  (25 months ago)
        http://twistedmatrix.com/bugs/issue86 opened by spiv, closed  
by exarkun

                     ==== Wish ====
[DOCUMENTATION] Twisted complete but concise architecture view in  
Documentation  (13 months ago)
        http://twistedmatrix.com/bugs/issue650 opened by  
sridharinfinity, closed by hypatia

twisted.spread.util.StringPager.nextPage makes tons of string copies   
(18 months ago)
        http://twistedmatrix.com/bugs/issue548 opened by exarkun,  
closed by exarkun

Update download page with Python 2.4/1.3.0/Win32 installer  (6 months  
ago)
        http://twistedmatrix.com/bugs/issue900 opened by moonfallen,  
closed by exarkun

Naming the thread pools, especially for adbapi's ConnectionPool  (3  
months ago)
        http://twistedmatrix.com/bugs/issue1062 opened by bruce,  
closed by exarkun

quiet those deprecation warnings for deployment uses of deprecated  
code via mktap  (3 months ago)
        http://twistedmatrix.com/bugs/issue1059 opened by bruce,  
closed by exarkun

[DOCUMENTATION] "Converting from asyncore" Howto  (25 months ago)
        http://twistedmatrix.com/bugs/issue81 opened by itamarst,  
closed by exarkun

Cred needs pam checker, and tehre is already one  (3 months ago)
        http://twistedmatrix.com/bugs/issue1044 opened by liiwi,  
closed by exarkun







From radeex at gmail.com  Wed Aug 31 18:48:06 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 1 Sep 2005 08:48:06 +1000
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <1125498308.8767.21.camel@localhost.localdomain>
References: <4315A30F.6020007@pollenation.net>
	<1125498308.8767.21.camel@localhost.localdomain>
Message-ID: <60ed19d40508311548236f393a@mail.gmail.com>

On 9/1/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
> 
> > A while back, I started messing around with making a standard, blocking
> > db-api module appear non-blocking but with a deferred API. I called it
> > laxdb and it's in my sandbox.
> >
> >   svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
> >   http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
> 
> I get the impression from your example:
> 
>     def connected(conn):
>         curs = conn.cursor()
>         d = curs.execute("select * from test")
>         d.addCallback(lambda ignore: curs.fetchall())
>         d.addCallback(lambda rows: pprint(rows))
>         # ...
> 
> that you keep dispatching to a thread, then passing it back to Twisted
> thread, repeatedly, unlike runInteraction which only does this once. I
> would guess that this will slow down complex database interactions
> somewhat.

Yeah, but the usual way to use adbapi is the same, isn't it? i.e.,
runQuery calls. Sounds like you're comparing apples to oranges (on the
other hand, I guess it would be nice if lax-db had a runInteraction).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From matt at pollenation.net  Wed Aug 31 19:55:36 2005
From: matt at pollenation.net (Matt Goodall)
Date: Thu, 01 Sep 2005 00:55:36 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <60ed19d40508311548236f393a@mail.gmail.com>
References: <4315A30F.6020007@pollenation.net>	<1125498308.8767.21.camel@localhost.localdomain>
	<60ed19d40508311548236f393a@mail.gmail.com>
Message-ID: <43164378.4060707@pollenation.net>

Christopher Armstrong wrote:
> On 9/1/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> 
>>On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
>>
>>
>>>A while back, I started messing around with making a standard, blocking
>>>db-api module appear non-blocking but with a deferred API. I called it
>>>laxdb and it's in my sandbox.
>>>
>>>  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>>>  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>>
>>I get the impression from your example:
>>
>>    def connected(conn):
>>        curs = conn.cursor()
>>        d = curs.execute("select * from test")
>>        d.addCallback(lambda ignore: curs.fetchall())
>>        d.addCallback(lambda rows: pprint(rows))
>>        # ...
>>
>>that you keep dispatching to a thread, then passing it back to Twisted
>>thread, repeatedly, unlike runInteraction which only does this once. I
>>would guess that this will slow down complex database interactions
>>somewhat.
> 
> 
> Yeah, but the usual way to use adbapi is the same, isn't it? i.e.,
> runQuery calls. Sounds like you're comparing apples to oranges (on the
> other hand, I guess it would be nice if lax-db had a runInteraction).
> 

Yes, adbapi dispatches to a thread but runInteraction can be used to
keep the number of dispatches to a minimum by allowing you to perform
multiple db operations in one go.

I guess laxdb could have something equivalent to runInteraction that
would let you work with the blocking database objects rather than the
wrappers. I don't think it should ever automatically commit or rollback
(unless explicitly told to, perhaps) like adbapi does.

A laxdb runInteraction might even make naturally sequential database
code easier to read and maintain too - it can get a bit messy at times.


I really see two main benefits of laxdb:

  1. It's just like dbapi only async. Of course, with that comes the
     "complexity" of deferreds.
  2. It gives you tight control over transactions.


Let me give some examples of point 2 ...


When you need multiple bits of information to process something, i.e. a
web request, you have a choice with adbapi:

  1. call runQuery multiple times, in a deferred chain or as a
     DeferredList, and collect all the bits together
  2. call runInteraction once, collect all the bits during the called
     function and return them all from the function as a tuple or some
     other object

Option 1 is not really a good choice. Not only can it get very ugly but,
critically, each of the runQuery calls happens in a different
transaction! It's not difficult to see how that could cause problems for
 some of the bits of ACID, especially consistency and isolation.

Option 2 only works when you know all the data you need which is not
always feasible because, often, you have unrelated bits of the
application wanting unrelated data.


Another scenario is that you need to SELECT ... FOR UPDATE some data,
use that (locked) data to perform other deferred operation, and update
the locked rows using the data we just collected from the "other
deferred operation".

I believe this is currently impossible with adbapi because it
automatically handles transactions and you can't do deferred stuff from
the runInteraction function because it's not running in the reactor's
thread.


axdb helps in both these scenarios. You can get a connection, do
whatever you want, even mixing database and other async operations, and
commit or rollback when you're complete.


laxdb also allows you to do things like process an entire web request
within a single transaction, if that is a requirement of your application.


Wow, that was a bit of a rant. Hopefully it explains why something like
laxdb may be useful as part of Twisted though. It's just a different way
of working that adbapi.


- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \	       Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From prousa at gmail.com  Wed Aug 31 20:57:16 2005
From: prousa at gmail.com (the procrastinator)
Date: Wed, 31 Aug 2005 19:57:16 -0500
Subject: [Twisted-Python] Py2exe and Oscar Implementation
Message-ID: <3d3e7a2705083117571352d970@mail.gmail.com>

I am working on a an executable AIM program. However, when i compile with 
py2exe, i get a runtime error:

ImportError: You need to have the Twisted Words package installed to use 
twisted.protocols.oscar. ...

However, I do have that installed. The *.py file works in Twisted. 

I have tried:
import twisted.words
from twisted import words

but i still get this error message when compiled.

Thank you in advance for any help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050831/39ebc3da/attachment.htm 

From andrew-twisted at puzzling.org  Wed Aug 31 21:01:54 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 1 Sep 2005 11:01:54 +1000
Subject: [Twisted-Python] twisted.internet.error.ConnectionLost
In-Reply-To: <4315CA7F.8010800@geo.unizh.ch>
References: <4315CA7F.8010800@geo.unizh.ch>
Message-ID: <20050901010154.GO8963@trogdor.home.puzzling.org>

On Wed, Aug 31, 2005 at 05:19:27PM +0200, Daniel Isenegger wrote:
> Hi
> in an instance of protocol.basic.lineOnlyReceiver i i read in a file in 
> a string and try to send this string to another instance of 
> protocol.basic.lineOnlyReceiver trough the normal 
> self.transport.write(theString + "\r\n")

(You may find twisted.protocol.basic.FileSender helpful for this case)

> when doing this i get the error message:
> IK_IC_TSS 16:13:53:03  connectionLost() for the instance IK_IC_TSS due 
> to reason: [Failure instance: Traceback (failure with no frames): 
> twisted.internet.error.ConnectionLost: Connection to the other side was 
> lost in a non-clean fashion.
> 
> The file is a normal text file of about 200KB.
> 
> I googled for similar types of errors, but could not find smth.
> 
> Is there an explicit string size limit or is it just the fact the the 
> lineOnlyReceiver is not built for that kind of data transfer?

There is -- see the MAX_LENGTH attribute of LineOnlyReceiver.  As the
docstring says:

    @cvar MAX_LENGTH: The maximum length of a line to allow (If a
                      sent line is longer than this, the connection is dropped).
                      Default is 16384.

-Andrew.




From eddyxu at 126.com  Wed Aug 31 22:05:56 2005
From: eddyxu at 126.com (EddyXu)
Date: Thu, 01 Sep 2005 10:05:56 +0800
Subject: [Twisted-Python] How to make twisted server run as an deamon
Message-ID: <43166204.5090501@126.com>

Hi,all,
I need to write an deamon, by using the twisted. But it seems that it
could not use standard thread module to make it works. Any one can give
me some advice?





From bbum at mac.com  Wed Aug 31 22:55:48 2005
From: bbum at mac.com (Bill Bumgarner)
Date: Wed, 31 Aug 2005 19:55:48 -0700
Subject: [Twisted-Python] How to make twisted server run as an deamon
In-Reply-To: <43166204.5090501@126.com>
References: <43166204.5090501@126.com>
Message-ID: <E3EB5811-EA87-404C-A93A-D28F98A877FA@mac.com>

On Aug 31, 2005, at 7:05 PM, EddyXu wrote:
> I need to write an deamon, by using the twisted. But it seems that it
> could not use standard thread module to make it works. Any one can  
> give
> me some advice?

You will most likely want to use twistd and write a .tac file that  
starts up your server.  Twistd will take care of daemonizing and is  
really quite nice.

--- foo.tac ---
from twisted.application import service, internet
import Foo # your server

application = service.Application("foo")
applicationService = service.IServiceCollection(application)

server =  internet.TCPServer(Foo.serverPort(), Foo.serverFactory())
server.setServiceParent(applicationService)
--- end foo.tac ---

Except that it doesn't allow command line arguments to be passed  
in.   Bummer.  Easy to fix, though, I really ought to write up a  
recipe for doing so.

b.bum



From rpindiproli at google.com  Mon Aug  1 17:24:04 2005
From: rpindiproli at google.com (Ravi Pindiproli)
Date: Mon, 1 Aug 2005 16:24:04 -0700
Subject: [Twisted-Python] Engineering Opportunities at Google
Message-ID: <200508012324.j71NO4Al008262@216-239-45-4.google.com>

Hello Folks
 
My name is Ravi Pindiproli and I am a Recruiter for the SRE (Site
Reliability Engineering) Group at Google.  This is the most dynamic,
challenging and fun group at Google.  The SRE group is responsible for our
Google website from start to finish and it is different from the Operations
group.

 

We are constantly seeking Extraordinary developers and UNIX Administrators
(Linux) experts to join our exciting team and growing organization.   We
have positions open in the USA in Mountain View (CA), Santa Monica (CA), New
York (NY), and Kirkland (WA) as well as Dublin (Ireland) and Zurich
(Switzerland).  I am enclosing job descriptions of two positions.

 

If any of you feel that either of these positions is something that may be
of interest to you, please send me an email so we can schedule a time for me
to call you to speak with you to discuss more details.  

 

Thanks!

 

Senior Systems Administrator/Architect, Google.com (SRE)

This position is available in Mountain View, CA, / New York, NY / Kirkland,
WA / Dublin, Ireland / and Zurich, Switzerland.

Are you a detail-oriented systems professional, seasoned Unix jockey,
Internet services architect, database whiz, performance analyst, or software
engineer, at the top of your game? 

*	Looking for the next cool problem to solve, in a fast-paced and
engineering-driven environment? 

*	Can you write a script or application that performs practically the
entire job you once held earlier in your career? 

*	Does your idea of a good time involve taking things apart just to
see how they work? Are you successful putting them back together when you're
done? 

*	Can you help achieve increased Availability, Reliability, Uptime,
and Quality? (for our systems and services, naturally) 

If you answered "Yes" to more than three of the above questions, you may
have what it takes. Keep reading. 

Google.com Engineers are involved in all aspects of running our site. From
design to debug, from architecture to applications, Google.com engineers
spend their time troubleshooting problems in large-scale clustered
application service environments, and focus on making continual improvements
to our services. 

Working for Google.com, you will wear many hats: performance analyst,
service architect, system/database administrator, capacity planner, tools
developer, monitoring expert, and technical evangelist, for all components
of Google.com's services. 

This position requires a passion for problem solving, deep understanding of
networks, operating systems, multi-tiered Internet services, and the ability
to learn new applications and concepts quickly. Strong scripting skills are
essential. 

Requirements: 

*	3+ years experience in Unix or Linux Systems Administrator. 

*	Experience in a high-volume or critical production service
environment. 

*	Strong understanding of networking; understanding of how to isolate,
diagnose, and resolve service delivery components (service delivery
components include servers, networks, and applications); be familiar with
the functionality, operating, and failure modes of key networking devices
(routers, switches, bridges, firewalls, hardware load balancers); be able to
identify networking as the potential cause of a service issue using
server-resident tools to generate this data (tcpdump, ping, traceroute,
etc.); familiarity in interpreting the output of these tools; familiarity
with common network topologies, protocols, and tools; have some notion of
common network security exploits -- and their remedies; understanding of
troubleshooting at the packet level. 

*	Skilled in leading projects, especially in deploying live end-user
systems. 

*	Proven technical troubleshooting experience. 

*	Database administration experience a plus. 

*	Programming or debugging of web applications running under Java VM. 

*	In-depth knowledge of Linux, networking, and shell scripting. 

*	Knowledge of Python programming a plus. 

*	Experience with MySQL a plus. 

*	Programming and troubleshooting skills in C/C++ and/or Java a plus. 

*	Excellent written and verbal communication skills. 

*	Ability to handle periodic on-call duty as well as out-of-band
requests. 

*	BA/BS in Computer Science or a related technical discipline. 

Senior Software Engineer/Unix System & Network Administrator, Google.com
(SRE) 

This position is available in Mountain View, CA, / New York, NY / Kirkland,
WA / Dublin, Ireland / and Zurich, Switzerland. 

Are you part ace coder, part adrenaline junkie? Do you have a knack for
seeing a problem and immediately discerning the likely solution? Maybe
you've been coding for years, are bored with the old
design-build-review-test-ship-repeat routine, and yearn for some
faster-paced challenges? Or perhaps you're a seasoned software engineer who
is also a genius at jockeying networks and administering UNIX clusters. 

We're looking for top-notch thrill seeking, software engineers to join the
Google.com team. Google.com engineers are in the thick of everything
involved with keeping Google running, from code-level troubleshooting of
traffic anomalies to maintenance of our most cutting edge services; from
monitoring and alerts to building new automation infrastructure. We are
aggressively building this elite team of high level engineers in this
mission critical environment. All team members must have strong analytical
and troubleshooting skills, fluency in coding, good communication skills,
and most of all enthusiasm for tackling the complex problems of scale which
are uniquely Google. Google.com engineers tackle challenging, novel
situations every day, and work with just about every other engineering and
operations team in the process. 

Qualifications: 

*	Strong programming/scripting skills in any of the following: C, C++,
Java, Perl, Python. 

*	Senior Level experience with Unix system administration. 

*	Strong understanding of networking; understanding of how to isolate,
diagnose, and resolve service delivery components (service delivery
components include servers, networks, and applications); be familiar with
the functionality, operating, and failure modes of key networking devices
(routers, switches, bridges, firewalls, hardware load balancers); be able to
identify networking as the potential cause of a service issue using
server-resident tools to generate this data (tcpdump, ping, traceroute,
etc.); familiarity in interpreting the output of these tools; familiarity
with common network topologies, protocols, and tools; have some notion of
common network security exploits -- and their remedies; understanding of
troubleshooting at the packet level. 

*	Strong project management skills, especially in deploying live
end-user systems. 

*	In-depth knowledge of Unix (preferably Linux), and shell scripting. 

*	Proven technical troubleshooting experience. 

*	Excellent analytic ability, strong communication skills, and a
strong sense of urgency. 

*	Ability to handle periodic on-call duty as well as out-of-band
requests. 

*	6-15+ years experience for Senior SWE position, or 3-8 years
experience for SWE position. 

*	BA/BS in CS, or equivalent experience. 

 

Ravi Pindiproli
G O O G L E
Technical Sourcer, SRE
1600 Amphitheatre Pkwy, 
Bldg., 43
Mountain View, CA 94043
650-253-7888: Direct
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050801/26a484dd/attachment.html>

From mary-twisted at puzzling.org  Tue Aug  2 07:21:24 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 2 Aug 2005 23:21:24 +1000
Subject: [Twisted-Python] Sydney Twisted Sprint (19-21/8): Linux Australia
	grants
Message-ID: <20050802132124.GB4807@sourdust.home.puzzling.org>

Hi everyone,

Another reminder about the Sydney Twisted Sprint on 19th-21st August,
but this time a reminder with a difference... Linux Australia is
sponsoring the sprint and is providing a few grants. They are providing
two subsidised domestic airfares and three accommodation subsidies to
needy Twisted folk, and further provided some funding for a sprint
dinner.

I need to hear from people wanting the airfares or accommodation
subsidies by this Friday by email. People wanting to come to the dinner
just need to RSVP on the wiki.

Info is at these pages:

 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredFlights
 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredAccommodation
 - http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SponsoredDinner

General information on the sprint is available at
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/FrontPage

Thanks very much to both Linux Australia and to Matthew Beauregard of
UTS's Programming Society (Matthew got the venue together for us).

-Mary



From disen at geo.unizh.ch  Tue Aug  2 11:10:39 2005
From: disen at geo.unizh.ch (Daniel Isenegger)
Date: Tue, 02 Aug 2005 19:10:39 +0200
Subject: [Twisted-Python] process status
Message-ID: <42EFA90F.8070603@geo.unizh.ch>

How to query process state and receive back control?

Hi,
a  newbie question: i struggle with the defer-mechanism.
i start from a client program a using defers a 
protocol.ProcessProtocol-class to invoke a local application (grass) to 
display a raster.
This works fine, the problem is now how to propagate back the final 
state of the invoked process back to the invoking instance and then to 
get the control back over the shell the process has been running in.

I can see that the state of the invoked process can be accesses in 
processEnded(), but when this function is invoked the connection to the 
invoking instance is already closed, so the state cannot be propagated 
to this invoking instance.

Additionaly the shell the process has been invoked does not receive 
further output of the invoking process., so i assume that the control is 
not handed back to the invoking process

Any hints?
Thanks Dani

In the following some excerpts of code to illustrate my problem:
 
invoking process:
#############################################################
    # invokes GIS to display the raster cmd, using IpodlasProcess to
    # call a process on the machine
    def displayRaster(self):
        
        # init deferred object d
        d = defer.Deferred()
        # add the pair of callbacks
        d.addCallback(self.handleDisplayRaster)
        d.addErrback(self.handleDisplayRasterFailure)
        #
        #invoke the deferred functions: i.e. handleDisplayRaster
        # and handleDisplayRasterFailure
        d.callback(rasterfile)
        print "displayRaster: after d.callback()"
    #
 ############################################################
    # handles the successfull call of the display of the raster theRaster
    def handleDisplayRaster(self,theRaster):
        #
        # init IpodlasProcess
        ip = IpodlasProcess()
        #
        #
        # invoke IpodlasProcess to invoke Grass to display the raster 
theRaster
        ip.displayRaster(theRaster)
        #
 #########################################################
    # handles the failed call of the display of the file theFoile
    # and its return object theFailure
    def handleDisplayRasterFailure(self,theFailure):
        #
        theFailure.trap(RuntimeError)
        #
###############################################################################
# IpodlasClientFactory is derived from ReconnectingClientFactory, which 
tries
# to reconnect if connection is lost
class IpodlasClientFactory(ReconnectingClientFactory):
    # creates protocol and receives events relating to connection state
    #
    def startedConnecting(self, connector):
        print 'Started to connect.'

    def buildProtocol(self, addr):
        print 'Connected.'
        print 'Resetting reconnection delay'
        self.resetDelay()
        # associated subsystem is the GUI
        return IpodlasClient()

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection.  Reason:', reason
        # tries to reconnect, if conn fails with exponentially delays
        ReconnectingClientFactory.clientConnectionLost(self, connector, 
reason)
    #
    # if connection could not be established
    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector,
                                                         reason)

###################################################################
if __name__ == "__main__":
    #
    if len(sys.argv) > 1:
        # set global subsystem
        assoSubsys = sys.argv[1]
        #print assoSubsys
    #
    from twisted.internet import reactor
    reactor.connectTCP("localhost",51423,IpodlasClientFactory())
    reactor.run()




invoked Process:
#! /usr/bin/python
# File:ipodlasProcess.py

"""
ipodlasProcess.py
usage: python ipodlasProcess.py
"""

from twisted.internet import protocol
from twisted.internet import reactor
from twisted.internet import utils #needed to query process termination 
status
import re
import os
import gc
# own classes

class IpodlasProcess(protocol.ProcessProtocol):
    def __init__(self):
        self.data = ""
        #
    #
    def connectionMade(self):
        print "IP connectionMade"
        self.transport.closeStdin()
    # data from standard output is receieve in outReceived.
    def outReceived(self, data):
        print "IP outReceived: " + self.data
        self.data = self.data + data
    #
    def errReceived(self, data):
        print "IP errReceived():" + data
    #
    def inConnectionLost(self):
        print "IP inConnectionLost! stdin is closed! (we probably did it)"
    #
    def outConnectionLost(self):
        print "IP outConnectionLost data: " + self.data
    #
    def errConnectionLost(self):
        print "IP errConnectionLost! stdin is closed! (we probably did it)"
    #
    def processEnded(self, status_object):
        self.processStatus = status_object.value.exitCode
        print "IP processEnded, status: " + 
str(status_object.value.exitCode) \
              + "\nquitting "
        # this is outcommented, since otherwise the reactor of 
ipodlasClient would
        # stopped, since this is the one which controls ipodlasProcess 
(the own in
        # the main fctn is only started, when invoked from cmd-line)
        # reactor.stop
        
    #
    def displayRaster(self,theRaster):
        #
        cmd = "d.rast"
        arg1 = theRaster
        arg2 = "bg=white"
        # processes are runned trough reactor using spawnProcess
        # invoke process cmd with the args arg1, arg2 and the parent process
        # environment env
        reactor.spawnProcess(self,cmd,[cmd,arg1,arg2],env=os.environ)
        #
        print "IP displayRaster"
###################################################################
if __name__ == "__main__":
    #
    ip = IpodlasProcess()
    ip.displayRaster("upperEngadine_raster")
    #
    reactor.run()





From snacktime at gmail.com  Tue Aug  2 23:45:07 2005
From: snacktime at gmail.com (snacktime)
Date: Tue, 2 Aug 2005 22:45:07 -0700
Subject: [Twisted-Python] Twisted api docs
Message-ID: <1f060c4c05080222453f3ba89f@mail.gmail.com>

I remember there being very complete api documentation for twisted
1.3, but I can't find anything similar on the website for twisted 2. 
Do they no longer exist or am I just blind?

Chris



From jon+twisted at indelible.org  Tue Aug  2 23:58:53 2005
From: jon+twisted at indelible.org (Jon Parise)
Date: Tue, 2 Aug 2005 22:58:53 -0700
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <1f060c4c05080222453f3ba89f@mail.gmail.com>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
Message-ID: <20050803055853.GB89481@indelible.org>

On Tue, Aug 02, 2005 at 10:45:07PM -0700, snacktime wrote:

> I remember there being very complete api documentation for twisted
> 1.3, but I can't find anything similar on the website for twisted 2. 
> Do they no longer exist or am I just blind?

I've been using these:

    http://twistedmatrix.com/documents/current/api/

-- 
Jon Parise (jon of indelible.org)  ::  "Scientia est Potentia"



From dguaraglia at gmx.de  Wed Aug  3 00:04:30 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Wed, 03 Aug 2005 03:04:30 -0300
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <1f060c4c05080222453f3ba89f@mail.gmail.com>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
Message-ID: <42F05E6E.3090205@gmx.de>

Hi Chris,

It's not very obvious but you can find the documentation here: 
http://twistedmatrix.com/documents/current/api/ and here: 
http://twistedmatrix.com/projects/core/documentation/ . First link is 
the API documentation (what I think you are looking for) and the second 
one is a link to the how-tos, etc.

Hope it helps you,

David


snacktime wrote:

>I remember there being very complete api documentation for twisted
>1.3, but I can't find anything similar on the website for twisted 2. 
>Do they no longer exist or am I just blind?
>
>Chris
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From snacktime at gmail.com  Wed Aug  3 00:39:27 2005
From: snacktime at gmail.com (snacktime)
Date: Tue, 2 Aug 2005 23:39:27 -0700
Subject: [Twisted-Python] Twisted api docs
In-Reply-To: <42F05E6E.3090205@gmx.de>
References: <1f060c4c05080222453f3ba89f@mail.gmail.com>
	<42F05E6E.3090205@gmx.de>
Message-ID: <1f060c4c05080223396cb5801e@mail.gmail.com>

On 8/2/05, David Guaraglia <dguaraglia at gmx.de> wrote:
> Hi Chris,
> 
> It's not very obvious but you can find the documentation here:
> http://twistedmatrix.com/documents/current/api/ and here:
> http://twistedmatrix.com/projects/core/documentation/ . First link is
> the API documentation (what I think you are looking for) and the second
> one is a link to the how-tos, etc.
> 
> Hope it helps you,

Yep that's exactly what I was looking for, thanks!

Chris



From michele.petrazzo at unipex.it  Wed Aug  3 04:22:59 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 12:22:59 +0200
Subject: [Twisted-Python] Ftp client
Message-ID: <42F09B03.3040405@unipex.it>

I want to port my ftp client class from standard library (ftplib) to 
twisted ftpclient. I start to work with ftpclient example and with a 
"standard" ftp server, it work well, of course :), but I'm working on a 
not standard server (hylafax), that not accept the standard commands, so 
now with the standard library, every time that I want to communicate 
with it, I send its internal commands.

Is it possible to "translate" my very short and simple code to twisted 
ftpclint?

However, I have already tried to modify the simple generic client 
example "EchoClient", and it work until I make a "LIST status" request, 
that it would have to return a short string (100-150 characters),
because if I use passive mode (command 'PASV') I receive a 425 error, 
and if I don't use it, I don't receive anything (I wait...).

Can someone point me to the right direction ?

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 06:25:52 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Aug 2005 22:25:52 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F09B03.3040405@unipex.it>
References: <42F09B03.3040405@unipex.it>
Message-ID: <20050803122552.GB30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 12:22:59PM +0200, Michele Petrazzo wrote:
> I want to port my ftp client class from standard library (ftplib) to 
> twisted ftpclient. I start to work with ftpclient example and with a 
> "standard" ftp server, it work well, of course :), but I'm working on a 
> not standard server (hylafax), that not accept the standard commands, so 
> now with the standard library, every time that I want to communicate 
> with it, I send its internal commands.
> 
> Is it possible to "translate" my very short and simple code to twisted 
> ftpclint?

Probably.  If you need to send non-standard commands, you can do that with
ftpclient.queueStringCommand("BLAH blah blah").

> However, I have already tried to modify the simple generic client 
> example "EchoClient", and it work until I make a "LIST status" request, 
> that it would have to return a short string (100-150 characters),
> because if I use passive mode (command 'PASV') I receive a 425 error, 
> and if I don't use it, I don't receive anything (I wait...).
> 
> Can someone point me to the right direction ?

The right way is to re-use the existing FTPClient logic as much as possible,
rather than reimplementing it.

What specific problems are you having with twisted.protocols.ftp.FTPClient?

-Andrew.




From andrea at cpushare.com  Wed Aug  3 08:39:33 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 3 Aug 2005 16:39:33 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
Message-ID: <20050803143933.GQ7606@g5.random>

Hello,

a CPUShare user reported a failure in the process protocol processEneded
method.

The status parameter passed to the processEnded callback is like this:

	status.value.signal == 11
	status.value.status == 139

My server code was validating the sigsegv status returned by the client,
and it noticed it wasn't 11. But status.value.signal == 11.

See the debugging patch that produced the below output:

http://www.cpushare.com/hypermail/cpushare-discuss/05/08/0018.html

How can it be that the same status has .value.signal == 11 and
.value.status == 139 at the same time?

I suspect this is a twisted bug.

Thanks for any help!

----- Forwarded message from Andrea Arcangeli <andrea at cpushare.com> -----

Date: Wed, 3 Aug 2005 16:35:37 +0200
From: Andrea Arcangeli <andrea at cpushare.com>
To: cpushare-discuss at cpushare.com
Subject: Re: error after launching cpushare client

On Wed, Aug 03, 2005 at 03:26:39PM +0200, Loïc Le Loarer wrote:
> Le Wednesday 03 August 2005 à 13:09:35 +0200, Andrea Arcangeli a écrit:
> > Hi,
> > 
> > On Mon, Aug 01, 2005 at 06:36:13PM +0200, lll+cpushare at m4x.org wrote:
> > > 2005/08/01 17:48 CEST [cpushare_protocol,client] 'sigsegv not killed with signal 11: status 139.'
> > 
> > This is weird, it looks like twisted reports status 139 and signal 11 at
> > the same time (while status should be 11 == signal), at first glance it
> > looks a twisted bug.
> > 
> > Can you please try to apply this patch and see what it prints? (this way
> > it will be printed on the client side, previously the number 139 is
> > generated by the server side)
> 
> Hi,
> 
> I have applyed your patch and here is the output :
> 2005/08/03 15:23 CEST [-] Log opened.
> 2005/08/03 15:23 CEST [-] twistd 2.0.1 (/usr/bin/python 2.4.1) starting up
> 2005/08/03 15:23 CEST [-] reactor class: twisted.internet.selectreactor.SelectReactor
> 2005/08/03 15:23 CEST [-] Loading cpushare.tap...
> 2005/08/03 15:23 CEST [-] Loaded.
> 2005/08/03 15:23 CEST [-] Starting factory <cpushare.proto.cpushare_factory instance at 0xb78251ac>
> 2005/08/03 15:23 CEST [-] Enabling Multithreading.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Starting seccomp task
> 2005/08/03 15:23 CEST [-] Seccomp task gracefully killed by seccomp.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Starting seccomp task
> 2005/08/03 15:23 CEST [-] Seccomp task gracefully killed by sigsegv, status 139.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] 'sigsegv not killed with signal 11: status 139.'
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Lost connection. Reason: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionLost: Connection to the other side was lost in a non-clean fashion: Connection lost.
> 2005/08/03 15:23 CEST [cpushare_protocol,client] ]
> 2005/08/03 15:23 CEST [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0xb783114c> will retry in 2 seconds
> 2005/08/03 15:23 CEST [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0xb78251ac>
> 2005/08/03 15:23 CEST [-] Main loop terminated.
> 2005/08/03 15:23 CEST [-] Server Shut Down.
> 
> The status is 139, does this help ?

Yes it helps since it verified that for some reason twisted reports an
exit status of 139, which collides with an exist status of 11. (it
wasn't a communication error between client and server)

I think it's a twisted bug and not a mistake from my part. I'll ask on
the twisted lists to be sure. What distro/twisted are you using?

In the meantime this will work around it so you can start earning
CPUCoins ;)

Index: cpushare/proto.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
retrieving revision 1.49
diff -u -p -r1.49 proto.py
--- cpushare/proto.py	6 Jul 2005 23:19:02 -0000	1.49
+++ cpushare/proto.py	3 Aug 2005 14:34:34 -0000
@@ -82,7 +82,7 @@ class state_machine(object):
 			self.protocol.sendString(PROTO_SECCOMP_SUCCESS)
 		def end_failure(failure):
 			end_common()
-			self.protocol.sendString(PROTO_SECCOMP_FAILURE + struct.pack('!i', failure.value.status))
+			self.protocol.sendString(PROTO_SECCOMP_FAILURE + struct.pack('!i', failure.value.signal))
 
 		def started(result):
 			self.protocol.sendString(PROTO_SECCOMP_RUN)

Thanks!

----- End forwarded message -----



From michele.petrazzo at unipex.it  Wed Aug  3 08:53:34 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 16:53:34 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803122552.GB30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
Message-ID: <42F0DA6E.8090804@unipex.it>

Andrew Bennetts wrote:

>>Is it possible to "translate" my very short and simple code to twisted 
>>ftpclint?
> 
> Probably.  If you need to send non-standard commands, you can do that with
> ftpclient.queueStringCommand("BLAH blah blah").
> 
> 

<-cut->

> 
> The right way is to re-use the existing FTPClient logic as much as possible,
> rather than reimplementing it.
> 
> What specific problems are you having with twisted.protocols.ftp.FTPClient?
> 

I change the ftpclient example with this code:

def run():
  # Create the client
  creator = ClientCreator(reactor, FTPClient, user, passwd, 0)
  creator.connectTCP('192.168.1.1', 4559).addCallback(connectionMade)
  reactor.run()

def connectionMade(ftpClient):
  # Get the current working directory
  ftpClient.pwd().addCallbacks(success, fail)


One problem is that if the user has no password, I receive an error [1] 
(if I try to connect with a simple ftp client, when I connect to the 
server, if it see that I have no password, it connect me without 
password request), however if the user _has_ password, the client 
connect correctly.

Second:
if the user _has_ password, so I can connect, I want to send "LIST 
status" command, if I use:

ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)

I receive [2], and if I use:

fileList = FTPFileListProtocol()
d = ftpClient.list(' status ', fileList)
d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))

I receive [3]



Returned data:

[1]
Failed.  Error was:
[Failure instance: Traceback (failure with no frames): 
twisted.protocols.ftp.ConnectionLost: ('FTP connection lost', 
<twisted.python.failure.Failure twisted.protocols.ftp.CommandFailed>)


[2]
Success!  Got response:
---
257 "/" is the current directory.
---

Failed.  Error was:
[Failure instance: Traceback (failure with no frames): 
twisted.protocols.ftp.CommandFailed: ['425 Cannot build data connection: 
Connection refused.']


[3]

Success!  Got response:
---
257 "/" is the current directory.
---
Failed.  Error was:
[Failure instance: Traceback (failure with no frames): <type 'tuple'>: 
(<twisted.python.failure.Failure <type 'tuple'>>, 0)
]


> -Andrew.
> 

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 09:21:48 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 01:21:48 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F0DA6E.8090804@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
Message-ID: <20050803152148.GD30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 04:53:34PM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
[...]
> >
> >What specific problems are you having with twisted.protocols.ftp.FTPClient?
> >
> 
> I change the ftpclient example with this code:
> 
> def run():
>  # Create the client
>  creator = ClientCreator(reactor, FTPClient, user, passwd, 0)
>  creator.connectTCP('192.168.1.1', 4559).addCallback(connectionMade)
>  reactor.run()
> 
> def connectionMade(ftpClient):
>  # Get the current working directory
>  ftpClient.pwd().addCallbacks(success, fail)
> 
> 
> One problem is that if the user has no password, I receive an error [1] 
> (if I try to connect with a simple ftp client, when I connect to the 
> server, if it see that I have no password, it connect me without 
> password request), however if the user _has_ password, the client 
> connect correctly.

Before connecting, can you add:

    FTPClient.debug = True

Then we can see a full transcript of what's going on.

> Second:
> if the user _has_ password, so I can connect, I want to send "LIST 
> status" command, if I use:
> 
> ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
> 
> I receive [2], and if I use:

Right.  LIST requires a data connection to be established, and directly
issuing a LIST without arranging for a PASV or PORT command and associated
connection will fail.

> fileList = FTPFileListProtocol()
> d = ftpClient.list(' status ', fileList)
> d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))
> 
> I receive [3]

Can you retry this with latest Twisted from SVN?  There's a bug in error
reporting and DeferredLists here that's been fixed in SVN that will make
this much clearer.

I don't understand why you're passing ' status ' instead of just 'status',
though.

-Andrew.




From michele.petrazzo at unipex.it  Wed Aug  3 11:23:56 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Wed, 03 Aug 2005 19:23:56 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803152148.GD30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
Message-ID: <42F0FDAC.6060505@unipex.it>

Andrew Bennetts wrote:
>>One problem is that if the user has no password, I receive an error [1] 
>>(if I try to connect with a simple ftp client, when I connect to the 
>>server, if it see that I have no password, it connect me without 
>>password request), however if the user _has_ password, the client 
>>connect correctly.
> 
> 
> Before connecting, can you add:
> 
>     FTPClient.debug = True
> 
> Then we can see a full transcript of what's going on.
> 

I add that line, but I can't see any new line except that I already seen

> 
>>Second:
>>if the user _has_ password, so I can connect, I want to send "LIST 
>>status" command, if I use:
>>
>>ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
>>
>>I receive [2], and if I use:
> 
> 
> Right.  LIST requires a data connection to be established, and directly
> issuing a LIST without arranging for a PASV or PORT command and associated
> connection will fail.
> 

Ok, but what I do with to make it work?

> 
>>fileList = FTPFileListProtocol()
>>d = ftpClient.list(' status ', fileList)
>>d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))
>>
>>I receive [3]
> 
> 
> Can you retry this with latest Twisted from SVN?  There's a bug in error
> reporting and DeferredLists here that's been fixed in SVN that will make
> this much clearer.

Yes. Just update the my two (win and lin) machines.

[1]

> 
> I don't understand why you're passing ' status ' instead of just 'status',
> though.

But, I don't know :)

With this change " status " -> "status" now I don't receive any error!
But what I receive is an empty file list [2] (on all status and recvq 
sub-directory), both case if I change directory with the cwd command and 
call ftpClient.list(".") or, call it with "status/"-"recvq/".
But I know that into that sub-directory there are a lot of files...


[1]
The return are (on both OS):

[Failure instance: Traceback (failure with no frames): 
twisted.internet.defer.FirstError: 
FirstError(<twisted.python.failure.Failure 
twisted.internet.defer.FirstError>, 0)
]

[2]
Processed file listing:
Total: 0 files

Thanks,
Michele



From andrew-twisted at puzzling.org  Wed Aug  3 12:42:58 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 04:42:58 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F0FDAC.6060505@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
	<42F0FDAC.6060505@unipex.it>
Message-ID: <20050803184258.GF30038@trogdor.home.puzzling.org>

On Wed, Aug 03, 2005 at 07:23:56PM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
> >>One problem is that if the user has no password, I receive an error [1] 
> >>(if I try to connect with a simple ftp client, when I connect to the 
> >>server, if it see that I have no password, it connect me without 
> >>password request), however if the user _has_ password, the client 
> >>connect correctly.
> >
> >
> >Before connecting, can you add:
> >
> >    FTPClient.debug = True
> >
> >Then we can see a full transcript of what's going on.
> >
> 
> I add that line, but I can't see any new line except that I already seen

Odd.  It should log everything.

> >>Second:
> >>if the user _has_ password, so I can connect, I want to send "LIST 
> >>status" command, if I use:
> >>
> >>ftpClient.queueStringCommand("LIST").addCallbacks(success, fail)
> >>
> >>I receive [2], and if I use:
> >
> >
> >Right.  LIST requires a data connection to be established, and directly
> >issuing a LIST without arranging for a PASV or PORT command and associated
> >connection will fail.
> >
> 
> Ok, but what I do with to make it work?

Use FTPClient.list ;)

Seriously, look at the implementation of FTPClient.list, it's very simple:

    def list(self, path, protocol):
        # ...docstring elided...
        if path is None:
            path = ''
        return self.receiveFromConnection(['LIST ' + self.escapePath(path)], protocol)

FTPClient.receiveFromConnection is a helper function that Does The Right
Thing depending on if self.passive is set or not.

[...]
> >
> >I don't understand why you're passing ' status ' instead of just 'status',
> >though.
> 
> But, I don't know :)
> 
> With this change " status " -> "status" now I don't receive any error!

Ok, I suspect what was happening was that the server was returning an error
like "' status ' does not exist".  The error reporting from FTPClient is
pretty messy, unfortunately.

> But what I receive is an empty file list [2] (on all status and recvq 
> sub-directory), both case if I change directory with the cwd command and 
> call ftpClient.list(".") or, call it with "status/"-"recvq/".
> But I know that into that sub-directory there are a lot of files...

Perhaps FTPFileListProtocol can't parse your file listing -- it tries to
parse stuff more-or-less like:

        -rw-r--r--   1 root     other        531 Jan 29 03:26 README

If you have another format, you'll need to write your own.  As a starting
point, you could try:

class LineRecorder(basic.LineReceiver):
    def connectionMade(self):
        self.lines = []
    def lineReceived(self,line):
        self.lines.append(line)

Alternatively, subclass FTPFileListProtocol and override the unknownLine
method.

> [1]
> The return are (on both OS):
> 
> [Failure instance: Traceback (failure with no frames): 
> twisted.internet.defer.FirstError: 
> FirstError(<twisted.python.failure.Failure 
> twisted.internet.defer.FirstError>, 0)
> ]

Sorry, I was too hasty here -- you also need to change your errback to print
failure.subFailure or perhaps failure.subFailure.subFailure rather than just
failure.  There are several layers of failure here (because of several
layers of DeferredLists), which makes it ugly.  FTPClient shouldn't be
exposing the implementation detail of DeferredLists like this, but at the
moment it does.

-Andrew.




From fritcher at corp.earthlink.net  Wed Aug  3 13:09:53 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Wed, 03 Aug 2005 15:09:53 -0400
Subject: [Twisted-Python] Manually adding a file descriptor to the reactor
Message-ID: <42F11681.8060507@corp.earthlink.net>

Hello,

I have a C library I've written an extension wrapper around that manages
 connections to an external server for me. When I create a connection
through this library, I get a file descriptor back that I need to
monitor for activity. I've been poking through the twisted code to see
how I can add these file descriptors to the reactor, but I'm just not
seeing how it can be done. My closest guess right now would be to wrap
my file descriptor in a FileDescriptor object, but I'm not seeing how to
add that to the reactor, or how to tell it what code to call when there
is activity on that descriptor. Can anyone give me some insight into
what I need to do, or point me at some documentation that would explain
what I need to do?

For system details, I'll be doing this with Python 2.3.5, Twisted 2.0.1,
on both Mac OS X Tiger, and Red Hat Linux.

Thanks.

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20050803/4ce9db9e/attachment.sig>

From tv at twistedmatrix.com  Wed Aug  3 13:16:55 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 03 Aug 2005 22:16:55 +0300
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <20050803143933.GQ7606@g5.random>
References: <20050803143933.GQ7606@g5.random>
Message-ID: <42F11827.8030006@twistedmatrix.com>

Andrea Arcangeli wrote:
> The status parameter passed to the processEnded callback is like this:
> 
> 	status.value.signal == 11
> 	status.value.status == 139
> 
> My server code was validating the sigsegv status returned by the client,
> and it noticed it wasn't 11. But status.value.signal == 11.
> 
> See the debugging patch that produced the below output:
> 
> http://www.cpushare.com/hypermail/cpushare-discuss/05/08/0018.html
> 
> How can it be that the same status has .value.signal == 11 and
> .value.status == 139 at the same time?
> 
> I suspect this is a twisted bug.

.status is the _raw_ status.

You probably mean .exitCode instead.

Actual .status values are unportable, thus transferring them raw over
the network is not a good idea.



From andrea at cpushare.com  Wed Aug  3 14:55:08 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 3 Aug 2005 22:55:08 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <42F11827.8030006@twistedmatrix.com>
References: <20050803143933.GQ7606@g5.random>
	<42F11827.8030006@twistedmatrix.com>
Message-ID: <20050803205508.GT7606@g5.random>

On Wed, Aug 03, 2005 at 10:16:55PM +0300, Tommi Virtanen wrote:
> .status is the _raw_ status.
>
> You probably mean .exitCode instead.

Ok but then do you have an idea where the 139 comes from? I'd like to
understand what's going on, to me that 139 number comes out of the blue.

> Actual .status values are unportable, thus transferring them raw over
> the network is not a good idea.

status should be the same that waitpid returns, from the docs:

"return a tuple containing its pid and exit status indication: a 16-bit
number, whose low byte is the signal number that killed the process, and
whose high byte is the exit status (if the signal number is zero); the
high bit of the low byte is set if a core file was produced.
Availability: Unix."

Now I will ask to use exitCode but still I'd like to understand how
status is connected with exitCode.

BTW, I was using exitCode already, but I thought it would be set only if
a signal wasn't delivered. Infact I wrote code like this:

		if status.value.exitCode or status.value.signal:
			if status.value.exitCode == 4:
				print 'Failure in setting the stack size to %d bytes.' % self.seccomp.stack
			if status.value.signal == signal.SIGKILL:
				print 'Seccomp task gracefully killed by seccomp.'
			elif status.value.signal == signal.SIGSEGV:
				print 'Seccomp task gracefully killed by sigsegv, status %r.' % status.value.status
			elif status.value.signal == signal.SIGQUIT:
				print 'Seccomp task killed by sigquit - should never happen.'
			self.d_end.errback(status)
		else:
			print 'Seccomp task completed successfully.'
			self.d_end.callback(None)

(and in the above code status.value.signal == signal.SIGSEGV but
status.value.status == 139 ;)



From tv at twistedmatrix.com  Wed Aug  3 23:47:39 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 04 Aug 2005 08:47:39 +0300
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <20050803205508.GT7606@g5.random>
References: <20050803143933.GQ7606@g5.random>	<42F11827.8030006@twistedmatrix.com>
	<20050803205508.GT7606@g5.random>
Message-ID: <42F1ABFB.1010904@twistedmatrix.com>

Andrea Arcangeli wrote:
> Ok but then do you have an idea where the 139 comes from? I'd like to
> understand what's going on, to me that 139 number comes out of the blue.

139 == 128 + 11.

One way to set up the numbering is that exit codes are 0..127, signals
etc. have hight bit set.

Naturally, all real access should go through the macros WIFEXITED etc,
but that's how the number ranges are classically set up.

>>Actual .status values are unportable, thus transferring them raw over
>>the network is not a good idea.
> 
> status should be the same that waitpid returns, from the docs:
> 
> "return a tuple containing its pid and exit status indication: a 16-bit
> number, whose low byte is the signal number that killed the process, and
> whose high byte is the exit status (if the signal number is zero); the
> high bit of the low byte is set if a core file was produced.
> Availability: Unix."

I think you are reading about os.wait and twisted is using
os.waitpid. Otherwise, the document is lying to you. The status _may_ be
laid out like that on _some_ platform, but unless python does some
readjustment, the only portable way to access it is WIFEXITED and
friends.

cat >crash.c <<EOF
int main(void) {
  /* comment out the next line if you want a normal exit */
  *(char*)0 = 42;
  return 34;
}
EOF
cat >run.py <<EOF
#!/usr/bin/python
import os

pid = os.fork()
if pid:
    # parent
    pid, status = os.waitpid(pid, 0)
    print pid, status
    if os.WIFEXITED(status):
        print 'exited', os.WEXITSTATUS(status)
    elif os.WIFSIGNALED(status):
        print 'signaled', os.WTERMSIG(status)
        print 'coredump', os.WCOREDUMP(status)
    elif os.WIFSTOPPED(status):
        print 'stopped', os.WSTOPSIG(status)
    elif os.WIFCONTINUED(status):
        print 'continued'
    else:
        print 'unknown'
else:
    # child
    os.execv('./a.out', ['a.out'])
    raise RuntimeError, "exec failed"
EOF
chmod a+x run.py
gcc -Wall crash.c
./run.py

> Now I will ask to use exitCode but still I'd like to understand how
> status is connected with exitCode.

exitCode and signal are decoded from status.

> BTW, I was using exitCode already, but I thought it would be set only if
> a signal wasn't delivered. Infact I wrote code like this:

Exactly. If a process exits due to a signal, there is no exit code in
the sense of calling _exit(2).



From andrea at cpushare.com  Thu Aug  4 01:14:28 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 4 Aug 2005 09:14:28 +0200
Subject: [Twisted-Python] [andrea@cpushare.com: Re: error after launching
	cpushare client]
In-Reply-To: <42F1ABFB.1010904@twistedmatrix.com>
References: <20050803143933.GQ7606@g5.random>
	<42F11827.8030006@twistedmatrix.com>
	<20050803205508.GT7606@g5.random>
	<42F1ABFB.1010904@twistedmatrix.com>
Message-ID: <20050804071428.GD15814@g5.random>

On Thu, Aug 04, 2005 at 08:47:39AM +0300, Tommi Virtanen wrote:
> Andrea Arcangeli wrote:
> > Ok but then do you have an idea where the 139 comes from? I'd like to
> > understand what's going on, to me that 139 number comes out of the blue.
> 
> 139 == 128 + 11.
> 
> One way to set up the numbering is that exit codes are 0..127, signals
> etc. have hight bit set.
> 
> Naturally, all real access should go through the macros WIFEXITED etc,
> but that's how the number ranges are classically set up.

Ah, I think I got why he gets 139, that's because the core dumping was
enabled.

> >>Actual .status values are unportable, thus transferring them raw over
> >>the network is not a good idea.
> > 
> > status should be the same that waitpid returns, from the docs:
> > 
> > "return a tuple containing its pid and exit status indication: a 16-bit
> > number, whose low byte is the signal number that killed the process, and
> > whose high byte is the exit status (if the signal number is zero); the
> > high bit of the low byte is set if a core file was produced.
> > Availability: Unix."
> 
> I think you are reading about os.wait and twisted is using
> os.waitpid. Otherwise, the document is lying to you. The status _may_ be

Yes, the status is the same in wait and waitpid, and it's the same as
well in C (I doubt that python does any mangling of the C value).

> laid out like that on _some_ platform, but unless python does some
> readjustment, the only portable way to access it is WIFEXITED and
> friends.

It's not like I've an huge portability, because seccomp currently
only available on linux, but I'll follow your suggestion and I'll try to
make it more portable.

> cat >crash.c <<EOF
> int main(void) {
>   /* comment out the next line if you want a normal exit */
>   *(char*)0 = 42;
>   return 34;
> }
> EOF
> cat >run.py <<EOF
> #!/usr/bin/python
> import os
> 
> pid = os.fork()
> if pid:
>     # parent
>     pid, status = os.waitpid(pid, 0)
>     print pid, status
>     if os.WIFEXITED(status):
>         print 'exited', os.WEXITSTATUS(status)
>     elif os.WIFSIGNALED(status):
>         print 'signaled', os.WTERMSIG(status)
>         print 'coredump', os.WCOREDUMP(status)
>     elif os.WIFSTOPPED(status):
>         print 'stopped', os.WSTOPSIG(status)
>     elif os.WIFCONTINUED(status):
>         print 'continued'
>     else:
>         print 'unknown'
> else:
>     # child
>     os.execv('./a.out', ['a.out'])
>     raise RuntimeError, "exec failed"
> EOF
> chmod a+x run.py
> gcc -Wall crash.c
> ./run.py

Ok thanks a lot for the example.

> Exactly. If a process exits due to a signal, there is no exit code in
> the sense of calling _exit(2).

Ok, same as with C.



From michele.petrazzo at unipex.it  Thu Aug  4 03:30:43 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 04 Aug 2005 11:30:43 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050803184258.GF30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>	<20050803152148.GD30038@trogdor.home.puzzling.org>	<42F0FDAC.6060505@unipex.it>
	<20050803184258.GF30038@trogdor.home.puzzling.org>
Message-ID: <42F1E043.8040107@unipex.it>

Andrew Bennetts wrote:
>>> Before connecting, can you add:
>>> 
>>> FTPClient.debug = True
>>> 
>>> Then we can see a full transcript of what's going on.
>>> 
>> 
>> I add that line, but I can't see any new line except that I already
>> seen
> 
> 
> Odd.  It should log everything.

Strange. Do you want that I change something to understand the problem?
This happen also with the demo "ftpclient.py"!

>> Ok, but what I do with to make it work?
> 
> 
> Use FTPClient.list ;)

Obviously! :)

>> But what I receive is an empty file list

> Perhaps FTPFileListProtocol can't parse your file listing -- it tries
> to parse stuff more-or-less like:
> 
> -rw-r--r--   1 root     other        531 Jan 29 03:26 README
> 
> If you have another format, you'll need to write your own.  As a
> starting point, you could try:
> 
> class LineRecorder(basic.LineReceiver): def connectionMade(self): 
> self.lines = [] def lineReceived(self,line): self.lines.append(line)
> 
> Alternatively, subclass FTPFileListProtocol and override the
> unknownLine method.

With unknownLine overwritten I receive all the data correctly.

What the are more right way (the advice method) to proceed? Simple
override that method or create a new HylafaxFTPFileListProtocol ?

> 
> 
> Sorry, I was too hasty here -- you also need to change your errback
> to print failure.subFailure or perhaps failure.subFailure.subFailure
> rather than just failure.

After some code tries, I receive this response:
user login that has no password : [1]
user login with password, list of not exist directory: [2]

Like you can see, I must find the return errors inside the failure
instance at two differents point (I believe because, like you wrote,
there are several layers). You think that this "problem" will be fixed
in the future, for make the error more simple to understand?

I attach a diff file that solve my problem with the empty password and
the "PASS" command. For me it work well. I'll very happy if you include
my patch!

[1]
code:
def fail(error):
     print error.value[1]

[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.CommandFailed: ["500 'PASS ': Syntax error, 
expecting password."]
]


[1]
code:
def fail(error):
     print error.value[0].value.subFailure

test_new_hylaproto.py:49: DeprecationWarning: FirstError.__getitem__ is 
deprecated.  Use attributes instead.
[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.CommandFailed: ['550 pippo: No such file or 
directory.']


Thanks,
Michele
-------------- next part --------------
A non-text attachment was scrubbed...
Name: diff_ftp.diff
Type: text/x-patch
Size: 777 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050804/01f8d34b/attachment-0002.bin>

From andrew-twisted at puzzling.org  Thu Aug  4 06:44:13 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 4 Aug 2005 22:44:13 +1000
Subject: [Twisted-Python] Ftp client
In-Reply-To: <42F1E043.8040107@unipex.it>
References: <42F09B03.3040405@unipex.it>
	<20050803122552.GB30038@trogdor.home.puzzling.org>
	<42F0DA6E.8090804@unipex.it>
	<20050803152148.GD30038@trogdor.home.puzzling.org>
	<42F0FDAC.6060505@unipex.it>
	<20050803184258.GF30038@trogdor.home.puzzling.org>
	<42F1E043.8040107@unipex.it>
Message-ID: <20050804124413.GG30038@trogdor.home.puzzling.org>

On Thu, Aug 04, 2005 at 11:30:43AM +0200, Michele Petrazzo wrote:
> Andrew Bennetts wrote:
> >>>Before connecting, can you add:
> >>>
> >>>FTPClient.debug = True
> >>>
> >>>Then we can see a full transcript of what's going on.
> >>>
> >>
> >>I add that line, but I can't see any new line except that I already
> >>seen
> >
> >
> >Odd.  It should log everything.
> 
> Strange. Do you want that I change something to understand the problem?
> This happen also with the demo "ftpclient.py"!

If you can figure out why, I'd be happy, but I don't have time to
investigate right now (I'm quite busy atm, which is why my replies are so
brief, sorry).

> >>But what I receive is an empty file list
> 
> >Perhaps FTPFileListProtocol can't parse your file listing -- it tries
> >to parse stuff more-or-less like:
> >
> >-rw-r--r--   1 root     other        531 Jan 29 03:26 README
> >
> >If you have another format, you'll need to write your own.  As a
> >starting point, you could try:
> >
> >class LineRecorder(basic.LineReceiver): def connectionMade(self): 
> >self.lines = [] def lineReceived(self,line): self.lines.append(line)
> >
> >Alternatively, subclass FTPFileListProtocol and override the
> >unknownLine method.
> 
> With unknownLine overwritten I receive all the data correctly.
> 
> What the are more right way (the advice method) to proceed? Simple
> override that method or create a new HylafaxFTPFileListProtocol ?

Create a new HylafaxFTPFileListProtocol would be simplest, I think.

> >Sorry, I was too hasty here -- you also need to change your errback
> >to print failure.subFailure or perhaps failure.subFailure.subFailure
> >rather than just failure.
> 
> After some code tries, I receive this response:
> user login that has no password : [1]

Ok, so your FTP server requires a password.

> user login with password, list of not exist directory: [2]

Great, thanks for that output.

> 
> Like you can see, I must find the return errors inside the failure
> instance at two differents point (I believe because, like you wrote,
> there are several layers). You think that this "problem" will be fixed
> in the future, for make the error more simple to understand?

Yes, it will, I'll file a bug on it so that I don't forget.  Thanks for
uncovering it!

> I attach a diff file that solve my problem with the empty password and
> the "PASS" command. For me it work well. I'll very happy if you include
> my patch!

Interesting.  Please file this at http://twistedmatrix.com/bugs, assign to
spiv.  Also, please use unified diffs ("diff -u") if you can.

I think perhaps passing password=None might be a better way than
sendPass=False, I'll think about it.

Thank you very much!

-Andrew.




From ajchos at wp.pl  Thu Aug  4 07:48:08 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 04 Aug 2005 15:48:08 +0200
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
Message-ID: <1123163288.2925.51.camel@localhost.localdomain>

I try to get from standard telnet server answer. I connect to this
server, and now dataReceived() should give me a full answer from server
like:
Ret Hat Linux relase: ... login:, but it does not.
I would like to know how to connect to this server and grab this data.
        
dataReceived gives me something like that:  #' 
(translation in telnet codes: IAC DO TERMINAL_TYPE IAC DO SPEED IAC DO
X_DISPALY_LOCATION IAC DO NEW_ENVI_OPTION ((hex)FF FD 18 FF FD 20 FF FD
23 FF FD 27)). What should I do with this. I try to transport a answers
for this questions. Maybe i got a mistake in code, somthing i do in
wrong way? Code I working on in attachment.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attach.py
Type: text/x-python
Size: 1724 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050804/a4316b79/attachment-0002.py>

From tom at thebrownboys.net  Thu Aug  4 07:58:44 2005
From: tom at thebrownboys.net (Tom Brown)
Date: Thu, 04 Aug 2005 06:58:44 -0700
Subject: [Twisted-Python] Twisted and Qt
Message-ID: <200508040658.45284.tom@thebrownboys.net>

Hi,

I am trying to write yet another internet based chess game. I am writing 
the client gui using Qt. When reactor.run() is called in the client, 
there is communication with the server. However, the main window is 
never shown. A code snippet is given below. I followed the qtdemo.py 
example. What am I missing?

Thanks,
Tom

from qt import *
from twisted.internet.qtreactor import install
from twisted.internet import reactor, protocol
from mainwindowimpl import MainWindowImpl

...

def main(server, port):
  a = QApplication(argv)
  install(a)
  chessClientFactory = ChessClientFactory()
  w = MainWindowImpl()
  w.show()
  reactor.addSystemEventTrigger('after', 'shutdown', a.quit)
  a.connect(a, SIGNAL("lastWindowClosed()"), reactor.stop)
  reactor.connectTCP(server, port, chessClientFactory)
  reactor.run()



From glyph at divmod.com  Thu Aug  4 08:07:48 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 4 Aug 2005 10:07:48 -0400
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
In-Reply-To: <1123163288.2925.51.camel@localhost.localdomain>
Message-ID: <20050804140827.3914.1105346612.divmod.quotient.2273@ohm>



On Thu, 04 Aug 2005 15:48:08 +0200, Michał Tyde <ajchos at wp.pl> wrote:
>I try to get from standard telnet server answer. I connect to this
>server, and now dataReceived() should give me a full answer from server
>like:
>Ret Hat Linux relase: ... login:, but it does not.
>I would like to know how to connect to this server and grab this data.

Read the Telnet RFC, and either implement the telnet protocol or use Twisted's telnet protocol and answer the various IAC requests, then save the non-protocol stuff in some buffer.  Twisted's API for this is twisted.protocols.telnet.Telnet.processChunk'.



From michele.petrazzo at unipex.it  Thu Aug  4 08:09:23 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 04 Aug 2005 16:09:23 +0200
Subject: [Twisted-Python] Ftp client
In-Reply-To: <20050804124413.GG30038@trogdor.home.puzzling.org>
References: <42F09B03.3040405@unipex.it>	<20050803122552.GB30038@trogdor.home.puzzling.org>	<42F0DA6E.8090804@unipex.it>	<20050803152148.GD30038@trogdor.home.puzzling.org>	<42F0FDAC.6060505@unipex.it>	<20050803184258.GF30038@trogdor.home.puzzling.org>	<42F1E043.8040107@unipex.it>
	<20050804124413.GG30038@trogdor.home.puzzling.org>
Message-ID: <42F22193.5090702@unipex.it>

Andrew Bennetts wrote:
> On Thu, Aug 04, 2005 at 11:30:43AM +0200, Michele Petrazzo wrote:

>>Strange. Do you want that I change something to understand the problem?
>>This happen also with the demo "ftpclient.py"!
> 
> 
> If you can figure out why, I'd be happy, but I don't have time to
> investigate right now (I'm quite busy atm, which is why my replies are so
> brief, sorry).
> 

I'll try next week. Now I have to modify my code to make the 
HylafaxFTPFileListProtocol work! :)

>>What the are more right way (the advice method) to proceed? Simple
>>override that method or create a new HylafaxFTPFileListProtocol ?
> 
> 
> Create a new HylafaxFTPFileListProtocol would be simplest, I think.
> 

Ok, I'll try

> 
>>>Sorry, I was too hasty here -- you also need to change your errback
>>>to print failure.subFailure or perhaps failure.subFailure.subFailure
>>>rather than just failure.
>>
>>After some code tries, I receive this response:
>>user login that has no password : [1]
> 
> 
> Ok, so your FTP server requires a password.
> 

No, the server don't required a password, so if the ftp library send the 
"PASS" command, it "anger".

>>I attach a diff file that solve my problem with the empty password and
>>the "PASS" command. For me it work well. I'll very happy if you include
>>my patch!
> 
> 
> Interesting.  Please file this at http://twistedmatrix.com/bugs, assign to
> spiv.  Also, please use unified diffs ("diff -u") if you can.

Done, issue 1130

> 
> I think perhaps passing password=None might be a better way than
> sendPass=False, I'll think about it.
> 
> Thank you very much!
> 

Thank you to you for all the help.

> -Andrew.
> 

Michele



From exarkun at divmod.com  Thu Aug  4 08:12:57 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 4 Aug 2005 10:12:57 -0400
Subject: [Twisted-Python] Twisted and Qt
In-Reply-To: <200508040658.45284.tom@thebrownboys.net>
Message-ID: <20050804141257.3914.1419877436.divmod.quotient.2275@ohm>

On Thu, 04 Aug 2005 06:58:44 -0700, Tom Brown <tom at thebrownboys.net> wrote:
>Hi,
>
>I am trying to write yet another internet based chess game. I am writing
>the client gui using Qt. When reactor.run() is called in the client,
>there is communication with the server. However, the main window is
>never shown. A code snippet is given below. I followed the qtdemo.py
>example. What am I missing?
>
>Thanks,
>Tom
>
>from qt import *
>from twisted.internet.qtreactor import install

install()

>from twisted.internet import reactor, protocol
>from mainwindowimpl import MainWindowImpl
>
> [snip]

If you don't install the qt reactor, when you import twisted.internet.reactor, the default reactor will be used.

Jp



From exarkun at divmod.com  Thu Aug  4 08:34:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 4 Aug 2005 10:34:15 -0400
Subject: [Twisted-Python] Simple Telnet Client - couldn't get answer form
	server
In-Reply-To: <20050804140827.3914.1105346612.divmod.quotient.2273@ohm>
Message-ID: <20050804143415.3914.135847435.divmod.quotient.2282@ohm>

On Thu, 4 Aug 2005 10:07:48 -0400, glyph at divmod.com wrote:
>
>
>On Thu, 04 Aug 2005 15:48:08 +0200, Michał Tyde <ajchos at wp.pl> wrote:
>>I try to get from standard telnet server answer. I connect to this
>>server, and now dataReceived() should give me a full answer from server
>>like:
>>Ret Hat Linux relase: ... login:, but it does not.
>>I would like to know how to connect to this server and grab this data.
>
>Read the Telnet RFC, and either implement the telnet protocol or use 
>Twisted's telnet protocol and answer the various IAC requests, then save the 
>non-protocol stuff in some buffer.  Twisted's API for this is 
>twisted.protocols.telnet.Telnet.processChunk'.

And/Or use twisted.conch.telnet instead (which presents a completely different, but non-line-oriented API).

Jp



From ajchos at wp.pl  Fri Aug  5 05:30:06 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 05 Aug 2005 13:30:06 +0200
Subject: [Twisted-Python] How to get initialize values of function
Message-ID: <1123241406.2974.27.camel@localhost.localdomain>

I have code like that:

class class1:
	def funct1(self, some_args):
		if a==b:#(the condition doesn't matter)
			self.funct30("value")
			enother_val=funct30().__init__ #it doesn't work
			#i want to have in enother_value="value" - argument from function
funct30()
	def funct30(self, value):		
		# do something
		# i can't return here a value, because the program work inappropriate

Maybe this is a very simple solution, but i have got now any idea.
Thanks in advance for answers




From Stephan.Popp at iisb.fraunhofer.de  Fri Aug  5 05:50:17 2005
From: Stephan.Popp at iisb.fraunhofer.de (Stephan Popp)
Date: Fri, 5 Aug 2005 13:50:17 +0200
Subject: [Twisted-Python] How to get initialize values of function
In-Reply-To: <1123241406.2974.27.camel@localhost.localdomain>
References: <1123241406.2974.27.camel@localhost.localdomain>
Message-ID: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>

On Friday 05 August 2005 13:30, Michał Tyde wrote:
> I have code like that:
>
> class class1:
> 	def funct1(self, some_args):
> 		if a==b:#(the condition doesn't matter)
> 			self.funct30("value")
			enother_val=self.value

> 	def funct30(self, value):
		self.value = value
> 		# do something
> 		# i can't return here a value, because the program work inappropriate
>
> Maybe this is a very simple solution, but i have got now any idea.
> Thanks in advance for answers
>
I don't know if I got right with what you mean, but I think you mean something 
like I added above. Or did you mean something completely different?




From antonykummel at yahoo.com  Tue Aug  9 07:08:53 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Tue, 9 Aug 2005 06:08:53 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
Message-ID: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>

Hi,

I felt a need for an interactive interpreter that
continued to be interactive when the reactor ran. Here
is my adaptation of the console class in codes.py.
Please comment.

Yours,

Antony Kummel


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistcon.py
URL: </pipermail/twisted-python/attachments/20050809/ea0bb11f/attachment.ksh>

From itamar at itamarst.org  Tue Aug  9 09:07:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Aug 2005 11:07:37 -0400
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>
References: <20050809130853.13584.qmail@web33911.mail.mud.yahoo.com>
Message-ID: <1123600057.8679.33.camel@localhost.localdomain>

On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel wrote:

> I felt a need for an interactive interpreter that
> continued to be interactive when the reactor ran. Here
> is my adaptation of the console class in codes.py.
> Please comment.

twisted.manhole provides one, and there's probably some way to hook it
up to the console using twisted.internet.stdio.




From luca.gaballo at rd.francetelecom.com  Tue Aug  9 11:00:11 2005
From: luca.gaballo at rd.francetelecom.com (Gaballo Luca)
Date: Tue, 09 Aug 2005 19:00:11 +0200
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
Message-ID: <42F8E11B.9080507@rd.francetelecom.com>

hi,
i'm working with socket and i need to make two consecutive connection
binding the client on the same address. When i try to execute the code i
have an error like this:
     socket.error: (98, 'Address already in use')
even if i have correctly closed the socket !?!
I use a code like this:

v----------------------------------------------------------------------------------------------v
def main(self):
  self.connect(remoteAddress, localAddress)
  ...do something...
  self.closeSocket()
  self.connect(remoteAddress, localAddress)

  def connect(self, remoteAddress, localAddress):
    self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    self.s.bind(localAddress)
    self.s.connect(remoteAddress)
    self.connectionMade()

  def closeSocket(self):
    self.s.shutdown(2)
    self.s.close()
^----------------------------------------------------------------------------------------------^

I tried with the twisted api too doing something like:

v----------------------------------------------------------------------------------------------v
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30,
(localIp, localPort))
...
self.transport.loseConnection()
...
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30,
(localIp, localPort))
^----------------------------------------------------------------------------------------------^

but the result is the same.


Any suggestions?

thanks

Luca Gaballo







From luca.gaballo at rd.francetelecom.com  Tue Aug  9 10:44:59 2005
From: luca.gaballo at rd.francetelecom.com (Gaballo Luca)
Date: Tue, 09 Aug 2005 18:44:59 +0200
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
Message-ID: <42F8DD8B.1040209@rd.francetelecom.com>

hi,
i'm working with socket and i need to make two consecutive connection 
binding the client on the same address. When i try to execute the code i 
have an error like this:
     socket.error: (98, 'Address already in use')
even if i have correctly closed the socket !?!
I use a code like this:

v----------------------------------------------------------------------------------------------v
def main(self):
  self.connect(remoteAddress, localAddress)
  ...do something...
  self.closeSocket()
  self.connect(remoteAddress, localAddress)

  def connect(self, remoteAddress, localAddress):
    self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    self.s.bind(localAddress)
    self.s.connect(remoteAddress)
    self.connectionMade()

  def closeSocket(self):
    self.s.shutdown(2)
    self.s.close()
^----------------------------------------------------------------------------------------------^

I tried with the twisted api too doing something like:

v----------------------------------------------------------------------------------------------v
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30, 
(localIp, localPort))
...
self.transport.loseConnection()
...
self.reactor.connectTCP(remoteIp, remotePort, ClientFactory(self), 30, 
(localIp, localPort))
^----------------------------------------------------------------------------------------------^

but the result is the same.


Any suggestions?

thanks

Luca Gaballo

 
  



From bv at bnl.gov  Tue Aug  9 11:56:54 2005
From: bv at bnl.gov (Brett Viren)
Date: Tue, 09 Aug 2005 13:56:54 -0400
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <42F8E11B.9080507@rd.francetelecom.com> (Gaballo Luca's message
	of "Tue, 09 Aug 2005 19:00:11 +0200")
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
	<42F8E11B.9080507@rd.francetelecom.com>
Message-ID: <ir4oe87q9i1.fsf@minos.phy.bnl.gov>

Gaballo Luca <luca.gaballo at rd.francetelecom.com> writes:

>      socket.error: (98, 'Address already in use')

The pure Python TCPServer and UDPServer classes have a class variable
"allow_reuse_address".  Set to "True" will allow quick re-binding.  It
needs to be set before any server instances are created.  For example
I use this bit of code in some non-Twisted XML-RPC server code:

from SimpleXMLRPCServer import *
SimpleXMLRPCServer.allow_reuse_address = True


However, I don't know if your Twisted based server ultimately inherits
from one of these classes.

-Brett.



From foom at fuhm.net  Tue Aug  9 12:21:57 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 9 Aug 2005 14:21:57 -0400
Subject: [Twisted-Python] Socket bind and re-bind problems
In-Reply-To: <42F8DD8B.1040209@rd.francetelecom.com>
References: <1123241406.2974.27.camel@localhost.localdomain>
	<200508051350.17659.Stephan.Popp@iisb.fraunhofer.de>
	<42F8DD8B.1040209@rd.francetelecom.com>
Message-ID: <8E60194A-EA07-45DA-94C8-8DAE6AF5CAC0@fuhm.net>


On Aug 9, 2005, at 12:44 PM, Gaballo Luca wrote:

> hi,
> i'm working with socket and i need to make two consecutive  
> connection binding the client on the same address. When i try to  
> execute the code i have an error like this:
>     socket.error: (98, 'Address already in use')
> even if i have correctly closed the socket !?!

The kernel prevents you from reusing a local port for a few seconds  
in order to properly implement some timeout in the TCP spec. You  
don't really want to bypass this. There is pretty much no reason to  
ever bind a client tcp socket to a specific port. So, your problem is  
solved simply by removing the 'bind' call. Or, if you do want to bind  
to a local IP addr, simply set the local port to 0 so the kernel will  
autoselect.

James



From jmbenski at micron.com  Tue Aug  9 16:34:17 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Tue, 9 Aug 2005 16:34:17 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72813@NTXBOIMBX15.micron.com>

I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.

 

I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.

 

If I run this program without the sleep everything works correctly.  If I add the sleeps before the write, the write never registers with the process.  It is almost as if the pipe never gets flushed with the transport write.  I've looked through the API and haven't seen a way to flush the pipes and I have tried using the sys.stdout.flush().

 

What am I doing wrong?  Is there an easier way to setup inter-process communication through Twisted?

 

Thanks,

 

Jon

 

 

from twisted.internet import reactor, protocol

import threading

from twisted.python import threadable

import os

import sys

import time

 

threadable.init( with_threads=1)

 

class procProtocol(protocol.ProcessProtocol):

    def __init__(self):

        pass

    def connectionMade(self):

        print "Connection Made\n"

 

    def outReceived(self, data):

        file = open("bob.txt","a")

        file.write("outReceived\n" + data)

        file.close()

          

class ReactorFacade:

 

            def __init__( self ):

                        self.reactorThread = threading.Thread(

                                    target=reactor.run,

                                    name="ReactorThread",

                                    kwargs={'installSignalHandlers':0},

                                    )

 

            def start(self):

                        # assume not yet started

                        print "Facade: starting..."

                        self.reactorThread.start()

                        print "Facade: started ok"

 

            def stop(self):

                        # assume already running

                        print "Facade: request stop"

                        reactor.callFromThread(reactor.stop)

                        print "Facade: request stopped ok"

                        self.reactorThread.join()

 

    executable = "foo"

    program = "MSsync"

    args = ["arg1","arg2", "path", str(os.getpid())]      

 

    #create the handler for the communication

    processProtocol = procProtocol()

    reactor.spawnProcess(processProtocol, executable, args,

                env=os.environ, path=args[2],

                uid=None, gid=None, usePTY=True)

 

    rf = ReactorFacade()

    rf.start()

    

    time.sleep(3)  #If I remove this sleep the following write will register with my process.

    processProtocol.transport.write( "some command \r\n" )

    time.sleep(3)

    processProtocol.transport.write( "some command \r\n" )

    rf.stop()

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050809/40717143/attachment.html>

From exarkun at divmod.com  Tue Aug  9 23:58:57 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 10 Aug 2005 01:58:57 -0400
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <1123600057.8679.33.camel@localhost.localdomain>
Message-ID: <20050810055857.3914.1747834441.divmod.quotient.3942@ohm>

On Tue, 09 Aug 2005 11:07:37 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel wrote:
>
>> I felt a need for an interactive interpreter that
>> continued to be interactive when the reactor ran. Here
>> is my adaptation of the console class in codes.py.
>> Please comment.
>
>twisted.manhole provides one, and there's probably some way to hook it
>up to the console using twisted.internet.stdio.
>

Except it's twisted.conch.manhole.  twisted.conch.stdio demonstrates how one much hook it up to stdio.

Note in particular the absence of raw_input(), which will segfault as often as not, when invoked in a non-main thread.

Jp



From exarkun at divmod.com  Wed Aug 10 00:04:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 10 Aug 2005 02:04:14 -0400
Subject: [Twisted-Python] simple spawnProcess
In-Reply-To: <3E7F9D21F31D094DB7721553EA2CD1B5E72813@NTXBOIMBX15.micron.com>
Message-ID: <20050810060414.3914.1312757949.divmod.quotient.3944@ohm>

On Tue, 9 Aug 2005 16:34:17 -0600, jmbenski at micron.com wrote:
>I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.
>
>
>
>I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.
>

Why are you using threads at all?  Twisted's process support presents an asynchronous API, like most other things Twisted does.  You don't need threads here.  Their presence is what is breaking your program.  You cannot call reactor.run() from one thread and /any/ other Twisted API (unless explicitly marked as an exception) from a different thread.  In particular, reactor.spawnProcess() and transport.write() in the code you included are being called from the wrong thread.

Jp



From mwh at python.net  Wed Aug 10 06:24:28 2005
From: mwh at python.net (Michael Hudson)
Date: Wed, 10 Aug 2005 13:24:28 +0100
Subject: [Twisted-Python] Re: twisted-compliant interactive interpreter
References: <1123600057.8679.33.camel@localhost.localdomain>
	<20050810055857.3914.1747834441.divmod.quotient.3942@ohm>
Message-ID: <2mll3avv2b.fsf@starship.python.net>

Jp Calderone <exarkun at divmod.com> writes:

> Note in particular the absence of raw_input(), which will segfault
> as often as not, when invoked in a non-main thread.

I think this is fixed in Python CVS (and somewhat in 2.4.1)...

Cheers,
mwh

-- 
  We did requirements and task analysis, iterative design, and user
  testing. You'd almost think programming languages were an interface
  between people and computers.                    -- Steven Pemberton
          (one of the designers of Python's direct ancestor ABC)




From ajchos at wp.pl  Wed Aug 10 07:17:03 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Wed, 10 Aug 2005 15:17:03 +0200
Subject: [Twisted-Python] [Twisted - Python] Telnet client & keeping
	connection alive
Message-ID: <1123679823.4427.85.camel@localhost.localdomain>

First i want to thank all people that responsed for my ealier questions.
I have done a progress in my project.I am a green in Twisted/Python, and
network programming in general.
Now I got a working telnet client. I have got two kind of telnet
servers. First one (after succesfuly login) keeps connection even if I
don't send a command to him. Second one disconnect me every 30 sec., if
I don't send command to him. So I want to create a thread (after
connection to the server) that will send to him a "pwd" command. I want
this thread to run constantly and sending every 20 sec "pwd" command. Of
course in the meantime i want to get responses for my enother commands.
Is this the best idea? Where should I do this (in protocol or in
factory)? Maybe there is another solution.
Where can I find some tutorials with code examples about threads in
Python/Twisted? Please send me a link with working pattern of telnet
client in Twisted. I have look for this kind of code but i couldn't find
anything. I don't know if my code is good (he works, but sometimes I
dont know why). Maybe some suggestions.
Thank You in advance for answers.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: stara.py
Type: text/x-python
Size: 2971 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050810/a8734d50/attachment-0002.py>

From itamar at itamarst.org  Wed Aug 10 08:43:13 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Aug 2005 10:43:13 -0400
Subject: [Twisted-Python] [Twisted - Python] Telnet client & keeping
	connection alive
In-Reply-To: <1123679823.4427.85.camel@localhost.localdomain>
References: <1123679823.4427.85.camel@localhost.localdomain>
Message-ID: <1123684993.8224.16.camel@localhost.localdomain>

On Wed, 2005-08-10 at 15:17 +0200, Michał Tyde wrote:
> First i want to thank all people that responsed for my ealier questions.
> I have done a progress in my project.I am a green in Twisted/Python, and
> network programming in general.
> Now I got a working telnet client. I have got two kind of telnet
> servers. First one (after succesfuly login) keeps connection even if I
> don't send a command to him. Second one disconnect me every 30 sec., if
> I don't send command to him. So I want to create a thread (after
> connection to the server) that will send to him a "pwd" command.

You don't need a thread; twisted lets you schedule events. Look at
reactor.callLater and twisted.internet.task.LoopingCall:

http://twistedmatrix.com/projects/core/documentation/howto/time.html




From jmbenski at micron.com  Wed Aug 10 08:53:48 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Wed, 10 Aug 2005 08:53:48 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72817@NTXBOIMBX15.micron.com>

Ok, obviously I'm missing something in the API.  

When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

from twisted.internet import reactor
import os
import sys
import time

class procProtocol(protocol.ProcessProtocol):

    def __init__(self):
        pass

    def connectionMade(self):
        print "Connection Made\n"

    def outReceived(self, data):
        file = open("bob.txt","a")
        file.write("outReceived\n" + data)
        file.close()

    executable = "foo"
    program = "MSsync"
    args = ["arg1","arg2", "path", str(os.getpid())]      

    #create the handler for the communication
    processProtocol = procProtocol()
    reactor.spawnProcess(processProtocol, executable, args,
                env=os.environ, path=args[2],
                uid=None, gid=None, usePTY=True)

    #launch the reactor to grab events.
    reactor.run()    

    ### I will never get here ###

    ##At some unknown point in the future I might need to issue commands
    processProtocol.transport.write( "some command \r\n" )
    processProtocol.transport.write( "some command \r\n" )


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jp Calderone
Sent: Wednesday, August 10, 2005 12:04 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] simple spawnProcess

On Tue, 9 Aug 2005 16:34:17 -0600, jmbenski at micron.com wrote:
>I'm new to twisted, Python, and network programming in general, so this question has probably been answered many times.  Although after searching for a few days I haven't seen it.
>
>
>
>I'm trying to set up a simple process that accepts data through stdin and prints the response to stdout.  It is a continuously running process that will keep waiting for more input on stdin and will continue writing to stdout until a shutdown command is sent to it.  I started the reactor in a separate thread so that my main thread doesn't block while waiting for a response and I can send commands to the spawned process.
>

Why are you using threads at all?  Twisted's process support presents an asynchronous API, like most other things Twisted does.  You don't need threads here.  Their presence is what is breaking your program.  You cannot call reactor.run() from one thread and /any/ other Twisted API (unless explicitly marked as an exception) from a different thread.  In particular, reactor.spawnProcess() and transport.write() in the code you included are being called from the wrong thread.

Jp

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From david at ddahl.com  Wed Aug 10 09:02:29 2005
From: david at ddahl.com (David Dahl)
Date: Wed, 10 Aug 2005 10:02:29 -0500
Subject: [Twisted-Python] new to Twisted
In-Reply-To: <1123679823.4427.85.camel@localhost.localdomain>
References: <1123679823.4427.85.camel@localhost.localdomain>
Message-ID: <29D29156-A37E-4E19-92B0-87A21CF572A6@ddahl.com>

Hello:

I would like to implement a backup client in Python - possibly with  
Twisted Conch or similar tools. I would like the client to operate  
like rsync through ssh, and I am not sure how I should approach this  
functionality. Can I use the OS' rsync through Twisted's ssh client?  
Is there a python module that can be used through twisted's ssh  
client? Has anyone on this list worked on anything like this?

I saw this posted on a newsgroup:


 >  As for scp and rsync-ssh I don't know of
 >any out of the box solutions, however if you're good with Python you
 >may want to take a look at conch (a component of Twisted,
 >http://twistedmatrix.com/), which is a Python implementation of the  
SSH
 >protocol.  I've personally seen it used to implement restricted  
virtual
 >scp, but I don't think any such package has been released.  Twisted
 >does of course also have a FTP component that can be used more or less
 >out of the box.  I'm not really very familiar with the implementation
 >of rsync, but I can't imagine it would be too hard to implement  
either.
link: http://lists.nycbug.org/pipermail/talk/2004-June/001512.html

I am not sure how true this is after reading the twisted docs and  
examples.

I did some searching in the twisted archives, but not all of it...  
sorrry in advance if this topic has been hammered into the ground.


David




From lyndsey.franklin at pnl.gov  Wed Aug 10 09:25:50 2005
From: lyndsey.franklin at pnl.gov (Franklin, Lyndsey)
Date: Wed, 10 Aug 2005 08:25:50 -0700
Subject: [Twisted-Python] Twisted on QNX
Message-ID: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>

  I'm trying to get Twisted to work on a QNX computer (actually, I'm
after buildbot but I need Twisted first) but I'm having problems getting
it to run correctly.  The long and short is that for some reason,
threads and forks don't like each other much on QNX.  I've been taking
stabs at the code for Twisted but I'm not making much progress on my own
yet.  Is there some way to get rid of the forking in Twisted? (For those
who have played with buildbot, the problems crop up when I try to
checkout source code, it complains about the os.fork() not being
implemented).
 
Thanks in advance,
Lyndsey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050810/e7ad7824/attachment.html>

From itamar at itamarst.org  Wed Aug 10 09:59:29 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Aug 2005 11:59:29 -0400
Subject: [Twisted-Python] Twisted on QNX
In-Reply-To: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>
References: <2A474706F1CA9B4C9170EF8FB2031BAB01D0179C@pnlmse27.pnl.gov>
Message-ID: <1123689569.8224.26.camel@localhost.localdomain>

On Wed, 2005-08-10 at 08:25 -0700, Franklin, Lyndsey wrote:
>   I'm trying to get Twisted to work on a QNX computer (actually, I'm
> after buildbot but I need Twisted first) but I'm having problems
> getting it to run correctly.  The long and short is that for some
> reason, threads and forks don't like each other much on QNX.  I've
> been taking stabs at the code for Twisted but I'm not making much
> progress on my own yet.  Is there some way to get rid of the forking
> in Twisted? (For those who have played with buildbot, the problems
> crop up when I try to checkout source code, it complains about the
> os.fork() not being implemented).

fork() is how you run a subprocess in Unix, and Buildbot needs to do
that in order to run the program that checks out the sourcecode. If QNX
has a different API for running subprograms, and that API is wrapped in
Python, you could use that instead, though you may need to patch
Buildbot to support that method, or better yet provide a patch for
Twisted to implement reactor.spawnProcess for QNX.




From antonykummel at yahoo.com  Wed Aug 10 11:32:24 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Wed, 10 Aug 2005 10:32:24 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050810055857.3914.1747834441.divmod.quotient.3942@ohm>
Message-ID: <20050810173224.31760.qmail@web33909.mail.mud.yahoo.com>

Using twisted.manhole sounds like a good idea, but
twisted.internet.stdio doesn't support Windows, which
I am using. My version with deferToThread(raw_input)
works fine in windows. Could it be that there are no
problems doing it under windows?

Anyway, to be compatible I tried a variety of methods
to implement twisted.internet.stdio for windows
(attached is a msvcrt version which is probably
worthless). I wonder, if raw_inputting in a non-main
thread works for windows, if it can be used to do the
windows version of twisted.internet.stdio.

If it works, how difficult would it be to make a
worthwhile manhole client for windows?

Thanks,

Antony Kummel

--- Jp Calderone <exarkun at divmod.com> wrote:

> On Tue, 09 Aug 2005 11:07:37 -0400, Itamar
> Shtull-Trauring <itamar at itamarst.org> wrote:
> >On Tue, 2005-08-09 at 06:08 -0700, Antony Kummel
> wrote:
> >
> >> I felt a need for an interactive interpreter that
> >> continued to be interactive when the reactor ran.
> Here
> >> is my adaptation of the console class in
> codes.py.
> >> Please comment.
> >
> >twisted.manhole provides one, and there's probably
> some way to hook it
> >up to the console using twisted.internet.stdio.
> >
> 
> Except it's twisted.conch.manhole. 
> twisted.conch.stdio demonstrates how one much hook
> it up to stdio.
> 
> Note in particular the absence of raw_input(), which
> will segfault as often as not, when invoked in a
> non-main thread.
> 
> Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: winstdio.py
URL: </pipermail/twisted-python/attachments/20050810/a82865ef/attachment.ksh>

From glyph at divmod.com  Wed Aug 10 14:37:42 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 10 Aug 2005 16:37:42 -0400
Subject: [Twisted-Python] simple spawnProcess
In-Reply-To: <3E7F9D21F31D094DB7721553EA2CD1B5E72817@NTXBOIMBX15.micron.com>
Message-ID: <20050810203742.3914.1300900061.divmod.quotient.4136@ohm>



On Wed, 10 Aug 2005 08:53:48 -0600, jmbenski at micron.com wrote:
>Ok, obviously I'm missing something in the API.
>
>When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

That is rather the point.  Using threads to "get around this" will break Twisted.  Threads are not supported for most APIs, and as JP said, they are what is breaking your program.

>    ##At some unknown point in the future I might need to issue commands

You are correct that your program will never get there.  Code after run() is not a place that your program should really ever *expect* to get.

If you need to run some code 'in the future', see reactor.callLater.  In general though, you will have to issue commands to your spawned process in response to some event.  Was it a button click?  Use Twisted's integration with a toolkit (such as GTK or Qt).  Was it a network request?  Set up a ProtocolFactory with a reference to your spawned process, or set up one that spawns processes itself when network connections are made.

There are lots of events which can potentially hpppen while the main loop is running.  Think of your program as a series of responses to those things, and the bit before reactor.run() as simply the set-up to make sure appropriate events get caught (your initial callLater to set up a timed loop, or a listenTCP to connect your program to the network) rather than as the program in its entirety.



From glyph at divmod.com  Wed Aug 10 14:49:04 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 10 Aug 2005 16:49:04 -0400
Subject: [Twisted-Python] Twisted on QNX
In-Reply-To: <1123689569.8224.26.camel@localhost.localdomain>
Message-ID: <20050810204904.3914.462677039.divmod.quotient.4143@ohm>



On Wed, 10 Aug 2005 11:59:29 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

>fork() is how you run a subprocess in Unix, and Buildbot needs to do
>that in order to run the program that checks out the sourcecode. If QNX
>has a different API for running subprograms, and that API is wrapped in
>Python, you could use that instead, though you may need to patch
>Buildbot to support that method, or better yet provide a patch for
>Twisted to implement reactor.spawnProcess for QNX.

or possibly get a site-license for all the Twisted developers to run QNX neutrino development environments.  Just a thought ;-)




From jmbenski at micron.com  Wed Aug 10 16:36:32 2005
From: jmbenski at micron.com (jmbenski at micron.com)
Date: Wed, 10 Aug 2005 16:36:32 -0600
Subject: [Twisted-Python] simple spawnProcess
Message-ID: <3E7F9D21F31D094DB7721553EA2CD1B5E72821@NTXBOIMBX15.micron.com>

Ok, thanks.  I got it working.  I was just thinking of it in reverse.  All the google hits I came up with had someone talking about running the Qt and Twisted threads separately.  Apparently that is a good way to run in circles for awhile.

Thanks for the help.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
Sent: Wednesday, August 10, 2005 2:38 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] simple spawnProcess



On Wed, 10 Aug 2005 08:53:48 -0600, jmbenski at micron.com wrote:
>Ok, obviously I'm missing something in the API.
>
>When I call reactor.run(), my main thread is stuck in the loop.  I tried to set up my code in a thread to get around this.

That is rather the point.  Using threads to "get around this" will break Twisted.  Threads are not supported for most APIs, and as JP said, they are what is breaking your program.

>    ##At some unknown point in the future I might need to issue commands

You are correct that your program will never get there.  Code after run() is not a place that your program should really ever *expect* to get.

If you need to run some code 'in the future', see reactor.callLater.  In general though, you will have to issue commands to your spawned process in response to some event.  Was it a button click?  Use Twisted's integration with a toolkit (such as GTK or Qt).  Was it a network request?  Set up a ProtocolFactory with a reference to your spawned process, or set up one that spawns processes itself when network connections are made.

There are lots of events which can potentially hpppen while the main loop is running.  Think of your program as a series of responses to those things, and the bit before reactor.run() as simply the set-up to make sure appropriate events get caught (your initial callLater to set up a timed loop, or a listenTCP to connect your program to the network) rather than as the program in its entirety.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From ajchos at wp.pl  Thu Aug 11 03:01:13 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 11:01:13 +0200
Subject: [Twisted-Python] What is wrong with this instance?
Message-ID: <1123750874.2846.8.camel@localhost.localdomain>

As a topic. I got the code:
^^^
form twisted.protocols.telnet import Telnet

def keep():
	telnet=Telnet()
	print type(telnet)
	print getattr(telnet,'write')#all OK until here
	telnet.write("msg")
	print "msg"
keep()
^^^
and I got

TypeError: unbound method write() must be called with Telnet instance as
first argument (got str instance instead)

I really don't understand where is the mistake.




From andrew-twisted at puzzling.org  Thu Aug 11 03:33:01 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 11 Aug 2005 19:33:01 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123750874.2846.8.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
Message-ID: <20050811093301.GU11932@trogdor.home.puzzling.org>

On Thu, Aug 11, 2005 at 11:01:13AM +0200, Michał Tyde wrote:
> As a topic. I got the code:
> ^^^
> form twisted.protocols.telnet import Telnet
> 
> def keep():
> 	telnet=Telnet()
> 	print type(telnet)
> 	print getattr(telnet,'write')#all OK until here
> 	telnet.write("msg")
> 	print "msg"
> keep()
> ^^^

No, you don't have that code.  Your code has a syntax error in the first
line.  Also:

> and I got
> 
> TypeError: unbound method write() must be called with Telnet instance as
> first argument (got str instance instead)

That's not the error I get with your code, and that's not the error I get
with your code after correcting the obvious typo in the first line.

> I really don't understand where is the mistake.

Neither do I.  I could guess, but I'd have no idea if I was right or not,
because I've no idea what your problem actually is.

Give us the exact code that reproduces your problem, so that we know what's
going on, and then we'll be able to help you.

-Andrew.




From ajchos at wp.pl  Thu Aug 11 04:26:30 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 12:26:30 +0200
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123750874.2846.8.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
Message-ID: <1123755990.2846.22.camel@localhost.localdomain>

Sorry I dont want to send too large posts, so I shorten the problem. I
am writing a telnet client, and I got a little problem with keeping
connection alive (thread: [Twisted - Python] Telnet client & keeping
connection alive). I use a reactor.callLater() loop, and i can't exectue
a method i have written in Protocol class. I try to execute this method
in the end of code before reactor.run(). 

Code below:
#---------------------#
#Client Side Protocol #
#---------------------#
from twisted.protocols.telnet import Telnet
from twisted.internet.protocol import Protocol
from twisted.internet.protocol import ClientFactory
from twisted.internet import reactor, task, defer, threads
import telnetlib as tln
from twisted.python import threadable
threadable.init()
import logging, thread
delimiters = ['\r\n', '\r\x00']

class TelnetProtocol(Telnet):
#	log = logging.getLogger("telnet.protocol.")
	buffer = ''
	global ciag
	licznik = 0

	def makeConnection(self, transport):
		print "Making a connection"
		Telnet.makeConnection(self, transport)
		
	def connectionMade(self):
		print "Connection made"
#		self.log.info("telnet_protocol connected")
		Telnet.connectionMade(self)
		
	def connectionLost(self, reason):
#		self.log.debug("Connection lost: %s", reason)
		print "connection lost, %s" % reason
		Telnet.connectionLost(self, reason)

	def dataReceived(self, data):
		print "Data recived"
		ciag=""
		self.buffer+=data
		f=open("new.txt","a+")
		print self.buffer
		f.write(self.buffer)
		odp = self.responseFunct(data)
		self.write(odp)
		if self.buffer == '':
			print "nic nie ma"
			self.transport.loseConnection()
		if ("login:" in  data) and ("Last login:" not in data):
			print "wchodze 4"
			# here i take a username from USE CASE
			self.telnet_User()
			print "wychodze 4"
		if "Password:" in  data:
			print "wchodze 5"
			# here i take a password from USE CASE
			self.telnet_Password()
			print "wychodze 5"
		try:
			print "try 1"
			if "[mkl at julia mkl]$" in data:
				self.telnet_Check_OK(data)
				print "try 2"
			else:
				print "else 1"
				self.telnet_Check_DENY() 
				print "else 2"
				pass
		except:
			pass
	
	def responseFunct(self, buffer):
		response = ""
		print "funkcja in"
		f = open("dlugosc.txt","a+")
		length = len(buffer)# buffer - string
		response_buffer=""
		for i in range(length/3):
			# every seqence I should RESponse, should begin from IAC - \xff (255)
			# i dont get a terminal type
			sequence=buffer[0+(i*3):3+(i*3)]
			f.write("seq:"+sequence)
			if sequence.count(tln.IAC):
				f.write("<-: YES\n")
				if sequence.count(tln.DO) and sequence.count(tln.SNDLOC):
					response = tln.IAC + tln.DO + tln.SNDLOC
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.BINARY):
					response = tln.IAC + tln.WILL + tln.BINARY
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.ECHO):
					response = tln.IAC + tln.WILL + tln.ECHO
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.DO) and sequence.count(tln.SGA):
					response = tln.IAC + tln.WILL + tln.SGA
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.BINARY):
					response = tln.IAC + tln.DO + tln.BINARY
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.ECHO):
					response = tln.IAC + tln.DO + tln.ECHO
					f.write("RES:"+str(response)+"\n")
				elif sequence.count(tln.WILL) and sequence.count(tln.SGA):
					response = tln.IAC + tln.DO + tln.SGA
					f.write("RES:"+str(response)+"\n")
				elif tln.DO in sequence or tln.DONT in sequence:
					response = tln.IAC + tln.WONT + sequence[2]
					f.write("RES:"+str(response)+"\n")
				elif tln.WILL in sequence or tln.WONT in sequence:
					response = tln.IAC + tln.DONT + sequence[2]
					f.write("RES:"+str(response)+"\n")
			else:
				f.write("\n")
			response_buffer +=response
		print "funkcja out"
		return response_buffer

	def telnet_User(self, user="mkl"):
		print "user1"
		self.transport.write(user+"\n\r")
		print "user2"
		
	def telnet_Password(self, paswd="Kznjsnm"):
		print "pass1"
		self.transport.write(paswd+"\n\r")
		print "pass2"
	
	def loggedIn(self):
		# i know that user succesfuly login
		f=open("zewn.txt","w")
		f.write("logged In")
		print "logged In"
			
	def telnet_Check_OK(self, data):
		if "[mkl at julia mkl]$" in data:
			print "wchodze spr log"
			f=open("new.txt","a+")
			f.write("udalo sie zalogowac")
			print "wychodze spr log"
		pass
#			self.loggedIn(tf=False)


	def telnet_Check_DENY(self):
		print "zly user we"
		f=open("new.txt","a+")
		f.write("zly user - nie udalo sie zalogowac")
		print "zly user wy"	
		self.tansport.loseConnection()
		reactor.stop()
	
	def telnet_KeepAlive(self):
		print "KA 1"
		self.write("pwd\n\r")
		print "KA 2"
	
	def telnet_Command(self, command="pwd"):
		print "comm1"
		print command
		self.write(command+"\r\n")
		f.write(command)
		print "comm2"
	
#-------------------------#
# Client Side Factories 2 #
#-------------------------#

class MyFactory(ClientFactory):
	protocol = TelnetProtocol

	def startedConnecting(self, connector):
		#self.makeConnection()
		#connector.connect()
		pass # we could connector.stopConnecting()
	
	def clientConnectionLost(self, connector, reason):
		print "Connection lost reconecting %s" % reason
		reactor.stop()
#		connector.connect() # reconnect
	
	def clientConnectionFailed(self, connector, reason):
		print "connection failed %s" % reason
		reactor.stop()
	
#-------------------------------------#
# Connection API					  #
#-------------------------------------#
if __name__=="__main__":
	def command(commd):
#		tel=TelnetProtocol()
		print "command"
		print commd
		
	def telnet_KeepAlive():
		print "keeping alive 1"
		tel=TelnetProtocol()
		print type(tel)
		print hasattr(tel,'telnet_KeepAlive')
		c=tel.telnet_KeepAlive
		print c
		#c()#doesn't execute
		print "keeping alive 2"	
	
	HOST='127.0.0.1'
	port=23
	l = task.LoopingCall(telnet_KeepAlive)
	l.start(5.0)
#	reactor.callLater(5,command(commd="ls"))
	reactor.connectTCP(HOST, port, MyFactory())
	reactor.run()






From mary-twisted at puzzling.org  Thu Aug 11 04:39:53 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 11 Aug 2005 20:39:53 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123755990.2846.22.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
	<1123755990.2846.22.camel@localhost.localdomain>
Message-ID: <20050811103953.GA8485@sourdust.home.puzzling.org>

On Thu, Aug 11, 2005, Michał Tyde wrote:
> Sorry I dont want to send too large posts, so I shorten the problem.

This is the right thing to do. But it's not all that you need to do,
unfortunately.

Your shorter problem did not have the error you claimed it had: in fact,
it did not run at all. It is very hard to guess what it is you want when
you give a piece of code that doesn't even give the error you are
complaining about. You need to provide:

 1. a short example of a piece of code that doesn't do what you want
 2. a description of what it actually does, ie what the error is
 3. a description of what it is you want it to do when it is fixed

You gave us 1 and 2, but the problem was that the code didn't actually
even do what you said it did at 2. That makes it even harder to guess
what it is that you want to happen at 3.

-Mary



From andrew-twisted at puzzling.org  Thu Aug 11 04:44:43 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 11 Aug 2005 20:44:43 +1000
Subject: [Twisted-Python] What is wrong with this instance?
In-Reply-To: <1123755990.2846.22.camel@localhost.localdomain>
References: <1123750874.2846.8.camel@localhost.localdomain>
	<1123755990.2846.22.camel@localhost.localdomain>
Message-ID: <20050811104443.GV11932@trogdor.home.puzzling.org>

On Thu, Aug 11, 2005 at 12:26:30PM +0200, Michał Tyde wrote:
> Sorry I dont want to send too large posts, so I shorten the problem. I
> am writing a telnet client, and I got a little problem with keeping
> connection alive (thread: [Twisted - Python] Telnet client & keeping
> connection alive). I use a reactor.callLater() loop, and i can't exectue
> a method i have written in Protocol class. I try to execute this method
> in the end of code before reactor.run(). 

Sorry, I'm not sure exactly what the problem you're having is.

Shortening the problem is great, but it needs to be something that I can run
and see the exact same error you are seeing, rather than SyntaxErrors or
completely different errors.

With this longer example I'm not sure what part of it is not behaving as you
expect.  Taking a guess and uncommenting this line:

> 		#c()#doesn't execute

Gives me this error when I run your code:

Traceback (most recent call last):
  File "/tmp/blah.py", line 201, in ?
    telnet_KeepAlive()
  File "/tmp/blah.py", line 198, in telnet_KeepAlive
    c()#doesn't execute
  File "/tmp/blah.py", line 151, in telnet_KeepAlive
    self.write("pwd\n\r")
  File "/usr/lib/python2.4/site-packages/twisted/protocols/telnet.py", line 181, in write
    self.transport.write(data)
AttributeError: 'NoneType' object has no attribute 'write'

Is this what you're referring to?

I feel like I'm trying to read minds here, and I'm not very good at that :)

-Andrew.




From lycka at carmensystems.com  Thu Aug 11 05:24:08 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 11 Aug 2005 13:24:08 +0200
Subject: [Twisted-Python] Unix platforms?
Message-ID: <42FB3558.4020306@carmensystems.com>

Are people using Twisted on HP-UX, AIX or Solaris? (I saw that Marcus 
Kimpenhaus
asked about HP-UX and AIX two years ago, and I read Moshe's reply, but 
maybe
someone tried since then? Since I can't connect to tmrc now, I haven't 
even tried to
build it yet...but even if I could, it would be nice to know if someone 
was using it
for real...)



From lycka at carmensystems.com  Thu Aug 11 05:24:47 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 11 Aug 2005 13:24:47 +0200
Subject: [Twisted-Python] Getting twisted tar balls?
Message-ID: <42FB357F.60006@carmensystems.com>

It seems tmrc.mit.edu is down. (Or is that just some kind of DNS
problem in my end?)  Is there any other place I can download
TwistedSumo-2005-05-25.tar.bz2 or something equivalent from?

Due to firewalls and stuff, I have problems using svn at work...




From ajchos at wp.pl  Thu Aug 11 07:50:39 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Thu, 11 Aug 2005 15:50:39 +0200
Subject: [Twisted-Python] What is wrong with this instance?
Message-ID: <1123768239.4673.29.camel@localhost.localdomain>

First I wanted to say is that i attached a file with _working_ code.
Please try to change a user nad password in telnet_User, and
telnet_Password.
> With this longer example I'm not sure what part of it is not behaving
> as you expect.
Please read the thread: [Twisted - Python] Telnet client & keeping
connection alive. I want to send to connected telnet server a "pwd"
command every 20 sec. Here I got less (5 sec.) to wait for effects ->
see task.LoopingCall(telnet_KeepAlive2). In function telnet_KeepAlive2 I
try to execute function from TelnetProtocol class (function
telnet_KeepAlive). It doesn't execute, and becouse of that is after #
sign. 

With this line commented program works just fine (executes every 5 sec.
a telnet_KeepAlive2() ),but it does nothing important. Run this program
with this line commented, You should see that he prints (after
connection):
keeping alive 1
keeping alive 2
keeping alive 1
keeping alive 2
...
but I must to execute telnet_KeepAlive() method (from TelnetProtocol,
_and this is the problem_). This method should send by self.write("pwd\n
\r") command to telnet server. Sorry if I repeat myself, but I try to
explain the problem the best way I could. If I uncoment line in
telnet_KeepAlive2 (line: tel.telnet_KeepAlive()),my telnet client
connect to server and now do nothing (doesn't get into telnet_KeepAlive2
loop).
> I feel like I'm trying to read minds here, and I'm not very good at
> that :)
Me neither :).

I know that my problem has something common with instance of class
TelnetProtocol. How to could I pass on a TelnetProtocol method or
instance to interior of telnet_KeepAlive function? Or maybe there is
another solution.
Thank You in advance for answers.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: stara.py
Type: text/x-python
Size: 5407 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050811/69dfa38e/attachment-0002.py>

From itamar at itamarst.org  Thu Aug 11 09:01:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Aug 2005 11:01:30 -0400
Subject: [Twisted-Python] Twisted download site (TMRC) is down temporarily
In-Reply-To: <42FB357F.60006@carmensystems.com>
References: <42FB357F.60006@carmensystems.com>
Message-ID: <1123772491.8198.23.camel@localhost.localdomain>

NStar, the local power company, screwed something up or something and
the building it's in isn't getting power.

Meanwhile you can download twisted from
http://twistedmatrix.com/downloads/ - for example, Twisted 2.0 and the
sumo tarballs are at http://twistedmatrix.com/downloads/Twisted/2.0/




From leszczynscy at yahoo.com  Thu Aug 11 11:16:14 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 10:16:14 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the protocol.Protocol
Message-ID: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>

In the protocol derived class and dataReceived
function, I need to send response with given delay
using self.transport.write(str(msg)).

I guess I would use "maybeDeferred" class to do that.
How to pass the delay value.

Please advice,

A.



From ww at groovy.net  Thu Aug 11 11:23:14 2005
From: ww at groovy.net (William Waites)
Date: Thu, 11 Aug 2005 13:23:14 -0400
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
References: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
Message-ID: <20050811172314.GC19620@groovy.net>

On Thu, Aug 11, 2005 at 10:16:14AM -0700, Andrzej Leszczynski wrote:
> In the protocol derived class and dataReceived
> function, I need to send response with given delay
> using self.transport.write(str(msg)).

how about reactor.callLater(delay, self.transport.write, str(msg))?

-w



From bob at redivi.com  Thu Aug 11 11:32:50 2005
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 11 Aug 2005 07:32:50 -1000
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
References: <20050811171614.10213.qmail@web30502.mail.mud.yahoo.com>
Message-ID: <3A75FC75-8531-4CC0-8397-528EE0C95318@redivi.com>


On Aug 11, 2005, at 7:16 AM, Andrzej Leszczynski wrote:

> In the protocol derived class and dataReceived
> function, I need to send response with given delay
> using self.transport.write(str(msg)).
>
> I guess I would use "maybeDeferred" class to do that.
> How to pass the delay value.

No, you'd use callLater(delay, self.transport.write, str(msg))

-bob




From leszczynscy at yahoo.com  Thu Aug 11 11:36:35 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 10:36:35 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811172314.GC19620@groovy.net>
Message-ID: <20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>

--- William Waites <ww at groovy.net> wrote:
> On Thu, Aug 11, 2005 at 10:16:14AM -0700, Andrzej
> Leszczynski wrote:
> > In the protocol derived class and dataReceived
> > function, I need to send response with given delay
> > using self.transport.write(str(msg)).
> 
> how about reactor.callLater(delay,
> self.transport.write, str(msg))?

Will try that but this assumes that you know msg at
point of handling the dataReceived. The hidden part of
my question is that I would like to deffer/delay
processing the dataReceived in general becasue of a
few design reasons. This is why I asked about that
Deffered. 

I learn Twisted, so sorry for simple question. Want to
have most Pythonic/Twisthonic solution.

Thx,
A.







From ww at groovy.net  Thu Aug 11 11:44:18 2005
From: ww at groovy.net (William Waites)
Date: Thu, 11 Aug 2005 13:44:18 -0400
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>
References: <20050811172314.GC19620@groovy.net>
	<20050811173635.2670.qmail@web30503.mail.mud.yahoo.com>
Message-ID: <20050811174418.GD19620@groovy.net>

On Thu, Aug 11, 2005 at 10:36:35AM -0700, Andrzej Leszczynski wrote:
> 
> Will try that but this assumes that you know msg at
> point of handling the dataReceived. The hidden part of
> my question is that I would like to deffer/delay
> processing the dataReceived in general becasue of a
> few design reasons. This is why I asked about that
> Deffered. 

Well, then you'd do the same sort of thing:

	reactor.callLater(delay, self.processDataAndSend, data)

> I learn Twisted, so sorry for simple question. Want to
> have most Pythonic/Twisthonic solution.

No need to apologize. Deferreds are not what you are after,
they represent data that will be available at some undefined
but hopefully bounded time in the future. They're note used
for scheduling in the sense that you are talking about.

Cheers,
-w



From leszczynscy at yahoo.com  Thu Aug 11 15:07:52 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 11 Aug 2005 14:07:52 -0700 (PDT)
Subject: [Twisted-Python] how to delay the response in the
	protocol.Protocol
In-Reply-To: <20050811174418.GD19620@groovy.net>
Message-ID: <20050811210752.63709.qmail@web30503.mail.mud.yahoo.com>

--- William Waites <ww at groovy.net> wrote:
>
> 	reactor.callLater(delay, self.processDataAndSend,
> data)


thx for the help, works perfectly fine.

A.




From alwyn.schoeman at gmail.com  Fri Aug 12 01:56:58 2005
From: alwyn.schoeman at gmail.com (Alwyn Schoeman)
Date: Fri, 12 Aug 2005 15:56:58 +0800
Subject: [Twisted-Python] Searchable mailing list?
Message-ID: <22d55aea05081200561504ed48@mail.gmail.com>

Hi everyone,

Any version of this mailing list that one can search?

-- 
Alwyn Schoeman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050812/07b076ec/attachment.html>

From mary-twisted at puzzling.org  Fri Aug 12 02:13:32 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 12 Aug 2005 18:13:32 +1000
Subject: [Twisted-Python] Searchable mailing list?
In-Reply-To: <22d55aea05081200561504ed48@mail.gmail.com>
References: <22d55aea05081200561504ed48@mail.gmail.com>
Message-ID: <20050812081332.GA28531@sourdust.home.puzzling.org>

On Fri, Aug 12, 2005, Alwyn Schoeman wrote:
> Hi everyone,
> 
> Any version of this mailing list that one can search?

You can search the Twisted Matrix site, including the lists, using the
Google search down the bottom of http://twistedmatrix.com/

-Mary



From nkeric at gmail.com  Fri Aug 12 02:37:32 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Fri, 12 Aug 2005 16:37:32 +0800
Subject: [Twisted-Python] Searchable mailing list?
In-Reply-To: <22d55aea05081200561504ed48@mail.gmail.com>
References: <22d55aea05081200561504ed48@mail.gmail.com>
Message-ID: <43c0d2b505081201376a1e70ef@mail.gmail.com>

2005/8/12, Alwyn Schoeman <alwyn.schoeman at gmail.com>:
> Hi everyone,
>  
>  Any version of this mailing list that one can search?
> 

You can search via gmane : )

http://dir.gmane.org/gmane.comp.python.twisted

- Eric



From ajchos at wp.pl  Fri Aug 12 05:48:27 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 12 Aug 2005 13:48:27 +0200
Subject: [Twisted-Python] How to run function from protocol class
Message-ID: <1123847308.2844.10.camel@localhost.localdomain>

I got the code:
from twisted.internet.protocol import Protocol

class MyClientProtocol(Protocol):
	buffer = ''
	def connectionMade(self):
		self.transport.write('hello world')
	def myFunction(self):
		self.transport.write('blah')
	def dataReceived(self, data):
		self.buffer += data
		if self.buffer == 'hello world':
			self.transport.loseConnection()
from twisted.internet.protocol import ClientFactory

class MyFactory(ClientFactory):
	protocol = MyClientProtocol
	def startedConnecting(self, connector):
		pass # we could connector.stopConnecting()
	def clientConnectionLost(self, connector, reason):
		connector.connect() # reconnect
	def clientConnectionFailed(self, connector, reason):
		print "connection failed"
		reactor.stop()

from twisted.internet import reactor, task

#t=MyClientProtocol()
#l = task.LoopingCall(t.myFunction)
#l.start(5.0)

reactor.connectTCP('localhost', 7771, MyFactory(), timeout=30)
reactor.run()

I want to run my function myFunction every 5 sec (commented code). I want to use a task.LoopingCall loop. 
I am run out of new ideas. I don't know how to do this. Help please.




From exarkun at divmod.com  Fri Aug 12 07:11:10 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 12 Aug 2005 09:11:10 -0400
Subject: [Twisted-Python] How to run function from protocol class
In-Reply-To: <1123847308.2844.10.camel@localhost.localdomain>
Message-ID: <20050812131110.3914.161684071.divmod.quotient.4665@ohm>

On Fri, 12 Aug 2005 13:48:27 +0200, Michał Tyde <ajchos at wp.pl> wrote:
>I got the code:
>from twisted.internet.protocol import Protocol
>
>class MyClientProtocol(Protocol):
>	buffer = ''
>	def connectionMade(self):
>		self.transport.write('hello world')

                l = task.LoopingCall(self.myFunction)
                l.start(5.0)

>	def myFunction(self):
>		self.transport.write('blah')
>	def dataReceived(self, data):
>		self.buffer += data
>		if self.buffer == 'hello world':
>			self.transport.loseConnection()
>from twisted.internet.protocol import ClientFactory
>
>class MyFactory(ClientFactory):
>	protocol = MyClientProtocol
>	def startedConnecting(self, connector):
>		pass # we could connector.stopConnecting()
>	def clientConnectionLost(self, connector, reason):
>		connector.connect() # reconnect
>	def clientConnectionFailed(self, connector, reason):
>		print "connection failed"
>		reactor.stop()
>
>from twisted.internet import reactor, task
>
>
>reactor.connectTCP('localhost', 7771, MyFactory(), timeout=30)
>reactor.run()
>

Jp



From nkeric at gmail.com  Fri Aug 12 07:12:45 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Fri, 12 Aug 2005 21:12:45 +0800
Subject: [Twisted-Python] How to run function from protocol class
In-Reply-To: <1123847308.2844.10.camel@localhost.localdomain>
References: <1123847308.2844.10.camel@localhost.localdomain>
Message-ID: <43c0d2b505081206122c58c147@mail.gmail.com>

AFAIK, the Factory class creates a Protocol instance for each
connection, then if you would like to achieve what you want, you'll
have to do the looping call _inside_ the Protocol class.

So I guess you could try this to see if it works:

class MyClientProtocol(Protocol):
    ...
    def connectionMade(self):
        ...
        l = task.LoopingCall(t.myFunction)
        l.start(5.0)
[snip]

I'm not sure whether we can do this in the __init__(self) method, I
guess that would failed since the protocol's transport instance
haven't even been created during __init__... so it would be much
better to do that inside the connectionMade(self) method.

Hope that helps : )

(sorry for my poor english ;p )

- Eric

2005/8/12, Michał Tyde <ajchos at wp.pl>:
> I got the code:
> I want to run my function myFunction every 5 sec (commented code). I want to use a task.LoopingCall loop.
> I am run out of new ideas. I don't know how to do this. Help please.
>

From ajchos at wp.pl  Fri Aug 12 07:22:26 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 12 Aug 2005 15:22:26 +0200
Subject: [Twisted-Python] How to run function from protocol class
Message-ID: <1123852947.3561.7.camel@localhost.localdomain>

Thank You it works just fine.




From antonykummel at yahoo.com  Sun Aug 14 06:15:27 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
Subject: [Twisted-Python] twisted-compliant interactive interpreter
In-Reply-To: <20050810173224.31760.qmail@web33909.mail.mud.yahoo.com>
Message-ID: <20050814121527.92362.qmail@web33908.mail.mud.yahoo.com>

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tcrust.py
URL: </pipermail/twisted-python/attachments/20050814/281b827c/attachment.ksh>

From pbector at yahoo.com  Sun Aug 14 08:11:39 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
Subject: [Twisted-Python] Query
Message-ID: <20050814141139.57997.qmail@web34305.mail.mud.yahoo.com>

Hi All
 
I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available  under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.
 
Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050814/0a106808/attachment.html>

From mark at junklight.com  Sun Aug 14 11:11:18 2005
From: mark at junklight.com (markw)
Date: Sun, 14 Aug 2005 18:11:18 +0100
Subject: [Twisted-Python] SSL Example?
Message-ID: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>

Hi,

I am contemplating running XML-RPC over SSL (basically for site to  
site process communication over the internet). Has anyone got any  
example code that would point me in the right direction (or just some  
clues :-) )

cheers

mark 



From exarkun at divmod.com  Sun Aug 14 11:28:44 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 14 Aug 2005 13:28:44 -0400
Subject: [Twisted-Python] Query
In-Reply-To: <20050814141139.57997.qmail@web34305.mail.mud.yahoo.com>
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866@ohm>

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector <pbector at yahoo.com> wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available  under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB.  Any IRC client should be able to connect to it.  The PB interface allows for easy programmatic access.  It does support groups.  It uses unicode internally, and transcodes messages received/delivered via IRC.  The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms.  For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



From pbector at yahoo.com  Sun Aug 14 12:55:28 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 11:55:28 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 12
In-Reply-To: <E1E4MmD-0003DW-02@pyramid.twistedmatrix.com>
Message-ID: <20050814185528.49160.qmail@web34312.mail.mud.yahoo.com>

Hi
 
Thanks for the quick reply.
 
PLease let me know if the twisted word chat server   is available as a software download??
>From where can i download the server and client software?
 
Thanks
twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: twisted-compliant interactive interpreter (Antony Kummel)
2. Query (pooja bector)
3. SSL Example? (markw)
4. Re: Query (Jp Calderone)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
From: Antony Kummel 
Subject: Re: [Twisted-Python] twisted-compliant interactive
interpreter
To: Twisted general discussion 
Message-ID: <20050814121527.92362.qmail at web33908.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
"""
PyCrust is a python shell and namespace browser application.
tCrust is a version of PyCrust that works with Twisted.
"""

# The next two lines, and the other code below that makes use of
# ``__main__`` and ``original``, serve the purpose of cleaning up the
# main namespace to look as much as possible like the regular Python
# shell environment.
import __main__
original = __main__.__dict__.keys()

__original_author__ = "Patrick K. O'Brien 
"

import wx

class App(wx.App):
"""PyCrust standalone application."""

def OnInit(self):
import wx
from wx import py

wx.InitAllImageHandlers()

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# make some adaptations
self.frame = py.crust.CrustFrame(title="Twisted PyCrust!",
InterpClass=self.getInterpClass())
def myOnClose(self, event):
from twisted.internet import reactor
reactor.addSystemEventTrigger('after', 'shutdown', self._OnClose, (None,))
reactor.stop()
self.frame._OnClose = self.frame.OnClose
self.frame.OnClose = myOnClose
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

self.frame.SetSize((800, 600))
self.frame.Show()
self.SetTopWindow(self.frame)
return True

def getInterpClass(self):
import sys
from wx import py
from twisted.conch.manhole import ManholeInterpreter

class ManholeCrustInterpreter(py.interpreter.Interpreter):
"""A version of the PyCrust interpreter that uses the manhole display hook"""
def __init__(self, locals=None, rawin=None,
stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr):
py.interpreter.Interpreter.__init__(self, locals, rawin,
stdin, stdout, stderr)
self.manhole = ManholeInterpreter(self, locals)

def addOutput(self, data, async):
self.write(data)

def runcode(self, *a, **kw):
orighook, sys.displayhook = sys.displayhook, self.manhole.displayhook
try:
py.interpreter.Interpreter.runcode(self, *a, **kw)
finally:
sys.displayhook = orighook

return ManholeCrustInterpreter 

'''
The main() function needs to handle being imported, such as with the
pycrust script that wxPython installs:

#!/usr/bin/env python

from wx.py.PyCrust import main
main()
'''

def main():
"""The main function for the PyCrust program."""
# Cleanup the main namespace, leaving the App class.
import __main__
md = __main__.__dict__
keepers = original
keepers.append('App')
for key in md.keys():
if key not in keepers:
del md[key]
# Create an application instance.
app = App(0)
# Mimic the contents of the standard Python shell's sys.path.
import sys
if sys.path[0]:
sys.path[0] = ''
# Add the application object to the sys module's namespace.
# This allows a shell user to do:
# >>> import sys
# >>> sys.app.whatever
sys.app = app
del sys
# Cleanup the main namespace some more.
if md.has_key('App') and md['App'] is App:
del md['App']
if md.has_key('__main__') and md['__main__'] is __main__:
del md['__main__']
# Start the wxPython event loop.

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# this is to integrate Twisted and wxPython
from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor
import wx
reactor.interleave(wx.CallAfter)
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

app.MainLoop()

if __name__ == '__main__':
main()

------------------------------

Message: 2
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Query
To: twisted-python at twistedmatrix.com
Message-ID: <20050814141139.57997.qmail at web34305.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi All

I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.

Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/0a106808/attachment-0001.htm

------------------------------

Message: 3
Date: Sun, 14 Aug 2005 18:11:18 +0100
From: markw 
Subject: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: 
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Hi,

I am contemplating running XML-RPC over SSL (basically for site to 
site process communication over the internet). Has anyone got any 
example code that would point me in the right direction (or just some 
clues :-) )

cheers

mark 



------------------------------

Message: 4
Date: Sun, 14 Aug 2005 13:28:44 -0400
From: Jp Calderone 
Subject: Re: [Twisted-Python] Query
To: Twisted general discussion 
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866 at ohm>
Content-Type: text/plain; format=flowed

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector 
wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB. Any IRC client should be able to connect to it. The PB interface allows for easy programmatic access. It does support groups. It uses unicode internally, and transcodes messages received/delivered via IRC. The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms. For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 12
**********************************************

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050814/62d0e620/attachment.html>

From nkeric at gmail.com  Sun Aug 14 20:11:40 2005
From: nkeric at gmail.com (Eric Hsu)
Date: Mon, 15 Aug 2005 10:11:40 +0800
Subject: [Twisted-Python] SSL Example?
In-Reply-To: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
References: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
Message-ID: <43c0d2b505081419113dacfc12@mail.gmail.com>

here're some code examples from the official website, may them helpful
for you :)

http://twistedmatrix.com/projects/core/documentation/examples/

2005/8/15, markw <mark at junklight.com>:
> Hi,
> 
> I am contemplating running XML-RPC over SSL (basically for site to
> site process communication over the internet). Has anyone got any
> example code that would point me in the right direction (or just some
> clues :-) )
> 
> cheers
> 
> mark



From mary-twisted at puzzling.org  Sun Aug 14 21:22:57 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 15 Aug 2005 13:22:57 +1000
Subject: [Twisted-Python] Australian Twisted folk at the OSDC: Melbourne Dec
	5th - 7th 2005
Message-ID: <20050815032257.GF27318@home.puzzling.org>

We haven't even gotten to the second sprint yet (this weekend, Sydney,
see you there), and there's talk of a third one.

The Australian Open Source Developers Conference is being held at Monash
University, Caulfield, Melbourne from December 5th to 7th this year.
Seems like all of the Tassie Twisted folk are submitting papers and a
few others are thinking of submitting or attending.

Hence, while it probably won't be even as formally informal (or
informally formal?) as the Hobart and Sydney sprints, it seems likely
that critical mass will be achieved in Melbourne and Twisted coding
might take place...

....

Conference details:

Monday, December the 5th to Wednesday December the 7th, 2005

Call for papers is currently open:
http://osdc2005.cgpublisher.com/cfp.html but deadline is *this Friday*
19th August.

Details at http://www.osdc2005.com.au/

....

And after that... anyone going to linux.conf.au 2006 in Dunedin New
Zealand...?

-Mary



From mary-twisted at puzzling.org  Sun Aug 14 21:26:26 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 15 Aug 2005 13:26:26 +1000
Subject: [Twisted-Python] Australian Twisted folk at the OSDC: Melbourne
	Dec 5th - 7th 2005
In-Reply-To: <20050815032257.GF27318@home.puzzling.org>
References: <20050815032257.GF27318@home.puzzling.org>
Message-ID: <20050815032626.GG27318@home.puzzling.org>

On Mon, Aug 15, 2005, Mary Gardiner wrote:
> Details at http://www.osdc2005.com.au/

Sorry, just http://www.osdc.com.au/

-Mary



From mark at junklight.com  Mon Aug 15 00:21:02 2005
From: mark at junklight.com (markw)
Date: Mon, 15 Aug 2005 07:21:02 +0100
Subject: [Twisted-Python] SSL Example?
In-Reply-To: <43c0d2b505081419113dacfc12@mail.gmail.com>
References: <ABD9E704-C92F-4C6A-901E-C00C70F8B61A@junklight.com>
	<43c0d2b505081419113dacfc12@mail.gmail.com>
Message-ID: <1EAEDD24-055A-4942-8C23-804B7600BFDA@junklight.com>

Ok - there is an ssl example. Missed it the first time round. Thank  
you for your help

On 15 Aug 2005, at 03:11, Eric Hsu wrote:

> here're some code examples from the official website, may them helpful
> for you :)
>
> http://twistedmatrix.com/projects/core/documentation/examples/
>
> 2005/8/15, markw <mark at junklight.com>:
>
>> Hi,
>>
>> I am contemplating running XML-RPC over SSL (basically for site to
>> site process communication over the internet). Has anyone got any
>> example code that would point me in the right direction (or just some
>> clues :-) )
>>
>> cheers
>>
>> mark
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From pbector at yahoo.com  Mon Aug 15 00:34:47 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 23:34:47 -0700 (PDT)
Subject: [Twisted-Python] Query on Twisted word
Message-ID: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>

HI
 
I want to knpw whether twisted word chat server is available as software download?
What platforms does it support?
can i download it and ue it with a compatible client to chat?
does it support group chat and multilanguages?
 
thanks a lot
 
 

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050814/d7d9db5d/attachment.html>

From pbector at yahoo.com  Mon Aug 15 00:35:03 2005
From: pbector at yahoo.com (pooja bector)
Date: Sun, 14 Aug 2005 23:35:03 -0700 (PDT)
Subject: [Twisted-Python] Query on Twisted word
Message-ID: <20050815063503.64557.qmail@web34315.mail.mud.yahoo.com>

HI
 
I want to know whether twisted word chat server is available as software download?
What platforms does it support?
can i download it and use it with a compatible client to chat?
does it support group chat and multilanguages?
 
thanks a lot
 
 

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050814/e6d0e7fb/attachment.html>

From andrew-twisted at puzzling.org  Mon Aug 15 00:42:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Aug 2005 16:42:09 +1000
Subject: [Twisted-Python] Query on Twisted word
In-Reply-To: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
References: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
Message-ID: <20050815064209.GM11932@trogdor.home.puzzling.org>

On Sun, Aug 14, 2005 at 11:34:47PM -0700, pooja bector wrote:
> HI
>  
> I want to knpw whether twisted word chat server is available as software
> download?
> What platforms does it support?
> can i download it and ue it with a compatible client to chat?
> does it support group chat and multilanguages?

Have you seen http://twistedmatrix.com/projects/words/ ?

-Andrew.




From itamar at itamarst.org  Mon Aug 15 06:16:15 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Aug 2005 08:16:15 -0400
Subject: [Twisted-Python] Query on Twisted word
In-Reply-To: <20050815064209.GM11932@trogdor.home.puzzling.org>
References: <20050815063447.14447.qmail@web34313.mail.mud.yahoo.com>
	<20050815064209.GM11932@trogdor.home.puzzling.org>
Message-ID: <1124108175.8353.23.camel@localhost.localdomain>

On Mon, 2005-08-15 at 16:42 +1000, Andrew Bennetts wrote:

> Have you seen http://twistedmatrix.com/projects/words/ ?

0.1 is old and crufty. The SVN trunk version is much nicer but not
released yet.




From emes at pld-linux.org  Mon Aug 15 10:41:37 2005
From: emes at pld-linux.org (michal salaban)
Date: Mon, 15 Aug 2005 18:41:37 +0200
Subject: [Twisted-Python] problem with combining deferreds together
Message-ID: <20050815164137.GA21164@skunk.one.pl>

hello all,

i've been playing with twisted adbapi for last three days to figure out if
it's a goot framework for application that i'm going to write soon.

i've stuck on one problem (probably i'm not the first, but couldn't google out
the soultion).

i have an object, which data is spread between two tables - the MainTable with
some data and reference to some row in SubTable with additional things.

what i'm trying to do is to create repository class with method .getByID()
that takes ID from MainTable and returns deferred, which in callback evaluates
to fully instatinated and data-populated object.

i've come up to this:

class ObjectRepository:

    def getById(self, id):
        dMain = self.dbpool.runInteraction(
                fetchOneAndMapToDictionary,
                "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
                )
        dMain.addCallback(self._gotMainData)
        return dMain

    def _gotMainData(self, mappedRow):
        dSub = self.dbpool.runInteraction(
                fetchOneAndMapToDictionary,
                "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
                )
        dSub.addCallback(self._gotSubData)
        return [what to return ????]


how can i return the result that consist of data from both queries?
chaining callbacks is impossible. i cannot have dSub before dMain.callback()
is called, and also cannot do dMain.chainDeferred(dSub) in _gotMainData()
because dMain has already been returned to calling code and contains callbacks
attached there.

i suppose the solution is simple, but im 100% newbie to twisted and
event-driven programming.

thanks in advance :)

-- 
michal salaban -=- emes (at) pld-linux.org -=- jabber: emes at jabber.org



From fritcher at corp.earthlink.net  Mon Aug 15 11:13:44 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Mon, 15 Aug 2005 13:13:44 -0400
Subject: [Twisted-Python] problem with combining deferreds together
In-Reply-To: <20050815164137.GA21164@skunk.one.pl>
References: <20050815164137.GA21164@skunk.one.pl>
Message-ID: <4300CD48.5070302@corp.earthlink.net>

michal salaban wrote:
> class ObjectRepository:
> 
>     def getById(self, id):
>         dMain = self.dbpool.runInteraction(
>                 fetchOneAndMapToDictionary,
>                 "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
>                 )
>         dMain.addCallback(self._gotMainData)
>         return dMain
> 
>     def _gotMainData(self, mappedRow):
>         dSub = self.dbpool.runInteraction(
>                 fetchOneAndMapToDictionary,
>                 "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
>                 )
>         dSub.addCallback(self._gotSubData)
>         return [what to return ????]
> 
> 
> how can i return the result that consist of data from both queries?
> chaining callbacks is impossible. i cannot have dSub before dMain.callback()
> is called, and also cannot do dMain.chainDeferred(dSub) in _gotMainData()
> because dMain has already been returned to calling code and contains callbacks
> attached there.

Give this a try and see how it works for you...

def _gotMainData(self, mappedRow):
    dSub = self.dbpool.runInteraction(
        fetchOneAndMapToDictionary,
        "SELECT * FROM SubTable WHERE id = '%d'" % (mappedRow['SubID'],)
        )
        dSub.addCallback(self._gotSubData, mappedRow)
        return dSub

def _gotSubData(self, subMappedRow, mainMappedRow):
    # Do work here.


When adding callbacks to a deferred, you can add arguments that will get
passed to the argument, independant of the result from previous
callbacks. Like above, you can take the mappedRow dictionary from the
first callback and pass it as an argument to the callback for the
subrequest. Also, for the new deferred to be useful, you return it from
the callback. When Twisted sees that, it'll pause the callback chain
until that deferred fires and processes all of its callbacks. It'll take
the result that is produced from that deferred and use it as the result
for the next callback in the main deferred.

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20050815/0d71fccb/attachment.sig>

From Henning.Ramm at mediapro-gmbh.de  Mon Aug 15 11:21:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 15 Aug 2005 19:21:38 +0200
Subject: [Twisted-Python] problem with combining deferreds together
Message-ID: <F92274058556DE42B94B148EEFB91839021CB522@exchange-03.suedkurier.de>

>i've stuck on one problem (probably i'm not the first, but 
>couldn't google out
>the soultion).
>
>i have an object, which data is spread between two tables - 
>the MainTable with
>some data and reference to some row in SubTable with additional things.

Why don't you fetch both in one query (using LEFT JOIN or just WHERE clauses),
that would be faster anyway.

>class ObjectRepository:
>
>    def getById(self, id):
>        dMain = self.dbpool.runInteraction(
>                fetchOneAndMapToDictionary,
>                "SELECT * FROM MainTable WHERE id = '%d'" % (id,)
>                )
>        dMain.addCallback(self._gotMainData)
>        return dMain
>
>    def _gotMainData(self, mappedRow):
>        dSub = self.dbpool.runInteraction(
>                fetchOneAndMapToDictionary,
>                "SELECT * FROM SubTable WHERE id = '%d'" % 
>(mappedRow['SubID'],)
>                )
>        dSub.addCallback(self._gotSubData)
>        return [what to return ????]
>
>
>how can i return the result that consist of data from both queries?

dSub.addCallback(self._gotSubData, mappedRow)
return dSub # what else?

Just make sure you handle mappedRow in _gotSubData.

Or did I miss your point?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From emes at pld-linux.org  Mon Aug 15 16:30:56 2005
From: emes at pld-linux.org (michal salaban)
Date: Tue, 16 Aug 2005 00:30:56 +0200
Subject: [Twisted-Python] problem with combining deferreds together
In-Reply-To: <4300CD48.5070302@corp.earthlink.net>
References: <20050815164137.GA21164@skunk.one.pl>
	<4300CD48.5070302@corp.earthlink.net>
Message-ID: <20050815223056.GA22649@skunk.one.pl>

on Mon, Aug 15, 2005 at 01:13:44PM -0400, Jason Fritcher wrote:

> Give this a try and see how it works for you...

works perfectly. thanks! :)

> subrequest. Also, for the new deferred to be useful, you return it from
> the callback. When Twisted sees that, it'll pause the callback chain
> until that deferred fires and processes all of its callbacks. It'll take
> the result that is produced from that deferred and use it as the result
> for the next callback in the main deferred.

and that's the key. the docs I read didn't mention that (or I didn't notice :)

-- 
michal salaban -=- emes (at) pld-linux.org -=- jabber: emes at jabber.org



From pbector at yahoo.com  Wed Aug 17 06:21:25 2005
From: pbector at yahoo.com (pooja bector)
Date: Wed, 17 Aug 2005 05:21:25 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 13
In-Reply-To: <E1E4YLZ-0008AU-02@pyramid.twistedmatrix.com>
Message-ID: <20050817122125.57402.qmail@web34314.mail.mud.yahoo.com>

Hi
 
Thanks for the reply.I need further clarification on Twisted word chat server.Your previous reply to my query mentions that "Twisted word provides  a server that is accessible via IRC and PB.And it does support groups and multilanguages."
I downloaded the implementation from http://twistedmatrix.com/projects/words/
As such there is no "Twisted Word Chat Server " implementation available here.
Could you please suggest that from where can I get the server implementation for it ?
 
Thanks for your time.
 
Regards
Pooja
 


twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: Twisted-Python Digest, Vol 17, Issue 12 (pooja bector)
2. Re: SSL Example? (Eric Hsu)
3. Australian Twisted folk at the OSDC: Melbourne Dec 5th - 7th
2005 (Mary Gardiner)
4. Re: Australian Twisted folk at the OSDC: Melbourne Dec 5th -
7th 2005 (Mary Gardiner)
5. Re: SSL Example? (markw)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 11:55:28 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 17, Issue 12
To: twisted-python at twistedmatrix.com, exarkun at divmod.com
Message-ID: <20050814185528.49160.qmail at web34312.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi

Thanks for the quick reply.

PLease let me know if the twisted word chat server is available as a software download??
>From where can i download the server and client software?

Thanks
twisted-python-request at twistedmatrix.com wrote:
Send Twisted-Python mailing list submissions to
twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

1. Re: twisted-compliant interactive interpreter (Antony Kummel)
2. Query (pooja bector)
3. SSL Example? (markw)
4. Re: Query (Jp Calderone)


----------------------------------------------------------------------

Message: 1
Date: Sun, 14 Aug 2005 05:15:27 -0700 (PDT)
From: Antony Kummel 
Subject: Re: [Twisted-Python] twisted-compliant interactive
interpreter
To: Twisted general discussion 
Message-ID: <20050814121527.92362.qmail at web33908.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi,

Here is a version of PyCrust I hooked up that uses
Manhole. I'm trying to figure out if there's a way to
easily mix together some free tools to make Twisted
development on Windows easier. Comments wanted.

Antony Kummel

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
"""
PyCrust is a python shell and namespace browser application.
tCrust is a version of PyCrust that works with Twisted.
"""

# The next two lines, and the other code below that makes use of
# ``__main__`` and ``original``, serve the purpose of cleaning up the
# main namespace to look as much as possible like the regular Python
# shell environment.
import __main__
original = __main__.__dict__.keys()

__original_author__ = "Patrick K. O'Brien 
"

import wx

class App(wx.App):
"""PyCrust standalone application."""

def OnInit(self):
import wx
from wx import py

wx.InitAllImageHandlers()

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# make some adaptations
self.frame = py.crust.CrustFrame(title="Twisted PyCrust!",
InterpClass=self.getInterpClass())
def myOnClose(self, event):
from twisted.internet import reactor
reactor.addSystemEventTrigger('after', 'shutdown', self._OnClose, (None,))
reactor.stop()
self.frame._OnClose = self.frame.OnClose
self.frame.OnClose = myOnClose
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

self.frame.SetSize((800, 600))
self.frame.Show()
self.SetTopWindow(self.frame)
return True

def getInterpClass(self):
import sys
from wx import py
from twisted.conch.manhole import ManholeInterpreter

class ManholeCrustInterpreter(py.interpreter.Interpreter):
"""A version of the PyCrust interpreter that uses the manhole display hook"""
def __init__(self, locals=None, rawin=None,
stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr):
py.interpreter.Interpreter.__init__(self, locals, rawin,
stdin, stdout, stderr)
self.manhole = ManholeInterpreter(self, locals)

def addOutput(self, data, async):
self.write(data)

def runcode(self, *a, **kw):
orighook, sys.displayhook = sys.displayhook, self.manhole.displayhook
try:
py.interpreter.Interpreter.runcode(self, *a, **kw)
finally:
sys.displayhook = orighook

return ManholeCrustInterpreter 

'''
The main() function needs to handle being imported, such as with the
pycrust script that wxPython installs:

#!/usr/bin/env python

from wx.py.PyCrust import main
main()
'''

def main():
"""The main function for the PyCrust program."""
# Cleanup the main namespace, leaving the App class.
import __main__
md = __main__.__dict__
keepers = original
keepers.append('App')
for key in md.keys():
if key not in keepers:
del md[key]
# Create an application instance.
app = App(0)
# Mimic the contents of the standard Python shell's sys.path.
import sys
if sys.path[0]:
sys.path[0] = ''
# Add the application object to the sys module's namespace.
# This allows a shell user to do:
# >>> import sys
# >>> sys.app.whatever
sys.app = app
del sys
# Cleanup the main namespace some more.
if md.has_key('App') and md['App'] is App:
del md['App']
if md.has_key('__main__') and md['__main__'] is __main__:
del md['__main__']
# Start the wxPython event loop.

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# this is to integrate Twisted and wxPython
from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor
import wx
reactor.interleave(wx.CallAfter)
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

app.MainLoop()

if __name__ == '__main__':
main()

------------------------------

Message: 2
Date: Sun, 14 Aug 2005 07:11:39 -0700 (PDT)
From: pooja bector 

Subject: [Twisted-Python] Query
To: twisted-python at twistedmatrix.com
Message-ID: <20050814141139.57997.qmail at web34305.mail.mud.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi All

I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
I have queries regarding , Twisted Word chat server , written in python.
I just know that it is available under free BSD license.
I want to know that is it available as a free download.Can I download the server and a compatible client ? 
are the APIs of the server available?
How many simlutaneuos users does it support.
Does it supports group chat and multilanguage chatting.

Thanks 

__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/0a106808/attachment-0001.htm

------------------------------

Message: 3
Date: Sun, 14 Aug 2005 18:11:18 +0100
From: markw 
Subject: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: 
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Hi,

I am contemplating running XML-RPC over SSL (basically for site to 
site process communication over the internet). Has anyone got any 
example code that would point me in the right direction (or just some 
clues :-) )

cheers

mark 



------------------------------

Message: 4
Date: Sun, 14 Aug 2005 13:28:44 -0400
From: Jp Calderone 
Subject: Re: [Twisted-Python] Query
To: Twisted general discussion 
Message-ID: <20050814172844.3914.304813179.divmod.quotient.4866 at ohm>
Content-Type: text/plain; format=flowed

On Sun, 14 Aug 2005 07:11:39 -0700 (PDT), pooja bector 
wrote:
>Hi All
>
>I am new to Twisted networks.I read its documentation that it is a network over which we can build network applications like chat server.
>I have queries regarding , Twisted Word chat server , written in python.
>I just know that it is available under free BSD license.
>I want to know that is it available as a free download.Can I download the server and a compatible client ?
>are the APIs of the server available?
>How many simlutaneuos users does it support.
>Does it supports group chat and multilanguage chatting.

Twisted Words provides a server accessible via IRC and PB. Any IRC client should be able to connect to it. The PB interface allows for easy programmatic access. It does support groups. It uses unicode internally, and transcodes messages received/delivered via IRC. The PB interface is just natively unicode.

It is written in a way intended to make it easy to plug in new access mechanisms. For example, one such plugin that has already been written is a Nevow LivePage-based web interface.

Jp



------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 12
**********************************************


---------------------------------
Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050814/62d0e620/attachment-0001.htm

------------------------------

Message: 2
Date: Mon, 15 Aug 2005 10:11:40 +0800
From: Eric Hsu 
Subject: Re: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: <43c0d2b505081419113dacfc12 at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

here're some code examples from the official website, may them helpful
for you :)

http://twistedmatrix.com/projects/core/documentation/examples/

2005/8/15, markw :
> Hi,
> 
> I am contemplating running XML-RPC over SSL (basically for site to
> site process communication over the internet). Has anyone got any
> example code that would point me in the right direction (or just some
> clues :-) )
> 
> cheers
> 
> mark



------------------------------

Message: 3
Date: Mon, 15 Aug 2005 13:22:57 +1000
From: Mary Gardiner 
Subject: [Twisted-Python] Australian Twisted folk at the OSDC:
Melbourne Dec 5th - 7th 2005
To: Twisted general discussion 
Message-ID: <20050815032257.GF27318 at home.puzzling.org>
Content-Type: text/plain; charset=us-ascii

We haven't even gotten to the second sprint yet (this weekend, Sydney,
see you there), and there's talk of a third one.

The Australian Open Source Developers Conference is being held at Monash
University, Caulfield, Melbourne from December 5th to 7th this year.
Seems like all of the Tassie Twisted folk are submitting papers and a
few others are thinking of submitting or attending.

Hence, while it probably won't be even as formally informal (or
informally formal?) as the Hobart and Sydney sprints, it seems likely
that critical mass will be achieved in Melbourne and Twisted coding
might take place...

....

Conference details:

Monday, December the 5th to Wednesday December the 7th, 2005

Call for papers is currently open:
http://osdc2005.cgpublisher.com/cfp.html but deadline is *this Friday*
19th August.

Details at http://www.osdc2005.com.au/

....

And after that... anyone going to linux.conf.au 2006 in Dunedin New
Zealand...?

-Mary



------------------------------

Message: 4
Date: Mon, 15 Aug 2005 13:26:26 +1000
From: Mary Gardiner 
Subject: Re: [Twisted-Python] Australian Twisted folk at the OSDC:
Melbourne Dec 5th - 7th 2005
To: twisted-python at twistedmatrix.com
Message-ID: <20050815032626.GG27318 at home.puzzling.org>
Content-Type: text/plain; charset=us-ascii

On Mon, Aug 15, 2005, Mary Gardiner wrote:
> Details at http://www.osdc2005.com.au/

Sorry, just http://www.osdc.com.au/

-Mary



------------------------------

Message: 5
Date: Mon, 15 Aug 2005 07:21:02 +0100
From: markw 
Subject: Re: [Twisted-Python] SSL Example?
To: Twisted general discussion 
Message-ID: <1EAEDD24-055A-4942-8C23-804B7600BFDA at junklight.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Ok - there is an ssl example. Missed it the first time round. Thank 
you for your help

On 15 Aug 2005, at 03:11, Eric Hsu wrote:

> here're some code examples from the official website, may them helpful
> for you :)
>
> http://twistedmatrix.com/projects/core/documentation/examples/
>
> 2005/8/15, markw :
>
>> Hi,
>>
>> I am contemplating running XML-RPC over SSL (basically for site to
>> site process communication over the internet). Has anyone got any
>> example code that would point me in the right direction (or just some
>> clues :-) )
>>
>> cheers
>>
>> mark
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 17, Issue 13
**********************************************

		
---------------------------------
 Start your day with Yahoo! - make it your home page 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050817/757674df/attachment.html>

From tazzo at email.it  Wed Aug 17 09:02:57 2005
From: tazzo at email.it (tazzo)
Date: Wed, 17 Aug 2005 17:02:57 +0200
Subject: [Twisted-Python] PEP 342 now in python CVS
Message-ID: <430351A1.5050109@email.it>

Hi all,
referring to the news about the implementation of PEP 342 in python CVS:

http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html

I know that is a great news for asynchronous programming in python and for
other aspects but I wonder what will be the future of  Twisted, what 
will change
(if something will change) in Twisted when PEP 342 will come?
I think that with PEP 342 we could write a more readable code but does 
it mean
rewrite all twisted?
What is the opinion of  Twisted developers??

thanks,

Tazzo



-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o
protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di
e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente
proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione,
copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed
e' risultato NON infetto.





From solipsis at pitrou.net  Wed Aug 17 09:32:06 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 17 Aug 2005 17:32:06 +0200
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>


Hi,

For what it's worth, I started writing a pure Python cooperative threads
package, some weeks ago. It's called "softlets" and uses, of course,
generators. There is a simple scheduler centered around the notion of
"wait objects" - you yield a wait object (e.g. a Queue) and it comes
back when the underlying condition is satisfied (e.g. the Queue has
something to give to you).

I'm writing it for fun but it does have some interesting
characteristics:
- no C extension required, no compiling, no annoying dependency (even
not Twisted actually)
- scalability: you can create thousands of threads with nearly no
overhead, and run them all "at the same time"
- a more comfortable way of writing certain operation sequences than
with cascades of deferreds
- robustness: in contrast to preemptive multithreading, cooperative MT
means you define the synchronisation points explicitly, so you don't
have any resource sharing problems in case you forget some
synchonisation points (latency will be worse, but your program will stay
correct)

Although there is no web page currently, you can get the source here (*)
and play with the examples in the examples directory (it's very alpha
and lacks most fonctionality but it does work, and it won't hose your
machine). Nothing is needed except Python 2.4; no setup required, just
checkout the sources.
(*) http://developer.berlios.de/svn/?group_id=4330

Future work would be to add actual useful functionality (timers,
integration with Twisted deferreds, etc.).

Feel free to subscribe to the mailing-list and talk a little ;)
http://developer.berlios.de/mail/?group_id=4330
I'm open to feedback, and to people willing to contribute.

Regards

Antoine.


Le mercredi 17 août 2005 à 17:02 +0200, tazzo a écrit :
> Hi all,
> referring to the news about the implementation of PEP 342 in python CVS:
> 
> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
> 
> I know that is a great news for asynchronous programming in python and for
> other aspects but I wonder what will be the future of  Twisted, what 
> will change
> (if something will change) in Twisted when PEP 342 will come?
> I think that with PEP 342 we could write a more readable code but does 
> it mean
> rewrite all twisted?
> What is the opinion of  Twisted developers??
> 
> thanks,
> 
> Tazzo





From washort at twistedmatrix.com  Wed Aug 17 10:02:04 2005
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 17 Aug 2005 11:02:04 -0500 (CDT)
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <20050817.110204.327287531.washort@divmod.org>

>>>>> "tazzo" == tazzo  <tazzo at email.it> writes:

    > I know that is a great news for asynchronous programming in
    > python


I have to wonder if it really is. I think that even if this goes into
python, I will continue to write my code in the same way, using
separate callback functions. I'd do this mainly because I find it less
confusing -- that way code that executes in different reactor
iterations will be in different blocks. Getting confused about what
the time-relationship between various pieces of code is one of the
problems that multithreading increases -- coroutines do that as well,
I think, though obviously not to the same degree. 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050817/099d48ec/attachment.sig>

From radeex at gmail.com  Wed Aug 17 17:20:15 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 18 Aug 2005 09:20:15 +1000
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <430351A1.5050109@email.it>
References: <430351A1.5050109@email.it>
Message-ID: <60ed19d405081716204b7f2f50@mail.gmail.com>

On 8/18/05, tazzo <tazzo at email.it> wrote:
> Hi all,
> referring to the news about the implementation of PEP 342 in python CVS:
> 
> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
> 
> I know that is a great news for asynchronous programming in python and for
> other aspects but I wonder what will be the future of  Twisted, what
> will change
> (if something will change) in Twisted when PEP 342 will come?
> I think that with PEP 342 we could write a more readable code but does
> it mean
> rewrite all twisted?
> What is the opinion of  Twisted developers??

Have you seen Deferred Generators, in twisted.internet.defer
(deferredGenerator and waitForDeferred are relevant)? I'm planning on
either adding support for PEP342-style generators to them, or writing
an alternate implementation specifically for PEP342. I'm happy about
PEP342, because it means I'll no longer have to install a buggy C
extension module (greenlet) to get decent cooperative threading.

This integration is very lightweight and doesn't require any mangling
of the guts of Twisted.

I'll just note that I am mostly alone amongst the developers of
Twisted who think that this kind of cooperative threading + Deferred
integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
have all said it's a bad idea to have such magical code. On the other
hand, it's definitely not as bad as pre-emptive threading, where you
basically can't know where context switches will happen.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From bob at redivi.com  Wed Aug 17 18:24:45 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 17 Aug 2005 14:24:45 -1000
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <5B284242-EE77-453F-A892-BABFD359CA4A@redivi.com>


On Aug 17, 2005, at 1:20 PM, Christopher Armstrong wrote:

> On 8/18/05, tazzo <tazzo at email.it> wrote:
>
>> Hi all,
>> referring to the news about the implementation of PEP 342 in  
>> python CVS:
>>
>> http://dirtsimple.org/2005/08/pep-342-implementation-now-in-cvs.html
>>
>> I know that is a great news for asynchronous programming in python  
>> and for
>> other aspects but I wonder what will be the future of  Twisted, what
>> will change
>> (if something will change) in Twisted when PEP 342 will come?
>> I think that with PEP 342 we could write a more readable code but  
>> does
>> it mean
>> rewrite all twisted?
>> What is the opinion of  Twisted developers??
>>
>
> Have you seen Deferred Generators, in twisted.internet.defer
> (deferredGenerator and waitForDeferred are relevant)? I'm planning on
> either adding support for PEP342-style generators to them, or writing
> an alternate implementation specifically for PEP342. I'm happy about
> PEP342, because it means I'll no longer have to install a buggy C
> extension module (greenlet) to get decent cooperative threading.
>
> This integration is very lightweight and doesn't require any mangling
> of the guts of Twisted.
>
> I'll just note that I am mostly alone amongst the developers of
> Twisted who think that this kind of cooperative threading + Deferred
> integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
> have all said it's a bad idea to have such magical code. On the other
> hand, it's definitely not as bad as pre-emptive threading, where you
> basically can't know where context switches will happen.

I think it's a good idea, so long as you know when to use it.  It's  
particularly useful when doing things that are inherently serial when  
you don't need the power of arbitrary call graphs hooked up to your  
asynchronous goodness.

-bob




From glyph at divmod.com  Wed Aug 17 18:30:23 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 17 Aug 2005 20:30:23 -0400
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <20050818003023.3914.874381586.divmod.quotient.5552@ohm>



On Thu, 18 Aug 2005 09:20:15 +1000, Christopher Armstrong <radeex at gmail.com> wrote:

>I'll just note that I am mostly alone amongst the developers of
>Twisted who think that this kind of cooperative threading + Deferred
>integration is a good idea. Glyph, Jp, and Allen Short (as he posted)
>have all said it's a bad idea to have such magical code. On the other
>hand, it's definitely not as bad as pre-emptive threading, where you
>basically can't know where context switches will happen.

Perhaps my opinion has glacially shifted over time, (I think I've always thought this way) but it's a bit more nuanced than that.  I think that there is some merit to synchronous-looking code in some situations.  I've written some networking code recently that had indentation 10-deep; this PEP might have really helped with that.

I think it's a good thing in some situations and will probably reduce the length of some of the nastiest parts of my Q2Q implementation (AKA "Divmod Vertex") by at least half.  However, it is limiting - it still doesn't expose the full power of a cooperative threading system.  At the same time, it provides some of the same implicit-state facilities that create problems with those same cooperative thread systems.  Depending on how it's regarded by Twisted developers, it could give us the bbest of both worlds or the worst of them.

How it's regarded is important because that will affect how it's used.  I believe that in particularly hairy code, it will probably help, and reduce bugs (code that already has hugely nested functions, that needs to be audited by 3 or 4 people before it works at all).  However, in average code it will likely be a source of them, since it tends to reduce line count at the cost of explicit transfer of control.  Since people like code that looks blocking a *whole lot*, and are willing to forego the benefits of event-driven programming most of the time (and by "most of the time" I mean the 90% of the world that doesn't even use Twisted, or any other event driven system), I am a bit concerned that this PEP will catch on like wildfire and Twisted programs will get a reputation for being really buggy and never handling edge cases or out-of-order input correctly.

So please, use this and enahnce your Twisted programs with it, but please tread lightly.  It's a powerful tool but it is still (perhaps even therefore) dangerous.



From tv at twistedmatrix.com  Wed Aug 17 23:58:41 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 18 Aug 2005 08:58:41 +0300
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
Message-ID: <43042391.7080808@twistedmatrix.com>

Antoine Pitrou wrote:
> For what it's worth, I started writing a pure Python cooperative threads
> package, some weeks ago. It's called "softlets" and uses, of course,
> generators. There is a simple scheduler centered around the notion of
> "wait objects" - you yield a wait object (e.g. a Queue) and it comes
> back when the underlying condition is satisfied (e.g. the Queue has
> something to give to you).

You should look at Kamelia.



From radeex at gmail.com  Thu Aug 18 00:05:02 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 18 Aug 2005 16:05:02 +1000
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <43042391.7080808@twistedmatrix.com>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
	<43042391.7080808@twistedmatrix.com>
Message-ID: <60ed19d4050817230511cd1ae7@mail.gmail.com>

That's Kam*a*elia, unless you really are talking about a porn star. :)
(googling "kamelia python" was pretty interesting).

On 8/18/05, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> Antoine Pitrou wrote:
> > For what it's worth, I started writing a pure Python cooperative threads
> > package, some weeks ago. It's called "softlets" and uses, of course,
> > generators. There is a simple scheduler centered around the notion of
> > "wait objects" - you yield a wait object (e.g. a Queue) and it comes
> > back when the underlying condition is satisfied (e.g. the Queue has
> > something to give to you).
> 
> You should look at Kamelia.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From tazzo at email.it  Thu Aug 18 01:29:13 2005
From: tazzo at email.it (tazzo)
Date: Thu, 18 Aug 2005 09:29:13 +0200
Subject: [Twisted-Python] PEP 342 now in python CVS
In-Reply-To: <60ed19d405081716204b7f2f50@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<60ed19d405081716204b7f2f50@mail.gmail.com>
Message-ID: <430438C9.9070108@email.it>

Christopher Armstrong wrote:

>Have you seen Deferred Generators, in twisted.internet.defer
>(deferredGenerator and waitForDeferred are relevant)? I'm planning on
>either adding support for PEP342-style generators to them, or writing
>an alternate implementation specifically for PEP342.
>
Yes I saw it and I use it very often, this is why I made the question. 
When I write code
for a intensive and massive cooperation task, writing code in a 
synchronous-looking way
help to understand what happen.

> I'm happy about
>PEP342, because it means I'll no longer have to install a buggy C
>extension module (greenlet) to get decent cooperative threading.
>
>This integration is very lightweight and doesn't require any mangling
>of the guts of Twisted.
>
>  
>
:-)


-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o
protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di
e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente
proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione,
copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed
e' risultato NON infetto.





From solipsis at pitrou.net  Thu Aug 18 03:05:22 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 18 Aug 2005 11:05:22 +0200
Subject: [Twisted-Python] PEP 342 & cooperative threads
In-Reply-To: <60ed19d4050817230511cd1ae7@mail.gmail.com>
References: <430351A1.5050109@email.it>
	<1124292726.16527.22.camel@p-dvsi-395-20.rd.francetelecom.fr>
	<43042391.7080808@twistedmatrix.com>
	<60ed19d4050817230511cd1ae7@mail.gmail.com>
Message-ID: <1124355922.30550.4.camel@p-dvsi-395-20.rd.francetelecom.fr>


Le jeudi 18 août 2005 à 16:05 +1000, Christopher Armstrong a écrit :
> That's Kam*a*elia, unless you really are talking about a porn star. :)
> (googling "kamelia python" was pretty interesting).

Thanks!
I didn't know Kamaelia. According to the simple example given here
(http://kamaelia.sourceforge.net/Docs/Axon.html), the programming
paradigm is not quite the same: with Kamaelia you explicitly link
producers and consumers together, whereas in my approach you just wait
on the shared object that represents the communication channel (this
object can be used by more than one reader and one writer, by the way).
This means a cooperative thread is more self-contained and doesn't need
external logic to be linked to other threads.

If you want a point of comparison, my approach is similar to that of
gtasklets (http://www.gnome.org/~gjc/gtasklet/gtasklets.html), except
that I don't use GTK at all - everything is done in plain Python.

regards

Antoine.





From garry at sage.att.com  Thu Aug 18 13:29:13 2005
From: garry at sage.att.com (Garry Hodgson)
Date: Thu, 18 Aug 2005 15:29:13 -0400 (EDT)
Subject: [Twisted-Python] passing command line args to twistd daemons
Message-ID: <2005081815281124393299@k2.sage.att.com>


i've got an application (invoked via: twistd -noy fpc.py) that i'd
like to use for multiple purposes by passing command line arguments.
when i do so, twistd objects that they are invalid arguments.  i'd
hoped for some magic arg that partitions the args into twistd
arguments and app arguments, something like:

    twist -noy fpc.py -- -x -y -z

but no such luck.

so, is there a way to accomplish this?  if not, what is the
preferred mechanism for customizing an application's
behavior at startup time?

thanks


----
Garry Hodgson, Technical Consultant, AT&T Labs

Your love, your anger, your kindness, your hate.
All of it creates the future for you and your children.
What kind of future are you creating today?



From itamar at itamarst.org  Thu Aug 18 13:42:09 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Aug 2005 15:42:09 -0400
Subject: [Twisted-Python] passing command line args to twistd daemons
In-Reply-To: <2005081815281124393299@k2.sage.att.com>
References: <2005081815281124393299@k2.sage.att.com>
Message-ID: <1124394130.8915.29.camel@localhost.localdomain>

On Thu, 2005-08-18 at 15:29 -0400, Garry Hodgson wrote:

> so, is there a way to accomplish this?  if not, what is the
> preferred mechanism for customizing an application's
> behavior at startup time?

Not at the moment. Two alternatives (not contradictory) we've been
considering:

1. Turn twistd into a library, so you can write your own command-line
tools reusing its functionality. Patches accepted, this should be a
pretty easy refactor.

2. Adding coil support to twistd and twisted in general
(http://itamarst.org/software/coil-0.1.1.tar.gz); in addition to the
general configuration power this gives you, coil files can also be
overridden by command-line tools in a generic way.


Short term, you could have the .tac point at a configuration file which
you could edit separately.





From sifu-twisted at 0xx0.net  Thu Aug 18 23:56:58 2005
From: sifu-twisted at 0xx0.net (Siegmund Fuehringer)
Date: Fri, 19 Aug 2005 07:56:58 +0200
Subject: [Twisted-Python] passing command line args to twistd daemons
In-Reply-To: <2005081815281124393299@k2.sage.att.com>
References: <2005081815281124393299@k2.sage.att.com>
Message-ID: <20050819055658.GA2996@x41.0xx0.net>

On Thu, Aug 18, 2005 at 03:29:13PM -0400, Garry Hodgson wrote:
> 
> i've got an application (invoked via: twistd -noy fpc.py) that i'd
> like to use for multiple purposes by passing command line arguments.
> when i do so, twistd objects that they are invalid arguments.  i'd
> hoped for some magic arg that partitions the args into twistd
> arguments and app arguments, something like:
> 
>     twist -noy fpc.py -- -x -y -z
> 
> but no such luck.
> 
> so, is there a way to accomplish this?  if not, what is the
> preferred mechanism for customizing an application's
> behavior at startup time?

i would use environment variables:
env "X=1" twistd -noy fpc.py

--
sifu



From ajchos at wp.pl  Fri Aug 19 07:56:17 2005
From: ajchos at wp.pl (=?iso-8859-2?Q?Micha=B3?= Tyde)
Date: Fri, 19 Aug 2005 15:56:17 +0200
Subject: [Twisted-Python] Telnet & echo
Message-ID: <1124459777.2967.30.camel@localhost.localdomain>

I try to find a solution on google, but nothing I have found there
worked in my code. The situation is:
I have a telnet client. When I am sending a command to a server my
dataReceived loop gets a command I send and response. For example I send
a "pwd" command, and in dataReceived i got:
pwd
/home/user/
I want to have only response.
I try to send before sending command IAC WONT ECHO or send command
"unset echo" but I have still a command and response in dataReceived.
How to shutdown echo?




From dguaraglia at gmx.de  Fri Aug 19 08:13:00 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Fri, 19 Aug 2005 11:13:00 -0300
Subject: [Twisted-Python] Telnet & echo
In-Reply-To: <1124459777.2967.30.camel@localhost.localdomain>
References: <1124459777.2967.30.camel@localhost.localdomain>
Message-ID: <4305E8EC.1040508@gmx.de>

Hi Michal,

Well, it depends. If the server has a command to disable echo, then you 
should ask the server mantainer. In the case of a client side way to 
"disable" echo, there's a simple way: just save the last sent command in 
a string, and then ignore it as input in the dataReceived event. It's 
quite ugly but worked for me.

David

Michał Tyde wrote:

>I try to find a solution on google, but nothing I have found there
>worked in my code. The situation is:
>I have a telnet client. When I am sending a command to a server my
>dataReceived loop gets a command I send and response. For example I send
>a "pwd" command, and in dataReceived i got:
>pwd
>/home/user/
>I want to have only response.
>I try to send before sending command IAC WONT ECHO or send command
>"unset echo" but I have still a command and response in dataReceived.
>How to shutdown echo?
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From foom at fuhm.net  Fri Aug 19 12:17:00 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Aug 2005 14:17:00 -0400
Subject: [Twisted-Python] Telnet & echo
In-Reply-To: <1124459777.2967.30.camel@localhost.localdomain>
References: <1124459777.2967.30.camel@localhost.localdomain>
Message-ID: <ED73E020-CD9A-41DE-A9F3-FDE89C4801BC@fuhm.net>

On Aug 19, 2005, at 9:56 AM, Michał Tyde wrote:
> I try to find a solution on google, but nothing I have found there
> worked in my code. The situation is:
> I have a telnet client. When I am sending a command to a server my
> dataReceived loop gets a command I send and response. For example I  
> send
> a "pwd" command, and in dataReceived i got:
> pwd
> /home/user/
> I want to have only response.
> I try to send before sending command IAC WONT ECHO or send command
> "unset echo" but I have still a command and response in dataReceived.
> How to shutdown echo?

You want to send IAC DONT ECHO, to which the server should respond  
IAC WONT ECHO.

James




From xing at mac.com  Fri Aug 19 15:55:11 2005
From: xing at mac.com (xing at mac.com)
Date: Fri, 19 Aug 2005 14:55:11 -0700
Subject: [Twisted-Python] twisted.mail newbie question
Message-ID: <4306553F.2010303@mac.com>

Hi all,

I have read the twisted.mail.smtp source and ran the sample code 
(included below) in the debugger with break points and yet I still do 
not know where I can inject my code to handle actual message delivery 
where both the email message and all the recipients are available at one 
point in time.

The IMessageDelivery handler doesn't appear to see the message, and the 
IMessage only sees the message and not the recipients. As such, I'm 
thorughly confused. Very new to twisted and async programming model.

Thanks for any pointers.

I have written a basic smtp relayer wrapped around twisted smtp.sendmail 
using my own delivery queue and mx selection management and trying to 
put the last piece in: the smtp server which will hand off all incoming 
messages into my queues.


Xing Li


code
----------------------------------

from twisted.internet import defer
from twisted.protocols import smtp
from twisted.internet import reactor

class ConsoleMessageDelivery:
     __implements__ = (smtp.IMessageDelivery)

     def receivedHeader(self, helo, origin, recipients):
         for i in recipients:
             print i
         return "Received: ConsoleMessageDelivery"

     def validateFrom(self, helo, origin):
         # All addresses are accepted
         return origin

     def validateTo(self, user):
         # Only messages directed to the "console" user are accepted.
         #if user.dest.local == "console":
         return lambda: ConsoleMessage()

         #raise smtp.SMTPBadRcpt(user)

class ConsoleMessage:
     __implements__ = (smtp.IMessage,)

     def __init__(self):
         self.lines = []

     def lineReceived(self, line):
         self.lines.append(line)

     def eomReceived(self):
         print "New message received:"
         print "\n".join(self.lines)
         self.lines = None
         return defer.succeed(None)

     def connectionLost(self):
         # There was an error, throw away the stored lines
         self.lines = None

class ConsoleSMTPFactory(smtp.SMTPFactory):
     def __init__(self, *a, **kw):
         smtp.SMTPFactory.__init__(self, *a, **kw)
         self.delivery = ConsoleMessageDelivery()

     def buildProtocol(self, addr):
         p = smtp.SMTPFactory.buildProtocol(self, addr)
         p.delivery = self.delivery
         return p




if __name__ == '__main__':
     f = ConsoleSMTPFactory()

     reactor.listenTCP(25, f)
     reactor.run()




From exarkun at divmod.com  Sun Aug 21 07:04:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 21 Aug 2005 09:04:29 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14280 - Less fragile error
	checking.
In-Reply-To: <E1E6j6f-00067j-00@wolfwood>
Message-ID: <20050821130429.3914.1845873557.divmod.quotient.6493@ohm>

On Sun, 21 Aug 2005 00:14:57 -0600, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Sun Aug 21 00:14:54 2005
>New Revision: 14280
>
>Modified:
>   trunk/twisted/protocols/ftp.py
>Log:
>Less fragile error checking.
>
>Modified: trunk/twisted/protocols/ftp.py
>==============================================================================
>--- trunk/twisted/protocols/ftp.py	(original)
>+++ trunk/twisted/protocols/ftp.py	Sun Aug 21 00:14:54 2005
>@@ -598,7 +598,8 @@
>             if err.check(FTPCmdError):
>                 msg = RESPONSE[err.value.errorCode] % (err.value.errorMessage,)
>                 self.sendLine(msg)
>-            elif err.check(TypeError):
>+            elif (err.check(TypeError) and
>+                  err.value.args[0].find('takes exactly') != -1):
>                 self.reply(SYNTAX_ERR, "%s requires an argument." % (cmd,))
>             else:
>                 log.msg("Unexpected FTP error")
>

If you want to make it "less fragile", please use inspect.getargspec() to determine the number of arguments it expects.  Messages are likely to be changed or localized.

Jp



From exarkun at divmod.com  Sun Aug 21 07:06:25 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 21 Aug 2005 09:06:25 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14281 - Cope with integer
	owner/group info.
In-Reply-To: <E1E6j8C-00068H-00@wolfwood>
Message-ID: <20050821130625.3914.1041415014.divmod.quotient.6494@ohm>

On Sun, 21 Aug 2005 00:16:32 -0600, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Sun Aug 21 00:16:32 2005
>New Revision: 14281
>
>Modified:
>   trunk/twisted/protocols/ftp.py
>Log:
>Cope with integer owner/group info.
>
>Modified: trunk/twisted/protocols/ftp.py
>==============================================================================
>--- trunk/twisted/protocols/ftp.py	(original)
>+++ trunk/twisted/protocols/ftp.py	Sun Aug 21 00:16:32 2005
>@@ -370,8 +370,8 @@
>             'directory': directory and 'd' or '-',
>             'permissions': formatMode(permissions),
>             'hardlinks': hardlinks,
>-            'owner': owner[:8],
>-            'group': group[:8],
>+            'owner': str(owner)[:8],
>+            'group': str(group)[:8],
>             'size': size,
>             'date': formatDate(time.gmtime(modified)),
>             'name': name}

The interface doc string explicitly states 'owner' and 'group' here will already be strings.  I don't see any reason to widen the interface, but if you do, please update the documentation.

Jp



From Henning.Ramm at mediapro-gmbh.de  Sun Aug 21 15:29:23 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Sun, 21 Aug 2005 23:29:23 +0200
Subject: [Twisted-Python] twisted & pydispatcher?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>

Hi ho!

Would you recommend or discourage using pyDispatcher in a twisted application?
Are there any known traps?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From mcfletch at rogers.com  Sun Aug 21 16:16:18 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Sun, 21 Aug 2005 18:16:18 -0400
Subject: [Twisted-Python] twisted & pydispatcher?
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB534@exchange-03.suedkurier.de>
Message-ID: <4308FD32.5090801@rogers.com>

Henning.Ramm at mediapro-gmbh.de wrote:

>Hi ho!
>
>Would you recommend or discourage using pyDispatcher in a twisted application?
>Are there any known traps?
>  
>
We use PyDispatcher + Twisted extensively in Cinemon.  Thing to keep in 
mind is that PyDispatcher is *synchronous*, so if you have a large 
number of handlers/observers registered for a given event you could 
stall Twisted as you process the one event.  We often use a callLater( 
0, send ) pattern to move the event processing into its own "timeslice" 
for heavily-observed events.

Good luck,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From andrew-twisted at puzzling.org  Sun Aug 21 18:00:50 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 22 Aug 2005 10:00:50 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol wrapper
	which logs everything that goes through it
In-Reply-To: <E1E6r1t-0007XJ-00@wolfwood>
References: <E1E6r1t-0007XJ-00@wolfwood>
Message-ID: <20050822000050.GB2277@trogdor.home.puzzling.org>

On Sun, Aug 21, 2005 at 08:42:33AM -0600, Jp Calderone wrote:
> Author: exarkun
> Date: Sun Aug 21 08:42:33 2005
> New Revision: 14296
> 
> Modified:
>    trunk/twisted/protocols/policies.py
>    trunk/twisted/test/test_policies.py
> Log:
> protocol wrapper which logs everything that goes through it
> 
> Modified: trunk/twisted/protocols/policies.py
> ==============================================================================
> --- trunk/twisted/protocols/policies.py	(original)
> +++ trunk/twisted/protocols/policies.py	Sun Aug 21 08:42:33 2005
> @@ -428,6 +428,69 @@
>                               timeoutPeriod=self.timeoutPeriod)
>  
>  
> +class TrafficLoggingProtocol(ProtocolWrapper):
[...]

Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
Can they be combined?

-Andrew.
 



From jonathan.lange at gmail.com  Sun Aug 21 20:47:58 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Sun, 21 Aug 2005 19:47:58 -0700
Subject: [Twisted-Python] Trial: The Volunteering
Message-ID: <d06a5cd3050821194763afeb68@mail.gmail.com>

Hello Everyone.

I've been off-list for a while, but I am back.  As the original author
of Trial, I still feel partly responsible for it.  So, I would like to
become the official maintainer of Trial again.

I am _not_ planning on re-writing Trial.  Rather, I'm going to
restrict myself to fixing bugs, doing incremental refactorings to
clean-up the cruft and rejecting ideas for new features.

I've asked Jonathan Simms (slyphon) whether he would mind.  He is more
than happy for me to assume the mantle of Trial maintainer.

Let me know if there are any objections.  Otherwise, start assigning
trial bugs to me by default.

cheers,
jml



From tim at se.linux.org  Mon Aug 22 04:53:41 2005
From: tim at se.linux.org (Tim =?iso-8859-1?Q?Terleg=E5rd?=)
Date: Mon, 22 Aug 2005 12:53:41 +0200
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822105341.GA20205@kraftur.se.linux.org>

> I've been off-list for a while, but I am back.  As the original author
> of Trial, I still feel partly responsible for it.  So, I would like to
> become the official maintainer of Trial again.

Would you like to describe what Trial is? I have no clue and don't know
where to find those clues either.

Tim



From andrew-twisted at puzzling.org  Mon Aug 22 04:56:27 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 22 Aug 2005 20:56:27 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14281 - Cope with integer
	owner/group info.
In-Reply-To: <20050821130625.3914.1041415014.divmod.quotient.6494@ohm>
References: <E1E6j8C-00068H-00@wolfwood>
	<20050821130625.3914.1041415014.divmod.quotient.6494@ohm>
Message-ID: <20050822105627.GI2277@trogdor.home.puzzling.org>

On Sun, Aug 21, 2005 at 09:06:25AM -0400, Jp Calderone wrote:
[...]
> 
> The interface doc string explicitly states 'owner' and 'group' here will 
> already be strings.  I don't see any reason to widen the interface, but if 
> you do, please update the documentation.

You're right.  I've put it back in r14298, and put the str where it belongs
(in twisted.vfs.adapters.ftp).

-Andrew.




From glyph at divmod.com  Mon Aug 22 06:23:26 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 22 Aug 2005 08:23:26 -0400
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822122326.3914.86477952.divmod.quotient.6589@ohm>

On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:

>I would like to become the official maintainer of Trial again.

Excellent.  Please allow me to officially present you with the ceremonial lead albatross ;-).

I believe the main direction that Trial has to go in, to wit, removing all reactor-spinning calls, requires first that all Twisted unit tests which call wait() or deferredResult() or the like be converted to instead return Deferreds.

This is probably a pretty big effort so feel free to harrass individual project maintainers; but please consider coordinating that effort.



From exarkun at divmod.com  Mon Aug 22 06:35:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Aug 2005 08:35:39 -0400
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd3050821194763afeb68@mail.gmail.com>
Message-ID: <20050822123539.3914.2117396197.divmod.quotient.6593@ohm>

On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:
>Hello Everyone.
>
>I've been off-list for a while, but I am back.  As the original author
>of Trial, I still feel partly responsible for it.  So, I would like to
>become the official maintainer of Trial again.
>
>I am _not_ planning on re-writing Trial.  Rather, I'm going to
>restrict myself to fixing bugs, doing incremental refactorings to
>clean-up the cruft and rejecting ideas for new features.
>
>I've asked Jonathan Simms (slyphon) whether he would mind.  He is more
>than happy for me to assume the mantle of Trial maintainer.
>
>Let me know if there are any objections.  Otherwise, start assigning
>trial bugs to me by default.

I'd like to talk about any big changes you'd like to make before you make them.  Trial has recently almost become just barely usable, and I'd like to keep it from slipping back at all.

Also, there is some major refactoring/rewriting that is definitely required.  If you don't want to tackle these, that's fine, but someone's going to have to.

Jp



From ms at cerenity.org  Mon Aug 22 06:23:20 2005
From: ms at cerenity.org (Michael Sparks)
Date: Mon, 22 Aug 2005 13:23:20 +0100
Subject: [Twisted-Python] Possibly of interest
Message-ID: <200508221323.20083.ms@cerenity.org>

[ Please excuse me if this isn't of interest. I saw this and suspected that
 people here might be interested (whether agreed with or not) though - if
 it isn't, my apologies! ]

Hi,


I was forwarded a link to this paper just recently (and skimming the past
5-6 months of archives here it doesn't look like it's been posted to this
list). Since it looks interesting I thought I'd forward a copy to yourselves.

http://www.usenix.org/events/hotos03/tech/full_papers/vonbehren/vonbehren_html/index.html

Whilst the paper is a couple of years old, the comments are probably 
interesting because whilst it describes itself really as "threads are better 
than events" their implementation is based on C-Coroutine library (that 
doesn't use threads...) and suggests in its conclusions:

"In the future, we advocate tight integration between the compiler and the 
thread system, which will result in a programming model that offers a clean 
and simple interface to the programmer while achieving superior performance."

Which to me smacks of generators - which IMO can be viewed as just a different 
way of wrapping up the event stack. (Which doesn't entirely surprise me - one
of their influences listed in para 3 of the introduction was Inktomi's Traffic
Server - somewhere I worked before the BBC, and came to the same
conclusions they did. //Wrongly or rightly//, dunno :-)

(On an unrelated note: Tommi - after the discussions we had at Europython I 
came back and discussed general timelines for making our Kamaelia stuff work 
transparently with Twisted for an alpha stage. We came to the conclusion that 
we'd like to push that out to a 1.0.0 timeframe, which would probably be 
around a year from now. It gives us still the freedom in that respect to be 
able to answer "use twisted" when people ask us what they should use when 
using python for production servers :-) Also it means that /if/ we do achieve 
clean integration, that the answer won't change ;-)

Anyway, hopefully the paper is of interest (even if disagreed with!), if it 
isn't, my apologies!

Best Regards,


-- 
Michael Sparks, Senior R&D Engineer, Digital Media Group
Michael.Sparks at rd.bbc.co.uk, http://kamaelia.sourceforge.net/
British Broadcasting Corporation, Research and Development
Kingswood Warren, Surrey KT20 6NP

This e-mail may contain personal views which are not the views of the BBC.



From jonathan.lange at gmail.com  Mon Aug 22 08:28:53 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Tue, 23 Aug 2005 00:28:53 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
Message-ID: <d06a5cd305082207282e63e4be@mail.gmail.com>

On 22/08/05, Jp Calderone <exarkun at divmod.com> wrote:
> On Sun, 21 Aug 2005 19:47:58 -0700, Jonathan Lange <jonathan.lange at gmail.com> wrote:
> >Hello Everyone.
> >
> >I am _not_ planning on re-writing Trial.  Rather, I'm going to
> >restrict myself to fixing bugs, doing incremental refactorings to
> >clean-up the cruft and rejecting ideas for new features.
> >
> >Let me know if there are any objections.  Otherwise, start assigning
> >trial bugs to me by default.
> 
> I'd like to talk about any big changes you'd like to make before you make them.  Trial has recently almost become just barely usable, and I'd like to keep it from slipping back at all.
> 
> Also, there is some major refactoring/rewriting that is definitely required.  If you don't want to tackle these, that's fine, but someone's going to have to.
> 

I do want to tackle them, but carefully and slowly.  Like you said,
Trial has reached a local optimum of utility.

I'm more than happy to discuss big changes.  I have a largish patch
that Robert Collins and I worked on at the .au sprint.  The changes
separate dry run from the main tree, and are a step towards separating
the code that runs tests from the code that finds tests.  Tell me
where you want it mailed.

jml



From itamar at itamarst.org  Mon Aug 22 09:23:20 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 22 Aug 2005 11:23:20 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol
	wrapper which logs everything that goes through it
In-Reply-To: <20050822000050.GB2277@trogdor.home.puzzling.org>
References: <E1E6r1t-0007XJ-00@wolfwood>
	<20050822000050.GB2277@trogdor.home.puzzling.org>
Message-ID: <1124724200.8782.22.camel@localhost.localdomain>

On Mon, 2005-08-22 at 10:00 +1000, Andrew Bennetts wrote:

> Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
> Can they be combined?

With some refactoring of the new code to make it more generic, yes. Open
an issue I guess?




From itamar at itamarst.org  Mon Aug 22 09:44:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 22 Aug 2005 11:44:37 -0400
Subject: [Twisted-Python] Possibly of interest
In-Reply-To: <200508221323.20083.ms@cerenity.org>
References: <200508221323.20083.ms@cerenity.org>
Message-ID: <1124725477.8782.30.camel@localhost.localdomain>

On Mon, 2005-08-22 at 13:23 +0100, Michael Sparks wrote:

> Which to me smacks of generators - which IMO can be viewed as just a different 
> way of wrapping up the event stack. (Which doesn't entirely surprise me - one
> of their influences listed in para 3 of the introduction was Inktomi's Traffic
> Server - somewhere I worked before the BBC, and came to the same
> conclusions they did. //Wrongly or rightly//, dunno :-)

I think that stackless (or greenlets) are closest to what they are
talking about in the Python domain. 

Because of the title of their paper, people who like kernel threads keep
quoting this paper as evidence (e.g. the C10K page), without bothering
to read it and noticing it's not about kernel threads. This is
annoying :)

As a counterargument to their claim one could point to growing need to
deal with multi-CPU machines, something their architecture doesn't
address. Also IIRC the gains in performance they got wouldn't
necessarily show up in something as slow as Python :) But I read that
paper a long time ago so maybe I'm misremembering or they address these
issues.




From nico at tekNico.net  Mon Aug 22 10:59:48 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 22 Aug 2005 18:59:48 +0200
Subject: [Twisted-Python] What about doctest support [was: Re: Trial: The
	Volunteering]
In-Reply-To: <20050822122326.3914.86477952.divmod.quotient.6589@ohm>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822122326.3914.86477952.divmod.quotient.6589@ohm>
Message-ID: <ded0a5$a9h$1@sea.gmane.org>

> I believe the main direction that Trial has to go in, to wit, removing
> all reactor-spinning calls, requires first that all Twisted unit tests
> which call wait() or deferredResult() or the like be converted to
> instead return Deferreds.

There's a couple of files in twisted.trial, doctest.py and tdoctest.py .
The first looks like a patched version of the stdlib one. What about
present and/or future support for writing tests in doctest format?

-- 
Nicola Larosa - nico at tekNico.net

PHP is such a load of crap, right down to the standard library, that it
creates a culture where it's acceptable to write horrible code. [...]
Maybe with PHP 5 they are trying to clean up the neighborhood, but that
doesn't change the fact when you program in PHP you are programming in
a dump. -- Ian Bicking, July 2005




From jarrod.roberson at gmail.com  Mon Aug 22 11:16:29 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 22 Aug 2005 13:16:29 -0400
Subject: [Twisted-Python] Possibly of interest
In-Reply-To: <200508221323.20083.ms@cerenity.org>
References: <200508221323.20083.ms@cerenity.org>
Message-ID: <2389d47305082210162fa9fb3c@mail.gmail.com>

On 8/22/05, Michael Sparks <ms at cerenity.org> wrote:
> 
> [ Please excuse me if this isn't of interest. I saw this and suspected 
> that
> people here might be interested (whether agreed with or not) though - if
> it isn't, my apologies! ]
> 
> Hi,
> 
> 
> I was forwarded a link to this paper just recently (and skimming the past
> 5-6 months of archives here it doesn't look like it's been posted to this
> list). Since it looks interesting I thought I'd forward a copy to 
> yourselves.
> 
> 
> http://www.usenix.org/events/hotos03/tech/full_papers/vonbehren/vonbehren_html/index.html
> 

you have to take this paper in CONTEXT of the previous paper tha one of 
these same authors wrote about a year earlier.
The SEDA paper -> 
http://www.google.com/url?sa=t&ct=res&cd=5&url=http%3A//www.eecs.harvard.edu/%7Emdw/papers/seda-sosp01.pdf&ei=IQcKQ6ilLMPc4QGu0rGXDg

Where they come to the exact OPPOSITE conclusion :-)

It is all good reading!

They are NOT promoting threads as much as they are promoting a better 
scheduler for threads. Which is what SEDA ( and Twisted ) provide with the 
event driven model. 

Their basic conclusion is that EXISTING threading implementations are too 
general/generic and a more specialized scheduler that is way more effiecent 
would make Threaded programs scale better AND have the more friendly Thread 
style interface.

Until someone picks up thair Carpaccio project and make it produciton 
worthy, we will probably just have to keep dealing with the complexity of 
event driven async programming idioms like Twisted.

-- 
If you don't know what you want, you probably need a nap.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050822/a5ddcd1f/attachment.html>

From mary-twisted at puzzling.org  Mon Aug 22 15:22:25 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:22:25 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <d06a5cd305082207282e63e4be@mail.gmail.com>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
	<d06a5cd305082207282e63e4be@mail.gmail.com>
Message-ID: <20050822212225.GB15924@sourdust.home.puzzling.org>

On Tue, Aug 23, 2005, Jonathan Lange wrote:
> I'm more than happy to discuss big changes.  I have a largish patch
> that Robert Collins and I worked on at the .au sprint.  The changes
> separate dry run from the main tree, and are a step towards separating
> the code that runs tests from the code that finds tests.  Tell me
> where you want it mailed.

Not that it's likely that I personally will be reviewing it in any shape
or form, but why not move it onto a subversion branch? I gather people
are slowly moving in that direction, and it does at least potentially
allow people to call "halt this madness!" when they see your commits
rather than when they see a big change land in trunk.

(It might also be useful eventually to be able to specify that the
buildbot tests run over at least some branches?)

-Mary



From mary-twisted at puzzling.org  Mon Aug 22 15:27:22 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:27:22 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822105341.GA20205@kraftur.se.linux.org>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822105341.GA20205@kraftur.se.linux.org>
Message-ID: <20050822212722.GC15924@sourdust.home.puzzling.org>

On Mon, Aug 22, 2005, Tim Terlegård wrote:
> Would you like to describe what Trial is? I have no clue and don't know
> where to find those clues either.

It's the Twisted unit testing framework. API documentation is available
at [1]

What other documentation there is seems to be in the Testing Standard
HOWTO at [2]

-Mary

[1] http://twistedmatrix.com/documents/current/api/twisted.trial.html
[2] http://twistedmatrix.com/projects/core/documentation/howto/policy/test-standard.html



From mary-twisted at puzzling.org  Mon Aug 22 15:33:07 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:33:07 +1000
Subject: [Twisted-Python] Trial: The Volunteering
In-Reply-To: <20050822212225.GB15924@sourdust.home.puzzling.org>
References: <d06a5cd3050821194763afeb68@mail.gmail.com>
	<20050822123539.3914.2117396197.divmod.quotient.6593@ohm>
	<d06a5cd305082207282e63e4be@mail.gmail.com>
	<20050822212225.GB15924@sourdust.home.puzzling.org>
Message-ID: <20050822213307.GE15924@sourdust.home.puzzling.org>

On Tue, Aug 23, 2005, Mary Gardiner wrote:
> Not that it's likely that I personally will be reviewing it in any shape
> or form, but why not move it onto a subversion branch?

This does have the disadvantage that you'd need to find a good way to
commit Robert's changes to the branch if he does any more work on it.
Andrew had at least some kind of way to make Subversion and bzr
sandboxes co-exist, it might have been more or less as simple as having
.bzr and .svn directories in the same sandbox.

-Mary



From mary-twisted at puzzling.org  Mon Aug 22 15:50:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 23 Aug 2005 07:50:13 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.
	Let's keep this file simple, please.
In-Reply-To: <E1DQ4bg-0007iQ-00@wolfwood>
References: <E1DQ4bg-0007iQ-00@wolfwood>
Message-ID: <20050822215013.GB17669@sourdust.home.puzzling.org>

On Mon, Apr 25, 2005, Glyph Lefkowitz wrote:
> Modified:
>    trunk/LICENSE
> Log:
> No, consigning copyright means it is _not_ (C) you.  Let's keep this file simple, please.

[snip]

> +Copyright (c) 2004,2005 Twisted Matrix Labs, http://www.twistedmatrix.com/
> +(except as listed below)
>  
>  Permission is hereby granted, free of charge, to any person obtaining
>  a copy of this software and associated documentation files (the
> @@ -47,4 +23,5 @@
>  Copyright Exceptions:
> -
> +	- Portions copyright Massachusetts Institute of Technology, due to
> +	  contributions of staff and students.

I was reminded at the sprint that I needed to ask about this. My
understanding of the license policy was as per
http://twistedmatrix.com/bugs/issue903 -- ie, that the *only* thing
commiters needed to do was to MIT license their contributions. This is
all that http://twistedmatrix.com/developers/contributing currently
states. Therefore, that was what I'd been getting people who
contributed documentation to agree to, and that was my understanding of
the licencing and copyright of my own contributions as of the date when
the MIT licensing of Twisted began.

If the current policy is that copyright must be consigned to an entity
called "Twisted Matrix Labs", then this policy needs to be confirmed,
restored to the webpage, and the status of all contributions at least
since the website change and probably since the licence change needs to
be confirmed with individual contributors. Also, my own network of
nebulous legal advice from dubious sources suggests that Australian
contributors might want to seek legal advice about how to do copyright
consignment: it was suggested to me that the status of your moral right
to be identified as author needs to be firmly nailed down for the
consignment to have any validity whatsoever.

-Mary



From exarkun at divmod.com  Mon Aug 22 16:31:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Aug 2005 18:31:47 -0400
Subject: [Twisted-Python] What about doctest support [was: Re: Trial: The
	Volunteering]
In-Reply-To: <ded0a5$a9h$1@sea.gmane.org>
Message-ID: <20050822223147.3914.691809055.divmod.quotient.6775@ohm>

On Mon, 22 Aug 2005 18:59:48 +0200, Nicola Larosa <nico at teknico.net> wrote:
>> I believe the main direction that Trial has to go in, to wit, removing
>> all reactor-spinning calls, requires first that all Twisted unit tests
>> which call wait() or deferredResult() or the like be converted to
>> instead return Deferreds.
>
>There's a couple of files in twisted.trial, doctest.py and tdoctest.py .
>The first looks like a patched version of the stdlib one. What about
>present and/or future support for writing tests in doctest format?

It's a mess.  I think it should be removed.  A future version of trial might have support added in a more maintainable fashion.

Jp



From andrew-twisted at puzzling.org  Mon Aug 22 17:33:34 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 23 Aug 2005 09:33:34 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r14296 - protocol wrapper
	which logs everything that goes through it
In-Reply-To: <1124724200.8782.22.camel@localhost.localdomain>
References: <E1E6r1t-0007XJ-00@wolfwood>
	<20050822000050.GB2277@trogdor.home.puzzling.org>
	<1124724200.8782.22.camel@localhost.localdomain>
Message-ID: <20050822233334.GJ2277@trogdor.home.puzzling.org>

On Mon, Aug 22, 2005 at 11:23:20AM -0400, Itamar Shtull-Trauring wrote:
> On Mon, 2005-08-22 at 10:00 +1000, Andrew Bennetts wrote:
> 
> > Hmm, this seems to be similar to twisted.manhole._inspectro.LoggingProtocol.
> > Can they be combined?
> 
> With some refactoring of the new code to make it more generic, yes. Open
> an issue I guess?

Done: http://twistedmatrix.com/bugs/issue1150

-Andrew.




From solipsis at pitrou.net  Tue Aug 23 05:37:20 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 23 Aug 2005 13:37:20 +0200
Subject: [Twisted-Python] moral rights
In-Reply-To: <20050822215013.GB17669@sourdust.home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
Message-ID: <1124797040.29527.27.camel@p-dvsi-395-20.rd.francetelecom.fr>


Just my 2 cents...

> Also, my own network of
> nebulous legal advice from dubious sources suggests that Australian
> contributors might want to seek legal advice about how to do copyright
> consignment: it was suggested to me that the status of your moral right
> to be identified as author needs to be firmly nailed down for the
> consignment to have any validity whatsoever.

In many continental Europe countries as well (including France), moral
rights of the author can't be given away - they are "fundamental rights"
of the author. For software, it mainly includes the right to be
mentioned and recognized as an author (or co-author).

Personally, I'm not quite convinced of the validity of copyright
assignments on a multi-national scale. There probably are very specific
(legal) wording requirements to be met that a free software project
can't afford to deal with. Of course, as long as the author doesn't try
to oppose and nullify the copyright assignment, there's no real problem.

(I know, GNU does it. But that still doesn't convince me, although I'm
rather pro-copyleft and pro-FSF ;-))

Regards

Antoine.





From gns24 at sphinx.mythic-beasts.com  Tue Aug 23 06:17:40 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Tue, 23 Aug 2005 13:17:40 +0100 (BST)
Subject: [Twisted-Python] twistd and SqlObject
Message-ID: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>

I'm sure the answer to this question should be obvious, but I can't find
it.

I've written a twisted server which recieves a request, looks up the
requested data in its cache, and returns the data.  It accesses its
database via SQLObject - the database is small, so I don't care that it
blocks.  Twisted has certainly made this very simple.

I now want to run that same process using twistd (-noy), but SqlObject
gives the error
Failed to load application: 'NoneType' object has no attribute
'tableExists'

on the last line of the listing below, which works fine when run normally.

I guess I'm being very naive about the way in which twistd works, but I
can't find any comprehensive documentation saying what it does.

Thanks for any pointers,

Graham



import _mysql_exceptions
from elementtree.ElementTree import Element, SubElement, ElementTree,
parse
from twisted.internet import reactor
from twisted.web import server
from twisted.web.resource import Resource
from twisted.web.client import getPage
from cStringIO import StringIO
import sqlobject
import datetime
now = datetime.datetime.now

cacheDurationDays = 90
__connection__ = sqlobject.MySQLConnection(host='localhost',
db='DomainInfoCache',
                                           user='root', passwd='chubchub')

class CachedDomain(sqlobject.SQLObject):
    """The table that the data is cached in"""
    domain = sqlobject.StringCol(length=80)
    alexa3monthtraffic = sqlobject.FloatCol()
    lastUpdate = sqlobject.DateTimeCol()
    domainIndex = sqlobject.DatabaseIndex({'column':domain, 'length':8})

CachedDomain.createTable(ifNotExists=True)



From dialtone at divmod.com  Tue Aug 23 06:46:45 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Tue, 23 Aug 2005 14:46:45 +0200
Subject: [Twisted-Python] twistd and SqlObject
In-Reply-To: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>
References: <Pine.LNX.4.58.0508231259040.26303@sphinx.mythic-beasts.com>
Message-ID: <430B1AB5.2020305@divmod.com>

Graham Stratton wrote:

>I guess I'm being very naive about the way in which twistd works, but I
>can't find any comprehensive documentation saying what it does.
>  
>
This is mostly a problem with the way you use tac files.

>Thanks for any pointers,
>  
>
Avoid putting everything in one file.
The .tac file is not really a module and it's 'execfile'd.
Change the code to have everything except a very simple and declarative
configuration code inside
the tac file and put everything else in a separate module. It should
work then.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4.1
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From hikenboots at gmail.com  Tue Aug 23 10:33:35 2005
From: hikenboots at gmail.com (J French)
Date: Tue, 23 Aug 2005 11:33:35 -0500
Subject: [Twisted-Python] Making a Persistent SSH connection w/ Conch - How?
Message-ID: <35b7725f0508230933694036f4@mail.gmail.com>

I'm trying to design a ssh client that establishes a connection that
it persistent until I close it so that I can use it for constant
bi-directional communication.  I want it to act like a shell with a
gui top of it (wxPython).  I think I need to keep a channel open
continuously to effect this.  This is my first attempt at using ssh so
I'm probably missing some important paradigms here, please fill me in
if possible.  I grabbed the the sshsimpleclient.py code from
http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleclient.py
 and modified (to test the behavior):

    def closed(self):
        print 'got data from cat: %s' % repr(self.data)
        #self.loseConnection()
        #reactor.stop()

The server connection still closes as soon as I receive the callback
data. I'm using freebsd and it works as advertised (I see the
connection in auth.log but of course, its closed before I can 'who'
and check it out)  Any advice on the right way to get started would be
appreciated!

-John



From bbum at mac.com  Tue Aug 23 14:47:13 2005
From: bbum at mac.com (Bill Bumgarner)
Date: Tue, 23 Aug 2005 13:47:13 -0700
Subject: [Twisted-Python] FileSender stability.
Message-ID: <FC0151E5-DD07-4232-A1F1-C0E527027263@mac.com>

I'm in need of moving data between various LineReceiver based  
instances.   So far, this has proved to be as easy as sending a line  
with the # of bytes of raw data to be sent, throwing the receiver  
into raw mode, and receiving said bytes.

No problem.

Now I'm about to start sending files between LineReceiver  
instances.   I could certainly do this by writing a bunch of code.   
Well, not that much code (it seems that most of the challenge of  
using Twisted is figuring out what code not to write!).

However, there is the wonderful class called "FileSender" that seems  
to do 1/2 of exactly what I need to do;  send a file.  However, the  
documentation for the class indicates that it will "at some point" do  
what I want and that the API is stable.

So -- should I bother using the FileSender class or roll my own?

thanks,
b.bum

(BTW:  Twisted has to be one of the coolest pieces of software I have  
worked with in a very, very long time.)




From tv at twistedmatrix.com  Tue Aug 23 22:29:34 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 24 Aug 2005 07:29:34 +0300
Subject: [Twisted-Python] Making a Persistent SSH connection w/ Conch
	- How?
In-Reply-To: <35b7725f0508230933694036f4@mail.gmail.com>
References: <35b7725f0508230933694036f4@mail.gmail.com>
Message-ID: <430BF7AE.5020201@twistedmatrix.com>

J French wrote:
> if possible.  I grabbed the the sshsimpleclient.py code from
> http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleclient.py
>  and modified (to test the behavior):
> 
>     def closed(self):
>         print 'got data from cat: %s' % repr(self.data)
>         #self.loseConnection()
>         #reactor.stop()
> 
> The server connection still closes as soon as I receive the callback
> data. I'm using freebsd and it works as advertised (I see the

Of course it closes, that's what the client side is programmed to do.

    def channelOpen(self, ignoredData):
        self.data = ''
        d = self.conn.sendRequest(self, 'exec', common.NS('cat'),
wantReply = 1)
        d.addCallback(self._cbRequest)

    def _cbRequest(self, ignored):
        self.write('hello conch\n')
        self.conn.sendEOF(self)

Maybe sending EOF isn't the smartest move if you want to keep the thing
open..



From jonathan.lange at gmail.com  Wed Aug 24 00:35:18 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Wed, 24 Aug 2005 16:35:18 +1000
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
Message-ID: <d06a5cd3050823233526060f78@mail.gmail.com>

Hello,

Trial currently does some black magic to support remote reporters,
defined in t.trial.remote.  What use cases does t.trial.remote
implement?  Does anyone actually use it?

Rumour has it that it was originally written to make buildbot easier
to write.  However, I'm told that buildbot just parses stdio output.

Let me know if you use it.  If you don't, I'll remove the code (in my
branch) at my next hacking session :)

cheers,
jml



From gns24 at sphinx.mythic-beasts.com  Wed Aug 24 05:31:33 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Wed, 24 Aug 2005 12:31:33 +0100 (BST)
Subject: [Twisted-Python] twisted.news
In-Reply-To: <d06a5cd3050823233526060f78@mail.gmail.com>
References: <d06a5cd3050823233526060f78@mail.gmail.com>
Message-ID: <Pine.LNX.4.58.0508241224470.27796@sphinx.mythic-beasts.com>

Hi, I'd like to try out twisted.news, but the documentation seems to be
missing at the moment.

Also on running setup.py I get the warning

package init file 'twisted/plugins/__init__.py' not found (or not a
regular file)

Can I just ignore it?

Many thanks for the support,

Graham



From hikenboots at gmail.com  Wed Aug 24 07:36:20 2005
From: hikenboots at gmail.com (J French)
Date: Wed, 24 Aug 2005 08:36:20 -0500
Subject: [Twisted-Python] Accessing shell over a pseudo terminal via
	conch/ssh Totally lost...
Message-ID: <35b7725f0508240636cfec497@mail.gmail.com>

I am trying to get access to bash on freebsd from a pty using
ssh/conch.  I can't find information on this; I've googled for two
days now.  Seems like something that would be frequently done.  I have
played with sshsimpleclient.py and it works as advertised but I don't
understand how to open a pty for continuous access to the shell.  Can
anyone shed some light on this for me?

Thanks in advance,
JF



From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 12:10:44 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 24 Aug 2005 20:10:44 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>

If my server app crashes, it often leaves its ports open, so that I get a CannotListenError 'Address already in use'.
(I'm on Win2k.)
Is there any possibility to set this address free other than re-logon the user?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Wed Aug 24 12:27:31 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 14:27:31 -0400
Subject: [Twisted-Python] CannotListenError
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB537@exchange-03.suedkurier.de>
Message-ID: <1124908051.8545.39.camel@localhost.localdomain>

On Wed, 2005-08-24 at 20:10 +0200, Henning.Ramm at mediapro-gmbh.de wrote:
> If my server app crashes, it often leaves its ports open, so that I get a CannotListenError 'Address already in use'.
> (I'm on Win2k.)

SO_REUSEADDR is supposed to allow this. I think I disabled that for TCP
on windows as it caused some failing tests, but in retrospect those
tests are probably less important than the actual functionality it
provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
me.




From bgranger at scu.edu  Wed Aug 24 12:58:46 2005
From: bgranger at scu.edu (Brian Granger)
Date: Wed, 24 Aug 2005 11:58:46 -0700
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
Message-ID: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>

Hello,,

I am designing and implementing a custom protocol using Twisted.  I  
have wanted to design the protocol to use int 32 prefixed strings.  I  
wrote a test version of my server using Twisted's Int32StringReceiver  
protocol class but it seemed really slow.  To test this out I have  
written and tested two echo servers: one that uses LineReceiver and  
one that uses Int32StringReceiver.  I have benchmarked both of these  
echo servers by making multiple connections to each.  I find that the  
LineReceiver based echo server is about 200 times as fast as the  
Int32StringReceiver!

Is the Int32StringReceiver really that slow?  Why?  What am I  
missing?  Are there hidden assumptions that I am missing?  Can it be  
made faster?

Thanks in advance!

Brian





From itamar at itamarst.org  Wed Aug 24 13:14:47 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 15:14:47 -0400
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
In-Reply-To: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
References: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
Message-ID: <1124910887.8545.44.camel@localhost.localdomain>

On Wed, 2005-08-24 at 11:58 -0700, Brian Granger wrote:

> Is the Int32StringReceiver really that slow?  Why?  What am I  
> missing?  Are there hidden assumptions that I am missing?  Can it be  
> made faster?

There were some optimizations made to LineReceiver that weren't made to
Int32StringReceiver, so that may be it.




From bgranger at scu.edu  Wed Aug 24 13:22:37 2005
From: bgranger at scu.edu (Brian Granger)
Date: Wed, 24 Aug 2005 12:22:37 -0700
Subject: [Twisted-Python] Why is Int23StringReceiver so slow?
In-Reply-To: <1124910887.8545.44.camel@localhost.localdomain>
References: <D4A9A17D-C9A6-49E1-B1B8-587A56AFB3F4@scu.edu>
	<1124910887.8545.44.camel@localhost.localdomain>
Message-ID: <D93F6026-16E6-423F-8BE7-C340819B91EA@scu.edu>


On Aug 24, 2005, at 12:14 PM, Itamar Shtull-Trauring wrote:

> On Wed, 2005-08-24 at 11:58 -0700, Brian Granger wrote:
>
>
>> Is the Int32StringReceiver really that slow?  Why?  What am I
>> missing?  Are there hidden assumptions that I am missing?  Can it be
>> made faster?
>>
>
> There were some optimizations made to LineReceiver that weren't  
> made to
> Int32StringReceiver, so that may be it.
>
>

OK, thanks.  I will probably just use a line based approach then.   
Unless I find time to optimize Int32StringReceiver myself....
Until Int32StringReceiver gets optimized, it might make sense to  
document the fact that it could be very slow compared with LineReceiver.

Brian

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 14:35:21 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 24 Aug 2005 22:35:21 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>

>provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
>me.

I would like, but I cannot - I got no mail regarding my login.
Must someone handle that manually?

HR



From itamar at itamarst.org  Wed Aug 24 14:52:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Aug 2005 16:52:21 -0400
Subject: [Twisted-Python] CannotListenError
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB539@exchange-03.suedkurier.de>
Message-ID: <1124916741.8545.48.camel@localhost.localdomain>

On Wed, 2005-08-24 at 22:35 +0200, Henning.Ramm at mediapro-gmbh.de wrote:
> >provides. Open a bug in http://twistedmatrix.com/bugs/ and assign it to
> >me.
> 
> I would like, but I cannot - I got no mail regarding my login.
> Must someone handle that manually?

Probably not; have you tried just logging in with the username and
password you gave?




From Henning.Ramm at mediapro-gmbh.de  Wed Aug 24 16:09:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 25 Aug 2005 00:09:38 +0200
Subject: [Twisted-Python] CannotListenError
Message-ID: <F92274058556DE42B94B148EEFB91839021CB53B@exchange-03.suedkurier.de>

>> I would like, but I cannot - I got no mail regarding my login.
>> Must someone handle that manually?
>Probably not; have you tried just logging in with the username and
>password you gave?

That didn't work. I registered again, and it worked. Issue opened.
Thank you!

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From alengarbage at yahoo.com  Wed Aug 24 16:57:54 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 24 Aug 2005 15:57:54 -0700 (PDT)
Subject: [Twisted-Python] URL length limits in twisted
Message-ID: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>

I'm noticing silent failures using HTTPClientFactory
with len(url) >= 16400.  The factory's deferred object
immediately calls its associated callBack() method
without sending any data  (the server is likewise
written with twisted python, but it doesn't appear to
ever receive data).  The errorBack() doesn't fire,
either.

A url with len <= 16398 works just fine, firing the
callback /after/ sending the data.

According to RFC 2616, arbitrary length URLs are
allowed by HTTP, but I understand that there are
practical limitations in many implementations.  Is the
16400 url-length ceiling a known limitation in
twisted, or am I banging up against something else?

thanks,
Lenny


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 



From alengarbage at yahoo.com  Wed Aug 24 21:28:16 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 24 Aug 2005 20:28:16 -0700 (PDT)
Subject: [Twisted-Python] Re: URL length limits in twisted [wrong list]
Message-ID: <20050825032816.65388.qmail@web31510.mail.mud.yahoo.com>

Argh.  Sorry, thought I was posting to twisted-web. 
Please forgive and ignore.

- Lenny


		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 



From rabs at dimension-virtual.com  Wed Aug 24 16:15:38 2005
From: rabs at dimension-virtual.com (=?iso-8859-1?q?Ra=FAl_Alexis_Betancor_Santana?=)
Date: Wed, 24 Aug 2005 23:15:38 +0100
Subject: [Twisted-Python] URL length limits in twisted
In-Reply-To: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>
References: <20050824225755.64201.qmail@web31506.mail.mud.yahoo.com>
Message-ID: <200508242315.39217.rabs@dimension-virtual.com>

El Miércoles, 24 de Agosto de 2005 23:57, Lenny G Arbage escribió:
> I'm noticing silent failures using HTTPClientFactory
> with len(url) >= 16400.  The factory's deferred object
> immediately calls its associated callBack() method
> without sending any data  (the server is likewise
> written with twisted python, but it doesn't appear to
> ever receive data).  The errorBack() doesn't fire,
> either.
>
> A url with len <= 16398 works just fine, firing the
> callback /after/ sending the data.
>
> According to RFC 2616, arbitrary length URLs are
> allowed by HTTP, but I understand that there are
> practical limitations in many implementations.  Is the
> 16400 url-length ceiling a known limitation in
> twisted, or am I banging up against something else?

Wooooooohhh!! .. more than 16400 chars for an URL !! ..., thats more than 16K 
request send to the server ...
Maybe I'm wrong but, are you using the GET method ?, if so change it and use 
the PUT one and try again. As far as I know most of http protocol 
implementations have that kind of limitations on the GET method, but I could 
be wrong, I dont know enought about twisted to tell you.

Best regards



From exarkun at divmod.com  Wed Aug 24 23:35:11 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 25 Aug 2005 01:35:11 -0400
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <d06a5cd3050823233526060f78@mail.gmail.com>
Message-ID: <20050825053511.3914.1560123285.divmod.quotient.8037@ohm>

On Wed, 24 Aug 2005 16:35:18 +1000, Jonathan Lange <jonathan.lange at gmail.com> wrote:
>Hello,
>
>Trial currently does some black magic to support remote reporters,
>defined in t.trial.remote.  What use cases does t.trial.remote
>implement?  Does anyone actually use it?
>
>Rumour has it that it was originally written to make buildbot easier
>to write.  However, I'm told that buildbot just parses stdio output.
>
The reporter API should support Deferreds, but twisted.trial.remote doesn't do anything.  I don't see any reason not to delete it (it should have been deleted when all its functionality was removed).

>Let me know if you use it.  If you don't, I'll remove the code (in my
>branch) at my next hacking session :)
>

Be careful about letting that branch get too big or too old.  The smaller it is, the easier it will be to review and merge into trunk.  The younger it is, the less the chance it will conflict with other changes.

Jp



From jonathan.lange at gmail.com  Thu Aug 25 00:05:00 2005
From: jonathan.lange at gmail.com (Jonathan Lange)
Date: Thu, 25 Aug 2005 16:05:00 +1000
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <20050825053511.3914.1560123285.divmod.quotient.8037@ohm>
References: <d06a5cd3050823233526060f78@mail.gmail.com>
	<20050825053511.3914.1560123285.divmod.quotient.8037@ohm>
Message-ID: <d06a5cd305082423053d04b7ce@mail.gmail.com>

On 25/08/05, Jp Calderone <exarkun at divmod.com> wrote:
> On Wed, 24 Aug 2005 16:35:18 +1000, Jonathan Lange <jonathan.lange at gmail.com> wrote:
> >Trial currently does some black magic to support remote reporters,
> >defined in t.trial.remote.  What use cases does t.trial.remote
> >implement?  Does anyone actually use it?
> >
> The reporter API should support Deferreds, but twisted.trial.remote doesn't do anything.  I don't see any reason not to delete it (it should have been deleted when all its functionality was removed).

No worries.  Still, can you please provide a use case?  
 
> >Let me know if you use it.  If you don't, I'll remove the code (in my
> >branch) at my next hacking session :)
> >
> 
> Be careful about letting that branch get too big or too old.  The smaller it is, the easier it will be to review and merge into trunk.  The younger it is, the less the chance it will conflict with other changes.
> 

Good call.  I think its ready to go in as it stands.   Please review
it (anyone).

As far as I can tell, the only API change is that setUpReporter and
tearDownReporter are now assumed to be synchronous.

thanks,
jml



From sflist at ihonk.com  Thu Aug 25 07:57:44 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 07:57:44 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
Message-ID: <1124978264.18072.7.camel@localhost.localdomain>

Hi,

In some cases I need to force a client to disconnect. Is there some
factory call that I can use to do this? On the client side, I know I can
use factory._broker.transport.loseConnection(), but on the server side,
though I've looked at the source a bit, I'm not sure how to get at the
correct transport.

Thanks!

Steve




From dguaraglia at gmx.de  Thu Aug 25 08:12:22 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 11:12:22 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <430DD1C6.3050801@gmx.de>

Hi Steve,

It depends, if you decide you should disconnect the client while 
processing data in the Protocol, then you can just 
"self.transport.loseConnection()".

(e.g):
class MyProt(Protocol):
    dataReceived(data):
       if data <> "hello":
          self.transport.loseConnection()
       else:
          ....

So the most important question is: where do you decide that you should 
disconnect the client?

Hope this helps,

David

Steve Freitas wrote:

>Hi,
>
>In some cases I need to force a client to disconnect. Is there some
>factory call that I can use to do this? On the client side, I know I can
>use factory._broker.transport.loseConnection(), but on the server side,
>though I've looked at the source a bit, I'm not sure how to get at the
>correct transport.
>
>Thanks!
>
>Steve
>  
>




From sflist at ihonk.com  Thu Aug 25 08:35:30 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 08:35:30 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DD1C6.3050801@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<430DD1C6.3050801@gmx.de>
Message-ID: <1124980531.25858.2.camel@localhost.localdomain>

Hi David,

Thanks for the reply. I'm aware of using loseConnection() from inside
the protocol, but I'm using PBServerFactory. So I'm looking for a way to
choose an arbitrary PB client that's already connected and logged in
(cred) through that factory and kill the connection -- in other words,
of all the clients that may be connected to that factory, I need to know
how to get the transport that I want, so I can call loseConnection() on
it.

If I need to subclass PBServerFactory, that's fine, but I'm hoping to
find something a little more direct.

Thanks,

Steve

On Thu, 2005-08-25 at 11:12 -0300, David Guaraglia wrote:
> Hi Steve,
> 
> It depends, if you decide you should disconnect the client while 
> processing data in the Protocol, then you can just 
> "self.transport.loseConnection()".
> 
> (e.g):
> class MyProt(Protocol):
>     dataReceived(data):
>        if data <> "hello":
>           self.transport.loseConnection()
>        else:
>           ....
> 
> So the most important question is: where do you decide that you should 
> disconnect the client?
> 
> Hope this helps,
> 
> David
> 
> Steve Freitas wrote:
> 
> >Hi,
> >
> >In some cases I need to force a client to disconnect. Is there some
> >factory call that I can use to do this? On the client side, I know I can
> >use factory._broker.transport.loseConnection(), but on the server side,
> >though I've looked at the source a bit, I'm not sure how to get at the
> >correct transport.
> >
> >Thanks!
> >
> >Steve
> >  
> >
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From psanchez at nortel.com  Thu Aug 25 08:10:50 2005
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 25 Aug 2005 10:10:50 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
Message-ID: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>

Hello,

I need to implement a function (say, myfunc) that fires several
independent Deferreds (using deferToThread), and that returns a deferred
itself. A client of this function (say, client) is expected to do
something like this:

def client():
    def done(success)
        if success:
           print 'd1 and d2 are done'

    d = myfunc()
    d.addCallback(done)
    ...


myfuct() above does something like this:

def myfunc():
    def checkFunc1(success):
    ...

    def checkFunc2(success):
    ...

    d = defer.Deferred()
    d1 = deferToThread(func1).addCallback(checkFunc1)
    d2 = deferToThread(func2).addCallback(checkFunc2)
    d.addCallback(????)

    return d

Clearly d, d1, and d2 in the above are disconnected. And I don't want to
serialize d1 and d2 which would be a way to connect them all.

The problem is I don't know how d should be defined. The idea is that
the 'done' function in the client function is only called when both
threads d1 and d2 are done.

Can you give me any suggestions on how to implement myfunc()?

Thank you,

-- 
Pedro






From sflist at ihonk.com  Thu Aug 25 08:51:45 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 08:51:45 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <1124981505.28176.2.camel@localhost.localdomain>

Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
arguments of requestAvatar(), the logical place to find the broker has
to be in the mind." And whaddya know, there it is. Lovely. Thanks,
Glyph!

Steve




From dguaraglia at gmx.de  Thu Aug 25 09:02:21 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 12:02:21 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124980531.25858.2.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>	<430DD1C6.3050801@gmx.de>
	<1124980531.25858.2.camel@localhost.localdomain>
Message-ID: <430DDD7D.5090009@gmx.de>

Hi Steve,

Well, in that case you could override connectionMade and connectionLost 
in your protocol to append 'self' to a list in the factory. You don't 
even need to subclass the factory if you are careful enough (this means, 
if you check that the list exists before doing anything). Anyway, the 
simplest thing would be to declare the list in a sublcass of 
PBServerFactory.

Could be something like this:

class MyPBFactory(PBServerFactory):
    protocol = MyBroker
    connections = []
    ....

class MyBroker(Broker):
    def connectionMade(...):
       self.factory.connections.append(self)

    def connectionLost(...):
       self.factory.connections.remove(self)

Then you just use 'factory.connections' to look up for your particular 
connection, and do a 'loseConnection()" on it. I'm not pretty sure, but 
I think some of the protocols do even have this kind of connections list 
built in, but looking into the documentation it does seem that 
PBServerFactory is not one of those.

Hope it helps,

David

Steve Freitas wrote:

>Hi David,
>
>Thanks for the reply. I'm aware of using loseConnection() from inside
>the protocol, but I'm using PBServerFactory. So I'm looking for a way to
>choose an arbitrary PB client that's already connected and logged in
>(cred) through that factory and kill the connection -- in other words,
>of all the clients that may be connected to that factory, I need to know
>how to get the transport that I want, so I can call loseConnection() on
>it.
>
>If I need to subclass PBServerFactory, that's fine, but I'm hoping to
>find something a little more direct.
>
>Thanks,
>
>Steve
>
>On Thu, 2005-08-25 at 11:12 -0300, David Guaraglia wrote:
>  
>
>>Hi Steve,
>>
>>It depends, if you decide you should disconnect the client while 
>>processing data in the Protocol, then you can just 
>>"self.transport.loseConnection()".
>>
>>(e.g):
>>class MyProt(Protocol):
>>    dataReceived(data):
>>       if data <> "hello":
>>          self.transport.loseConnection()
>>       else:
>>          ....
>>
>>So the most important question is: where do you decide that you should 
>>disconnect the client?
>>
>>Hope this helps,
>>
>>David
>>
>>Steve Freitas wrote:
>>
>>    
>>
>>>Hi,
>>>
>>>In some cases I need to force a client to disconnect. Is there some
>>>factory call that I can use to do this? On the client side, I know I can
>>>use factory._broker.transport.loseConnection(), but on the server side,
>>>though I've looked at the source a bit, I'm not sure how to get at the
>>>correct transport.
>>>
>>>Thanks!
>>>
>>>Steve
>>> 
>>>
>>>      
>>>




From dguaraglia at gmx.de  Thu Aug 25 09:03:57 2005
From: dguaraglia at gmx.de (David Guaraglia)
Date: Thu, 25 Aug 2005 12:03:57 -0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124981505.28176.2.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<1124981505.28176.2.camel@localhost.localdomain>
Message-ID: <430DDDDD.9090706@gmx.de>

LOL, I just finished writing a lengthy mail explaining an unlikely solution!

Nice to hear you already got this done :)

David

Steve Freitas wrote:

>Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
>arguments of requestAvatar(), the logical place to find the broker has
>to be in the mind." And whaddya know, there it is. Lovely. Thanks,
>Glyph!
>
>Steve
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>




From tv at twistedmatrix.com  Thu Aug 25 10:08:41 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 25 Aug 2005 19:08:41 +0300
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
Message-ID: <430DED09.9090308@twistedmatrix.com>

Pedro Sanchez wrote:
> Can you give me any suggestions on how to implement myfunc()?

twisted.internet.defer.gatherResults()



From tv at twistedmatrix.com  Thu Aug 25 10:10:46 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 25 Aug 2005 19:10:46 +0300
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DDD7D.5090009@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>	<430DD1C6.3050801@gmx.de>	<1124980531.25858.2.camel@localhost.localdomain>
	<430DDD7D.5090009@gmx.de>
Message-ID: <430DED86.8090808@twistedmatrix.com>

David Guaraglia wrote:
> class MyPBFactory(PBServerFactory):
>    protocol = MyBroker
>    connections = []
>    ....

That makes all MyPBFactory instances' connections attribute refer to the
same list. That may not be what you wanted.



From gns24 at sphinx.mythic-beasts.com  Thu Aug 25 10:50:28 2005
From: gns24 at sphinx.mythic-beasts.com (Graham Stratton)
Date: Thu, 25 Aug 2005 17:50:28 +0100 (BST)
Subject: [Twisted-Python] Transport for news client
In-Reply-To: <430DED09.9090308@twistedmatrix.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430DED09.9090308@twistedmatrix.com>
Message-ID: <Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>

Hi,

I'm trying to use twisted.news.nntp.NNTPClient.  As I understand it, to
connect to the server I need to call makeConnection,  to which I need to
pass a transport.  How do I create a suitable transport?  I've looked at
what implements ITransport, and nothing appeals.

Many thanks,

Graham



From itamar at itamarst.org  Thu Aug 25 10:51:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 25 Aug 2005 12:51:19 -0400
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <1124978264.18072.7.camel@localhost.localdomain>
References: <1124978264.18072.7.camel@localhost.localdomain>
Message-ID: <1124988680.8219.15.camel@localhost.localdomain>

On Thu, 2005-08-25 at 07:57 -0600, Steve Freitas wrote:

> In some cases I need to force a client to disconnect. Is there some
> factory call that I can use to do this? On the client side, I know I can
> use factory._broker.transport.loseConnection(), but on the server side,
> though I've looked at the source a bit, I'm not sure how to get at the
> correct transport.

remoteReference.broker.transport.loseConnection()





From itamar at itamarst.org  Thu Aug 25 11:10:22 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 25 Aug 2005 13:10:22 -0400
Subject: [Twisted-Python] Transport for news client
In-Reply-To: <Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430DED09.9090308@twistedmatrix.com>
	<Pine.LNX.4.58.0508251734150.6481@sphinx.mythic-beasts.com>
Message-ID: <1124989822.8219.18.camel@localhost.localdomain>

On Thu, 2005-08-25 at 17:50 +0100, Graham Stratton wrote:

> I'm trying to use twisted.news.nntp.NNTPClient.  As I understand it, to
> connect to the server I need to call makeConnection, 

Nope, you want to use reactor.connectTCP with a factory - see the client
howto in the main Twisted documentation.




From sflist at ihonk.com  Thu Aug 25 15:54:08 2005
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 25 Aug 2005 15:54:08 -0600
Subject: [Twisted-Python] How to forcibly disconnect PB client?
In-Reply-To: <430DDDDD.9090706@gmx.de>
References: <1124978264.18072.7.camel@localhost.localdomain>
	<1124981505.28176.2.camel@localhost.localdomain>
	<430DDDDD.9090706@gmx.de>
Message-ID: <1125006848.30163.6.camel@localhost.localdomain>

Heh, thanks for the help -- it wouldn't have been the first time I'd
have come up with a complicated solution to something Twisted made
easy. :-)

Thanks,

Steve

On Thu, 2005-08-25 at 12:03 -0300, David Guaraglia wrote:
> LOL, I just finished writing a lengthy mail explaining an unlikely solution!
> 
> Nice to hear you already got this done :)
> 
> David
> 
> Steve Freitas wrote:
> 
> >Ah ha! Like most of Twisted, deceptively simple. I thought, "Given the
> >arguments of requestAvatar(), the logical place to find the broker has
> >to be in the mind." And whaddya know, there it is. Lovely. Thanks,
> >Glyph!
> >
> >Steve
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >  
> >
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From fritcher at corp.earthlink.net  Thu Aug 25 16:00:53 2005
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Thu, 25 Aug 2005 18:00:53 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
Message-ID: <430E3F95.30303@corp.earthlink.net>

Pedro Sanchez wrote:
> Hello,
> 
> I need to implement a function (say, myfunc) that fires several
> independent Deferreds (using deferToThread), and that returns a deferred
> itself. A client of this function (say, client) is expected to do
> something like this:
> 
> def client():
>     def done(success)
>         if success:
>            print 'd1 and d2 are done'
> 
>     d = myfunc()
>     d.addCallback(done)
>     ...
> 
> 
> myfuct() above does something like this:
> 
> def myfunc():
>     def checkFunc1(success):
>     ...
> 
>     def checkFunc2(success):
>     ...
> 
>     d = defer.Deferred()
>     d1 = deferToThread(func1).addCallback(checkFunc1)
>     d2 = deferToThread(func2).addCallback(checkFunc2)
>     d.addCallback(????)
> 
>     return d
> 
> Clearly d, d1, and d2 in the above are disconnected. And I don't want to
> serialize d1 and d2 which would be a way to connect them all.
> 
> The problem is I don't know how d should be defined. The idea is that
> the 'done' function in the client function is only called when both
> threads d1 and d2 are done.

I think what you're looking for is DeferredList. You pass it a list of
deferreds you want to wait on and DeferredList will only fire its
callback method once all of the other deferred are complete. Read the
docs because the first callback you add to it will get a list of results
from all the defereds.

So for your above code, you'd want to do something like...

d1 = deferToThread(...)
d2 = deferToThread(...)
dl = defer.DeferredList([d1, d2])
dl.addCallback(...) # If needed here.
return dl

Just be aware to not add any additional callbacks to d1 or d2 after you
add them to the deferredlist.

Hope this helps. :)

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher at corp.earthlink.net
(404) 748-7262, x22262
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 253 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20050825/f1fd0150/attachment.sig>

From en.karpachov at ospaz.ru  Fri Aug 26 00:17:07 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 10:17:07 +0400
Subject: [Twisted-Python] Interfaces and adapters
Message-ID: <20050826101707.6efe7dcf.jk@ospaz.ru>

Let's say we defined an interface and an adapter:

class IFoo(zope.interfaces.Interface):
    pass

twisted.python.components.registerAdapter(Foo, Bar, IFoo)

As it is for now, the registerAdapter accepts any Foo, without regarding
what it implements.

Could somebody give any rationale why this condition shouldn't always hold:

foo = IFoo(bar)
assert IFoo.providedBy(foo)

Seems it is not unreasonable to expect this behaviour, because it is
exactly what interfaces are all about, or am I wrong?

-- 
jk



From andrew-twisted at puzzling.org  Fri Aug 26 00:30:26 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 16:30:26 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826101707.6efe7dcf.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
Message-ID: <20050826063026.GZ8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 10:17:07AM +0400, en.karpachov at ospaz.ru wrote:
> Let's say we defined an interface and an adapter:
> 
> class IFoo(zope.interfaces.Interface):
>     pass
> 
> twisted.python.components.registerAdapter(Foo, Bar, IFoo)
> 
> As it is for now, the registerAdapter accepts any Foo, without regarding
> what it implements.

It has to accept pretty much anything -- adapters can be e.g. functions as
well as classes.

> Could somebody give any rationale why this condition shouldn't always hold:
> 
> foo = IFoo(bar)
> assert IFoo.providedBy(foo)
> 
> Seems it is not unreasonable to expect this behaviour, because it is
> exactly what interfaces are all about, or am I wrong?

That's a pretty reasonable expectation.  I think emitting a warning if this
doesn't hold would be a sane thing to do, and it wouldn't break any code.

-Andrew.




From bob at redivi.com  Fri Aug 26 01:54:47 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 26 Aug 2005 00:54:47 -0700
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>


On Aug 25, 2005, at 11:30 PM, Andrew Bennetts wrote:

> On Fri, Aug 26, 2005 at 10:17:07AM +0400, en.karpachov at ospaz.ru wrote:
>
>> Let's say we defined an interface and an adapter:
>>
>> class IFoo(zope.interfaces.Interface):
>>     pass
>>
>> twisted.python.components.registerAdapter(Foo, Bar, IFoo)
>>
>> As it is for now, the registerAdapter accepts any Foo, without  
>> regarding
>> what it implements.
>>
>
> It has to accept pretty much anything -- adapters can be e.g.  
> functions as
> well as classes.
>
>
>> Could somebody give any rationale why this condition shouldn't  
>> always hold:
>>
>> foo = IFoo(bar)
>> assert IFoo.providedBy(foo)
>>
>> Seems it is not unreasonable to expect this behaviour, because it is
>> exactly what interfaces are all about, or am I wrong?
>>
>
> That's a pretty reasonable expectation.  I think emitting a warning  
> if this
> doesn't hold would be a sane thing to do, and it wouldn't break any  
> code.

It would certainly slow it down, though.  I think this is a  
"consenting adults" kind of scenario.  If someone registers an  
adapter, they probably didn't do it by accident!

-bob




From en.karpachov at ospaz.ru  Fri Aug 26 02:00:39 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 12:00:39 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <20050826120039.56be717d.jk@ospaz.ru>

On Fri, 26 Aug 2005 16:30:26 +1000
Andrew Bennetts wrote:

> > Could somebody give any rationale why this condition shouldn't always hold:
> > 
> > foo = IFoo(bar)
> > assert IFoo.providedBy(foo)
> > 
> > Seems it is not unreasonable to expect this behaviour, because it is
> > exactly what interfaces are all about, or am I wrong?
> 
> That's a pretty reasonable expectation.  I think emitting a warning if this
> doesn't hold would be a sane thing to do, and it wouldn't break any code.

For me, raising CannotAdapt would be better choice. After all, getting an
object that implements requested interface is the very thing what
adaptation is used for.

If I, say, adapt WovenContext to ISession, I get a session object which
does not implement the ISession interface itself. Absurdly.

-- 
jk



From andrew-twisted at puzzling.org  Fri Aug 26 02:40:07 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 18:40:07 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826120039.56be717d.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
	<20050826120039.56be717d.jk@ospaz.ru>
Message-ID: <20050826084007.GA8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 12:00:39PM +0400, en.karpachov at ospaz.ru wrote:
> On Fri, 26 Aug 2005 16:30:26 +1000
> Andrew Bennetts wrote:
> 
> > > Could somebody give any rationale why this condition shouldn't always hold:
> > > 
> > > foo = IFoo(bar)
> > > assert IFoo.providedBy(foo)
> > > 
> > > Seems it is not unreasonable to expect this behaviour, because it is
> > > exactly what interfaces are all about, or am I wrong?
> > 
> > That's a pretty reasonable expectation.  I think emitting a warning if this
> > doesn't hold would be a sane thing to do, and it wouldn't break any code.
> 
> For me, raising CannotAdapt would be better choice. After all, getting an
> object that implements requested interface is the very thing what
> adaptation is used for.
> 
> If I, say, adapt WovenContext to ISession, I get a session object which
> does not implement the ISession interface itself. Absurdly.

Yep.  But that's a trivially fixable bug in that adapter.  And this is
exactly why raising an exception would be bad -- it will break code that
otherwise works fine.  Even though such code is arguably buggy, Twisted
tries reasonably hard not to break backwards compatibility without warning.
We couldn't raise CannotAdapt here without first giving DeprecationWarnings
for at least one release.

-Andrew.




From warner at lothar.com  Fri Aug 26 02:41:03 2005
From: warner at lothar.com (Brian Warner)
Date: Fri, 26 Aug 2005 01:41:03 -0700 (PDT)
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
Message-ID: <20050826.014103.07620193.warner@lothar.com>

> Trial currently does some black magic to support remote reporters,
> defined in t.trial.remote.  What use cases does t.trial.remote
> implement?  Does anyone actually use it?

Not me.

> Rumour has it that it was originally written to make buildbot easier
> to write.  However, I'm told that buildbot just parses stdio output.

Both rumors are correct. The buildbot currently just captures stdout/stderr
and parses the last few lines for the test-count summaries.

The original idea was to make a PB connection from the trial process to the
parent buildbot slave, and send fine-grained test results over that
connection. To accomplish this, we (slyphon and I) were planning to write a
Reporter class that would actually be distributed with the buildbot, then use
a trial option like --reporter-class=buildbot.trialreporter.RemoteReporter or
something. Another direction was to use PB running over stdin/stdout, using
the same scheme. The goal was to get a tuple of (testname, results,
exceptions, log.msg output, stdout, stderr, starttime, finishtime) for each
test, over on the buildslave, so that the buildbot status reporting could
give extremely fine-grained information about the tests which failed (perhaps
including full stack traces with local variables for the ERROR cases). The
most important thing to me is that we can get a list of test names and their
individual results, but having the trial.log text for each one separately
would make debugging test failures a lot easier (and the buildbot could
arrange to just mail the relevant parts of the logs to the person responsible
for that test, instead of sending the whole multi-megabyte logfile).

If I remember correctly, the extra Reporter functionality was there to give
buildbot enough feedback about tests starting/stopping to provide useful
status information (specifically to accurately update the ETA timing info: it
could eventually figure out that 45 tests out of 90 total means that it's N%
complete and therefore has an ETA of 2 minutes, etc). It's been a while since
I looked at the code, though.

I gave up on it at some point, mainly because the reactor cleanup routines
were getting in the way. (somewhat embarrassing because I was the one who put
many of those cleanup routines in there in the first place). Basically the PB
connection that was established by our RemoteReporter was torn down with a
vengeance by the clean-up-all-Selectables pass, flunking the first test and
condemning the rest to be run with no hope of ever delivering their status to
the buildslave. I decided to put off the whole clever machine-parseable
status thing until the trial's reactor cleanup had a way to let specific
selectables stick around.

So if that code is in the way, don't keep it around on account of the
buildbot. Having a pluggable reporter will be handy once reactor cleanup is
more convenient, but as long as that feature is retained in some form I think
we'll be able to figure out a way to get the status information to the
buildslave later.

cheers,
 -Brian

PS: another approach (implemented in trial at some point, I think, but I
don't believe I ever got buildbot to use it) was to jelly some status objects
and fling them out stdout in the hopes of being picked up by whoever launched
trial. This might have worked better, because one-way jelly over stdout
wouldn't have involved a Selectable (unlike two-way PB over stdio), so the
cleanup might not have stomped on it. However, I was uncomfortable with the
potential version skew of the code creating these jellied objects (coming
from twisted.trial) and the code that was hoping to interpret them (coming
from buildbot). The pluggable Reporter allowed the buildbot to supply the
code on both sides of the wire, which struck me as a better long-term
solution.



From andrew-twisted at puzzling.org  Fri Aug 26 02:47:36 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 26 Aug 2005 18:47:36 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
	<8524B0C8-0455-4BB6-85C0-1C8EBAC8FD02@redivi.com>
Message-ID: <20050826084736.GB8963@trogdor.home.puzzling.org>

On Fri, Aug 26, 2005 at 12:54:47AM -0700, Bob Ippolito wrote:
> 
> On Aug 25, 2005, at 11:30 PM, Andrew Bennetts wrote:
[...]
> >
> >That's a pretty reasonable expectation.  I think emitting a warning  if
> >this doesn't hold would be a sane thing to do, and it wouldn't break any
> >code.
> 
> It would certainly slow it down, though.  I think this is a  
> "consenting adults" kind of scenario.  If someone registers an  
> adapter, they probably didn't do it by accident!

Right.  The bug the OP has here isn't that the adapter shouldn't have been
registered, but that the adapter fails to properly declare what interfaces
it provides, so that the result of IBar(IFoo(x)) will fail even though x ->
IFoo and IFoo -> IBar adapters are registered.

The performance question is important... benchmarks of any changes here
would be a good idea.

A weaker solution would be to only check at registration time, but that's
uglier, because it only works for adapters that are classes, and that don't
have creative __new__ methods.  That's almost certainly 99% of adapters, but
ugly and incomplete solutions make me nervous.

Anyway, the underlying zope.interface machinery allows this -- and includes
doctest documentation that relies on this (it registers *ints* as adapters,
iirc!).  I'm inclined to agree with your "consenting adults" approach, but I
don't feel strongly either way.

-Andrew.




From en.karpachov at ospaz.ru  Fri Aug 26 04:09:10 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Fri, 26 Aug 2005 14:09:10 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826084007.GA8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru> <20050826063026.GZ8963@trog
	dor.home.puzzling.org> <20050826120039.56be717d.jk@ospaz.ru>
	<20050826084007.GA8963@trogdor.home.puzzling.org>
Message-ID: <20050826140910.77a9ce97.jk@ospaz.ru>

On Fri, 26 Aug 2005 18:40:07 +1000
Andrew Bennetts wrote:

> On Fri, Aug 26, 2005 at 12:00:39PM +0400, en.karpachov at ospaz.ru wrote:
> > 
> > If I, say, adapt WovenContext to ISession, I get a session object which
> > does not implement the ISession interface itself. Absurdly.
> 
> Yep.  But that's a trivially fixable bug in that adapter.  And this is

Should it be considered as a bug then?

> exactly why raising an exception would be bad -- it will break code that
> otherwise works fine.  Even though such code is arguably buggy, Twisted

One could say that the code in question is already broken. At least, the
exception would point to the programmer that they forgot to declare what
interfaces are implemented by the adapter.

> tries reasonably hard not to break backwards compatibility without warning.
> We couldn't raise CannotAdapt here without first giving DeprecationWarnings
> for at least one release.

Well, if raising CannotAdapt is not appropriate, then probably some
decorator to AdapterFactory could help? Something like (pseudocode):

def affirm(adapterFactory, interface):

     def safe_factory(orig):
          adapter = adapterFactory(orig)
          if not interface.providedBy(adapter):
               warn("Failed to adapt")
               adapter = MakeTheObjectToProvide(adapter, interface)
          return adapter

     return safe_factory

adapterFactory = affirm(adapterFactory, interface)

-- 
jk



From psanchez at nortel.com  Fri Aug 26 08:00:16 2005
From: psanchez at nortel.com (Pedro Sanchez)
Date: Fri, 26 Aug 2005 10:00:16 -0400
Subject: [Twisted-Python] How to "monitor" parallel executions of Deferreds
In-Reply-To: <430E3F95.30303@corp.earthlink.net>
References: <1124979050.12847.34.camel@pcard0ze.ca.nortel.com>
	<430E3F95.30303@corp.earthlink.net>
Message-ID: <1125064816.16031.8.camel@pcard0ze.ca.nortel.com>

I already tested DeferredList and it does just what I was looking for.

There was another suggestion to use defer.gatherResults() for which I
didn't find any documentation. I have yet to browse the code to see what
it does.

Thanks for the reply. 

-- 
Pedro



On Thu, 2005-25-08 at 18:00 -0400, Jason Fritcher wrote:
> Pedro Sanchez wrote:
> > Hello,
> > 
> > I need to implement a function (say, myfunc) that fires several
> > independent Deferreds (using deferToThread), and that returns a deferred
> > itself. A client of this function (say, client) is expected to do
> > something like this:
> > 
> > def client():
> >     def done(success)
> >         if success:
> >            print 'd1 and d2 are done'
> > 
> >     d = myfunc()
> >     d.addCallback(done)
> >     ...
> > 
> > 
> > myfuct() above does something like this:
> > 
> > def myfunc():
> >     def checkFunc1(success):
> >     ...
> > 
> >     def checkFunc2(success):
> >     ...
> > 
> >     d = defer.Deferred()
> >     d1 = deferToThread(func1).addCallback(checkFunc1)
> >     d2 = deferToThread(func2).addCallback(checkFunc2)
> >     d.addCallback(????)
> > 
> >     return d
> > 
> > Clearly d, d1, and d2 in the above are disconnected. And I don't want to
> > serialize d1 and d2 which would be a way to connect them all.
> > 
> > The problem is I don't know how d should be defined. The idea is that
> > the 'done' function in the client function is only called when both
> > threads d1 and d2 are done.
> 
> I think what you're looking for is DeferredList. You pass it a list of
> deferreds you want to wait on and DeferredList will only fire its
> callback method once all of the other deferred are complete. Read the
> docs because the first callback you add to it will get a list of results
> from all the defereds.
> 
> So for your above code, you'd want to do something like...
> 
> d1 = deferToThread(...)
> d2 = deferToThread(...)
> dl = defer.DeferredList([d1, d2])
> dl.addCallback(...) # If needed here.
> return dl
> 
> Just be aware to not add any additional callbacks to d1 or d2 after you
> add them to the deferredlist.
> 
> Hope this helps. :)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Fri Aug 26 10:12:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Aug 2005 12:12:02 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826063026.GZ8963@trogdor.home.puzzling.org>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trogdor.home.puzzling.org>
Message-ID: <1125072722.8930.15.camel@localhost.localdomain>

On Fri, 2005-08-26 at 16:30 +1000, Andrew Bennetts wrote:

> > As it is for now, the registerAdapter accepts any Foo, without regarding
> > what it implements.
> 
> It has to accept pretty much anything -- adapters can be e.g. functions as
> well as classes.
> 
> > Could somebody give any rationale why this condition shouldn't always hold:
> > 
> > foo = IFoo(bar)
> > assert IFoo.providedBy(foo)
> > 
> > Seems it is not unreasonable to expect this behaviour, because it is
> > exactly what interfaces are all about, or am I wrong?

If the adapter is a function, the function may not implement the
interface. The actual expected behavior is that the result of *calling*
the adapter *provides* the interface. An adapter class may well
implement the interface in order for this to happen, but it's not a
necessary condition.






From en.karpachov at ospaz.ru  Fri Aug 26 15:17:54 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 01:17:54 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <1125072722.8930.15.camel@localhost.localdomain>
References: <20050826101707.6efe7dcf.jk@ospaz.ru> <20050826063026.GZ8963@trog
	dor.home.puzzling.org>
	<1125072722.8930.15.camel@localhost.localdomain>
Message-ID: <20050827011754.12b3590e.jk@ospaz.ru>

On Fri, 26 Aug 2005 12:12:02 -0400
Itamar Shtull-Trauring wrote:

> > > Could somebody give any rationale why this condition shouldn't always hold:
> > > 
> > > foo = IFoo(bar)
> > > assert IFoo.providedBy(foo)
> > > 
> > > Seems it is not unreasonable to expect this behaviour, because it is
> > > exactly what interfaces are all about, or am I wrong?
> 
> If the adapter is a function, the function may not implement the
> interface. The actual expected behavior is that the result of *calling*
> the adapter *provides* the interface. An adapter class may well
> implement the interface in order for this to happen, but it's not a
> necessary condition.

That's true, and I don't see how does it differ from my pseudocode example.
And neither the twisted.web.server.Session class implements, nor it's
objects provides the ISession interface.

-- 
jk



From itamar at itamarst.org  Fri Aug 26 16:00:34 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Aug 2005 18:00:34 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827011754.12b3590e.jk@ospaz.ru>
References: <20050826101707.6efe7dcf.jk@ospaz.ru>
	<20050826063026.GZ8963@trog dor.home.puzzling.org>
	<1125072722.8930.15.camel@localhost.localdomain>
	<20050827011754.12b3590e.jk@ospaz.ru>
Message-ID: <1125093634.8930.28.camel@localhost.localdomain>

On Sat, 2005-08-27 at 01:17 +0400, en.karpachov at ospaz.ru wrote:

> > If the adapter is a function, the function may not implement the
> > interface. The actual expected behavior is that the result of *calling*
> > the adapter *provides* the interface. An adapter class may well
> > implement the interface in order for this to happen, but it's not a
> > necessary condition.
> 
> That's true, and I don't see how does it differ from my pseudocode example.

Your pseudo-code does indeed match what I said, and would be useful to
have. I have a bug open for "mode of running that is slower but does a
lot more runtime checking" and this should probably be one of the
features.




From glyph at divmod.com  Fri Aug 26 21:22:38 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Aug 2005 23:22:38 -0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050826084007.GA8963@trogdor.home.puzzling.org>
Message-ID: <20050827032238.3914.842326235.divmod.quotient.8937@ohm>

Adaptation is slow enough as it is.  Enforcing this convention would be a fairly substantial cost for something which is already multiplying the cost of what would normally be a function call by tens or hundreds.

Not enforcing it is also in the spirit of Python's "language for consenting adults".  If your object really doesn't implement the interface, the unit tests will catch it, right? ;-)

I do hope that we eventually have a "pedantic mode" where Twisted will spew copious warnings about things like this, but in the default case it's just not worth the effort to dot every i and cross every |.




From glyph at divmod.com  Fri Aug 26 21:27:55 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Aug 2005 23:27:55 -0400
Subject: [Twisted-Python] t.trial.remote -- does anyone use it?
In-Reply-To: <20050826.014103.07620193.warner@lothar.com>
Message-ID: <20050827032755.3914.1950332112.divmod.quotient.8939@ohm>

>PS: another approach (implemented in trial at some point, I think, but I
>don't believe I ever got buildbot to use it) was to jelly some status objects
>and fling them out stdout in the hopes of being picked up by whoever launched
>trial. This might have worked better, because one-way jelly over stdout
>wouldn't have involved a Selectable (unlike two-way PB over stdio), so the
>cleanup might not have stomped on it. However, I was uncomfortable with the
>potential version skew of the code creating these jellied objects (coming
>from twisted.trial) and the code that was hoping to interpret them (coming
>from buildbot). The pluggable Reporter allowed the buildbot to supply the
>code on both sides of the wire, which struck me as a better long-term
>solution.

The problem with this approach is that really, *everything* in trial ought to be going through the reactor, and cleanup will have to be smart enough to understand which objects shouldn't be cleaned up (generalizing the case of the waker, for example).

Pluggable reporters are indeed a worthwhile idea, but could we make them an actual plugin interface with twisted?  Passing classnames on the commandline is verbose and pretty gross IMHO (except for cases like the test-case-name, where you're actually referring to the user of the program's code) and it should use a domain-specific plugin name... aside from the aesthetic concern though, using plugins makes it possible to have 'trial --help' (or the Trial->Help menu option in your favorite twisted-enabled IDE...) list all possible reporter plugins, and to reduce confusion between import errors related to trial bugs and import errors related to plugins being unavailable or misspelled.



From en.karpachov at ospaz.ru  Sat Aug 27 03:09:21 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 13:09:21 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827032238.3914.842326235.divmod.quotient.8937@ohm>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>
	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
Message-ID: <20050827130921.024a1e33.jk@ospaz.ru>

On Fri, 26 Aug 2005 23:22:38 -0400
glyph at divmod.com wrote:

> Adaptation is slow enough as it is.  Enforcing this convention would be a fairly substantial cost for something which is already multiplying the cost of what would normally be a function call by tens or hundreds.
> 
> Not enforcing it is also in the spirit of Python's "language for consenting adults".  If your object really doesn't implement the interface, the unit tests will catch it, right? ;-)

For an object I own, yes, that's right. For someone else's objects, I'm not
sure how to deal with them.

The question is, if the object doesn't declare itself provides the
interface it adapts to, should this be considered as a bug? If so, then we
have it with twisted.web.server.Session and nevow.guard.GuardSession (and
probably the same situation with twisted.web2).

There is another problem with it. The twisted.web.server.Session cannot
declare itself implementing nevow.inevow.ISession as it doesn't know
anything about nevow; but nevow registers it as default adapter from
WovenContext to inevow.ISession. So we have a situation:

    session = inevow.ISession(ctx)
    assert inevow.ISession.providedBy(sess) # oops! it is not

What use in the adaptation above then? It's not really an adapter to the
interface we need but just some arbitrary function call, not related to
interfaces at all, incidentally looking like an adapter.

Probably, a decorator to the adapterFactory could help; even if all got a
bit slower, we'll get more correct behaviour. Anyway, is it that slower?
I've heard the nevow as well as Python are not about speed, but about
building robust applications.

-- 
jk



From dialtone at divmod.com  Sat Aug 27 05:47:58 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Sat, 27 Aug 2005 13:47:58 +0200
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827130921.024a1e33.jk@ospaz.ru>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz.ru>
Message-ID: <431052EE.5050808@divmod.com>

en.karpachov at ospaz.ru wrote:

>The question is, if the object doesn't declare itself provides the
>interface it adapts to, should this be considered as a bug? If so, then we
>have it with twisted.web.server.Session and nevow.guard.GuardSession (and
>probably the same situation with twisted.web2).
>  
>
twisted.web2 is yet to come and also nevow working on it although
there's a branch in nevow
that works with it right now. So everything is in flux and yet to be
decided.

>There is another problem with it. The twisted.web.server.Session cannot
>declare itself implementing nevow.inevow.ISession as it doesn't know
>anything about nevow; but nevow registers it as default adapter from
>WovenContext to inevow.ISession. So we have a situation:
>
>    session = inevow.ISession(ctx)
>    assert inevow.ISession.providedBy(sess) # oops! it is no
>
>What use in the adaptation above then? It's not really an adapter to the
>interface we need but just some arbitrary function call, not related to
>interfaces at all, incidentally looking like an adapter.
>  
>
Woah, wait a bit :)
If you want to really use sessions in nevow you have to use guard, if
you use guard the session
object will be GuardSession that knows about nevow and can implement
inevow.ISession.
Currently GuardSession doesn't implement inevow.ISession but will in a
sec when I commit the fix.

If you don't use guard you are really getting a server.Session object
from twisted.web returned by
nevow.appserver.sessionFactory that calls NevowRequest.getSession()
which will return the GuardSession
if you are using guard or the other one if not (as I already said). Oh,
server.Session does suck.

>Probably, a decorator to the adapterFactory could help; even if all got a
>bit slower, we'll get more correct behaviour. Anyway, is it that slower?
>I've heard the nevow as well as Python are not about speed, but about
>building robust applications.
>  
>
True, but doing more than what is really needed doesn't do good anyway.
Losing speed for free is not something
you really wish.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4.1
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From en.karpachov at ospaz.ru  Sat Aug 27 07:52:49 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sat, 27 Aug 2005 17:52:49 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <431052EE.5050808@divmod.com>
References: <20050826084007.GA8963@trogdor.home.puzzling.org> <2005082703223
	8.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz .ru>
	<431052EE.5050808@divmod.com>
Message-ID: <20050827175249.4799af7f.jk@ospaz.ru>

On Sat, 27 Aug 2005 13:47:58 +0200
Valentino Volonghi aka Dialtone wrote:

> twisted.web2 is yet to come and also nevow working on it although
> there's a branch in nevow
> that works with it right now. So everything is in flux and yet to be
> decided.

Of course, I'm aware of that but I couldn't help but try it right now :)

> If you want to really use sessions in nevow you have to use guard, if
> you use guard the session
> object will be GuardSession that knows about nevow and can implement
> inevow.ISession.
> Currently GuardSession doesn't implement inevow.ISession but will in a
> sec when I commit the fix.

Good news, thanks! I'd like to operate with interfaces, not with
implementation classes:

registerAdapter(MyUserInfo, ISession, IMyUserInfo)

> If you don't use guard you are really getting a server.Session object
> from twisted.web returned by
> nevow.appserver.sessionFactory that calls NevowRequest.getSession()
> which will return the GuardSession
> if you are using guard or the other one if not (as I already said). Oh,
> server.Session does suck.

Ok. I didn't know that using guard is mandatory for sessions in the Nevow,
but now I do. Deprecation warning about twisted.web.server.Session as the
default adapter would be nice, eventually.

Thanks for the suggestion.

-- 
jk



From andrew-twisted at puzzling.org  Sat Aug 27 10:07:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 28 Aug 2005 02:07:09 +1000
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827130921.024a1e33.jk@ospaz.ru>
References: <20050826084007.GA8963@trogdor.home.puzzling.org>
	<20050827032238.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz.ru>
Message-ID: <20050827160709.GF8963@trogdor.home.puzzling.org>

On Sat, Aug 27, 2005 at 01:09:21PM +0400, en.karpachov at ospaz.ru wrote:
[...]
> There is another problem with it. The twisted.web.server.Session cannot
> declare itself implementing nevow.inevow.ISession as it doesn't know
> anything about nevow; but nevow registers it as default adapter from
> WovenContext to inevow.ISession. So we have a situation:

zope.interface allows for this case -- nevow.inevow just needs to say:

    zope.interface.classImplements(twisted.web.server.Session, ISession)

-Andrew.




From en.karpachov at ospaz.ru  Sun Aug 28 07:42:41 2005
From: en.karpachov at ospaz.ru (en.karpachov at ospaz.ru)
Date: Sun, 28 Aug 2005 17:42:41 +0400
Subject: [Twisted-Python] Interfaces and adapters
In-Reply-To: <20050827160709.GF8963@trogdor.home.puzzling.org>
References: <20050826084007.GA8963@trogdor.home.puzzling.org> <20050827032238
	.3914.842326235.divmod.quotient.8937@ohm>
	<20050827130921.024a1e33.jk@ospaz. ru>
	<20050827160709.GF8963@trogdor.home.puzzling.org>
Message-ID: <20050828174241.5ca3022c.jk@ospaz.ru>

On Sun, 28 Aug 2005 02:07:09 +1000
Andrew Bennetts wrote:

> zope.interface allows for this case -- nevow.inevow just needs to say:
> 
>     zope.interface.classImplements(twisted.web.server.Session, ISession)

Good idea. If the Nevow did this workaround at it's startup time, it would
be useful.

-- 
jk



From wpollans at gmail.com  Sun Aug 28 09:22:07 2005
From: wpollans at gmail.com (Warren Pollans)
Date: Sun, 28 Aug 2005 11:22:07 -0400
Subject: [Twisted-Python] twisted 1.3.0 unit test errors
Message-ID: <01c4e68f3996ec7d624fc5c99716b740@gmail.com>

Hello,

I've started installing selenium on my ibook (OSX.3.9, python 2.3)

I just installed Twisted 1.3.0.  When I run admin/runtests from the  
install directory, I get the following results - Are these failures and  
errors acceptable?  I've installed pyOpenSSL and pyCrypto, but not  
pySerial

FAILED (failures=4, errors=2, skips=33, expectedFailures=4)

Are these acceptable?  Or what do I need to do to try to fix this  
before continuing the selenium install?

Thanks,

Warren

======================================================================== 
=======
FAILURE: testWhich (twisted.test.test_process.UtilTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_process.py",  
line 661, in testWhich
     self.assertEquals(paths, [
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 127, in failUnlessEqual
     raise FailTest, (msg or '%r != %r' % (first, second))
FailTest: ['foo/baz/executable', 'baz/foo/executable',  
'baz/bar/executable'] != ['foo/baz/executable', 'baz/foo/executable']
======================================================================== 
=======
FAILURE: testWhichPathExt (twisted.test.test_process.UtilTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_process.py",  
line 676, in testWhichPathExt
     self.assertEquals(paths, [
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 127, in failUnlessEqual
     raise FailTest, (msg or '%r != %r' % (first, second))
FailTest: ['foo/baz/executable', 'baz/foo/executable',  
'baz/foo/executable.bin', 'baz/bar/executable'] !=  
['foo/baz/executable', 'baz/foo/executable', 'baz/foo/executable.bin']
======================================================================== 
=======
FAILURE: testDownloadPageError3  
(twisted.test.test_webclient.WebClientSSLTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_webclient.py",  
line 175, in testDownloadPageError3
     f = unittest.deferredError(d)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/util.py",  
line 106, in deferredError
     raise unittest.FailTest, "Deferred did not fail: %r" % (result,)
FailTest: Deferred did not fail: None
======================================================================== 
=======
FAILURE: testDownloadPageError3  
(twisted.test.test_webclient.WebClientTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File  
"/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_webclient.py",  
line 175, in testDownloadPageError3
     f = unittest.deferredError(d)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/util.py",  
line 106, in deferredError
     raise unittest.FailTest, "Deferred did not fail: %r" % (result,)
FailTest: Deferred did not fail: None
======================================================================== 
=======
ERROR: testConnectionRefused  
(twisted.test.test_udp.OldConnectedUDPTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_udp.py",  
line 123, in testConnectionRefused
     self.assertEquals(client.refused, 1)
AttributeError: Client instance has no attribute 'refused'
======================================================================== 
=======
ERROR: testConnectionRefused (twisted.test.test_udp.UDPTestCase)
------------------------------------------------------------------------ 
-------
Traceback (most recent call last):
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 252, in _runPhase
     stage(*args, **kwargs)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/unittest.py",  
line 274, in _main
     self.runner(self.method)
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/trial/runner.py",  
line 104, in runTest
     method()
   File "/Users/warren/Desktop/Twisted-1.3.0/twisted/test/test_udp.py",  
line 216, in testConnectionRefused
     self.assertEquals(client.refused, 1)
AttributeError: GoodClient instance has no attribute 'refused'
------------------------------------------------------------------------ 
-------
Ran 1227 tests in 501.362s

FAILED (failures=4, errors=2, skips=33, expectedFailures=4)




From glyph at divmod.com  Mon Aug 29 05:05:46 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 29 Aug 2005 07:05:46 -0400
Subject: [Twisted-Python] twisted 1.3.0 unit test errors
In-Reply-To: <01c4e68f3996ec7d624fc5c99716b740@gmail.com>
Message-ID: <20050829110546.3914.18511417.divmod.quotient.9691@ohm>



On Sun, 28 Aug 2005 11:22:07 -0400, Warren Pollans <wpollans at gmail.com> wrote:
>Hello,
>
>I've started installing selenium on my ibook (OSX.3.9, python 2.3)
>
>I just installed Twisted 1.3.0.  When I run admin/runtests from the  install 
>directory, I get the following results - Are these failures and  errors 
>acceptable?  I've installed pyOpenSSL and pyCrypto, but not  pySerial

Those do look like real problems, but we barely have the developer resources around here to maintain one stable branch at a time - 1.3 is sadly unmaintained.

Can you try this with 2.0, or better yet, SVN trunk?  the OS X buildbot is green, for trunk at least, so failures would be real news.



From mailinglists at smartology.nl  Mon Aug 29 08:29:39 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 29 Aug 2005 16:29:39 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <43131BD3.3080803@smartology.nl>

G'day,

I've created an xmlrpc server with twisted and was wondering if it would
be possible to use twisted logging and the python logging module
together. This because  the xmlrpc server uses a 'back-end' that
contains python modules that are also used by other processes/servers.

It should be possible if a twisted handler for the python logging module
existed ... it would then be a case of attaching the twisted handler to
the logger and the connection would be established.

Before I take on this task myself, I wonder if someone else has created
such a handler or maybe has some other/better way of interconnecting to
the python logging module?

BTW .. where can I find some (detailed) documentation on the twisted
logging system use?

Regards,
Remi Cool



From stefano at pragma2000.com  Mon Aug 29 11:25:16 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Mon, 29 Aug 2005 19:25:16 +0200
Subject: [Twisted-Python] gthreadless.py
Message-ID: <432742240508291025144be04e@mail.gmail.com>

Hello twisted folks,

I reimplemented gthreadless.py, originally implemented by Chris Armstrong.
My implementation aims to be more robust and is currently used in a
large project, therefore it is already usable.

http://www.pragma2000.com/wiki/index.php?GThreadless

gthreadless is a twisted module that makes use of greenlets to
implement the very nice primitive blockOn(d), that suspends the
execution in the current stack frame while waiting for the deferred to
fire. This way you can use a synchronous blocking-style programming
model while still using twisted, all nicely integrated.

It's a great great thing. Give it a try.

cheers,
Stefano Masini



From Henning.Ramm at mediapro-gmbh.de  Mon Aug 29 12:56:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 29 Aug 2005 20:56:16 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <F92274058556DE42B94B148EEFB91839021CB540@exchange-03.suedkurier.de>

>Before I take on this task myself, I wonder if someone else has created
>such a handler or maybe has some other/better way of interconnecting to
>the python logging module?

Sorry, I can't help you, but I'd need the same (plus logging to some wx window), and I've no time to investigate and write it myself - so would you please release it, if you implement such? I'd be very glad!


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Mon Aug 29 14:13:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Aug 2005 16:13:30 -0400
Subject: [Twisted-Python] Use python logging module with Twisted log
In-Reply-To: <43131BD3.3080803@smartology.nl>
References: <43131BD3.3080803@smartology.nl>
Message-ID: <1125346410.9440.87.camel@localhost.localdomain>

On Mon, 2005-08-29 at 16:29 +0200, Remi Cool wrote:

> BTW .. where can I find some (detailed) documentation on the twisted
> logging system use?

There isn't any, and really it needs some work. However, the basics are,
you write a callable that accepts a dictionary, and then:

twisted.python.log.addObserver(yourCallable)

The dictionary you get depends on whether it's log.msg or log.err. You
can then do what you want with it.

Important notes:
1. Never raise an exception from a log observer. It will be removed.

2. Never block in a log observer, as it may run in main Twisted thread.
This means you can't use socket or syslog Python-logging backends.

3. The observer needs to be thread safe if you anticipate using threads
in your program.





From Henning.Ramm at mediapro-gmbh.de  Mon Aug 29 14:37:43 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 29 Aug 2005 22:37:43 +0200
Subject: [Twisted-Python] Use python logging module with Twisted log
Message-ID: <F92274058556DE42B94B148EEFB91839021CB541@exchange-03.suedkurier.de>

>The dictionary you get depends on whether it's log.msg or log.err. You
>can then do what you want with it.

A little bit of information, what keys can occurr and what they mean would be nice.

How about this (if self.log is a logging.Logger);
code is partly stolen from twisted.python.log:

    def twisted_logger(self, logdict):
        """
        log observer for twisted.python.log, receives a dict and writes to self.log
        """
        if 'failure' in logdict:
            text = logdict['failure'].getTraceback()
        else:
            text = " ".join([str(m) for m in logdict["message"]])
        if logdict['isError']:
            self.log.error(text)
        else:
            self.log.warning(text)


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From nico at tekNico.net  Mon Aug 29 16:12:11 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 30 Aug 2005 00:12:11 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508291025144be04e@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
Message-ID: <df0180$jfu$1@sea.gmane.org>

> gthreadless is a twisted module that makes use of greenlets to
> implement the very nice primitive blockOn(d), that suspends the
> execution in the current stack frame while waiting for the deferred to
> fire. This way you can use a synchronous blocking-style programming
> model while still using twisted, all nicely integrated.

>From v.2.0, inside the twisted/internet/defer.py there are one class,
waitForDeferred, and one function, deferredGenerator, that implement a
similar pseudo-synchronous style, but using standard generators instead of
greenlets.

Defgen: Just one more reason that Twisted freakin' rocks
http://mesozoic.geecs.org/cogito/archives/000160.html

Furthermore, PEP 342 has been accepted for v.2.5:

Coroutines via Enhanced Generators
http://www.python.org/peps/pep-0342.html

its enhancements should further simplify such a coding style in Twisted.

However, a couple of recent blog entries show that this way of "hiding"
Deferreds raises some eyebrows within Twisted's inner circle:

Magical Concurrency Faeries or How I Learned To Stop Worrying and Love
Deferreds
http://www.livejournal.com/users/jcalderone/9531.html

Knowing Santa Claus is Fake Doesn't Ruin Christmas
http://www.livejournal.com/users/glyf/40037.html

Personally, I think that while explicitly specifying deferreds and
callbacks and errbacks can be quite verbose, and may sometimes obscure the
program flow, the comfort of seeing clearly the boundaries of each
uninterruptible execution unit makes it worthwhile.

-- 
Nicola Larosa - nico at tekNico.net

My god carries a hammer. Your god died nailed to a tree. Any questions?
 -- maxpublic on Slashdot, July 2005




From glyph at divmod.com  Mon Aug 29 20:12:17 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 29 Aug 2005 22:12:17 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,	consigning
	copyright means it is _not_ (C) you.	Let's keep this file simple,
	please.
In-Reply-To: <20050822215013.GB17669@sourdust.home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
Message-ID: <4313C081.9000800@divmod.com>

Mary Gardiner wrote:
> I was reminded at the sprint that I needed to ask about this.

Hi Mary, sorry for leaving this unanswered for so long.  I've been ... 
busy :)

> My understanding of the license policy was as per
> http://twistedmatrix.com/bugs/issue903 -- ie, that the *only* thing
> commiters needed to do was to MIT license their contributions. This is
> all that http://twistedmatrix.com/developers/contributing currently
> states. Therefore, that was what I'd been getting people who
> contributed documentation to agree to, and that was my understanding of
> the licencing and copyright of my own contributions as of the date when
> the MIT licensing of Twisted began.

OK, I apologize.  This was apparently the impression I gave many people.

Just for the record, my intent was originally that we leave all of the 
already-consigned contributors still consigned, refer to myself as 
"Twisted Matrix Labs" for the purposes of holding the copyrights, until 
such time as a foundation with that name could be established.  The 
individual contributors who could not consign (such as MIT) could be 
listed independently.

However, while the legal advice I've received over the years has 
conflicted, folks seem pretty unanimous on the fact that this is 
confusing and tenuous legally.  Let's just put the names of *all* the 
individual contributors back into the license.

I think that also obviates the need for the "CREDITS" file.



From mary-twisted at puzzling.org  Mon Aug 29 20:17:07 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 30 Aug 2005 12:17:07 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.	Let's keep this file
	simple, please.
In-Reply-To: <4313C081.9000800@divmod.com>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
	<4313C081.9000800@divmod.com>
Message-ID: <20050830021707.GL14250@home.puzzling.org>

On Mon, Aug 29, 2005, Glyph Lefkowitz wrote:
> However, while the legal advice I've received over the years has 
> conflicted, folks seem pretty unanimous on the fact that this is 
> confusing and tenuous legally.  Let's just put the names of *all* the 
> individual contributors back into the license.

This is an OK resolution to me. For that matter, so would firming up the
legal position of consignment, but I hear nought but a soft sighing
sound where we'd want volunteers to do that work.

-Mary

-- 
<spiv> AaronSw: You should never, ever be creating a transport... Twisted is supposed to do that for you.
<AaronSw> I should never create the tcp.Client stuff or I shouldn't manually set them as the transport?
<spiv> AaronSw: Use reactor.clientTCP (or better yet, reactor.connectTCP in CVS).
<spiv> Don't create tcp.Client directly either.       
<spiv> http://twistedmatrix.com/documents/TwistedDocs/Twisted-0.19.0/twisted/internet/interfaces_IReactorTCP.py.html
<spiv> AaronSw: But of course, that API is deprecated in 0.99  (but creating a tcp.Client directly is even more deprecated :P)
<AaronSw> Are you guys abstraction astronauts or something? ;-)



From mary-twisted at puzzling.org  Mon Aug 29 20:18:36 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 30 Aug 2005 12:18:36 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13641 - No,
	consigning copyright means it is _not_ (C) you.	Let's keep this file
	simple, please.
In-Reply-To: <20050830021707.GL14250@home.puzzling.org>
References: <E1DQ4bg-0007iQ-00@wolfwood>
	<20050822215013.GB17669@sourdust.home.puzzling.org>
	<4313C081.9000800@divmod.com>
	<20050830021707.GL14250@home.puzzling.org>
Message-ID: <20050830021836.GM14250@home.puzzling.org>

And thanks for taking the time out to reply, too.

-Mary

-- 
<fzZzy> why is the king in yellow paperback 20 bucks :(
<glyph> fzZzy: I *seriously* hope you mean "The Yellow Sign" or something
<glyph> fzZzy: if you found an actual copy of The King in Yellow, DON'T TALK ABOUT IT HERE



From stefano at pragma2000.com  Tue Aug 30 00:47:28 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 08:47:28 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <df0180$jfu$1@sea.gmane.org>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
Message-ID: <432742240508292347261339d8@mail.gmail.com>

On 8/30/05, Nicola Larosa <nico at teknico.net> wrote:
> From v.2.0, inside the twisted/internet/defer.py there are one class,
> waitForDeferred, and one function, deferredGenerator, that implement a
> similar pseudo-synchronous style, but using standard generators instead of
> greenlets.

I'm familiar with deferredGenerator. I've been using twisted full time
for two years and a half now and used deferredGenerator for quite a
lot too. That's why I reimplemented gthreadless! :)
 
> Furthermore, PEP 342 has been accepted for v.2.5:
> 
> Coroutines via Enhanced Generators
> http://www.python.org/peps/pep-0342.html
> 
> its enhancements should further simplify such a coding style in Twisted.

The problem with generators and enhanced generators, as I've been
discussing with a few people at Europython, is that they allow you to
jump back and forth between two stack *frames*. Whereas greenlets
support jumping among *full* stacks. This means that from within a
@deferredGreenlet'ed function you can make calls to other functions
that call blockOn, while from a @deferredGenerator'ed function you
can't call a method that in turn calls waitForDeferred.
 
While this may seems quite a subtle difference, I think it is not if
you look at it from the perspective of code readability -- let alone
the 3 liner horrible hack that waitForDeferred forces you to, at least
until PEP 342, as we all know.
 
> However, a couple of recent blog entries show that this way of "hiding"
> Deferreds raises some eyebrows within Twisted's inner circle:
> 
> Magical Concurrency Faeries or How I Learned To Stop Worrying and Love
> Deferreds
> http://www.livejournal.com/users/jcalderone/9531.html
> 
> Knowing Santa Claus is Fake Doesn't Ruin Christmas
> http://www.livejournal.com/users/glyf/40037.html
> 
> Personally, I think that while explicitly specifying deferreds and
> callbacks and errbacks can be quite verbose, and may sometimes obscure the
> program flow, the comfort of seeing clearly the boundaries of each
> uninterruptible execution unit makes it worthwhile.
> 

Believe me. I'm not one of those users in the "periphery of the
Twisted community" thinking that asynchronous programming is too hard.
I've been writing network code for quite a while and I matured the
idea that threads get in your way back when I still didn't know
python.
What I'm only concerned about now is coding *style*. Making code
better looking, thus more easily maintainable.
I rewrote gthreadless because having a usable implementation allowed
rewriting parts of my existing (big) application in a much simpler
way. And let me stress this: *parts* of it. I think gthreadless should
only be used here and there, not everywhere. One should always keep
thinking of deferreds, and even inside a @deferredGreenlet'ed function
one should be very clear that blockOn() really only spits back a
deferred to the reactor. But at least, you can debug your function
without having to jump back and forth 40 lines at a time just to get
to the proper callback or errback. I think sometimes this verbosity
may get in the way of the pythonic spirit of keeping stuff simple.
 
Here is an example that makes justice to this approach. It involves
Perspective Broker. Think of writing a web frontend to an application
on the backend that exports functionality through pb. (the code may
not work, I'm just making it up now without testing it)
(I hope everybody is familiar with nevow.stan. If not, take a look at
it. It's worth.)
 
@deferredGreenlet
def renderPage(self):
    dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
                        for elementId in self.idList]
    return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

Without gthreadless:

def renderPage(self):
    dataList = []
    def fetchDataRemotely(elementList):
        def cbFetch(elementData):
            dataList.append(elementData)
            if len(elementList) > 0:
                return fetchDataRemotely(elementList[1:])
        return self.backend.callRemote('getDataFromId',
elementId).addCallback(cbFetch)
    def cb(crap):
        return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for
txt in dataList ] ] ]
    return fetchDataRemotely(self.idList).addCallback(cb)

I hope everyone agrees that the level of complexity in *reading* and
*understanting* what the above code snippets do is not the same.
The above code could have actually been written the same way using
deferredGenerator and PEP 342, or in a slightly more verbose way
without PEP 342. But the example is simple. If instead of simply
callRemote() you had to use another method, that in turn needed
callRemote, maybe a couple of times (very possible if you use pb),
then greenlets would have been indispensable, in order to keep the
renderPage() the same as you saw.

Cheers,
stefano



From bahriesz at yahoo.com  Tue Aug 30 04:20:03 2005
From: bahriesz at yahoo.com (bahriesz at yahoo.com)
Date: Tue, 30 Aug 2005 03:20:03 -0700 (PDT)
Subject: [Twisted-Python] multiple connection to mysql with adbapi
Message-ID: <20050830102004.57179.qmail@web51307.mail.yahoo.com>

Hello,

i tried to make a connection to mysql with adbapi and
call thread that make use of these connection.
Everytime i call the thread, it makes new connection
to mysql. How do i close this connection in the thread
once it finish?

thanks.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From radeex at gmail.com  Tue Aug 30 06:54:42 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 30 Aug 2005 22:54:42 +1000
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <60ed19d405083005543f56f9dc@mail.gmail.com>

On 8/30/05, Stefano Masini <stefano at pragma2000.com> wrote:
> The problem with generators and enhanced generators, as I've been
> discussing with a few people at Europython, is that they allow you to
> jump back and forth between two stack *frames*. Whereas greenlets
> support jumping among *full* stacks. This means that from within a
> @deferredGreenlet'ed function you can make calls to other functions
> that call blockOn, while from a @deferredGenerator'ed function you
> can't call a method that in turn calls waitForDeferred.
> 
> While this may seems quite a subtle difference, I think it is not if
> you look at it from the perspective of code readability -- let alone
> the 3 liner horrible hack that waitForDeferred forces you to, at least
> until PEP 342, as we all know.

The effect that being able to call things that do context switches
without explicitly marking them as doing so is much farther reaching
than code readability. I consider it something of a feature that
deferredGenerator forces you to know when context switches will happen
at every level, and when I wrote gthreadless I was not intending it to
be used in a way that didn't require that same knowledge at every
level. And I don't think that this extra knowledge along the line
isn't detracting at all to readability, but instead helping it.

As I said in another thread, I'm really looking forward to PEP 342 and
I'm looking forward to obsoleting all of these other deferred +
cooperative multitasking things I've written (threadless, gthreadless,
and old-school-defgen) with newschool-PEP342-defgen.

And, just for onlookers, I'd like to point out that the code example
below is not showing the difference between non-explicit-greenlets and
explicit-defgen, but instead showing the difference between
explicit-greenlets and plain ond deferreds, which most of us in the
know about the various deferred+cooperative multitasking integration
modules already understand. No one as yet has shown an example showing
where implicit context switching is a good thing.

...

> Here is an example that makes justice to this approach. It involves
> Perspective Broker. Think of writing a web frontend to an application
> on the backend that exports functionality through pb. (the code may
> not work, I'm just making it up now without testing it)
> (I hope everybody is familiar with nevow.stan. If not, take a look at
> it. It's worth.)
> 
> @deferredGreenlet
> def renderPage(self):
>     dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
>                         for elementId in self.idList]
>     return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
> in dataList ] ] ]
> 
> Without gthreadless:
> 
> def renderPage(self):
>     dataList = []
>     def fetchDataRemotely(elementList):
>         def cbFetch(elementData):
>             dataList.append(elementData)
>             if len(elementList) > 0:
>                 return fetchDataRemotely(elementList[1:])
>         return self.backend.callRemote('getDataFromId',
> elementId).addCallback(cbFetch)
>     def cb(crap):
>         return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for
> txt in dataList ] ] ]
>     return fetchDataRemotely(self.idList).addCallback(cb)


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From glyph at divmod.com  Tue Aug 30 08:33:37 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 30 Aug 2005 10:33:37 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <43146E41.30408@divmod.com>

Stefano Masini wrote:

> Believe me. I'm not one of those users in the "periphery of the
> Twisted community" thinking that asynchronous programming is too hard.
> I've been writing network code for quite a while and I matured the
> idea that threads get in your way back when I still didn't know
> python.

Thanks for the example, Stefano!  I think that this serves as an 
excellent counterpoint to my blog ramblings, and I think your ideas 
about where using gthreadless is appropriate are right on target.

I think it might even be appropriate to include this in Twisted, with 
some appropriate disclaimers about needing to understand Deferreds 
*first*... what do you think?



From stefano at pragma2000.com  Tue Aug 30 08:36:43 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 16:36:43 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <60ed19d405083005543f56f9dc@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<60ed19d405083005543f56f9dc@mail.gmail.com>
Message-ID: <4327422405083007362cc98f3a@mail.gmail.com>

On 8/30/05, Christopher Armstrong <radeex at gmail.com> wrote:
> The effect that being able to call things that do context switches
> without explicitly marking them as doing so is much farther reaching
> than code readability. I consider it something of a feature that
> deferredGenerator forces you to know when context switches will happen
> at every level, and when I wrote gthreadless I was not intending it to
> be used in a way that didn't require that same knowledge at every
> level. And I don't think that this extra knowledge along the line
> isn't detracting at all to readability, but instead helping it.

I can agree on this.

> And, just for onlookers, I'd like to point out that the code example
> below is not showing the difference between non-explicit-greenlets and
> explicit-defgen, but instead showing the difference between
> explicit-greenlets and plain ond deferreds, which most of us in the

You are perfectly right.
After my first post the discussion went on privately between me and
Nicola, so I should post some of it here, since it contains exactly
such example.

I'll elaborate a bit on my first example, that was as follows (just to
remind and get started with the rest):

@deferredGreenlet
def renderPage(self):
  dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
                      for elementId in self.idList]
  return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

I basically build a list of values obtained by performing subsequent
calls to callRemote(), everytime passing a parameter from a list.

Let's say that instead of a list of parameters we have a list of
objects, and I build the list of values by calling a method on each of
these objects. Like so:

def renderPage(self):
  dataList = [ element.getData() for element in self.elementList ]
  return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
in dataList ] ] ]

As you can see, I took out @deferredGreenlet for now, because it's not needed.
Let's say that self.elementList is made of objects defined like this:

class ElementObject(object):
   def getData(self):
       return 1

Indeed @deferredGreenlet is not needed because I'm not even using pb.

Now, let's say that in a new version of the software I introduce
objects that in order to obtain the result of getData() have to go and
query a remote server through pb. Things get more complicated now
because getData() would return a deferred, while other objects would
return a straight result. This difference is very uncomfortable to
live with because you don't know how to treat the result. The are two
ways out, and in both cases you have to change code you've already
written:
1) return defer.succeed(1) instead of return 1
2) defer.maybeDeferred(element.getData()) instead of element.getData()

In other words, as soon as a blocking method pops up among your
methods, you're forced to change and treat all of them as blocking,
even by making up deferred if needed.
In any case, you're also compelled to change the code of renderPage()
from synchronos style to asynchronous, unless you use waitForDeferred.

I often found myself propagating maybeDeferred's back up several
levels in my code, and I didn't like it, to tell the truth.

On the other hand, if you use greenlets, you can keep renderPage the
same exact way as I wrote it the first time, you just need to decorate
it with @deferredGreenlet. And those methods that perform blocking
calls, simply need to wrap the deferreds with blockOn, and that's it.

Yes, I agree on the following point: code that you though was non
blocking, now can all of a sudden become blocking. In this respect,
yes, a gthreadless implementation that would force you to decorate
every method along the way could help gaining awareness.

But let's think about it: why is it so bad that a method that was
supposed to be non blocking now becomes blocking? I can't think of
anything else than shared resources that now can get accessed
concurrently by other parts of code. Right?
But this problem persists with pure-deferred programming style too!
The problem of concurrent access to shared resources does not depend
on the programming model being synchronous or asynchronous, but simply
on the presence of blocking operations. You have to use locks if you
want to protect a shared resource while you block on a lengthy
operation, no matter what programming model you're using.

So, I hope this example makes my point a little more clear. As I was
saying with Nicola, I don't think gthreadless should be used
everywhere, like it was a solution to some horrible problem with
asynchronous programming. Using deferreds is just great and the
awareness you gain of the internals of your implementation by using
them is just irreplaceable.
But *some* code snippets just come out so much more naturally if you
write them using a synchronous model, that being able to mix the two
is just a terrific feature I think.

cheers,
stefano



From stefano at pragma2000.com  Tue Aug 30 09:43:42 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 17:43:42 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43146E41.30408@divmod.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<43146E41.30408@divmod.com>
Message-ID: <43274224050830084366418ca2@mail.gmail.com>

On 8/30/05, Glyph Lefkowitz <glyph at divmod.com> wrote:
> I think it might even be appropriate to include this in Twisted, with
> some appropriate disclaimers about needing to understand Deferreds
> *first*... what do you think?

I think I agree. After all this is a discussion. If you have anything
to share with us other than rudeness, like maybe some code that will
help understand your point of view, I'll be the first one to change
his mind, and maybe decide that gthreadless is useless.



From itamar at itamarst.org  Tue Aug 30 10:40:41 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Aug 2005 12:40:41 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <432742240508292347261339d8@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
Message-ID: <1125420041.8541.30.camel@localhost.localdomain>

On Tue, 2005-08-30 at 08:47 +0200, Stefano Masini wrote:

> Here is an example that makes justice to this approach. It involves
> Perspective Broker. Think of writing a web frontend to an application
> on the backend that exports functionality through pb. (the code may
> not work, I'm just making it up now without testing it)
> (I hope everybody is familiar with nevow.stan. If not, take a look at
> it. It's worth.)
>  
> @deferredGreenlet
> def renderPage(self):
>     dataList = [ blockOn(self.backend.callRemote('getDataFromId', elementId))
>                         for elementId in self.idList]
>     return T.html[ T.body [ 'The result:', T.br, [ (txt, T.br) for txt
> in dataList ] ] ]

Let me give a counterargument to this specific example - regardless of
whether it uses greenlets or just Deferreds: it's slow. Really in this
case you'd want callRemote("getDataFromIds", self.idList), or at least
to run all the getDataFromId() in parallel, *not* wait for one to finish
before calling the other.

That being said, I have seen code where something like greenlets or
defgen really makes the code much easier to read, so having one of those
is worthwhile.




From glyph at divmod.com  Tue Aug 30 10:55:13 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 30 Aug 2005 12:55:13 -0400
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43274224050830084366418ca2@mail.gmail.com>
References: <432742240508291025144be04e@mail.gmail.com>	<df0180$jfu$1@sea.gmane.org>	<432742240508292347261339d8@mail.gmail.com>	<43146E41.30408@divmod.com>
	<43274224050830084366418ca2@mail.gmail.com>
Message-ID: <43148F71.4070304@divmod.com>

Stefano Masini wrote:

> I think I agree. After all this is a discussion. If you have anything
> to share with us other than rudeness, like maybe some code that will
> help understand your point of view, I'll be the first one to change
> his mind, and maybe decide that gthreadless is useless.

Erm...

You seem to have interpreted my point sarcastically.  I am not sure why 
it seemed rude, but I was being serious, and I thought, polite.



From stefano at pragma2000.com  Tue Aug 30 11:06:43 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 19:06:43 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <1125420041.8541.30.camel@localhost.localdomain>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<1125420041.8541.30.camel@localhost.localdomain>
Message-ID: <4327422405083010063699b7d2@mail.gmail.com>

On 8/30/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> Let me give a counterargument to this specific example - regardless of
> whether it uses greenlets or just Deferreds: it's slow. Really in this
> case you'd want callRemote("getDataFromIds", self.idList), or at least
> to run all the getDataFromId() in parallel, *not* wait for one to finish
> before calling the other.

Sure, I agree. That example should be taken as a proof of concept.
But we can easily think of another situation, where the parties carry
over some distributed computation that *does* require going back and
forth with intermediate results, like some cryptography algorithm for
example.



From stefano at pragma2000.com  Tue Aug 30 11:21:47 2005
From: stefano at pragma2000.com (Stefano Masini)
Date: Tue, 30 Aug 2005 19:21:47 +0200
Subject: [Twisted-Python] Re: gthreadless.py
In-Reply-To: <43148F71.4070304@divmod.com>
References: <432742240508291025144be04e@mail.gmail.com>
	<df0180$jfu$1@sea.gmane.org>
	<432742240508292347261339d8@mail.gmail.com>
	<43146E41.30408@divmod.com>
	<43274224050830084366418ca2@mail.gmail.com>
	<43148F71.4070304@divmod.com>
Message-ID: <432742240508301021596e4727@mail.gmail.com>

On 8/30/05, Glyph Lefkowitz <glyph at divmod.com> wrote:
> You seem to have interpreted my point sarcastically.  I am not sure why

... and this is the reply I was fearing would have arrived. :)
I must really apologize, it always makes you feel really stupid to
misinterpret politeness with sarcasm. I had this doubt ever since I
posted my unfortunate reply... I'm not sure either, I guess it was
defining your own blog posting as "ramblings" that made my head spin
the wrong way. Sorry. :)

By the way, back on track... sure! I'd be very happy to contribute to
the twisted project.

blushing,
stefano



From bgranger at scu.edu  Tue Aug 30 12:18:22 2005
From: bgranger at scu.edu (Brian Granger)
Date: Tue, 30 Aug 2005 11:18:22 -0700
Subject: [Twisted-Python] Nagle delays and twisted
Message-ID: <75D302E9-B746-455A-AFEC-E0E63711C029@scu.edu>

Hello all,

I have been implementing a custom protocol with twisted and have been  
having some odd performance problems.  My protocol consists of a TCP  
connection with multiple client/server commands.  For some types of  
commands, I found it took about 200 ms for the client and server to  
complete.  Because this was over loopback (which has a ping of 0.1  
ms), it seems very slow.  Because I am keeping the socket connected,  
I am not measuring the socket setup time.  Lucky for me, there was a  
discussion about this issue on comp.lang.python recently:

http://groups.google.com/group/comp.lang.python/browse_frm/thread/ 
507a711c61df7ad5/d6e871a24d8506a6#d6e871a24d8506a6

I guess the 200 ms delay is a well known effect of the Nagle  
Algorithm that TCP uses.  Supposedly, this delay can be eliminated by  
i) setting TCP_NODELAY on the socket or ii) avoiding sending multiple  
small messages without a response from the other end.

My understanding is that protocols that do the following will run  
into the problem:

C: short message 1
C: short message 2
S: reply for message 1 and 2

What is the preferred way of setting TCP_NODELAY on a socket  
controlled by twisted?  Are there any adverse side effects that this  
will have?

And second: does anyone have any tips for designing protocols that  
avoid this delay without setting TCP_NODELAY?  The obvious solution  
is to have a reply for each message:

C: short message 1
S: reply for 1
C: short message 2
S: reply for 2

But... this increases the latency of the protocol.  Any ideas or  
experiences with these issues would be greatly appreciated.

Thanks

Brian

  
  



From exarkun at divmod.com  Tue Aug 30 12:31:54 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 30 Aug 2005 14:31:54 -0400
Subject: [Twisted-Python] Nagle delays and twisted
In-Reply-To: <75D302E9-B746-455A-AFEC-E0E63711C029@scu.edu>
Message-ID: <20050830183154.3914.1198907817.divmod.quotient.10264@ohm>

On Tue, 30 Aug 2005 11:18:22 -0700, Brian Granger <bgranger at scu.edu> wrote:
>Hello all,
>
>I have been implementing a custom protocol with twisted and have been 
>having some odd performance problems.  My protocol consists of a TCP 
>connection with multiple client/server commands.  For some types of 
>commands, I found it took about 200 ms for the client and server to 
>complete.  Because this was over loopback (which has a ping of 0.1  ms), it 
>seems very slow.  Because I am keeping the socket connected,  I am not 
>measuring the socket setup time.  Lucky for me, there was a  discussion 
>about this issue on comp.lang.python recently:
>
>http://groups.google.com/group/comp.lang.python/browse_frm/thread/ 
>507a711c61df7ad5/d6e871a24d8506a6#d6e871a24d8506a6
>
>I guess the 200 ms delay is a well known effect of the Nagle  Algorithm that 
>TCP uses.  Supposedly, this delay can be eliminated by  i) setting 
>TCP_NODELAY on the socket or ii) avoiding sending multiple  small messages 
>without a response from the other end.
>
>My understanding is that protocols that do the following will run  into the 
>problem:
>
>C: short message 1
>C: short message 2
>S: reply for message 1 and 2
>
>What is the preferred way of setting TCP_NODELAY on a socket  controlled by 
>twisted?  Are there any adverse side effects that this  will have?
>

In your protocol's connectionMade (or at any other time you desire):

    self.transport.setTcpNoDelay(True)

Passing False will re-enable nagling.  The problems this can cause are primarily an increase in bandwidth usage (and thus increased latency if a link carrying the traffic is near or at saturation) if the change results in segments which would have been combined to be sent separately.

Jp



From bgranger at scu.edu  Tue Aug 30 22:17:10 2005
From: bgranger at scu.edu (Brian Granger)
Date: Tue, 30 Aug 2005 21:17:10 -0700
Subject: [Twisted-Python] deferToThread and thread pool
Message-ID: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>

I have a few questions about the default implementation of  
deferToThread.

1.  Does deferToThread use a thread pool by default?  If not, how can  
I enable this?

2.  Which thread are the callbacks and errbacks of the deferred  
returned by deferToThread run in?

Thanks in advance!

Brian





From radeex at gmail.com  Tue Aug 30 23:01:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 31 Aug 2005 15:01:08 +1000
Subject: [Twisted-Python] deferToThread and thread pool
In-Reply-To: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
References: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
Message-ID: <60ed19d405083022013e3c7f65@mail.gmail.com>

On 8/31/05, Brian Granger <bgranger at scu.edu> wrote:
> I have a few questions about the default implementation of
> deferToThread.
> 
> 1.  Does deferToThread use a thread pool by default?  If not, how can
> I enable this?

Yes

> 
> 2.  Which thread are the callbacks and errbacks of the deferred
> returned by deferToThread run in?

The reactor (i.e., probably the main) thread.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From andrew-twisted at puzzling.org  Tue Aug 30 23:18:08 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 31 Aug 2005 15:18:08 +1000
Subject: [Twisted-Python] deferToThread and thread pool
In-Reply-To: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
References: <584F1C98-95B8-4903-81DC-1A7B6DB05E6D@scu.edu>
Message-ID: <20050831051808.GL8963@trogdor.home.puzzling.org>

On Tue, Aug 30, 2005 at 09:17:10PM -0700, Brian Granger wrote:
> I have a few questions about the default implementation of  
> deferToThread.
> 
> 1.  Does deferToThread use a thread pool by default?  If not, how can  
> I enable this?

Yes.  You can adjust the threadpool size using
reactor.suggestThreadPoolSize:

    http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html#suggestThreadPoolSize
    http://twistedmatrix.com/projects/core/documentation/howto/threading.html#auto4

> 2.  Which thread are the callbacks and errbacks of the deferred  
> returned by deferToThread run in?

The main thread, i.e. the reactor thread.

-Andrew.




From yves at sita.lu  Wed Aug 31 04:03:03 2005
From: yves at sita.lu (Yves Glodt)
Date: Wed, 31 Aug 2005 12:03:03 +0200
Subject: [Twisted-Python] database connection through ssh tunnel using
	twisted
Message-ID: <43158057.5080901@sita.lu>

Hello,


(I am new to twisted, so please excuse me if my question is not 
appropriate...)

I am using the python module kinterbasdb [1] for connecting to a 
Firebird DB, and I wonder if it's possible, using twisted, to pass this 
connection through a ssh tunnel, which should be created on the fly by 
twisted (without running a /usr/bin/ssh commandline)...

best regards and thanks in advance,
Yves



[1]: 
http://kinterbasdb.sourceforge.net/dist_docs/usage.html#tutorial_connect



From matt at pollenation.net  Wed Aug 31 06:31:11 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 13:31:11 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
Message-ID: <4315A30F.6020007@pollenation.net>

Hi,

In response to the announcement of the Twisted Asynchronous Database Api
(tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
mention something I wrote.

[Unfortunately, tada does not use threads correctly so it's likely to
break. The author knows this and has added a warning to the module for now.]

A while back, I started messing around with making a standard, blocking
db-api module appear non-blocking but with a deferred API. I called it
laxdb and it's in my sandbox.

  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup

laxdb is quite literally an async db-api interface and not a
t.enterprise.adbapi style interface. In particular, it provides exactly
the same API (but deferred) and it doesn't take over transaction
management. It also doesn't wrongly call a cursor, "Transaction" ;-).

I recently went back to laxdb and finished it off, also adding a
connection pool implementation.

Now, I haven't used laxdb in a real project and there are no unit tests
but I think it's reasonably complete. It should work with any dbapi
module that has threadsafety level 1 or higher, just like adbapi.

If there's interest in this way of accessing a database then I would be
happy to write tests etc, move it into Twisted and maintain it.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From yves at sita.lu  Wed Aug 31 07:45:23 2005
From: yves at sita.lu (Yves Glodt)
Date: Wed, 31 Aug 2005 15:45:23 +0200
Subject: [Twisted-Python] database connection through ssh tunnel using
	twisted
In-Reply-To: <43158057.5080901@sita.lu>
References: <43158057.5080901@sita.lu>
Message-ID: <4315B473.9020104@sita.lu>

Yves Glodt wrote:
> Hello,
> 
> 
> (I am new to twisted, so please excuse me if my question is not 
> appropriate...)
> 
> I am using the python module kinterbasdb [1] for connecting to a 
> Firebird DB, and I wonder if it's possible, using twisted, to pass this 
> connection through a ssh tunnel, which should be created on the fly by 
> twisted (without running a /usr/bin/ssh commandline)...

Sorry for selfreplying, but I guess I need the conch.ssh.forwarding module:
http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.forwarding.html

The doc is a little spartanic, does anybody have an example around...?

I need a forwarding from box_a:3051 <-ssh-over-internet-> box_b:3050

box_a is my local box where my python daemon is running. This daemon 
connects from time to time to box_b over the internet.

Regards,
Yves


> best regards and thanks in advance,
> Yves
> 
> 
> 
> [1]: 
> http://kinterbasdb.sourceforge.net/dist_docs/usage.html#tutorial_connect
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> .
> 



From prabaharpython at yahoo.co.in  Wed Aug 31 08:04:02 2005
From: prabaharpython at yahoo.co.in (Mosas)
Date: Wed, 31 Aug 2005 15:04:02 +0100 (BST)
Subject: [Twisted-Python] how to install twisted in redhat linux?
Message-ID: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>

Dear sir,
        Is there any rpm packages available for
twisted , if any get me the link for the source
package. If anyone had tried twisted in Redhat linux
kindly guide me out for the installation. 



Regards,
S.Rajkumar


	

	
		
__________________________________________________________ 
Yahoo! India Matrimony: Find your partner online. Go to http://yahoo.shaadi.com



From itamar at itamarst.org  Wed Aug 31 08:25:08 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Aug 2005 10:25:08 -0400
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <1125498308.8767.21.camel@localhost.localdomain>

On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:

> A while back, I started messing around with making a standard, blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.
> 
>   svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>   http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup

I get the impression from your example:

    def connected(conn):
        curs = conn.cursor()
        d = curs.execute("select * from test")
        d.addCallback(lambda ignore: curs.fetchall())
        d.addCallback(lambda rows: pprint(rows))
        # ...

that you keep dispatching to a thread, then passing it back to Twisted
thread, repeatedly, unlike runInteraction which only does this once. I
would guess that this will slow down complex database interactions
somewhat.




From matt at pollenation.net  Wed Aug 31 08:34:38 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 15:34:38 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <1125498308.8767.21.camel@localhost.localdomain>
References: <4315A30F.6020007@pollenation.net>
	<1125498308.8767.21.camel@localhost.localdomain>
Message-ID: <4315BFFE.2020309@pollenation.net>



Itamar Shtull-Trauring wrote:

>On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
>
>  
>
>>A while back, I started messing around with making a standard, blocking
>>db-api module appear non-blocking but with a deferred API. I called it
>>laxdb and it's in my sandbox.
>>
>>  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>>  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>>    
>>
>
>I get the impression from your example:
>
>    def connected(conn):
>        curs = conn.cursor()
>        d = curs.execute("select * from test")
>        d.addCallback(lambda ignore: curs.fetchall())
>        d.addCallback(lambda rows: pprint(rows))
>        # ...
>
>that you keep dispatching to a thread, then passing it back to Twisted
>thread, repeatedly, unlike runInteraction which only does this once. I
>would guess that this will slow down complex database interactions
>somewhat.
>
Yep, I'm sure it will although I don't know how bad the effect is
because I have done no timing tests. Has anyone else investigated this
sort of issue before?

There is actually a comment in the module's docstring about the use of
threads:

  "The amount of thread context switching may hurt laxdb performance."

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From foom at fuhm.net  Wed Aug 31 08:35:27 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 31 Aug 2005 10:35:27 -0400
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>

On Aug 31, 2005, at 8:31 AM, Matt Goodall wrote:
> In response to the announcement of the Twisted Asynchronous  
> Database Api
> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
> mention something I wrote.
>
> A while back, I started messing around with making a standard,  
> blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.

I think it'd be nice to get something like one of these into twisted  
to supplement/replace adbapi, but it'd probably be best to make sure  
that the wrapper for blocking databases and pgasync can use the same  
interface first.

James



From exarkun at divmod.com  Wed Aug 31 08:51:08 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 31 Aug 2005 10:51:08 -0400
Subject: [Twisted-Python] Re: Sockets: code works locally but fails over LAN
In-Reply-To: <1125493380.805663.16800@g44g2000cwa.googlegroups.com>
Message-ID: <20050831145108.3914.126223980.divmod.quotient.10565@ohm>

On 31 Aug 2005 06:03:00 -0700, n00m <n00m at narod.ru> wrote:
>import socket, thread
>host, port = '192.168.0.3', 1434
>s1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
>s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
>s2.connect((host, 1433))
>s1.bind((host, port))
>s1.listen(1)
>cn, addr = s1.accept()
>
>def VB_SCRIPT():
>    while 1:
>        data = cn.recv(4096)
>        if not data: return
>        s2.send(data)
>        print 'VB_SCRIPT:' + data + '\n\n'
>
>def SQL_SERVER():
>    while 1:
>        data = s2.recv(4096)
>        if not data: return
>        cn.send(data)
>        print 'SQL_SERVER:' + data + '\n\n'
>
>thread.start_new_thread(VB_SCRIPT,())
>thread.start_new_thread(SQL_SERVER,())

This is about the same as:

    mktap portforward --port 1434 --host 192.168.0.3 --dest_port 1433
    twistd -f portforward.tap

You'll find the code behind these two commands here:

<http://cvs.twistedmatrix.com/cvs/trunk/twisted/tap/portforward.py?view=markup&rev=13278>

and here:

<http://cvs.twistedmatrix.com/cvs/trunk/twisted/protocols/portforward.py?view=markup&rev=12914>

And of course, the main Twisted site is <http://twistedmatrix.com/>.

Some differences between portforward.tap and your code include:

portforward.tap will accept multiple connections, rather than just one.  portforward.tap won't print out all the bytes it receives (I assume this is just for debugging purposes anyway - if not, a simple modification will cause it to do this).  portforward.tap won't non-deterministically drop traffic, since Twisted checks the return value of send() and properly re-transmits anything which has not actually been sent.

Hope this helps,

Jp



From disen at geo.unizh.ch  Wed Aug 31 09:19:27 2005
From: disen at geo.unizh.ch (Daniel Isenegger)
Date: Wed, 31 Aug 2005 17:19:27 +0200
Subject: [Twisted-Python] twisted.internet.error.ConnectionLost
Message-ID: <4315CA7F.8010800@geo.unizh.ch>

Hi
in an instance of protocol.basic.lineOnlyReceiver i i read in a file in 
a string and try to send this string to another instance of 
protocol.basic.lineOnlyReceiver trough the normal 
self.transport.write(theString + "\r\n")

when doing this i get the error message:
IK_IC_TSS 16:13:53:03  connectionLost() for the instance IK_IC_TSS due 
to reason: [Failure instance: Traceback (failure with no frames): 
twisted.internet.error.ConnectionLost: Connection to the other side was 
lost in a non-clean fashion.

The file is a normal text file of about 200KB.

I googled for similar types of errors, but could not find smth.

Is there an explicit string size limit or is it just the fact the the 
lineOnlyReceiver is not built for that kind of data transfer?

Thanks
 Dani




From matt at pollenation.net  Wed Aug 31 09:26:24 2005
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 31 Aug 2005 16:26:24 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>
References: <4315A30F.6020007@pollenation.net>
	<ABC7D03F-97FA-4C25-8FE1-1F0E813D4ACA@fuhm.net>
Message-ID: <4315CC20.1050601@pollenation.net>



James Y Knight wrote:

> On Aug 31, 2005, at 8:31 AM, Matt Goodall wrote:
>
>> In response to the announcement of the Twisted Asynchronous  Database
>> Api
>> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
>> mention something I wrote.
>>
>> A while back, I started messing around with making a standard,  blocking
>> db-api module appear non-blocking but with a deferred API. I called it
>> laxdb and it's in my sandbox.
>
>
> I think it'd be nice to get something like one of these into twisted 
> to supplement/replace adbapi, but it'd probably be best to make sure 
> that the wrapper for blocking databases and pgasync can use the same 
> interface first.


Well ... I did do that at first but pgasync isn't quite dbapi compatible
and it also has a couple of oddities that I'm not sure about.

My memory is a bit fuzzy about all this now but the main thing is that
pgasync queues queries.

There's basically a chain of deferreds internal to a pgasync connection.
In some ways, it makes pgasync easier to use, because it looks like
stuff is not deferred, but I actually found it irritating after a while.
Personally, I think if something is async it might as well look async.

There are also a number of bugs (in my opinion) which mean pgasync is
not dbapi  compatible but those can probably be fixed over time.

Anyway, I agree that this would be good but there are a couple of API
issues that need solving first before it's possible.

Note: I don't think laxdb is an adbapi replacement. adbapi has its
advantages but at the cost of losing a bit of control over how and when
database operations happen. They're probably just different.

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From mwl at point45.com  Wed Aug 31 09:43:57 2005
From: mwl at point45.com (Mark Leonard)
Date: Wed, 31 Aug 2005 17:43:57 +0200
Subject: [Twisted-Python] Another adbapi (and some Twisted goodness)
In-Reply-To: <4315A30F.6020007@pollenation.net>
References: <4315A30F.6020007@pollenation.net>
Message-ID: <4315D03D.9040800@point45.com>

All this talk of adbapi's has finally prompted us to release our adbapi. 
It has been in use for about 10 months now on production sites and we 
consider it stable. It is also somewhat dbapi compliant.

Also included in the package is a useful function decorator: defertrap, 
analagous to twisted's defgen in that it enables generators to yield 
deferreds, resuming them upon callback and synchronously raising 
exceptions on errback.

Download the package here:
http://www.point45.org/download/point45-0.01.tar.gz

We put up a trac wiki, which at some point (soon) will be home for the 
svn repo of these modules. In the mean time it hosts some examples on 
using the adbapi and defertrap:
http://www.point45.org/

As more of our modules become fit for public consumption we'll be adding 
them to this package.

-Mark

-- 
Mark Leonard - mwl at point45.com
Technical Director
Point 45 Entertainment (Pty) Ltd.
office: +27(0)21 4876900
mobile: +27(0)83 7373776









From npk.gangadhar at gmail.com  Wed Aug 31 10:17:08 2005
From: npk.gangadhar at gmail.com (Gangadhar NPK)
Date: Wed, 31 Aug 2005 21:47:08 +0530
Subject: [Twisted-Python] how to install twisted in redhat linux?
In-Reply-To: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
References: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
Message-ID: <61b4e70f0508310917160fc783@mail.gmail.com>

IIRC I could do a python setup.py install to install the twisted package
hth


On 8/31/05, Mosas <prabaharpython at yahoo.co.in> wrote:
> Dear sir,
>         Is there any rpm packages available for
> twisted , if any get me the link for the source
> package. If anyone had tried twisted in Redhat linux
> kindly guide me out for the installation.
> 
> 
> 
> Regards,
> S.Rajkumar
> 
> 
> 
> 
> 
> 
> __________________________________________________________
> Yahoo! India Matrimony: Find your partner online. Go to http://yahoo.shaadi.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Aug 31 10:34:07 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Aug 2005 12:34:07 -0400
Subject: [Twisted-Python] how to install twisted in redhat linux?
In-Reply-To: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
References: <20050831140402.77171.qmail@web8207.mail.in.yahoo.com>
Message-ID: <1125506047.13879.4.camel@localhost.localdomain>

On Wed, 2005-08-31 at 15:04 +0100, Mosas wrote:
> Dear sir,
>         Is there any rpm packages available for
> twisted , if any get me the link for the source
> package. If anyone had tried twisted in Redhat linux
> kindly guide me out for the installation. 

http://www.python.org/pyvault/ seems to have some.




From foom at fuhm.net  Wed Aug 31 15:50:50 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 31 Aug 2005 17:50:50 -0400
Subject: [Twisted-Python] Weekly Bug Summary
References: <E1EAaOI-0005Zu-00@pyramid.twistedmatrix.com>
Message-ID: <C95EDE8A-D0DD-495F-9B31-E6E1886C7286@fuhm.net>

So I forgot to generate this report for a few weeks now...but to make  
up for that, I made a crontab to do it for me, finally.

Bug summary
______________________
Since 2005-07-27 12:20:33.530000:
  Bugs opened: 29   Bugs closed: 28   Total open bugs: 418 (+1)
   Urgent: 10 (+1)
   Bug: 186 (+5)
   Feature: 151 (+1)
   Wish: 71 (-6)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE] CannotListenError (SO_REUSEADDR)  (6 days ago)
        http://twistedmatrix.com/bugs/issue1151 opened by hraban

                     ==== Bug ====
Raised Jellyable pb.Error doesn't jelly if raised in callback  (1 1/2  
hours ago)
        http://twistedmatrix.com/bugs/issue1156 opened by justinj

[DOCUMENTATION] Rename "HOWTOs" to "Developer Guide"  (yesterday)
        http://twistedmatrix.com/bugs/issue1155 opened by spiv

basic.LineReceiver doesn't handle variable line delimiters  (yesterday)
        http://twistedmatrix.com/bugs/issue1154 opened by jeffsilver

[WEB] web.proxy does not set or use 'Via' header  (1 week ago)
        http://twistedmatrix.com/bugs/issue1149 opened by jeffsilver

[DOCUMENTATION] Need a howto for Twisted's logging  
(twisted.python.log)  (yesterday)
        http://twistedmatrix.com/bugs/issue1153 opened by spiv

[DOCUMENTATION] Documentation: Aliases not covered in the API  
documentation  (1 week ago)
        http://twistedmatrix.com/bugs/issue1143 opened by moof

Combine twisted.manhole._inspectro.LoggingProtocol and  
twisted.protocols.policies.TrafficLoggingProtocol  (1 week ago)
        http://twistedmatrix.com/bugs/issue1150 opened by spiv

twisted.mail.smtp.py  timeout can cause runtime error  (1 week ago)
        http://twistedmatrix.com/bugs/issue1147 opened by xing

[DOCUMENTATION] Is the Deferred tutorial actually a good document?   
(2 weeks ago)
        http://twistedmatrix.com/bugs/issue1138 opened by remote

[DOCUMENTATION] Documentation: twisted.internet.reactor does not  
appear in the API docs  (1 week ago)
        http://twistedmatrix.com/bugs/issue1144 opened by moof

[DOCUMENTATION, WEBSITE] Generate official documents at commit time   
(1 week ago)
        http://twistedmatrix.com/bugs/issue1140 opened by hypatia

[WEBSITE] Web site menu disappears when window not big  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1137 opened by justinj

Documentation: man pages appear as source rather thn HTML on the doc  
website  (1 week ago)
        http://twistedmatrix.com/bugs/issue1146 opened by moof

Numerous broken URLs in documentation  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue1142 opened by TimothyFitz

[NEEP HELP] Update mktap.xhtml to reflect current best practices  (1  
week ago)
        http://twistedmatrix.com/bugs/issue1139 opened by hypatia

[CORE] Finite object leak in threadpool  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1134 opened by jeffsilver

[PATCH] gthreadless.py  (4 weeks ago)
        http://twistedmatrix.com/bugs/issue1129 opened by stefanomasini

trial misnames temporary directories  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1135 opened by exarkun

[CORE] possible leak/cycle-reference in baseclient &amp; connector   
(3 weeks ago)
        http://twistedmatrix.com/bugs/issue1131 opened by jerry

[FTP] [PATCH] FTPClientBasic PASS command problem  (3 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1130 opened by  
michele.petrazzo

Need to use portable windowing API  (3 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1133 opened by duanev

                     ==== Feature ====
[DOCUMENTATION, WEB] xmlrpc.html doesn't describe how to return  
errors to the client  (2 days ago)
        http://twistedmatrix.com/bugs/issue1152 opened by spiv

[DOCUMENTATION] Replace current finger examples with lifeless's and  
radix's work on a TDD finger example  (1 week ago)
        http://twistedmatrix.com/bugs/issue1148 opened by hypatia

Trial spews color codes by default  on win32  (1 week ago)
        http://twistedmatrix.com/bugs/issue1141 opened by TimothyFitz

[DOCUMENTATION] documenting some 'tips' for newbies  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1136 opened by tjs

[WEB] XML-RPC for web2 - propose API changes  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1132 opened by itamarst

Protocol-level wrapper for transport.loseConnection  (1 month ago)
        http://twistedmatrix.com/bugs/issue1128 opened by subterrific

                     ==== Wish ====
[DOCUMENTATION] Documentation: Reactor "quick reference"  (1 week ago)
        http://twistedmatrix.com/bugs/issue1145 opened by moof

Bugs Closed
______________________
                     ==== Bug ====
Numerous broken URLs in documentation  (1 week ago)
        http://twistedmatrix.com/bugs/issue1142 opened by  
TimothyFitz, closed by exarkun

[CORE, DOCUMENTATION] [PATCH] UDP Doc Update: Multicast Howto and  
Example  (2 months ago)
        http://twistedmatrix.com/bugs/issue1084 opened by ra1n,  
closed by hypatia

[DOCUMENTATION, PB] Doc-Example QuoteTap isn't easy to run  (18  
months ago)
        http://twistedmatrix.com/bugs/issue508 opened by nferchen,  
closed by hypatia

pbsimple.py code is missing from the "Using Perspective Broker" howto  
on web site  (3 months ago)
        http://twistedmatrix.com/bugs/issue1053 opened by mg, closed  
by hypatia

[DOCUMENTATION] [PATCH] Twisted overview howto needs updating  (19  
months ago)
        http://twistedmatrix.com/bugs/issue481 opened by jml, closed  
by hypatia

[APPLICATION, DOCUMENTATION] Application howto should have better  
explanation of services  (15 months ago)
        http://twistedmatrix.com/bugs/issue633 opened by hypatia,  
closed by hypatia

[DOCUMENTATION] [PATCH] Changes to HOWTO index page  (3 months ago)
        http://twistedmatrix.com/bugs/issue1043 opened by STemplar,  
closed by hypatia

[PATCH] Light editing of "Using Application" for flow and continuity   
(3 months ago)
        http://twistedmatrix.com/bugs/issue1052 opened by waterbug,  
closed by hypatia

[CORE] BUG: exceptions in setUpClass cause trial to exit prematurely   
(5 months ago)
        http://twistedmatrix.com/bugs/issue960 opened by exarkun,  
closed by exarkun

[TRIAL] Trial --tbformat=emacs now shows plain-style tracebacks  (9  
months ago)
        http://twistedmatrix.com/bugs/issue783 opened by radix,  
closed by exarkun

trial misnames temporary directories  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue1135 opened by exarkun,  
closed by exarkun

[FTP] bug in mozilla ftp support  (21 months ago)
        http://twistedmatrix.com/bugs/issue412 opened by slyphon,  
closed by spiv

[FTP] ftp blocks unless using a passive client  (11 months ago)
        http://twistedmatrix.com/bugs/issue723 opened by cablehead,  
closed by cablehead

TypeError in Failure.raiseException when using  
defer.deferredGenerator and perspective broker  (1 month ago)
        http://twistedmatrix.com/bugs/issue1103 opened by titty,  
closed by titty

[FTP] [PATCH] FTPClientBasic PASS command problem  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1130 opened by  
michele.petrazzo, closed by spiv

Need to use portable windowing API  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue1133 opened by duanev,  
closed by exarkun

                     ==== Feature ====
[DOCUMENTATION] Document how to write a Service correctly  (1 month ago)
        http://twistedmatrix.com/bugs/issue1118 opened by spiv,  
closed by hypatia

[DOCUMENTATION] Document Services available in Twisted  (1 month ago)
        http://twistedmatrix.com/bugs/issue1119 opened by spiv,  
closed by hypatia

[FTP] [PATCH] STOR, MKD, RMD and DELE for twisted.protocols.ftp.  (4  
months ago)
        http://twistedmatrix.com/bugs/issue1003 opened by mkerrin,  
closed by mkerrin

deferToThread decorator  (3 months ago)
        http://twistedmatrix.com/bugs/issue1071 opened by tjs, closed  
by tjs

Make Twisted pychecker friendly  (25 months ago)
        http://twistedmatrix.com/bugs/issue86 opened by spiv, closed  
by exarkun

                     ==== Wish ====
[DOCUMENTATION] Twisted complete but concise architecture view in  
Documentation  (13 months ago)
        http://twistedmatrix.com/bugs/issue650 opened by  
sridharinfinity, closed by hypatia

twisted.spread.util.StringPager.nextPage makes tons of string copies   
(18 months ago)
        http://twistedmatrix.com/bugs/issue548 opened by exarkun,  
closed by exarkun

Update download page with Python 2.4/1.3.0/Win32 installer  (6 months  
ago)
        http://twistedmatrix.com/bugs/issue900 opened by moonfallen,  
closed by exarkun

Naming the thread pools, especially for adbapi's ConnectionPool  (3  
months ago)
        http://twistedmatrix.com/bugs/issue1062 opened by bruce,  
closed by exarkun

quiet those deprecation warnings for deployment uses of deprecated  
code via mktap  (3 months ago)
        http://twistedmatrix.com/bugs/issue1059 opened by bruce,  
closed by exarkun

[DOCUMENTATION] "Converting from asyncore" Howto  (25 months ago)
        http://twistedmatrix.com/bugs/issue81 opened by itamarst,  
closed by exarkun

Cred needs pam checker, and tehre is already one  (3 months ago)
        http://twistedmatrix.com/bugs/issue1044 opened by liiwi,  
closed by exarkun







From radeex at gmail.com  Wed Aug 31 16:48:06 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 1 Sep 2005 08:48:06 +1000
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <1125498308.8767.21.camel@localhost.localdomain>
References: <4315A30F.6020007@pollenation.net>
	<1125498308.8767.21.camel@localhost.localdomain>
Message-ID: <60ed19d40508311548236f393a@mail.gmail.com>

On 9/1/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
> 
> > A while back, I started messing around with making a standard, blocking
> > db-api module appear non-blocking but with a deferred API. I called it
> > laxdb and it's in my sandbox.
> >
> >   svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
> >   http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
> 
> I get the impression from your example:
> 
>     def connected(conn):
>         curs = conn.cursor()
>         d = curs.execute("select * from test")
>         d.addCallback(lambda ignore: curs.fetchall())
>         d.addCallback(lambda rows: pprint(rows))
>         # ...
> 
> that you keep dispatching to a thread, then passing it back to Twisted
> thread, repeatedly, unlike runInteraction which only does this once. I
> would guess that this will slow down complex database interactions
> somewhat.

Yeah, but the usual way to use adbapi is the same, isn't it? i.e.,
runQuery calls. Sounds like you're comparing apples to oranges (on the
other hand, I guess it would be nice if lax-db had a runInteraction).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  
w----v----w-+



From matt at pollenation.net  Wed Aug 31 17:55:36 2005
From: matt at pollenation.net (Matt Goodall)
Date: Thu, 01 Sep 2005 00:55:36 +0100
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
In-Reply-To: <60ed19d40508311548236f393a@mail.gmail.com>
References: <4315A30F.6020007@pollenation.net>	<1125498308.8767.21.camel@localhost.localdomain>
	<60ed19d40508311548236f393a@mail.gmail.com>
Message-ID: <43164378.4060707@pollenation.net>

Christopher Armstrong wrote:
> On 9/1/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> 
>>On Wed, 2005-08-31 at 13:31 +0100, Matt Goodall wrote:
>>
>>
>>>A while back, I started messing around with making a standard, blocking
>>>db-api module appear non-blocking but with a deferred API. I called it
>>>laxdb and it's in my sandbox.
>>>
>>>  svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>>>  http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>>
>>I get the impression from your example:
>>
>>    def connected(conn):
>>        curs = conn.cursor()
>>        d = curs.execute("select * from test")
>>        d.addCallback(lambda ignore: curs.fetchall())
>>        d.addCallback(lambda rows: pprint(rows))
>>        # ...
>>
>>that you keep dispatching to a thread, then passing it back to Twisted
>>thread, repeatedly, unlike runInteraction which only does this once. I
>>would guess that this will slow down complex database interactions
>>somewhat.
> 
> 
> Yeah, but the usual way to use adbapi is the same, isn't it? i.e.,
> runQuery calls. Sounds like you're comparing apples to oranges (on the
> other hand, I guess it would be nice if lax-db had a runInteraction).
> 

Yes, adbapi dispatches to a thread but runInteraction can be used to
keep the number of dispatches to a minimum by allowing you to perform
multiple db operations in one go.

I guess laxdb could have something equivalent to runInteraction that
would let you work with the blocking database objects rather than the
wrappers. I don't think it should ever automatically commit or rollback
(unless explicitly told to, perhaps) like adbapi does.

A laxdb runInteraction might even make naturally sequential database
code easier to read and maintain too - it can get a bit messy at times.


I really see two main benefits of laxdb:

  1. It's just like dbapi only async. Of course, with that comes the
     "complexity" of deferreds.
  2. It gives you tight control over transactions.


Let me give some examples of point 2 ...


When you need multiple bits of information to process something, i.e. a
web request, you have a choice with adbapi:

  1. call runQuery multiple times, in a deferred chain or as a
     DeferredList, and collect all the bits together
  2. call runInteraction once, collect all the bits during the called
     function and return them all from the function as a tuple or some
     other object

Option 1 is not really a good choice. Not only can it get very ugly but,
critically, each of the runQuery calls happens in a different
transaction! It's not difficult to see how that could cause problems for
 some of the bits of ACID, especially consistency and isolation.

Option 2 only works when you know all the data you need which is not
always feasible because, often, you have unrelated bits of the
application wanting unrelated data.


Another scenario is that you need to SELECT ... FOR UPDATE some data,
use that (locked) data to perform other deferred operation, and update
the locked rows using the data we just collected from the "other
deferred operation".

I believe this is currently impossible with adbapi because it
automatically handles transactions and you can't do deferred stuff from
the runInteraction function because it's not running in the reactor's
thread.


axdb helps in both these scenarios. You can get a connection, do
whatever you want, even mixing database and other async operations, and
commit or rollback when you're complete.


laxdb also allows you to do things like process an entire web request
within a single transaction, if that is a requirement of your application.


Wow, that was a bit of a rant. Hopefully it explains why something like
laxdb may be useful as part of Twisted though. It's just a different way
of working that adbapi.


- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \	       Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From prousa at gmail.com  Wed Aug 31 18:57:16 2005
From: prousa at gmail.com (the procrastinator)
Date: Wed, 31 Aug 2005 19:57:16 -0500
Subject: [Twisted-Python] Py2exe and Oscar Implementation
Message-ID: <3d3e7a2705083117571352d970@mail.gmail.com>

I am working on a an executable AIM program. However, when i compile with 
py2exe, i get a runtime error:

ImportError: You need to have the Twisted Words package installed to use 
twisted.protocols.oscar. ...

However, I do have that installed. The *.py file works in Twisted. 

I have tried:
import twisted.words
from twisted import words

but i still get this error message when compiled.

Thank you in advance for any help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050831/39ebc3da/attachment.html>

From andrew-twisted at puzzling.org  Wed Aug 31 19:01:54 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 1 Sep 2005 11:01:54 +1000
Subject: [Twisted-Python] twisted.internet.error.ConnectionLost
In-Reply-To: <4315CA7F.8010800@geo.unizh.ch>
References: <4315CA7F.8010800@geo.unizh.ch>
Message-ID: <20050901010154.GO8963@trogdor.home.puzzling.org>

On Wed, Aug 31, 2005 at 05:19:27PM +0200, Daniel Isenegger wrote:
> Hi
> in an instance of protocol.basic.lineOnlyReceiver i i read in a file in 
> a string and try to send this string to another instance of 
> protocol.basic.lineOnlyReceiver trough the normal 
> self.transport.write(theString + "\r\n")

(You may find twisted.protocol.basic.FileSender helpful for this case)

> when doing this i get the error message:
> IK_IC_TSS 16:13:53:03  connectionLost() for the instance IK_IC_TSS due 
> to reason: [Failure instance: Traceback (failure with no frames): 
> twisted.internet.error.ConnectionLost: Connection to the other side was 
> lost in a non-clean fashion.
> 
> The file is a normal text file of about 200KB.
> 
> I googled for similar types of errors, but could not find smth.
> 
> Is there an explicit string size limit or is it just the fact the the 
> lineOnlyReceiver is not built for that kind of data transfer?

There is -- see the MAX_LENGTH attribute of LineOnlyReceiver.  As the
docstring says:

    @cvar MAX_LENGTH: The maximum length of a line to allow (If a
                      sent line is longer than this, the connection is dropped).
                      Default is 16384.

-Andrew.




From eddyxu at 126.com  Wed Aug 31 20:05:56 2005
From: eddyxu at 126.com (EddyXu)
Date: Thu, 01 Sep 2005 10:05:56 +0800
Subject: [Twisted-Python] How to make twisted server run as an deamon
Message-ID: <43166204.5090501@126.com>

Hi,all,
I need to write an deamon, by using the twisted. But it seems that it
could not use standard thread module to make it works. Any one can give
me some advice?





From bbum at mac.com  Wed Aug 31 20:55:48 2005
From: bbum at mac.com (Bill Bumgarner)
Date: Wed, 31 Aug 2005 19:55:48 -0700
Subject: [Twisted-Python] How to make twisted server run as an deamon
In-Reply-To: <43166204.5090501@126.com>
References: <43166204.5090501@126.com>
Message-ID: <E3EB5811-EA87-404C-A93A-D28F98A877FA@mac.com>

On Aug 31, 2005, at 7:05 PM, EddyXu wrote:
> I need to write an deamon, by using the twisted. But it seems that it
> could not use standard thread module to make it works. Any one can  
> give
> me some advice?

You will most likely want to use twistd and write a .tac file that  
starts up your server.  Twistd will take care of daemonizing and is  
really quite nice.

--- foo.tac ---
from twisted.application import service, internet
import Foo # your server

application = service.Application("foo")
applicationService = service.IServiceCollection(application)

server =  internet.TCPServer(Foo.serverPort(), Foo.serverFactory())
server.setServiceParent(applicationService)
--- end foo.tac ---

Except that it doesn't allow command line arguments to be passed  
in.   Bummer.  Easy to fix, though, I really ought to write up a  
recipe for doing so.

b.bum



