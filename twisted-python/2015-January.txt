From tobias.oberstein at tavendo.de  Thu Jan  1 03:21:55 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Jan 2015 11:21:55 +0100
Subject: [Twisted-Python] Twisted receiving buffers swamped?
Message-ID: <54A51FC3.1020704@tavendo.de>

Hi,

I am doing network performance tests using netperf on a trivial Twisted 
TCP echo server (code at the end).

One of the tests that netperf offers is throughput, and I am running 
into an issue with this.

When running the test (loopback) for 10 seconds on the test box I get a 
throughput of 11.5 Gb/s (which is not bad):

[oberstet at brummer1 ~]$ netperf -N -H 127.0.0.1 -t TCP_STREAM -l 10 -- -P 
9000
TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 9000 AF_INET to 127.0.0.1 () 
port 9000 AF_INET 
         : no control : histogram : interval : dirty data : demo
Recv   Send    Send
Socket Socket  Message  Elapsed
Size   Size    Size     Time     Throughput
bytes  bytes   bytes    secs.    10^6bits/sec

      0  32768  32768    10.02    11517.89

[Sidenote: when running against the netperf server, the box does 46Gb/s 
on that test. More results here: 
https://github.com/crossbario/crossbar/wiki/Stream-Testee#netperf]

However, when I run the test for 60 s (changing to "-l 60" in above will 
do), the test server is killed by the OS due to out-of-memory.

This screenshot

http://picpaste.com/pics/Clipboard03-DllXR7QE.1420107551.png

shows that the server at the time immediately before of killing 
allocated >30GB RAM.

In fact, memory also runs away with 10 sec test .. it's just that the 
machine has enough RAM to cope with that. So it's a "general" issue.

I tested with:

* CPython 2.7.9 and PyPy 2.4
* select, poll and kqueue reactors

all on FreeBSD 10.1. Same behavior for all combinations.

===

Now, my suspicion is that Twisted is reading off the TCP stack from the 
kernel and buffering in userspace faster than the echo server is pushing 
out stuff to the TCP stack into the kernel. Hence, no TCP backpressure 
results, netperf happily sends more and more, and the memory of the 
Twisted process runs away.

I am aware of 
http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html, but 
that seems to cover the sending side only.

What's the cause? What can I do?

How do I prevent Twisted to read off sockets from kernel as the 
userspace buffer grows?

E.g. can I set a limit on the userspace buffer, so Twisted won't read 
out the sockets until the app has consumed more of the already buffered 
stuff?

Any hints appreciated,

Cheers,
/Tobias



TCP Echo Server used ====>

from twisted.internet import kqreactor
kqreactor.install()
#from twisted.internet import selectreactor
#selectreactor.install()
#from twisted.internet import pollreactor
#pollreactor.install()

from twisted.internet import protocol, reactor, endpoints

class Echo(protocol.Protocol):
     def dataReceived(self, data):
         self.transport.write(data)

class EchoFactory(protocol.Factory):
     def buildProtocol(self, addr):
         return Echo()

endpoints.serverFromString(reactor, "tcp:9000").listen(EchoFactory())

print "running on ", reactor.__class__
reactor.run()



From jamesbroadhead at gmail.com  Thu Jan  1 08:51:41 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Thu, 1 Jan 2015 15:51:41 +0000
Subject: [Twisted-Python] Silverberg CQL Driver
In-Reply-To: <CAHZAEpdQYEUz6fRoOVK6Qj_W=yzH7hAn27BdU77+PgES6c8ZfQ@mail.gmail.com>
References: <CAHZAEpcC_O6D3iEGhK1G462msSgG9m7CXVqmcSeqxEvsNyUfSg@mail.gmail.com>
 <CA+hid6FbkebfpuOXzcUQ+zZWwtUR=nVJr+Z80OFzmi80Ho5QVQ@mail.gmail.com>
 <CAHZAEpdQYEUz6fRoOVK6Qj_W=yzH7hAn27BdU77+PgES6c8ZfQ@mail.gmail.com>
Message-ID: <CA+hid6G_yb=3iAMa4zY638w34X1tWKbk4Ym2P0nSQi1LYBAUdg@mail.gmail.com>

On 29 December 2014 at 19:11, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hi James,
>
> Have you guys tried Silverberg? Wondering if its less flakly.
>
> -J
>

We haven't -- when I said that, I meant "on some occasions, after 3 years
of continuous use". It's a sporadic failure mode, and hasn't happened
enough times for us to investigate deeply. That said, we're in our own DC,
so the environment is pretty stable. If you're in AWS or similar, you might
want to run some testing around failure cases (let us know what you find!)
All that said, we've been very happy with it.

The likelihood is that we'll be working on migrating to Manhattan[1] rather
than trying out a new Cassandra library.
Not quite sure which way we'll go, but one option may be to write a
telephus-like wrapper around the thrift bindings.


[1]
https://blog.twitter.com/2014/manhattan-our-real-time-multi-tenant-distributed-database-for-twitter-scale
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150101/94c28870/attachment.html>

From glyph at twistedmatrix.com  Thu Jan  1 13:26:05 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 1 Jan 2015 12:26:05 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <54A51FC3.1020704@tavendo.de>
References: <54A51FC3.1020704@tavendo.de>
Message-ID: <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>


> On Jan 1, 2015, at 2:21 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I am aware of http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html <http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html>, but that seems to cover the sending side only.

It covers the receiving side as well.  If you pauseProducing() on a transport, it stops calling dataReceived on its transport.

> What's the cause? What can I do?

My initial hypothesis is that netperf is sending traffic but not bothering to receive it.

If this hypothesis is correct, then self.transport.registerProducer(self.transport) should solve the problem.  Presuming that there is no problem with crossing the streams - I don't think i've ever done that particular incantation, and I'm almost shocked it's taken this long to come up :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150101/a21a87cd/attachment.html>

From tobias.oberstein at tavendo.de  Fri Jan  2 03:25:30 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 02:25:30 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>

>>I am aware of?http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html, but that seems to cover the sending side only.

>It covers the receiving side as well. ?If you pauseProducing() on a transport, it stops calling dataReceived on its transport.

Not sure I understand that. But you say, this will stop Twisted reading incoming data from a socket into userspace? And hence TCP backpressure results?

>>What's the cause? What can I do?

>My initial hypothesis is that netperf is sending traffic but not bothering to receive it.

I haven't looked through the netperf sources .. but I guess netperf will send as fast as the receiving side can digest .. only throttle down because of TCP backpressure, not app-level flow-control.

>If this hypothesis is correct, then self.transport.registerProducer(self.transport) should solve the problem. ?Presuming that there is no problem with crossing the streams - I don't think i've ever done that particular incantation, >and I'm almost shocked it's taken this long to come up :).

Unfortunately, it doesn't seem to work (the problem persists):

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py

http://picpaste.com/pics/Clipboard07-HlqQmTW0.1420188656.png

Btw: the problem also arises when running over real network .. at least fast networks. I tested on fully switched 10GbE.

And: asyncio (Trollius that is), has the same issue. The target server just gets swamped .. and then killed.

Cheers,
/Tobias


From glyph at twistedmatrix.com  Fri Jan  2 04:08:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 2 Jan 2015 03:08:06 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>


> On Jan 2, 2015, at 2:25 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> Unfortunately, it doesn't seem to work (the problem persists):

Your "streaming" flag is wrong.  A TCP transport is an IPushProducer (it will produce data without being asked).  Try setting it to True and see if that helps?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150102/6977eefc/attachment.html>

From exarkun at twistedmatrix.com  Fri Jan  2 04:32:22 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Jan 2015 11:32:22 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <54A51FC3.1020704@tavendo.de>
References: <54A51FC3.1020704@tavendo.de>
Message-ID: <20150102113222.7937.1494245595.divmod.xquotient.13@top>

On 1 Jan, 10:21 am, tobias.oberstein at tavendo.de wrote:
>Hi,
>
>I am doing network performance tests using netperf on a trivial Twisted 
>TCP echo server (code at the end).
>
>One of the tests that netperf offers is throughput, and I am running 
>into an issue with this.
? [snip]
>
>Now, my suspicion is that Twisted is reading off the TCP stack from the 
>kernel and buffering in userspace faster than the echo server is 
>pushing out stuff to the TCP stack into the kernel. Hence, no TCP 
>backpressure results, netperf happily sends more and more, and the 
>memory of the Twisted process runs away.

What you said here about "buffering in userspace" is ambiguous.  It's 
not clear if you meant data is being buffered in userspace on the read 
side before your protocol gets a chance to handle it or if you meant 
that data being written to the transport by the protocol is being 
buffered in userspace.

The former doesn't happen.  There are no no userspace read buffers in 
Twisted between the transport and the protocol.  Bytes are read from the 
socket and then passed to dataReceived.

The latter would be addressed by using producer/consumer APIs as Glyph 
suggested.

Jean-Paul


From tobias.oberstein at tavendo.de  Fri Jan  2 04:53:27 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 03:53:27 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>

>>Unfortunately, it doesn't seem to work (the problem persists):
>Your "streaming" flag is wrong. ?A TCP transport is an IPushProducer (it will produce data without being asked). ?Try setting it to True and see if that helps?

With streaming == True and cProfile added

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py

I get strange results.

Sluggish performance:

[oberstet at brummer1 ~]$ netperf -N -H 127.0.0.1 -t TCP_STREAM -l 10 -- -P 9000
TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 9000 AF_INET to 127.0.0.1 () port 9000 AF_INET : no control : histogram : interval : dirty data : demo
Recv   Send    Send
Socket Socket  Message  Elapsed
Size   Size    Size     Time     Throughput
bytes  bytes   bytes    secs.    10^6bits/sec

     0  32768  32768    10.03       0.31

===

That is 310kb/s. Which is totally slow. The native C based netserver that comes with netperf does 46Gb/s on this test. With streaming == False, I get something like 11Gb/s with that Twisted server (until it collapsed due to OOM)

The CPU load is very low (near 0%). The memory stays flat.

Here is the profile:

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/profile.log

/Tobias



From tobias.oberstein at tavendo.de  Fri Jan  2 05:06:08 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 04:06:08 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150102113222.7937.1494245595.divmod.xquotient.13@top>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
Message-ID: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>

> >Now, my suspicion is that Twisted is reading off the TCP stack from the
> >kernel and buffering in userspace faster than the echo server is
> >pushing out stuff to the TCP stack into the kernel. Hence, no TCP
> >backpressure results, netperf happily sends more and more, and the
> >memory of the Twisted process runs away.
> 
> What you said here about "buffering in userspace" is ambiguous.  It's not
> clear if you meant data is being buffered in userspace on the read side
> before your protocol gets a chance to handle it  

Yes. That's what I meant. Buffering in userspace inside Twisted, and before data is handled by the app in dataReceived.

> .. or if you meant that data
> being written to the transport by the protocol is being buffered in userspace.

Nope, I didn't meant that. That's the sending side.

> 
> The former doesn't happen.  There are no no userspace read buffers in
> Twisted between the transport and the protocol.  Bytes are read from the

Ok.

> socket and then passed to dataReceived.
> 
> The latter would be addressed by using producer/consumer APIs as Glyph
> suggested.

Mmh.

Fact is: somehow memory runs away.

How do I track down _where_ exactly the mem is spent? Probably that leads to the "why" then ..

/Tobias


From exarkun at twistedmatrix.com  Fri Jan  2 05:36:35 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Jan 2015 12:36:35 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
 <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150102123635.7937.1422130075.divmod.xquotient.15@top>

On 12:06 pm, tobias.oberstein at tavendo.de wrote:
>
>Fact is: somehow memory runs away.
>
>How do I track down _where_ exactly the mem is spent? Probably that 
>leads to the "why" then ..

There are memory profiling tools for Python.  For example, 
memory_profiler:

    https://pypi.python.org/pypi/memory_profiler

As far as I know, there are none that are specific to Twisted.

Jean-Paul


From glyph at twistedmatrix.com  Fri Jan  2 18:41:34 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Jan 2015 17:41:34 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
 <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <EE2CB224-9E5A-4BD2-8EE3-0ECC7456882B@twistedmatrix.com>


> On Jan 2, 2015, at 4:06 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> Fact is: somehow memory runs away.
> 
> How do I track down _where_ exactly the mem is spent? Probably that leads to the "why" then ..

The first place to look - since sometimes looking in a specific place makes memory profilers easier to use - would be twisted.internet.tcp.Server._tempDataBuffer.

The fact that it's extremely slow when you turn on consumer/producer logic in this way makes sense to me.  twisted.internet.abstract.FileDescriptor.bufferSize is hard-coded to 65,536 bytes; every time the write side outpaces the read side by that buffer size, it will result in a call to (in your case) twisted.internet.kqreactor.KQueueReactor._updateRegistration, which makes the kcontrol syscall.

One thing you might try is to run with the environment variable PYPYLOG=jit-summary:- set.  This will give you a bunch of statistics about what the JIT did at the end of the run, on standard out; compare the fast (and run out of memory) to the slow (and work right) run to see what the differences are.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150102/10773958/attachment.html>

From trac at twistedmatrix.com  Sun Jan  4 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 04 Jan 2015 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1420355116.3.3592159663346815929@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150104/238d3a9c/attachment.html>

From mithrandi at mithrandi.net  Thu Jan  8 02:23:55 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 8 Jan 2015 11:23:55 +0200
Subject: [Twisted-Python] Axiom 0.7.2
Message-ID: <CAMcKhMRsn9DFNKw6d4aOvNdZo03nMT02_uAeTuBDpBpkDZwqhA@mail.gmail.com>

I'm pleased to announce the release of Axiom 0.7.2. Axiom is an
in-process object-relational database for Python, built on SQLite.

This release is a bug fix release to correct an important issue;
anyone using Axiom 0.7.0 or 0.7.1 on PyPy (versions prior to 0.7.0 did
not support PyPy) should upgrade as soon as possible to avoid
potential data loss in their application. For more information on this
bug, see the Github issue[1].

The release is available from PyPi as usual[2], signed with my personal key[3].:

[1] https://github.com/twisted/axiom/issues/29
[2] https://pypi.python.org/packages/source/A/Axiom/Axiom-0.7.2.tar.gz
[3] https://pypi.python.org/packages/source/A/Axiom/Axiom-0.7.2.tar.gz.asc
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From hawkowl at atleastfornow.net  Fri Jan  9 06:37:21 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 9 Jan 2015 21:37:21 +0800
Subject: [Twisted-Python] Twisted 15.0.0pre1 Announcement
Message-ID: <1624BCDA-0C83-41B3-814D-95F44C83A960@atleastfornow.net>

Hi everyone!

The long awaited 15.0 release is nearly here, and the first prerelease is available for you (yes, you!) to download and try out.

Tarballs are available at https://twistedmatrix.com/Releases/pre/15.0.0pre1/ .

Highlights are:

- SSLv3 is disabled by default by endpoints created by `twisted.internet.endpoints.serverFromString` and `twisted.internet.endpoints.clientFromString`.

- inlineCallbacks now has introductory documentation, and now supports using the return statement with a value on Python 3.

- `twisted.web.client.Agent` now supports using UNIX sockets.

- A whole bunch of bug fixes and other improvements, with 70+ closed tickets.

For more details, please see the NEWS.txt file alongside the tarballs.

Try them out! :)

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150109/2f9dcf0c/attachment.pgp>

From glyph at twistedmatrix.com  Fri Jan  9 13:01:59 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 9 Jan 2015 12:01:59 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>

Hi Tobias,

> On Jan 2, 2015, at 3:53 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I get strange results.
> 
> Sluggish performance:

Did you ever diagnose this further?  This seems like the sort of thing that we should start having a performance test for.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150109/6d36c4c7/attachment.html>

From sticklet11 at yahoo.com  Fri Jan  9 13:36:24 2015
From: sticklet11 at yahoo.com (lisa donaldson)
Date: Fri, 9 Jan 2015 20:36:24 +0000 (UTC)
Subject: [Twisted-Python] remove me pls
Message-ID: <636482691.1654957.1420835784284.JavaMail.yahoo@jws10791.mail.gq1.yahoo.com>

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150109/6fb1b635/attachment.html>

From tobias.oberstein at tavendo.de  Sat Jan 10 01:33:38 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 00:33:38 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>

Hi glyph,

>>I get strange results.
>>Sluggish performance:

>Did you ever diagnose this further? ?This seems like the sort of thing that we should start having a performance test for.

Not yet. I didn't reply again since you gave me enough homework already:

- Run the producer/consumer variant on Linux (bisecting BSD/kqueue)
- Do the memory profiling with non-producer/consumer (tracking down _where_ memory runs away)

Other stuff interrupted me again, and my impression is, that it might be significant effort to really track this down. No surprise here: really pushing things often means "issues" pop up.

I absolutely agree: we should have repeatable, comparable, standard performance tests.

Like we have with trial/buildbot, but for performance, not functional tests.

FWIW, here are my thoughts on this: 


1)
A simple Twisted based "TCP echo server" (maybe in non-producer/consumer and producer/consumer variants) as a testee will already allow us to do a _lot_.
We can come up with more testees later (e.g. Twisted Web with static resource, ...).

2)
It might be wise to use a non-Twisted, standard test load generator like netperf, instead of a Twisted based one.
- having the load generator written in Twisted creates a cyclic dependency (e.g. rgd. interpreting results)
- it allows to compare results to non-Twisted setups and allows others to repeat against their stuff

3)
We should include at least 2 operating systems (FreeBSD / Linux).
This allows to quickly bisect OS or Twisted reactor specific issues.

4)
We should run this on real, physical, non-virtualized, dedicated hardware and networking gear.
I can't stress enough how important this is in my experience:
Any form of virtualization brings a whole own dimension of factors/variability into the game.
Testing in VMs on a shared hypervisor on a public cloud: you never really know, you never really can repeat.
Repeatability is absolutely crucial.

5)
The load generator and the testee should run on 2 separate boxes, connected via real network (e.g. switched ether).
Testing via loopback is often misleading, and practically often irrelevant (too far away from production deployments).

6)
We should test on both CPython and PyPy.
Because this is where stuff actually runs later in production. And for bisecting Python implementation specifics.

7)
It should be automated.

8)
The results should be stored in a long term archive (a database) so we can compare results over time / setups.

9)
We should collect monitoring parameters (CPU load ...) on both the load generator and testee boxes during test runs.
Like, "same network perf., but one triggers double the CPU load" ..

===

Because of 3/4/5, this requires 4 boxes to begin with. Those should be absolutely _identical_.

Currently, we (Tavendo) have a setup dedicated to performance tests consisting of 2 boxes with dual port 10GbE and a 8 port 10GbE switch.

Buying 2 more identical boxes and adding those would be technically possible. 7/8/9 and setting this all up is work.

I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

/Tobias



From glyph at twistedmatrix.com  Sat Jan 10 02:05:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 01:05:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>


> On Jan 10, 2015, at 12:33 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

It sounds like http://speed.twistedmatrix.com <http://speed.twistedmatrix.com/> but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.

I'm particularly curious about the specific performance case we were talking about though; wire speed with flow-control is an important use-case for Twisted and it sounds to me like we may be falling very far short.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150110/05defd0c/attachment.html>

From tobias.oberstein at tavendo.de  Sat Jan 10 02:53:23 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 01:53:23 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490516@EXVMBX020-12.exch020.serverdata.net>

>>I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

>It sounds like?http://speed.twistedmatrix.com?but far more ambitious :). ?Are you familiar with that site, and the benchmarks repository that powers it? ?It's nowhere near as comprehensive as what you'd like, but it is a good >place to start.

I have stumbled across this before, but haven't looked into much. I am looking right now ..

On the one hand: it has a _lot_ of testee scenarios, not just TCP echo, but e.g. also TLS, which I am definitely interested in.

I was only proposing to have a trivial "TCP echo", essentially the couple of lines from the Twisted homepage - not very ambitious;)

However, as far as I can see, speed.twistedmatrix.com runs all tests over loopback with both the load generator and the testee in Twisted - even in 1 process.

http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/view/head:/tcp_throughput.py
=> uses producer/consumer

https://github.com/twisted/twisted/blob/trunk/twisted/protocols/wire.py#L17
=> does not use producer/consumer (like you suggested https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py#L16)

For various reasons, I don't think this would have been able to demonstrate the issue I ran into .. swamping.

You need a very fast sender (netperf) to even be able to swamp the receiver. Then I am not interested (much) in loopback.

It is these performance test "setup/system things" were my proposal is indeed far more ambitious.

And for me this is crucial: I want hard numbers which are _representative_ of what happens in production (at least close to). 

>I'm particularly curious about the specific performance case we were talking about though; wire speed with flow-control is an important use-case for Twisted and it sounds to me like we may be falling very far short.

Yes, I understand.

Note that we can't get to 10GbE wirespeed in a throughput test with Twisted even leaving "swamping" aside. And I verified that the hardware/OS is not the bottleneck (I can saturate the link at 9.94Gb/s using netperf-to-netserver easily).

/Tobias


From tobias.oberstein at tavendo.de  Sat Jan 10 03:22:11 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 02:22:11 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>

>It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.

I've look into it a little. I am confused;)

E.g. take "SSL throughput big writes":

http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png

There is a big dropoff in commit 43146.

It's cool to see a history of performance correlated with commits.

Now, if I dig into that commit, I see:

http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png

The commit seems to be a "doc only" commit. No actual code changes at all.

How should I interpret that?

Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?

I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.

/Tobias


From glyph at twistedmatrix.com  Sat Jan 10 16:47:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 15:47:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>


> On Jan 10, 2015, at 02:22, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>> It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.
> 
> I've look into it a little. I am confused;)
> 
> E.g. take "SSL throughput big writes":
> 
> http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png
> 
> There is a big dropoff in commit 43146.
> 
> It's cool to see a history of performance correlated with commits.
> 
> Now, if I dig into that commit, I see:
> 
> http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png
> 
> The commit seems to be a "doc only" commit. No actual code changes at all.
> 
> How should I interpret that?
> 
> Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?

One of those things.  There is no infrastructure in place for identifying events which impact the performance testing infrastructure.  The only performance testing environment is a very old mac mini still running Snow Leopard, which is probably the environment which we care the *least* about performance in, so it's not in great shape ;).

> I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.

I don't think the results that we have presently are worth much at all.  My point was mostly that there is some infrastructure which is halfway usable, and so you don't have to start from scratch.  If you could take over this project (I am pretty sure at this point there is nobody to take it over *from*, exarkun did some work a long time ago and hasn't given it a second look in years) it would be highly appreciated!

(And if you care a lot about performance in a particular environment you could set it up in that environment and get attention for it :)).

You should also have a look at the existing benchmark suite and potentially look at maintaining / expanding that as well.

Thoughts?

-glyph

From dustin at v.igoro.us  Sat Jan 10 16:59:20 2015
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 10 Jan 2015 18:59:20 -0500
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
Message-ID: <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>

As someone partially responsible for the infrastructure Mozilla uses
to do its performance benchmarking, I can say that it's *really* hard.
Getting live operating systems to sit still and behave is a mess, and
then *keeping* them still over months and years (while attending to
necessary security upgrades, hardware migrations, and so on) is even
worse.

One of the smarter things we've figured out how to do is to "phase in"
potentially disruptive changes so that we can either see that there's
no impact, or estimate a correction factor for comparing results
before and after the change.

Dustin

On Sat, Jan 10, 2015 at 6:47 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Jan 10, 2015, at 02:22, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>
>>> It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.
>>
>> I've look into it a little. I am confused;)
>>
>> E.g. take "SSL throughput big writes":
>>
>> http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png
>>
>> There is a big dropoff in commit 43146.
>>
>> It's cool to see a history of performance correlated with commits.
>>
>> Now, if I dig into that commit, I see:
>>
>> http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png
>>
>> The commit seems to be a "doc only" commit. No actual code changes at all.
>>
>> How should I interpret that?
>>
>> Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?
>
> One of those things.  There is no infrastructure in place for identifying events which impact the performance testing infrastructure.  The only performance testing environment is a very old mac mini still running Snow Leopard, which is probably the environment which we care the *least* about performance in, so it's not in great shape ;).
>
>> I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.
>
> I don't think the results that we have presently are worth much at all.  My point was mostly that there is some infrastructure which is halfway usable, and so you don't have to start from scratch.  If you could take over this project (I am pretty sure at this point there is nobody to take it over *from*, exarkun did some work a long time ago and hasn't given it a second look in years) it would be highly appreciated!
>
> (And if you care a lot about performance in a particular environment you could set it up in that environment and get attention for it :)).
>
> You should also have a look at the existing benchmark suite and potentially look at maintaining / expanding that as well.
>
> Thoughts?
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sat Jan 10 18:48:13 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 17:48:13 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>
Message-ID: <00918DA6-123A-40FD-8BCC-3A616D0DE99F@twistedmatrix.com>


> On Jan 10, 2015, at 3:59 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
> 
> As someone partially responsible for the infrastructure Mozilla uses
> to do its performance benchmarking, I can say that it's *really* hard.
> Getting live operating systems to sit still and behave is a mess, and
> then *keeping* them still over months and years (while attending to
> necessary security upgrades, hardware migrations, and so on) is even
> worse.
> 
> One of the smarter things we've figured out how to do is to "phase in"
> potentially disruptive changes so that we can either see that there's
> no impact, or estimate a correction factor for comparing results
> before and after the change.

In my unfortunately somewhat uninformed opinion, one thing that can really help is not to commit to long-term stability, but rather to just have a clearly documented log of operations performed on the monitoring cluster.  Twisted has far less intense performance-analysis requirements than Mozilla, I should hope, and a lot less data to deal with, so just the ability to see events on the X axis could be enough to tell contributors what's going on with performance deltas.

I should point out that the main reason we need a performance testing rig is not continuous performance monitoring over time, but rather, clear performance tracking of individual changes, ideally before they land.  One of the things I'm unhappy about with speed center (and a big reason it's basically unmaintained) is that it's very hard to tell it to build a branch and to get a good picture of the aggregate effect of that branch on the benchmarks.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150110/1d7cca17/attachment.html>

From trac at twistedmatrix.com  Sun Jan 11 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 11 Jan 2015 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1420959915.97.4065627808811965952@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150111/6103b0ff/attachment.html>

From tobias.oberstein at tavendo.de  Mon Jan 12 13:49:44 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Jan 2015 12:49:44 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>

> > Probably the test machine was changed, a new version of OpenSSL or
> pyOpenSSL, or something else?
> 
> One of those things.  There is no infrastructure in place for identifying events
> which impact the performance testing infrastructure.  The only performance

Yes, this is an important point: track changes in infrastructure (everything that might
have an influence, but is outside the tested code).

> testing environment is a very old mac mini still running Snow Leopard, which

omg;)

> > I'd say: the infrastructure aspects when doing performance tests do
> matter. To the degree that performance results are of very limited value at
> all, if the former aspects are not accounted for.
> 
> I don't think the results that we have presently are worth much at all.  My
> point was mostly that there is some infrastructure which is halfway usable,
> and so you don't have to start from scratch.  If you could take over this

You mean taking over the code "as is"

http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/files

or the task in general (Twisted benchmarking)?

> project (I am pretty sure at this point there is nobody to take it over *from*,

We are currently developing performance test infrastructure for Crossbar.io - naturally,
it is eating it's own dog food: the infrastructure is based on Crossbar.io and WAMP to
orchestrate and wire up things in a distributed test setup.

We could extend that to test at the Twisted(-only) level. Need to think about how
that fits into "overall strategy", as the Crossbar.io perf. test stuff isn't open-source.

The testing hardware above (mac, no real network) is insufficient for what I need.
I'm thinking about buying and setting up 2 more boxes for Linux.

Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be used
by speedcenter.twistedmatrix.com: I have issues here as well.

E.g. I need latency histograms, but this seems unsupported (benchmark results can
only have avg/min/max/stddev). For me, this isn't "nice to have", but essential. 
Throughput is one thing. Constistent low latency a completely different. The latter is
much much harder.

But what is the "interface" between test cases from "twisted-benchmarks" to codespeed?

This

https://github.com/tobami/codespeed#saving-data

seems to suggest, performance test results are HTTP/POSTed as JSON to codespeed.

And codespeed is then only responsible for visualization and web hosting, right?

I think we can find something better for that part.

> (And if you care a lot about performance in a particular environment you
> could set it up in that environment and get attention for it :)).

Yes, in particular that very last one is a factor to justify efforts;) Anything like having
a promo logo or similar - that would be an argument to invest time and material.
I will seriously contemplate .. need to align with strategy/available time.

We already host FreeBSD buildslaves for both Twisted and PyPy. That might be another
synergy (hosting the latter on that same boxes).

> You should also have a look at the existing benchmark suite and potentially
> look at maintaining / expanding that as well.

I will try to integrate some of this into our upcoming perf. infrastructure.

/Tobias

> 
> Thoughts?
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Mon Jan 12 14:08:46 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jan 2015 21:08:46 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150112210846.6966.1406182207.divmod.xquotient.3@top>

On 08:49 pm, tobias.oberstein at tavendo.de wrote:
>
>Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be 
>used
>by speedcenter.twistedmatrix.com: I have issues here as well.
>
>E.g. I need latency histograms, but this seems unsupported (benchmark 
>results can
>only have avg/min/max/stddev). For me, this isn't "nice to have", but 
>essential.
>Throughput is one thing. Constistent low latency a completely 
>different. The latter is
>much much harder.

Codespeed is terrible.  But this is not one of the ways in which it is 
terrible.  Codespeed doesn't care if you label your measurement 
"latency".  I think you've just noticed that what the existing 
benchmarks measure is mostly (entirely?) throughput.  If you wanted to 
write a latency benchmark, I don't think anything's stopping you.
>
>I think we can find something better for that part.

I suggest more fully understanding the capabilities and limitations of 
of codespeed before embarking on a project to replace it.

Jean-Paul


From glyph at twistedmatrix.com  Tue Jan 13 20:18:48 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Jan 2015 19:18:48 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>


> On Jan 12, 2015, at 12:49 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>> Probably the test machine was changed, a new version of OpenSSL or
>> pyOpenSSL, or something else?
>> 
>> One of those things.  There is no infrastructure in place for identifying events
>> which impact the performance testing infrastructure.  The only performance
> 
> Yes, this is an important point: track changes in infrastructure (everything that might
> have an influence, but is outside the tested code).
> 
>> testing environment is a very old mac mini still running Snow Leopard, which
> 
> omg;)
> 
>>> I'd say: the infrastructure aspects when doing performance tests do
>> matter. To the degree that performance results are of very limited value at
>> all, if the former aspects are not accounted for.
>> 
>> I don't think the results that we have presently are worth much at all.  My
>> point was mostly that there is some infrastructure which is halfway usable,
>> and so you don't have to start from scratch.  If you could take over this
> 
> You mean taking over the code "as is"
> 
> http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/files
> 
> or the task in general (Twisted benchmarking)?

Both, I think.

I'd really prefer it if you could start with the existing benchmarks, incrementally maintain them (perhaps beginning by porting to Github, we seem to be having pretty good success with travis) and probably eventually replace them wholesale, than replace them from the beginning.

>> project (I am pretty sure at this point there is nobody to take it over *from*,
> 
> We are currently developing performance test infrastructure for Crossbar.io - naturally,
> it is eating it's own dog food: the infrastructure is based on Crossbar.io and WAMP to
> orchestrate and wire up things in a distributed test setup.
> 
> We could extend that to test at the Twisted(-only) level. Need to think about how
> that fits into "overall strategy", as the Crossbar.io perf. test stuff isn't open-source.
> 
> The testing hardware above (mac, no real network) is insufficient for what I need.
> I'm thinking about buying and setting up 2 more boxes for Linux.

Keep in mind that a performance testing environment should be scalable.  Others may have different environments they care about.  Building your specific environment would be tremendously useful, but it would be even more useful to build it in a way that others can compare in their own hardware setups.

> Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be used
> by speedcenter.twistedmatrix.com: I have issues here as well.
> 
> E.g. I need latency histograms, but this seems unsupported (benchmark results can
> only have avg/min/max/stddev). For me, this isn't "nice to have", but essential. 
> Throughput is one thing. Constistent low latency a completely different. The latter is
> much much harder.
> 
> But what is the "interface" between test cases from "twisted-benchmarks" to codespeed?

Codespeed runs the benchmark, and they print out this stuff: https://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/view/head:/benchlib.py#L12

POSTing them via JSON would be nicer, structured data is great.

> This
> 
> https://github.com/tobami/codespeed#saving-data
> 
> seems to suggest, performance test results are HTTP/POSTed as JSON to codespeed.
> 
> And codespeed is then only responsible for visualization and web hosting, right?
> 
> I think we can find something better for that part.
> 
>> (And if you care a lot about performance in a particular environment you
>> could set it up in that environment and get attention for it :)).
> 
> Yes, in particular that very last one is a factor to justify efforts;) Anything like having
> a promo logo or similar - that would be an argument to invest time and material.
> I will seriously contemplate .. need to align with strategy/available time.

You should probably contact tsf@ with these concerns :).

> We already host FreeBSD buildslaves for both Twisted and PyPy. That might be another
> synergy (hosting the latter on that same boxes).
> 
>> You should also have a look at the existing benchmark suite and potentially
>> look at maintaining / expanding that as well.
> 
> I will try to integrate some of this into our upcoming perf. infrastructure.
> 
> /Tobias
> 
>> 
>> Thoughts?
>> 
>> -glyph
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150113/8b0fb2b6/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 13 20:21:55 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Jan 2015 19:21:55 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150112210846.6966.1406182207.divmod.xquotient.3@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
Message-ID: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>


> On Jan 12, 2015, at 1:08 PM, exarkun at twistedmatrix.com wrote:
> 
>> E.g. I need latency histograms, but this seems unsupported (benchmark results can
>> only have avg/min/max/stddev). For me, this isn't "nice to have", but essential.
>> Throughput is one thing. Constistent low latency a completely different. The latter is
>> much much harder.
> 
> Codespeed is terrible.  But this is not one of the ways in which it is terrible.  Codespeed doesn't care if you label your measurement "latency".  I think you've just noticed that what the existing benchmarks measure is mostly (entirely?) throughput.  If you wanted to write a latency benchmark, I don't think anything's stopping you.
> 

I believe Tobias was not saying "codespeed can't have a measurement called 'latency'" but rather "codespeed can't do histograms of measurements, which we need for measurement of latency and you don't need for measurement of throughput".  Is that accurate?  I don't know if there's a histogram feature hidden in the UI somewhere.

It would be nice to at least try a little bit to contribute things (like a histogram feature) to codespeed before charging off in a completely different direction.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150113/56bb694f/attachment.html>

From exarkun at twistedmatrix.com  Wed Jan 14 05:41:46 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jan 2015 12:41:46 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
 <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
Message-ID: <20150114124146.6966.852468844.divmod.xquotient.8@top>

On 03:21 am, glyph at twistedmatrix.com wrote:
>
>>On Jan 12, 2015, at 1:08 PM, exarkun at twistedmatrix.com wrote:
>>>E.g. I need latency histograms, but this seems unsupported (benchmark 
>>>results can
>>>only have avg/min/max/stddev). For me, this isn't "nice to have", but 
>>>essential.
>>>Throughput is one thing. Constistent low latency a completely 
>>>different. The latter is
>>>much much harder.
>>
>>Codespeed is terrible.  But this is not one of the ways in which it is 
>>terrible.  Codespeed doesn't care if you label your measurement 
>>"latency".  I think you've just noticed that what the existing 
>>benchmarks measure is mostly (entirely?) throughput.  If you wanted to 
>>write a latency benchmark, I don't think anything's stopping you.
>
>I believe Tobias was not saying "codespeed can't have a measurement 
>called 'latency'" but rather "codespeed can't do histograms of 
>measurements, which we need for measurement of latency and you don't 
>need for measurement of throughput".  Is that accurate?  I don't know 
>if there's a histogram feature hidden in the UI somewhere.
>
>It would be nice to at least try a little bit to contribute things 
>(like a histogram feature) to codespeed before charging off in a 
>completely different direction.

I wasn't suggesting it would be a good idea to contribute to codespeed. 
I think codespeed should be thrown in the trash.  It was a great 
demonstration of a concept and we should thank it for that.  However, as 
the basis of future development - no, it's an awful piece of 
unmaintained software.

I was just trying to say that work towards replacing it should learn 
what it can from codespeed to try to avoid creating another piece of 
awful, ultimately unmaintained software.

Jean-Paul


From exarkun at twistedmatrix.com  Wed Jan 14 05:50:00 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jan 2015 12:50:00 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
Message-ID: <20150114125000.6966.759234828.divmod.xquotient.10@top>

On 03:18 am, glyph at twistedmatrix.com wrote:
>
>>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein
>>But what is the "interface" between test cases from "twisted- 
>>benchmarks" to codespeed?
>
>Codespeed runs the benchmark, and they print out this stuff: 
>https://bazaar.launchpad.net/~twisted-dev/twisted- 
>benchmarks/trunk/view/head:/benchlib.py#L12
>
>POSTing them via JSON would be nicer, structured data is great.

Nothing parses that output.  It's just for humans.

The code you're looking for is:

  https://bazaar.launchpad.net/~twisted-dev/twisted- 
benchmarks/trunk/view/head:/speedcenter.py

which POSTs structured data (though urlencoded, not JSON) to the 
codespeed server.

Jean-Paul


From hawkowl at atleastfornow.net  Thu Jan 15 20:42:09 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 16 Jan 2015 11:42:09 +0800
Subject: [Twisted-Python] 15.0 Prerelease Reports
Message-ID: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>

Hi!

Does anyone have some ?15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance? reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150116/a52c9416/attachment.pgp>

From mithrandi at mithrandi.net  Fri Jan 16 15:18:48 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 17 Jan 2015 00:18:48 +0200
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
Message-ID: <CAMcKhMQ9uT85bWUANah2VsVxgUt17HwqYdRgjQoPmLFhCS7qKg@mail.gmail.com>

On 16 January 2015 at 05:42, HawkOwl <hawkowl at atleastfornow.net> wrote:
> Does anyone have some ?15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance? reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !

Ran 1116 tests in 26.381s

PASSED (skips=2, expectedFailures=1, successes=1113)

:)

(We actually deploy Twisted directly from SVN, so I don't usually test
prereleases, but it was easy enough to check)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From werner at thieprojects.ch  Fri Jan 16 15:35:23 2015
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 16 Jan 2015 12:35:23 -1000
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
Message-ID: <54B9922B.6010909@thieprojects.ch>

Hi

OSX 10.10.1

uname -a
Darwin xxxx.local 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 
00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64

Python 2.7.9 (v2.7.9:648dcafa7e5f, Dec 10 2014, 10:10:46)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin

-SSL and -Crypto, all else looks good
Ran 2174 tests in 29.906s

PASSED (skips=156, expectedFailures=4, successes=2014)

No issues with my code base so far.

Thanks for your work!

Werner

On 15/01/15 17:42, HawkOwl wrote:
> Hi!
>
> Does anyone have some ?15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance? reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !
>
> - hawkie
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From haggardii at gmail.com  Fri Jan 16 15:53:22 2015
From: haggardii at gmail.com (Matt Haggard)
Date: Fri, 16 Jan 2015 15:53:22 -0700
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <54B9922B.6010909@thieprojects.ch>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
 <54B9922B.6010909@thieprojects.ch>
Message-ID: <CAL+xXwOO9eUAhayp4zHNTjnV0pVxorOVZYJniV6aZSxmMw++SA@mail.gmail.com>

No issues with my code base, though it doesn't heavily use Twisted.

On Fri, Jan 16, 2015 at 3:35 PM, Werner Thie <werner at thieprojects.ch> wrote:

> Hi
>
> OSX 10.10.1
>
> uname -a
> Darwin xxxx.local 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44
> PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64
>
> Python 2.7.9 (v2.7.9:648dcafa7e5f, Dec 10 2014, 10:10:46)
> [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
>
> -SSL and -Crypto, all else looks good
> Ran 2174 tests in 29.906s
>
> PASSED (skips=156, expectedFailures=4, successes=2014)
>
> No issues with my code base so far.
>
> Thanks for your work!
>
> Werner
>
>
> On 15/01/15 17:42, HawkOwl wrote:
>
>> Hi!
>>
>> Does anyone have some ?15.0 worked fine/had an issue/set my codebase on
>> fire via sheer brilliance? reports for me? :) If you want to try them out,
>> you can get the tarballs at http://twistedmatrix.com/
>> Releases/pre/15.0.0pre1/ !
>>
>> - hawkie
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150116/0d2ebd41/attachment.html>

From tobias.oberstein at tavendo.de  Sat Jan 17 09:51:15 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 17 Jan 2015 08:51:15 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
 <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55569039@EXVMBX020-12.exch020.serverdata.net>

First, sorry for sluggish response time ..

>>>E.g. I need latency histograms, but this seems unsupported (benchmark results can
>>>only have avg/min/max/stddev). For me, this isn't "nice to have", but essential.
>>>Throughput is one thing. Constistent low latency a completely different. The latter is
>>>much much harder.

>>Codespeed is terrible. ?But this is not one of the ways in which it is terrible. ?Codespeed doesn't care if you label your measurement "latency". ?I think you've just noticed that what the existing benchmarks measure is mostly (entirely?) throughput. ?If you wanted to >>write a latency benchmark, I don't think anything's stopping you.

>I believe Tobias was not saying "codespeed can't have a measurement called 'latency'" but rather "codespeed can't do histograms of measurements, which we need for measurement of latency and you don't need for measurement of throughput". ?Is that accurate? ?I don't know if there's a histogram feature hidden in the UI somewhere.

Yes, exactly. That's what I meant.

As an example of the kind of analysis and visualization I am after, please have a look here:

http://www.brendangregg.com/HeatMaps/latency.html

In particular, latency heatmaps are an incredible useful visualization.

http://www.brendangregg.com/perf.html#HeatMaps

>It would be nice to at least try a little bit to contribute things (like a histogram feature) to codespeed before charging off in a completely different direction.

It is Django and canvas for gfx.

The former I have no know-how and no use/motivation for. Rendering HTML on the server isn't something we do anymore (WebSocket talking WAMP to Crossbar.io, anything else is just static HTML/JS/CSS/Images).

For the latter, there is D3 (http://d3js.org/) which is awesome and vector graphics.

For heatmaps, canvas _might_ be fine, but for virtually anything chart like, D3 has a lot to bring to the table.

In general, I can follow the argument of "contributing instead of reinventing" and "paying back", but in this particular case, I can't justify sinking time into this (codespeed).

Cheers,
/Tobias


From tobias.oberstein at tavendo.de  Sat Jan 17 10:00:03 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 17 Jan 2015 09:00:03 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150114125000.6966.759234828.divmod.xquotient.10@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>

> >>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein But what is the
> >>"interface" between test cases from "twisted- benchmarks" to
> >>codespeed?
> >
> >Codespeed runs the benchmark, and they print out this stuff:
> >https://bazaar.launchpad.net/~twisted-dev/twisted-
> >benchmarks/trunk/view/head:/benchlib.py#L12
> >
> >POSTing them via JSON would be nicer, structured data is great.
> 
> Nothing parses that output.  It's just for humans.
> 
> The code you're looking for is:
> 
>   https://bazaar.launchpad.net/~twisted-dev/twisted-
> benchmarks/trunk/view/head:/speedcenter.py
> 
> which POSTs structured data (though urlencoded, not JSON) to the
> codespeed server.

I see. And codespeed parsest that, stores it in a database and produces graphics?

It seems, reporting the results via a WAMP RPC to a backend should be quite easy to add in speedcenter.py

How is Twisted speedcenter orchestrated / triggered?

I mean, a new commit to Twisted repo will trigger rerunning all speed tests? If so, how does that work?

/Tobias



From exarkun at twistedmatrix.com  Sat Jan 17 13:39:43 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 17 Jan 2015 20:39:43 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150117203943.6966.1688719668.divmod.xquotient.16@top>

On 05:00 pm, tobias.oberstein at tavendo.de wrote:
>> >>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein But what is the
>> >>"interface" between test cases from "twisted- benchmarks" to
>> >>codespeed?
>> >
>> >Codespeed runs the benchmark, and they print out this stuff:
>> >https://bazaar.launchpad.net/~twisted-dev/twisted-
>> >benchmarks/trunk/view/head:/benchlib.py#L12
>> >
>> >POSTing them via JSON would be nicer, structured data is great.
>>
>>Nothing parses that output.  It's just for humans.
>>
>>The code you're looking for is:
>>
>>   https://bazaar.launchpad.net/~twisted-dev/twisted-
>>benchmarks/trunk/view/head:/speedcenter.py
>>
>>which POSTs structured data (though urlencoded, not JSON) to the
>>codespeed server.
>
>I see. And codespeed parsest that, stores it in a database and produces 
>graphics?
>
>It seems, reporting the results via a WAMP RPC to a backend should be 
>quite easy to add in speedcenter.py

WAMP?  I don't think so.  I understand you work in that space a lot but 
I think you might want to take a step back.  The extra complexity of 
WebSockets is pointless for this project.  Just HTTP POST some JSON. 
This can be really simple.  Your time is almost certainly better spent 
elsewhere.

Jean-Paul
>How is Twisted speedcenter orchestrated / triggered?
>
>I mean, a new commit to Twisted repo will trigger rerunning all speed 
>tests? If so, how does that work?
>
>/Tobias
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From trac at twistedmatrix.com  Sun Jan 18 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 18 Jan 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1421564717.7.1716378116838041879@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150118/b9466eab/attachment.html>

From tobias.oberstein at tavendo.de  Sun Jan 18 05:15:33 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 18 Jan 2015 04:15:33 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150117203943.6966.1688719668.divmod.xquotient.16@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>

> >>which POSTs structured data (though urlencoded, not JSON) to the
> >>codespeed server.
> >
> >I see. And codespeed parsest that, stores it in a database and produces
> >graphics?
> >
> >It seems, reporting the results via a WAMP RPC to a backend should be
> >quite easy to add in speedcenter.py
> 
> WAMP?  I don't think so.  I understand you work in that space a lot but I think
> you might want to take a step back.  The extra complexity of WebSockets is
> pointless for this project.  Just HTTP POST some JSON.

All the extra complexity is hidden using WAMP and AutobahnJS.

> This can be really simple.  Your time is almost certainly better spent
> elsewhere.

No. Sinking time into Django/codespeed is lost time for me ..

/Tobias


From exarkun at twistedmatrix.com  Sun Jan 18 05:24:08 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jan 2015 12:24:08 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150118122408.6966.1877509550.divmod.xquotient.19@top>

On 12:15 pm, tobias.oberstein at tavendo.de wrote:
>> >>which POSTs structured data (though urlencoded, not JSON) to the
>> >>codespeed server.
>> >
>> >I see. And codespeed parsest that, stores it in a database and 
>>produces
>> >graphics?
>> >
>> >It seems, reporting the results via a WAMP RPC to a backend should be
>> >quite easy to add in speedcenter.py
>>
>>WAMP?  I don't think so.  I understand you work in that space a lot 
>>but I think
>>you might want to take a step back.  The extra complexity of 
>>WebSockets is
>>pointless for this project.  Just HTTP POST some JSON.
>
>All the extra complexity is hidden using WAMP and AutobahnJS.

Oh well.  I'm not going to spend much more effort to convince you that 
this is a bad idea.  Maybe someone else will.
>>This can be really simple.  Your time is almost certainly better spent
>>elsewhere.
>
>No. Sinking time into Django/codespeed is lost time for me ..

If you read my emails, you'll see that I explicitly recommended 
*against* contributing to codespeed.  If you're not going to read what I 
write then I'll stop writing, I guess.

Jean-Paul


From tobias.oberstein at tavendo.de  Sun Jan 18 05:46:51 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 18 Jan 2015 04:46:51 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150118122408.6966.1877509550.divmod.xquotient.19@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>

> >> >It seems, reporting the results via a WAMP RPC to a backend should
> >> >be quite easy to add in speedcenter.py
> >>
> >>WAMP?  I don't think so.  I understand you work in that space a lot
> >>but I think you might want to take a step back.  The extra complexity
> >>of WebSockets is pointless for this project.  Just HTTP POST some
> >>JSON.
> >
> >All the extra complexity is hidden using WAMP and AutobahnJS.
> 
> Oh well.  I'm not going to spend much more effort to convince you that this is
> a bad idea.  Maybe someone else will.

That's ok for me. 
I guess we will create something in-house that fits what we need.

/Tobias


From glyph at twistedmatrix.com  Sun Jan 18 12:51:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 18 Jan 2015 11:51:17 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>


> On Jan 18, 2015, at 4:46 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>> All the extra complexity is hidden using WAMP and AutobahnJS.
>> 
>> Oh well.  I'm not going to spend much more effort to convince you that this is
>> a bad idea.  Maybe someone else will.
> 
> That's ok for me. 
> I guess we will create something in-house that fits what we need.

I don't think I am following this conversation.

What do you mean by "in-house"?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150118/c6518417/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 19 01:07:02 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Jan 2015 00:07:02 -0800
Subject: [Twisted-Python] no more annoying certificate warnings on
	buildbot.twistedmatrix.com!
Message-ID: <0CCDAC08-BF07-4AB0-A896-8345B41B3049@twistedmatrix.com>

I pushed up some changes to Braid <https://github.com/twisted-infra/braid> tonight and deployed them; we are now using TxSNI <https://warehouse.python.org/project/TxSNI/> in production.

The practical upshot of this is that you should no longer see annoying certificate warnings when visiting https://buildbot.twistedmatrix.com/ <https://buildbot.twistedmatrix.com/>.

So please do that and go review some tickets :).

Thanks,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150119/028ba612/attachment.html>

From singhsartaj94 at gmail.com  Mon Jan 19 09:50:19 2015
From: singhsartaj94 at gmail.com (Sartaj Singh)
Date: Mon, 19 Jan 2015 22:20:19 +0530
Subject: [Twisted-Python] GSoC'15
Message-ID: <CAC+H8-EHTxyb_6Ahd13Ym3PVSmwWKodYoMCVyOmoDCy56kK2rg@mail.gmail.com>

Hello,
I am a student hoping to participate in GSoC'15. I have used twisted in past
in various projects. I wanted to know if twisted will be participating in
GSoC this year.

-- 
Regards
*Sartaj Singh*

*Mathematics and Computing*,
Indian Institute of Technology,
Varanasi - 221 005 INDIA

E-mail: singhsartaj94 at gmail.com, *sartaj.singh.apm13 at itbhu.ac.in
<sartaj.singh.apm13 at itbhu.ac.in>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150119/9f31860b/attachment.html>

From tobias.oberstein at tavendo.de  Mon Jan 19 11:44:10 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 19 Jan 2015 10:44:10 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>

>>>>All the extra complexity is hidden using WAMP and AutobahnJS.

>>>Oh well. ?I'm not going to spend much more effort to convince you that this is
>>>a bad idea. ?Maybe someone else will.

>>That's ok for me.?
>>I guess we will create something in-house that fits what we need.

>I don't think I am following this conversation.
>What do you mean by "in-house"?

>From how I understood Jean-Paul, he thinks using WAMP to hook up test infrastructure components (like load probes, test orchestrators and test database backend) is a bad idea, and HTTP/REST should be used instead.

I have a different view on this for technical reasons - but, admitted, also because I am affiliated with WAMP and have zero time to invest in stuff that I am not interested in / have no need for - that is HTTP/REST, and the server bits to make that fly. It'll be _more_ work on HTTP/REST, and less capable.

Anyway. I think WAMP is a great choice to hook up components of a distributed test system - which is what I am after (e.g. I want to orchestrate 10 TCP load probes running on different machines, stressing a target TCP echo server).

This difference in opinion might be because we have different _scopes/requirements_ to start from. Or not. I don't know.

So I thought, for the time being, it might be better if we (Tavendo) develop something for internal use / privately ("in-house"), and probably come again / show something when we actually have it running.

===

Regarding the "charting sub-issue":

I came across https://plot.ly/

This is kinda cool and very quick to get started:

http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png

It does histograms and tons of fancy stuff and hosts everything for free.

Cheers,
/Tobias


From glyph at twistedmatrix.com  Mon Jan 19 13:29:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Jan 2015 12:29:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>


> On Jan 19, 2015, at 10:44 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>>>> All the extra complexity is hidden using WAMP and AutobahnJS.
> 
>>>> Oh well.  I'm not going to spend much more effort to convince you that this is
>>>> a bad idea.  Maybe someone else will.
> 
>>> That's ok for me. 
>>> I guess we will create something in-house that fits what we need.
> 
>> I don't think I am following this conversation.
>> What do you mean by "in-house"?
> 
> From how I understood Jean-Paul, he thinks using WAMP to hook up test infrastructure components (like load probes, test orchestrators and test database backend) is a bad idea, and HTTP/REST should be used instead.
> 
> I have a different view on this for technical reasons - but, admitted, also because I am affiliated with WAMP and have zero time to invest in stuff that I am not interested in / have no need for - that is HTTP/REST, and the server bits to make that fly. It'll be _more_ work on HTTP/REST, and less capable.
> 
> Anyway. I think WAMP is a great choice to hook up components of a distributed test system - which is what I am after (e.g. I want to orchestrate 10 TCP load probes running on different machines, stressing a target TCP echo server).
> 
> This difference in opinion might be because we have different _scopes/requirements_ to start from. Or not. I don't know.

This is Jean-Paul's personal opinion on the implementation choices involved.  This is only really relevant if JP is going to be working on the performance testing framework directly or needs to interact with the WAMP bits directly.  If you're the one doing the work, you get to make the technology choices and, within certain reasonable constraints like "no PHP", I'm sure that we would be happy to run whatever performance testing system you come up with if it satisfies our requirements and has a reasonable API.

> So I thought, for the time being, it might be better if we (Tavendo) develop something for internal use / privately ("in-house"), and probably come again / show something when we actually have it running.

Well, we'd want to see something that actually works before officially standardizing Twisted on it anyway, but please feel free to share it early.  I guarantee you that we will not reject something simply for using WAMP :-).

> Regarding the "charting sub-issue":
> 
> I came across https://plot.ly/
> 
> This is kinda cool and very quick to get started:
> 
> http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png
> 
> It does histograms and tons of fancy stuff and hosts everything for free.

This is hosted-service only?  Not that that's a dealbreaker, I guess, we are pretty sure we're going to move everything to Github anyway...

-glyph

From singhsartaj94 at gmail.com  Mon Jan 19 23:40:30 2015
From: singhsartaj94 at gmail.com (Sartaj Singh)
Date: Tue, 20 Jan 2015 12:10:30 +0530
Subject: [Twisted-Python] GSoC '15
Message-ID: <CAC+H8-FNLT4MQnhNpb=SZb6SnMJSVG7g7oeH9NWXeam1opgL8A@mail.gmail.com>

Hello,
I am a student hoping to participate in GSoC'15. I have used twisted in
past in various projects. I wanted to know if twisted will be participating
in GSoC this year.

-- 
Regards
*Sartaj Singh*

*Mathematics and Computing*,
Indian Institute of Technology,
Varanasi - 221 005 INDIA

E-mail: singhsartaj94 at gmail.com, *sartaj.singh.apm13 at itbhu.ac.in
<sartaj.singh.apm13 at itbhu.ac.in>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150120/0c163416/attachment.html>

From tobias.oberstein at tavendo.de  Tue Jan 20 13:40:37 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 20 Jan 2015 12:40:37 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
 <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B556283FE@EXVMBX020-12.exch020.serverdata.net>

> > Anyway. I think WAMP is a great choice to hook up components of a
> distributed test system - which is what I am after (e.g. I want to orchestrate
> 10 TCP load probes running on different machines, stressing a target TCP
> echo server).
> >
> > This difference in opinion might be because we have different
> _scopes/requirements_ to start from. Or not. I don't know.
> 
> This is Jean-Paul's personal opinion on the implementation choices involved.
> This is only really relevant if JP is going to be working on the performance
> testing framework directly or needs to interact with the WAMP bits directly.

Ok.

Yes, WAMP is an implementation detail here.

@Jean-Paul: I don't want to leave a bad impression here: you have been helping me
so often, and I learned so much from your hints, code, suggestions and opinions. I do
value that very much, and I have read everything you wrote. I swear;)

> If you're the one doing the work, you get to make the technology choices
> and, within certain reasonable constraints like "no PHP", I'm sure that we

omg, no;)

> would be happy to run whatever performance testing system you come up
> with if it satisfies our requirements and has a reasonable API.

Alright. We want to contribute, and if that is welcome, awesome!

"our requirements":

This is very important, as we need to fold in Twisted project specific requirements
into the list we have. If this is to be used not only in-house, but be of real
use/value to Twisted as a project. I think there will be a big overlap, but I want to
make sure we have it consolidated _before_ starting with code.

Can we collect those requirements from a Twisted project perspective?

I have skimmed through this thread and dumped it to:

https://github.com/oberstet/scratchbox/blob/master/python/twisted/speed/requirements.md

E.g. 10. + 11. + 12. + 15. from Glyph's comments.

If anyone has more to add to this list, please reply, I'll append it, and clean it up /structure it
in the end.

> > So I thought, for the time being, it might be better if we (Tavendo) develop
> something for internal use / privately ("in-house"), and probably come again
> / show something when we actually have it running.
> 
> Well, we'd want to see something that actually works before officially
> standardizing Twisted on it anyway, but please feel free to share it early.  I

Yes. Will do. I hate _talking_, instead of showing.

> guarantee you that we will not reject something simply for using WAMP :-).

=)

> 
> > Regarding the "charting sub-issue":
> >
> > I came across https://plot.ly/
> >
> > This is kinda cool and very quick to get started:
> >
> > http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png
> >
> > It does histograms and tons of fancy stuff and hosts everything for free.
> 
> This is hosted-service only?  Not that that's a dealbreaker, I guess, we are

Yes, this is hosted only. Which is part of why it's attractive. But: we don't want
to be locked into this too much.

Means: the test result _data_ should stay in a database open and accessible to
the Twisted project. We could host that database. Or it could reside on TSF.

The data is where the value is and the Twisted project needs to own/control that.

The data from that DB is then just read and requests to above service issued
to produce graphs.

But if we at some point want to kick that service, and generate graphs on our
own or whatever, that should definitely be possible.

/Tobias

> pretty sure we're going to move everything to Github anyway...
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From adi at roiban.ro  Thu Jan 22 03:12:33 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 22 Jan 2015 10:12:33 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
 <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
Message-ID: <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>

Based on feedback I assume that this is a dead end and for now new
contributions will still need to find for themselves what is the path for
becoming a core contributor.

I would like to ask commit permission, at least to merge the 10 patches
from eeshangarg ... as looks like there is little interest in merging the
cleanup work.

Thanks!

On 22 November 2014 at 14:59, Jonathan Lange <jml at mumak.net> wrote:

> On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
>> >
>> > On 11:48 am, exarkun at twistedmatrix.com wrote:
>> >>>
>> >>> This sounds great. Could you jot it down on a wiki page?
>> >>
>> >> Hmmm okay. :P
>> >
>> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
>> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
>> nice to get feedback from some more contributors - particularly people who
>> have recently gotten commit access (about whether the problems are real and
>> what they think of the proposed solutions) but also from other long-time
>> Twisted contributors about whether they like this new idea about how to
>> bring more people in (and whether they would volunteer to do the necessary
>> candidate reviews - without which effort this isn't practical).
>>
>> Thank you so much for doing this, JP.  I've wanted to do something about
>> onboarding for a while and it's just been difficult to work up the
>> enthusiasm.
>>
>>
> Thanks indeed!
>
> I like this idea, and think it's worth trying. I can participate in one or
> two candidate reviews (depending on exactly when).
>
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150122/e19568c8/attachment.html>

From glyph at twistedmatrix.com  Thu Jan 22 14:30:45 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Jan 2015 13:30:45 -0800
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
 <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
 <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>
Message-ID: <35EF8422-2ABD-499D-B2D3-510A583426FA@twistedmatrix.com>

> On Jan 22, 2015, at 2:12 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Based on feedback I assume that this is a dead end and for now new contributions will still need to find for themselves what is the path for becoming a core contributor.

Characterizing this as a "dead end" is probably inaccurate.  There seems to be consensus that it would be a good idea if someone had the time to do it.  For now though, your conclusion is probably right.

> I would like to ask commit permission, at least to merge the 10 patches from eeshangarg ... as looks like there is little interest in merging the cleanup work.

Since I'd offered it to you in the past and you'd turned it down, I'm happy to reverse that decision :).  I take it that https://github.com/adiroiban.keys <https://github.com/adiroiban.keys> is an adequate source of credential material for you?

-glyph

> Thanks!
> 
> On 22 November 2014 at 14:59, Jonathan Lange <jml at mumak.net <mailto:jml at mumak.net>> wrote:
> On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com> wrote:
> >
> > On 11:48 am, exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com> wrote:
> >>>
> >>> This sounds great. Could you jot it down on a wiki page?
> >>
> >> Hmmm okay. :P
> >
> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>>. Notice "Proposal" in the URL.  It would be nice to get feedback from some more contributors - particularly people who have recently gotten commit access (about whether the problems are real and what they think of the proposed solutions) but also from other long-time Twisted contributors about whether they like this new idea about how to bring more people in (and whether they would volunteer to do the necessary candidate reviews - without which effort this isn't practical).
> 
> Thank you so much for doing this, JP.  I've wanted to do something about onboarding for a while and it's just been difficult to work up the enthusiasm.
> 
> 
> Thanks indeed!
> 
> I like this idea, and think it's worth trying. I can participate in one or two candidate reviews (depending on exactly when). 
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> 
> -- 
> Adi Roiban
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150122/50a3f43d/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 23 14:23:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 13:23:16 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
Message-ID: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>

Hi all,

Right now we have an Git mirror which has bogus committer IDs for everybody.

Eventually, this will become the actual real repository.

Before that happens, for aesthetic reasons, I would like to fix the metadata in the mirror so that it accurately records the email address of the committer, ideally with an email address that's actually associated with their github account so the right little picture shows up :).  I'll probably do this by using every committer's twistedmatrix.com <http://twistedmatrix.com/> email address, and they can either choose to associate that on Github (and Gravatar and Bitbucket or wherever) or not.

Does anyone know how I would re-generate the mirror to fix this?  I'd like to get it done soon before we slide further down the inexorable descent towards Git being the real upstream repository; having such a flag day after the migration seems untenable.

Also: can anyone (probably only Tom Prince, unfortunately) with knowledge of how the buildbot works tell me if any of that configuration is going to need to be adjusted?

Thanks!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150123/98262fff/attachment.html>

From meejah at meejah.ca  Fri Jan 23 15:04:10 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 24 Jan 2015 02:04:10 +0400
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 (glyph@twistedmatrix.com's message of "Fri, 23 Jan 2015 13:23:16
 -0800")
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
Message-ID: <86lhktqhlx.fsf@atlantis.meejah.ca>

Glyph <glyph at twistedmatrix.com> writes:

> Does anyone know how I would re-generate the mirror to fix this?

You should be able to change the metadata in-place, and force-push a new
repository (or delete and re-create?) Obviously, all the hashes are
going to change if you change the author names.

You'll want to look at "git filter-branch" and probably just
--env-filter will be sufficient (and quite fast) for this use-case.

Beware that you'll likely want to change both of GIT_AUTHOR_EMAIL *and*
GIT_COMMITTER_EMAIL (they're probably the same, especially if this is a
git-svn clone).

> Also: can anyone (probably only Tom Prince, unfortunately) with
> knowledge of how the buildbot works tell me if any of that
> configuration is going to need to be adjusted?

I have done the above to a simple buildbot setup before, and I recall it
being happy -- it usually exports a specific hash if I recall
correctly. Of course, Twisted's setup is likely considerably more
complex than mine was :)

Cheers,
meejah



From glyph at twistedmatrix.com  Fri Jan 23 18:27:08 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 17:27:08 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <86lhktqhlx.fsf@atlantis.meejah.ca>
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 <86lhktqhlx.fsf@atlantis.meejah.ca>
Message-ID: <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>


> On Jan 23, 2015, at 2:04 PM, meejah <meejah at meejah.ca> wrote:
> 
> Glyph <glyph at twistedmatrix.com> writes:
> 
>> Does anyone know how I would re-generate the mirror to fix this?
> 
> You should be able to change the metadata in-place, and force-push a new
> repository (or delete and re-create?) Obviously, all the hashes are
> going to change if you change the author names.
> 
> You'll want to look at "git filter-branch" and probably just
> --env-filter will be sufficient (and quite fast) for this use-case.
> 
> Beware that you'll likely want to change both of GIT_AUTHOR_EMAIL *and*
> GIT_COMMITTER_EMAIL (they're probably the same, especially if this is a
> git-svn clone).

If I do this with filter-branch, though, that's going to break git-svn support entirely because the hashes won't match, right?

>> Also: can anyone (probably only Tom Prince, unfortunately) with
>> knowledge of how the buildbot works tell me if any of that
>> configuration is going to need to be adjusted?
> 
> I have done the above to a simple buildbot setup before, and I recall it
> being happy -- it usually exports a specific hash if I recall
> correctly. Of course, Twisted's setup is likely considerably more
> complex than mine was :)

<https://github.com/twisted-infra/twisted-buildbot-configuration/ <https://github.com/twisted-infra/twisted-buildbot-configuration/>> is available for your perusal if you want to find it out :).  But yeah, it's Twisted's configuration specifically I'm asking about, since our frankenstein svn?git setup is both weird and rickety.  The goal of the ongoing changes I'm referring to in my original message is to remove it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150123/b37e14cc/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 23 19:07:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 18:07:26 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
Message-ID: <0E79434F-A5D5-4101-9C9B-BF2C68A4E538@twistedmatrix.com>


> On Jan 23, 2015, at 1:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> ... an email address that's actually associated with their github account so the right little picture shows up :) ...

HawkOwl showed me a neat trick.

You can add your git-svn-generated committer ID as an email address to your github account, and you'll start getting credit for all your old commits.

To get this ID, go into your git checkout and do something like:

GIT_PAGER=cat git log --format=%ae -n 1 --author=glyph

Except instead of "glyph" put your own name in there.  (You can get this out of the github UI too but the only place I saw was in a tooltip which makes copying and pasting annoying.)

Then go to https://github.com/settings/emails <https://github.com/settings/emails> and add paste the email into a box.

Please be nice and only do this for your own committer ID, since obviously bbbe8e31-12d6-0310-92fd-ac37d47ddeeb isn't a domain that github can send verification messages to :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150123/e3fd684b/attachment.html>

From meejah at meejah.ca  Fri Jan 23 19:21:32 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 24 Jan 2015 06:21:32 +0400
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>
 (glyph@twistedmatrix.com's message of "Fri, 23 Jan 2015 17:27:08
 -0800")
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 <86lhktqhlx.fsf@atlantis.meejah.ca>
 <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>
Message-ID: <86zj98or4j.fsf@atlantis.meejah.ca>

Glyph <glyph at twistedmatrix.com> writes:

> If I do this with filter-branch, though, that's going to break git-svn
> support entirely because the hashes won't match, right?

"Maybe". I haven't tried that. Certainly the hashes won't match, but the
git-svn-id tags in the commit messages will still match. So, *could*
plausibly work, but I don't recall if I ever tried additional pulls from
svn after filter-branch (we were migrating wholesale to git in "one"
step).

Another way is to re-do the git-svn clone, but provide a svn->git
mapping. You can do this with a program if they're "regular" (e.g. if
you can just add "@twistedmatrix.com" to the SVN ids). Or you can
provide an explicit file mapping SVN -> name + email.

Not sure how long your clones take, but I know they can take a
looooooong time, so might be worth trying the filter-branch way
while-u-wait for a re-clone ;)

Anyway, the option is --authors-prog to "git svn fetch" (or
--authors-file I think if you do the static mapping way?)

With the program, you get the SVN id as the only arg, and spit out
"first last <email at example.com>" on stdout.

I documented a bunch of my adventures in this regard (migrating a large
SVN repo to Git) on my blog:

   https://meejah.ca/blog/migrating-svn-to-git

Unfortunately, I can't simply release all my scripts for that, but I
could "use it as inspiration" if any of those steps sound useful to
Twisted.

> <https://github.com/twisted-infra/twisted-buildbot-configuration/> is
> available for your perusal if you want to find it out :).

Okay, I'll take a look.

-- 
meejah


From adi at roiban.ro  Sat Jan 24 11:45:16 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 18:45:16 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are used
	as configuration options
Message-ID: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>

Hi,

Why reviewing a patch I got into this error from twistedchecker.
This is old code, just that someone it was touched by recent changes,

C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
"MAX_LENGTH" for type attribute (should match
((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)

The code is like this, where TestNetstring is a line receiver
protocol... so MAX_LENGTH act as a configuration option.

            a = TestNetstring()
            a.MAX_LENGTH = 699

What to do in this case and how I can have  this code accepted by
twistedchecker?

Thanks!
-- 
Adi Roiban


From exarkun at twistedmatrix.com  Sat Jan 24 12:23:27 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 24 Jan 2015 19:23:27 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
Message-ID: <20150124192327.6966.608890772.divmod.xquotient.31@top>

On 06:45 pm, adi at roiban.ro wrote:
>Hi,
>
>Why reviewing a patch I got into this error from twistedchecker.
>This is old code, just that someone it was touched by recent changes,
>
>C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
>"MAX_LENGTH" for type attribute (should match
>((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)
>
>The code is like this, where TestNetstring is a line receiver
>protocol... so MAX_LENGTH act as a configuration option.
>
>            a = TestNetstring()
>            a.MAX_LENGTH = 699
>
>What to do in this case and how I can have  this code accepted by
>twistedchecker?

Fix twistedchecker.  MAX_LENGTH doesn't violate the Twisted naming 
convention.

Jean-Paul


From adi at roiban.ro  Sat Jan 24 12:48:34 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 19:48:34 +0000
Subject: [Twisted-Python] Twisted Lore project development
Message-ID: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>

Hi,

Is Twisted Lore project still under development.
Should we accept new patches on Lore?

Twisted has migrated to Sphinx ... does Twisted as a project encourage
people to use Lore?

I saw that it is still documented in latest version and there is no
mention of being deprecated

https://twistedmatrix.com/documents/current/lore/index.html

Thanks!

-- 
Adi Roiban


From adi at roiban.ro  Sat Jan 24 12:51:10 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 19:51:10 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <20150124192327.6966.608890772.divmod.xquotient.31@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
Message-ID: <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>

On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
> On 06:45 pm, adi at roiban.ro wrote:
>>
>> Hi,
>>
>> Why reviewing a patch I got into this error from twistedchecker.
>> This is old code, just that someone it was touched by recent changes,
>>
>> C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
>> "MAX_LENGTH" for type attribute (should match
>> ((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)
>>
>> The code is like this, where TestNetstring is a line receiver
>> protocol... so MAX_LENGTH act as a configuration option.
>>
>>            a = TestNetstring()
>>            a.MAX_LENGTH = 699
>>
>> What to do in this case and how I can have  this code accepted by
>> twistedchecker?
>
>
> Fix twistedchecker.  MAX_LENGTH doesn't violate the Twisted naming
> convention.

Thanks.

Found the report: https://github.com/twisted/twistedchecker/issues/52

Hope it will be easy to fix,
-- 
Adi Roiban


From exarkun at twistedmatrix.com  Sat Jan 24 13:50:48 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 24 Jan 2015 20:50:48 -0000
Subject: [Twisted-Python] Twisted Lore project development
In-Reply-To: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>
References: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>
Message-ID: <20150124205048.6966.1691644910.divmod.xquotient.40@top>

On 07:48 pm, adi at roiban.ro wrote:
>Hi,
>
>Is Twisted Lore project still under development.

No.  It is deprecated.

https://twistedmatrix.com/trac/browser/trunk/twisted/__init__.py#L68
https://twistedmatrix.com/trac/browser/trunk/twisted/lore/__init__.py#L5
>>>from twisted import lore
[...]
__main__:1: DeprecationWarning: twisted.lore was deprecated in Twisted 
14.0.0: Use Sphinx instead.
>>>

>Should we accept new patches on Lore?

It's very unlikely that doing so will improve anything for anyone.
>Twisted has migrated to Sphinx ... does Twisted as a project encourage
>people to use Lore?

I think "Use Sphinx instead." in the message about should answer this 
fairly clearly.
>I saw that it is still documented in latest version and there is no
>mention of being deprecated

It is standing policy *not* to delete the documentation of deprecated 
APIs.  Only when the API itself is removed is the corresponding 
documentation removed.

Jean-Paul
>https://twistedmatrix.com/documents/current/lore/index.html
>
>Thanks!
>
>--
>Adi Roiban
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Sat Jan 24 18:01:16 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 01:01:16 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
Message-ID: <20150125010116.6966.226576624.divmod.xquotient.45@top>

On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>On 06:45 pm, adi at roiban.ro wrote:
>>>
>>>Hi,
>>>
>>>Why reviewing a patch I got into this error from twistedchecker.
>>>This is old code, just that someone it was touched by recent changes,

Also: pre-existing errors like this one should not block new development 
work being done.  It is *not* a requirement that a patch fix all nearby 
but unrelated problems like this one.

New and changed code should conform to the standard and try not to 
introduce new errors.  If the "errors" being introduced are due to bugs 
in a tool that reports errors, the bugs should be fixed.

Existing code *near* new or changed code can and should be left alone.

Jean-Paul


From trac at twistedmatrix.com  Sun Jan 25 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 25 Jan 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1422169517.82.173003100213644203@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150125/bb6e0c46/attachment.html>

From adi at roiban.ro  Sun Jan 25 07:09:38 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 25 Jan 2015 14:09:38 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <20150125010116.6966.226576624.divmod.xquotient.45@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
Message-ID: <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>

On 25 January 2015 at 01:01,  <exarkun at twistedmatrix.com> wrote:
> On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>>
>> On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>>
>>> On 06:45 pm, adi at roiban.ro wrote:
>>>>
>>>>
>>>> Hi,
>>>>
>>>> Why reviewing a patch I got into this error from twistedchecker.
>>>> This is old code, just that someone it was touched by recent changes,
>
>
> Also: pre-existing errors like this one should not block new development
> work being done.  It is *not* a requirement that a patch fix all nearby but
> unrelated problems like this one.

OK. but then maybe twistededchecker and pyflakes should not be part of
the stable builders.
In my head, all stable builders should pass before merging new code.

> New and changed code should conform to the standard and try not to introduce
> new errors.  If the "errors" being introduced are due to bugs in a tool that
> reports errors, the bugs should be fixed.

New code should only try not to introduce new errors?

I was expecting that new code is not allowed to introduce new errors. Period.

> Existing code *near* new or changed code can and should be left alone.

Does this mean that The (boy) scout rule does not apply for Twisted development?

Thanks!


-- 
Adi Roiban


From adi at roiban.ro  Sun Jan 25 07:19:27 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 25 Jan 2015 14:19:27 +0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
Message-ID: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>

While running tests I see that the following tests fails randomly...
it it was failing  from some time


twisted.words.test.test_xpath.XPathTests.test_position
===============================================================================
[FAIL]
Traceback (most recent call last):
  File "C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_dist\test\test_disttrial.py",
line 371, in test_runUntilFailure
    self.assertEqual(5, len(called))
  File "C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_synctest.py",
line 447, in assertEqual
    % (msg, pformat(first), pformat(second)))
twisted.trial.unittest.FailTest: not equal:
a = 5
b = 2

----------

On my local computer (Ubuntu 14.04) the test is always skipped.

Does anyone has any idea why the test is not skipped ?

I would like to have stable results from this tests as with the
current state I always have to double check if a failure on XP is a
new one or is just this bad tests.

Thanks!
-- 
Adi Roiban


From exarkun at twistedmatrix.com  Sun Jan 25 08:21:47 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 15:21:47 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
 <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
Message-ID: <20150125152147.6966.548675115.divmod.xquotient.49@top>

On 02:09 pm, adi at roiban.ro wrote:
>On 25 January 2015 at 01:01,  <exarkun at twistedmatrix.com> wrote:
>>On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>>>
>>>On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>>>
>>>>On 06:45 pm, adi at roiban.ro wrote:
>>>>>
>>>>>
>>>>>Hi,
>>>>>
>>>>>Why reviewing a patch I got into this error from twistedchecker.
>>>>>This is old code, just that someone it was touched by recent 
>>>>>changes,
>>
>>
>>Also: pre-existing errors like this one should not block new 
>>development
>>work being done.  It is *not* a requirement that a patch fix all 
>>nearby but
>>unrelated problems like this one.
>
>OK. but then maybe twistededchecker and pyflakes should not be part of
>the stable builders.
>In my head, all stable builders should pass before merging new code.
>>New and changed code should conform to the standard and try not to 
>>introduce
>>new errors.  If the "errors" being introduced are due to bugs in a 
>>tool that
>>reports errors, the bugs should be fixed.
>
>New code should only try not to introduce new errors?

The tools are there to help development, not hinder it.  If a tool is 
producing an error that doesn't help development, slavishly adhering to 
a policy that requires additional work that doesn't help the project is 
counter-productive.

If all the tools were perfect we could say that all new code *must* 
never introduce new errors.  Unfortunately the tools are not perfect.
>I was expecting that new code is not allowed to introduce new errors. 
>Period.
>>Existing code *near* new or changed code can and should be left alone.
>
>Does this mean that The (boy) scout rule does not apply for Twisted 
>development?

I'm not familiar with "The (boy) scout rule".

Jean-Paul


From exarkun at twistedmatrix.com  Sun Jan 25 08:28:34 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 15:28:34 -0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
Message-ID: <20150125152834.6966.1990488.divmod.xquotient.58@top>

On 02:19 pm, adi at roiban.ro wrote:
>While running tests I see that the following tests fails randomly...
>it it was failing  from some time
>
>
>twisted.words.test.test_xpath.XPathTests.test_position

This is an unrelated test.  I'm not sure if this is a simple copy/paste 
mistake or if you're mis-reading trial output.  This is the test before 
the test that failed.

The test that failed is named at the bottom of the failure report:

twisted.trial._dist.test.test_disttrial.DistTrialRunnerTestCase.test_runUntilFailure

This test has intermittently failed on Windows since disttrial was 
merged into trunk.

The ticket tracking this problem is 
https://twistedmatrix.com/trac/ticket/6027
>===============================================================================
>[FAIL]
>Traceback (most recent call last):
>  File 
>"C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_dist\test\test_disttrial.py",
>line 371, in test_runUntilFailure
>    self.assertEqual(5, len(called))
>  File 
>"C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_synctest.py",
>line 447, in assertEqual
>    % (msg, pformat(first), pformat(second)))
>twisted.trial.unittest.FailTest: not equal:
>a = 5
>b = 2
>
>----------
>
>On my local computer (Ubuntu 14.04) the test is always skipped.

The skip report should tell you why it's skipped.  Presumably you're 
missing one of the dependencies - though off the top of my head I'm not 
sure what third-party dependencies this code has.
>Does anyone has any idea why the test is not skipped ?

The default state of a test should *not* be to skip.  It should be to 
run.  A skipped test is a useless test.

Jean-Paul
>I would like to have stable results from this tests as with the
>current state I always have to double check if a failure on XP is a
>new one or is just this bad tests.
>
>Thanks!
>--
>Adi Roiban


From glyph at twistedmatrix.com  Sun Jan 25 19:55:00 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 18:55:00 -0800
Subject: [Twisted-Python] twistedchecker - Names of constant which are
	used as configuration options
In-Reply-To: <20150125152147.6966.548675115.divmod.xquotient.49@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
 <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
 <20150125152147.6966.548675115.divmod.xquotient.49@top>
Message-ID: <88CCAFEA-8C91-4B47-AA9C-43E519822F29@twistedmatrix.com>


> On Jan 25, 2015, at 7:21 AM, exarkun at twistedmatrix.com wrote:

> The tools are there to help development, not hinder it.  If a tool is producing an error that doesn't help development, slavishly adhering to a policy that requires additional work that doesn't help the project is counter-productive.


I think the consensus rule we are converging on for this is, if you notice a bug in the tool, you have to report the bug in the tool.  If the bug already exists, just link to the issue which is affected by that bug, but if it's actually a bug and not just a coding-standard thing you don't feel like fixing, you should not block development on it.  This seems like the right way to proceed with spurious warnings so we don't add tons of pointless busy-work but we also don't just develop a culture of only a special inner circle knowing which warnings are OK to ignore.

>> Does this mean that The (boy) scout rule does not apply for Twisted development?
> 
> I'm not familiar with "The (boy) scout rule".

I believe that Adi is referring to <http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule <http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule>>, "Always leave the campground cleaner than you found it."

While every change should be an improvement, I think the Burning Man creed of "no matter out of place" would be a better way to formulate the policy :).  You should clean up the things that you're changing, but every unrelated change is an extra burden on the reviewer, so it's not doing anyone any favors to make patches super long to fix every trace of coding standard violation.

Having dedicated cleanup branches is fine, but they should also be finite in their scope, and not clean up things beyond the specific area that they're trying to fix.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150125/6a8c20b4/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 25 20:50:10 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 19:50:10 -0800
Subject: [Twisted-Python] hard dependency on setuptools
Message-ID: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>

Hi all,

I don't know how you'd install Twisted without setuptools these days anyway, but just as a heads up, as per discussion on <https://twistedmatrix.com/trac/ticket/3696#comment:79 <https://twistedmatrix.com/trac/ticket/3696#comment:79>> we are going to remove any pretense of supporting Twisted without setuptools installed.

I am probably going to install it on the last buildbot environment that doesn't have it tomorrow.  If you have a strong case for continuing to support optionally depending on setuptools... well, I am probably still going to do that and we can file some more tickets to support it properly instead of by accident later :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150125/0dd2158c/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 25 21:00:31 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 20:00:31 -0800
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <20150125152834.6966.1990488.divmod.xquotient.58@top>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
Message-ID: <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>


> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:

> This test has intermittently failed on Windows since disttrial was merged into trunk.

And, as you yourself pointed out on the ticket, sometimes on Linux too.

I still have absolutely no clue why this happens, by the way.  If anyone else could be prompted to investigate I would be much obliged

> The default state of a test should *not* be to skip.  It should be to run.  A skipped test is a useless test.

As a matter of general principle, the only reason a test should ever be skipped within Twisted is if an optional dependency is not available.  And, just to be clear, the presence of "TODO'd" tests is pretty much just a bug, fix old ones and never add new ones :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150125/7fe0ccf0/attachment.html>

From adi at roiban.ro  Mon Jan 26 08:56:04 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 15:56:04 +0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
 <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
Message-ID: <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>

On 26 January 2015 at 04:00, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:
>
>
> This test has intermittently failed on Windows since disttrial was merged
> into trunk.
>
>
> And, as you yourself pointed out on the ticket, sometimes on Linux too.
>
> I still have absolutely no clue why this happens, by the way.  If anyone
> else could be prompted to investigate I would be much obliged

I have updated my findings here: https://twistedmatrix.com/trac/ticket/6027


> The default state of a test should *not* be to skip.  It should be to run.
> A skipped test is a useless test.
>
> As a matter of general principle, the only reason a test should ever be
> skipped within Twisted is if an optional dependency is not available.  And,
> just to be clear, the presence of "TODO'd" tests is pretty much just a bug,
> fix old ones and never add new ones :-).

I think that these todo are just another way of creating a ticket ...
with a promise to annoy you forever

Would it help if I extract them into proper Trac tickes and clean the code?

--------

Maybe update docs and stress that todo tests should not be committed
... or never mention about such thing as TODO markers,
I just write tests and expect them to fail without marking them as todo.

http://twistedmatrix.com/documents/current/core/development/policy/test-standard.html

(not sure why some docs are on wiki and others in the repo)

And maybe also add a twistedchecker check and check that no new tests
are commited with todo.


-- 
Adi Roiban


From adi at roiban.ro  Mon Jan 26 11:32:49 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 18:32:49 +0000
Subject: [Twisted-Python] hard dependency on setuptools
In-Reply-To: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>
References: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>
Message-ID: <CAFycZ9dDKwqjkHrcg8OW9SA1_uoodHfqjvBynzg_Cp0Lu1rhhA@mail.gmail.com>

I think that setuptools is fine. Looking forward to see  3696 merged
so that I don't have to manually hunt dependencies and this should
help with implementing
https://github.com/twisted-infra/twisted-buildbot-configuration/pull/7

Thanks!

On 26 January 2015 at 03:50, Glyph <glyph at twistedmatrix.com> wrote:
> Hi all,
>
> I don't know how you'd install Twisted without setuptools these days anyway,
> but just as a heads up, as per discussion on
> <https://twistedmatrix.com/trac/ticket/3696#comment:79> we are going to
> remove any pretense of supporting Twisted without setuptools installed.
>
> I am probably going to install it on the last buildbot environment that
> doesn't have it tomorrow.  If you have a strong case for continuing to
> support optionally depending on setuptools... well, I am probably still
> going to do that and we can file some more tickets to support it properly
> instead of by accident later :).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban


From adi at roiban.ro  Mon Jan 26 12:12:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 19:12:14 +0000
Subject: [Twisted-Python] Review tag for closed tickets
Message-ID: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>

Jean Paul commented that for merged tickets I should remove the review tag.

I am lost between wiki pages and sphinx documentation.

Where is the place where these these steps are described and maybe I
am also not aware of other steps required after a branch is merged?

----

Since the ticket is automatically closed, maybe the bot can also
remove the review ticket.

Thanks!

-- 
Adi Roiban


From glyph at twistedmatrix.com  Mon Jan 26 13:11:28 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 12:11:28 -0800
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
Message-ID: <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>


> On Jan 26, 2015, at 11:12 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Jean Paul commented that for merged tickets I should remove the review tag.
> 
> I am lost between wiki pages and sphinx documentation.

<https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>> pretty much describes the whole process.

Notice that the "remove the review keyword" step comes before the "merge the change to trunk" step.

> Where is the place where these these steps are described and maybe I
> am also not aware of other steps required after a branch is merged?

The reason you are not finding this in a list of steps after the branch is merged is because it should be done in advance of merging the branch, you skipped an earlier part of the process :).

> Since the ticket is automatically closed, maybe the bot can also
> remove the review ticket.

The review should be completed before the ticket is merged, so the bot should not be doing this automatically.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150126/7d8ec10f/attachment.html>

From adi at roiban.ro  Mon Jan 26 13:51:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 20:51:14 +0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
Message-ID: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>

On 26 January 2015 at 20:11, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jan 26, 2015, at 11:12 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Jean Paul commented that for merged tickets I should remove the review tag.
>
> I am lost between wiki pages and sphinx documentation.
>
>
> <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>
> pretty much describes the whole process.
>
> Notice that the "remove the review keyword" step comes before the "merge the
> change to trunk" step.
>
> Where is the place where these these steps are described and maybe I
> am also not aware of other steps required after a branch is merged?
>
>
> The reason you are not finding this in a list of steps after the branch is
> merged is because it should be done in advance of merging the branch, you
> skipped an earlier part of the process :).

True. Thanks!

My bad... but then it also state "Make sure that it's green! " ... but
in a previous email I just found out that is ok for twistededchecker
and pyflakes to be red.

> Since the ticket is automatically closed, maybe the bot can also
> remove the review ticket.
>
>
> The review should be completed before the ticket is merged, so the bot
> should not be doing this automatically.

but in the commit message I do add the author, why not have the bot
automatically assign the first author form the list, review merge and
close the ticket?

What is the purpose of these manual task and why you don't want to
automate them?

PS: Trac "reasing to" field is a PITA :)

-- 
Adi Roiban


From exarkun at twistedmatrix.com  Mon Jan 26 17:44:27 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Jan 2015 00:44:27 -0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
Message-ID: <20150127004427.6966.1548888533.divmod.xquotient.67@top>

On 26 Jan, 08:51 pm, adi at roiban.ro wrote:
>>
>>The review should be completed before the ticket is merged, so the bot
>>should not be doing this automatically.
>
>but in the commit message I do add the author, why not have the bot
>automatically assign the first author form the list, review merge and
>close the ticket?
>
>What is the purpose of these manual task and why you don't want to
>automate them?

You jumped pretty quickly from "it is not automated" to "you don't want 
to automate them".

Building reliable automation is work.  If that's work you want to do, 
feel free.

One challenge you'll have to contend with is that the metadata 
automatically collected by trac is often incorrect.  For example, the 
author field is populated based on the person who creates the svn 
branch.  Non-committers can never create svn branches so the tickets 
worked on by non-committers often have an incorrect author field.

I'm sure this can be overcome.  It's just one example of an extra 
difficulty you might not have immediately recognized when thinking about 
how reliable automation to take over this menial task could work.

Jean-Paul


From glyph at twistedmatrix.com  Mon Jan 26 17:57:20 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 16:57:20 -0800
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
Message-ID: <2F7788E5-BD06-4CB2-B723-24FED0607AF4@twistedmatrix.com>


> On Jan 26, 2015, at 12:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> My bad... but then it also state "Make sure that it's green! " ... but
> in a previous email I just found out that is ok for twistededchecker
> and pyflakes to be red.

This was definitely an oversight, so I've updated the wiki page to include information about what to do when a tool has a bug:

<https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150126/bb1e3983/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 26 18:00:36 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 17:00:36 -0800
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
 <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
 <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>
Message-ID: <D232AD33-C7F4-4FDA-BB7B-BC2B5C90B3CA@twistedmatrix.com>


> On Jan 26, 2015, at 7:56 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 January 2015 at 04:00, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:
>> 
>> 
>> This test has intermittently failed on Windows since disttrial was merged
>> into trunk.
>> 
>> 
>> And, as you yourself pointed out on the ticket, sometimes on Linux too.
>> 
>> I still have absolutely no clue why this happens, by the way.  If anyone
>> else could be prompted to investigate I would be much obliged
> 
> I have updated my findings here: https://twistedmatrix.com/trac/ticket/6027 <https://twistedmatrix.com/trac/ticket/6027>

Thanks for looking into it.

>> The default state of a test should *not* be to skip.  It should be to run.
>> A skipped test is a useless test.
>> 
>> As a matter of general principle, the only reason a test should ever be
>> skipped within Twisted is if an optional dependency is not available.  And,
>> just to be clear, the presence of "TODO'd" tests is pretty much just a bug,
>> fix old ones and never add new ones :-).
> 
> I think that these todo are just another way of creating a ticket ...
> with a promise to annoy you forever

And to annoy every contributor ever who works on something unrelated :).

> Would it help if I extract them into proper Trac tickes and clean the code?

Some of them are already filed, but... yes, having a ticket for every one would be helpful.

In fact, we might want to have two tickets for each one: one "delete this todo'd test" ticket, and one "actually fix this issue" ticket, since we don't need to keep hanging on to the tests in the repo themselves while we wait for someone to take care of the issues.

> --------
> 
> Maybe update docs and stress that todo tests should not be committed
> ... or never mention about such thing as TODO markers,
> I just write tests and expect them to fail without marking them as todo.
> 
> http://twistedmatrix.com/documents/current/core/development/policy/test-standard.html
> 
> (not sure why some docs are on wiki and others in the repo)

There's no really good reason, that's just where things are.  Probably everything should move into the repo.

> And maybe also add a twistedchecker check and check that no new tests
> are commited with todo.

If you wanted to add that it would definitely be helpful.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150126/73e612d8/attachment-0001.html>

From adi at roiban.ro  Tue Jan 27 02:38:36 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 27 Jan 2015 09:38:36 +0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <20150127004427.6966.1548888533.divmod.xquotient.67@top>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
 <20150127004427.6966.1548888533.divmod.xquotient.67@top>
Message-ID: <CAFycZ9fJ0X+hYQZ17GQRC6Smq-Z8Lx35XEEgvsB8BQwQ1y_eHA@mail.gmail.com>

On 27 January 2015 at 00:44,  <exarkun at twistedmatrix.com> wrote:
> On 26 Jan, 08:51 pm, adi at roiban.ro wrote:
>>>
>>>
>>> The review should be completed before the ticket is merged, so the bot
>>> should not be doing this automatically.
>>
>>
>> but in the commit message I do add the author, why not have the bot
>> automatically assign the first author form the list, review merge and
>> close the ticket?
>>
>> What is the purpose of these manual task and why you don't want to
>> automate them?
>
>
> You jumped pretty quickly from "it is not automated" to "you don't want to
> automate them".

Sorry for that.  I have interpreted "the bot should not be doing this
automatically" as a statement
that any work in this direction will be rejected

> Building reliable automation is work.  If that's work you want to do, feel
> free.

Will do. https://github.com/twisted-infra/trac-config/issues/19

Thanks for the comments!
-- 
Adi Roiban


From patryk at sciborek.com  Tue Jan 27 06:00:18 2015
From: patryk at sciborek.com (=?UTF-8?Q?Patryk_=C5=9Aciborek?=)
Date: Tue, 27 Jan 2015 14:00:18 +0100
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
	deferreds and mocking
Message-ID: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>

Hi!

I've just started a new project using Twisted and I want to write unit
tests since the beginning. Unfortunately I've got some trouble
understanding how should I do it. I read 'Test-driven development with
Twisted', read some articles on the web and searched on the mailing list
but I couldn't find anything which make it clear for me.

I've got a class:

class SessionCleaner(object):
    def __init__(self, session_db, interval=10):
        self.session_db = session_db
        self.lc = task.LoopingCall(self.check_old_sessions)
        self.lc.start(interval)

    @defer.inlineCallbacks
    def check_old_sessions(self):
        log.msg('check_old_sessions()', logLevel=logging.DEBUG)
        try:
            old_sessions = yield self.session_db.get_old_sessions()
            for s in old_sessions:
                yield self.session_db.process_stopped(s)

        except txredisapi.ConnectionError as e:
            log.msg('check_old_sessions - connection error {}'
                    .format(e), logLevel=logging.WARNING)

session_db is a object with methods which makes some calls to Redis.

Testing if __init__ works correctly is easy - I can mock task.LoopingCall
and check if it was called with correct attributes.

I've got trouble testing check_old_sessions. Since I'm writing unit tests I
don't want to call real session_db methods and make real Redis queries. I'd
like to mock them and test just few things:
- is the method get_old_sessions called?
- is the method process_stopped called N times with the arguments returned
by mocked get_old_sessions?
- is txredisapi.ConnectionError handled correctly?

So is there any "right" way of mocking functions which returns deferreds?
Or maybe I should test this method differently?

Best regards,
Patryk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150127/94ef0786/attachment.html>

From jamesbroadhead at gmail.com  Tue Jan 27 07:48:23 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Tue, 27 Jan 2015 14:48:23 +0000
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
Message-ID: <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>

Hey

I raised a similar question a while ago:
http://twistedmatrix.com/pipermail/twisted-python/2013-July/027241.html

Since then, our approach has evolved into the below, which may be useful.
https://github.com/jamesbroadhead/bttrtwisted/blob/master/bttrtwisted/testing.py

Usage:
  expected = Foo()
  remote_result = Result()
  thing = Thing()
  thing.call_external_service = dmockfunc(remote_result)

  d = thing.function_under_test(..)
  d.addCallback(self.assertEqual, expected)
  return d

You can use the func_dict param to gen_nondeferred_mock to have it stand
in-place-of an object

As always with mocks, a little can be helpful, but if you find you're
instantiating a lot of them, you may want to reconsider your approach.

Feedback welcome!
[ the repo is for experiments, so use with care ]

James

On 27 January 2015 at 13:00, Patryk ?ciborek <patryk at sciborek.com> wrote:

> Hi!
>
> I've just started a new project using Twisted and I want to write unit
> tests since the beginning. Unfortunately I've got some trouble
> understanding how should I do it. I read 'Test-driven development with
> Twisted', read some articles on the web and searched on the mailing list
> but I couldn't find anything which make it clear for me.
>
> I've got a class:
>
> class SessionCleaner(object):
>     def __init__(self, session_db, interval=10):
>         self.session_db = session_db
>         self.lc = task.LoopingCall(self.check_old_sessions)
>         self.lc.start(interval)
>
>     @defer.inlineCallbacks
>     def check_old_sessions(self):
>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>         try:
>             old_sessions = yield self.session_db.get_old_sessions()
>             for s in old_sessions:
>                 yield self.session_db.process_stopped(s)
>
>         except txredisapi.ConnectionError as e:
>             log.msg('check_old_sessions - connection error {}'
>                     .format(e), logLevel=logging.WARNING)
>
> session_db is a object with methods which makes some calls to Redis.
>
> Testing if __init__ works correctly is easy - I can mock task.LoopingCall
> and check if it was called with correct attributes.
>
> I've got trouble testing check_old_sessions. Since I'm writing unit tests
> I don't want to call real session_db methods and make real Redis queries.
> I'd like to mock them and test just few things:
> - is the method get_old_sessions called?
> - is the method process_stopped called N times with the arguments returned
> by mocked get_old_sessions?
> - is txredisapi.ConnectionError handled correctly?
>
> So is there any "right" way of mocking functions which returns deferreds?
> Or maybe I should test this method differently?
>
> Best regards,
> Patryk
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150127/32037091/attachment.html>

From adi at roiban.ro  Tue Jan 27 08:18:12 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 27 Jan 2015 15:18:12 +0000
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
Message-ID: <CAFycZ9em8zt_SSKhfmz0sZeAh8qZO0D3JF6U7hRuVZ+WrhuLVA@mail.gmail.com>

On 27 January 2015 at 13:00, Patryk ?ciborek <patryk at sciborek.com> wrote:
> Hi!
>
> I've just started a new project using Twisted and I want to write unit tests
> since the beginning. Unfortunately I've got some trouble understanding how
> should I do it. I read 'Test-driven development with Twisted', read some
> articles on the web and searched on the mailing list but I couldn't find
> anything which make it clear for me.
>
> I've got a class:
>
> class SessionCleaner(object):
>     def __init__(self, session_db, interval=10):
>         self.session_db = session_db
>         self.lc = task.LoopingCall(self.check_old_sessions)

def __init__(self, session_db, interval=10, reactor=reactor)
    self.lc = task.LoopingCall(self.check_old_sessions)
    self.lc.clock = reactor

Then in tests you can replace the default reactor with
twisted.internet.task.Clock
In this way you have control over the looping call.

>         self.lc.start(interval)
>
>     @defer.inlineCallbacks
>     def check_old_sessions(self):
>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>         try:
>             old_sessions = yield self.session_db.get_old_sessions()
>             for s in old_sessions:
>                 yield self.session_db.process_stopped(s)
>
>         except txredisapi.ConnectionError as e:
>             log.msg('check_old_sessions - connection error {}'
>                     .format(e), logLevel=logging.WARNING)
>
> session_db is a object with methods which makes some calls to Redis.

In tests you can replace session_db with an InMemorySessionDB which is
rigged to return on demand a failure or success.

class InMemorySessionDB(object):

    def __init__(self):
         self._session = []
         self._stop_session = {}

    def addRiggedSession(self, session, stop_result):
          self._session.append(session)
          self._stop_session[session] = stop_result

    def get_old_sessions(self)
        return self._session

   def process_stopped(self, session):
      return self._stop_session[session]

InMemorySessionDB can also inherit form the real deal class and just
overwrite exit points.

This is more like a mock with a spec.. as it will fail if arbitrary
methods are called with arbitrary arguments.

I don't think there is a right way of doing it, but I try to avoid
using generic Mock or MagicMock objects.

Good luck!
-- 
Adi Roiban


From psi29a at gmail.com  Thu Jan 29 07:10:27 2015
From: psi29a at gmail.com (bret curtis)
Date: Thu, 29 Jan 2015 15:10:27 +0100
Subject: [Twisted-Python] bringing TxMongo back from the brink!
Message-ID: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>

Hello fellow Twistrons,

let me introduce TxMongo, an asynchronous MongoDB client that has come up a
few times in discussion on this list. The project isn't dead, it has been
contributed to over the years though while the original author, Alexandre
Fiori, reviews and accepts the pull requests.

After helping make a new 0.6 release, with SSL support, we talked about the
possibility of Amplidata taking on the future development of TxMongo and
breathing new life into the project. We just need a new place to host the
'official' repository and reign in all the various forks. What better place
to do that than Twisted's github organization, similar in nature to what
was done with Ldaptor.

Amplidata will be the primary driver in development, but new feature
requests and patches are of course, always welcome. :)

So what does everyone think of this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150129/6c6f9b3a/attachment.html>

From clayton.daley at gmail.com  Thu Jan 29 13:05:32 2015
From: clayton.daley at gmail.com (Clayton Daley)
Date: Thu, 29 Jan 2015 15:05:32 -0500
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
Message-ID: <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>

Unless Twisted loves the idea of hosting this, it might make more sense to
start a TxCommons (like https://github.com/ZF-Commons). This shifts the
emphasis away from the Twisted and onto the Commons, including:

   - The lower (or lack of) "core support" commitment.  The Commons can
   still highlight "supported" projects (by the commons or outside
   organizations), but it's more transparent about the status relative to core.
   - A significantly lower participation/contribution barrier that isn't
   interrelated with the politics (and justifiably high standards) of core.
   - A central place to find Tx libraries that actively welcomes new
   additions.
      - My twisted-pyro and twisted-mandrill are so-so examples of what I
      mean.  If they were a little more mature, it'd be better for someone to
      find and improve these libraries than start over from scratch.
      - More importantly, users would know that the project won't fragment
      if I'm not proactively maintaining it. They can always become an active
      participant in the Commons and move business along.  Obviously, I
      relinquish that control if and when I contribute it (or the commons
      establishes an official fork).

Clayton Daley


On Thu, Jan 29, 2015 at 9:10 AM, bret curtis <psi29a at gmail.com> wrote:

> Hello fellow Twistrons,
>
> let me introduce TxMongo, an asynchronous MongoDB client that has come up
> a few times in discussion on this list. The project isn't dead, it has been
> contributed to over the years though while the original author, Alexandre
> Fiori, reviews and accepts the pull requests.
>
> After helping make a new 0.6 release, with SSL support, we talked about
> the possibility of Amplidata taking on the future development of TxMongo
> and breathing new life into the project. We just need a new place to host
> the 'official' repository and reign in all the various forks. What better
> place to do that than Twisted's github organization, similar in nature to
> what was done with Ldaptor.
>
> Amplidata will be the primary driver in development, but new feature
> requests and patches are of course, always welcome. :)
>
> So what does everyone think of this?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150129/4b734a73/attachment.html>

From glyph at twistedmatrix.com  Thu Jan 29 20:19:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Jan 2015 19:19:58 -0800
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
 <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
Message-ID: <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>



> On Jan 29, 2015, at 12:05 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> Unless Twisted loves the idea of hosting this, it might make more sense to start a TxCommons (like https://github.com/ZF-Commons <https://github.com/ZF-Commons>). This shifts the emphasis away from the Twisted and onto the Commons, including:
> The lower (or lack of) "core support" commitment.  The Commons can still highlight "supported" projects (by the commons or outside organizations), but it's more transparent about the status relative to core.
> A significantly lower participation/contribution barrier that isn't interrelated with the politics (and justifiably high standards) of core.
> A central place to find Tx libraries that actively welcomes new additions.
> My twisted-pyro and twisted-mandrill are so-so examples of what I mean.  If they were a little more mature, it'd be better for someone to find and improve these libraries than start over from scratch.
> More importantly, users would know that the project won't fragment if I'm not proactively maintaining it. They can always become an active participant in the Commons and move business along.  Obviously, I relinquish that control if and when I contribute it (or the commons establishes an official fork).
> Clayton Daley

So, I don't mind the idea of Twisted hosting it for now, but you make a good point.  The Twisted org on Github is presently hosting quite a few things, with varying degrees of association with various subsets of the core developers.

Since ldaptor already moved to this org, I think we should probably just move this as well, and then move things out later once we have established a Commons org and figured out how we want to administer it.

BTW: any chance of renaming those TxPyro and TxMandrill? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150129/b19e092d/attachment.html>

From hawkowl at atleastfornow.net  Fri Jan 30 03:08:45 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 30 Jan 2015 18:08:45 +0800
Subject: [Twisted-Python] Twisted 15.0 Release Announcement
Message-ID: <1BBEE365-2502-4B0E-B3D1-E619DCF56E19@atleastfornow.net>

Hi everyone!

On behalf of Twisted Matrix Laboratories, I am honoured to announce that Twisted 15.0.0 is *here*!

Highlights are:

- SSLv3 is disabled by default by endpoints created by `twisted.internet.endpoints.serverFromString` and `twisted.internet.endpoints.clientFromString`.
- inlineCallbacks now has introductory documentation, and now supports using the return statement with a value on Python 3.
- `twisted.web.client.Agent` now supports using UNIX sockets.
- `ProcessEndpoint` now has flow control, which makes it useful for many more protocols
- A whole bunch of bug fixes and other improvements, with 70+ closed tickets.

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The full details of what?s new in the release is contained in the NEWS file <https://raw.githubusercontent.com/twisted/twisted/releases/release-15.0.0-7335/NEWS>.

As usual, many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code and documentation, and all the people building great things with Twisted!

Twisted Regards,
HawkOwl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150130/768278e0/attachment.pgp>

From psi29a at gmail.com  Fri Jan 30 03:34:01 2015
From: psi29a at gmail.com (bret curtis)
Date: Fri, 30 Jan 2015 11:34:01 +0100
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
 <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
 <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>
Message-ID: <CA+LhZ99NMtQ3C+an-BCms_wB_tTTbzFWbXXF12aKPKMYVoqtPA@mail.gmail.com>

On Fri, Jan 30, 2015 at 4:19 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Jan 29, 2015, at 12:05 PM, Clayton Daley <clayton.daley at gmail.com>
> wrote:
>
> Unless Twisted loves the idea of hosting this, it might make more sense to
> start a TxCommons (like https://github.com/ZF-Commons). This shifts the
> emphasis away from the Twisted and onto the Commons, including:
>
>    - The lower (or lack of) "core support" commitment.  The Commons can
>    still highlight "supported" projects (by the commons or outside
>    organizations), but it's more transparent about the status relative to core.
>    - A significantly lower participation/contribution barrier that isn't
>    interrelated with the politics (and justifiably high standards) of core.
>    - A central place to find Tx libraries that actively welcomes new
>    additions.
>       - My twisted-pyro and twisted-mandrill are so-so examples of what I
>       mean.  If they were a little more mature, it'd be better for someone to
>       find and improve these libraries than start over from scratch.
>       - More importantly, users would know that the project won't
>       fragment if I'm not proactively maintaining it. They can always become an
>       active participant in the Commons and move business along.  Obviously, I
>       relinquish that control if and when I contribute it (or the commons
>       establishes an official fork).
>
> Clayton Daley
>
>
> So, I don't mind the idea of Twisted hosting it for now, but you make a
> good point.  The Twisted org on Github is presently hosting quite a few
> things, with varying degrees of association with various subsets of the
> core developers.
>
> Since ldaptor already moved to this org, I think we should probably just
> move this as well, and then move things *out* later once we have
> established a Commons org and figured out how we want to administer it.
>
> BTW: any chance of renaming those TxPyro and TxMandrill? :)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

If ever the Twisted org on github feels a bit crowded, I think a break out
to something like TxCommons is a good idea.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150130/14ea2f28/attachment.html>

From patryk at sciborek.com  Fri Jan 30 07:08:29 2015
From: patryk at sciborek.com (=?UTF-8?Q?Patryk_=C5=9Aciborek?=)
Date: Fri, 30 Jan 2015 15:08:29 +0100
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
 <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>
Message-ID: <CAEHqL6ddnkTiv+1yAP5xg8ZZXnQwqtVofjdXptXCLpx7oy-5SA@mail.gmail.com>

Hi James,

Thank you for Your response, it was very helpful :) I hope you don't mind
if I use your testing.py in my project. I wrote tests for the
SessionCleaner class and they seems to be OK (
https://github.com/scibi/pyradacctsrv/blob/master/tests/test_cleaner.py).

I saw your post from July 2013 but that thread was more about docstrings
and checking return values of test methods than mocking and deferreds ;)

Kind regards,
Patryk

On Tue, Jan 27, 2015 at 3:48 PM, James Broadhead <jamesbroadhead at gmail.com>
wrote:

> Hey
>
> I raised a similar question a while ago:
> http://twistedmatrix.com/pipermail/twisted-python/2013-July/027241.html
>
> Since then, our approach has evolved into the below, which may be useful.
>
> https://github.com/jamesbroadhead/bttrtwisted/blob/master/bttrtwisted/testing.py
>
> Usage:
>   expected = Foo()
>   remote_result = Result()
>   thing = Thing()
>   thing.call_external_service = dmockfunc(remote_result)
>
>   d = thing.function_under_test(..)
>   d.addCallback(self.assertEqual, expected)
>   return d
>
> You can use the func_dict param to gen_nondeferred_mock to have it stand
> in-place-of an object
>
> As always with mocks, a little can be helpful, but if you find you're
> instantiating a lot of them, you may want to reconsider your approach.
>
> Feedback welcome!
> [ the repo is for experiments, so use with care ]
>
> James
>
> On 27 January 2015 at 13:00, Patryk ?ciborek <patryk at sciborek.com> wrote:
>
>> Hi!
>>
>> I've just started a new project using Twisted and I want to write unit
>> tests since the beginning. Unfortunately I've got some trouble
>> understanding how should I do it. I read 'Test-driven development with
>> Twisted', read some articles on the web and searched on the mailing list
>> but I couldn't find anything which make it clear for me.
>>
>> I've got a class:
>>
>> class SessionCleaner(object):
>>     def __init__(self, session_db, interval=10):
>>         self.session_db = session_db
>>         self.lc = task.LoopingCall(self.check_old_sessions)
>>         self.lc.start(interval)
>>
>>     @defer.inlineCallbacks
>>     def check_old_sessions(self):
>>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>>         try:
>>             old_sessions = yield self.session_db.get_old_sessions()
>>             for s in old_sessions:
>>                 yield self.session_db.process_stopped(s)
>>
>>         except txredisapi.ConnectionError as e:
>>             log.msg('check_old_sessions - connection error {}'
>>                     .format(e), logLevel=logging.WARNING)
>>
>> session_db is a object with methods which makes some calls to Redis.
>>
>> Testing if __init__ works correctly is easy - I can mock task.LoopingCall
>> and check if it was called with correct attributes.
>>
>> I've got trouble testing check_old_sessions. Since I'm writing unit tests
>> I don't want to call real session_db methods and make real Redis queries.
>> I'd like to mock them and test just few things:
>> - is the method get_old_sessions called?
>> - is the method process_stopped called N times with the arguments
>> returned by mocked get_old_sessions?
>> - is txredisapi.ConnectionError handled correctly?
>>
>> So is there any "right" way of mocking functions which returns deferreds?
>> Or maybe I should test this method differently?
>>
>> Best regards,
>> Patryk
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150130/2f6a8b36/attachment-0001.html>

From dynamicgl at gmail.com  Sat Jan 31 11:37:22 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 1 Feb 2015 02:37:22 +0800
Subject: [Twisted-Python] txmongo vs. pymongo + callInThread
In-Reply-To: <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
References: <CACKEAnUqS8B6zkPRBMYG4+_NVcig1qkXZPt-xRpDXBEm1HyhcA@mail.gmail.com>
 <CABkOF6Q-A_96kzX=DyLhWn1HF9CBiRu+BrkuuVviCozAxL7H7g@mail.gmail.com>
 <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
Message-ID: <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>

On Tue, Dec 30, 2014 at 5:50 PM, bret curtis <psi29a at gmail.com> wrote:

> On Tue, Dec 23, 2014 at 7:51 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
>>
>>
>> On Mon, Dec 22, 2014 at 5:05 AM, Clayton Daley <clayton.daley at gmail.com>
>> wrote:
>>
>>> Are there any major disadvantages of using pymongo with callInThread
>>> instead of txmongo?  I'd like to take advantage of some newer features in
>>> pymongo (unfortunately not available in txmongo) and it's certainly easier
>>> to maintain feature parity using callInThread.
>>>
>>> Clayton Daley
>>>
>>>
>>>
>> Hi Clayton
>>
>>     Txmongo has been inactive for a while so I suggest using pymongo &
>> twisted thread pool. I have been using them for a couple of years and they
>> work quite well.
>>
>> Regards
>>
>> gelin yan
>>
>
> Hey guys,
>
> just wanted to drop in and say that txmongo isn't dead. We (Amplidata)
> just recently sent a merge request to add SSL (authentication/encryption)
> support[1] that Alexandre will review after the holidays. While Alexandre
> isn't currently developing txmongo, he does review and accept pull
> requests. So while the community is small, it is still alive.
>
> Amplidata (the company I work for) has also expressed an interest in
> getting txmongo up to speed with PyMongo, similar in how we got Ldaptor and
> its myriad forks to converge and development happening again.[2][3]
>
> Is there any interest in seeing txmongo be developed further? What are
> some of the pain points that people would rather defer to thread PyMongo
> instead of using async txmongo?
>
> Cheers,
> Bret
>
>
>
 Hi Bret

   I am glad to know txmongo is still here. I used it several times a few
years ago and was impressed by its speed (twice faster than pymongo &
thread pool).

     I hope txmongo can support the latest GEO index & replication.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150201/00aa8494/attachment.html>

From psi29a at gmail.com  Sat Jan 31 18:01:31 2015
From: psi29a at gmail.com (bret curtis)
Date: Sun, 1 Feb 2015 02:01:31 +0100
Subject: [Twisted-Python] txmongo vs. pymongo + callInThread
In-Reply-To: <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>
References: <CACKEAnUqS8B6zkPRBMYG4+_NVcig1qkXZPt-xRpDXBEm1HyhcA@mail.gmail.com>
 <CABkOF6Q-A_96kzX=DyLhWn1HF9CBiRu+BrkuuVviCozAxL7H7g@mail.gmail.com>
 <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
 <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>
Message-ID: <CA+LhZ9_y053+wPeDaB5EyYu2kpyLaTw0ruP_2F-1qEh56xJmFA@mail.gmail.com>

On Sat, Jan 31, 2015 at 7:37 PM, Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
> On Tue, Dec 30, 2014 at 5:50 PM, bret curtis <psi29a at gmail.com> wrote:
>
>> On Tue, Dec 23, 2014 at 7:51 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>>
>>>
>>>
>>> On Mon, Dec 22, 2014 at 5:05 AM, Clayton Daley <clayton.daley at gmail.com>
>>> wrote:
>>>
>>>> Are there any major disadvantages of using pymongo with callInThread
>>>> instead of txmongo?  I'd like to take advantage of some newer features in
>>>> pymongo (unfortunately not available in txmongo) and it's certainly easier
>>>> to maintain feature parity using callInThread.
>>>>
>>>> Clayton Daley
>>>>
>>>>
>>>>
>>> Hi Clayton
>>>
>>>     Txmongo has been inactive for a while so I suggest using pymongo &
>>> twisted thread pool. I have been using them for a couple of years and they
>>> work quite well.
>>>
>>> Regards
>>>
>>> gelin yan
>>>
>>
>> Hey guys,
>>
>> just wanted to drop in and say that txmongo isn't dead. We (Amplidata)
>> just recently sent a merge request to add SSL (authentication/encryption)
>> support[1] that Alexandre will review after the holidays. While Alexandre
>> isn't currently developing txmongo, he does review and accept pull
>> requests. So while the community is small, it is still alive.
>>
>> Amplidata (the company I work for) has also expressed an interest in
>> getting txmongo up to speed with PyMongo, similar in how we got Ldaptor and
>> its myriad forks to converge and development happening again.[2][3]
>>
>> Is there any interest in seeing txmongo be developed further? What are
>> some of the pain points that people would rather defer to thread PyMongo
>> instead of using async txmongo?
>>
>> Cheers,
>> Bret
>>
>>
>>
>  Hi Bret
>
>    I am glad to know txmongo is still here. I used it several times a few
> years ago and was impressed by its speed (twice faster than pymongo &
> thread pool).
>
>      I hope txmongo can support the latest GEO index & replication.
>
> Regards
>
> gelin yan
>
>
Hello Gelin,

You should check out our other thread about getting TxMongo moved into
Twisted's github org.
https://twistedmatrix.com/pipermail/twisted-python/2015-January/029144.html

There is already some support for Geo and replication, but it could always
use more work. What is it specifically you would like to see, aside from
everything. ;)

https://github.com/fiorix/txmongo/blob/master/txmongo/filter.py
^--  Support for GEO2D and GEOHAYSTACK spatial indices were added in 2012.

When you specify your hosts in ConnectionPool, you can give it a full
mongodb URI that includes all your replication servers, even with SSL
support. It is smart enough to cycle through until it finds a master to
continue operations.

I'm still trying to a compile a list of pain points that people have that
can be addressed. The more specific, the better.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150201/87cd3256/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jan  1 03:21:55 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Jan 2015 11:21:55 +0100
Subject: [Twisted-Python] Twisted receiving buffers swamped?
Message-ID: <54A51FC3.1020704@tavendo.de>

Hi,

I am doing network performance tests using netperf on a trivial Twisted 
TCP echo server (code at the end).

One of the tests that netperf offers is throughput, and I am running 
into an issue with this.

When running the test (loopback) for 10 seconds on the test box I get a 
throughput of 11.5 Gb/s (which is not bad):

[oberstet at brummer1 ~]$ netperf -N -H 127.0.0.1 -t TCP_STREAM -l 10 -- -P 
9000
TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 9000 AF_INET to 127.0.0.1 () 
port 9000 AF_INET 
         : no control : histogram : interval : dirty data : demo
Recv   Send    Send
Socket Socket  Message  Elapsed
Size   Size    Size     Time     Throughput
bytes  bytes   bytes    secs.    10^6bits/sec

      0  32768  32768    10.02    11517.89

[Sidenote: when running against the netperf server, the box does 46Gb/s 
on that test. More results here: 
https://github.com/crossbario/crossbar/wiki/Stream-Testee#netperf]

However, when I run the test for 60 s (changing to "-l 60" in above will 
do), the test server is killed by the OS due to out-of-memory.

This screenshot

http://picpaste.com/pics/Clipboard03-DllXR7QE.1420107551.png

shows that the server at the time immediately before of killing 
allocated >30GB RAM.

In fact, memory also runs away with 10 sec test .. it's just that the 
machine has enough RAM to cope with that. So it's a "general" issue.

I tested with:

* CPython 2.7.9 and PyPy 2.4
* select, poll and kqueue reactors

all on FreeBSD 10.1. Same behavior for all combinations.

===

Now, my suspicion is that Twisted is reading off the TCP stack from the 
kernel and buffering in userspace faster than the echo server is pushing 
out stuff to the TCP stack into the kernel. Hence, no TCP backpressure 
results, netperf happily sends more and more, and the memory of the 
Twisted process runs away.

I am aware of 
http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html, but 
that seems to cover the sending side only.

What's the cause? What can I do?

How do I prevent Twisted to read off sockets from kernel as the 
userspace buffer grows?

E.g. can I set a limit on the userspace buffer, so Twisted won't read 
out the sockets until the app has consumed more of the already buffered 
stuff?

Any hints appreciated,

Cheers,
/Tobias



TCP Echo Server used ====>

from twisted.internet import kqreactor
kqreactor.install()
#from twisted.internet import selectreactor
#selectreactor.install()
#from twisted.internet import pollreactor
#pollreactor.install()

from twisted.internet import protocol, reactor, endpoints

class Echo(protocol.Protocol):
     def dataReceived(self, data):
         self.transport.write(data)

class EchoFactory(protocol.Factory):
     def buildProtocol(self, addr):
         return Echo()

endpoints.serverFromString(reactor, "tcp:9000").listen(EchoFactory())

print "running on ", reactor.__class__
reactor.run()




From jamesbroadhead at gmail.com  Thu Jan  1 08:51:41 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Thu, 1 Jan 2015 15:51:41 +0000
Subject: [Twisted-Python] Silverberg CQL Driver
In-Reply-To: <CAHZAEpdQYEUz6fRoOVK6Qj_W=yzH7hAn27BdU77+PgES6c8ZfQ@mail.gmail.com>
References: <CAHZAEpcC_O6D3iEGhK1G462msSgG9m7CXVqmcSeqxEvsNyUfSg@mail.gmail.com>
 <CA+hid6FbkebfpuOXzcUQ+zZWwtUR=nVJr+Z80OFzmi80Ho5QVQ@mail.gmail.com>
 <CAHZAEpdQYEUz6fRoOVK6Qj_W=yzH7hAn27BdU77+PgES6c8ZfQ@mail.gmail.com>
Message-ID: <CA+hid6G_yb=3iAMa4zY638w34X1tWKbk4Ym2P0nSQi1LYBAUdg@mail.gmail.com>

On 29 December 2014 at 19:11, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hi James,
>
> Have you guys tried Silverberg? Wondering if its less flakly.
>
> -J
>

We haven't -- when I said that, I meant "on some occasions, after 3 years
of continuous use". It's a sporadic failure mode, and hasn't happened
enough times for us to investigate deeply. That said, we're in our own DC,
so the environment is pretty stable. If you're in AWS or similar, you might
want to run some testing around failure cases (let us know what you find!)
All that said, we've been very happy with it.

The likelihood is that we'll be working on migrating to Manhattan[1] rather
than trying out a new Cassandra library.
Not quite sure which way we'll go, but one option may be to write a
telephus-like wrapper around the thrift bindings.


[1]
https://blog.twitter.com/2014/manhattan-our-real-time-multi-tenant-distributed-database-for-twitter-scale
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150101/94c28870/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan  1 13:26:05 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 1 Jan 2015 12:26:05 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <54A51FC3.1020704@tavendo.de>
References: <54A51FC3.1020704@tavendo.de>
Message-ID: <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>


> On Jan 1, 2015, at 2:21 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I am aware of http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html <http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html>, but that seems to cover the sending side only.

It covers the receiving side as well.  If you pauseProducing() on a transport, it stops calling dataReceived on its transport.

> What's the cause? What can I do?

My initial hypothesis is that netperf is sending traffic but not bothering to receive it.

If this hypothesis is correct, then self.transport.registerProducer(self.transport) should solve the problem.  Presuming that there is no problem with crossing the streams - I don't think i've ever done that particular incantation, and I'm almost shocked it's taken this long to come up :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150101/a21a87cd/attachment-0002.html>

From tobias.oberstein at tavendo.de  Fri Jan  2 03:25:30 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 02:25:30 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>

>>I am aware of http://twistedmatrix.com/documents/14.0.0/core/howto/producers.html, but that seems to cover the sending side only.

>It covers the receiving side as well.  If you pauseProducing() on a transport, it stops calling dataReceived on its transport.

Not sure I understand that. But you say, this will stop Twisted reading incoming data from a socket into userspace? And hence TCP backpressure results?

>>What's the cause? What can I do?

>My initial hypothesis is that netperf is sending traffic but not bothering to receive it.

I haven't looked through the netperf sources .. but I guess netperf will send as fast as the receiving side can digest .. only throttle down because of TCP backpressure, not app-level flow-control.

>If this hypothesis is correct, then self.transport.registerProducer(self.transport) should solve the problem.  Presuming that there is no problem with crossing the streams - I don't think i've ever done that particular incantation, >and I'm almost shocked it's taken this long to come up :).

Unfortunately, it doesn't seem to work (the problem persists):

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py

http://picpaste.com/pics/Clipboard07-HlqQmTW0.1420188656.png

Btw: the problem also arises when running over real network .. at least fast networks. I tested on fully switched 10GbE.

And: asyncio (Trollius that is), has the same issue. The target server just gets swamped .. and then killed.

Cheers,
/Tobias



From glyph at twistedmatrix.com  Fri Jan  2 04:08:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 2 Jan 2015 03:08:06 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>


> On Jan 2, 2015, at 2:25 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> Unfortunately, it doesn't seem to work (the problem persists):

Your "streaming" flag is wrong.  A TCP transport is an IPushProducer (it will produce data without being asked).  Try setting it to True and see if that helps?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150102/6977eefc/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jan  2 04:32:22 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Jan 2015 11:32:22 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <54A51FC3.1020704@tavendo.de>
References: <54A51FC3.1020704@tavendo.de>
Message-ID: <20150102113222.7937.1494245595.divmod.xquotient.13@top>

On 1 Jan, 10:21 am, tobias.oberstein at tavendo.de wrote:
>Hi,
>
>I am doing network performance tests using netperf on a trivial Twisted 
>TCP echo server (code at the end).
>
>One of the tests that netperf offers is throughput, and I am running 
>into an issue with this.
? [snip]
>
>Now, my suspicion is that Twisted is reading off the TCP stack from the 
>kernel and buffering in userspace faster than the echo server is 
>pushing out stuff to the TCP stack into the kernel. Hence, no TCP 
>backpressure results, netperf happily sends more and more, and the 
>memory of the Twisted process runs away.

What you said here about "buffering in userspace" is ambiguous.  It's 
not clear if you meant data is being buffered in userspace on the read 
side before your protocol gets a chance to handle it or if you meant 
that data being written to the transport by the protocol is being 
buffered in userspace.

The former doesn't happen.  There are no no userspace read buffers in 
Twisted between the transport and the protocol.  Bytes are read from the 
socket and then passed to dataReceived.

The latter would be addressed by using producer/consumer APIs as Glyph 
suggested.

Jean-Paul



From tobias.oberstein at tavendo.de  Fri Jan  2 04:53:27 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 03:53:27 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>

>>Unfortunately, it doesn't seem to work (the problem persists):
>Your "streaming" flag is wrong.  A TCP transport is an IPushProducer (it will produce data without being asked).  Try setting it to True and see if that helps?

With streaming == True and cProfile added

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py

I get strange results.

Sluggish performance:

[oberstet at brummer1 ~]$ netperf -N -H 127.0.0.1 -t TCP_STREAM -l 10 -- -P 9000
TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 9000 AF_INET to 127.0.0.1 () port 9000 AF_INET : no control : histogram : interval : dirty data : demo
Recv   Send    Send
Socket Socket  Message  Elapsed
Size   Size    Size     Time     Throughput
bytes  bytes   bytes    secs.    10^6bits/sec

     0  32768  32768    10.03       0.31

===

That is 310kb/s. Which is totally slow. The native C based netserver that comes with netperf does 46Gb/s on this test. With streaming == False, I get something like 11Gb/s with that Twisted server (until it collapsed due to OOM)

The CPU load is very low (near 0%). The memory stays flat.

Here is the profile:

https://github.com/oberstet/scratchbox/blob/master/python/asyncio/profile.log

/Tobias




From tobias.oberstein at tavendo.de  Fri Jan  2 05:06:08 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 2 Jan 2015 04:06:08 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150102113222.7937.1494245595.divmod.xquotient.13@top>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
Message-ID: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>

> >Now, my suspicion is that Twisted is reading off the TCP stack from the
> >kernel and buffering in userspace faster than the echo server is
> >pushing out stuff to the TCP stack into the kernel. Hence, no TCP
> >backpressure results, netperf happily sends more and more, and the
> >memory of the Twisted process runs away.
> 
> What you said here about "buffering in userspace" is ambiguous.  It's not
> clear if you meant data is being buffered in userspace on the read side
> before your protocol gets a chance to handle it  

Yes. That's what I meant. Buffering in userspace inside Twisted, and before data is handled by the app in dataReceived.

> .. or if you meant that data
> being written to the transport by the protocol is being buffered in userspace.

Nope, I didn't meant that. That's the sending side.

> 
> The former doesn't happen.  There are no no userspace read buffers in
> Twisted between the transport and the protocol.  Bytes are read from the

Ok.

> socket and then passed to dataReceived.
> 
> The latter would be addressed by using producer/consumer APIs as Glyph
> suggested.

Mmh.

Fact is: somehow memory runs away.

How do I track down _where_ exactly the mem is spent? Probably that leads to the "why" then ..

/Tobias



From exarkun at twistedmatrix.com  Fri Jan  2 05:36:35 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Jan 2015 12:36:35 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
 <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150102123635.7937.1422130075.divmod.xquotient.15@top>

On 12:06 pm, tobias.oberstein at tavendo.de wrote:
>
>Fact is: somehow memory runs away.
>
>How do I track down _where_ exactly the mem is spent? Probably that 
>leads to the "why" then ..

There are memory profiling tools for Python.  For example, 
memory_profiler:

    https://pypi.python.org/pypi/memory_profiler

As far as I know, there are none that are specific to Twisted.

Jean-Paul



From glyph at twistedmatrix.com  Fri Jan  2 18:41:34 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Jan 2015 17:41:34 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <20150102113222.7937.1494245595.divmod.xquotient.13@top>
 <634914A010D0B943A035D226786325D44B553654C7@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <EE2CB224-9E5A-4BD2-8EE3-0ECC7456882B@twistedmatrix.com>


> On Jan 2, 2015, at 4:06 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> Fact is: somehow memory runs away.
> 
> How do I track down _where_ exactly the mem is spent? Probably that leads to the "why" then ..

The first place to look - since sometimes looking in a specific place makes memory profilers easier to use - would be twisted.internet.tcp.Server._tempDataBuffer.

The fact that it's extremely slow when you turn on consumer/producer logic in this way makes sense to me.  twisted.internet.abstract.FileDescriptor.bufferSize is hard-coded to 65,536 bytes; every time the write side outpaces the read side by that buffer size, it will result in a call to (in your case) twisted.internet.kqreactor.KQueueReactor._updateRegistration, which makes the kcontrol syscall.

One thing you might try is to run with the environment variable PYPYLOG=jit-summary:- set.  This will give you a bunch of statistics about what the JIT did at the end of the run, on standard out; compare the fast (and run out of memory) to the slow (and work right) run to see what the differences are.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150102/10773958/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan  4 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 04 Jan 2015 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1420355116.3.3592159663346815929@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150104/238d3a9c/attachment-0002.html>

From mithrandi at mithrandi.net  Thu Jan  8 02:23:55 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 8 Jan 2015 11:23:55 +0200
Subject: [Twisted-Python] Axiom 0.7.2
Message-ID: <CAMcKhMRsn9DFNKw6d4aOvNdZo03nMT02_uAeTuBDpBpkDZwqhA@mail.gmail.com>

I'm pleased to announce the release of Axiom 0.7.2. Axiom is an
in-process object-relational database for Python, built on SQLite.

This release is a bug fix release to correct an important issue;
anyone using Axiom 0.7.0 or 0.7.1 on PyPy (versions prior to 0.7.0 did
not support PyPy) should upgrade as soon as possible to avoid
potential data loss in their application. For more information on this
bug, see the Github issue[1].

The release is available from PyPi as usual[2], signed with my personal key[3].:

[1] https://github.com/twisted/axiom/issues/29
[2] https://pypi.python.org/packages/source/A/Axiom/Axiom-0.7.2.tar.gz
[3] https://pypi.python.org/packages/source/A/Axiom/Axiom-0.7.2.tar.gz.asc
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From hawkowl at atleastfornow.net  Fri Jan  9 06:37:21 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 9 Jan 2015 21:37:21 +0800
Subject: [Twisted-Python] Twisted 15.0.0pre1 Announcement
Message-ID: <1624BCDA-0C83-41B3-814D-95F44C83A960@atleastfornow.net>

Hi everyone!

The long awaited 15.0 release is nearly here, and the first prerelease is available for you (yes, you!) to download and try out.

Tarballs are available at https://twistedmatrix.com/Releases/pre/15.0.0pre1/ .

Highlights are:

- SSLv3 is disabled by default by endpoints created by `twisted.internet.endpoints.serverFromString` and `twisted.internet.endpoints.clientFromString`.

- inlineCallbacks now has introductory documentation, and now supports using the return statement with a value on Python 3.

- `twisted.web.client.Agent` now supports using UNIX sockets.

- A whole bunch of bug fixes and other improvements, with 70+ closed tickets.

For more details, please see the NEWS.txt file alongside the tarballs.

Try them out! :)

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150109/2f9dcf0c/attachment.sig>

From glyph at twistedmatrix.com  Fri Jan  9 13:01:59 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 9 Jan 2015 12:01:59 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>

Hi Tobias,

> On Jan 2, 2015, at 3:53 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I get strange results.
> 
> Sluggish performance:

Did you ever diagnose this further?  This seems like the sort of thing that we should start having a performance test for.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150109/6d36c4c7/attachment-0002.html>

From sticklet11 at yahoo.com  Fri Jan  9 13:36:24 2015
From: sticklet11 at yahoo.com (lisa donaldson)
Date: Fri, 9 Jan 2015 20:36:24 +0000 (UTC)
Subject: [Twisted-Python] remove me pls
Message-ID: <636482691.1654957.1420835784284.JavaMail.yahoo@jws10791.mail.gq1.yahoo.com>

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150109/6fb1b635/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sat Jan 10 01:33:38 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 00:33:38 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>

Hi glyph,

>>I get strange results.
>>Sluggish performance:

>Did you ever diagnose this further?  This seems like the sort of thing that we should start having a performance test for.

Not yet. I didn't reply again since you gave me enough homework already:

- Run the producer/consumer variant on Linux (bisecting BSD/kqueue)
- Do the memory profiling with non-producer/consumer (tracking down _where_ memory runs away)

Other stuff interrupted me again, and my impression is, that it might be significant effort to really track this down. No surprise here: really pushing things often means "issues" pop up.

I absolutely agree: we should have repeatable, comparable, standard performance tests.

Like we have with trial/buildbot, but for performance, not functional tests.

FWIW, here are my thoughts on this: 


1)
A simple Twisted based "TCP echo server" (maybe in non-producer/consumer and producer/consumer variants) as a testee will already allow us to do a _lot_.
We can come up with more testees later (e.g. Twisted Web with static resource, ...).

2)
It might be wise to use a non-Twisted, standard test load generator like netperf, instead of a Twisted based one.
- having the load generator written in Twisted creates a cyclic dependency (e.g. rgd. interpreting results)
- it allows to compare results to non-Twisted setups and allows others to repeat against their stuff

3)
We should include at least 2 operating systems (FreeBSD / Linux).
This allows to quickly bisect OS or Twisted reactor specific issues.

4)
We should run this on real, physical, non-virtualized, dedicated hardware and networking gear.
I can't stress enough how important this is in my experience:
Any form of virtualization brings a whole own dimension of factors/variability into the game.
Testing in VMs on a shared hypervisor on a public cloud: you never really know, you never really can repeat.
Repeatability is absolutely crucial.

5)
The load generator and the testee should run on 2 separate boxes, connected via real network (e.g. switched ether).
Testing via loopback is often misleading, and practically often irrelevant (too far away from production deployments).

6)
We should test on both CPython and PyPy.
Because this is where stuff actually runs later in production. And for bisecting Python implementation specifics.

7)
It should be automated.

8)
The results should be stored in a long term archive (a database) so we can compare results over time / setups.

9)
We should collect monitoring parameters (CPU load ...) on both the load generator and testee boxes during test runs.
Like, "same network perf., but one triggers double the CPU load" ..

===

Because of 3/4/5, this requires 4 boxes to begin with. Those should be absolutely _identical_.

Currently, we (Tavendo) have a setup dedicated to performance tests consisting of 2 boxes with dual port 10GbE and a 8 port 10GbE switch.

Buying 2 more identical boxes and adding those would be technically possible. 7/8/9 and setting this all up is work.

I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

/Tobias




From glyph at twistedmatrix.com  Sat Jan 10 02:05:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 01:05:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>


> On Jan 10, 2015, at 12:33 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
> I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

It sounds like http://speed.twistedmatrix.com <http://speed.twistedmatrix.com/> but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.

I'm particularly curious about the specific performance case we were talking about though; wire speed with flow-control is an important use-case for Twisted and it sounds to me like we may be falling very far short.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150110/05defd0c/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sat Jan 10 02:53:23 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 01:53:23 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490516@EXVMBX020-12.exch020.serverdata.net>

>>I would need to somehow justify/book these investments. I have "ideas" about that, but step by step: what do you think about above?

>It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good >place to start.

I have stumbled across this before, but haven't looked into much. I am looking right now ..

On the one hand: it has a _lot_ of testee scenarios, not just TCP echo, but e.g. also TLS, which I am definitely interested in.

I was only proposing to have a trivial "TCP echo", essentially the couple of lines from the Twisted homepage - not very ambitious;)

However, as far as I can see, speed.twistedmatrix.com runs all tests over loopback with both the load generator and the testee in Twisted - even in 1 process.

http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/view/head:/tcp_throughput.py
=> uses producer/consumer

https://github.com/twisted/twisted/blob/trunk/twisted/protocols/wire.py#L17
=> does not use producer/consumer (like you suggested https://github.com/oberstet/scratchbox/blob/master/python/asyncio/tcp_echo_server_tx.py#L16)

For various reasons, I don't think this would have been able to demonstrate the issue I ran into .. swamping.

You need a very fast sender (netperf) to even be able to swamp the receiver. Then I am not interested (much) in loopback.

It is these performance test "setup/system things" were my proposal is indeed far more ambitious.

And for me this is crucial: I want hard numbers which are _representative_ of what happens in production (at least close to). 

>I'm particularly curious about the specific performance case we were talking about though; wire speed with flow-control is an important use-case for Twisted and it sounds to me like we may be falling very far short.

Yes, I understand.

Note that we can't get to 10GbE wirespeed in a throughput test with Twisted even leaving "swamping" aside. And I verified that the hardware/OS is not the bottleneck (I can saturate the link at 9.94Gb/s using netperf-to-netserver easily).

/Tobias



From tobias.oberstein at tavendo.de  Sat Jan 10 03:22:11 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 10 Jan 2015 02:22:11 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>

>It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.

I've look into it a little. I am confused;)

E.g. take "SSL throughput big writes":

http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png

There is a big dropoff in commit 43146.

It's cool to see a history of performance correlated with commits.

Now, if I dig into that commit, I see:

http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png

The commit seems to be a "doc only" commit. No actual code changes at all.

How should I interpret that?

Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?

I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.

/Tobias



From glyph at twistedmatrix.com  Sat Jan 10 16:47:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 15:47:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>


> On Jan 10, 2015, at 02:22, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>> It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.
> 
> I've look into it a little. I am confused;)
> 
> E.g. take "SSL throughput big writes":
> 
> http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png
> 
> There is a big dropoff in commit 43146.
> 
> It's cool to see a history of performance correlated with commits.
> 
> Now, if I dig into that commit, I see:
> 
> http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png
> 
> The commit seems to be a "doc only" commit. No actual code changes at all.
> 
> How should I interpret that?
> 
> Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?

One of those things.  There is no infrastructure in place for identifying events which impact the performance testing infrastructure.  The only performance testing environment is a very old mac mini still running Snow Leopard, which is probably the environment which we care the *least* about performance in, so it's not in great shape ;).

> I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.

I don't think the results that we have presently are worth much at all.  My point was mostly that there is some infrastructure which is halfway usable, and so you don't have to start from scratch.  If you could take over this project (I am pretty sure at this point there is nobody to take it over *from*, exarkun did some work a long time ago and hasn't given it a second look in years) it would be highly appreciated!

(And if you care a lot about performance in a particular environment you could set it up in that environment and get attention for it :)).

You should also have a look at the existing benchmark suite and potentially look at maintaining / expanding that as well.

Thoughts?

-glyph


From dustin at v.igoro.us  Sat Jan 10 16:59:20 2015
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 10 Jan 2015 18:59:20 -0500
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
Message-ID: <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>

As someone partially responsible for the infrastructure Mozilla uses
to do its performance benchmarking, I can say that it's *really* hard.
Getting live operating systems to sit still and behave is a mess, and
then *keeping* them still over months and years (while attending to
necessary security upgrades, hardware migrations, and so on) is even
worse.

One of the smarter things we've figured out how to do is to "phase in"
potentially disruptive changes so that we can either see that there's
no impact, or estimate a correction factor for comparing results
before and after the change.

Dustin

On Sat, Jan 10, 2015 at 6:47 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Jan 10, 2015, at 02:22, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>
>>> It sounds like http://speed.twistedmatrix.com but far more ambitious :).  Are you familiar with that site, and the benchmarks repository that powers it?  It's nowhere near as comprehensive as what you'd like, but it is a good place to start.
>>
>> I've look into it a little. I am confused;)
>>
>> E.g. take "SSL throughput big writes":
>>
>> http://picpaste.com/pics/Clipboard01-0isEvjph.1420884805.png
>>
>> There is a big dropoff in commit 43146.
>>
>> It's cool to see a history of performance correlated with commits.
>>
>> Now, if I dig into that commit, I see:
>>
>> http://picpaste.com/pics/Clipboard02-HV47NdTC.1420884887.png
>>
>> The commit seems to be a "doc only" commit. No actual code changes at all.
>>
>> How should I interpret that?
>>
>> Probably the test machine was changed, a new version of OpenSSL or pyOpenSSL, or something else?
>
> One of those things.  There is no infrastructure in place for identifying events which impact the performance testing infrastructure.  The only performance testing environment is a very old mac mini still running Snow Leopard, which is probably the environment which we care the *least* about performance in, so it's not in great shape ;).
>
>> I'd say: the infrastructure aspects when doing performance tests do matter. To the degree that performance results are of very limited value at all, if the former aspects are not accounted for.
>
> I don't think the results that we have presently are worth much at all.  My point was mostly that there is some infrastructure which is halfway usable, and so you don't have to start from scratch.  If you could take over this project (I am pretty sure at this point there is nobody to take it over *from*, exarkun did some work a long time ago and hasn't given it a second look in years) it would be highly appreciated!
>
> (And if you care a lot about performance in a particular environment you could set it up in that environment and get attention for it :)).
>
> You should also have a look at the existing benchmark suite and potentially look at maintaining / expanding that as well.
>
> Thoughts?
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sat Jan 10 18:48:13 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Jan 2015 17:48:13 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <CAJtE5vT43qgL=UWiDfZq3ni6mdPFxCO9+rP=zoRJJwD22STspQ@mail.gmail.com>
Message-ID: <00918DA6-123A-40FD-8BCC-3A616D0DE99F@twistedmatrix.com>


> On Jan 10, 2015, at 3:59 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
> 
> As someone partially responsible for the infrastructure Mozilla uses
> to do its performance benchmarking, I can say that it's *really* hard.
> Getting live operating systems to sit still and behave is a mess, and
> then *keeping* them still over months and years (while attending to
> necessary security upgrades, hardware migrations, and so on) is even
> worse.
> 
> One of the smarter things we've figured out how to do is to "phase in"
> potentially disruptive changes so that we can either see that there's
> no impact, or estimate a correction factor for comparing results
> before and after the change.

In my unfortunately somewhat uninformed opinion, one thing that can really help is not to commit to long-term stability, but rather to just have a clearly documented log of operations performed on the monitoring cluster.  Twisted has far less intense performance-analysis requirements than Mozilla, I should hope, and a lot less data to deal with, so just the ability to see events on the X axis could be enough to tell contributors what's going on with performance deltas.

I should point out that the main reason we need a performance testing rig is not continuous performance monitoring over time, but rather, clear performance tracking of individual changes, ideally before they land.  One of the things I'm unhappy about with speed center (and a big reason it's basically unmaintained) is that it's very hard to tell it to build a branch and to get a good picture of the aggregate effect of that branch on the benchmarks.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150110/1d7cca17/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan 11 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 11 Jan 2015 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1420959915.97.4065627808811965952@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150111/6103b0ff/attachment-0002.html>

From tobias.oberstein at tavendo.de  Mon Jan 12 13:49:44 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Jan 2015 12:49:44 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>

> > Probably the test machine was changed, a new version of OpenSSL or
> pyOpenSSL, or something else?
> 
> One of those things.  There is no infrastructure in place for identifying events
> which impact the performance testing infrastructure.  The only performance

Yes, this is an important point: track changes in infrastructure (everything that might
have an influence, but is outside the tested code).

> testing environment is a very old mac mini still running Snow Leopard, which

omg;)

> > I'd say: the infrastructure aspects when doing performance tests do
> matter. To the degree that performance results are of very limited value at
> all, if the former aspects are not accounted for.
> 
> I don't think the results that we have presently are worth much at all.  My
> point was mostly that there is some infrastructure which is halfway usable,
> and so you don't have to start from scratch.  If you could take over this

You mean taking over the code "as is"

http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/files

or the task in general (Twisted benchmarking)?

> project (I am pretty sure at this point there is nobody to take it over *from*,

We are currently developing performance test infrastructure for Crossbar.io - naturally,
it is eating it's own dog food: the infrastructure is based on Crossbar.io and WAMP to
orchestrate and wire up things in a distributed test setup.

We could extend that to test at the Twisted(-only) level. Need to think about how
that fits into "overall strategy", as the Crossbar.io perf. test stuff isn't open-source.

The testing hardware above (mac, no real network) is insufficient for what I need.
I'm thinking about buying and setting up 2 more boxes for Linux.

Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be used
by speedcenter.twistedmatrix.com: I have issues here as well.

E.g. I need latency histograms, but this seems unsupported (benchmark results can
only have avg/min/max/stddev). For me, this isn't "nice to have", but essential. 
Throughput is one thing. Constistent low latency a completely different. The latter is
much much harder.

But what is the "interface" between test cases from "twisted-benchmarks" to codespeed?

This

https://github.com/tobami/codespeed#saving-data

seems to suggest, performance test results are HTTP/POSTed as JSON to codespeed.

And codespeed is then only responsible for visualization and web hosting, right?

I think we can find something better for that part.

> (And if you care a lot about performance in a particular environment you
> could set it up in that environment and get attention for it :)).

Yes, in particular that very last one is a factor to justify efforts;) Anything like having
a promo logo or similar - that would be an argument to invest time and material.
I will seriously contemplate .. need to align with strategy/available time.

We already host FreeBSD buildslaves for both Twisted and PyPy. That might be another
synergy (hosting the latter on that same boxes).

> You should also have a look at the existing benchmark suite and potentially
> look at maintaining / expanding that as well.

I will try to integrate some of this into our upcoming perf. infrastructure.

/Tobias

> 
> Thoughts?
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Mon Jan 12 14:08:46 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jan 2015 21:08:46 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150112210846.6966.1406182207.divmod.xquotient.3@top>

On 08:49 pm, tobias.oberstein at tavendo.de wrote:
>
>Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be 
>used
>by speedcenter.twistedmatrix.com: I have issues here as well.
>
>E.g. I need latency histograms, but this seems unsupported (benchmark 
>results can
>only have avg/min/max/stddev). For me, this isn't "nice to have", but 
>essential.
>Throughput is one thing. Constistent low latency a completely 
>different. The latter is
>much much harder.

Codespeed is terrible.  But this is not one of the ways in which it is 
terrible.  Codespeed doesn't care if you label your measurement 
"latency".  I think you've just noticed that what the existing 
benchmarks measure is mostly (entirely?) throughput.  If you wanted to 
write a latency benchmark, I don't think anything's stopping you.
>
>I think we can find something better for that part.

I suggest more fully understanding the capabilities and limitations of 
of codespeed before embarking on a project to replace it.

Jean-Paul



From glyph at twistedmatrix.com  Tue Jan 13 20:18:48 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Jan 2015 19:18:48 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>


> On Jan 12, 2015, at 12:49 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>> Probably the test machine was changed, a new version of OpenSSL or
>> pyOpenSSL, or something else?
>> 
>> One of those things.  There is no infrastructure in place for identifying events
>> which impact the performance testing infrastructure.  The only performance
> 
> Yes, this is an important point: track changes in infrastructure (everything that might
> have an influence, but is outside the tested code).
> 
>> testing environment is a very old mac mini still running Snow Leopard, which
> 
> omg;)
> 
>>> I'd say: the infrastructure aspects when doing performance tests do
>> matter. To the degree that performance results are of very limited value at
>> all, if the former aspects are not accounted for.
>> 
>> I don't think the results that we have presently are worth much at all.  My
>> point was mostly that there is some infrastructure which is halfway usable,
>> and so you don't have to start from scratch.  If you could take over this
> 
> You mean taking over the code "as is"
> 
> http://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/files
> 
> or the task in general (Twisted benchmarking)?

Both, I think.

I'd really prefer it if you could start with the existing benchmarks, incrementally maintain them (perhaps beginning by porting to Github, we seem to be having pretty good success with travis) and probably eventually replace them wholesale, than replace them from the beginning.

>> project (I am pretty sure at this point there is nobody to take it over *from*,
> 
> We are currently developing performance test infrastructure for Crossbar.io - naturally,
> it is eating it's own dog food: the infrastructure is based on Crossbar.io and WAMP to
> orchestrate and wire up things in a distributed test setup.
> 
> We could extend that to test at the Twisted(-only) level. Need to think about how
> that fits into "overall strategy", as the Crossbar.io perf. test stuff isn't open-source.
> 
> The testing hardware above (mac, no real network) is insufficient for what I need.
> I'm thinking about buying and setting up 2 more boxes for Linux.

Keep in mind that a performance testing environment should be scalable.  Others may have different environments they care about.  Building your specific environment would be tremendously useful, but it would be even more useful to build it in a way that others can compare in their own hardware setups.

> Rgd. Codespeed (https://github.com/tobami/codespeed), which seems to be used
> by speedcenter.twistedmatrix.com: I have issues here as well.
> 
> E.g. I need latency histograms, but this seems unsupported (benchmark results can
> only have avg/min/max/stddev). For me, this isn't "nice to have", but essential. 
> Throughput is one thing. Constistent low latency a completely different. The latter is
> much much harder.
> 
> But what is the "interface" between test cases from "twisted-benchmarks" to codespeed?

Codespeed runs the benchmark, and they print out this stuff: https://bazaar.launchpad.net/~twisted-dev/twisted-benchmarks/trunk/view/head:/benchlib.py#L12

POSTing them via JSON would be nicer, structured data is great.

> This
> 
> https://github.com/tobami/codespeed#saving-data
> 
> seems to suggest, performance test results are HTTP/POSTed as JSON to codespeed.
> 
> And codespeed is then only responsible for visualization and web hosting, right?
> 
> I think we can find something better for that part.
> 
>> (And if you care a lot about performance in a particular environment you
>> could set it up in that environment and get attention for it :)).
> 
> Yes, in particular that very last one is a factor to justify efforts;) Anything like having
> a promo logo or similar - that would be an argument to invest time and material.
> I will seriously contemplate .. need to align with strategy/available time.

You should probably contact tsf@ with these concerns :).

> We already host FreeBSD buildslaves for both Twisted and PyPy. That might be another
> synergy (hosting the latter on that same boxes).
> 
>> You should also have a look at the existing benchmark suite and potentially
>> look at maintaining / expanding that as well.
> 
> I will try to integrate some of this into our upcoming perf. infrastructure.
> 
> /Tobias
> 
>> 
>> Thoughts?
>> 
>> -glyph
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150113/8b0fb2b6/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 13 20:21:55 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Jan 2015 19:21:55 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150112210846.6966.1406182207.divmod.xquotient.3@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
Message-ID: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>


> On Jan 12, 2015, at 1:08 PM, exarkun at twistedmatrix.com wrote:
> 
>> E.g. I need latency histograms, but this seems unsupported (benchmark results can
>> only have avg/min/max/stddev). For me, this isn't "nice to have", but essential.
>> Throughput is one thing. Constistent low latency a completely different. The latter is
>> much much harder.
> 
> Codespeed is terrible.  But this is not one of the ways in which it is terrible.  Codespeed doesn't care if you label your measurement "latency".  I think you've just noticed that what the existing benchmarks measure is mostly (entirely?) throughput.  If you wanted to write a latency benchmark, I don't think anything's stopping you.
> 

I believe Tobias was not saying "codespeed can't have a measurement called 'latency'" but rather "codespeed can't do histograms of measurements, which we need for measurement of latency and you don't need for measurement of throughput".  Is that accurate?  I don't know if there's a histogram feature hidden in the UI somewhere.

It would be nice to at least try a little bit to contribute things (like a histogram feature) to codespeed before charging off in a completely different direction.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150113/56bb694f/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Jan 14 05:41:46 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jan 2015 12:41:46 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
 <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
Message-ID: <20150114124146.6966.852468844.divmod.xquotient.8@top>

On 03:21 am, glyph at twistedmatrix.com wrote:
>
>>On Jan 12, 2015, at 1:08 PM, exarkun at twistedmatrix.com wrote:
>>>E.g. I need latency histograms, but this seems unsupported (benchmark 
>>>results can
>>>only have avg/min/max/stddev). For me, this isn't "nice to have", but 
>>>essential.
>>>Throughput is one thing. Constistent low latency a completely 
>>>different. The latter is
>>>much much harder.
>>
>>Codespeed is terrible.  But this is not one of the ways in which it is 
>>terrible.  Codespeed doesn't care if you label your measurement 
>>"latency".  I think you've just noticed that what the existing 
>>benchmarks measure is mostly (entirely?) throughput.  If you wanted to 
>>write a latency benchmark, I don't think anything's stopping you.
>
>I believe Tobias was not saying "codespeed can't have a measurement 
>called 'latency'" but rather "codespeed can't do histograms of 
>measurements, which we need for measurement of latency and you don't 
>need for measurement of throughput".  Is that accurate?  I don't know 
>if there's a histogram feature hidden in the UI somewhere.
>
>It would be nice to at least try a little bit to contribute things 
>(like a histogram feature) to codespeed before charging off in a 
>completely different direction.

I wasn't suggesting it would be a good idea to contribute to codespeed. 
I think codespeed should be thrown in the trash.  It was a great 
demonstration of a concept and we should thank it for that.  However, as 
the basis of future development - no, it's an awful piece of 
unmaintained software.

I was just trying to say that work towards replacing it should learn 
what it can from codespeed to try to avoid creating another piece of 
awful, ultimately unmaintained software.

Jean-Paul



From exarkun at twistedmatrix.com  Wed Jan 14 05:50:00 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jan 2015 12:50:00 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
Message-ID: <20150114125000.6966.759234828.divmod.xquotient.10@top>

On 03:18 am, glyph at twistedmatrix.com wrote:
>
>>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein
>>But what is the "interface" between test cases from "twisted- 
>>benchmarks" to codespeed?
>
>Codespeed runs the benchmark, and they print out this stuff: 
>https://bazaar.launchpad.net/~twisted-dev/twisted- 
>benchmarks/trunk/view/head:/benchlib.py#L12
>
>POSTing them via JSON would be nicer, structured data is great.

Nothing parses that output.  It's just for humans.

The code you're looking for is:

  https://bazaar.launchpad.net/~twisted-dev/twisted- 
benchmarks/trunk/view/head:/speedcenter.py

which POSTs structured data (though urlencoded, not JSON) to the 
codespeed server.

Jean-Paul



From hawkowl at atleastfornow.net  Thu Jan 15 20:42:09 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 16 Jan 2015 11:42:09 +0800
Subject: [Twisted-Python] 15.0 Prerelease Reports
Message-ID: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>

Hi!

Does anyone have some “15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance” reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150116/a52c9416/attachment.sig>

From mithrandi at mithrandi.net  Fri Jan 16 15:18:48 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 17 Jan 2015 00:18:48 +0200
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
Message-ID: <CAMcKhMQ9uT85bWUANah2VsVxgUt17HwqYdRgjQoPmLFhCS7qKg@mail.gmail.com>

On 16 January 2015 at 05:42, HawkOwl <hawkowl at atleastfornow.net> wrote:
> Does anyone have some “15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance” reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !

Ran 1116 tests in 26.381s

PASSED (skips=2, expectedFailures=1, successes=1113)

:)

(We actually deploy Twisted directly from SVN, so I don't usually test
prereleases, but it was easy enough to check)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From werner at thieprojects.ch  Fri Jan 16 15:35:23 2015
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 16 Jan 2015 12:35:23 -1000
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
Message-ID: <54B9922B.6010909@thieprojects.ch>

Hi

OSX 10.10.1

uname -a
Darwin xxxx.local 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 
00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64

Python 2.7.9 (v2.7.9:648dcafa7e5f, Dec 10 2014, 10:10:46)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin

-SSL and -Crypto, all else looks good
Ran 2174 tests in 29.906s

PASSED (skips=156, expectedFailures=4, successes=2014)

No issues with my code base so far.

Thanks for your work!

Werner

On 15/01/15 17:42, HawkOwl wrote:
> Hi!
>
> Does anyone have some “15.0 worked fine/had an issue/set my codebase on fire via sheer brilliance” reports for me? :) If you want to try them out, you can get the tarballs at http://twistedmatrix.com/Releases/pre/15.0.0pre1/ !
>
> - hawkie
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From haggardii at gmail.com  Fri Jan 16 15:53:22 2015
From: haggardii at gmail.com (Matt Haggard)
Date: Fri, 16 Jan 2015 15:53:22 -0700
Subject: [Twisted-Python] 15.0 Prerelease Reports
In-Reply-To: <54B9922B.6010909@thieprojects.ch>
References: <5E32948B-812F-4ECB-B56C-8279E341620D@atleastfornow.net>
 <54B9922B.6010909@thieprojects.ch>
Message-ID: <CAL+xXwOO9eUAhayp4zHNTjnV0pVxorOVZYJniV6aZSxmMw++SA@mail.gmail.com>

No issues with my code base, though it doesn't heavily use Twisted.

On Fri, Jan 16, 2015 at 3:35 PM, Werner Thie <werner at thieprojects.ch> wrote:

> Hi
>
> OSX 10.10.1
>
> uname -a
> Darwin xxxx.local 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44
> PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64
>
> Python 2.7.9 (v2.7.9:648dcafa7e5f, Dec 10 2014, 10:10:46)
> [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
>
> -SSL and -Crypto, all else looks good
> Ran 2174 tests in 29.906s
>
> PASSED (skips=156, expectedFailures=4, successes=2014)
>
> No issues with my code base so far.
>
> Thanks for your work!
>
> Werner
>
>
> On 15/01/15 17:42, HawkOwl wrote:
>
>> Hi!
>>
>> Does anyone have some “15.0 worked fine/had an issue/set my codebase on
>> fire via sheer brilliance” reports for me? :) If you want to try them out,
>> you can get the tarballs at http://twistedmatrix.com/
>> Releases/pre/15.0.0pre1/ !
>>
>> - hawkie
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150116/0d2ebd41/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sat Jan 17 09:51:15 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 17 Jan 2015 08:51:15 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <20150112210846.6966.1406182207.divmod.xquotient.3@top>
 <23C91229-B549-4497-B680-3125509411EE@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B55569039@EXVMBX020-12.exch020.serverdata.net>

First, sorry for sluggish response time ..

>>>E.g. I need latency histograms, but this seems unsupported (benchmark results can
>>>only have avg/min/max/stddev). For me, this isn't "nice to have", but essential.
>>>Throughput is one thing. Constistent low latency a completely different. The latter is
>>>much much harder.

>>Codespeed is terrible.  But this is not one of the ways in which it is terrible.  Codespeed doesn't care if you label your measurement "latency".  I think you've just noticed that what the existing benchmarks measure is mostly (entirely?) throughput.  If you wanted to >>write a latency benchmark, I don't think anything's stopping you.

>I believe Tobias was not saying "codespeed can't have a measurement called 'latency'" but rather "codespeed can't do histograms of measurements, which we need for measurement of latency and you don't need for measurement of throughput".  Is that accurate?  I don't know if there's a histogram feature hidden in the UI somewhere.

Yes, exactly. That's what I meant.

As an example of the kind of analysis and visualization I am after, please have a look here:

http://www.brendangregg.com/HeatMaps/latency.html

In particular, latency heatmaps are an incredible useful visualization.

http://www.brendangregg.com/perf.html#HeatMaps

>It would be nice to at least try a little bit to contribute things (like a histogram feature) to codespeed before charging off in a completely different direction.

It is Django and canvas for gfx.

The former I have no know-how and no use/motivation for. Rendering HTML on the server isn't something we do anymore (WebSocket talking WAMP to Crossbar.io, anything else is just static HTML/JS/CSS/Images).

For the latter, there is D3 (http://d3js.org/) which is awesome and vector graphics.

For heatmaps, canvas _might_ be fine, but for virtually anything chart like, D3 has a lot to bring to the table.

In general, I can follow the argument of "contributing instead of reinventing" and "paying back", but in this particular case, I can't justify sinking time into this (codespeed).

Cheers,
/Tobias



From tobias.oberstein at tavendo.de  Sat Jan 17 10:00:03 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 17 Jan 2015 09:00:03 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150114125000.6966.759234828.divmod.xquotient.10@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>

> >>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein But what is the
> >>"interface" between test cases from "twisted- benchmarks" to
> >>codespeed?
> >
> >Codespeed runs the benchmark, and they print out this stuff:
> >https://bazaar.launchpad.net/~twisted-dev/twisted-
> >benchmarks/trunk/view/head:/benchlib.py#L12
> >
> >POSTing them via JSON would be nicer, structured data is great.
> 
> Nothing parses that output.  It's just for humans.
> 
> The code you're looking for is:
> 
>   https://bazaar.launchpad.net/~twisted-dev/twisted-
> benchmarks/trunk/view/head:/speedcenter.py
> 
> which POSTs structured data (though urlencoded, not JSON) to the
> codespeed server.

I see. And codespeed parsest that, stores it in a database and produces graphics?

It seems, reporting the results via a WAMP RPC to a backend should be quite easy to add in speedcenter.py

How is Twisted speedcenter orchestrated / triggered?

I mean, a new commit to Twisted repo will trigger rerunning all speed tests? If so, how does that work?

/Tobias




From exarkun at twistedmatrix.com  Sat Jan 17 13:39:43 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 17 Jan 2015 20:39:43 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150117203943.6966.1688719668.divmod.xquotient.16@top>

On 05:00 pm, tobias.oberstein at tavendo.de wrote:
>> >>On Jan 12, 2015, at 12:49 PM, Tobias Oberstein But what is the
>> >>"interface" between test cases from "twisted- benchmarks" to
>> >>codespeed?
>> >
>> >Codespeed runs the benchmark, and they print out this stuff:
>> >https://bazaar.launchpad.net/~twisted-dev/twisted-
>> >benchmarks/trunk/view/head:/benchlib.py#L12
>> >
>> >POSTing them via JSON would be nicer, structured data is great.
>>
>>Nothing parses that output.  It's just for humans.
>>
>>The code you're looking for is:
>>
>>   https://bazaar.launchpad.net/~twisted-dev/twisted-
>>benchmarks/trunk/view/head:/speedcenter.py
>>
>>which POSTs structured data (though urlencoded, not JSON) to the
>>codespeed server.
>
>I see. And codespeed parsest that, stores it in a database and produces 
>graphics?
>
>It seems, reporting the results via a WAMP RPC to a backend should be 
>quite easy to add in speedcenter.py

WAMP?  I don't think so.  I understand you work in that space a lot but 
I think you might want to take a step back.  The extra complexity of 
WebSockets is pointless for this project.  Just HTTP POST some JSON. 
This can be really simple.  Your time is almost certainly better spent 
elsewhere.

Jean-Paul
>How is Twisted speedcenter orchestrated / triggered?
>
>I mean, a new commit to Twisted repo will trigger rerunning all speed 
>tests? If so, how does that work?
>
>/Tobias
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From trac at twistedmatrix.com  Sun Jan 18 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 18 Jan 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1421564717.7.1716378116838041879@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150118/b9466eab/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sun Jan 18 05:15:33 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 18 Jan 2015 04:15:33 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150117203943.6966.1688719668.divmod.xquotient.16@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>

> >>which POSTs structured data (though urlencoded, not JSON) to the
> >>codespeed server.
> >
> >I see. And codespeed parsest that, stores it in a database and produces
> >graphics?
> >
> >It seems, reporting the results via a WAMP RPC to a backend should be
> >quite easy to add in speedcenter.py
> 
> WAMP?  I don't think so.  I understand you work in that space a lot but I think
> you might want to take a step back.  The extra complexity of WebSockets is
> pointless for this project.  Just HTTP POST some JSON.

All the extra complexity is hidden using WAMP and AutobahnJS.

> This can be really simple.  Your time is almost certainly better spent
> elsewhere.

No. Sinking time into Django/codespeed is lost time for me ..

/Tobias



From exarkun at twistedmatrix.com  Sun Jan 18 05:24:08 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jan 2015 12:24:08 -0000
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20150118122408.6966.1877509550.divmod.xquotient.19@top>

On 12:15 pm, tobias.oberstein at tavendo.de wrote:
>> >>which POSTs structured data (though urlencoded, not JSON) to the
>> >>codespeed server.
>> >
>> >I see. And codespeed parsest that, stores it in a database and 
>>produces
>> >graphics?
>> >
>> >It seems, reporting the results via a WAMP RPC to a backend should be
>> >quite easy to add in speedcenter.py
>>
>>WAMP?  I don't think so.  I understand you work in that space a lot 
>>but I think
>>you might want to take a step back.  The extra complexity of 
>>WebSockets is
>>pointless for this project.  Just HTTP POST some JSON.
>
>All the extra complexity is hidden using WAMP and AutobahnJS.

Oh well.  I'm not going to spend much more effort to convince you that 
this is a bad idea.  Maybe someone else will.
>>This can be really simple.  Your time is almost certainly better spent
>>elsewhere.
>
>No. Sinking time into Django/codespeed is lost time for me ..

If you read my emails, you'll see that I explicitly recommended 
*against* contributing to codespeed.  If you're not going to read what I 
write then I'll stop writing, I guess.

Jean-Paul



From tobias.oberstein at tavendo.de  Sun Jan 18 05:46:51 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 18 Jan 2015 04:46:51 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <20150118122408.6966.1877509550.divmod.xquotient.19@top>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
Message-ID: <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>

> >> >It seems, reporting the results via a WAMP RPC to a backend should
> >> >be quite easy to add in speedcenter.py
> >>
> >>WAMP?  I don't think so.  I understand you work in that space a lot
> >>but I think you might want to take a step back.  The extra complexity
> >>of WebSockets is pointless for this project.  Just HTTP POST some
> >>JSON.
> >
> >All the extra complexity is hidden using WAMP and AutobahnJS.
> 
> Oh well.  I'm not going to spend much more effort to convince you that this is
> a bad idea.  Maybe someone else will.

That's ok for me. 
I guess we will create something in-house that fits what we need.

/Tobias



From glyph at twistedmatrix.com  Sun Jan 18 12:51:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 18 Jan 2015 11:51:17 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>


> On Jan 18, 2015, at 4:46 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>> All the extra complexity is hidden using WAMP and AutobahnJS.
>> 
>> Oh well.  I'm not going to spend much more effort to convince you that this is
>> a bad idea.  Maybe someone else will.
> 
> That's ok for me. 
> I guess we will create something in-house that fits what we need.

I don't think I am following this conversation.

What do you mean by "in-house"?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150118/c6518417/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 19 01:07:02 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Jan 2015 00:07:02 -0800
Subject: [Twisted-Python] no more annoying certificate warnings on
	buildbot.twistedmatrix.com!
Message-ID: <0CCDAC08-BF07-4AB0-A896-8345B41B3049@twistedmatrix.com>

I pushed up some changes to Braid <https://github.com/twisted-infra/braid> tonight and deployed them; we are now using TxSNI <https://warehouse.python.org/project/TxSNI/> in production.

The practical upshot of this is that you should no longer see annoying certificate warnings when visiting https://buildbot.twistedmatrix.com/ <https://buildbot.twistedmatrix.com/>.

So please do that and go review some tickets :).

Thanks,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150119/028ba612/attachment-0002.html>

From singhsartaj94 at gmail.com  Mon Jan 19 09:50:19 2015
From: singhsartaj94 at gmail.com (Sartaj Singh)
Date: Mon, 19 Jan 2015 22:20:19 +0530
Subject: [Twisted-Python] GSoC'15
Message-ID: <CAC+H8-EHTxyb_6Ahd13Ym3PVSmwWKodYoMCVyOmoDCy56kK2rg@mail.gmail.com>

Hello,
I am a student hoping to participate in GSoC'15. I have used twisted in past
in various projects. I wanted to know if twisted will be participating in
GSoC this year.

-- 
Regards
*Sartaj Singh*

*Mathematics and Computing*,
Indian Institute of Technology,
Varanasi - 221 005 INDIA

E-mail: singhsartaj94 at gmail.com, *sartaj.singh.apm13 at itbhu.ac.in
<sartaj.singh.apm13 at itbhu.ac.in>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150119/9f31860b/attachment-0002.html>

From tobias.oberstein at tavendo.de  Mon Jan 19 11:44:10 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 19 Jan 2015 10:44:10 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>

>>>>All the extra complexity is hidden using WAMP and AutobahnJS.

>>>Oh well.  I'm not going to spend much more effort to convince you that this is
>>>a bad idea.  Maybe someone else will.

>>That's ok for me. 
>>I guess we will create something in-house that fits what we need.

>I don't think I am following this conversation.
>What do you mean by "in-house"?

>From how I understood Jean-Paul, he thinks using WAMP to hook up test infrastructure components (like load probes, test orchestrators and test database backend) is a bad idea, and HTTP/REST should be used instead.

I have a different view on this for technical reasons - but, admitted, also because I am affiliated with WAMP and have zero time to invest in stuff that I am not interested in / have no need for - that is HTTP/REST, and the server bits to make that fly. It'll be _more_ work on HTTP/REST, and less capable.

Anyway. I think WAMP is a great choice to hook up components of a distributed test system - which is what I am after (e.g. I want to orchestrate 10 TCP load probes running on different machines, stressing a target TCP echo server).

This difference in opinion might be because we have different _scopes/requirements_ to start from. Or not. I don't know.

So I thought, for the time being, it might be better if we (Tavendo) develop something for internal use / privately ("in-house"), and probably come again / show something when we actually have it running.

===

Regarding the "charting sub-issue":

I came across https://plot.ly/

This is kinda cool and very quick to get started:

http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png

It does histograms and tons of fancy stuff and hosts everything for free.

Cheers,
/Tobias



From glyph at twistedmatrix.com  Mon Jan 19 13:29:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Jan 2015 12:29:18 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>


> On Jan 19, 2015, at 10:44 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> 
>>>>> All the extra complexity is hidden using WAMP and AutobahnJS.
> 
>>>> Oh well.  I'm not going to spend much more effort to convince you that this is
>>>> a bad idea.  Maybe someone else will.
> 
>>> That's ok for me. 
>>> I guess we will create something in-house that fits what we need.
> 
>> I don't think I am following this conversation.
>> What do you mean by "in-house"?
> 
> From how I understood Jean-Paul, he thinks using WAMP to hook up test infrastructure components (like load probes, test orchestrators and test database backend) is a bad idea, and HTTP/REST should be used instead.
> 
> I have a different view on this for technical reasons - but, admitted, also because I am affiliated with WAMP and have zero time to invest in stuff that I am not interested in / have no need for - that is HTTP/REST, and the server bits to make that fly. It'll be _more_ work on HTTP/REST, and less capable.
> 
> Anyway. I think WAMP is a great choice to hook up components of a distributed test system - which is what I am after (e.g. I want to orchestrate 10 TCP load probes running on different machines, stressing a target TCP echo server).
> 
> This difference in opinion might be because we have different _scopes/requirements_ to start from. Or not. I don't know.

This is Jean-Paul's personal opinion on the implementation choices involved.  This is only really relevant if JP is going to be working on the performance testing framework directly or needs to interact with the WAMP bits directly.  If you're the one doing the work, you get to make the technology choices and, within certain reasonable constraints like "no PHP", I'm sure that we would be happy to run whatever performance testing system you come up with if it satisfies our requirements and has a reasonable API.

> So I thought, for the time being, it might be better if we (Tavendo) develop something for internal use / privately ("in-house"), and probably come again / show something when we actually have it running.

Well, we'd want to see something that actually works before officially standardizing Twisted on it anyway, but please feel free to share it early.  I guarantee you that we will not reject something simply for using WAMP :-).

> Regarding the "charting sub-issue":
> 
> I came across https://plot.ly/
> 
> This is kinda cool and very quick to get started:
> 
> http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png
> 
> It does histograms and tons of fancy stuff and hosts everything for free.

This is hosted-service only?  Not that that's a dealbreaker, I guess, we are pretty sure we're going to move everything to Github anyway...

-glyph


From singhsartaj94 at gmail.com  Mon Jan 19 23:40:30 2015
From: singhsartaj94 at gmail.com (Sartaj Singh)
Date: Tue, 20 Jan 2015 12:10:30 +0530
Subject: [Twisted-Python] GSoC '15
Message-ID: <CAC+H8-FNLT4MQnhNpb=SZb6SnMJSVG7g7oeH9NWXeam1opgL8A@mail.gmail.com>

Hello,
I am a student hoping to participate in GSoC'15. I have used twisted in
past in various projects. I wanted to know if twisted will be participating
in GSoC this year.

-- 
Regards
*Sartaj Singh*

*Mathematics and Computing*,
Indian Institute of Technology,
Varanasi - 221 005 INDIA

E-mail: singhsartaj94 at gmail.com, *sartaj.singh.apm13 at itbhu.ac.in
<sartaj.singh.apm13 at itbhu.ac.in>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150120/0c163416/attachment-0002.html>

From tobias.oberstein at tavendo.de  Tue Jan 20 13:40:37 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 20 Jan 2015 12:40:37 -0800
Subject: [Twisted-Python] Twisted receiving buffers swamped?
In-Reply-To: <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>
References: <54A51FC3.1020704@tavendo.de>
 <4588E551-1523-4408-900F-875EACA1D710@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C5@EXVMBX020-12.exch020.serverdata.net>
 <7D6F0634-BF82-4CD6-8BC1-3E14BF12C2AE@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B553654C6@EXVMBX020-12.exch020.serverdata.net>
 <79A57D29-4FF1-4A13-8D7B-166E6C35DB64@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490515@EXVMBX020-12.exch020.serverdata.net>
 <7E7C19EA-7A18-4F01-A0FA-D3180019441B@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490517@EXVMBX020-12.exch020.serverdata.net>
 <480F7513-010A-4C04-8288-F95712D7C54F@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B55490901@EXVMBX020-12.exch020.serverdata.net>
 <D723044F-EEAF-43C5-B748-3E51C18DA75B@twistedmatrix.com>
 <20150114125000.6966.759234828.divmod.xquotient.10@top>
 <634914A010D0B943A035D226786325D44B5556903A@EXVMBX020-12.exch020.serverdata.net>
 <20150117203943.6966.1688719668.divmod.xquotient.16@top>
 <634914A010D0B943A035D226786325D44B5556904C@EXVMBX020-12.exch020.serverdata.net>
 <20150118122408.6966.1877509550.divmod.xquotient.19@top>
 <634914A010D0B943A035D226786325D44B5556904D@EXVMBX020-12.exch020.serverdata.net>
 <3763097E-1915-455A-8E9E-DD8786834A6E@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44B5556922E@EXVMBX020-12.exch020.serverdata.net>
 <ABA18692-21B1-4666-8D72-ADB7C8FD021B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44B556283FE@EXVMBX020-12.exch020.serverdata.net>

> > Anyway. I think WAMP is a great choice to hook up components of a
> distributed test system - which is what I am after (e.g. I want to orchestrate
> 10 TCP load probes running on different machines, stressing a target TCP
> echo server).
> >
> > This difference in opinion might be because we have different
> _scopes/requirements_ to start from. Or not. I don't know.
> 
> This is Jean-Paul's personal opinion on the implementation choices involved.
> This is only really relevant if JP is going to be working on the performance
> testing framework directly or needs to interact with the WAMP bits directly.

Ok.

Yes, WAMP is an implementation detail here.

@Jean-Paul: I don't want to leave a bad impression here: you have been helping me
so often, and I learned so much from your hints, code, suggestions and opinions. I do
value that very much, and I have read everything you wrote. I swear;)

> If you're the one doing the work, you get to make the technology choices
> and, within certain reasonable constraints like "no PHP", I'm sure that we

omg, no;)

> would be happy to run whatever performance testing system you come up
> with if it satisfies our requirements and has a reasonable API.

Alright. We want to contribute, and if that is welcome, awesome!

"our requirements":

This is very important, as we need to fold in Twisted project specific requirements
into the list we have. If this is to be used not only in-house, but be of real
use/value to Twisted as a project. I think there will be a big overlap, but I want to
make sure we have it consolidated _before_ starting with code.

Can we collect those requirements from a Twisted project perspective?

I have skimmed through this thread and dumped it to:

https://github.com/oberstet/scratchbox/blob/master/python/twisted/speed/requirements.md

E.g. 10. + 11. + 12. + 15. from Glyph's comments.

If anyone has more to add to this list, please reply, I'll append it, and clean it up /structure it
in the end.

> > So I thought, for the time being, it might be better if we (Tavendo) develop
> something for internal use / privately ("in-house"), and probably come again
> / show something when we actually have it running.
> 
> Well, we'd want to see something that actually works before officially
> standardizing Twisted on it anyway, but please feel free to share it early.  I

Yes. Will do. I hate _talking_, instead of showing.

> guarantee you that we will not reject something simply for using WAMP :-).

=)

> 
> > Regarding the "charting sub-issue":
> >
> > I came across https://plot.ly/
> >
> > This is kinda cool and very quick to get started:
> >
> > http://picpaste.com/pics/Clipboard01-i4Karh0D.1421692351.png
> >
> > It does histograms and tons of fancy stuff and hosts everything for free.
> 
> This is hosted-service only?  Not that that's a dealbreaker, I guess, we are

Yes, this is hosted only. Which is part of why it's attractive. But: we don't want
to be locked into this too much.

Means: the test result _data_ should stay in a database open and accessible to
the Twisted project. We could host that database. Or it could reside on TSF.

The data is where the value is and the Twisted project needs to own/control that.

The data from that DB is then just read and requests to above service issued
to produce graphs.

But if we at some point want to kick that service, and generate graphs on our
own or whatever, that should definitely be possible.

/Tobias

> pretty sure we're going to move everything to Github anyway...
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From adi at roiban.ro  Thu Jan 22 03:12:33 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 22 Jan 2015 10:12:33 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
 <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
Message-ID: <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>

Based on feedback I assume that this is a dead end and for now new
contributions will still need to find for themselves what is the path for
becoming a core contributor.

I would like to ask commit permission, at least to merge the 10 patches
from eeshangarg ... as looks like there is little interest in merging the
cleanup work.

Thanks!

On 22 November 2014 at 14:59, Jonathan Lange <jml at mumak.net> wrote:

> On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
>> >
>> > On 11:48 am, exarkun at twistedmatrix.com wrote:
>> >>>
>> >>> This sounds great. Could you jot it down on a wiki page?
>> >>
>> >> Hmmm okay. :P
>> >
>> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
>> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
>> nice to get feedback from some more contributors - particularly people who
>> have recently gotten commit access (about whether the problems are real and
>> what they think of the proposed solutions) but also from other long-time
>> Twisted contributors about whether they like this new idea about how to
>> bring more people in (and whether they would volunteer to do the necessary
>> candidate reviews - without which effort this isn't practical).
>>
>> Thank you so much for doing this, JP.  I've wanted to do something about
>> onboarding for a while and it's just been difficult to work up the
>> enthusiasm.
>>
>>
> Thanks indeed!
>
> I like this idea, and think it's worth trying. I can participate in one or
> two candidate reviews (depending on exactly when).
>
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150122/e19568c8/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan 22 14:30:45 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Jan 2015 13:30:45 -0800
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
 <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>
 <CAFycZ9estc7W7CeqkD2rucxHDogz768pngqmns+bJ_w8wJG-3w@mail.gmail.com>
Message-ID: <35EF8422-2ABD-499D-B2D3-510A583426FA@twistedmatrix.com>

> On Jan 22, 2015, at 2:12 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Based on feedback I assume that this is a dead end and for now new contributions will still need to find for themselves what is the path for becoming a core contributor.

Characterizing this as a "dead end" is probably inaccurate.  There seems to be consensus that it would be a good idea if someone had the time to do it.  For now though, your conclusion is probably right.

> I would like to ask commit permission, at least to merge the 10 patches from eeshangarg ... as looks like there is little interest in merging the cleanup work.

Since I'd offered it to you in the past and you'd turned it down, I'm happy to reverse that decision :).  I take it that https://github.com/adiroiban.keys <https://github.com/adiroiban.keys> is an adequate source of credential material for you?

-glyph

> Thanks!
> 
> On 22 November 2014 at 14:59, Jonathan Lange <jml at mumak.net <mailto:jml at mumak.net>> wrote:
> On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com> wrote:
> >
> > On 11:48 am, exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com> wrote:
> >>>
> >>> This sounds great. Could you jot it down on a wiki page?
> >>
> >> Hmmm okay. :P
> >
> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>>. Notice "Proposal" in the URL.  It would be nice to get feedback from some more contributors - particularly people who have recently gotten commit access (about whether the problems are real and what they think of the proposed solutions) but also from other long-time Twisted contributors about whether they like this new idea about how to bring more people in (and whether they would volunteer to do the necessary candidate reviews - without which effort this isn't practical).
> 
> Thank you so much for doing this, JP.  I've wanted to do something about onboarding for a while and it's just been difficult to work up the enthusiasm.
> 
> 
> Thanks indeed!
> 
> I like this idea, and think it's worth trying. I can participate in one or two candidate reviews (depending on exactly when). 
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> 
> -- 
> Adi Roiban
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150122/50a3f43d/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 23 14:23:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 13:23:16 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
Message-ID: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>

Hi all,

Right now we have an Git mirror which has bogus committer IDs for everybody.

Eventually, this will become the actual real repository.

Before that happens, for aesthetic reasons, I would like to fix the metadata in the mirror so that it accurately records the email address of the committer, ideally with an email address that's actually associated with their github account so the right little picture shows up :).  I'll probably do this by using every committer's twistedmatrix.com <http://twistedmatrix.com/> email address, and they can either choose to associate that on Github (and Gravatar and Bitbucket or wherever) or not.

Does anyone know how I would re-generate the mirror to fix this?  I'd like to get it done soon before we slide further down the inexorable descent towards Git being the real upstream repository; having such a flag day after the migration seems untenable.

Also: can anyone (probably only Tom Prince, unfortunately) with knowledge of how the buildbot works tell me if any of that configuration is going to need to be adjusted?

Thanks!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150123/98262fff/attachment-0002.html>

From meejah at meejah.ca  Fri Jan 23 15:04:10 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 24 Jan 2015 02:04:10 +0400
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 (glyph@twistedmatrix.com's message of "Fri, 23 Jan 2015 13:23:16
 -0800")
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
Message-ID: <86lhktqhlx.fsf@atlantis.meejah.ca>

Glyph <glyph at twistedmatrix.com> writes:

> Does anyone know how I would re-generate the mirror to fix this?

You should be able to change the metadata in-place, and force-push a new
repository (or delete and re-create?) Obviously, all the hashes are
going to change if you change the author names.

You'll want to look at "git filter-branch" and probably just
--env-filter will be sufficient (and quite fast) for this use-case.

Beware that you'll likely want to change both of GIT_AUTHOR_EMAIL *and*
GIT_COMMITTER_EMAIL (they're probably the same, especially if this is a
git-svn clone).

> Also: can anyone (probably only Tom Prince, unfortunately) with
> knowledge of how the buildbot works tell me if any of that
> configuration is going to need to be adjusted?

I have done the above to a simple buildbot setup before, and I recall it
being happy -- it usually exports a specific hash if I recall
correctly. Of course, Twisted's setup is likely considerably more
complex than mine was :)

Cheers,
meejah




From glyph at twistedmatrix.com  Fri Jan 23 18:27:08 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 17:27:08 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <86lhktqhlx.fsf@atlantis.meejah.ca>
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 <86lhktqhlx.fsf@atlantis.meejah.ca>
Message-ID: <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>


> On Jan 23, 2015, at 2:04 PM, meejah <meejah at meejah.ca> wrote:
> 
> Glyph <glyph at twistedmatrix.com> writes:
> 
>> Does anyone know how I would re-generate the mirror to fix this?
> 
> You should be able to change the metadata in-place, and force-push a new
> repository (or delete and re-create?) Obviously, all the hashes are
> going to change if you change the author names.
> 
> You'll want to look at "git filter-branch" and probably just
> --env-filter will be sufficient (and quite fast) for this use-case.
> 
> Beware that you'll likely want to change both of GIT_AUTHOR_EMAIL *and*
> GIT_COMMITTER_EMAIL (they're probably the same, especially if this is a
> git-svn clone).

If I do this with filter-branch, though, that's going to break git-svn support entirely because the hashes won't match, right?

>> Also: can anyone (probably only Tom Prince, unfortunately) with
>> knowledge of how the buildbot works tell me if any of that
>> configuration is going to need to be adjusted?
> 
> I have done the above to a simple buildbot setup before, and I recall it
> being happy -- it usually exports a specific hash if I recall
> correctly. Of course, Twisted's setup is likely considerably more
> complex than mine was :)

<https://github.com/twisted-infra/twisted-buildbot-configuration/ <https://github.com/twisted-infra/twisted-buildbot-configuration/>> is available for your perusal if you want to find it out :).  But yeah, it's Twisted's configuration specifically I'm asking about, since our frankenstein svn→git setup is both weird and rickety.  The goal of the ongoing changes I'm referring to in my original message is to remove it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150123/b37e14cc/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 23 19:07:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Jan 2015 18:07:26 -0800
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
Message-ID: <0E79434F-A5D5-4101-9C9B-BF2C68A4E538@twistedmatrix.com>


> On Jan 23, 2015, at 1:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> ... an email address that's actually associated with their github account so the right little picture shows up :) ...

HawkOwl showed me a neat trick.

You can add your git-svn-generated committer ID as an email address to your github account, and you'll start getting credit for all your old commits.

To get this ID, go into your git checkout and do something like:

GIT_PAGER=cat git log --format=%ae -n 1 --author=glyph

Except instead of "glyph" put your own name in there.  (You can get this out of the github UI too but the only place I saw was in a tooltip which makes copying and pasting annoying.)

Then go to https://github.com/settings/emails <https://github.com/settings/emails> and add paste the email into a box.

Please be nice and only do this for your own committer ID, since obviously bbbe8e31-12d6-0310-92fd-ac37d47ddeeb isn't a domain that github can send verification messages to :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150123/e3fd684b/attachment-0002.html>

From meejah at meejah.ca  Fri Jan 23 19:21:32 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 24 Jan 2015 06:21:32 +0400
Subject: [Twisted-Python] the repository metadata of inevitability
In-Reply-To: <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>
 (glyph@twistedmatrix.com's message of "Fri, 23 Jan 2015 17:27:08
 -0800")
References: <8D76F910-6983-47AD-B13F-86636778A09B@twistedmatrix.com>
 <86lhktqhlx.fsf@atlantis.meejah.ca>
 <6A66F401-2DE9-4563-8202-B85D22AA6D8C@twistedmatrix.com>
Message-ID: <86zj98or4j.fsf@atlantis.meejah.ca>

Glyph <glyph at twistedmatrix.com> writes:

> If I do this with filter-branch, though, that's going to break git-svn
> support entirely because the hashes won't match, right?

"Maybe". I haven't tried that. Certainly the hashes won't match, but the
git-svn-id tags in the commit messages will still match. So, *could*
plausibly work, but I don't recall if I ever tried additional pulls from
svn after filter-branch (we were migrating wholesale to git in "one"
step).

Another way is to re-do the git-svn clone, but provide a svn->git
mapping. You can do this with a program if they're "regular" (e.g. if
you can just add "@twistedmatrix.com" to the SVN ids). Or you can
provide an explicit file mapping SVN -> name + email.

Not sure how long your clones take, but I know they can take a
looooooong time, so might be worth trying the filter-branch way
while-u-wait for a re-clone ;)

Anyway, the option is --authors-prog to "git svn fetch" (or
--authors-file I think if you do the static mapping way?)

With the program, you get the SVN id as the only arg, and spit out
"first last <email at example.com>" on stdout.

I documented a bunch of my adventures in this regard (migrating a large
SVN repo to Git) on my blog:

   https://meejah.ca/blog/migrating-svn-to-git

Unfortunately, I can't simply release all my scripts for that, but I
could "use it as inspiration" if any of those steps sound useful to
Twisted.

> <https://github.com/twisted-infra/twisted-buildbot-configuration/> is
> available for your perusal if you want to find it out :).

Okay, I'll take a look.

-- 
meejah



From adi at roiban.ro  Sat Jan 24 11:45:16 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 18:45:16 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are used
	as configuration options
Message-ID: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>

Hi,

Why reviewing a patch I got into this error from twistedchecker.
This is old code, just that someone it was touched by recent changes,

C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
"MAX_LENGTH" for type attribute (should match
((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)

The code is like this, where TestNetstring is a line receiver
protocol... so MAX_LENGTH act as a configuration option.

            a = TestNetstring()
            a.MAX_LENGTH = 699

What to do in this case and how I can have  this code accepted by
twistedchecker?

Thanks!
-- 
Adi Roiban



From exarkun at twistedmatrix.com  Sat Jan 24 12:23:27 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 24 Jan 2015 19:23:27 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
Message-ID: <20150124192327.6966.608890772.divmod.xquotient.31@top>

On 06:45 pm, adi at roiban.ro wrote:
>Hi,
>
>Why reviewing a patch I got into this error from twistedchecker.
>This is old code, just that someone it was touched by recent changes,
>
>C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
>"MAX_LENGTH" for type attribute (should match
>((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)
>
>The code is like this, where TestNetstring is a line receiver
>protocol... so MAX_LENGTH act as a configuration option.
>
>            a = TestNetstring()
>            a.MAX_LENGTH = 699
>
>What to do in this case and how I can have  this code accepted by
>twistedchecker?

Fix twistedchecker.  MAX_LENGTH doesn't violate the Twisted naming 
convention.

Jean-Paul



From adi at roiban.ro  Sat Jan 24 12:48:34 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 19:48:34 +0000
Subject: [Twisted-Python] Twisted Lore project development
Message-ID: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>

Hi,

Is Twisted Lore project still under development.
Should we accept new patches on Lore?

Twisted has migrated to Sphinx ... does Twisted as a project encourage
people to use Lore?

I saw that it is still documented in latest version and there is no
mention of being deprecated

https://twistedmatrix.com/documents/current/lore/index.html

Thanks!

-- 
Adi Roiban



From adi at roiban.ro  Sat Jan 24 12:51:10 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 24 Jan 2015 19:51:10 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <20150124192327.6966.608890772.divmod.xquotient.31@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
Message-ID: <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>

On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
> On 06:45 pm, adi at roiban.ro wrote:
>>
>> Hi,
>>
>> Why reviewing a patch I got into this error from twistedchecker.
>> This is old code, just that someone it was touched by recent changes,
>>
>> C0103:574,12:NetstringReceiverTests.test_buffer: Invalid name
>> "MAX_LENGTH" for type attribute (should match
>> ((([a-z_])|([a-z]+_[a-z]))[a-zA-Z0-9]+)$)
>>
>> The code is like this, where TestNetstring is a line receiver
>> protocol... so MAX_LENGTH act as a configuration option.
>>
>>            a = TestNetstring()
>>            a.MAX_LENGTH = 699
>>
>> What to do in this case and how I can have  this code accepted by
>> twistedchecker?
>
>
> Fix twistedchecker.  MAX_LENGTH doesn't violate the Twisted naming
> convention.

Thanks.

Found the report: https://github.com/twisted/twistedchecker/issues/52

Hope it will be easy to fix,
-- 
Adi Roiban



From exarkun at twistedmatrix.com  Sat Jan 24 13:50:48 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 24 Jan 2015 20:50:48 -0000
Subject: [Twisted-Python] Twisted Lore project development
In-Reply-To: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>
References: <CAFycZ9cRyTPxS-2ngqqx3ZMiMTByOn=Srx+qShrLGJ8WyO86Mg@mail.gmail.com>
Message-ID: <20150124205048.6966.1691644910.divmod.xquotient.40@top>

On 07:48 pm, adi at roiban.ro wrote:
>Hi,
>
>Is Twisted Lore project still under development.

No.  It is deprecated.

https://twistedmatrix.com/trac/browser/trunk/twisted/__init__.py#L68
https://twistedmatrix.com/trac/browser/trunk/twisted/lore/__init__.py#L5
>>>from twisted import lore
[...]
__main__:1: DeprecationWarning: twisted.lore was deprecated in Twisted 
14.0.0: Use Sphinx instead.
>>>

>Should we accept new patches on Lore?

It's very unlikely that doing so will improve anything for anyone.
>Twisted has migrated to Sphinx ... does Twisted as a project encourage
>people to use Lore?

I think "Use Sphinx instead." in the message about should answer this 
fairly clearly.
>I saw that it is still documented in latest version and there is no
>mention of being deprecated

It is standing policy *not* to delete the documentation of deprecated 
APIs.  Only when the API itself is removed is the corresponding 
documentation removed.

Jean-Paul
>https://twistedmatrix.com/documents/current/lore/index.html
>
>Thanks!
>
>--
>Adi Roiban
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Sat Jan 24 18:01:16 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 01:01:16 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
Message-ID: <20150125010116.6966.226576624.divmod.xquotient.45@top>

On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>On 06:45 pm, adi at roiban.ro wrote:
>>>
>>>Hi,
>>>
>>>Why reviewing a patch I got into this error from twistedchecker.
>>>This is old code, just that someone it was touched by recent changes,

Also: pre-existing errors like this one should not block new development 
work being done.  It is *not* a requirement that a patch fix all nearby 
but unrelated problems like this one.

New and changed code should conform to the standard and try not to 
introduce new errors.  If the "errors" being introduced are due to bugs 
in a tool that reports errors, the bugs should be fixed.

Existing code *near* new or changed code can and should be left alone.

Jean-Paul



From trac at twistedmatrix.com  Sun Jan 25 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 25 Jan 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1422169517.82.173003100213644203@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150125/bb6e0c46/attachment-0002.html>

From adi at roiban.ro  Sun Jan 25 07:09:38 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 25 Jan 2015 14:09:38 +0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <20150125010116.6966.226576624.divmod.xquotient.45@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
Message-ID: <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>

On 25 January 2015 at 01:01,  <exarkun at twistedmatrix.com> wrote:
> On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>>
>> On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>>
>>> On 06:45 pm, adi at roiban.ro wrote:
>>>>
>>>>
>>>> Hi,
>>>>
>>>> Why reviewing a patch I got into this error from twistedchecker.
>>>> This is old code, just that someone it was touched by recent changes,
>
>
> Also: pre-existing errors like this one should not block new development
> work being done.  It is *not* a requirement that a patch fix all nearby but
> unrelated problems like this one.

OK. but then maybe twistededchecker and pyflakes should not be part of
the stable builders.
In my head, all stable builders should pass before merging new code.

> New and changed code should conform to the standard and try not to introduce
> new errors.  If the "errors" being introduced are due to bugs in a tool that
> reports errors, the bugs should be fixed.

New code should only try not to introduce new errors?

I was expecting that new code is not allowed to introduce new errors. Period.

> Existing code *near* new or changed code can and should be left alone.

Does this mean that The (boy) scout rule does not apply for Twisted development?

Thanks!


-- 
Adi Roiban



From adi at roiban.ro  Sun Jan 25 07:19:27 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 25 Jan 2015 14:19:27 +0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
Message-ID: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>

While running tests I see that the following tests fails randomly...
it it was failing  from some time


twisted.words.test.test_xpath.XPathTests.test_position
===============================================================================
[FAIL]
Traceback (most recent call last):
  File "C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_dist\test\test_disttrial.py",
line 371, in test_runUntilFailure
    self.assertEqual(5, len(called))
  File "C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_synctest.py",
line 447, in assertEqual
    % (msg, pformat(first), pformat(second)))
twisted.trial.unittest.FailTest: not equal:
a = 5
b = 2

----------

On my local computer (Ubuntu 14.04) the test is always skipped.

Does anyone has any idea why the test is not skipped ?

I would like to have stable results from this tests as with the
current state I always have to double check if a failure on XP is a
new one or is just this bad tests.

Thanks!
-- 
Adi Roiban



From exarkun at twistedmatrix.com  Sun Jan 25 08:21:47 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 15:21:47 -0000
Subject: [Twisted-Python] twistedchecker - Names of constant which are
 used as configuration options
In-Reply-To: <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
 <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
Message-ID: <20150125152147.6966.548675115.divmod.xquotient.49@top>

On 02:09 pm, adi at roiban.ro wrote:
>On 25 January 2015 at 01:01,  <exarkun at twistedmatrix.com> wrote:
>>On 24 Jan, 07:51 pm, adi at roiban.ro wrote:
>>>
>>>On 24 January 2015 at 19:23,  <exarkun at twistedmatrix.com> wrote:
>>>>
>>>>On 06:45 pm, adi at roiban.ro wrote:
>>>>>
>>>>>
>>>>>Hi,
>>>>>
>>>>>Why reviewing a patch I got into this error from twistedchecker.
>>>>>This is old code, just that someone it was touched by recent 
>>>>>changes,
>>
>>
>>Also: pre-existing errors like this one should not block new 
>>development
>>work being done.  It is *not* a requirement that a patch fix all 
>>nearby but
>>unrelated problems like this one.
>
>OK. but then maybe twistededchecker and pyflakes should not be part of
>the stable builders.
>In my head, all stable builders should pass before merging new code.
>>New and changed code should conform to the standard and try not to 
>>introduce
>>new errors.  If the "errors" being introduced are due to bugs in a 
>>tool that
>>reports errors, the bugs should be fixed.
>
>New code should only try not to introduce new errors?

The tools are there to help development, not hinder it.  If a tool is 
producing an error that doesn't help development, slavishly adhering to 
a policy that requires additional work that doesn't help the project is 
counter-productive.

If all the tools were perfect we could say that all new code *must* 
never introduce new errors.  Unfortunately the tools are not perfect.
>I was expecting that new code is not allowed to introduce new errors. 
>Period.
>>Existing code *near* new or changed code can and should be left alone.
>
>Does this mean that The (boy) scout rule does not apply for Twisted 
>development?

I'm not familiar with "The (boy) scout rule".

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jan 25 08:28:34 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2015 15:28:34 -0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
Message-ID: <20150125152834.6966.1990488.divmod.xquotient.58@top>

On 02:19 pm, adi at roiban.ro wrote:
>While running tests I see that the following tests fails randomly...
>it it was failing  from some time
>
>
>twisted.words.test.test_xpath.XPathTests.test_position

This is an unrelated test.  I'm not sure if this is a simple copy/paste 
mistake or if you're mis-reading trial output.  This is the test before 
the test that failed.

The test that failed is named at the bottom of the failure report:

twisted.trial._dist.test.test_disttrial.DistTrialRunnerTestCase.test_runUntilFailure

This test has intermittently failed on Windows since disttrial was 
merged into trunk.

The ticket tracking this problem is 
https://twistedmatrix.com/trac/ticket/6027
>===============================================================================
>[FAIL]
>Traceback (most recent call last):
>  File 
>"C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_dist\test\test_disttrial.py",
>line 371, in test_runUntilFailure
>    self.assertEqual(5, len(called))
>  File 
>"C:\buildslave\twisted\winxp32-py2.7\Twisted\twisted\trial\_synctest.py",
>line 447, in assertEqual
>    % (msg, pformat(first), pformat(second)))
>twisted.trial.unittest.FailTest: not equal:
>a = 5
>b = 2
>
>----------
>
>On my local computer (Ubuntu 14.04) the test is always skipped.

The skip report should tell you why it's skipped.  Presumably you're 
missing one of the dependencies - though off the top of my head I'm not 
sure what third-party dependencies this code has.
>Does anyone has any idea why the test is not skipped ?

The default state of a test should *not* be to skip.  It should be to 
run.  A skipped test is a useless test.

Jean-Paul
>I would like to have stable results from this tests as with the
>current state I always have to double check if a failure on XP is a
>new one or is just this bad tests.
>
>Thanks!
>--
>Adi Roiban



From glyph at twistedmatrix.com  Sun Jan 25 19:55:00 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 18:55:00 -0800
Subject: [Twisted-Python] twistedchecker - Names of constant which are
	used as configuration options
In-Reply-To: <20150125152147.6966.548675115.divmod.xquotient.49@top>
References: <CAFycZ9cbpu2OYyLr4mCBX455B=4U+2MEXHjKTk3qja37NqHh0A@mail.gmail.com>
 <20150124192327.6966.608890772.divmod.xquotient.31@top>
 <CAFycZ9cBnGei9AyZN4pJLuz3mzAk9rJ-6YxWGPQ33KLbUmDr2A@mail.gmail.com>
 <20150125010116.6966.226576624.divmod.xquotient.45@top>
 <CAFycZ9eDt7A0AmckQBOD-Ngm-6C9gvOkqyi+749BNN4p7POzHQ@mail.gmail.com>
 <20150125152147.6966.548675115.divmod.xquotient.49@top>
Message-ID: <88CCAFEA-8C91-4B47-AA9C-43E519822F29@twistedmatrix.com>


> On Jan 25, 2015, at 7:21 AM, exarkun at twistedmatrix.com wrote:

> The tools are there to help development, not hinder it.  If a tool is producing an error that doesn't help development, slavishly adhering to a policy that requires additional work that doesn't help the project is counter-productive.


I think the consensus rule we are converging on for this is, if you notice a bug in the tool, you have to report the bug in the tool.  If the bug already exists, just link to the issue which is affected by that bug, but if it's actually a bug and not just a coding-standard thing you don't feel like fixing, you should not block development on it.  This seems like the right way to proceed with spurious warnings so we don't add tons of pointless busy-work but we also don't just develop a culture of only a special inner circle knowing which warnings are OK to ignore.

>> Does this mean that The (boy) scout rule does not apply for Twisted development?
> 
> I'm not familiar with "The (boy) scout rule".

I believe that Adi is referring to <http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule <http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule>>, "Always leave the campground cleaner than you found it."

While every change should be an improvement, I think the Burning Man creed of "no matter out of place" would be a better way to formulate the policy :).  You should clean up the things that you're changing, but every unrelated change is an extra burden on the reviewer, so it's not doing anyone any favors to make patches super long to fix every trace of coding standard violation.

Having dedicated cleanup branches is fine, but they should also be finite in their scope, and not clean up things beyond the specific area that they're trying to fix.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150125/6a8c20b4/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 25 20:50:10 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 19:50:10 -0800
Subject: [Twisted-Python] hard dependency on setuptools
Message-ID: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>

Hi all,

I don't know how you'd install Twisted without setuptools these days anyway, but just as a heads up, as per discussion on <https://twistedmatrix.com/trac/ticket/3696#comment:79 <https://twistedmatrix.com/trac/ticket/3696#comment:79>> we are going to remove any pretense of supporting Twisted without setuptools installed.

I am probably going to install it on the last buildbot environment that doesn't have it tomorrow.  If you have a strong case for continuing to support optionally depending on setuptools... well, I am probably still going to do that and we can file some more tickets to support it properly instead of by accident later :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150125/0dd2158c/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 25 21:00:31 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Jan 2015 20:00:31 -0800
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <20150125152834.6966.1990488.divmod.xquotient.58@top>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
Message-ID: <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>


> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:

> This test has intermittently failed on Windows since disttrial was merged into trunk.

And, as you yourself pointed out on the ticket, sometimes on Linux too.

I still have absolutely no clue why this happens, by the way.  If anyone else could be prompted to investigate I would be much obliged

> The default state of a test should *not* be to skip.  It should be to run.  A skipped test is a useless test.

As a matter of general principle, the only reason a test should ever be skipped within Twisted is if an optional dependency is not available.  And, just to be clear, the presence of "TODO'd" tests is pretty much just a bug, fix old ones and never add new ones :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150125/7fe0ccf0/attachment-0002.html>

From adi at roiban.ro  Mon Jan 26 08:56:04 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 15:56:04 +0000
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
 <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
Message-ID: <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>

On 26 January 2015 at 04:00, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:
>
>
> This test has intermittently failed on Windows since disttrial was merged
> into trunk.
>
>
> And, as you yourself pointed out on the ticket, sometimes on Linux too.
>
> I still have absolutely no clue why this happens, by the way.  If anyone
> else could be prompted to investigate I would be much obliged

I have updated my findings here: https://twistedmatrix.com/trac/ticket/6027


> The default state of a test should *not* be to skip.  It should be to run.
> A skipped test is a useless test.
>
> As a matter of general principle, the only reason a test should ever be
> skipped within Twisted is if an optional dependency is not available.  And,
> just to be clear, the presence of "TODO'd" tests is pretty much just a bug,
> fix old ones and never add new ones :-).

I think that these todo are just another way of creating a ticket ...
with a promise to annoy you forever

Would it help if I extract them into proper Trac tickes and clean the code?

--------

Maybe update docs and stress that todo tests should not be committed
... or never mention about such thing as TODO markers,
I just write tests and expect them to fail without marking them as todo.

http://twistedmatrix.com/documents/current/core/development/policy/test-standard.html

(not sure why some docs are on wiki and others in the repo)

And maybe also add a twistedchecker check and check that no new tests
are commited with todo.


-- 
Adi Roiban



From adi at roiban.ro  Mon Jan 26 11:32:49 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 18:32:49 +0000
Subject: [Twisted-Python] hard dependency on setuptools
In-Reply-To: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>
References: <30264957-C6E8-4453-A811-4E560ACDB331@twistedmatrix.com>
Message-ID: <CAFycZ9dDKwqjkHrcg8OW9SA1_uoodHfqjvBynzg_Cp0Lu1rhhA@mail.gmail.com>

I think that setuptools is fine. Looking forward to see  3696 merged
so that I don't have to manually hunt dependencies and this should
help with implementing
https://github.com/twisted-infra/twisted-buildbot-configuration/pull/7

Thanks!

On 26 January 2015 at 03:50, Glyph <glyph at twistedmatrix.com> wrote:
> Hi all,
>
> I don't know how you'd install Twisted without setuptools these days anyway,
> but just as a heads up, as per discussion on
> <https://twistedmatrix.com/trac/ticket/3696#comment:79> we are going to
> remove any pretense of supporting Twisted without setuptools installed.
>
> I am probably going to install it on the last buildbot environment that
> doesn't have it tomorrow.  If you have a strong case for continuing to
> support optionally depending on setuptools... well, I am probably still
> going to do that and we can file some more tickets to support it properly
> instead of by accident later :).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban



From adi at roiban.ro  Mon Jan 26 12:12:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 19:12:14 +0000
Subject: [Twisted-Python] Review tag for closed tickets
Message-ID: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>

Jean Paul commented that for merged tickets I should remove the review tag.

I am lost between wiki pages and sphinx documentation.

Where is the place where these these steps are described and maybe I
am also not aware of other steps required after a branch is merged?

----

Since the ticket is automatically closed, maybe the bot can also
remove the review ticket.

Thanks!

-- 
Adi Roiban



From glyph at twistedmatrix.com  Mon Jan 26 13:11:28 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 12:11:28 -0800
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
Message-ID: <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>


> On Jan 26, 2015, at 11:12 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Jean Paul commented that for merged tickets I should remove the review tag.
> 
> I am lost between wiki pages and sphinx documentation.

<https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>> pretty much describes the whole process.

Notice that the "remove the review keyword" step comes before the "merge the change to trunk" step.

> Where is the place where these these steps are described and maybe I
> am also not aware of other steps required after a branch is merged?

The reason you are not finding this in a list of steps after the branch is merged is because it should be done in advance of merging the branch, you skipped an earlier part of the process :).

> Since the ticket is automatically closed, maybe the bot can also
> remove the review ticket.

The review should be completed before the ticket is merged, so the bot should not be doing this automatically.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150126/7d8ec10f/attachment-0002.html>

From adi at roiban.ro  Mon Jan 26 13:51:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 26 Jan 2015 20:51:14 +0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
Message-ID: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>

On 26 January 2015 at 20:11, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jan 26, 2015, at 11:12 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Jean Paul commented that for merged tickets I should remove the review tag.
>
> I am lost between wiki pages and sphinx documentation.
>
>
> <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>
> pretty much describes the whole process.
>
> Notice that the "remove the review keyword" step comes before the "merge the
> change to trunk" step.
>
> Where is the place where these these steps are described and maybe I
> am also not aware of other steps required after a branch is merged?
>
>
> The reason you are not finding this in a list of steps after the branch is
> merged is because it should be done in advance of merging the branch, you
> skipped an earlier part of the process :).

True. Thanks!

My bad... but then it also state "Make sure that it's green! " ... but
in a previous email I just found out that is ok for twistededchecker
and pyflakes to be red.

> Since the ticket is automatically closed, maybe the bot can also
> remove the review ticket.
>
>
> The review should be completed before the ticket is merged, so the bot
> should not be doing this automatically.

but in the commit message I do add the author, why not have the bot
automatically assign the first author form the list, review merge and
close the ticket?

What is the purpose of these manual task and why you don't want to
automate them?

PS: Trac "reasing to" field is a PITA :)

-- 
Adi Roiban



From exarkun at twistedmatrix.com  Mon Jan 26 17:44:27 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Jan 2015 00:44:27 -0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
Message-ID: <20150127004427.6966.1548888533.divmod.xquotient.67@top>

On 26 Jan, 08:51 pm, adi at roiban.ro wrote:
>>
>>The review should be completed before the ticket is merged, so the bot
>>should not be doing this automatically.
>
>but in the commit message I do add the author, why not have the bot
>automatically assign the first author form the list, review merge and
>close the ticket?
>
>What is the purpose of these manual task and why you don't want to
>automate them?

You jumped pretty quickly from "it is not automated" to "you don't want 
to automate them".

Building reliable automation is work.  If that's work you want to do, 
feel free.

One challenge you'll have to contend with is that the metadata 
automatically collected by trac is often incorrect.  For example, the 
author field is populated based on the person who creates the svn 
branch.  Non-committers can never create svn branches so the tickets 
worked on by non-committers often have an incorrect author field.

I'm sure this can be overcome.  It's just one example of an extra 
difficulty you might not have immediately recognized when thinking about 
how reliable automation to take over this menial task could work.

Jean-Paul



From glyph at twistedmatrix.com  Mon Jan 26 17:57:20 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 16:57:20 -0800
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
Message-ID: <2F7788E5-BD06-4CB2-B723-24FED0607AF4@twistedmatrix.com>


> On Jan 26, 2015, at 12:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> My bad... but then it also state "Make sure that it's green! " ... but
> in a previous email I just found out that is ok for twistededchecker
> and pyflakes to be red.

This was definitely an oversight, so I've updated the wiki page to include information about what to do when a tool has a bug:

<https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Reviewers:Howtoreviewachange>>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150126/bb1e3983/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 26 18:00:36 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Jan 2015 17:00:36 -0800
Subject: [Twisted-Python] Spurious failure on winxp32-py2.7
In-Reply-To: <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>
References: <CAFycZ9dMHUnhgbn453s6zCYVu2F3P8U60=CJ_6W+sDui++9WZg@mail.gmail.com>
 <20150125152834.6966.1990488.divmod.xquotient.58@top>
 <4FE76253-A2F9-4224-A549-5DA77050DF37@twistedmatrix.com>
 <CAFycZ9dJ+gXz64ofLqCmC8q46pcGUQAL75=bgjWTMOta6D3DJA@mail.gmail.com>
Message-ID: <D232AD33-C7F4-4FDA-BB7B-BC2B5C90B3CA@twistedmatrix.com>


> On Jan 26, 2015, at 7:56 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 January 2015 at 04:00, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> On Jan 25, 2015, at 7:28 AM, exarkun at twistedmatrix.com wrote:
>> 
>> 
>> This test has intermittently failed on Windows since disttrial was merged
>> into trunk.
>> 
>> 
>> And, as you yourself pointed out on the ticket, sometimes on Linux too.
>> 
>> I still have absolutely no clue why this happens, by the way.  If anyone
>> else could be prompted to investigate I would be much obliged
> 
> I have updated my findings here: https://twistedmatrix.com/trac/ticket/6027 <https://twistedmatrix.com/trac/ticket/6027>

Thanks for looking into it.

>> The default state of a test should *not* be to skip.  It should be to run.
>> A skipped test is a useless test.
>> 
>> As a matter of general principle, the only reason a test should ever be
>> skipped within Twisted is if an optional dependency is not available.  And,
>> just to be clear, the presence of "TODO'd" tests is pretty much just a bug,
>> fix old ones and never add new ones :-).
> 
> I think that these todo are just another way of creating a ticket ...
> with a promise to annoy you forever

And to annoy every contributor ever who works on something unrelated :).

> Would it help if I extract them into proper Trac tickes and clean the code?

Some of them are already filed, but... yes, having a ticket for every one would be helpful.

In fact, we might want to have two tickets for each one: one "delete this todo'd test" ticket, and one "actually fix this issue" ticket, since we don't need to keep hanging on to the tests in the repo themselves while we wait for someone to take care of the issues.

> --------
> 
> Maybe update docs and stress that todo tests should not be committed
> ... or never mention about such thing as TODO markers,
> I just write tests and expect them to fail without marking them as todo.
> 
> http://twistedmatrix.com/documents/current/core/development/policy/test-standard.html
> 
> (not sure why some docs are on wiki and others in the repo)

There's no really good reason, that's just where things are.  Probably everything should move into the repo.

> And maybe also add a twistedchecker check and check that no new tests
> are commited with todo.

If you wanted to add that it would definitely be helpful.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150126/73e612d8/attachment-0002.html>

From adi at roiban.ro  Tue Jan 27 02:38:36 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 27 Jan 2015 09:38:36 +0000
Subject: [Twisted-Python] Review tag for closed tickets
In-Reply-To: <20150127004427.6966.1548888533.divmod.xquotient.67@top>
References: <CAFycZ9fZKiKkVPnbeX9c7KtBAGKfwZg5X7W8mHrJYS0mZwX3YA@mail.gmail.com>
 <FC0909BA-C01B-46B9-938C-A2B2C36ABCF9@twistedmatrix.com>
 <CAFycZ9cnMA5TgVa+BgBjRR=JPSt-E1cOp1LJBcnKw961Nz=SHg@mail.gmail.com>
 <20150127004427.6966.1548888533.divmod.xquotient.67@top>
Message-ID: <CAFycZ9fJ0X+hYQZ17GQRC6Smq-Z8Lx35XEEgvsB8BQwQ1y_eHA@mail.gmail.com>

On 27 January 2015 at 00:44,  <exarkun at twistedmatrix.com> wrote:
> On 26 Jan, 08:51 pm, adi at roiban.ro wrote:
>>>
>>>
>>> The review should be completed before the ticket is merged, so the bot
>>> should not be doing this automatically.
>>
>>
>> but in the commit message I do add the author, why not have the bot
>> automatically assign the first author form the list, review merge and
>> close the ticket?
>>
>> What is the purpose of these manual task and why you don't want to
>> automate them?
>
>
> You jumped pretty quickly from "it is not automated" to "you don't want to
> automate them".

Sorry for that.  I have interpreted "the bot should not be doing this
automatically" as a statement
that any work in this direction will be rejected

> Building reliable automation is work.  If that's work you want to do, feel
> free.

Will do. https://github.com/twisted-infra/trac-config/issues/19

Thanks for the comments!
-- 
Adi Roiban



From patryk at sciborek.com  Tue Jan 27 06:00:18 2015
From: patryk at sciborek.com (=?UTF-8?Q?Patryk_=C5=9Aciborek?=)
Date: Tue, 27 Jan 2015 14:00:18 +0100
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
	deferreds and mocking
Message-ID: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>

Hi!

I've just started a new project using Twisted and I want to write unit
tests since the beginning. Unfortunately I've got some trouble
understanding how should I do it. I read 'Test-driven development with
Twisted', read some articles on the web and searched on the mailing list
but I couldn't find anything which make it clear for me.

I've got a class:

class SessionCleaner(object):
    def __init__(self, session_db, interval=10):
        self.session_db = session_db
        self.lc = task.LoopingCall(self.check_old_sessions)
        self.lc.start(interval)

    @defer.inlineCallbacks
    def check_old_sessions(self):
        log.msg('check_old_sessions()', logLevel=logging.DEBUG)
        try:
            old_sessions = yield self.session_db.get_old_sessions()
            for s in old_sessions:
                yield self.session_db.process_stopped(s)

        except txredisapi.ConnectionError as e:
            log.msg('check_old_sessions - connection error {}'
                    .format(e), logLevel=logging.WARNING)

session_db is a object with methods which makes some calls to Redis.

Testing if __init__ works correctly is easy - I can mock task.LoopingCall
and check if it was called with correct attributes.

I've got trouble testing check_old_sessions. Since I'm writing unit tests I
don't want to call real session_db methods and make real Redis queries. I'd
like to mock them and test just few things:
- is the method get_old_sessions called?
- is the method process_stopped called N times with the arguments returned
by mocked get_old_sessions?
- is txredisapi.ConnectionError handled correctly?

So is there any "right" way of mocking functions which returns deferreds?
Or maybe I should test this method differently?

Best regards,
Patryk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150127/94ef0786/attachment-0002.html>

From jamesbroadhead at gmail.com  Tue Jan 27 07:48:23 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Tue, 27 Jan 2015 14:48:23 +0000
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
Message-ID: <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>

Hey

I raised a similar question a while ago:
http://twistedmatrix.com/pipermail/twisted-python/2013-July/027241.html

Since then, our approach has evolved into the below, which may be useful.
https://github.com/jamesbroadhead/bttrtwisted/blob/master/bttrtwisted/testing.py

Usage:
  expected = Foo()
  remote_result = Result()
  thing = Thing()
  thing.call_external_service = dmockfunc(remote_result)

  d = thing.function_under_test(..)
  d.addCallback(self.assertEqual, expected)
  return d

You can use the func_dict param to gen_nondeferred_mock to have it stand
in-place-of an object

As always with mocks, a little can be helpful, but if you find you're
instantiating a lot of them, you may want to reconsider your approach.

Feedback welcome!
[ the repo is for experiments, so use with care ]

James

On 27 January 2015 at 13:00, Patryk Ściborek <patryk at sciborek.com> wrote:

> Hi!
>
> I've just started a new project using Twisted and I want to write unit
> tests since the beginning. Unfortunately I've got some trouble
> understanding how should I do it. I read 'Test-driven development with
> Twisted', read some articles on the web and searched on the mailing list
> but I couldn't find anything which make it clear for me.
>
> I've got a class:
>
> class SessionCleaner(object):
>     def __init__(self, session_db, interval=10):
>         self.session_db = session_db
>         self.lc = task.LoopingCall(self.check_old_sessions)
>         self.lc.start(interval)
>
>     @defer.inlineCallbacks
>     def check_old_sessions(self):
>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>         try:
>             old_sessions = yield self.session_db.get_old_sessions()
>             for s in old_sessions:
>                 yield self.session_db.process_stopped(s)
>
>         except txredisapi.ConnectionError as e:
>             log.msg('check_old_sessions - connection error {}'
>                     .format(e), logLevel=logging.WARNING)
>
> session_db is a object with methods which makes some calls to Redis.
>
> Testing if __init__ works correctly is easy - I can mock task.LoopingCall
> and check if it was called with correct attributes.
>
> I've got trouble testing check_old_sessions. Since I'm writing unit tests
> I don't want to call real session_db methods and make real Redis queries.
> I'd like to mock them and test just few things:
> - is the method get_old_sessions called?
> - is the method process_stopped called N times with the arguments returned
> by mocked get_old_sessions?
> - is txredisapi.ConnectionError handled correctly?
>
> So is there any "right" way of mocking functions which returns deferreds?
> Or maybe I should test this method differently?
>
> Best regards,
> Patryk
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150127/32037091/attachment-0002.html>

From adi at roiban.ro  Tue Jan 27 08:18:12 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 27 Jan 2015 15:18:12 +0000
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
Message-ID: <CAFycZ9em8zt_SSKhfmz0sZeAh8qZO0D3JF6U7hRuVZ+WrhuLVA@mail.gmail.com>

On 27 January 2015 at 13:00, Patryk Ściborek <patryk at sciborek.com> wrote:
> Hi!
>
> I've just started a new project using Twisted and I want to write unit tests
> since the beginning. Unfortunately I've got some trouble understanding how
> should I do it. I read 'Test-driven development with Twisted', read some
> articles on the web and searched on the mailing list but I couldn't find
> anything which make it clear for me.
>
> I've got a class:
>
> class SessionCleaner(object):
>     def __init__(self, session_db, interval=10):
>         self.session_db = session_db
>         self.lc = task.LoopingCall(self.check_old_sessions)

def __init__(self, session_db, interval=10, reactor=reactor)
    self.lc = task.LoopingCall(self.check_old_sessions)
    self.lc.clock = reactor

Then in tests you can replace the default reactor with
twisted.internet.task.Clock
In this way you have control over the looping call.

>         self.lc.start(interval)
>
>     @defer.inlineCallbacks
>     def check_old_sessions(self):
>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>         try:
>             old_sessions = yield self.session_db.get_old_sessions()
>             for s in old_sessions:
>                 yield self.session_db.process_stopped(s)
>
>         except txredisapi.ConnectionError as e:
>             log.msg('check_old_sessions - connection error {}'
>                     .format(e), logLevel=logging.WARNING)
>
> session_db is a object with methods which makes some calls to Redis.

In tests you can replace session_db with an InMemorySessionDB which is
rigged to return on demand a failure or success.

class InMemorySessionDB(object):

    def __init__(self):
         self._session = []
         self._stop_session = {}

    def addRiggedSession(self, session, stop_result):
          self._session.append(session)
          self._stop_session[session] = stop_result

    def get_old_sessions(self)
        return self._session

   def process_stopped(self, session):
      return self._stop_session[session]

InMemorySessionDB can also inherit form the real deal class and just
overwrite exit points.

This is more like a mock with a spec.. as it will fail if arbitrary
methods are called with arbitrary arguments.

I don't think there is a right way of doing it, but I try to avoid
using generic Mock or MagicMock objects.

Good luck!
-- 
Adi Roiban



From psi29a at gmail.com  Thu Jan 29 07:10:27 2015
From: psi29a at gmail.com (bret curtis)
Date: Thu, 29 Jan 2015 15:10:27 +0100
Subject: [Twisted-Python] bringing TxMongo back from the brink!
Message-ID: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>

Hello fellow Twistrons,

let me introduce TxMongo, an asynchronous MongoDB client that has come up a
few times in discussion on this list. The project isn't dead, it has been
contributed to over the years though while the original author, Alexandre
Fiori, reviews and accepts the pull requests.

After helping make a new 0.6 release, with SSL support, we talked about the
possibility of Amplidata taking on the future development of TxMongo and
breathing new life into the project. We just need a new place to host the
'official' repository and reign in all the various forks. What better place
to do that than Twisted's github organization, similar in nature to what
was done with Ldaptor.

Amplidata will be the primary driver in development, but new feature
requests and patches are of course, always welcome. :)

So what does everyone think of this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150129/6c6f9b3a/attachment-0002.html>

From clayton.daley at gmail.com  Thu Jan 29 13:05:32 2015
From: clayton.daley at gmail.com (Clayton Daley)
Date: Thu, 29 Jan 2015 15:05:32 -0500
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
Message-ID: <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>

Unless Twisted loves the idea of hosting this, it might make more sense to
start a TxCommons (like https://github.com/ZF-Commons). This shifts the
emphasis away from the Twisted and onto the Commons, including:

   - The lower (or lack of) "core support" commitment.  The Commons can
   still highlight "supported" projects (by the commons or outside
   organizations), but it's more transparent about the status relative to core.
   - A significantly lower participation/contribution barrier that isn't
   interrelated with the politics (and justifiably high standards) of core.
   - A central place to find Tx libraries that actively welcomes new
   additions.
      - My twisted-pyro and twisted-mandrill are so-so examples of what I
      mean.  If they were a little more mature, it'd be better for someone to
      find and improve these libraries than start over from scratch.
      - More importantly, users would know that the project won't fragment
      if I'm not proactively maintaining it. They can always become an active
      participant in the Commons and move business along.  Obviously, I
      relinquish that control if and when I contribute it (or the commons
      establishes an official fork).

Clayton Daley


On Thu, Jan 29, 2015 at 9:10 AM, bret curtis <psi29a at gmail.com> wrote:

> Hello fellow Twistrons,
>
> let me introduce TxMongo, an asynchronous MongoDB client that has come up
> a few times in discussion on this list. The project isn't dead, it has been
> contributed to over the years though while the original author, Alexandre
> Fiori, reviews and accepts the pull requests.
>
> After helping make a new 0.6 release, with SSL support, we talked about
> the possibility of Amplidata taking on the future development of TxMongo
> and breathing new life into the project. We just need a new place to host
> the 'official' repository and reign in all the various forks. What better
> place to do that than Twisted's github organization, similar in nature to
> what was done with Ldaptor.
>
> Amplidata will be the primary driver in development, but new feature
> requests and patches are of course, always welcome. :)
>
> So what does everyone think of this?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150129/4b734a73/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan 29 20:19:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Jan 2015 19:19:58 -0800
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
 <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
Message-ID: <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>



> On Jan 29, 2015, at 12:05 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> Unless Twisted loves the idea of hosting this, it might make more sense to start a TxCommons (like https://github.com/ZF-Commons <https://github.com/ZF-Commons>). This shifts the emphasis away from the Twisted and onto the Commons, including:
> The lower (or lack of) "core support" commitment.  The Commons can still highlight "supported" projects (by the commons or outside organizations), but it's more transparent about the status relative to core.
> A significantly lower participation/contribution barrier that isn't interrelated with the politics (and justifiably high standards) of core.
> A central place to find Tx libraries that actively welcomes new additions.
> My twisted-pyro and twisted-mandrill are so-so examples of what I mean.  If they were a little more mature, it'd be better for someone to find and improve these libraries than start over from scratch.
> More importantly, users would know that the project won't fragment if I'm not proactively maintaining it. They can always become an active participant in the Commons and move business along.  Obviously, I relinquish that control if and when I contribute it (or the commons establishes an official fork).
> Clayton Daley

So, I don't mind the idea of Twisted hosting it for now, but you make a good point.  The Twisted org on Github is presently hosting quite a few things, with varying degrees of association with various subsets of the core developers.

Since ldaptor already moved to this org, I think we should probably just move this as well, and then move things out later once we have established a Commons org and figured out how we want to administer it.

BTW: any chance of renaming those TxPyro and TxMandrill? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150129/b19e092d/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Jan 30 03:08:45 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 30 Jan 2015 18:08:45 +0800
Subject: [Twisted-Python] Twisted 15.0 Release Announcement
Message-ID: <1BBEE365-2502-4B0E-B3D1-E619DCF56E19@atleastfornow.net>

Hi everyone!

On behalf of Twisted Matrix Laboratories, I am honoured to announce that Twisted 15.0.0 is *here*!

Highlights are:

- SSLv3 is disabled by default by endpoints created by `twisted.internet.endpoints.serverFromString` and `twisted.internet.endpoints.clientFromString`.
- inlineCallbacks now has introductory documentation, and now supports using the return statement with a value on Python 3.
- `twisted.web.client.Agent` now supports using UNIX sockets.
- `ProcessEndpoint` now has flow control, which makes it useful for many more protocols
- A whole bunch of bug fixes and other improvements, with 70+ closed tickets.

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The full details of what’s new in the release is contained in the NEWS file <https://raw.githubusercontent.com/twisted/twisted/releases/release-15.0.0-7335/NEWS>.

As usual, many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code and documentation, and all the people building great things with Twisted!

Twisted Regards,
HawkOwl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150130/768278e0/attachment.sig>

From psi29a at gmail.com  Fri Jan 30 03:34:01 2015
From: psi29a at gmail.com (bret curtis)
Date: Fri, 30 Jan 2015 11:34:01 +0100
Subject: [Twisted-Python] bringing TxMongo back from the brink!
In-Reply-To: <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>
References: <CA+LhZ9_PLfmbdY1YjcNeMgcdUKamk5YFn5h=Qx5TrbnCu1+w+g@mail.gmail.com>
 <CACKEAnW05FZ9UnstkP3koXKjcE-mRPkvx7bAu18ZVeZEZwpQxQ@mail.gmail.com>
 <BB0D1C28-6A7C-4422-9BD6-212DE744DF14@twistedmatrix.com>
Message-ID: <CA+LhZ99NMtQ3C+an-BCms_wB_tTTbzFWbXXF12aKPKMYVoqtPA@mail.gmail.com>

On Fri, Jan 30, 2015 at 4:19 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Jan 29, 2015, at 12:05 PM, Clayton Daley <clayton.daley at gmail.com>
> wrote:
>
> Unless Twisted loves the idea of hosting this, it might make more sense to
> start a TxCommons (like https://github.com/ZF-Commons). This shifts the
> emphasis away from the Twisted and onto the Commons, including:
>
>    - The lower (or lack of) "core support" commitment.  The Commons can
>    still highlight "supported" projects (by the commons or outside
>    organizations), but it's more transparent about the status relative to core.
>    - A significantly lower participation/contribution barrier that isn't
>    interrelated with the politics (and justifiably high standards) of core.
>    - A central place to find Tx libraries that actively welcomes new
>    additions.
>       - My twisted-pyro and twisted-mandrill are so-so examples of what I
>       mean.  If they were a little more mature, it'd be better for someone to
>       find and improve these libraries than start over from scratch.
>       - More importantly, users would know that the project won't
>       fragment if I'm not proactively maintaining it. They can always become an
>       active participant in the Commons and move business along.  Obviously, I
>       relinquish that control if and when I contribute it (or the commons
>       establishes an official fork).
>
> Clayton Daley
>
>
> So, I don't mind the idea of Twisted hosting it for now, but you make a
> good point.  The Twisted org on Github is presently hosting quite a few
> things, with varying degrees of association with various subsets of the
> core developers.
>
> Since ldaptor already moved to this org, I think we should probably just
> move this as well, and then move things *out* later once we have
> established a Commons org and figured out how we want to administer it.
>
> BTW: any chance of renaming those TxPyro and TxMandrill? :)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

If ever the Twisted org on github feels a bit crowded, I think a break out
to something like TxCommons is a good idea.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150130/14ea2f28/attachment-0002.html>

From patryk at sciborek.com  Fri Jan 30 07:08:29 2015
From: patryk at sciborek.com (=?UTF-8?Q?Patryk_=C5=9Aciborek?=)
Date: Fri, 30 Jan 2015 15:08:29 +0100
Subject: [Twisted-Python] Unit testing, trail, inlineCallbacks,
 deferreds and mocking
In-Reply-To: <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>
References: <CAEHqL6evD0CWYv=922+t_GYWrbVgdUC6Yw7oDpGggkBzBQ-OeQ@mail.gmail.com>
 <CA+hid6EWEsQ3S2gwG9Vbvtxf_G0Hg6KJ9TddsFTM3BEr2TBXfw@mail.gmail.com>
Message-ID: <CAEHqL6ddnkTiv+1yAP5xg8ZZXnQwqtVofjdXptXCLpx7oy-5SA@mail.gmail.com>

Hi James,

Thank you for Your response, it was very helpful :) I hope you don't mind
if I use your testing.py in my project. I wrote tests for the
SessionCleaner class and they seems to be OK (
https://github.com/scibi/pyradacctsrv/blob/master/tests/test_cleaner.py).

I saw your post from July 2013 but that thread was more about docstrings
and checking return values of test methods than mocking and deferreds ;)

Kind regards,
Patryk

On Tue, Jan 27, 2015 at 3:48 PM, James Broadhead <jamesbroadhead at gmail.com>
wrote:

> Hey
>
> I raised a similar question a while ago:
> http://twistedmatrix.com/pipermail/twisted-python/2013-July/027241.html
>
> Since then, our approach has evolved into the below, which may be useful.
>
> https://github.com/jamesbroadhead/bttrtwisted/blob/master/bttrtwisted/testing.py
>
> Usage:
>   expected = Foo()
>   remote_result = Result()
>   thing = Thing()
>   thing.call_external_service = dmockfunc(remote_result)
>
>   d = thing.function_under_test(..)
>   d.addCallback(self.assertEqual, expected)
>   return d
>
> You can use the func_dict param to gen_nondeferred_mock to have it stand
> in-place-of an object
>
> As always with mocks, a little can be helpful, but if you find you're
> instantiating a lot of them, you may want to reconsider your approach.
>
> Feedback welcome!
> [ the repo is for experiments, so use with care ]
>
> James
>
> On 27 January 2015 at 13:00, Patryk Ściborek <patryk at sciborek.com> wrote:
>
>> Hi!
>>
>> I've just started a new project using Twisted and I want to write unit
>> tests since the beginning. Unfortunately I've got some trouble
>> understanding how should I do it. I read 'Test-driven development with
>> Twisted', read some articles on the web and searched on the mailing list
>> but I couldn't find anything which make it clear for me.
>>
>> I've got a class:
>>
>> class SessionCleaner(object):
>>     def __init__(self, session_db, interval=10):
>>         self.session_db = session_db
>>         self.lc = task.LoopingCall(self.check_old_sessions)
>>         self.lc.start(interval)
>>
>>     @defer.inlineCallbacks
>>     def check_old_sessions(self):
>>         log.msg('check_old_sessions()', logLevel=logging.DEBUG)
>>         try:
>>             old_sessions = yield self.session_db.get_old_sessions()
>>             for s in old_sessions:
>>                 yield self.session_db.process_stopped(s)
>>
>>         except txredisapi.ConnectionError as e:
>>             log.msg('check_old_sessions - connection error {}'
>>                     .format(e), logLevel=logging.WARNING)
>>
>> session_db is a object with methods which makes some calls to Redis.
>>
>> Testing if __init__ works correctly is easy - I can mock task.LoopingCall
>> and check if it was called with correct attributes.
>>
>> I've got trouble testing check_old_sessions. Since I'm writing unit tests
>> I don't want to call real session_db methods and make real Redis queries.
>> I'd like to mock them and test just few things:
>> - is the method get_old_sessions called?
>> - is the method process_stopped called N times with the arguments
>> returned by mocked get_old_sessions?
>> - is txredisapi.ConnectionError handled correctly?
>>
>> So is there any "right" way of mocking functions which returns deferreds?
>> Or maybe I should test this method differently?
>>
>> Best regards,
>> Patryk
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150130/2f6a8b36/attachment-0002.html>

From dynamicgl at gmail.com  Sat Jan 31 11:37:22 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 1 Feb 2015 02:37:22 +0800
Subject: [Twisted-Python] txmongo vs. pymongo + callInThread
In-Reply-To: <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
References: <CACKEAnUqS8B6zkPRBMYG4+_NVcig1qkXZPt-xRpDXBEm1HyhcA@mail.gmail.com>
 <CABkOF6Q-A_96kzX=DyLhWn1HF9CBiRu+BrkuuVviCozAxL7H7g@mail.gmail.com>
 <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
Message-ID: <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>

On Tue, Dec 30, 2014 at 5:50 PM, bret curtis <psi29a at gmail.com> wrote:

> On Tue, Dec 23, 2014 at 7:51 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
>>
>>
>> On Mon, Dec 22, 2014 at 5:05 AM, Clayton Daley <clayton.daley at gmail.com>
>> wrote:
>>
>>> Are there any major disadvantages of using pymongo with callInThread
>>> instead of txmongo?  I'd like to take advantage of some newer features in
>>> pymongo (unfortunately not available in txmongo) and it's certainly easier
>>> to maintain feature parity using callInThread.
>>>
>>> Clayton Daley
>>>
>>>
>>>
>> Hi Clayton
>>
>>     Txmongo has been inactive for a while so I suggest using pymongo &
>> twisted thread pool. I have been using them for a couple of years and they
>> work quite well.
>>
>> Regards
>>
>> gelin yan
>>
>
> Hey guys,
>
> just wanted to drop in and say that txmongo isn't dead. We (Amplidata)
> just recently sent a merge request to add SSL (authentication/encryption)
> support[1] that Alexandre will review after the holidays. While Alexandre
> isn't currently developing txmongo, he does review and accept pull
> requests. So while the community is small, it is still alive.
>
> Amplidata (the company I work for) has also expressed an interest in
> getting txmongo up to speed with PyMongo, similar in how we got Ldaptor and
> its myriad forks to converge and development happening again.[2][3]
>
> Is there any interest in seeing txmongo be developed further? What are
> some of the pain points that people would rather defer to thread PyMongo
> instead of using async txmongo?
>
> Cheers,
> Bret
>
>
>
 Hi Bret

   I am glad to know txmongo is still here. I used it several times a few
years ago and was impressed by its speed (twice faster than pymongo &
thread pool).

     I hope txmongo can support the latest GEO index & replication.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150201/00aa8494/attachment-0002.html>

From psi29a at gmail.com  Sat Jan 31 18:01:31 2015
From: psi29a at gmail.com (bret curtis)
Date: Sun, 1 Feb 2015 02:01:31 +0100
Subject: [Twisted-Python] txmongo vs. pymongo + callInThread
In-Reply-To: <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>
References: <CACKEAnUqS8B6zkPRBMYG4+_NVcig1qkXZPt-xRpDXBEm1HyhcA@mail.gmail.com>
 <CABkOF6Q-A_96kzX=DyLhWn1HF9CBiRu+BrkuuVviCozAxL7H7g@mail.gmail.com>
 <CA+LhZ9-Zx5yd1wnxOdXjvNatC=107=Y=SW_HzV3zpBQcpxV2jQ@mail.gmail.com>
 <CABkOF6QxB+xPe8YLeryG-4zfaUxSFDZZRMO9kTOaCqCmmKp3tg@mail.gmail.com>
Message-ID: <CA+LhZ9_y053+wPeDaB5EyYu2kpyLaTw0ruP_2F-1qEh56xJmFA@mail.gmail.com>

On Sat, Jan 31, 2015 at 7:37 PM, Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
> On Tue, Dec 30, 2014 at 5:50 PM, bret curtis <psi29a at gmail.com> wrote:
>
>> On Tue, Dec 23, 2014 at 7:51 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>>
>>>
>>>
>>> On Mon, Dec 22, 2014 at 5:05 AM, Clayton Daley <clayton.daley at gmail.com>
>>> wrote:
>>>
>>>> Are there any major disadvantages of using pymongo with callInThread
>>>> instead of txmongo?  I'd like to take advantage of some newer features in
>>>> pymongo (unfortunately not available in txmongo) and it's certainly easier
>>>> to maintain feature parity using callInThread.
>>>>
>>>> Clayton Daley
>>>>
>>>>
>>>>
>>> Hi Clayton
>>>
>>>     Txmongo has been inactive for a while so I suggest using pymongo &
>>> twisted thread pool. I have been using them for a couple of years and they
>>> work quite well.
>>>
>>> Regards
>>>
>>> gelin yan
>>>
>>
>> Hey guys,
>>
>> just wanted to drop in and say that txmongo isn't dead. We (Amplidata)
>> just recently sent a merge request to add SSL (authentication/encryption)
>> support[1] that Alexandre will review after the holidays. While Alexandre
>> isn't currently developing txmongo, he does review and accept pull
>> requests. So while the community is small, it is still alive.
>>
>> Amplidata (the company I work for) has also expressed an interest in
>> getting txmongo up to speed with PyMongo, similar in how we got Ldaptor and
>> its myriad forks to converge and development happening again.[2][3]
>>
>> Is there any interest in seeing txmongo be developed further? What are
>> some of the pain points that people would rather defer to thread PyMongo
>> instead of using async txmongo?
>>
>> Cheers,
>> Bret
>>
>>
>>
>  Hi Bret
>
>    I am glad to know txmongo is still here. I used it several times a few
> years ago and was impressed by its speed (twice faster than pymongo &
> thread pool).
>
>      I hope txmongo can support the latest GEO index & replication.
>
> Regards
>
> gelin yan
>
>
Hello Gelin,

You should check out our other thread about getting TxMongo moved into
Twisted's github org.
https://twistedmatrix.com/pipermail/twisted-python/2015-January/029144.html

There is already some support for Geo and replication, but it could always
use more work. What is it specifically you would like to see, aside from
everything. ;)

https://github.com/fiorix/txmongo/blob/master/txmongo/filter.py
^--  Support for GEO2D and GEOHAYSTACK spatial indices were added in 2012.

When you specify your hosts in ConnectionPool, you can give it a full
mongodb URI that includes all your replication servers, even with SSL
support. It is smart enough to cycle through until it finds a master to
continue operations.

I'm still trying to a compile a list of pain points that people have that
can be addressed. The more specific, the better.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150201/87cd3256/attachment-0002.html>

