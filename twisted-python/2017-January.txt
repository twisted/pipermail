From trac at twistedmatrix.com  Sun Jan  1 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Jan 2017 07:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1483254320.25.3952957963885408153@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170101/962dc06e/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan  2 05:52:00 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 07:52:00 -0500
Subject: [Twisted-Python] AWS Auth v4 for Twisted?
In-Reply-To: <CAMcKhMTc=tOS13vG84OsptHhprP532xnJBqiEb6HEniVCPu75g@mail.gmail.com>
References: <CAEeXt4N5O=yfcSPqVPcxwaadLi4L4tCUc1d6TXkRxadKmpGNnA@mail.gmail.com>
 <CA+TSurANEugvPy7+WGa=nDYB=S9MoDgkRjaaSUC6iLiGhGy4PA@mail.gmail.com>
 <CAPxhEGdBGid62OM4_xLfjEDUfEWbhP7yBn=RCkmm24AtnJzE8w@mail.gmail.com>
 <CAMcKhMTc=tOS13vG84OsptHhprP532xnJBqiEb6HEniVCPu75g@mail.gmail.com>
Message-ID: <CAEeXt4MaOT=AW-tMiVe6ZjiDwycSHpEnUsbKLfq5dfs9NUmu3A@mail.gmail.com>

On Thu, Dec 29, 2016 at 8:55 PM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Fri, 30 Dec 2016 at 02:30 Steve Morin <steve at stevemorin.com> wrote:
>
>> Mark,
>>   Did you get confirmation from your work?
>>
>
> It seems like he did; see https://github.com/twisted/txaws/pull/16 for
> more details.
>
>
Now merged!  Thanks Mark.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170102/31302174/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan  2 05:57:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 07:57:25 -0500
Subject: [Twisted-Python] tx github announcements in #twisted-dev
Message-ID: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>

How do folks feel about this?  Good idea or not?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170102/87dd4822/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan  2 07:10:46 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 09:10:46 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
Message-ID: <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>

On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm> wrote:
> >
> > Hi all
> >
> > I couldn't find Twisted-specific group, so posting here.
> >
> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it
> for my apps and got an error.
> >
> > ...
> >
> > The errors comes down to this: twistd script does not add current
> working directory to python path (or removes it, I don't know what exactly
> happens), so it fails to import any packages/modules from it. The issue
> does not appear in previous version (Twisted 16.3.2).
> >
> > Any ideas what caused it?
>
> Yes -- we moved to using setuptools console scripts, and these console
> scripts don't add "." to the PYTHONPATH. We realised this in prerelease but
> decided against fixing it, as it adding the current working dir to the PATH
> has lead to a lot of  subtle bugs in the past and this is a good chance to
> make a break from them.
>
> So, in short, this is expected behaviour -- we generally want people to be
> running twistd, trial, etc on *installed* Python packages -- testing or
> running from checkouts often hides many bugs about what is or isn't
> included in the installed package by accident. If you rely on this
> behaviour, though, set the PYTHONPATH environment variable to "." -- e.g.
> `env PYTHONPATH=. twistd -n myplugin`.
>
>
FWIW, as a user, it would have been nice to have a NEWS entry for this.  It
would have been easier to discover there than searching through the mail
archives.

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170102/e8cb6909/attachment.html>

From hawkowl at atleastfornow.net  Mon Jan  2 13:11:31 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 3 Jan 2017 07:11:31 +1100
Subject: [Twisted-Python] tx github announcements in #twisted-dev
In-Reply-To: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>
References: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>
Message-ID: <E58D7EA2-4AF0-4D97-B385-65D04FE38321@atleastfornow.net>

On 2 Jan 2017, at 23:57, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> How do folks feel about this?  Good idea or not?
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

We have some already (PRs opened?) so, I say go for it, if there's useful information in there. We can always turn it off again.

- Amber

From termim at gmail.com  Tue Jan  3 08:58:43 2017
From: termim at gmail.com (Terekhov, Mikhail)
Date: Tue, 3 Jan 2017 10:58:43 -0500
Subject: [Twisted-Python] Twisted 16.7.0rc1 Release Candidate
	Announcement
In-Reply-To: <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
References: <E3DC7732-2B53-4F79-B108-CD8029AB3975@atleastfornow.net>
 <2da9e7e0-4acf-d9af-9039-72533d3bfb24@egh.com>
 <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
Message-ID: <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>

On 12/29/16 08:27, Glyph Lefkowitz wrote:

>
>> On Dec 28, 2016, at 15:20, John Santos <JOHN at egh.com 
>> <mailto:JOHN at egh.com>> wrote:
>>
>> Seems to require a new Python module, Automat.
>
> Good catch, that probably should have been announced at least a little :).
>
>> (Not mentioned in the NEWS file, INSTALL, etc.)
>
> Despite the fact that it would have been good to mention this 
> particular dependency because its adoption is a new architectural 
> direction for Twisted, in /general/ we're actually planning to do less 
> communication of dependencies in this way.  Right now, we have 
> redundant listing of dependencies in a few places, but in the future, 
> setup.py (or more specifically, "packaging metadata") will be the one, 
> authoritative place that such things are listed.
>
>> I found Automat 0.3.0 (with Glyph's fingerprints on it) at PyPI, but 
>> it only exists in .whl format.
>
> Although you probably /should/ just use the wheel, the fact that there 
> was /only/ a wheel was an oversight.  I've uploaded an sdist and 
> pushed a corresponding tag (after making sure that the source files 
> all matched, of course).
>
It is probably an off topic but it would not hurt to add a more verbose 
description and a link to the sources on PyPI for the Automat package 
especially if it is so important for Twisted.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170103/434db81f/attachment.html>

From glyph at twistedmatrix.com  Tue Jan  3 13:17:33 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jan 2017 12:17:33 -0800
Subject: [Twisted-Python] Twisted 16.7.0rc1 Release Candidate
	Announcement
In-Reply-To: <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>
References: <E3DC7732-2B53-4F79-B108-CD8029AB3975@atleastfornow.net>
 <2da9e7e0-4acf-d9af-9039-72533d3bfb24@egh.com>
 <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
 <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>
Message-ID: <B521C118-7AB4-4AF3-AB23-30A64CA4506A@twistedmatrix.com>


> On Jan 3, 2017, at 7:58 AM, Terekhov, Mikhail <termim at gmail.com> wrote:
> 
> On 12/29/16 08:27, Glyph Lefkowitz wrote:
>> 
>>> On Dec 28, 2016, at 15:20, John Santos <JOHN at egh.com <mailto:JOHN at egh.com>> wrote:
>>> 
>>> Seems to require a new Python module, Automat.
>> 
>> Good catch, that probably should have been announced at least a little :).
>> 
>>> (Not mentioned in the NEWS file, INSTALL, etc.)
>> 
>> Despite the fact that it would have been good to mention this particular dependency because its adoption is a new architectural direction for Twisted, in general we're           actually planning to do less communication of dependencies in this way.  Right now, we have redundant listing of dependencies in a few places, but in the future, setup.py (or more specifically, "packaging metadata") will be the one, authoritative place that such things are listed.
>> 
>>> I found Automat 0.3.0 (with Glyph's fingerprints on it) at PyPI, but it only exists in .whl format.
>> 
>> Although you probably should just use the wheel, the fact that there was only a wheel was an oversight.  I've uploaded an sdist and pushed a corresponding tag (after making sure that the source files all matched, of course).
>> 
> It is probably an off topic but it would not hurt to add a more verbose description and a link to the sources on PyPI for the Automat package especially if it is so important for Twisted.

Please feel free to submit a PR to automat to do this.  There's lots of descriptive material here: <https://github.com/glyph/automat/blob/master/README.md <https://github.com/glyph/automat/blob/master/README.md>> which you could use to update the PyPI metadata part.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170103/ac20b509/attachment.html>

From glyph at twistedmatrix.com  Tue Jan  3 13:20:04 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jan 2017 12:20:04 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
Message-ID: <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>


> On Jan 2, 2017, at 6:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm <mailto:yuri_abzyanov at fastmail.fm>> wrote:
> >
> > Hi all
> >
> > I couldn't find Twisted-specific group, so posting here.
> >
> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it for my apps and got an error.
> >
> > ...
> >
> > The errors comes down to this: twistd script does not add current working directory to python path (or removes it, I don't know what exactly happens), so it fails to import any packages/modules from it. The issue does not appear in previous version (Twisted 16.3.2).
> >
> > Any ideas what caused it?
> 
> Yes -- we moved to using setuptools console scripts, and these console scripts don't add "." to the PYTHONPATH. We realised this in prerelease but decided against fixing it, as it adding the current working dir to the PATH has lead to a lot of  subtle bugs in the past and this is a good chance to make a break from them.
> 
> So, in short, this is expected behaviour -- we generally want people to be running twistd, trial, etc on *installed* Python packages -- testing or running from checkouts often hides many bugs about what is or isn't included in the installed package by accident. If you rely on this behaviour, though, set the PYTHONPATH environment variable to "." -- e.g. `env PYTHONPATH=. twistd -n myplugin`.
> 
> 
> FWIW, as a user, it would have been nice to have a NEWS entry for this.  It would have been easier to discover there than searching through the mail archives.

Yes, there definitely should have been.  We only realized the implications of the change after the fact, and only after some discussion decided that it was in fact desirable and should not be rolled back in a patch release.

We don't have a process for fixing NEWS files right now, and given that releases are immutable, I wonder if there's any way we could.  So, in the rare case that we mess up this way in the future, what (aside from the mailing list) would be a good communication mechanism to users?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170103/e24dad14/attachment.html>

From hawkowl at atleastfornow.net  Tue Jan  3 13:22:01 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 4 Jan 2017 07:22:01 +1100
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
Message-ID: <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>


> On 4 Jan 2017, at 07:20, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Jan 2, 2017, at 6:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
>> 
>> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm <mailto:yuri_abzyanov at fastmail.fm>> wrote:
>> >
>> > Hi all
>> >
>> > I couldn't find Twisted-specific group, so posting here.
>> >
>> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it for my apps and got an error.
>> >
>> > ...
>> >
>> > The errors comes down to this: twistd script does not add current working directory to python path (or removes it, I don't know what exactly happens), so it fails to import any packages/modules from it. The issue does not appear in previous version (Twisted 16.3.2).
>> >
>> > Any ideas what caused it?
>> 
>> Yes -- we moved to using setuptools console scripts, and these console scripts don't add "." to the PYTHONPATH. We realised this in prerelease but decided against fixing it, as it adding the current working dir to the PATH has lead to a lot of  subtle bugs in the past and this is a good chance to make a break from them.
>> 
>> So, in short, this is expected behaviour -- we generally want people to be running twistd, trial, etc on *installed* Python packages -- testing or running from checkouts often hides many bugs about what is or isn't included in the installed package by accident. If you rely on this behaviour, though, set the PYTHONPATH environment variable to "." -- e.g. `env PYTHONPATH=. twistd -n myplugin`.
>> 
>> 
>> FWIW, as a user, it would have been nice to have a NEWS entry for this.  It would have been easier to discover there than searching through the mail archives.
> 
> Yes, there definitely should have been.  We only realized the implications of the change after the fact, and only after some discussion decided that it was in fact desirable and should not be rolled back in a patch release.
> 
> We don't have a process for fixing NEWS files right now, and given that releases are immutable, I wonder if there's any way we could.  So, in the rare case that we mess up this way in the future, what (aside from the mailing list) would be a good communication mechanism to users?
> 
> -glyph

We have, in the past, fixed up historic NEWS files in later releases (e.g. the one which removed 2.6 support). We could always roll these changes into a post1, but, that seems like a lot of effort. Maybe we could put errata on the blog?

- Amber
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170104/ba857d93/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Jan  3 13:24:03 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 3 Jan 2017 15:24:03 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
Message-ID: <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>

On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
>
> We have, in the past, fixed up historic NEWS files in later releases (e.g.
> the one which removed 2.6 support). We could always roll these changes into
> a post1, but, that seems like a lot of effort. Maybe we could put errata on
> the blog?
>
>
With a link to the blog post in the NEWS file?  Cold checking blog was
below "read git history and try to correlate with the issue tracker" on my
list of how to track down this change.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170103/289b3045/attachment.html>

From commercials24 at yahoo.de  Fri Jan  6 12:03:47 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Fri, 06 Jan 2017 20:03:47 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not adapt',
 '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
Message-ID: <1483729427.23369.21.camel@yahoo.de>

hi,


sending a simple post request with a body (cookies) results in a error
here.

im using python 3.x with the latest twisted and treq installed via pip
in a virtualenv.


the code gets a chatroom login page, extracts two values, gets the
cookies and logs a user into the chat. (incomplete)
thing is for being logged in i need to send my current phpsessionid in
the post request...



glyph (without seeing the the code or backtrace) suggested that:
"I think the issue might be that it doesn't support bytes() on py3,
it's registered against str() or something"


here is my code:

from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
????print("result:", result)

def myError(failure):
????print("failure:", failure)

def lala():
????#d = getLoginPage()
????d = login()
????d.addCallback(myPrint)
????d.addErrback(myError)



if __name__ == '__main__':
????lala()
????reactor.run()






from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
????print("result:", result)

def myError(failure):
????print("failure:", failure)

def lala():
????#d = getLoginPage()
????d = login()
????d.addCallback(myPrint)
????d.addErrback(myError)



if __name__ == '__main__':
????lala()
????reactor.run()
(venv) julius at t560:~/code/twisted/webchat-client$ cat myhttp.py?
from bs4 import BeautifulSoup
import random
from twisted.internet import reactor, defer
from twisted.web.client import getPage
import treq
import urllib




url = b'http://chatroom2000.de'
useragent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36".encode('utf-8')

cookies = {}????


@defer.inlineCallbacks
def getLoginPage():
????global cookies?
????response = yield treq.get(url)
????final_page = yield response.content()
????cookies = response.cookies()
????defer.returnValue(final_page)



@defer.inlineCallbacks
def login():
????response = yield getLoginPage()
????
????print(cookies)
????print("rsponse:", response)
????soup = BeautifulSoup(response, "lxml")
????hmac = soup.input["name"]
????key = soup.input["value"]
????print("hmac:key", hmac,key)
????username_list = ["Demetrius", "Tyrone", "Marshawn"]
????username = random.choice(username_list)
????body = urllib.parse.urlencode({hmac: key,
????????'username': username, 'pw':'', 'gender':'m', 'aaaa':''})


????target_url = url + b"/?CheckUserName"

????
????headers = {'Content-Type': 'application/x-www-form-
urlencoded','cache-control': ['no-store, no-cache, must-revalidate,
pre-check=0, post-check=0, max-age=0']}
????
????import json?
????try:
????????print("cookies2:", cookies)????
????????somepage = yield treq.post(target_url, json.dumps({hmac: key,
"username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
headers=headers, cookies=cookies )
????except Exception as err:
????????print("err:", err)
????response = yield somepage.content()
????defer.returnValue(response)



if __name__ == '__main__':
????#url = 'http://chatroom2000.de'
????getPage(url)

????reactor.run()




and the error:
cookies2: <RequestsCookieJar[<Cookie
PHPSESSID=jevr00m25j0clfv6aibbgbro26 for chatroom2000.de/>, <Cookie
db1_cookie_test=1483729313 for chatroom2000.de/>]>
err: ('Could not adapt', '{"pw": "", "aaaa": "", "username":
"Demetrius", "cd5a6e4774acfd7e090467c9ed67f7e6": "1483729313",
"gender": "m"}', <InterfaceClass twisted.web.iweb.IBodyProducer>)
failure: [Failure instance: Traceback: <class 'UnboundLocalError'>:
local variable 'somepage' referenced before assignment
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:457:callback
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:565:_startRunCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:651:_runCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1355:gotResult
--- <exception caught here> ---
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1299:_inlineCallbacks
/home/julius/code/twisted/webchat-client/myhttp.py:54:login





i followd some files in the traceback, but got nowhere :(


From commercials24 at yahoo.de  Fri Jan  6 12:03:39 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Fri, 06 Jan 2017 20:03:39 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not adapt',
 '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
Message-ID: <1483729419.23369.18.camel@yahoo.de>

hi,


sending a simple post request with a body (cookies) results in a error
here.

im using python 3.x with the latest twisted and treq installed via pip
in a virtualenv.


the code gets a chatroom login page, extracts two values, gets the
cookies and logs a user into the chat. (incomplete)
thing is for being logged in i need to send my current phpsessionid in
the post request...



glyph (without seeing the the code or backtrace) suggested that:
"I think the issue might be that it doesn't support bytes() on py3,
it's registered against str() or something"


here is my code:

from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
????print("result:", result)

def myError(failure):
????print("failure:", failure)

def lala():
????#d = getLoginPage()
????d = login()
????d.addCallback(myPrint)
????d.addErrback(myError)



if __name__ == '__main__':
????lala()
????reactor.run()






from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
????print("result:", result)

def myError(failure):
????print("failure:", failure)

def lala():
????#d = getLoginPage()
????d = login()
????d.addCallback(myPrint)
????d.addErrback(myError)



if __name__ == '__main__':
????lala()
????reactor.run()
(venv) julius at t560:~/code/twisted/webchat-client$ cat myhttp.py?
from bs4 import BeautifulSoup
import random
from twisted.internet import reactor, defer
from twisted.web.client import getPage
import treq
import urllib




url = b'http://chatroom2000.de'
useragent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36".encode('utf-8')

cookies = {}????


@defer.inlineCallbacks
def getLoginPage():
????global cookies?
????response = yield treq.get(url)
????final_page = yield response.content()
????cookies = response.cookies()
????defer.returnValue(final_page)



@defer.inlineCallbacks
def login():
????response = yield getLoginPage()
????
????print(cookies)
????print("rsponse:", response)
????soup = BeautifulSoup(response, "lxml")
????hmac = soup.input["name"]
????key = soup.input["value"]
????print("hmac:key", hmac,key)
????username_list = ["Demetrius", "Tyrone", "Marshawn"]
????username = random.choice(username_list)
????body = urllib.parse.urlencode({hmac: key,
????????'username': username, 'pw':'', 'gender':'m', 'aaaa':''})


????target_url = url + b"/?CheckUserName"

????
????headers = {'Content-Type': 'application/x-www-form-
urlencoded','cache-control': ['no-store, no-cache, must-revalidate,
pre-check=0, post-check=0, max-age=0']}
????
????import json?
????try:
????????print("cookies2:", cookies)????
????????somepage = yield treq.post(target_url, json.dumps({hmac: key,
"username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
headers=headers, cookies=cookies )
????except Exception as err:
????????print("err:", err)
????response = yield somepage.content()
????defer.returnValue(response)



if __name__ == '__main__':
????#url = 'http://chatroom2000.de'
????getPage(url)

????reactor.run()




and the error:
cookies2: <RequestsCookieJar[<Cookie
PHPSESSID=jevr00m25j0clfv6aibbgbro26 for chatroom2000.de/>, <Cookie
db1_cookie_test=1483729313 for chatroom2000.de/>]>
err: ('Could not adapt', '{"pw": "", "aaaa": "", "username":
"Demetrius", "cd5a6e4774acfd7e090467c9ed67f7e6": "1483729313",
"gender": "m"}', <InterfaceClass twisted.web.iweb.IBodyProducer>)
failure: [Failure instance: Traceback: <class 'UnboundLocalError'>:
local variable 'somepage' referenced before assignment
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:457:callback
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:565:_startRunCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:651:_runCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1355:gotResult
--- <exception caught here> ---
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1299:_inlineCallbacks
/home/julius/code/twisted/webchat-client/myhttp.py:54:login





i followd some files in the traceback, but got nowhere :(


From mithrandi at mithrandi.net  Fri Jan  6 16:36:24 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 06 Jan 2017 23:36:24 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483729427.23369.21.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
Message-ID: <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>

On Fri, 6 Jan 2017 at 21:21 steven meiers <commercials24 at yahoo.de> wrote:

> glyph (without seeing the the code or backtrace) suggested that:
> "I think the issue might be that it doesn't support bytes() on py3,
> it's registered against str() or something"
>

Actually, the problem is the reverse of this; only bytes is supported, but
you're passing str (unicode) in.


>         somepage = yield treq.post(target_url, json.dumps({hmac: key,
> "username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
>

json.dumps returns str (ie. unicode) on py3; throwing in a .encode('utf-8')
here is probably what you want.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170106/8e155e48/attachment.html>

From glyph at twistedmatrix.com  Fri Jan  6 18:22:37 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jan 2017 17:22:37 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
Message-ID: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>

1
> On Jan 6, 2017, at 3:36 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Fri, 6 Jan 2017 at 21:21 steven meiers <commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
> glyph (without seeing the the code or backtrace) suggested that:
> "I think the issue might be that it doesn't support bytes() on py3,
> it's registered against str() or something"
> 
> Actually, the problem is the reverse of this; only bytes is supported, but you're passing str (unicode) in. 

Aah, thanks for pointing this out.

>         somepage = yield treq.post(target_url, json.dumps({hmac: key,
> "username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
> 
> json.dumps returns str (ie. unicode) on py3; throwing in a .encode('utf-8') here is probably what you want.


Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.

Even if we do this though - is there any way to convince json.dumps to behave consistently between 2/3 for the purposes of examples?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170106/5cc700ab/attachment.html>

From mithrandi at mithrandi.net  Fri Jan  6 19:14:14 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 07 Jan 2017 02:14:14 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
Message-ID: <CAMcKhMSm64FzvhmmWoBrDva4pGoby3xPS1qQTT6iPC1tBsnAnQ@mail.gmail.com>

On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> Even if we do this though - is there any way to convince json.dumps to
> behave consistently between 2/3 for the purposes of examples?
>

As far as I know, the only way to handle this is with an if PY3 or if
isinstance(?). I don't know of a way to make json.dumps on Python 2
consistently return unicode, and I don't know of a way to make json.dumps
on Python 3 return bytes.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170107/063a59a2/attachment-0001.html>

From mithrandi at mithrandi.net  Fri Jan  6 19:18:16 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 07 Jan 2017 02:18:16 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
Message-ID: <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>

On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> Maybe we should support unicode for the body as well.  We can set the
> charset in the mime-type and everything so that it will be properly
> intelligible by the server, which doesn't happen if the user manually
> encodes like this.
>

Oh, forgot to comment on this point; in the specific case of JSON, it isn't
necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a
pretty good idea. However, I'm not sure if it's possible to modify
Content-Type in a generic fashion to make this sort of thing work; for
example, "Content-Type: application/octet-stream; charset=UTF-8" is
nonsense. I'll defer to some HTTP experts here ;)

[1] https://tools.ietf.org/html/rfc7159#section-8.1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170107/1c4d1e7d/attachment.html>

From cory at lukasa.co.uk  Sat Jan  7 05:00:06 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Sat, 7 Jan 2017 12:00:06 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
Message-ID: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>


> On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.
> 
> Oh, forgot to comment on this point; in the specific case of JSON, it isn't necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a pretty good idea. However, I'm not sure if it's possible to modify Content-Type in a generic fashion to make this sort of thing work; for example, "Content-Type: application/octet-stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts here ;)

This is really not simple, for the reason that many MIME types do not define a charset extension. In the case of JSON, it?s not just not necessary to specify UTF-8 in Content-Type, but the standard explicitly does not define charset for the JSON content type[0]:

> Note:  No "charset" parameter is defined for this registration. Adding one really has no effect on compliant recipients.

Strictly a completely compliant implementation would not emit charset details for content types that have no charset registration. Such a thing is pretty tricky to do. Knowing that, it?s probably best to YOLO your way though, or forbid unicode in bodies.

Cory

[0]: https://tools.ietf.org/html/rfc7159#section-11

From commercials24 at yahoo.de  Sat Jan  7 09:21:00 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Sat, 07 Jan 2017 17:21:00 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
Message-ID: <1483806060.23369.23.camel@yahoo.de>

thanks for the quick replys guys, you were right. a .encode('utf-8')
helps.

actually the json.dumps part in the code is wrong.
it has to be:?
?somepage = yield treq.post(target_url, body.encode('utf-8'),
headers=headers, cookies=cookies )



Am Samstag, den 07.01.2017, 12:00 +0000 schrieb Cory Benfield:
> > On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net
> > > wrote:
> > 
> > On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.co
> > m> wrote:
> > 
> > Maybe we should support unicode for the body as well.??We can set
> > the charset in the mime-type and everything so that it will be
> > properly intelligible by the server, which doesn't happen if the
> > user manually encodes like this.
> > 
> > Oh, forgot to comment on this point; in the specific case of JSON,
> > it isn't necessary to specify UTF-8 in Content-Type[1], but for
> > HTML or XML it's a pretty good idea. However, I'm not sure if it's
> > possible to modify Content-Type in a generic fashion to make this
> > sort of thing work; for example, "Content-Type: application/octet-
> > stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts
> > here ;)
> 
> This is really not simple, for the reason that many MIME types do not
> define a charset extension. In the case of JSON, it?s not just not
> necessary to specify UTF-8 in Content-Type, but the standard
> explicitly does not define charset for the JSON content type[0]:
> 
> > Note:??No "charset" parameter is defined for this registration.
> > Adding one really has no effect on compliant recipients.
> 
> Strictly a completely compliant implementation would not emit charset
> details for content types that have no charset registration. Such a
> thing is pretty tricky to do. Knowing that, it?s probably best to
> YOLO your way though, or forbid unicode in bodies.
> 
> Cory
> 
> [0]: https://tools.ietf.org/html/rfc7159#section-11
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sat Jan  7 16:57:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jan 2017 15:57:15 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
Message-ID: <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>


> On Jan 7, 2017, at 4:00 AM, Cory Benfield <cory at lukasa.co.uk> wrote:
> 
> 
>> On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
>> 
>> On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>> Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.
>> 
>> Oh, forgot to comment on this point; in the specific case of JSON, it isn't necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a pretty good idea. However, I'm not sure if it's possible to modify Content-Type in a generic fashion to make this sort of thing work; for example, "Content-Type: application/octet-stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts here ;)
> 
> This is really not simple, for the reason that many MIME types do not define a charset extension. In the case of JSON, it?s not just not necessary to specify UTF-8 in Content-Type, but the standard explicitly does not define charset for the JSON content type[0]:

I see you your standards pedantry, and raise you!

MIME defines content-type to always have a charset:

https://tools.ietf.org/html/rfc1521#section-4 <https://tools.ietf.org/html/rfc1521#section-4>

>>> Among the defined parameters is a "charset" parameter by which the character set used in the body may be declared.

and from the spec you're citing,

>>> Adding one really has no effect on compliant recipients


Given that we'd always choose utf-8 anyway it would be fine.

>> Note:  No "charset" parameter is defined for this registration. Adding one really has no effect on compliant recipients.
> 
> Strictly a completely compliant implementation would not emit charset details for content types that have no charset registration. Such a thing is pretty tricky to do. Knowing that, it?s probably best to YOLO your way though, or forbid unicode in bodies.

A bigger part of the problem here is that treq has no way of knowing that the characters you're sending are JSON at all, let alone what encoding you want them in.  So if we actually want to do MIME stuff, we'd probably want to have treq be the layer to call treq.dumps on the dict anyway, so that it knows what it's dealing with.  Automatic treatment of unicode would likely set the type to text/plain;charset=utf8.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170107/f9802b3d/attachment.html>

From glyph at twistedmatrix.com  Sat Jan  7 16:57:34 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jan 2017 15:57:34 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483806060.23369.23.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
 <1483806060.23369.23.camel@yahoo.de>
Message-ID: <C6996AB3-2EA7-4B4B-BA06-8E1C3FE73B14@twistedmatrix.com>


> On Jan 7, 2017, at 8:21 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> thanks for the quick replys guys, you were right. a .encode('utf-8')
> helps.

Glad you were able to get it working!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170107/d92697a2/attachment.html>

From markrwilliams at gmail.com  Sat Jan  7 23:44:32 2017
From: markrwilliams at gmail.com (Mark Williams)
Date: Sat, 7 Jan 2017 22:44:32 -0800
Subject: [Twisted-Python] Streaming Requests
Message-ID: <20170108064432.fscacjstbglfoisz@hammal>

* What?
  A new year means renewed ambition.  So let's talk about receiving
  streaming requests!

* Why?
  Twisted's HTTP server implementation does not allow application code
  to interact with a request until its body has been entirely
  received.  It also doesn't allow incremental access to the request's
  body as it arrives.  This shortcoming has been an issue for a while;
  see http://twistedmatrix.com/trac/ticket/288

  Some of the discussion in #288 focuses on twisted.web.server and
  twisted.web.resource.  The approach I'll propose in this email will
  not.  There are two reasons for this.

  The first: I want twisted.web.proxy.Proxy to support the CONNECT
  HTTP method.  That requires that Request.process be called before
  any part of the body has been written by the client.  I'd also like
  to write proxies that connected the incoming request as an
  IPushProducer to an outgoing one as an IConsumer.  It just so
  happens that Proxy inherits directly from HTTPChannel and doesn't
  touch any of twisted.web.server.

  The second: the consensus after some discussion on IRC in
  #twisted-dev seems to be that we have to fix HTTPChannel first
  anyway, and that progress there can be made entirely in Twisted's
  private API.  Once we have some kind of Request-like thing that
  HTTPChannel can begin processing before the body has arrived, we can
  work out how to integrate it in twisted.web.server and and
  twisted.web.resource.

  In other words, we can make this change incrementally and
  backwards-compatibly, and get a better Proxy implementation out of
  it, too.

* Quickly: How?
  1. Define the Request interface HTTPChannel currently uses.  It will
     be private.  Call it _IDeprecatedHTTPChannelToRequestInterface
     because requests should eventually always be streaming.  There's
     a ticket here: https://twistedmatrix.com/trac/ticket/8981 and
     some code here:
     https://github.com/twisted/twisted/compare/twisted:88a7194...markrwilliams:ed19197
  2. Define a new streaming Request interface that HTTPChannel knows
     how to use.  It will be private.  Call it
     _IHTTPChannelToStreamingRequest.  It won't have a .content, but
     it will have a way to specify a protocol that receives the body
     incrementally.  The interaction will probably look a lot like the
     patch in https://twistedmatrix.com/trac/ticket/8143.  It won't be
     HTTPChannel's default requestFactory.
  3. Use the private _IHTTPChannelToStreamingRequest implementation in
     a new proxy implementation that supports CONNECT and also
     producer/consumer streaming between the client and proxy
     requests.
  4. Take stock and figure out how to make things work for
     twisted.web.server.

* Slowly: How?
  (Note: attributions are for posterity only.  Any mistakes in
  reasoning are because I transcribed something badly.)

  Tom Prince explained that HTTPChannel doesn't provide Request with
  the HTTP method, URI, or version until the body has arrived.
  Request.requestReceived, the method that receives these, calls
  Request.process, which means without change this behavior we can't
  change Proxy or Site, both of which begin their work by overriding
  Request.process.  So we have to start with HTTPChannel.  (For what
  it's worth, http://twistedmatrix.com/trac/ticket/288#comment:31
  supports this approach.)

  He also noted that the Request interface with which HTTPChannel
  interacts is mostly not described by twisted.iweb.IRequest.  That
  means we can augment the ways HTTPChannel talks to Request-like
  things without breaking many public APIs.

  Glyph said we should make this existing interface explicit but
  private.  That will let HTTPChannel (eventually) use the interface
  provided by requestFactory to determine whether to treat the Request
  as streaming or not.

  We can then define a new interface, _IHTTPChannelToStreamingRequest,
  and a new implementation that's completely separate from
  twisted.web.http.Request.  Both will be private.

  Tom Prince pointed out that with these two in place, we can then
  write a replacement for twisted.web.proxy.Proxy that uses these
  private APIs to provide HTTPS support via HTTP's CONNECT method.
  HTTPChannel's default requestFactory will continue to be
  twisted.web.http.Request.  The new proxy code will use the new
  _IHTTPChannelToStreamingRequest implementation.

  Exarkun pointed out that this new proxy implementation can be
  completely separate and indeed deprecate the existing one, avoiding
  the need to make twisted.web.proxy.ProxyRequest.process work with
  both the new _IHTTPChannelToStreamingRequest process()
  implementation and the existing one.  I am hopeful this new
  implementation will also close
  https://twistedmatrix.com/trac/ticket/8961

  If all that works, we can then work out an IStreamingRequest
  interface that will enable Twisted's web server utilize the private
  streaming request APIs.

* Comments?
  Will this approach break a public API?  Does it sound terrible?  Or
  good?  Please share your thoughts!

Let's hope 2017 is the year of the streaming request!

-Mark


From trac at twistedmatrix.com  Sun Jan  8 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Jan 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1483859118.96.805841243758297018@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170108/590f718e/attachment-0001.html>

From mithrandi at mithrandi.net  Sun Jan  8 01:52:20 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 08 Jan 2017 08:52:20 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
 <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>
Message-ID: <CAMcKhMQjXHcFpAJUGTk-XKEbHy1DAtEueyoiCaKGko8HoXQyxg@mail.gmail.com>

On Sun, 8 Jan 2017 at 01:57 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> I see you your standards pedantry, and raise you!
>
> MIME defines content-type to always have a charset:
>
> *https://tools.ietf.org/html/rfc1521#section-4
> <https://tools.ietf.org/html/rfc1521#section-4>*
>

RFC 1521 is obsoleted by RFC 2045 which has more nuanced semantics:
https://tools.ietf.org/html/rfc2045#section-5

But actually, HTTP is not MIME; so we should be looking here instead:
https://tools.ietf.org/html/rfc7231#section-3.1.1.1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170108/99cf022f/attachment.html>

From exarkun at twistedmatrix.com  Sun Jan  8 17:34:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 8 Jan 2017 19:34:53 -0500
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <20170108064432.fscacjstbglfoisz@hammal>
References: <20170108064432.fscacjstbglfoisz@hammal>
Message-ID: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>

On Sun, Jan 8, 2017 at 1:44 AM, Mark Williams <markrwilliams at gmail.com>
wrote:

> * What?
>   A new year means renewed ambition.  So let's talk about receiving
>   streaming requests!
>
>
Hi Mark,

Thanks for tackling this long-standing issue!

I want to start off by responding to just one part of your email.  This is
actually the only part that looks potentially problematic to me so far,
which I take to be a good sign. :)


>   He also noted that the Request interface with which HTTPChannel
>   interacts is mostly not described by twisted.iweb.IRequest.  That
>   means we can augment the ways HTTPChannel talks to Request-like
>   things without breaking many public APIs.
>
>
How will this affect applications which have implemented Request-alike
classes (for example, for testing purposes)?  The interface may not be
explicitly defined as a Zope Interface right now but it is defined by the
current implementation and it is largely public (ie, non-_-prefixed
names).  Tests may have hooked in to parts of Request not documented by
IRequest out of necessity.  It would be a shame to break such carefully
crafted automated tests.

Here's one example I know of off the top of my head, <
https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>.
This one isn't a from-scratch re-implementation of the implicit Request
interface but a Request subclass, instead.  However, it still interacts
with a lot of important pieces of Request which aren't part of IRequest.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170108/7a2de361/attachment.html>

From markrwilliams at gmail.com  Sun Jan  8 17:50:55 2017
From: markrwilliams at gmail.com (Mark Williams)
Date: Sun, 8 Jan 2017 16:50:55 -0800
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
Message-ID: <20170109005054.7b76t245rhe67wiy@hammal>

On Sun, Jan 08, 2017 at 07:34:53PM -0500, Jean-Paul Calderone wrote:
> Hi Mark,
>
> Thanks for tackling this long-standing issue!
>

I hope I actually make some progress :)

> >   He also noted that the Request interface with which HTTPChannel
> >   interacts is mostly not described by twisted.iweb.IRequest.  That
> >   means we can augment the ways HTTPChannel talks to Request-like
> >   things without breaking many public APIs.
> >
> >
> How will this affect applications which have implemented Request-alike
> classes (for example, for testing purposes)?  The interface may not be
> explicitly defined as a Zope Interface right now but it is defined by the
> current implementation and it is largely public (ie, non-_-prefixed
> names).  Tests may have hooked in to parts of Request not documented by
> IRequest out of necessity.  It would be a shame to break such carefully
> crafted automated tests.
>

The new streaming request interface will define how HTTPChannel talks
to a completely separate Request-like implementation.  HTTPChannel can
then inspect what interface is provided by the object returned from
its requestFactory and either use the existing code path or the new
streaming one.  The default requestFactory will remain
twisted.web.http.Request.

These things taken together should mean that existing code doesn't
need to change at all.  I hope to use Twisted's own tests to verify
this, but I might use Flocker's as well.

I'd like to point out that this approach means that defining
_IDeprecatedHTTPChannelToRequestInterface isn't strictly necessary.
I'd like to do so anyway to help me track the existing API so I'm less
likely to break it, and to make the dispatch logic in HTTPChannel more
robust.


From glyph at twistedmatrix.com  Sun Jan  8 19:49:13 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jan 2017 18:49:13 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483729427.23369.21.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
Message-ID: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>


> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> hi,
> 
> 
> sending a simple post request with a body (cookies) results in a error
> here.
> 
> im using python 3.x with the latest twisted and treq installed via pip
> in a virtualenv.

Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:

Because of this issue, this example - http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.

We should fix the docs so that it does.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170108/ab9ee5d5/attachment.html>

From glyph at twistedmatrix.com  Sun Jan  8 19:49:54 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jan 2017 18:49:54 -0800
Subject: [Twisted-Python] Weekly Bug Summary
In-Reply-To: <1483859118.96.805841243758297018@twistedmatrix.com>
References: <1483859118.96.805841243758297018@twistedmatrix.com>
Message-ID: <0BA15C97-1B2A-473C-8CCF-4052F65D52DA@twistedmatrix.com>


> On Jan 7, 2017, at 11:05 PM, trac at twistedmatrix.com wrote:
> 
> Total:                10         13       2326         -3
Only 15 years left to go :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170108/f22a2385/attachment.html>

From cory at lukasa.co.uk  Mon Jan  9 01:21:10 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Mon, 9 Jan 2017 08:21:10 +0000
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <20170108064432.fscacjstbglfoisz@hammal>
References: <20170108064432.fscacjstbglfoisz@hammal>
Message-ID: <52977E4A-CF20-4CF3-9FD9-6D1FA7CA65CB@lukasa.co.uk>


> On 8 Jan 2017, at 06:44, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> * Comments?
>  Will this approach break a public API?  Does it sound terrible?  Or
>  good?  Please share your thoughts!
> 
> Let's hope 2017 is the year of the streaming request!
> 
> -Mark

I?m very excited to see someone tackling this again: I began taking a swing at it last year and abandoned it in favour of some of the other HTTP/2 work. However, I think it?s a vital addition and I really look forward to seeing it land.

For my part, I should note that HTTPChannel has a twin in HTTP/2 land, which is the combination of t.w._http2.H2Connection and t.w._http2.H2Stream. These will also want updating. However, once you?ve defined the shape of the patch for HTTPChannel I am happy to help out with reviewing that and making corresponding changes to the HTTP/2 side of things too.

Cory

From glyph at twistedmatrix.com  Mon Jan  9 02:52:29 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jan 2017 01:52:29 -0800
Subject: [Twisted-Python] Testing Strategies (was Re:  Streaming Requests)
In-Reply-To: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
Message-ID: <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>

On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Here's one example I know of off the top of my head, <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>>.  This one isn't a from-scratch re-implementation of the implicit Request interface but a Request subclass, instead.  However, it still interacts with a lot of important pieces of Request which aren't part of IRequest.

Mark already addressed how he won't be breaking this use-case (which is hugely important, and core to the whole idea of a compatibility policy, so that is as it should be).

However, this kind of test-mocking is, I think, ultimately done at the wrong layer.  It's trying to override some very vaguely-specified internals in the middle of an implementation.

Really, twisted.web should provide its own testing tools, of course.  But if you're going to implement something that does this sort of overriding, I think the idiom to follow would be treq.testing: https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py <https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py>, rather than any of the various implementations of DummyRequest (including more than a few I'm sure I've written).

Internally, treq.testing uses MemoryReactor and the (not-technically-public-but-it-really-should-be) iosim module.  Therefore the layer it's plugging in at is at the very well-defined interface between IAgent and IStreamClientEndpoint, and between HTTPChannel and Transport.  This gives the determinism and (most of the) speed of an in-memory implementation, but a great deal of the realism of a full-blown integration test.  In particular, it binds to the appropriate objects within Twisted and will throw deprecation warnings if their interfaces change.  (Also of note; since what it's building a fake for is really 99% Agent, the bulk of this could probably move up another level into Twisted with very little effort.)

I think following this idiom of pushing I/O through a fake reactor and having a back-end that can be controlled via test-specific APIs is probably what we should all be striving for, and in Twisted we should be working to make the memory-reactor stuff more complete and convenient, rather than adding dummy implementations at each layer of the stack.

This is a set of ideas that I've been gradually arriving at over a long period of time, but it's probably high time for some public discussion by now, even if it's just everybody saying "yeah, that sounds good" :-).

On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170109/9557646e/attachment-0001.html>

From exarkun at twistedmatrix.com  Mon Jan  9 05:13:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 9 Jan 2017 07:13:57 -0500
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
Message-ID: <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>

On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
>
> Here's one example I know of off the top of my head, <
> https://github.com/ScatterHQ/flocker/blob/master/flocker/
> restapi/testtools.py#L316>.  This one isn't a from-scratch
> re-implementation of the implicit Request interface but a Request subclass,
> instead.  However, it still interacts with a lot of important pieces of
> Request which aren't part of IRequest.
>
>
> Mark already addressed how he won't be breaking this use-case (which is
> hugely important, and core to the whole idea of a compatibility policy, so
> that is as it should be).
>
> However, this kind of test-mocking is, I think, ultimately done at the
> wrong layer.  It's trying to override some very vaguely-specified internals
> in the middle of an implementation.
>
>
Absolutely.



> Really, twisted.web should provide its own testing tools, of course.  But
> if you're going to implement something that does this sort of overriding, I
> think the idiom to follow would be treq.testing: https://github.
> com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25
> 839932940e/src/treq/testing.py, rather than any of the various
> implementations of DummyRequest (including more than a few I'm sure I've
> written).
>

Though, note, the link I gave above was support code for something very
similar to this treq code:
https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460

To clarify your point a bit (I think):


   - MemoryAgent (from Flocker) provides a testing IAgent by implementing
   an IRequest that does in-memory resource traversal to dispatch requests and
   generate responses.
   - RequestTraversalAgent (from treq) provides a testing IAgent by
   implementing (using) iosim to do in-memory protocol/transport interacts to
   drive an in-memory HTTP conversation that runs all of the regular Twisted
   Web HTTP processing machinery.

RequestTraversalAgent's approach is better because the protocol/transport
interface is better defined.  Because it's better
defined, RequestTraversalAgent doesn't have to touch pieces that we might
want to consider implementation details (whether they're _-prefixed or
not).  It also invokes a larger portion of the real implementation code
making it more likely to be a realistic simulation of real-world use of the
code.

Having spelled this out, what occurs to me now is
that RequestTraversalAgent is really just a step or so up the ladder and
there's further to go.  For example, RequestTraversalAgent only needs to
exist at all because `iosim` has a distinct interface.  This distinct
interface means you need a RequestTraversalAgent-like thing for each
reactor-using thing for which you want to provide a test double.  If this
adaption behavior were bundled up differently then I think we'd get a lot
more in-memory test doubles for free (or closer to it - we'd be another
rung up the ladder, at least).  That seems like it would be a big win given
how *few* of these testing helpers Twisted has historically managed to
provide (suggesting it's just too hard to do so given the current tools).


>
> This is a set of ideas that I've been gradually arriving at over a long
> period of time, but it's probably high time for some public discussion by
> now, even if it's just everybody saying "yeah, that sounds good" :-).
>

So, it pretty much sounds good, though with the above refinements. :)


>
> On a related note, 'proto_helpers' is in a super awkward place.
>  'twisted.testing', anyone? :)
>

Yes.  I almost suggested this about a week ago when I was preparing to
contribute some testing code but then realized I couldn't contribute the
code after all. :(

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170109/625c5099/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan  9 10:58:24 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 9 Jan 2017 12:58:24 -0500
Subject: [Twisted-Python] Announcing txAWS 0.2.3.1
Message-ID: <CAEeXt4PSgAGjFbj50=mUytatk5=0tu_UzhV6au+gvqCfWP_a7Q@mail.gmail.com>

I've just release txAWS 0.2.3.1.  txAWS is a library for interacting with
Amazon Web Services (AWS) using Twisted.

AWSServiceEndpoint's ssl_hostname_verification's parameter now defaults to
True instead of False.  This affects all txAWS APIs which issue requests to
AWS endpoints.  For any application which uses the default
AWSServiceEndpoints, the server's TLS certificate will now be verified.

This resolves a security issue in which txAWS applications were vulnerable
to man-in-the-middle attacks which could either steal sensitive information
or, possibly, alter the AWS operation requested.

The new release is available on PyPI in source and wheel forms.  You can
also find txAWS at its new home on github, <https://github.com/twisted/txaws
>.

Special thanks to Least Authority Enterprises
(<https://leastauthority.com/>) for
sponsoring the work to find and fix this issue and to publish this new
release.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170109/3f847fdd/attachment.html>

From commercials24 at yahoo.de  Mon Jan  9 18:20:21 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 10 Jan 2017 02:20:21 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
Message-ID: <1484011221.23369.31.camel@yahoo.de>

hi,



i use twisted to send a web request over a proxy, this works over
treq.get(url, agent=myagent) without problems.

but in the process (started out with agent.request) i could not figure
out from what line of twisted code this error:

[Failure instance: Traceback (failure with no frames): <class
'twisted.web._newclient.RequestGenerationFailed'>:
[<twisted.python.failure.Failure builtins.TypeError: sequence item 0:
expected a bytes-like object, str found>]

came from.

btw, is there a way to have a debugger attached to twisted code that
shows what code is currently executed and has a step forward option?


the error does come up when you give agent.request a "GET" instead of a
b"GET".


heres the test code:
from twisted.python.log import err
from twisted.web.client import ProxyAgent
from twisted.internet import reactor, defer
from twisted.internet.endpoints import TCP4ClientEndpoint
import treq

def display(response):
????print("Received response")
????print(response.content)


def err(failure):
????print(failure)

def main():
????endpoint = TCP4ClientEndpoint(reactor, "223.25.102.186", 8080)
????agent = ProxyAgent(endpoint)
????d = agent.request("GET", bytes("http://somedomain.de", 'utf-8'))
????d.addCallbacks(display)
????d.addErrback(err)

if __name__ == "__main__":
????main()
????reactor.run()


this code will produce this error:
[Failure instance: Traceback (failure with no frames): <class
'twisted.web._newclient.RequestGenerationFailed'>:
[<twisted.python.failure.Failure builtins.TypeError: sequence item 0:
expected a bytes-like object, str found>]

and some .py files with line numbers. none of which really are the
problem.



as it turns out, the "GET" as a string gets problematic here:
https://github.com/twisted/twisted/blob/twisted-16.6.0/src/twisted/web/
_newclient.py#L651

requestLines.append(b' '.join([self.method, self.uri,
????????????????b'HTTP/1.1\r\n']))


wouldnt it be better to have something like this:


try:
????????????requestLines.append(b' '.join([self.method, self.uri,
????????????????b'HTTP/1.1\r\n']))
????????except TypeError as e:
????????????raise TypeError("could not join: " + str(self.method) + " "
+ str(self.uri) + ' ' + 'HTTP/1.1\r\n' )




which will produce:
<class 'twisted.python.failure.Failure'> [Failure instance: Traceback:
<class 'TypeError'>: could not join: GET b'http://somedomain.de'
HTTP/1.1

to give the user a chance to find out what he did wrong?
...when he uses agent instead of treq for whatever reason.



From glyph at twistedmatrix.com  Tue Jan 10 00:12:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jan 2017 23:12:00 -0800
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484011221.23369.31.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
Message-ID: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>



> On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> the error does come up when you give agent.request a "GET" instead of a
> b"GET".

That's expected; you do have to pass the method as `bytes`, as documented here: https://twistedmatrix.com/documents/16.6.0/api/twisted.web.iweb.IAgent.html#request <https://twistedmatrix.com/documents/16.6.0/api/twisted.web.iweb.IAgent.html#request>

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170109/bb78f593/attachment.html>

From commercials24 at yahoo.de  Tue Jan 10 16:19:57 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 11 Jan 2017 00:19:57 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
Message-ID: <1484090397.23369.35.camel@yahoo.de>

Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
> 
> 
> > On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > the error does come up when you give agent.request a "GET" instead
> > of a
> > b"GET".
> 
> That's expected; you do have to pass the method as `bytes`, as
> documented here:?https://twistedmatrix.com/documents/16.6.0/api/twist
> ed.web.iweb.IAgent.html#request
> 
> 

True, but since python 2.x is still shipped with debian testing for
example there will be some people running into this issue.
Just to make twisted more approachable this could he handled.


From tommost at gmail.com  Tue Jan 10 19:43:34 2017
From: tommost at gmail.com (Tom Most)
Date: Tue, 10 Jan 2017 18:43:34 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
Message-ID: <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>

On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>
>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de
>> <mailto:commercials24 at yahoo.de>> wrote:
>>
>> hi,
>>
>>
>> sending a simple post request with a body (cookies) results in a error
>> here.
>>
>> im using python 3.x with the latest twisted and treq installed via pip
>> in a virtualenv.
>
> Something that we discussed on IRC but did not come up in the mailing
> list thread may be the one issue that *should* be fixed in treq:
>
> Because of this issue, this example
> - http://treq.readthedocs.io/en/latest/#post - which the OP was
> following, doesn't work on Python 3.
>
> We should fix the docs so that it does.

I submitted a PR to fix this a while ago:
https://github.com/twisted/treq/pull/152

Also, the docs on RTD are still out of date. Who owns them? I'd be happy
to help.

---Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170110/6b261e5c/attachment.html>

From mithrandi at mithrandi.net  Tue Jan 10 21:01:39 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 11 Jan 2017 04:01:39 +0000
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484090397.23369.35.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
 <1484090397.23369.35.camel@yahoo.de>
Message-ID: <CAMcKhMTut6_pEOHbhCxLQHLsTW9TkoZ0rcw_u6kUAj89T+sdsw@mail.gmail.com>

On Wed, 11 Jan 2017 at 02:26 steven meiers <commercials24 at yahoo.de> wrote:

> True, but since python 2.x is still shipped with debian testing for
> example there will be some people running into this issue.
> Just to make twisted more approachable this could he handled.
>

The b'GET' syntax for byte strings works on Python 2.7 (you get a str) as
well as Python 3, so I would suggest we use it everywhere in the
documentation / examples to make it easier on programmers using both Python
2 and 3.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170111/75f19c82/attachment.html>

From commercials24 at yahoo.de  Tue Jan 10 16:19:38 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 11 Jan 2017 00:19:38 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
Message-ID: <1484090378.23369.34.camel@yahoo.de>

Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
> 
> 
> > On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > the error does come up when you give agent.request a "GET" instead
> > of a
> > b"GET".
> 
> That's expected; you do have to pass the method as `bytes`, as
> documented here:?https://twistedmatrix.com/documents/16.6.0/api/twist
> ed.web.iweb.IAgent.html#request
> 
> 
True, but since python 2.x is still shipped with debian testing for
example there will be some people running into this issue.
Just to make twisted more approachable this could he handled.


From glyph at twistedmatrix.com  Wed Jan 11 17:44:10 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 16:44:10 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
Message-ID: <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>


> On Jan 10, 2017, at 6:43 PM, Tom Most <tommost at gmail.com> wrote:
> 
> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>> 
>>> On Jan 6, 2017, at 11:03 AM, steven meiers < <mailto:commercials24 at yahoo.de>commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
>>> 
>>> hi,
>>> 
>>> 
>>> sending a simple post request with a body (cookies) results in a error
>>> here.
>>> 
>>> im using python 3.x with the latest twisted and treq installed via pip
>>> in a virtualenv.
>> 
>> Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:
>> 
>> Because of this issue, this example -  <http://treq.readthedocs.io/en/latest/#post>http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.
>> 
>> We should fix the docs so that it does.
> 
> I submitted a PR to fix this a while ago: https://github.com/twisted/treq/pull/152 <https://github.com/twisted/treq/pull/152>
> 
> Also, the docs on RTD are still out of date. Who owns them? I'd be happy to help.

Thanks, hopefully the next time my periodic review comes around I'll catch that one.

Looks like I own the docs.  Builds are apparently failing - should I add you to the project?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170111/41988bf3/attachment.html>

From glyph at twistedmatrix.com  Wed Jan 11 17:49:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 16:49:15 -0800
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484090378.23369.34.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
 <1484090378.23369.34.camel@yahoo.de>
Message-ID: <9C767367-33E0-4C31-BDF7-183F1857A872@twistedmatrix.com>


> On Jan 10, 2017, at 3:19 PM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
>> 
>> 
>>> On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
>>> wrote:
>>> 
>>> the error does come up when you give agent.request a "GET" instead
>>> of a
>>> b"GET".
>> 
>> That's expected; you do have to pass the method as `bytes`, as
>> documented here: https://twistedmatrix.com/documents/16.6.0/api/twist
>> ed.web.iweb.IAgent.html#request
>> 
>> 
> True, but since python 2.x is still shipped with debian testing for
> example there will be some people running into this issue.
> Just to make twisted more approachable this could he handled.

I think that Tristan's suggestion is the best way to address this.

-glyph



From meejah at meejah.ca  Wed Jan 11 19:58:33 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 06:58:33 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
Message-ID: <864m153rxi.fsf@atlantis.meejah.ca>





From meejah at meejah.ca  Wed Jan 11 19:59:56 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 06:59:56 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
Message-ID: <86wpe12dar.fsf@atlantis.meejah.ca>



-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

txtorcon 0.18.0 is released, improving error-reporting when you have
SAFECOOKIE or COOKIE authentication turned on but can't read the file.

   * https://github.com/meejah/txtorcon/issues/200

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.18.0
   https://github.com/meejah/txtorcon/releases/tag/v0.18.0

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.18.0.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.18.0.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
12be80f1d5e2893378c6e8c752cf159479f868f8424e16b34b75cd679a0ab171  dist/txtorcon-0.18.0.tar.gz
cffe063dbcedd9d344e88a572c0de39b0390562165a865efa27019260c2119f6  dist/txtorcon-0.18.0-py2-none-any.whl
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJYdp4sAAoJEMJgKAMSgGmnxCIH/iiFJdYtbSnShAktDrwMuL6K
tJN+AALrr6zIydjIVG4pNuGydoxqtmrpb/12xNn/c7noEWZpuuHd+hn/PRn+XNaA
Gh+q4922VKs3ZCFYFClVAkZFtT5iug7EKnB6n0IKt4Z+rVAzRTCpHqgnCmmavHP1
s55jkYc+emC/jzGag22sD7HnPYHjkuKV+qy1Y6mF1//oD9FFhJUXvn5FVjf9cNb/
xta7HB3AMXp/8qdpURPJaJBjWOg1BxSVBngZXYiUJkkoOReOJU1ngDoU0J7VjQJq
Uyi2ijwylUnK6/7qLLS8pwyX/UmWgV7NeQgIr00Shsm7Jv+zkk0QhXbnwJo8pRQ=
=oJqn
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Wed Jan 11 21:05:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 20:05:18 -0800
Subject: [Twisted-Python] txtorcon 0.18.0
In-Reply-To: <864m153rxi.fsf@atlantis.meejah.ca>
References: <864m153rxi.fsf@atlantis.meejah.ca>
Message-ID: <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com>


> On Jan 11, 2017, at 6:58 PM, meejah <meejah at meejah.ca> wrote:
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Trying to figure out if this is a profound dissertation on the nature of OPSEC or just an email client crashing...

-glyph

From glyph at twistedmatrix.com  Wed Jan 11 21:41:26 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 20:41:26 -0800
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
Message-ID: <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>


> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> Here's one example I know of off the top of my head, <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>>.  This one isn't a from-scratch re-implementation of the implicit Request interface but a Request subclass, instead.  However, it still interacts with a lot of important pieces of Request which aren't part of IRequest.
> 
> Mark already addressed how he won't be breaking this use-case (which is hugely important, and core to the whole idea of a compatibility policy, so that is as it should be).
> 
> However, this kind of test-mocking is, I think, ultimately done at the wrong layer.  It's trying to override some very vaguely-specified internals in the middle of an implementation.
> 
> 
> Absolutely.

Yay! Glad to have some consensus on this.

> Really, twisted.web should provide its own testing tools, of course.  But if you're going to implement something that does this sort of overriding, I think the idiom to follow would be treq.testing: https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py <https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py>, rather than any of the various implementations of DummyRequest (including more than a few I'm sure I've written).
> 
> Though, note, the link I gave above was support code for something very similar to this treq code: https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460>
> 
> To clarify your point a bit (I think):
> 
> MemoryAgent (from Flocker) provides a testing IAgent by implementing an IRequest that does in-memory resource traversal to dispatch requests and generate responses.
> RequestTraversalAgent (from treq) provides a testing IAgent by implementing (using) iosim to do in-memory protocol/transport interacts to drive an in-memory HTTP conversation that runs all of the regular Twisted Web HTTP processing machinery.
> RequestTraversalAgent's approach is better because the protocol/transport interface is better defined.  Because it's better defined, RequestTraversalAgent doesn't have to touch pieces that we might want to consider implementation details (whether they're _-prefixed or not).  It also invokes a larger portion of the real implementation code making it more likely to be a realistic simulation of real-world use of the code.

100% agree.

> Having spelled this out, what occurs to me now is that RequestTraversalAgent is really just a step or so up the ladder and there's further to go.

I generally agree with this next bit, but I have my own spin.  So, one point at a time:

> For example, RequestTraversalAgent only needs to exist at all because `iosim` has a distinct interface.  This distinct interface means you need a RequestTraversalAgent-like thing for each reactor-using thing for which you want to provide a test double.

I think that there are pieces of RequestTraversalAgent for which this is true; the parts where it has to instantiate its own FakeTransport objects and IPv4Addresses and whatever.  This could be streamlined a lot more.

But at the higher level, each layer will want its own public API entrypoint, to facilitate the orchestration and setup of domain-specific client/server objects and reduce boilerplate for testing at a given level.

> If this adaption behavior were bundled up differently then I think we'd get a lot more in-memory test doubles for free (or closer to it - we'd be another rung up the ladder, at least).

This I definitely agree with.  Each abstraction-level-specific fake should be a paper-thin layer over the one below, and each abstraction layer should cover a fair amount of ground for itself.  For example, you can test Klein apps trivially with treq.testing, without adding very much extra logic at all.

> That seems like it would be a big win given how few of these testing helpers Twisted has historically managed to provide (suggesting it's just too hard to do so given the current tools).

Here I think there are a few mitigating factors:

I don't actually think that it's that hard using current tools.  It's pretty easy, in fact, to build up from the bottom and layer subsequent things on top of another.
The way I see the problem that we're facing is that we realized we should be doing this many years after doing the actual implementation, and we realized this several layers up.  So we built mid-tier test mocks and then tried to build on top of them, rather than heading straight for the bottom layer.  This has lead to awkwardness like needing to monkeypatch HostnameEndpoint to avoid deferToThread calls.
So, even now, we have an anemic bottom layer.  task.Clock is pretty good, but MemoryReactor still leaves a lot to be desired.
Therefore, I don't think that we really need to build that many different abstraction layers; if we really focus on nailing down (A) MemoryReactor+iosim+something with addresses so 'connectTCP' can be hooked up to 'listenTCP' when both are given the same address, and (B) the vast majority of what folks want to be able to test is HTTP API type stuff, so integrating treq.testing (treq is license-compatible, so we can just move the code if we want) would get us a _long_ way there, and would popularize this style with a lot of other developers who might then be motivated to help improve the more obscure corners, like, say, DNS.

I've been slowly improving the testability of Twisted's core; the recent name-resolver change made a LOT of things easier.  We should be making deterministicResolvingReactor and twisted.threads (along with MemoryWorker) public, and a lot of the circuitous routes that higher-level code needed to traverse to get to "no I/O" will just go away.  I'm probably forgetting a few other building blocks, but I've noticed that each additional one that I remove makes the task more like exponentially than linearly easier.

> This is a set of ideas that I've been gradually arriving at over a long period of time, but it's probably high time for some public discussion by now, even if it's just everybody saying "yeah, that sounds good" :-).
> 
> So, it pretty much sounds good, though with the above refinements. :)

Cool.  I suspect I haven't even covered all of it with my refine-refinements above, but at this point it seems clear we can all pull in the same direction.  I wonder if a themed sprint at some point in the next year might be worthwhile?

> 
> On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)
> 
> Yes.  I almost suggested this about a week ago when I was preparing to contribute some testing code but then realized I couldn't contribute the code after all. :(

Well, now it's just a matter of time :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170111/5edb52b1/attachment-0001.html>

From tommost at gmail.com  Wed Jan 11 23:05:21 2017
From: tommost at gmail.com (Tom Most)
Date: Wed, 11 Jan 2017 22:05:21 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
 <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
Message-ID: <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>

Sure, I'd be happy to help (but won't get to it until the weekend).
Username is twm.

Thanks,
Tom

On 01/11/2017 04:44 PM, Glyph Lefkowitz wrote:
>
>> On Jan 10, 2017, at 6:43 PM, Tom Most <tommost at gmail.com
>> <mailto:tommost at gmail.com>> wrote:
>>
>> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>>>
>>>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de>
>>>> wrote:
>>>>
>>>> hi,
>>>>
>>>>
>>>> sending a simple post request with a body (cookies) results in a error
>>>> here.
>>>>
>>>> im using python 3.x with the latest twisted and treq installed via pip
>>>> in a virtualenv.
>>>
>>> Something that we discussed on IRC but did not come up in the
>>> mailing list thread may be the one issue that *should* be fixed in treq:
>>>
>>> Because of this issue, this example
>>> - http://treq.readthedocs.io/en/latest/#post - which the OP was
>>> following, doesn't work on Python 3.
>>>
>>> We should fix the docs so that it does.
>>
>> I submitted a PR to fix this a while ago:
>> https://github.com/twisted/treq/pull/152
>>
>> Also, the docs on RTD are still out of date. Who owns them? I'd be
>> happy to help.
>
> Thanks, hopefully the next time my periodic review comes around I'll
> catch that one.
>
> Looks like I own the docs.  Builds are apparently failing - should I
> add you to the project?
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170111/b7ad23bd/attachment.html>

From meejah at meejah.ca  Wed Jan 11 23:12:36 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 10:12:36 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
In-Reply-To: <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com> (Glyph
 Lefkowitz's message of "Wed, 11 Jan 2017 20:05:18 -0800")
References: <864m153rxi.fsf@atlantis.meejah.ca>
 <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com>
Message-ID: <86mvew3iy3.fsf@atlantis.meejah.ca>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> Trying to figure out if this is a profound dissertation on the nature
> of OPSEC or just an email client crashing...

"yes".

Well, actually ... I use emacs (Gnus) for email and have *nearly entirely*
switched over to tmux for all my terminal multiplexing needs (it's
great!). Except there's that one machine that still uses "screen"
instead, and I "somehow" got confused about prefix-keys and chorded out
the "send the email" Morse-code instead of the "insert a file" one...

-- 
meejah


From glyph at twistedmatrix.com  Thu Jan 12 01:29:09 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 00:29:09 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
 <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
 <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>
Message-ID: <64670AF1-93F5-48E6-B801-D5C64C8DB6DE@twistedmatrix.com>

Done.
-g

> On Jan 11, 2017, at 10:05 PM, Tom Most <tommost at gmail.com> wrote:
> 
> Sure, I'd be happy to help (but won't get to it until the weekend). Username is twm.
> 
> Thanks,
> Tom
> On 01/11/2017 04:44 PM, Glyph Lefkowitz wrote:
>> 
>>> On Jan 10, 2017, at 6:43 PM, Tom Most < <mailto:tommost at gmail.com>tommost at gmail.com <mailto:tommost at gmail.com>> wrote:
>>> 
>>> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>>>> 
>>>>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
>>>>> 
>>>>> hi,
>>>>> 
>>>>> 
>>>>> sending a simple post request with a body (cookies) results in a error
>>>>> here.
>>>>> 
>>>>> im using python 3.x with the latest twisted and treq installed via pip
>>>>> in a virtualenv.
>>>> 
>>>> Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:
>>>> 
>>>> Because of this issue, this example -  <http://treq.readthedocs.io/en/latest/#post>http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.
>>>> 
>>>> We should fix the docs so that it does.
>>> 
>>> I submitted a PR to fix this a while ago:  <https://github.com/twisted/treq/pull/152>https://github.com/twisted/treq/pull/152 <https://github.com/twisted/treq/pull/152>
>>> 
>>> Also, the docs on RTD are still out of date. Who owns them? I'd be happy to help.
>> 
>> Thanks, hopefully the next time my periodic review comes around I'll catch that one.
>> 
>> Looks like I own the docs.  Builds are apparently failing - should I add you to the project?
>> 
>> -glyph
>> 
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/f9a09327/attachment.html>

From hawkowl at atleastfornow.net  Thu Jan 12 03:13:35 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 12 Jan 2017 21:13:35 +1100
Subject: [Twisted-Python] Twisted 16.7.0rc2 Release Candidate Announcement
Message-ID: <7F324167-FA50-4F81-B1E2-557DB356E246@atleastfornow.net>

Happy new year!

Twisted 16.7.0rc2 is out, with a bugfix for a problem scrapy ran into. Sorry for the delay in 16.7 final, we've had a few regression reports, and we've made sure to follow them all up and get to the bottom of them before we did the release!

You can get the tarball and the NEWS file at https://twistedmatrix.com/Releases/rc/16.7.0rc2/ <https://twistedmatrix.com/Releases/rc/16.7.0rc2/> , or you can try it out from PyPI:

    python -m pip install Twisted==16.7.0rc2

Please test it, and let me know how your applications fare, good or bad! It will release this weekend if nothing is reported.

Regards,
    Amber Brown
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/1a3988f8/attachment.html>

From exarkun at twistedmatrix.com  Thu Jan 12 05:24:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 12 Jan 2017 07:24:25 -0500
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
Message-ID: <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>

On Wed, Jan 11, 2017 at 11:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> On a related note, 'proto_helpers' is in a super awkward place.
>>  'twisted.testing', anyone? :)
>>
>
> Yes.  I almost suggested this about a week ago when I was preparing to
> contribute some testing code but then realized I couldn't contribute the
> code after all. :(
>
>
> Well, now it's just a matter of time :).
>
>
Some further thoughts on this... What I've actually been doing elsewhere (
*mostly*) is to put the testing implementations quite near the real
implementations.  For example, I recently introduced
`workproject.subscription_manager.{network_client,memory_client}`.  But
contrary to this, in txAWS I'm following the pre-existing pattern which is
more like `txaws.service.AWSServiceRegion.get_ec2_client` &
`txaws.testing.service.FakeAWSServiceRegion.get_ec2_client`.

Which I prefer, I'm not really sure yet.  Role-named modules are easy to
recognize.  On the other hand, testing code next to implementation code is
easier to stumble across and you don't *have* to recognize a separate
testing module to find it.  Also, role-named modules tend to pile up and
get in each other's way (start working with `twisted.testing`,
`txaws.testing`, etc and things start to get confusing quickly).

Additionally, a related idea is that often the testing implementation might
actually serve as a good starting place for the real implementation.  I
think the code in txAWS is a good example of this (ie, the real and fake
implementations duplicate a lot of logic with some pointless divergences).
In the olden days I would have said "the testing implementation is often a
good *base class* for the real implementation".  But now I'll mumble
something about composition.  Put another way:

   - Clock should be the real implementation of all of the time-source
   independent logic of IReactorTime
   - FakeAWSServiceRegion should be the real implementation of the "client
   factory" logic (get_XXX_client) of AWSServiceRegion

and so on.

Perhaps this also speaks to the idea you mentioned that there should be a
stack of thin abstractions but I snipped that content already so I'll try
responding to that separately, later.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/a27e8463/attachment-0001.html>

From exarkun at twistedmatrix.com  Thu Jan 12 16:42:03 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 12 Jan 2017 18:42:03 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
Message-ID: <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>

Note there is still some confusion over this matter.  See <
http://twistedmatrix.com/trac/ticket/8972>, <
http://twistedmatrix.com/trac/ticket/8978>, and <
https://github.com/twisted/twisted/pull/672>.

Jean-Paul

On Tue, Jan 3, 2017 at 3:24 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <
> hawkowl at atleastfornow.net> wrote:
>
>>
>>
>> We have, in the past, fixed up historic NEWS files in later releases
>> (e.g. the one which removed 2.6 support). We could always roll these
>> changes into a post1, but, that seems like a lot of effort. Maybe we could
>> put errata on the blog?
>>
>>
> With a link to the blog post in the NEWS file?  Cold checking blog was
> below "read git history and try to correlate with the issue tracker" on my
> list of how to track down this change.
>
> Jean-Paul
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/4d295426/attachment.html>

From glyph at twistedmatrix.com  Thu Jan 12 22:56:46 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 21:56:46 -0800
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
 <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
Message-ID: <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>


> On Jan 12, 2017, at 4:24 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Wed, Jan 11, 2017 at 11:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)
>> 
>> Yes.  I almost suggested this about a week ago when I was preparing to contribute some testing code but then realized I couldn't contribute the code after all. :(
> 
> Well, now it's just a matter of time :).
> 
> Some further thoughts on this... What I've actually been doing elsewhere (mostly) is to put the testing implementations quite near the real implementations.  For example, I recently introduced `workproject.subscription_manager.{network_client,memory_client}`.  But contrary to this, in txAWS I'm following the pre-existing pattern which is more like `txaws.service.AWSServiceRegion.get_ec2_client` & `txaws.testing.service.FakeAWSServiceRegion.get_ec2_client`.

"Memory" implementations are definitely a step up the value hierarchy from "fake" implementations.

I guess maybe both of these patterns make sense for certain things.  It makes sense to put a memory implementation next to the real one (c.f. SQLite), but it doesn't make as much sense to put a testing implementation there.  I would make this distinction by saying a "testing" implementation is one which has assertion method helpers, simulated I/O triggers, and similar.

> Which I prefer, I'm not really sure yet.  Role-named modules are easy to recognize.  On the other hand, testing code next to implementation code is easier to stumble across and you don't have to recognize a separate testing module to find it.  Also, role-named modules tend to pile up and get in each other's way (start working with `twisted.testing`, `txaws.testing`, etc and things start to get confusing quickly).

Yeah, and I guess it'll actually be `twisted.internet.testing`, `twisted.python.testing`, `twisted.web.testing` etc.  Which we explicitly rejected with `interfaces` because it got too confusing; the existence of multiple `endpoints` modules has been mildly irritating while working on HostnameEndpoint for the last couple of days.

> Additionally, a related idea is that often the testing implementation might actually serve as a good starting place for the real implementation.  I think the code in txAWS is a good example of this (ie, the real and fake implementations duplicate a lot of logic with some pointless divergences).  In the olden days I would have said "the testing implementation is often a good base class for the real implementation".  But now I'll mumble something about composition.

Yeah, I think this is the broader point, actually - the best possible "fake" implementation is a completely real implementation where the lower level it's composing against is fake.

> Put another way:
> Clock should be the real implementation of all of the time-source independent logic of IReactorTime
One minor tweak: Clock itself should be split into two objects, one of which has just 'advance' and one of which has IReactorTime <https://glyph.twistedmatrix.com/2015/05/separate-your-fakes-and-your-inspectors.html <https://glyph.twistedmatrix.com/2015/05/separate-your-fakes-and-your-inspectors.html>>.  Possibly three objects, since it gets its `seconds` from somewhere else?
> FakeAWSServiceRegion should be the real implementation of the "client factory" logic (get_XXX_client) of AWSServiceRegion 
> and so on.

Yes, definitely.

> Perhaps this also speaks to the idea you mentioned that there should be a stack of thin abstractions but I snipped that content already so I'll try responding to that separately, later.


Ideally, the only "fake" implementation we should need is StringTransport and Clock; the abstractions in the middle would be wiring together the layers in a way that's convenient for test clients to access.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/2b17487a/attachment.html>

From glyph at twistedmatrix.com  Thu Jan 12 23:13:05 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 22:13:05 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
Message-ID: <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>

Thanks for highlighting those.  I've put the link in the other direction as well.

> On Jan 12, 2017, at 3:42 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Note there is still some confusion over this matter.  See <http://twistedmatrix.com/trac/ticket/8972 <http://twistedmatrix.com/trac/ticket/8972>>, <http://twistedmatrix.com/trac/ticket/8978 <http://twistedmatrix.com/trac/ticket/8978>>, and <https://github.com/twisted/twisted/pull/672 <https://github.com/twisted/twisted/pull/672>>.
> 
> Jean-Paul
> 
> On Tue, Jan 3, 2017 at 3:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> 
> We have, in the past, fixed up historic NEWS files in later releases (e.g. the one which removed 2.6 support). We could always roll these changes into a post1, but, that seems like a lot of effort. Maybe we could put errata on the blog?
> 
> 
> With a link to the blog post in the NEWS file?  Cold checking blog was below "read git history and try to correlate with the issue tracker" on my list of how to track down this change.
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170112/706014bb/attachment.html>

From trac at twistedmatrix.com  Sun Jan 15 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Jan 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1484463918.57.8179539630336027116@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170115/81903290/attachment.html>

From romanmescheryakov at yandex.ru  Mon Jan 16 07:15:24 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 16 Jan 2017 17:15:24 +0300
Subject: [Twisted-Python] =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
Message-ID: <105651484576124@web20o.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170116/468347a3/attachment.html>

From ngoonee.talk at gmail.com  Mon Jan 16 14:26:35 2017
From: ngoonee.talk at gmail.com (Oon-Ee Ng)
Date: Tue, 17 Jan 2017 05:26:35 +0800
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <105651484576124@web20o.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
Message-ID: <CAGQ70es1NM2Y+nY-Q0-EMceYrmd12X0pj4xaDbQt7Wj3b81+hg@mail.gmail.com>

On Mon, Jan 16, 2017 at 10:15 PM, ????? ?????????
<romanmescheryakov at yandex.ru> wrote:
> Hi everyone! I?m new to Twisted and mailing lists, so please excuse me if I
> make some mistake. My question maybe trivial, but as far as I know it is
> neither explained on the twistedmatrix.com web site nor easily resolved
> using Google search. The question is: how can Perspective Broker server get
> an IP address of the client the server is being called by? For example,
> let?s consider first PB server example on the Using Perspective Broker page,
> pbsimple.py. Inside remote_echo method of the Echoer class, how one could
> obtain IP address of a client that is calling this method?
>
> One of solutions I found in Google requires client to pass some
> pb.Referenceable object as a parameter to a call, and then server is able to
> get client?s IP address by calling broker.transport.getPeer().host on that
> object. But passing pb.Referenceable just for purpose of getting caller?s IP
> address seems not very convenient. Are there more simple way?

Have not used PB myself, but based on the rest of twisted,
self.transport.client should have the information you need?


From twisted-python at 2xlp.com  Mon Jan 16 17:16:12 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Mon, 16 Jan 2017 19:16:12 -0500
Subject: [Twisted-Python] suggestions sought on multi-service application
	dealing with shared database issue
Message-ID: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>


I have a few ideas on how to handle this, but wanted to see if anyone else has dealt with this and has a recommended approach:

I have a twisted daemon that I will loosely describe as this:

	* an application defined in a `.tac` file that is an instance of `twisted.application.service.Application`
	* multiple user-defined services (IIRC 8 or 9) that are subclasses as twisted.application.internet.TimeService
	* the services are added to the application via `setServiceParent`
	* the reactor is started via `twisted.internet.reactor.run()`

I've run into an annoying issue a few times, and need to temporarily suspend all/most of the services from running...  an internal backup script occasionally breaks (on a new edge case every time we fix it) and ends up consuming 100% of disk space.  This cascades into database failures in my application.

I've got an external service monitoring disk-space and alerting me.  It's presently shutting down the twisted daemon when the error happens, but I'd like to keep twisted running and just adapt to the server conditions.

The two ideas I had so far:

1. Create a new service that monitors server conditions and can call stopService/startService on registered services as needed
2. Keep all the services running, but put a conditional check in the timer service's callable

has anyone preferred one of these, or something different, in the past?



From glyph at twistedmatrix.com  Mon Jan 16 23:50:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jan 2017 22:50:36 -0800
Subject: [Twisted-Python]
 =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
 =?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <105651484576124@web20o.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
Message-ID: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>


> On Jan 16, 2017, at 6:15 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! I?m new to Twisted and mailing lists, so please excuse me if I make some mistake.

Hi Roman! Doing great so far, no mistakes I can see.

> My question maybe trivial, but as far as I know it is neither explained on the twistedmatrix.com web site nor easily resolved using Google search. The question is: how can Perspective Broker server get an IP address of the client the server is being called by? For example, let?s consider first PB server example on the Using Perspective Broker <http://twistedmatrix.com/documents/current/core/howto/pb-usage.html> page, pbsimple.py. Inside remote_echo method of the Echoer class, how one could obtain IP address of a client that is calling this method?

This is a great question and really points to a weakness in the PB documentation.

> One of solutions I found in Google requires client to pass some pb.Referenceable object as a parameter to a call, and then server is able to get client?s IP address by calling broker.transport.getPeer().host on that object. But passing pb.Referenceable just for purpose of getting caller?s IP address seems not very convenient. Are there more simple way?

Yeah, adding a Referenceable argument is not really the right way to go; you don't want to have to expose a whole object and thereby change your network protocol just to get access to an object that's already present in the existing implementation.

What you need to do here is take advantage of the remoteMessageReceived method, https://twistedmatrix.com/documents/16.6.0/api/twisted.spread.pb.Referenceable.html#remoteMessageReceived <https://twistedmatrix.com/documents/16.6.0/api/twisted.spread.pb.Referenceable.html#remoteMessageReceived>, which is what actually calls the remote_ method for you.

The documentation isn't entirely clear, as it says it's calling the remote_ method with "the same" arguments, but if you look at the implementation, it is fairly straightforward:

https://github.com/twisted/twisted/blob/3257fbb3504329f603cc9b6e17442d913170b5d1/src/twisted/spread/flavors.py#L104-L124 <https://github.com/twisted/twisted/blob/3257fbb3504329f603cc9b6e17442d913170b5d1/src/twisted/spread/flavors.py#L104-L124>

it deserializes the arguments, calls the method, and serializes the result.

Notice that in order to do this serializing and deserializing, it's called with the broker, which is the object that has the IP you want.  So you could override this method to do its own serialization and deserialization.  But, luckily enough, there's something very close to what you want already: ViewPoint, which already does the insertion-of-an-argument for you.  So here's a little hack which will insert 'broker' as the first argument and call a 'view_' method rather than a 'remote_' one:

from twisted.spread.flavors import Referenceable, ViewPoint
class BrokerizedReferenceable(Referenceable, object):
    def remoteMessageReceived(self, broker, message, args, kw):
        return (ViewPoint(broker, self)
                .remoteMessageReceived(broker, message, args, kw))


This is untested but hopefully it will be close enough to put you on your way.  Make sense?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170116/3e9828ee/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 17 03:08:03 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 02:08:03 -0800
Subject: [Twisted-Python] suggestions sought on multi-service
 application dealing with shared database issue
In-Reply-To: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
Message-ID: <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>


> On Jan 16, 2017, at 16:16, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
> 
> I have a few ideas on how to handle this, but wanted to see if anyone else has dealt with this and has a recommended approach:
> 
> I have a twisted daemon that I will loosely describe as this:
> 
> 	* an application defined in a `.tac` file that is an instance of `twisted.application.service.Application`
> 	* multiple user-defined services (IIRC 8 or 9) that are subclasses as twisted.application.internet.TimeService
> 	* the services are added to the application via `setServiceParent`
> 	* the reactor is started via `twisted.internet.reactor.run()`
> 
> I've run into an annoying issue a few times, and need to temporarily suspend all/most of the services from running...  an internal backup script occasionally breaks (on a new edge case every time we fix it) and ends up consuming 100% of disk space.  This cascades into database failures in my application.
> 
> I've got an external service monitoring disk-space and alerting me.  It's presently shutting down the twisted daemon when the error happens, but I'd like to keep twisted running and just adapt to the server conditions.
> 
> The two ideas I had so far:
> 
> 1. Create a new service that monitors server conditions and can call stopService/startService on registered services as needed
> 2. Keep all the services running, but put a conditional check in the timer service's callable
> 
> has anyone preferred one of these, or something different, in the past?

It depends if it's easier to keep track of when changes happen, or determine what the current state is.

If it's easier to keep track of when changes happen, I would recommend calling `setServiceParent` to add/remove the service to the active service hierarchy.  (This will call `startService` / `stopService` for you automatically, as well as cooperating with things like ^c so it's better than calling them yourself).

If it's easier to query the current state, then a conditional in the timer is a lot simpler.

-glyph



From commercials24 at yahoo.de  Tue Jan 17 05:04:04 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 17 Jan 2017 13:04:04 +0100
Subject: [Twisted-Python] twisted code works,
	after importing it does not anymore
In-Reply-To: <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
 <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
 <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>
Message-ID: <1484654644.5985.3.camel@yahoo.de>

hi,



this websocket code works but now i would like to be able to import it
to another class to have a way to send messages without waiting for the
answer.

the code is below here and also pasted here: https://bpaste.net/show/78
36ba3b8008 for some nice syntax highlighting.


just running websockets.py works...sending and receiving messages.
importing does not, says:

builtins.AttributeError: 'MyClientProtocol' object has no attribute
'deferred'


any ideas why it does give me this error?



but since the code works on its own i dont see why it can be imported.

first code paste is the import test which fails, after that is the
error mesage and at the  end is the code (mywebsocket.py) that is to be
imported.



from mywebsocket import runIt
import sys
from autobahn.twisted.websocket import WebSocketClientProtocol, \
????????????WebSocketClientFactory
from mywebsocket import MyClientProtocol
from twisted.python import log
from twisted.internet import reactor

if __name__ == '__main__':
????log.startLogging(sys.stdout)

????factory = WebSocketClientFactory(u"ws://127.0.0.1:8080/javaee7-
websocket-chat/chat/arduino")
????factory.protocol = MyClientProtocol
????reactor.connectTCP("127.0.0.1", 8080, factory)

????d, factory = runIt()
????def test_sendMessage(result):
????????print("test_sesndMessage():", result)
????????factory.p.sendMessage('python client', 'very nice message')

????d.addCallback(test_sendMessage)
????reactor.run()






python testimport.py?
2017-01-17 12:57:43+0100 [-] Log opened.
2017-01-17 12:57:43+0100 [-] Starting factory
<autobahn.twisted.websocket.WebSocketClientFactory object at
0x7fea4c21d358>
2017-01-17 12:57:43+0100 [-] Starting factory <mywebsocket.MyFactory
object at 0x7fea48a34b38>
2017-01-17 12:57:43+0100 [-] Server connected: tcp4:127.0.0.1:8080
2017-01-17 12:57:43+0100 [-] WebSocket connection open.
2017-01-17 12:57:43+0100 [-] test_sesndMessage(): yep that worked
2017-01-17 12:57:43+0100 [-] Server connected: tcp4:127.0.0.1:8080
2017-01-17 12:57:43+0100 [-] WebSocket connection open.
2017-01-17 12:57:43+0100 [MyClientProtocol,client] Unhandled Error
	Traceback (most recent call last):
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/log.py", line
103, in callWithLogger
	????return callWithContext({"system": lp}, func, *args, **kw)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/log.py", line
86, in callWithContext
	????return context.call({ILogContext: newCtx}, func, *args,
**kw)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/context.py",
line 118, in callWithContext
	????return self.currentContext().callWithContext(ctx, func,
*args, **kw)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/context.py",
line 81, in callWithContext
	????return func(*args,**kw)
	--- <exception caught here> ---
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/posixbase.py", 
line 597, in _doReadOrWrite
	????why = selectable.doRead()
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/tcp.py", line
208, in doRead
	????return self._dataReceived(data)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/tcp.py", line
214, in _dataReceived
	????rval = self.protocol.dataReceived(data)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/autobahn/twisted/websocket.py", 
line 132, in dataReceived
	????self._dataReceived(data)
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 1183, in _dataReceived
	????self.consumeData()
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 1212, in consumeData
	????self.processHandshake()
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 3784, in
processHandshake
	????self._onOpen()
	??File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/autobahn/twisted/websocket.py", 
line 142, in _onOpen
	????self.onOpen()
	??File "/home/julius/code/python/twisted/webchat-
client/mywebsocket.py", line 18, in onOpen
	????self.deferred.callback('yep that worked')
	builtins.AttributeError: 'MyClientProtocol' object has no
attribute 'deferred'
	
2017-01-17 12:57:43+0100 [-] WebSocket connection closed: connection
was closed uncleanly (peer dropped the TCP connection without previous
WebSocket closing handshake)
2017-01-17 12:57:43+0100 [-] Stopping factory
<autobahn.twisted.websocket.WebSocketClientFactory object at
0x7fea4c21d358>
2017-01-17 12:57:43+0100 [-] Text message received: {"message":"very
nice message","sender":"python client","received":"Tue Jan 17 12:57:43
CET 2017"}
^C2017-01-17 12:57:44+0100 [-] Received SIGINT, shutting down.
2017-01-17 12:57:44+0100 [-] WebSocket connection closed: connection
was closed uncleanly (peer dropped the TCP connection without previous
WebSocket closing handshake)
2017-01-17 12:57:44+0100 [-] Stopping factory <mywebsocket.MyFactory
object at 0x7fea48a34b38>
2017-01-17 12:57:44+0100 [-] Main loop terminated.







mywebsocket.py
from autobahn.twisted.websocket import WebSocketClientProtocol, \
????WebSocketClientFactory
import sys

from twisted.python import log
from twisted.internet import reactor, defer

import json

class MyClientProtocol(WebSocketClientProtocol):

????def onConnect(self, response):
????????tmp = "Server connected: {0}".format(response.peer)
????????print(tmp)

????def onOpen(self):
????????print("WebSocket connection open.")
????????self.deferred.callback('yep that worked')

????????def hello():
????????????print("sending message")
????????????message = json.dumps({"message":"1" ,"sender":"2",
"received":"3"}).encode('utf-8')

????????????
????????????self.sendMessage(message)
????????????self.factory.reactor.callLater(10, hello)


????def sendMessage(self, sender, message):
????????message = json.dumps({"message": message, "sender": sender,
"received": "notusedyet"})
????????super(MyClientProtocol, self).sendMessage(message.encode('utf-
8'))

????def onMessage(self, payload, isBinary):
????????if isBinary:
????????????print("Binary message received: {0}
bytes".format(len(payload)))
????????else:
????????????print("Text message received:
{0}".format(payload.decode('utf8')))

????def onClose(self, wasClean, code, reason):
????????print("WebSocket connection closed: {0}".format(reason))




class MyFactory(WebSocketClientFactory):

????def __init__(self, deferred, *args, **kwargs):
????????self.d = deferred
????????super(MyFactory, self).__init__(*args, **kwargs)

????def buildProtocol(self, addr):
????????p = super(MyFactory, self).buildProtocol(addr)
????????self.p = p
????????p.deferred = self.d
????????return p



def runIt():
????log.startLogging(sys.stdout)


????d = defer.Deferred()

????factory = MyFactory(d, u"ws://127.0.0.1:8080/javaee7-websocket-
chat/chat/arduino")


????factory.protocol = MyClientProtocol
????
????def test_sendMessage(result):
????????print("test_sesndMessage():", result)
????????factory.p.sendMessage('python client', 'very nice message')

????reactor.connectTCP("127.0.0.1", 8080, factory)
????return (d, factory)


if __name__ == '__main__':
????runIt()
????reactor.run()


From romanmescheryakov at yandex.ru  Tue Jan 17 07:06:35 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 17 Jan 2017 17:06:35 +0300
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
Message-ID: <4889121484661995@web7h.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/fb0151c0/attachment.html>

From twisted-python at 2xlp.com  Tue Jan 17 08:56:13 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 17 Jan 2017 10:56:13 -0500
Subject: [Twisted-Python] suggestions sought on multi-service
	application dealing with shared database issue
In-Reply-To: <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
Message-ID: <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>


On Jan 17, 2017, at 5:08 AM, Glyph Lefkowitz wrote:
> 
> It depends if it's easier to keep track of when changes happen, or determine what the current state is.
> 
> If it's easier to keep track of when changes happen, I would recommend calling `setServiceParent` to add/remove the service to the active service hierarchy.  (This will call `startService` / `stopService` for you automatically, as well as cooperating with things like ^c so it's better than calling them yourself).
> 
> If it's easier to query the current state, then a conditional in the timer is a lot simpler.

Thanks for the quick reply.

Can you point to some docs about setServiceParent being used to remove the service?  I couldn't find that anywhere.

I'm leaning towards that approach, because it would just consolidate where I write conditional (one place vs 9 services).  I had intended to run nagios, but got lazy and just installed monit, which was took under 3 minutes to install and configure to invoke an alert and touch/remove a marker on the filesystem to indicate state.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/853318eb/attachment.html>

From romanmescheryakov at yandex.ru  Tue Jan 17 10:53:01 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 17 Jan 2017 20:53:01 +0300
Subject: [Twisted-Python] Strange ImportError after switching from OS
	package to pip
Message-ID: <6004951484675581@web11g.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/b9b59e64/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: master_player2.tac
Type: application/octet-stream
Size: 1166 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/b9b59e64/attachment-0001.obj>

From exarkun at twistedmatrix.com  Tue Jan 17 11:03:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 17 Jan 2017 13:03:57 -0500
Subject: [Twisted-Python] Strange ImportError after switching from OS
 package to pip
In-Reply-To: <6004951484675581@web11g.yandex.ru>
References: <6004951484675581@web11g.yandex.ru>
Message-ID: <CAEeXt4NTvsshbt1UfHeu3gzvY2=JzUby7Quh5Y3Q_Bwao65TxA@mail.gmail.com>

On Tue, Jan 17, 2017 at 12:53 PM, ????? ????????? <
romanmescheryakov at yandex.ru> wrote:

> *Hi everyone! The 14.0.2 version of Twisted is latest that is available
> for Raspbian as a package, so until today I used it. I run my Twisted
> application in the following way:*
>
>
> *twistd -ny master_player2.tac*
>
>
> *There were no problems with starting my application.*
>
> *Yesterday I started facing strange problem with unjellying which looked
> like a bug. So I decided to remove old package version of Twisted
> (installed using apt-get) and install latest version using pip (which was
> 16.6.0). The commands I issued were (typing by memory):*
>
>
Seems likely related to
http://twistedmatrix.com/pipermail/twisted-python/2017-January/031021.html

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/a6f59209/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 17 16:41:20 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:41:20 -0800
Subject: [Twisted-Python]
 =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
 =?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <4889121484661995@web7h.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
 <4889121484661995@web7h.yandex.ru>
Message-ID: <EFF2AB60-7C13-4120-BE4D-DE7DCE3EF60F@twistedmatrix.com>


> On Jan 17, 2017, at 6:06 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> 17.01.2017, 09:52, "Glyph Lefkowitz" <glyph at twistedmatrix.com>:
>>  
> 
>> This is untested but hopefully it will be close enough to put you on your way.  Make sense?
> 
>  
> This works perfectly! Thank you very much! :)

Glad we could help!

-g

From glyph at twistedmatrix.com  Tue Jan 17 16:42:02 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:42:02 -0800
Subject: [Twisted-Python] suggestions sought on multi-service
 application dealing with shared database issue
In-Reply-To: <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
 <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
Message-ID: <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>


> On Jan 17, 2017, at 7:56 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
> Can you point to some docs about setServiceParent being used to remove the service?  I couldn't find that anywhere.

Sorry, I meant you should use https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent <https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent> disownServiceParent.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/ef28417f/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 17 16:48:01 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:48:01 -0800
Subject: [Twisted-Python] Strange ImportError after switching from OS
 package to pip
In-Reply-To: <6004951484675581@web11g.yandex.ru>
References: <6004951484675581@web11g.yandex.ru>
Message-ID: <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>


> On Jan 17, 2017, at 9:53 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! The 14.0.2 version of Twisted is latest that is available for Raspbian as a package, so until today I used it. I run my Twisted application in the following way:
> twistd -ny master_player2.tac
> There were no problems with starting my application.
> Yesterday I started facing strange problem with unjellying which looked like a bug. So I decided to remove old package version of Twisted (installed using apt-get) and install latest version using pip (which was 16.6.0). The commands I issued were (typing by memory):
>  
> sudo apt-get purge python-twisted
> sudo apt-get autoremove
> sudo pip install Twisted

I should point out here that you should not modify your operating system like this.  If /usr/ is managed with 'apt', then let it do that; 'pip' and 'apt' can't manage the same files without stomping on each other.  Better would be to create a virtualenv for your application and 'pip install Twisted[tls,http2]' in there.

In this specific case, on a raspberry pi which is purpose-built, you'll probably be fine, but `sudo pip install` is just a bad habit to get into.

> After issuing these commands, without rebooting, I tried running my program as usual:
> ...
> exceptions.ImportError: No module named shared
> Failed to load application: No module named shared

Try `PYTHONPATH=.` on the command line before `twistd`.

(Also, you might want to try `twist` instead, then you don't need the `-n` option...)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/1d11dce0/attachment.html>

From twisted-python at 2xlp.com  Tue Jan 17 17:56:50 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 17 Jan 2017 19:56:50 -0500
Subject: [Twisted-Python] suggestions sought on multi-service
	application dealing with shared database issue
In-Reply-To: <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
 <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
 <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>
Message-ID: <91D4D96E-3A13-47CD-A083-BD3678DB213C@2xlp.com>


On Jan 17, 2017, at 6:42 PM, Glyph Lefkowitz wrote:

> 
> Sorry, I meant you should use https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent disownServiceParent.
> 

wonderful!  thanks! so much!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170117/524b6179/attachment.html>

From romanmescheryakov at yandex.ru  Wed Jan 18 00:59:00 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Wed, 18 Jan 2017 10:59:00 +0300
Subject: [Twisted-Python] Strange ImportError after switching from OS
	package to pip
In-Reply-To: <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>
References: <6004951484675581@web11g.yandex.ru>
 <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>
Message-ID: <5718771484726340@web23m.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170118/02878d3c/attachment.html>

From wolfgang.kde at rohdewald.de  Thu Jan 19 18:05:57 2017
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Fri, 20 Jan 2017 02:05:57 +0100
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
Message-ID: <106067578.pCpfLDCRkk@skull>

Am Montag, 16. Januar 2017, 22:50:36 CET schrieb Glyph Lefkowitz:
> This is untested but hopefully it will be close enough to put you on your
> way.  Make sense?

if you plan to use the portal/realm/avatar things later on, 
you can use avatar.source()

-- 
Wolfgang


From romanmescheryakov at yandex.ru  Fri Jan 20 02:33:36 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Fri, 20 Jan 2017 12:33:36 +0300
Subject: [Twisted-Python] =?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
	=?utf-8?q?_Logger_instance?=
Message-ID: <3743771484904816@web24h.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170120/42ed299f/attachment.html>

From ok9 at a.xpbsx.com  Fri Jan 20 12:50:50 2017
From: ok9 at a.xpbsx.com (Sunsesoft.Du)
Date: Sat, 21 Jan 2017 03:50:50 +0800
Subject: [Twisted-Python] =?gb2312?b?zeLDs8jtvP7X1Nb30dC3oqOswfnE6rv9wNs=?=
	=?gb2312?b?tcTN4sOzyO28/sa3xcY=?=
Message-ID: <201701210350508165556@a.xpbsx.com>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170121/965f3b5b/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 20 22:53:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Jan 2017 21:53:18 -0800
Subject: [Twisted-Python]
 =?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
 =?utf-8?q?_Logger_instance?=
In-Reply-To: <3743771484904816@web24h.yandex.ru>
References: <3743771484904816@web24h.yandex.ru>
Message-ID: <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>

> On Jan 20, 2017, at 1:33 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> I expect the text between ?[? and ?#? to be ?ad_hoc?, but it is auto-generated name instead. Am I doing something wrong or this is a bug?

This is indeed a bug!  And a pretty serious one; it's explicitly documented to work otherwise.  Please file it.

The reason that this happens is that the 'namespace' field is filled out by the descriptor (__get__ method) of the `Logger` object when it is bound to `self`.

You can work around this in the meanwhile by changing your example to be like so:


import sys
from twisted.logger import (Logger, textFileLogObserver)

observer = textFileLogObserver(sys.stdout)

class MyClass:
    @property
    def log(self):
        return Logger(namespace="ad_hoc", observer=observer, source=self)

    def __init__(self):
        self.log.info("MyClass.__init__ called!")

    def __del__(self):
        self.log.info("Bye!")

obj = MyClass()

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170120/46db2fc7/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 20 23:21:03 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Jan 2017 22:21:03 -0800
Subject: [Twisted-Python] conch problem with ecdsa-sha2-nistp256 host
	key?
In-Reply-To: <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
References: <CAG=rPVeh1V-knqaCq=hmhhbZVbnTEcibTHWfY6J07=QhMV2t_Q@mail.gmail.com>
 <20161202030124.GA19532@hammal>
 <1553C08C-AA06-4FB3-90DC-11D881295764@twistedmatrix.com>
 <CAG=rPVc-ahNjN+br2MV-S5rTng71Y1jvR94oXJaZed+CZhskxw@mail.gmail.com>
 <E464AABC-DB66-44E6-9482-594254B907EA@twistedmatrix.com>
 <CAG=rPVdKNnD-gs3Aj+20HG-5BLJOmh7KEPUab5fD2A6P=ME96Q@mail.gmail.com>
 <720D721B-8360-43BE-8371-2DE572E18DF4@twistedmatrix.com>
 <CAG=rPVe1=ZWf19tFbJxuvLzpB62w5JSXf+cJ7hFYC83Xac7c=A@mail.gmail.com>
 <A224B127-D889-485E-8007-3D16592305E6@twistedmatrix.com>
 <CAG=rPVdiZSq4N+vx7na2yJMaNwh=AgUoNDBgBq_jNsXs+ghsOA@mail.gmail.com>
 <7B22DAAB-497F-49EC-9E31-64C061F6C8FE@twistedmatrix.com>
 <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
Message-ID: <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>


> On Dec 21, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Wed, Dec 21, 2016 at 4:46 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> 
> Can you file a new ticket for each of these?  The ordering thing seems super low priority, but not being able to receive multiple host keys is definitely a spec violation.
> 
> Thanks for figuring it out,
> 
> 
> Can you try these two patches, combined in one workspace ?
> 
> https://github.com/twisted/twisted/pull/640 <https://github.com/twisted/twisted/pull/640>
> https://github.com/twisted/twisted/pull/642 <https://github.com/twisted/twisted/pull/642>
I finally got around to trying this, and was baffled as to why the behavior wasn't different between trunk and trunk-with-merged-PRs; then I realized the commits from both were already in trunk :-).  Seems to work great now vs. 16.0 - thank you for fixing this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170120/70ca775c/attachment.html>

From rodrigc at crodrigues.org  Sat Jan 21 16:58:04 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 21 Jan 2017 15:58:04 -0800
Subject: [Twisted-Python] conch problem with ecdsa-sha2-nistp256 host
	key?
In-Reply-To: <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>
References: <CAG=rPVeh1V-knqaCq=hmhhbZVbnTEcibTHWfY6J07=QhMV2t_Q@mail.gmail.com>
 <20161202030124.GA19532@hammal>
 <1553C08C-AA06-4FB3-90DC-11D881295764@twistedmatrix.com>
 <CAG=rPVc-ahNjN+br2MV-S5rTng71Y1jvR94oXJaZed+CZhskxw@mail.gmail.com>
 <E464AABC-DB66-44E6-9482-594254B907EA@twistedmatrix.com>
 <CAG=rPVdKNnD-gs3Aj+20HG-5BLJOmh7KEPUab5fD2A6P=ME96Q@mail.gmail.com>
 <720D721B-8360-43BE-8371-2DE572E18DF4@twistedmatrix.com>
 <CAG=rPVe1=ZWf19tFbJxuvLzpB62w5JSXf+cJ7hFYC83Xac7c=A@mail.gmail.com>
 <A224B127-D889-485E-8007-3D16592305E6@twistedmatrix.com>
 <CAG=rPVdiZSq4N+vx7na2yJMaNwh=AgUoNDBgBq_jNsXs+ghsOA@mail.gmail.com>
 <7B22DAAB-497F-49EC-9E31-64C061F6C8FE@twistedmatrix.com>
 <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
 <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>
Message-ID: <CAG=rPVfRKVvUQ3tOYUSL+Qq_fkbvdGe7xgVY8+6OvbF65-XjAw@mail.gmail.com>

On Fri, Jan 20, 2017 at 10:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
>
> I finally got around to trying this, and was baffled as to why the
> behavior wasn't different between trunk and trunk-with-merged-PRs; then I
> realized the commits from both were already in trunk :-).  Seems to work
> great now vs. 16.0 - thank you for fixing this!
>
>
Many thanks to the0id  Abhishek Choudhary for doing this to add ECDSA
support to conch.
I just fixed up some of the rough edges in conch.

One minor thing I noticed about conch that deviates from the OpenSSH client
is that conch wants to write two entries in ~/.ssh/known_hosts for each
host it
connects to:
- one entry for the hostname
- one entry for the IP address

If the entry doesn't exist already, then the encoded form of the hostname
is written, so it looks like:

|1|8QluEPLDr6TMoscEvJPcpzFGhGo=|5wLvN+5WhahGWukK2XtBFd/tjaQ=
ecdsa-sha2-nistp256
AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBmhQ2+fYcGOOdLqOsRQ5wzvQjP9K1tpF9+UTwLi9UIBIWOySfJBDtkZvycrIYcNolofySA//ffJA4ka0EvfAbg=

|1|EHrWwxCedWehiySnBrsY8YW/9TE=|uDqYMkrF0rvXgQIdDsUhBgPzKEo=
ecdsa-sha2-nistp256
AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBmhQ2+fYcGOOdLqOsRQ5wzvQjP9K1tpF9+UTwLi9UIBIWOySfJBDtkZvycrIYcNolofySA//ffJA4ka0EvfAbg=
This seems quite weird to me, and I'm not sure why this behavior was
implemented
differently from the OpenSSH client.

I didn't change this behavior, though.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170121/7f54e398/attachment.html>

From rodrigc at crodrigues.org  Sat Jan 21 19:15:45 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 21 Jan 2017 18:15:45 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
	yield and Python 3 in buildbot
Message-ID: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>

Hi,

I have been submitting many patches to get buildbot working on Python 3:

http://bit.ly/2jCCMPW

I have run into one problem involving inlineCallback, Deferred, and yield
which I am having difficulty solving.  Can someone help me?

If I do the following inside a Python 3 virtualenv to set things up:

git clone https://github.com/buildbot/buildbot buildbot_test
cd buildbot_test
pip install -e pkg
pip install -e worker
pip install -e 'master[tls,tests]'

trial buildbot.test.unit.test_process_buildrequestdistributor
I get this error:

==================================================================
  File
"/Users/crodrigues/buildbot_test/master/buildbot/process/buildrequestdistributor.py",
line 93, in <lambda>^M
    brdicts.sort(key=lambda brd: brd['submitted_at'])
builtins.TypeError: 'Deferred' object is not subscriptable

buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db^M
==================================================================


The code causing this problem is on line 93 of
master/buildbot/process/buildrequestdistributor.py:

 78     @defer.inlineCallbacks
 79     def _fetchUnclaimedBrdicts(self):
 80         # Sets up a cache of all the unclaimed brdicts. The cache is
 81         # saved at self.unclaimedBrdicts cache. If the cache already
 82         # exists, this function does nothing. If a refetch is desired,
set
 83         # the self.unclaimedBrdicts to None before calling."""
 84         if self.unclaimedBrdicts is None:
 85             # TODO: use order of the DATA API
 86             brdicts = yield self.master.data.get(('builders',
 87                                                   (yield
self.bldr.getBuilderId()),
 88                                                   'buildrequests'),
 89
 [resultspec.Filter('claimed',
 90
'eq',
 91
[False])])
 92             # sort by submitted_at, so the first is the oldest
 93             brdicts.sort(key=lambda brd: brd['submitted_at'])
 94             self.unclaimedBrdicts = brdicts
 95         defer.returnValue(self.unclaimedBrdicts)

If I run the test on Python 2, I don't get the error, and on line 93,
brdicts is a dict.
However, if I run the test on Python 3, brdicts is a Deferred, thus the
error.

Can someone point me in the right direction for solving this problem?

I am not so familiar with the differences in generators and Deferreds
between Python 2 and 3.

Thanks.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170121/bb273520/attachment.html>

From glyph at twistedmatrix.com  Sat Jan 21 21:06:19 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jan 2017 20:06:19 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
Message-ID: <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>


> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> If I run the test on Python 2, I don't get the error, and on line 93, brdicts is a dict.
> However, if I run the test on Python 3, brdicts is a Deferred, thus the error.

This really ought to be impossible.  If I were seeing this, single-stepping through inlineCallbacks in pudb would probably be my next step.  Have you made any attempts to simplify it down to remove some of the buildbot-specific code?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170121/67b7f488/attachment.html>

From trac at twistedmatrix.com  Sun Jan 22 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Jan 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1485068719.71.358662516567930366@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/30c7b45c/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:15:15 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:15:15 -0500
Subject: [Twisted-Python] admin/pr_as_branch
Message-ID: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>

Hello,

I didn't find any hints about the workflow surrounding the
admin/pr_as_branch tool so I invented one and wrote it up on the wiki:

https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/03a77f04/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 22 18:19:22 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 17:19:22 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
Message-ID: <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>


> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
> 
> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
> 
> Jean-Paul

Thanks for writing this up.  The workflow is evolving organically.

However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/faf8358e/attachment.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:24:26 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:24:26 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
Message-ID: <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Hello,
>
> I didn't find any hints about the workflow surrounding the
> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>
> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>
> Jean-Paul
>
>
> Thanks for writing this up.  The workflow is evolving organically.
>
> However, the "close the PR" step confuses me.  If you do this, the
> original contributor won't be able to respond to feedback.  What is the
> desired effect of this second PR?
>


The idea I heard is that it provides a place to hang build failure-related
review comments.  I also had some vague notion that it would be the place
you'd look to see the complete CI results.

So.  Where should further reviews go and where do you find CI results, if
you don't create a new PR?

Jean-Paul



>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/368aeb3f/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 22 18:28:43 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 17:28:43 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
Message-ID: <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>


> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> Hello,
>> 
>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>> 
>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>> 
>> Jean-Paul
> 
> Thanks for writing this up.  The workflow is evolving organically.
> 
> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
> 
> 
> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
> 
> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?

You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)

As far as further reviews - on the existing PR too, same as usual.

You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/a91eab1f/attachment.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:31:37 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:31:37 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
Message-ID: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>> Hello,
>>
>> I didn't find any hints about the workflow surrounding the
>> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>
>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>>
>> Jean-Paul
>>
>>
>> Thanks for writing this up.  The workflow is evolving organically.
>>
>> However, the "close the PR" step confuses me.  If you do this, the
>> original contributor won't be able to respond to feedback.  What is the
>> desired effect of this second PR?
>>
>
>
> The idea I heard is that it provides a place to hang build failure-related
> review comments.  I also had some vague notion that it would be the place
> you'd look to see the complete CI results.
>
> So.  Where should further reviews go and where do you find CI results, if
> you don't create a new PR?
>
>
> You find the CI results on the existing PR; they'll be displayed there.
> You just need to make sure that a branch in the repo has the exact same
> commit ID when you push it as the PR has.  (Statuses are reported on
> commits, and triggered on pushes, so everything should just line up.)
>
>
After the branch in the repo is all set (which I assume pr_as_branch will
do), does CI notice without further help and start the necessary builds?


> As far as further reviews - on the existing PR too, same as usual.
>
> You will need to run the script again when the contributor pushes their
> response to a review.  One feature that would be useful is to not need to
> specify the branch name twice, but if you name the second pr_as_branch
> invocation differently, it just means one more branch that should be
> deleted when looking at git branch --merged.
>
>
Yep, that makes sense.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/7c4785b7/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:51:13 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:51:13 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
Message-ID: <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:31 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>>
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
>>> exarkun at twistedmatrix.com> wrote:
>>>
>>> Hello,
>>>
>>> I didn't find any hints about the workflow surrounding the
>>> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>>
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>>>
>>> Jean-Paul
>>>
>>>
>>> Thanks for writing this up.  The workflow is evolving organically.
>>>
>>> However, the "close the PR" step confuses me.  If you do this, the
>>> original contributor won't be able to respond to feedback.  What is the
>>> desired effect of this second PR?
>>>
>>
>>
>> The idea I heard is that it provides a place to hang build
>> failure-related review comments.  I also had some vague notion that it
>> would be the place you'd look to see the complete CI results.
>>
>> So.  Where should further reviews go and where do you find CI results, if
>> you don't create a new PR?
>>
>>
>> You find the CI results on the existing PR; they'll be displayed there.
>> You just need to make sure that a branch in the repo has the exact same
>> commit ID when you push it as the PR has.  (Statuses are reported on
>> commits, and triggered on pushes, so everything should just line up.)
>>
>>
> After the branch in the repo is all set (which I assume pr_as_branch will
> do), does CI notice without further help and start the necessary builds?
>
>
>> As far as further reviews - on the existing PR too, same as usual.
>>
>> You will need to run the script again when the contributor pushes their
>> response to a review.  One feature that would be useful is to not need to
>> specify the branch name twice, but if you name the second pr_as_branch
>> invocation differently, it just means one more branch that should be
>> deleted when looking at git branch --merged.
>>
>>
> Yep, that makes sense.
>

Updated:
https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75



>
> Jean-Paul
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/d25bd4eb/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 22 21:21:11 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 20:21:11 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
Message-ID: <12259365-512D-4114-B255-6BFD937B5648@twistedmatrix.com>


> On Jan 22, 2017, at 5:31 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>>> 
>>> Hello,
>>> 
>>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>> 
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>>> 
>>> Jean-Paul
>> 
>> Thanks for writing this up.  The workflow is evolving organically.
>> 
>> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
>> 
>> 
>> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
>> 
>> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?
> 
> You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)
> 
> 
> After the branch in the repo is all set (which I assume pr_as_branch will do), does CI notice without further help and start the necessary builds?

It should, yes.  It's buildbot that notices, and (my understanding is) the hook buildbot uses is "push" not "new PR".  It runs for branches in the repo even if they don't have a PR yet.

> As far as further reviews - on the existing PR too, same as usual.
> 
> You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.
> 
> 
> Yep, that makes sense.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/f94c8c11/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 22 21:21:21 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 20:21:21 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
 <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>
Message-ID: <E75F3D3A-5262-4999-AAED-4D27612E92FE@twistedmatrix.com>


> On Jan 22, 2017, at 5:51 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:31 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>>> 
>>> Hello,
>>> 
>>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>> 
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>>> 
>>> Jean-Paul
>> 
>> Thanks for writing this up.  The workflow is evolving organically.
>> 
>> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
>> 
>> 
>> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
>> 
>> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?
> 
> You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)
> 
> 
> After the branch in the repo is all set (which I assume pr_as_branch will do), does CI notice without further help and start the necessary builds?
>  
> As far as further reviews - on the existing PR too, same as usual.
> 
> You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.
> 
> 
> Yep, that makes sense.
> 
> Updated: https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75>
Thanks!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170122/4330f6ab/attachment-0001.html>

From romanmescheryakov at yandex.ru  Mon Jan 23 01:26:46 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 23 Jan 2017 11:26:46 +0300
Subject: [Twisted-Python]
	=?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
	=?utf-8?q?_Logger_instance?=
In-Reply-To: <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>
References: <3743771484904816@web24h.yandex.ru>
 <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>
Message-ID: <4774291485160006@web34m.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170123/21a26bf6/attachment.html>

From rodrigc at crodrigues.org  Mon Jan 23 17:08:57 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 23 Jan 2017 16:08:57 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
Message-ID: <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>

On Sat, Jan 21, 2017 at 8:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
> If I run the test on Python 2, I don't get the error, and on line 93,
> brdicts is a dict.
> However, if I run the test on Python 3, brdicts is a Deferred, thus the
> error.
>
>
> This really ought to be impossible.  If I were seeing this,
> single-stepping through inlineCallbacks in pudb would probably be my next
> step.  Have you made any attempts to simplify it down to remove some of the
> buildbot-specific code?
>
> -glyph
>
>

I did some more debugging.  The callstack is quite deep. :/
I used this command to trigger the error:

trial
 buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db

I found in this function in buildbot's BuildRequestsEndpoint.get() function
(
https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146
) there is this line:



*        defer.returnValue(            [(yield self.db2data(br)) for br in
buildrequests])*
On Python 2, this line returns:
  an object list
  each list entry is a dictionary of name/value pairs that looks like:

[{'buildrequestid': 10, 'complete': False, 'waited_for': False,
'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
'priority': 0}]

On Python 3, this returns:
  an object <generator object BuildRequestsEndpoint.get.<locals>.<listcomp>
  of type <class 'generator'>

The self.db2data() function returns defer.succeed(data) (
https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L32
)

So it looks like on Python 3, this is not getting evaluated properly, and
the upper layer is trying
to index a Deferred instead of a list of dictionaries.

I'm not so familiar with generators/Deferreds in Py2 vs. Py3.  What is the
best way
to fix this to get consistent behavior on Py2 and Py3?

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170123/63885a1d/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan 23 18:10:56 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 23 Jan 2017 20:10:56 -0500
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
Message-ID: <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>

On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
wrote:

>
>
> On Sat, Jan 21, 2017 at 8:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>> If I run the test on Python 2, I don't get the error, and on line 93,
>> brdicts is a dict.
>> However, if I run the test on Python 3, brdicts is a Deferred, thus the
>> error.
>>
>>
>> This really ought to be impossible.  If I were seeing this,
>> single-stepping through inlineCallbacks in pudb would probably be my next
>> step.  Have you made any attempts to simplify it down to remove some of the
>> buildbot-specific code?
>>
>> -glyph
>>
>>
>
> I did some more debugging.  The callstack is quite deep. :/
> I used this command to trigger the error:
>
> trial  buildbot.test.unit.test_process_buildrequestdistributor.
> TestMaybeStartBuilds.test_slow_db
>
> I found in this function in buildbot's BuildRequestsEndpoint.get()
> function ( https://github.com/buildbot/buildbot/blob/master/master/
> buildbot/data/buildrequests.py#L146 ) there is this line:
>
>
>
> *        defer.returnValue(            [(yield self.db2data(br)) for br in
> buildrequests])*
> On Python 2, this line returns:
>   an object list
>   each list entry is a dictionary of name/value pairs that looks like:
>
> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
> 'priority': 0}]
>
> On Python 3, this returns:
>   an object <generator object BuildRequestsEndpoint.get.<
> locals>.<listcomp>
>   of type <class 'generator'>
>
>
Yep.

On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
comprehension.  It will have len(buildrequests) elements and each will be
the value sent back in to the generator via the yield expression.

On Python 3, the same expression is a list of one element which is a
generator expression.

This form is much clearer, I think, and behaves as intended on both
versions of Python:

    results = []
    for br in buildrequests:
        results.append((yield self.db2data(br)))
    defer.returnValue(results)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170123/23845ae8/attachment.html>

From rodrigc at crodrigues.org  Tue Jan 24 13:48:07 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Tue, 24 Jan 2017 12:48:07 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
Message-ID: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>

On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>>
>>
>>
>> I did some more debugging.  The callstack is quite deep. :/
>> I used this command to trigger the error:
>>
>> trial  buildbot.test.unit.test_process_buildrequestdistributor.Tes
>> tMaybeStartBuilds.test_slow_db
>>
>> I found in this function in buildbot's BuildRequestsEndpoint.get()
>> function ( https://github.com/buildbot/buildbot/blob/master/master/buil
>> dbot/data/buildrequests.py#L146 ) there is this line:
>>
>>
>>
>> *        defer.returnValue(            [(yield self.db2data(br)) for br
>> in buildrequests])*
>> On Python 2, this line returns:
>>   an object list
>>   each list entry is a dictionary of name/value pairs that looks like:
>>
>> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
>> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
>> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
>> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
>> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
>> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
>> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>> 'priority': 0}]
>>
>> On Python 3, this returns:
>>   an object <generator object BuildRequestsEndpoint.get.<loc
>> als>.<listcomp>
>>   of type <class 'generator'>
>>
>>
> Yep.
>
> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
> comprehension.  It will have len(buildrequests) elements and each will be
> the value sent back in to the generator via the yield expression.
>
> On Python 3, the same expression is a list of one element which is a
> generator expression.
>
> This form is much clearer, I think, and behaves as intended on both
> versions of Python:
>
>     results = []
>     for br in buildrequests:
>         results.append((yield self.db2data(br)))
>     defer.returnValue(results)
>
>
>
Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.

 I'm not so familiar with generator expressions and Deferred's so have been
playing
around with things to try to understand.

I went back to the problem code, and changed:


*        defer.returnValue(            [(yield self.db2data(br)) for br in
buildrequests])*

to:

*       defer.returnValue(*
*           list([**(yield self.db2data(br)) for br in buildrequests])*

and ran the code under Python 3 and got a return value of:

           [ Deferred ]

instead of:
           [ {......} ]

where the Deferred.results value was the dictionary.

How does Python 2 directly go to returning the dictionary out of the
Deferred,
while Python 3 returns the Deferred inside the list?  self.db2data()
returns a Deferred.

Thanks.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170124/ccb10c1a/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 24 14:14:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jan 2017 13:14:32 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
Message-ID: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>


> On Jan 24, 2017, at 12:48 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
> 
> 
> 
> I did some more debugging.  The callstack is quite deep. :/
> I used this command to trigger the error:
> 
> trial  buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db
> 
> I found in this function in buildbot's BuildRequestsEndpoint.get() function ( https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146 <https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146> ) there is this line:
> 
>         defer.returnValue(
>             [(yield self.db2data(br)) for br in buildrequests])
> 
> On Python 2, this line returns:
>   an object list
>   each list entry is a dictionary of name/value pairs that looks like:
> [{'buildrequestid': 10, 'complete': False, 'waited_for': False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6, 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None, 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for': False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13, 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None, 'priority': 0}]
> 
> 
> On Python 3, this returns:
>   an object <generator object BuildRequestsEndpoint.get.<locals>.<listcomp>
>   of type <class 'generator'>
> 
> 
> Yep.
> 
> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list comprehension.  It will have len(buildrequests) elements and each will be the value sent back in to the generator via the yield expression.
> 
> On Python 3, the same expression is a list of one element which is a generator expression.
> 
> This form is much clearer, I think, and behaves as intended on both versions of Python:
> 
>     results = []
>     for br in buildrequests:
>         results.append((yield self.db2data(br)))
>     defer.returnValue(results)
> 
> 
> 
> Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.
> 
>  I'm not so familiar with generator expressions and Deferred's so have been playing
> around with things to try to understand.
> 
> I went back to the problem code, and changed:
> 
>         defer.returnValue(
>             [(yield self.db2data(br)) for br in buildrequests])
> 
> to:
> 
>        defer.returnValue(
>            list([(yield self.db2data(br)) for br in buildrequests])
> 
> and ran the code under Python 3 and got a return value of:
> 
>            [ Deferred ]
> 
> instead of:
>            [ {......} ]
> 
> where the Deferred.results value was the dictionary.
> 
> How does Python 2 directly go to returning the dictionary out of the Deferred,
> while Python 3 returns the Deferred inside the list?  self.db2data() returns a Deferred.

I've encountered this before and quickly worked around it, but I think this might actually be a bug in python 3, or at least its documentation.

The language docs officially say that a "list display" (which is what I believe we're looking at here) "yields a new list object".  But that is not what I see here:

>>> [(yield 1) for x in range(10)]
<generator object <listcomp> at 0x10cd210f8>

That is a comprehension enclosed in square brackets, but I'm getting a generator object out rather than a list.

Is there a PEP for this that just hasn't updated the language reference?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170124/4302750e/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 24 14:17:25 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jan 2017 13:17:25 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
Message-ID: <96C1BBAA-48A7-4914-A4D5-8014B44F1964@twistedmatrix.com>


> On Jan 24, 2017, at 1:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> The language docs officially say that a "list display" (which is what I believe we're looking at here) "yields a new list object".  But that is not what I see here:
> 

I had intended to paste the reference, which is here: https://docs.python.org/2/reference/expressions.html#list-displays <https://docs.python.org/2/reference/expressions.html#list-displays>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170124/46a340f8/attachment-0001.html>

From p.mayers at imperial.ac.uk  Wed Jan 25 11:06:59 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 25 Jan 2017 18:06:59 +0000
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
Message-ID: <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>

On 24/01/2017 21:14, Glyph Lefkowitz wrote:

> I've encountered this before and quickly worked around it, but I think
> this might actually be a bug in python 3, or at least its documentation.
>
> The language docs officially say that a "list display" (which is what I
> believe we're looking at here) "yields a new list object".  But that is
> not what I see here:
>
>     >>> [(yield 1) for x in range(10)]

Related, see:

http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions

http://bugs.python.org/issue10544

Basically, don't use yield inside comprehensions if you don't want 
weirdness, AFAICT :o/


From rodrigc at crodrigues.org  Thu Jan 26 02:41:51 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 26 Jan 2017 01:41:51 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
Message-ID: <CAG=rPVf2mCSwL__Zj31cQsFPY4G4MM-p4YfwbRNA=B6kKCWTdw@mail.gmail.com>

On Tue, Jan 24, 2017 at 12:48 PM, Craig Rodrigues <rodrigc at crodrigues.org>
wrote:

>
>
> On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>>>
>>>
>>>
>>> I did some more debugging.  The callstack is quite deep. :/
>>> I used this command to trigger the error:
>>>
>>> trial  buildbot.test.unit.test_process_buildrequestdistributor.Tes
>>> tMaybeStartBuilds.test_slow_db
>>>
>>> I found in this function in buildbot's BuildRequestsEndpoint.get()
>>> function ( https://github.com/buildbot/buildbot/blob/master/master/buil
>>> dbot/data/buildrequests.py#L146 ) there is this line:
>>>
>>>
>>>
>>> *        defer.returnValue(            [(yield self.db2data(br)) for br
>>> in buildrequests])*
>>> On Python 2, this line returns:
>>>   an object list
>>>   each list entry is a dictionary of name/value pairs that looks like:
>>>
>>> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
>>> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
>>> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
>>> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>>> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
>>> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
>>> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
>>> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>>> 'priority': 0}]
>>>
>>> On Python 3, this returns:
>>>   an object <generator object BuildRequestsEndpoint.get.<loc
>>> als>.<listcomp>
>>>   of type <class 'generator'>
>>>
>>>
>> Yep.
>>
>> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
>> comprehension.  It will have len(buildrequests) elements and each will be
>> the value sent back in to the generator via the yield expression.
>>
>> On Python 3, the same expression is a list of one element which is a
>> generator expression.
>>
>> This form is much clearer, I think, and behaves as intended on both
>> versions of Python:
>>
>>     results = []
>>     for br in buildrequests:
>>         results.append((yield self.db2data(br)))
>>     defer.returnValue(results)
>>
>>
>>
> Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.
>
>  I'm not so familiar with generator expressions and Deferred's so have
> been playing
> around with things to try to understand.
>
> I went back to the problem code, and changed:
>
>
> *        defer.returnValue(            [(yield self.db2data(br)) for br in
> buildrequests])*
>
> to:
>
> *       defer.returnValue(*
> *           list([**(yield self.db2data(br)) for br in buildrequests])*
>
> and ran the code under Python 3 and got a return value of:
>
>            [ Deferred ]
>
> instead of:
>            [ {......} ]
>
> where the Deferred.results value was the dictionary.
>
> How does Python 2 directly go to returning the dictionary out of the
> Deferred,
> while Python 3 returns the Deferred inside the list?  self.db2data()
> returns a Deferred.
>
> Thanks.
>
> --
> Craig
>


On the python-dev mailing list, Joe Jevnik gave a really excellent
explanation of what
is going on here, down to the Python bytecode level:

https://mail.python.org/pipermail/python-dev/2017-January/147244.html


--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170126/1af9491c/attachment.html>

From rodrigc at crodrigues.org  Thu Jan 26 02:45:37 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 26 Jan 2017 01:45:37 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
 <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
Message-ID: <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>

On Wed, Jan 25, 2017 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

>
> Related, see:
>
> http://stackoverflow.com/questions/32139885/yield-in-list-
> comprehensions-and-generator-expressions
>
> http://bugs.python.org/issue10544
>
> Basically, don't use yield inside comprehensions if you don't want
> weirdness, AFAICT :o/
>
>
Yes, that's the exact issue!
Pointed out to me on the python-dev list:

https://mail.python.org/pipermail/python-dev/2017-January/147242.html

My vote is that this is a bug in Python.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170126/53cdff9a/attachment.html>

From glyph at twistedmatrix.com  Thu Jan 26 15:34:04 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jan 2017 14:34:04 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
 <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
 <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>
Message-ID: <BD87974A-7701-4D82-87D3-D193F9609249@twistedmatrix.com>


> On Jan 26, 2017, at 1:45 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> On Wed, Jan 25, 2017 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
> Related, see:
> 
> http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions <http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions>
> 
> http://bugs.python.org/issue10544 <http://bugs.python.org/issue10544>
> 
> Basically, don't use yield inside comprehensions if you don't want weirdness, AFAICT :o/
> 
> 
> Yes, that's the exact issue!
> Pointed out to me on the python-dev list:
> 
> https://mail.python.org/pipermail/python-dev/2017-January/147242.html <https://mail.python.org/pipermail/python-dev/2017-January/147242.html>
> 
> My vote is that this is a bug in Python.

Discussing on that bug, I discovered that this is sort-of fixed in python 3.6; not for generators, but for coroutines.  You can have an 'async def' function that does 'await' inside a generator and it should work.

Note that this is new in 3.6, and doesn't work in 3.5.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170126/7c01cb48/attachment.html>

From romanmescheryakov at yandex.ru  Fri Jan 27 02:28:19 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Fri, 27 Jan 2017 12:28:19 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
Message-ID: <2818651485509299@web1h.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/5da53ee7/attachment.html>

From rodrigc at crodrigues.org  Fri Jan 27 15:03:16 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Fri, 27 Jan 2017 14:03:16 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
Message-ID: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>

Hi,

I can't seem to create a ticket in Trac.  Can someone look?

--

Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/e8d80076/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 27 15:29:54 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 14:29:54 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
Message-ID: <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>


> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> I can't seem to create a ticket in Trac.  Can someone look?
> 
I can create tickets.  What behavior do you see?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/b94bc450/attachment.html>

From rodrigc at crodrigues.org  Fri Jan 27 16:12:43 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Fri, 27 Jan 2017 15:12:43 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
Message-ID: <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>

On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
> Hi,
>
> I can't seem to create a ticket in Trac.  Can someone look?
>
> I can create tickets.  What behavior do you see?
>
>
After entering all the fields to create the ticket, and then clicking
submit, it would just hang
without creating the ticket.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/b2f6a27b/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:21:10 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:21:10 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
Message-ID: <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>


> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> Hi,
>> I can't seem to create a ticket in Trac.  Can someone look?
>> 
> I can create tickets.  What behavior do you see?
> 
> 
> After entering all the fields to create the ticket, and then clicking submit, it would just hang
> without creating the ticket.

Forever? No timeout?  Just the HTTP POST never returns?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/2a412d10/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:46:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:46:00 -0800
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <2818651485509299@web1h.yandex.ru>
References: <2818651485509299@web1h.yandex.ru>
Message-ID: <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>


> On Jan 27, 2017, at 1:28 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! On the Documentation <http://twistedmatrix.com/trac/wiki/Documentation> wiki page there is a ?Mail lists? section with the ?Search the ?twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>? link. I clicked the link (http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i> which redirected to https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i <https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i>) and entered there this search request: ?How to get caller?s IP address in Perspective Broker server? (which is a title of question asked by me some time ago in this mailing list). The search didn?t find that question, and the newest result was of year 2009. If I search the same string in the main Google search, it is found here: http://www.mail-archive.com/twisted-python at twistedmatrix.com/ <http://www.mail-archive.com/twisted-python at twistedmatrix.com/>. Maybe the ?Search the ?twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>? link should be updated?
>  

Yep.  Do you need wiki edit permissions to do so?

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/b08d7c78/attachment.html>

From exarkun at twistedmatrix.com  Fri Jan 27 16:49:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 18:49:33 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
Message-ID: <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>

On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>
>
> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>> Hi,
>>
>> I can't seem to create a ticket in Trac.  Can someone look?
>>
>> I can create tickets.  What behavior do you see?
>>
>>
> After entering all the fields to create the ticket, and then clicking
> submit, it would just hang
> without creating the ticket.
>
>
> Forever? No timeout?  Just the HTTP POST never returns?
>
>
FWIW, I've been experiencing similar problems.  In my case, the POST
doesn't return for as long as I care to wait (in one case, around 20
minutes).  Re-submitting, sometimes 3-5 times, generally results in a
successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit)
on Ubuntu 16.10.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/688276a0/attachment-0001.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:52:27 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:52:27 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
Message-ID: <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>


> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> 
>> 
>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> Hi,
>>> I can't seem to create a ticket in Trac.  Can someone look?
>>> 
>> I can create tickets.  What behavior do you see?
>> 
>> 
>> After entering all the fields to create the ticket, and then clicking submit, it would just hang
>> without creating the ticket.
> 
> Forever? No timeout?  Just the HTTP POST never returns?
> 
> 
> FWIW, I've been experiencing similar problems.  In my case, the POST doesn't return for as long as I care to wait (in one case, around 20 minutes).  Re-submitting, sometimes 3-5 times, generally results in a successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit) on Ubuntu 16.10.

I'm using Safari 10.0.3 (12602.4.8) on Sierra.

Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/>.  Are either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/7bf291c7/attachment.html>

From exarkun at twistedmatrix.com  Fri Jan 27 16:53:45 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 18:53:45 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
Message-ID: <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>

On Fri, Jan 27, 2017 at 6:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
>  wrote:
>
>>
>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>>
>>
>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>>
>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>>> wrote:
>>>
>>> Hi,
>>>
>>> I can't seem to create a ticket in Trac.  Can someone look?
>>>
>>> I can create tickets.  What behavior do you see?
>>>
>>>
>> After entering all the fields to create the ticket, and then clicking
>> submit, it would just hang
>> without creating the ticket.
>>
>>
>> Forever? No timeout?  Just the HTTP POST never returns?
>>
>>
> FWIW, I've been experiencing similar problems.  In my case, the POST
> doesn't return for as long as I care to wait (in one case, around 20
> minutes).  Re-submitting, sometimes 3-5 times, generally results in a
> successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit)
> on Ubuntu 16.10.
>
>
> I'm using Safari 10.0.3 (12602.4.8) on Sierra.
>
> Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com.  Are
> either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps
> one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.
>

My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar suggests
this is because lack of ALPN in twistedmatrix.com's OpenSSL and lack of NPN
in Chrome).

Jean-Paul

>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/0c797857/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 27 17:09:55 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 16:09:55 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
Message-ID: <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>


> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 6:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> 
>>> 
>>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>> 
>>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>>> 
>>>> Hi,
>>>> I can't seem to create a ticket in Trac.  Can someone look?
>>>> 
>>> I can create tickets.  What behavior do you see?
>>> 
>>> 
>>> After entering all the fields to create the ticket, and then clicking submit, it would just hang
>>> without creating the ticket.
>> 
>> Forever? No timeout?  Just the HTTP POST never returns?
>> 
>> 
>> FWIW, I've been experiencing similar problems.  In my case, the POST doesn't return for as long as I care to wait (in one case, around 20 minutes).  Re-submitting, sometimes 3-5 times, generally results in a successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit) on Ubuntu 16.10.
> 
> I'm using Safari 10.0.3 (12602.4.8) on Sierra.
> 
> Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/>.  Are either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.
> 
> My browser is not using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/> (idnar suggests this is because lack of ALPN in twistedmatrix.com <http://twistedmatrix.com/>'s OpenSSL and lack of NPN in Chrome).

It might be interesting to upgrade to Twisted trunk to see if some of the HTTP server bugfixes that have landed will address this; however, I can't come up with a coherent theory as to why certain POSTs would just hang.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/f08c4aaa/attachment-0001.html>

From exarkun at twistedmatrix.com  Fri Jan 27 17:16:19 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 19:16:19 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
Message-ID: <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>

On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>
> My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar
> suggests this is because lack of ALPN in twistedmatrix.com's OpenSSL and
> lack of NPN in Chrome).
>
>
> It might be interesting to upgrade to Twisted trunk to see if some of the
> HTTP server bugfixes that have landed will address this; however, I can't
> come up with a coherent theory as to why certain POSTs would just hang.
>
>
I've yet to detect any pattern to the problem.  With no way to reliably
reproduce the problem and not other real metric for whether things are
getting better or worse, I don't think I could evaluate the results of any
changes.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/7177ac62/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 27 17:25:47 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 16:25:47 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
 <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
Message-ID: <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>


> On Jan 27, 2017, at 4:16 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> 
>> My browser is not using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/> (idnar suggests this is because lack of ALPN in twistedmatrix.com <http://twistedmatrix.com/>'s OpenSSL and lack of NPN in Chrome).
> 
> It might be interesting to upgrade to Twisted trunk to see if some of the HTTP server bugfixes that have landed will address this; however, I can't come up with a coherent theory as to why certain POSTs would just hang.
> 
> 
> I've yet to detect any pattern to the problem.  With no way to reliably reproduce the problem and not other real metric for whether things are getting better or worse, I don't think I could evaluate the results of any changes.

How often do you experience it?  Is it often enough that we could, say, check back in in a week?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/51ccf4e2/attachment.html>

From exarkun at twistedmatrix.com  Fri Jan 27 17:34:00 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 19:34:00 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
 <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
 <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>
Message-ID: <CAEeXt4O-MoTOCT8ckx8=fz=DubnUT3oioyi5zGdbUF3jQLVDcg@mail.gmail.com>

On Fri, Jan 27, 2017 at 7:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 4:16 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>>
>> My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar
>> suggests this is because lack of ALPN in twistedmatrix.com's OpenSSL and
>> lack of NPN in Chrome).
>>
>>
>> It might be interesting to upgrade to Twisted trunk to see if some of the
>> HTTP server bugfixes that have landed will address this; however, I can't
>> come up with a coherent theory as to why certain POSTs would just hang.
>>
>>
> I've yet to detect any pattern to the problem.  With no way to reliably
> reproduce the problem and not other real metric for whether things are
> getting better or worse, I don't think I could evaluate the results of any
> changes.
>
>
> How often do you experience it?  Is it often enough that we could, say,
> check back in in a week?
>

My dataset is pretty small...  Perhaps 6 or 7 times in the last 2 or 3
weeks?  I don't know how many POSTs I've done in that time.  Maybe a couple
dozen?  I could probably tell the difference if it were *completely* fixed
(or *completely* broken :) so it may be worth making the change on that
basis.

Jean-Paul



>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170127/c6aa9aba/attachment.html>

From romanmescheryakov at yandex.ru  Sat Jan 28 07:35:28 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Sat, 28 Jan 2017 17:35:28 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
Message-ID: <7304481485614128@web3m.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170128/b54818f7/attachment-0001.html>

From hawkowl at atleastfornow.net  Sat Jan 28 15:39:52 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 29 Jan 2017 09:39:52 +1100
Subject: [Twisted-Python] Twisted 17.1.0rc1 Release Candidate Announcement
Message-ID: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>

Hello everyone!

16.7 didn't go as well as planned, so I thought we'd try again in the new year! So, here is Twisted 17.1, the first release of 2017. It's got all the cool things that were going to be in 16.7, *and more*. Wow!

- twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
- twisted.web.server has had many cleanups revolving around timing out inactive clients.
- twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
- twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
- You can now call the new twist runner with `python -m twisted`.
- twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
- Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
- More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
- Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
- 60+ closed tickets.

You can get the tarball and the NEWS file at https://twistedmatrix.com/Releases/rc/17.1.0rc1/ <https://twistedmatrix.com/Releases/rc/17.1.0rc1/> , or you can try it out from PyPI:

    python -m pip install Twisted==17.1.0rc1

Please test it, and let me know how your applications fare, good or bad! If nothing comes up, 17.1 will release in a week.

A bit more hopeful this time,
    Amber Brown
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170129/18c13e56/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170129/18c13e56/attachment.pgp>

From trac at twistedmatrix.com  Sun Jan 29 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Jan 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1485673519.67.8962399806405744679@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170129/7df08fb2/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 29 18:30:45 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jan 2017 17:30:45 -0800
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <7304481485614128@web3m.yandex.ru>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
 <7304481485614128@web3m.yandex.ru>
Message-ID: <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>

You should have edit permission now.

-glyph

> On Jan 28, 2017, at 6:35 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Yes, because now I can't see a link to edit the Documentation page. My login is RomanMeR
>  
> -- 
> Kind regards, Roman Mescheryakov
>  
>  
>  
> 28.01.2017, 02:47, "Glyph Lefkowitz" <glyph at twistedmatrix.com>:
>>  
>>> On Jan 27, 2017, at 1:28 AM, ????? ????????? <romanmescheryakov at yandex.ru <mailto:romanmescheryakov at yandex.ru>> wrote:
>>>  
>>> Hi everyone! On the Documentation <http://twistedmatrix.com/trac/wiki/Documentation> wiki page there is a ?Mail lists? section with the ?Search the ?twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>? link. I clicked the link (http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i> which redirected to https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i <https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i>) and entered there this search request: ?How to get caller?s IP address in Perspective Broker server? (which is a title of question asked by me some time ago in this mailing list). The search didn?t find that question, and the newest result was of year 2009. If I search the same string in the main Google search, it is found here: http://www.mail-archive.com/twisted-python at twistedmatrix.com/ <http://www.mail-archive.com/twisted-python at twistedmatrix.com/>. Maybe the ?Search the ?twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>? link should be updated?
>>>  
>> 
>> Yep.  Do you need wiki edit permissions to do so?
>>  
>> -g
>> ,
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170129/c6ad8e03/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 29 18:31:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jan 2017 17:31:32 -0800
Subject: [Twisted-Python] Twisted 17.1.0rc1 Release Candidate
	Announcement
In-Reply-To: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>
References: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>
Message-ID: <AF128B67-4992-406F-AAA4-EB30FCDCD83F@twistedmatrix.com>


> On Jan 28, 2017, at 2:39 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hello everyone!
> 
> 16.7 didn't go as well as planned, so I thought we'd try again in the new year! So, here is Twisted 17.1, the first release of 2017. It's got all the cool things that were going to be in 16.7, *and more*. Wow!

Woohoo - this time for sure!

-glyph



From romanmescheryakov at yandex.ru  Mon Jan 30 00:58:57 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 30 Jan 2017 10:58:57 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
 <7304481485614128@web3m.yandex.ru>
 <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>
Message-ID: <324841485763137@web10m.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/58fc3eb5/attachment.html>

From kebin70 at gmail.com  Mon Jan 30 14:47:30 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 13:47:30 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
Message-ID: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>

hey all - quick question.  Trying to understand FileBodyProducer as it
pertains to POST.

json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))

agent.request("POST", ~*uri*, Headers({'User-Agent': ['AkamaiTest']}),
json_body)

Does the agent chunk the POST body?  Is this controllable?

Any insight appreciated!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/c383e8c3/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 30 15:39:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 14:39:36 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
Message-ID: <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>


> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> hey all - quick question.  Trying to understand FileBodyProducer as it pertains to POST.
> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
> agent.request("POST", ~uri, Headers({'User-Agent': ['AkamaiTest']}), json_body)
> Does the agent chunk the POST body?
Maybe!
> Is this controllable?
Not really.  The current implementation will certainly use chunked encoding sometimes, but there isn't a strong API guarantee of this anywhere.
> Any insight appreciated!

You probably don't want to try to control this.  I believe that proxies are within their rights to mess around with chunk boundaries and re-buffer things, so you don't have any strong guarantees that chunk sizes will be preserved.

Why is it that you want to control chunking in the first place?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/703c9242/attachment.html>

From kebin70 at gmail.com  Mon Jan 30 17:16:54 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 16:16:54 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
Message-ID: <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>

Dealing with older apache, ruby, passenger setup.  Hoping to mimic behavior
and show OPS that chunked encoding isn't working correctly.

With python requests (http://docs.python-requests.org/en/master/) all POST
calls work correctly, but twisted requests are failing.

I'm thinking (and hoping) it's failing because twisted is chunking the post
body.  When I send the requests to a twisted endpoint like below the
requests are successful and the response is identical.

from twisted.web import server, resource
from twisted.internet import reactor

class Simple(resource.Resource):
    isLeaf = True
    def render_POST(self, request):
        print request.content.getvalue()
        return request.content.getvalue()

site = server.Site(Simple())
reactor.listenTCP(8080, site)
reactor.run()


On Mon, Jan 30, 2017 at 2:39 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com> wrote:
>
> hey all - quick question.  Trying to understand FileBodyProducer as it
> pertains to POST.
>
> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
>
> agent.request("POST", ~*uri*, Headers({'User-Agent': ['AkamaiTest']}), json_body)
>
> Does the agent chunk the POST body?
>
> Maybe!
>
> Is this controllable?
>
> Not really.  The current implementation will certainly use chunked
> encoding sometimes, but there isn't a strong API guarantee of this anywhere.
>
> Any insight appreciated!
>
> You probably don't want to try to control this.  I believe that proxies
> are within their rights to mess around with chunk boundaries and re-buffer
> things, so you don't have any strong guarantees that chunk sizes will be
> preserved.
>
> Why is it that you want to control chunking in the first place?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/ffd83b76/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 30 17:44:51 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 18:44:51 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
Message-ID: <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>

Gotcha.  I guess what I meant was that you shouldn't care about this at the application level, but you're talking about an operational concern, not an application-level concern.

Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?

-glyph

> On Jan 30, 2017, at 18:16, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> Dealing with older apache, ruby, passenger setup.  Hoping to mimic behavior and show OPS that chunked encoding isn't working correctly.
> 
> With python requests (http://docs.python-requests.org/en/master/ <http://docs.python-requests.org/en/master/>) all POST calls work correctly, but twisted requests are failing.
> 
> I'm thinking (and hoping) it's failing because twisted is chunking the post body.  When I send the requests to a twisted endpoint like below the requests are successful and the response is identical.
> from twisted.web import server, resource
> from twisted.internet import reactor
> 
> class Simple(resource.Resource):
>     isLeaf = True
>     def render_POST(self, request):
>         print request.content.getvalue()
>         return request.content.getvalue()
> 
> site = server.Site(Simple())
> reactor.listenTCP(8080, site)
> reactor.run()
> 
> On Mon, Jan 30, 2017 at 2:39 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com <mailto:kebin70 at gmail.com>> wrote:
>> 
>> hey all - quick question.  Trying to understand FileBodyProducer as it pertains to POST.
>> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
>> agent.request("POST", ~uri, Headers({'User-Agent': ['AkamaiTest']}), json_body)
>> Does the agent chunk the POST body?
> 
> Maybe!
>> Is this controllable?
> Not really.  The current implementation will certainly use chunked encoding sometimes, but there isn't a strong API guarantee of this anywhere.
>> Any insight appreciated!
> 
> You probably don't want to try to control this.  I believe that proxies are within their rights to mess around with chunk boundaries and re-buffer things, so you don't have any strong guarantees that chunk sizes will be preserved.
> 
> Why is it that you want to control chunking in the first place?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/59b2a5b0/attachment-0001.html>

From exarkun at twistedmatrix.com  Mon Jan 30 17:59:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 30 Jan 2017 19:59:33 -0500
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
Message-ID: <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>

On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> Gotcha.  I guess what I meant was that you shouldn't care about this at
> the application level, but you're talking about an operational concern, not
> an application-level concern.
>
> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
>


Well... It *is* sort of tuneable, as you implied earlier.

If you pass an IBodyProducer with a non-None length, Agent will send a
Content-Length header - not use chunked Transfer-Encoding.
FileBodyProducer doesn't know how to determine the length of a StringIO, so
you get chunked with this example.  If you write the JSON to a regular file
and FileBodyProducer(open(the file)) you'll get a Content-Length request.
You could also write a new (trivial) IBodyProducer that does know how to
compute the length of a StringIO.

The documentation doesn't exactly spell this out - but the only reason
`length` is part of the interface is to be able to generate the
Content-Length header.

What would the ticket be?  Expanded documentation to make this behavior
into an explicit guarantee of the interface?  A new toggle somewhere to
force Agent.request into one mode or the other (regardless of the
performance consequences)?

And that stuff you said about proxies before was true ... So even if you
can control this in Agent, you're still not *guaranteed* the server will
see what you send.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/e1cd4566/attachment.html>

From kebin70 at gmail.com  Mon Jan 30 18:44:18 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 17:44:18 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
Message-ID: <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>

Thanks - that's exactly what I was looking for.

*But note* when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I
still see a content-length in the request header as it's received by
twisted.  Am I correct to assume the request is agnostic...meaning it's
shaped the same for twisted as it is for apache.

Headers({'host': ['localhost:8080'], 'connection': ['close'],
'content-length': ['671'], 'user-agent': ['PassengerTest']})

from twisted.web import server, resource
from twisted.internet import reactor

class Simple(resource.Resource):
    isLeaf = True
    def render_POST(self, request):
        print request.requestHeaders
        return request.content.getvalue()

site = server.Site(Simple())
reactor.listenTCP(8080, site)
reactor.run()



On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> Gotcha.  I guess what I meant was that you shouldn't care about this at
>> the application level, but you're talking about an operational concern, not
>> an application-level concern.
>>
>> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
>>
>
>
> Well... It *is* sort of tuneable, as you implied earlier.
>
> If you pass an IBodyProducer with a non-None length, Agent will send a
> Content-Length header - not use chunked Transfer-Encoding.
> FileBodyProducer doesn't know how to determine the length of a StringIO, so
> you get chunked with this example.  If you write the JSON to a regular file
> and FileBodyProducer(open(the file)) you'll get a Content-Length request.
> You could also write a new (trivial) IBodyProducer that does know how to
> compute the length of a StringIO.
>
> The documentation doesn't exactly spell this out - but the only reason
> `length` is part of the interface is to be able to generate the
> Content-Length header.
>
> What would the ticket be?  Expanded documentation to make this behavior
> into an explicit guarantee of the interface?  A new toggle somewhere to
> force Agent.request into one mode or the other (regardless of the
> performance consequences)?
>
> And that stuff you said about proxies before was true ... So even if you
> can control this in Agent, you're still not *guaranteed* the server will
> see what you send.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/74662e13/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 30 19:01:25 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 20:01:25 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
Message-ID: <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>


> On Jan 30, 2017, at 19:44, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> 
> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> Gotcha.  I guess what I meant was that you shouldn't care about this at the application level, but you're talking about an operational concern, not an application-level concern.
> 
> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
> 
> 
> Well... It is sort of tuneable, as you implied earlier.
> 
> If you pass an IBodyProducer with a non-None length, Agent will send a Content-Length header - not use chunked Transfer-Encoding.  FileBodyProducer doesn't know how to determine the length of a StringIO, so you get chunked with this example.

Not quite true: FileBodyProducer does know how to compute the length of a StringIO, via seek():

>>> from twisted.web.client import FileBodyProducer
>>> from io import BytesIO
>>> from cStringIO import StringIO
>>> FileBodyProducer(BytesIO(b"some bytes")).length
10L
>>> FileBodyProducer(StringIO(b"some bytes")).length
10

> If you write the JSON to a regular file and FileBodyProducer(open(the file)) you'll get a Content-Length request.  You could also write a new (trivial) IBodyProducer that does know how to compute the length of a StringIO.
> 
> The documentation doesn't exactly spell this out - but the only reason `length` is part of the interface is to be able to generate the Content-Length header.
> 
> What would the ticket be?  Expanded documentation to make this behavior into an explicit guarantee of the interface?  A new toggle somewhere to force Agent.request into one mode or the other (regardless of the performance consequences)?

Rather than "regardless" of the consequences, perhaps just a maximum body size.  If we made it an explicit guarantee in Agent, perhaps the interface change would not be in '.request' (which, as a formal interface used both inside and outside of Twisted, is fairly fixed), but rather a new `NonChunkedBodyProducer` concrete class that would implement IBodyProducer in terms of another IBodyProducer which either does or doesn't have a `length`.  (Or a function that does same, always returning its argument if `length` is already set...)

> And that stuff you said about proxies before was true ... So even if you can control this in Agent, you're still not guaranteed the server will see what you send.

> Thanks - that's exactly what I was looking for.
> 
> But note when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I still see a content-length in the request header as it's received by twisted.  Am I correct to assume the request is agnostic...meaning it's shaped the same for twisted as it is for apache.

It is shaped the same.  The reason you're seeing the error is due to the issue I pointed out above.
> Headers({'host': ['localhost:8080'], 'connection': ['close'], 'content-length': ['671'], 'user-agent': ['PassengerTest']})
> 

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/83115068/attachment.html>

From kebin70 at gmail.com  Mon Jan 30 19:41:00 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 18:41:00 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
 <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
Message-ID: <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>

"It is shaped the same.  The reason you're seeing the error is due to the
issue I pointed out above."

Just to be clear you mean that proxies can reshape the call in flight?



On Mon, Jan 30, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 30, 2017, at 19:44, Kevin Mcintyre <kebin70 at gmail.com> wrote:
>
> On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>> Gotcha.  I guess what I meant was that you shouldn't care about this at
>>> the application level, but you're talking about an operational concern, not
>>> an application-level concern.
>>>
>>> Perhaps this should be a tunable on Agent somehow.  Can you file a
>>> ticket?
>>>
>>
>>
>> Well... It *is* sort of tuneable, as you implied earlier.
>>
>> If you pass an IBodyProducer with a non-None length, Agent will send a
>> Content-Length header - not use chunked Transfer-Encoding.
>> FileBodyProducer doesn't know how to determine the length of a StringIO, so
>> you get chunked with this example.
>>
>
> Not quite true: FileBodyProducer *does* know how to compute the length of
> a StringIO, via seek():
>
>
> >>> from twisted.web.client import FileBodyProducer
> >>> from io import BytesIO
> >>> from cStringIO import StringIO
> >>> FileBodyProducer(BytesIO(b"some bytes")).length
> 10L
> >>> FileBodyProducer(StringIO(b"some bytes")).length
> 10
>
>
> If you write the JSON to a regular file and FileBodyProducer(open(the
>> file)) you'll get a Content-Length request.  You could also write a new
>> (trivial) IBodyProducer that does know how to compute the length of a
>> StringIO.
>>
>> The documentation doesn't exactly spell this out - but the only reason
>> `length` is part of the interface is to be able to generate the
>> Content-Length header.
>>
>> What would the ticket be?  Expanded documentation to make this behavior
>> into an explicit guarantee of the interface?  A new toggle somewhere to
>> force Agent.request into one mode or the other (regardless of the
>> performance consequences)?
>>
>
> Rather than "regardless" of the consequences, perhaps just a maximum body
> size.  If we made it an explicit guarantee in Agent, perhaps the interface
> change would not be in '.request' (which, as a formal interface used both
> inside and outside of Twisted, is fairly fixed), but rather a new
> `NonChunkedBodyProducer` concrete class that would implement IBodyProducer
> in terms of another IBodyProducer which either does or doesn't have a
> `length`.  (Or a function that does same, always returning its argument if
> `length` is already set...)
>
> And that stuff you said about proxies before was true ... So even if you
>> can control this in Agent, you're still not *guaranteed* the server will
>> see what you send.
>>
>
> Thanks - that's exactly what I was looking for.
>
> *But note* when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I
> still see a content-length in the request header as it's received by
> twisted.  Am I correct to assume the request is agnostic...meaning it's
> shaped the same for twisted as it is for apache.
>
>
> It is shaped the same.  The reason you're seeing the error is due to the
> issue I pointed out above.
>
> Headers({'host': ['localhost:8080'], 'connection': ['close'],
> 'content-length': ['671'], 'user-agent': ['PassengerTest']})
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/df070132/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Jan 30 20:44:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 21:44:18 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
 <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
 <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>
Message-ID: <90243C5A-D838-4FA8-A6D6-3F5B1D8FCFC6@twistedmatrix.com>


> On Jan 30, 2017, at 20:41, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> "It is shaped the same.  The reason you're seeing the error is due to the issue I pointed out above."
> 
> Just to be clear you mean that proxies can reshape the call in flight?

No, I mean that FileBodyObserver specifically calculates a length if it can, and it can for StringIO.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170130/096de740/attachment.html>

From trac at twistedmatrix.com  Sun Jan  1 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Jan 2017 07:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1483254320.25.3952957963885408153@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170101/962dc06e/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan  2 05:52:00 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 07:52:00 -0500
Subject: [Twisted-Python] AWS Auth v4 for Twisted?
In-Reply-To: <CAMcKhMTc=tOS13vG84OsptHhprP532xnJBqiEb6HEniVCPu75g@mail.gmail.com>
References: <CAEeXt4N5O=yfcSPqVPcxwaadLi4L4tCUc1d6TXkRxadKmpGNnA@mail.gmail.com>
 <CA+TSurANEugvPy7+WGa=nDYB=S9MoDgkRjaaSUC6iLiGhGy4PA@mail.gmail.com>
 <CAPxhEGdBGid62OM4_xLfjEDUfEWbhP7yBn=RCkmm24AtnJzE8w@mail.gmail.com>
 <CAMcKhMTc=tOS13vG84OsptHhprP532xnJBqiEb6HEniVCPu75g@mail.gmail.com>
Message-ID: <CAEeXt4MaOT=AW-tMiVe6ZjiDwycSHpEnUsbKLfq5dfs9NUmu3A@mail.gmail.com>

On Thu, Dec 29, 2016 at 8:55 PM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Fri, 30 Dec 2016 at 02:30 Steve Morin <steve at stevemorin.com> wrote:
>
>> Mark,
>>   Did you get confirmation from your work?
>>
>
> It seems like he did; see https://github.com/twisted/txaws/pull/16 for
> more details.
>
>
Now merged!  Thanks Mark.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170102/31302174/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan  2 05:57:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 07:57:25 -0500
Subject: [Twisted-Python] tx github announcements in #twisted-dev
Message-ID: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>

How do folks feel about this?  Good idea or not?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170102/87dd4822/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan  2 07:10:46 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 2 Jan 2017 09:10:46 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
Message-ID: <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>

On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm> wrote:
> >
> > Hi all
> >
> > I couldn't find Twisted-specific group, so posting here.
> >
> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it
> for my apps and got an error.
> >
> > ...
> >
> > The errors comes down to this: twistd script does not add current
> working directory to python path (or removes it, I don't know what exactly
> happens), so it fails to import any packages/modules from it. The issue
> does not appear in previous version (Twisted 16.3.2).
> >
> > Any ideas what caused it?
>
> Yes -- we moved to using setuptools console scripts, and these console
> scripts don't add "." to the PYTHONPATH. We realised this in prerelease but
> decided against fixing it, as it adding the current working dir to the PATH
> has lead to a lot of  subtle bugs in the past and this is a good chance to
> make a break from them.
>
> So, in short, this is expected behaviour -- we generally want people to be
> running twistd, trial, etc on *installed* Python packages -- testing or
> running from checkouts often hides many bugs about what is or isn't
> included in the installed package by accident. If you rely on this
> behaviour, though, set the PYTHONPATH environment variable to "." -- e.g.
> `env PYTHONPATH=. twistd -n myplugin`.
>
>
FWIW, as a user, it would have been nice to have a NEWS entry for this.  It
would have been easier to discover there than searching through the mail
archives.

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170102/e8cb6909/attachment-0002.html>

From hawkowl at atleastfornow.net  Mon Jan  2 13:11:31 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 3 Jan 2017 07:11:31 +1100
Subject: [Twisted-Python] tx github announcements in #twisted-dev
In-Reply-To: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>
References: <CAEeXt4O6PRrSdpE0GmTu0YeF+LqaFmiBEgMbV45njpipvm4mDw@mail.gmail.com>
Message-ID: <E58D7EA2-4AF0-4D97-B385-65D04FE38321@atleastfornow.net>

On 2 Jan 2017, at 23:57, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> How do folks feel about this?  Good idea or not?
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

We have some already (PRs opened?) so, I say go for it, if there's useful information in there. We can always turn it off again.

- Amber


From termim at gmail.com  Tue Jan  3 08:58:43 2017
From: termim at gmail.com (Terekhov, Mikhail)
Date: Tue, 3 Jan 2017 10:58:43 -0500
Subject: [Twisted-Python] Twisted 16.7.0rc1 Release Candidate
	Announcement
In-Reply-To: <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
References: <E3DC7732-2B53-4F79-B108-CD8029AB3975@atleastfornow.net>
 <2da9e7e0-4acf-d9af-9039-72533d3bfb24@egh.com>
 <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
Message-ID: <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>

On 12/29/16 08:27, Glyph Lefkowitz wrote:

>
>> On Dec 28, 2016, at 15:20, John Santos <JOHN at egh.com 
>> <mailto:JOHN at egh.com>> wrote:
>>
>> Seems to require a new Python module, Automat.
>
> Good catch, that probably should have been announced at least a little :).
>
>> (Not mentioned in the NEWS file, INSTALL, etc.)
>
> Despite the fact that it would have been good to mention this 
> particular dependency because its adoption is a new architectural 
> direction for Twisted, in /general/ we're actually planning to do less 
> communication of dependencies in this way.  Right now, we have 
> redundant listing of dependencies in a few places, but in the future, 
> setup.py (or more specifically, "packaging metadata") will be the one, 
> authoritative place that such things are listed.
>
>> I found Automat 0.3.0 (with Glyph's fingerprints on it) at PyPI, but 
>> it only exists in .whl format.
>
> Although you probably /should/ just use the wheel, the fact that there 
> was /only/ a wheel was an oversight.  I've uploaded an sdist and 
> pushed a corresponding tag (after making sure that the source files 
> all matched, of course).
>
It is probably an off topic but it would not hurt to add a more verbose 
description and a link to the sources on PyPI for the Automat package 
especially if it is so important for Twisted.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170103/434db81f/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan  3 13:17:33 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jan 2017 12:17:33 -0800
Subject: [Twisted-Python] Twisted 16.7.0rc1 Release Candidate
	Announcement
In-Reply-To: <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>
References: <E3DC7732-2B53-4F79-B108-CD8029AB3975@atleastfornow.net>
 <2da9e7e0-4acf-d9af-9039-72533d3bfb24@egh.com>
 <8CFE76D7-FB88-4734-9015-8FF36D57F0FD@twistedmatrix.com>
 <8f2ad5e7-b3f5-5411-bd35-0b6019e6a882@gmail.com>
Message-ID: <B521C118-7AB4-4AF3-AB23-30A64CA4506A@twistedmatrix.com>


> On Jan 3, 2017, at 7:58 AM, Terekhov, Mikhail <termim at gmail.com> wrote:
> 
> On 12/29/16 08:27, Glyph Lefkowitz wrote:
>> 
>>> On Dec 28, 2016, at 15:20, John Santos <JOHN at egh.com <mailto:JOHN at egh.com>> wrote:
>>> 
>>> Seems to require a new Python module, Automat.
>> 
>> Good catch, that probably should have been announced at least a little :).
>> 
>>> (Not mentioned in the NEWS file, INSTALL, etc.)
>> 
>> Despite the fact that it would have been good to mention this particular dependency because its adoption is a new architectural direction for Twisted, in general we're           actually planning to do less communication of dependencies in this way.  Right now, we have redundant listing of dependencies in a few places, but in the future, setup.py (or more specifically, "packaging metadata") will be the one, authoritative place that such things are listed.
>> 
>>> I found Automat 0.3.0 (with Glyph's fingerprints on it) at PyPI, but it only exists in .whl format.
>> 
>> Although you probably should just use the wheel, the fact that there was only a wheel was an oversight.  I've uploaded an sdist and pushed a corresponding tag (after making sure that the source files all matched, of course).
>> 
> It is probably an off topic but it would not hurt to add a more verbose description and a link to the sources on PyPI for the Automat package especially if it is so important for Twisted.

Please feel free to submit a PR to automat to do this.  There's lots of descriptive material here: <https://github.com/glyph/automat/blob/master/README.md <https://github.com/glyph/automat/blob/master/README.md>> which you could use to update the PyPI metadata part.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170103/ac20b509/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan  3 13:20:04 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jan 2017 12:20:04 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
Message-ID: <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>


> On Jan 2, 2017, at 6:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm <mailto:yuri_abzyanov at fastmail.fm>> wrote:
> >
> > Hi all
> >
> > I couldn't find Twisted-specific group, so posting here.
> >
> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it for my apps and got an error.
> >
> > ...
> >
> > The errors comes down to this: twistd script does not add current working directory to python path (or removes it, I don't know what exactly happens), so it fails to import any packages/modules from it. The issue does not appear in previous version (Twisted 16.3.2).
> >
> > Any ideas what caused it?
> 
> Yes -- we moved to using setuptools console scripts, and these console scripts don't add "." to the PYTHONPATH. We realised this in prerelease but decided against fixing it, as it adding the current working dir to the PATH has lead to a lot of  subtle bugs in the past and this is a good chance to make a break from them.
> 
> So, in short, this is expected behaviour -- we generally want people to be running twistd, trial, etc on *installed* Python packages -- testing or running from checkouts often hides many bugs about what is or isn't included in the installed package by accident. If you rely on this behaviour, though, set the PYTHONPATH environment variable to "." -- e.g. `env PYTHONPATH=. twistd -n myplugin`.
> 
> 
> FWIW, as a user, it would have been nice to have a NEWS entry for this.  It would have been easier to discover there than searching through the mail archives.

Yes, there definitely should have been.  We only realized the implications of the change after the fact, and only after some discussion decided that it was in fact desirable and should not be rolled back in a patch release.

We don't have a process for fixing NEWS files right now, and given that releases are immutable, I wonder if there's any way we could.  So, in the rare case that we mess up this way in the future, what (aside from the mailing list) would be a good communication mechanism to users?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170103/e24dad14/attachment-0002.html>

From hawkowl at atleastfornow.net  Tue Jan  3 13:22:01 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 4 Jan 2017 07:22:01 +1100
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
Message-ID: <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>


> On 4 Jan 2017, at 07:20, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Jan 2, 2017, at 6:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Thu, Sep 1, 2016 at 11:36 AM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
>> 
>> > On 1 Sep 2016, at 21:42, Yuri <yuri_abzyanov at fastmail.fm <mailto:yuri_abzyanov at fastmail.fm>> wrote:
>> >
>> > Hi all
>> >
>> > I couldn't find Twisted-specific group, so posting here.
>> >
>> > Recently Twisted 16.4.0 got released. Yesterday I've tried to upgrade it for my apps and got an error.
>> >
>> > ...
>> >
>> > The errors comes down to this: twistd script does not add current working directory to python path (or removes it, I don't know what exactly happens), so it fails to import any packages/modules from it. The issue does not appear in previous version (Twisted 16.3.2).
>> >
>> > Any ideas what caused it?
>> 
>> Yes -- we moved to using setuptools console scripts, and these console scripts don't add "." to the PYTHONPATH. We realised this in prerelease but decided against fixing it, as it adding the current working dir to the PATH has lead to a lot of  subtle bugs in the past and this is a good chance to make a break from them.
>> 
>> So, in short, this is expected behaviour -- we generally want people to be running twistd, trial, etc on *installed* Python packages -- testing or running from checkouts often hides many bugs about what is or isn't included in the installed package by accident. If you rely on this behaviour, though, set the PYTHONPATH environment variable to "." -- e.g. `env PYTHONPATH=. twistd -n myplugin`.
>> 
>> 
>> FWIW, as a user, it would have been nice to have a NEWS entry for this.  It would have been easier to discover there than searching through the mail archives.
> 
> Yes, there definitely should have been.  We only realized the implications of the change after the fact, and only after some discussion decided that it was in fact desirable and should not be rolled back in a patch release.
> 
> We don't have a process for fixing NEWS files right now, and given that releases are immutable, I wonder if there's any way we could.  So, in the rare case that we mess up this way in the future, what (aside from the mailing list) would be a good communication mechanism to users?
> 
> -glyph

We have, in the past, fixed up historic NEWS files in later releases (e.g. the one which removed 2.6 support). We could always roll these changes into a post1, but, that seems like a lot of effort. Maybe we could put errata on the blog?

- Amber
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170104/ba857d93/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jan  3 13:24:03 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 3 Jan 2017 15:24:03 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
Message-ID: <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>

On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
>
> We have, in the past, fixed up historic NEWS files in later releases (e.g.
> the one which removed 2.6 support). We could always roll these changes into
> a post1, but, that seems like a lot of effort. Maybe we could put errata on
> the blog?
>
>
With a link to the blog post in the NEWS file?  Cold checking blog was
below "read git history and try to correlate with the issue tracker" on my
list of how to track down this change.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170103/289b3045/attachment-0002.html>

From commercials24 at yahoo.de  Fri Jan  6 12:03:47 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Fri, 06 Jan 2017 20:03:47 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not adapt',
 '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
Message-ID: <1483729427.23369.21.camel@yahoo.de>

hi,


sending a simple post request with a body (cookies) results in a error
here.

im using python 3.x with the latest twisted and treq installed via pip
in a virtualenv.


the code gets a chatroom login page, extracts two values, gets the
cookies and logs a user into the chat. (incomplete)
thing is for being logged in i need to send my current phpsessionid in
the post request...



glyph (without seeing the the code or backtrace) suggested that:
"I think the issue might be that it doesn't support bytes() on py3,
it's registered against str() or something"


here is my code:

from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
    print("result:", result)

def myError(failure):
    print("failure:", failure)

def lala():
    #d = getLoginPage()
    d = login()
    d.addCallback(myPrint)
    d.addErrback(myError)



if __name__ == '__main__':
    lala()
    reactor.run()






from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
    print("result:", result)

def myError(failure):
    print("failure:", failure)

def lala():
    #d = getLoginPage()
    d = login()
    d.addCallback(myPrint)
    d.addErrback(myError)



if __name__ == '__main__':
    lala()
    reactor.run()
(venv) julius at t560:~/code/twisted/webchat-client$ cat myhttp.py 
from bs4 import BeautifulSoup
import random
from twisted.internet import reactor, defer
from twisted.web.client import getPage
import treq
import urllib




url = b'http://chatroom2000.de'
useragent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36".encode('utf-8')

cookies = {}    


@defer.inlineCallbacks
def getLoginPage():
    global cookies 
    response = yield treq.get(url)
    final_page = yield response.content()
    cookies = response.cookies()
    defer.returnValue(final_page)



@defer.inlineCallbacks
def login():
    response = yield getLoginPage()
    
    print(cookies)
    print("rsponse:", response)
    soup = BeautifulSoup(response, "lxml")
    hmac = soup.input["name"]
    key = soup.input["value"]
    print("hmac:key", hmac,key)
    username_list = ["Demetrius", "Tyrone", "Marshawn"]
    username = random.choice(username_list)
    body = urllib.parse.urlencode({hmac: key,
        'username': username, 'pw':'', 'gender':'m', 'aaaa':''})


    target_url = url + b"/?CheckUserName"

    
    headers = {'Content-Type': 'application/x-www-form-
urlencoded','cache-control': ['no-store, no-cache, must-revalidate,
pre-check=0, post-check=0, max-age=0']}
    
    import json 
    try:
        print("cookies2:", cookies)    
        somepage = yield treq.post(target_url, json.dumps({hmac: key,
"username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
headers=headers, cookies=cookies )
    except Exception as err:
        print("err:", err)
    response = yield somepage.content()
    defer.returnValue(response)



if __name__ == '__main__':
    #url = 'http://chatroom2000.de'
    getPage(url)

    reactor.run()




and the error:
cookies2: <RequestsCookieJar[<Cookie
PHPSESSID=jevr00m25j0clfv6aibbgbro26 for chatroom2000.de/>, <Cookie
db1_cookie_test=1483729313 for chatroom2000.de/>]>
err: ('Could not adapt', '{"pw": "", "aaaa": "", "username":
"Demetrius", "cd5a6e4774acfd7e090467c9ed67f7e6": "1483729313",
"gender": "m"}', <InterfaceClass twisted.web.iweb.IBodyProducer>)
failure: [Failure instance: Traceback: <class 'UnboundLocalError'>:
local variable 'somepage' referenced before assignment
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:457:callback
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:565:_startRunCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:651:_runCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1355:gotResult
--- <exception caught here> ---
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1299:_inlineCallbacks
/home/julius/code/twisted/webchat-client/myhttp.py:54:login





i followd some files in the traceback, but got nowhere :(



From commercials24 at yahoo.de  Fri Jan  6 12:03:39 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Fri, 06 Jan 2017 20:03:39 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not adapt',
 '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
Message-ID: <1483729419.23369.18.camel@yahoo.de>

hi,


sending a simple post request with a body (cookies) results in a error
here.

im using python 3.x with the latest twisted and treq installed via pip
in a virtualenv.


the code gets a chatroom login page, extracts two values, gets the
cookies and logs a user into the chat. (incomplete)
thing is for being logged in i need to send my current phpsessionid in
the post request...



glyph (without seeing the the code or backtrace) suggested that:
"I think the issue might be that it doesn't support bytes() on py3,
it's registered against str() or something"


here is my code:

from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
    print("result:", result)

def myError(failure):
    print("failure:", failure)

def lala():
    #d = getLoginPage()
    d = login()
    d.addCallback(myPrint)
    d.addErrback(myError)



if __name__ == '__main__':
    lala()
    reactor.run()






from myhttp import getLoginPage, login
from twisted.internet import reactor


def myPrint(result):
    print("result:", result)

def myError(failure):
    print("failure:", failure)

def lala():
    #d = getLoginPage()
    d = login()
    d.addCallback(myPrint)
    d.addErrback(myError)



if __name__ == '__main__':
    lala()
    reactor.run()
(venv) julius at t560:~/code/twisted/webchat-client$ cat myhttp.py 
from bs4 import BeautifulSoup
import random
from twisted.internet import reactor, defer
from twisted.web.client import getPage
import treq
import urllib




url = b'http://chatroom2000.de'
useragent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36".encode('utf-8')

cookies = {}    


@defer.inlineCallbacks
def getLoginPage():
    global cookies 
    response = yield treq.get(url)
    final_page = yield response.content()
    cookies = response.cookies()
    defer.returnValue(final_page)



@defer.inlineCallbacks
def login():
    response = yield getLoginPage()
    
    print(cookies)
    print("rsponse:", response)
    soup = BeautifulSoup(response, "lxml")
    hmac = soup.input["name"]
    key = soup.input["value"]
    print("hmac:key", hmac,key)
    username_list = ["Demetrius", "Tyrone", "Marshawn"]
    username = random.choice(username_list)
    body = urllib.parse.urlencode({hmac: key,
        'username': username, 'pw':'', 'gender':'m', 'aaaa':''})


    target_url = url + b"/?CheckUserName"

    
    headers = {'Content-Type': 'application/x-www-form-
urlencoded','cache-control': ['no-store, no-cache, must-revalidate,
pre-check=0, post-check=0, max-age=0']}
    
    import json 
    try:
        print("cookies2:", cookies)    
        somepage = yield treq.post(target_url, json.dumps({hmac: key,
"username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
headers=headers, cookies=cookies )
    except Exception as err:
        print("err:", err)
    response = yield somepage.content()
    defer.returnValue(response)



if __name__ == '__main__':
    #url = 'http://chatroom2000.de'
    getPage(url)

    reactor.run()




and the error:
cookies2: <RequestsCookieJar[<Cookie
PHPSESSID=jevr00m25j0clfv6aibbgbro26 for chatroom2000.de/>, <Cookie
db1_cookie_test=1483729313 for chatroom2000.de/>]>
err: ('Could not adapt', '{"pw": "", "aaaa": "", "username":
"Demetrius", "cd5a6e4774acfd7e090467c9ed67f7e6": "1483729313",
"gender": "m"}', <InterfaceClass twisted.web.iweb.IBodyProducer>)
failure: [Failure instance: Traceback: <class 'UnboundLocalError'>:
local variable 'somepage' referenced before assignment
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:457:callback
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:565:_startRunCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:651:_runCallbacks
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1355:gotResult
--- <exception caught here> ---
/home/julius/code/twisted/webchat-client/venv/lib/python3.5/site-
packages/twisted/internet/defer.py:1299:_inlineCallbacks
/home/julius/code/twisted/webchat-client/myhttp.py:54:login





i followd some files in the traceback, but got nowhere :(



From mithrandi at mithrandi.net  Fri Jan  6 16:36:24 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 06 Jan 2017 23:36:24 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483729427.23369.21.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
Message-ID: <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>

On Fri, 6 Jan 2017 at 21:21 steven meiers <commercials24 at yahoo.de> wrote:

> glyph (without seeing the the code or backtrace) suggested that:
> "I think the issue might be that it doesn't support bytes() on py3,
> it's registered against str() or something"
>

Actually, the problem is the reverse of this; only bytes is supported, but
you're passing str (unicode) in.


>         somepage = yield treq.post(target_url, json.dumps({hmac: key,
> "username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
>

json.dumps returns str (ie. unicode) on py3; throwing in a .encode('utf-8')
here is probably what you want.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170106/8e155e48/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan  6 18:22:37 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jan 2017 17:22:37 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
Message-ID: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>

1
> On Jan 6, 2017, at 3:36 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Fri, 6 Jan 2017 at 21:21 steven meiers <commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
> glyph (without seeing the the code or backtrace) suggested that:
> "I think the issue might be that it doesn't support bytes() on py3,
> it's registered against str() or something"
> 
> Actually, the problem is the reverse of this; only bytes is supported, but you're passing str (unicode) in. 

Aah, thanks for pointing this out.

>         somepage = yield treq.post(target_url, json.dumps({hmac: key,
> "username": username, 'pw':'', 'gender':'m', 'aaaa':''}),
> 
> json.dumps returns str (ie. unicode) on py3; throwing in a .encode('utf-8') here is probably what you want.


Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.

Even if we do this though - is there any way to convince json.dumps to behave consistently between 2/3 for the purposes of examples?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170106/5cc700ab/attachment-0002.html>

From mithrandi at mithrandi.net  Fri Jan  6 19:14:14 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 07 Jan 2017 02:14:14 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
Message-ID: <CAMcKhMSm64FzvhmmWoBrDva4pGoby3xPS1qQTT6iPC1tBsnAnQ@mail.gmail.com>

On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> Even if we do this though - is there any way to convince json.dumps to
> behave consistently between 2/3 for the purposes of examples?
>

As far as I know, the only way to handle this is with an if PY3 or if
isinstance(…). I don't know of a way to make json.dumps on Python 2
consistently return unicode, and I don't know of a way to make json.dumps
on Python 3 return bytes.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170107/063a59a2/attachment-0002.html>

From mithrandi at mithrandi.net  Fri Jan  6 19:18:16 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 07 Jan 2017 02:18:16 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
Message-ID: <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>

On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> Maybe we should support unicode for the body as well.  We can set the
> charset in the mime-type and everything so that it will be properly
> intelligible by the server, which doesn't happen if the user manually
> encodes like this.
>

Oh, forgot to comment on this point; in the specific case of JSON, it isn't
necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a
pretty good idea. However, I'm not sure if it's possible to modify
Content-Type in a generic fashion to make this sort of thing work; for
example, "Content-Type: application/octet-stream; charset=UTF-8" is
nonsense. I'll defer to some HTTP experts here ;)

[1] https://tools.ietf.org/html/rfc7159#section-8.1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170107/1c4d1e7d/attachment-0002.html>

From cory at lukasa.co.uk  Sat Jan  7 05:00:06 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Sat, 7 Jan 2017 12:00:06 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
Message-ID: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>


> On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.
> 
> Oh, forgot to comment on this point; in the specific case of JSON, it isn't necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a pretty good idea. However, I'm not sure if it's possible to modify Content-Type in a generic fashion to make this sort of thing work; for example, "Content-Type: application/octet-stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts here ;)

This is really not simple, for the reason that many MIME types do not define a charset extension. In the case of JSON, it’s not just not necessary to specify UTF-8 in Content-Type, but the standard explicitly does not define charset for the JSON content type[0]:

> Note:  No "charset" parameter is defined for this registration. Adding one really has no effect on compliant recipients.

Strictly a completely compliant implementation would not emit charset details for content types that have no charset registration. Such a thing is pretty tricky to do. Knowing that, it’s probably best to YOLO your way though, or forbid unicode in bodies.

Cory

[0]: https://tools.ietf.org/html/rfc7159#section-11


From commercials24 at yahoo.de  Sat Jan  7 09:21:00 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Sat, 07 Jan 2017 17:21:00 +0100
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
Message-ID: <1483806060.23369.23.camel@yahoo.de>

thanks for the quick replys guys, you were right. a .encode('utf-8')
helps.

actually the json.dumps part in the code is wrong.
it has to be: 
 somepage = yield treq.post(target_url, body.encode('utf-8'),
headers=headers, cookies=cookies )



Am Samstag, den 07.01.2017, 12:00 +0000 schrieb Cory Benfield:
> > On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net
> > > wrote:
> > 
> > On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.co
> > m> wrote:
> > 
> > Maybe we should support unicode for the body as well.  We can set
> > the charset in the mime-type and everything so that it will be
> > properly intelligible by the server, which doesn't happen if the
> > user manually encodes like this.
> > 
> > Oh, forgot to comment on this point; in the specific case of JSON,
> > it isn't necessary to specify UTF-8 in Content-Type[1], but for
> > HTML or XML it's a pretty good idea. However, I'm not sure if it's
> > possible to modify Content-Type in a generic fashion to make this
> > sort of thing work; for example, "Content-Type: application/octet-
> > stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts
> > here ;)
> 
> This is really not simple, for the reason that many MIME types do not
> define a charset extension. In the case of JSON, it’s not just not
> necessary to specify UTF-8 in Content-Type, but the standard
> explicitly does not define charset for the JSON content type[0]:
> 
> > Note:  No "charset" parameter is defined for this registration.
> > Adding one really has no effect on compliant recipients.
> 
> Strictly a completely compliant implementation would not emit charset
> details for content types that have no charset registration. Such a
> thing is pretty tricky to do. Knowing that, it’s probably best to
> YOLO your way though, or forbid unicode in bodies.
> 
> Cory
> 
> [0]: https://tools.ietf.org/html/rfc7159#section-11
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sat Jan  7 16:57:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jan 2017 15:57:15 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
Message-ID: <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>


> On Jan 7, 2017, at 4:00 AM, Cory Benfield <cory at lukasa.co.uk> wrote:
> 
> 
>> On 7 Jan 2017, at 02:18, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
>> 
>> On Sat, 7 Jan 2017 at 03:23 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>> Maybe we should support unicode for the body as well.  We can set the charset in the mime-type and everything so that it will be properly intelligible by the server, which doesn't happen if the user manually encodes like this.
>> 
>> Oh, forgot to comment on this point; in the specific case of JSON, it isn't necessary to specify UTF-8 in Content-Type[1], but for HTML or XML it's a pretty good idea. However, I'm not sure if it's possible to modify Content-Type in a generic fashion to make this sort of thing work; for example, "Content-Type: application/octet-stream; charset=UTF-8" is nonsense. I'll defer to some HTTP experts here ;)
> 
> This is really not simple, for the reason that many MIME types do not define a charset extension. In the case of JSON, it’s not just not necessary to specify UTF-8 in Content-Type, but the standard explicitly does not define charset for the JSON content type[0]:

I see you your standards pedantry, and raise you!

MIME defines content-type to always have a charset:

https://tools.ietf.org/html/rfc1521#section-4 <https://tools.ietf.org/html/rfc1521#section-4>

>>> Among the defined parameters is a "charset" parameter by which the character set used in the body may be declared.

and from the spec you're citing,

>>> Adding one really has no effect on compliant recipients


Given that we'd always choose utf-8 anyway it would be fine.

>> Note:  No "charset" parameter is defined for this registration. Adding one really has no effect on compliant recipients.
> 
> Strictly a completely compliant implementation would not emit charset details for content types that have no charset registration. Such a thing is pretty tricky to do. Knowing that, it’s probably best to YOLO your way though, or forbid unicode in bodies.

A bigger part of the problem here is that treq has no way of knowing that the characters you're sending are JSON at all, let alone what encoding you want them in.  So if we actually want to do MIME stuff, we'd probably want to have treq be the layer to call treq.dumps on the dict anyway, so that it knows what it's dealing with.  Automatic treatment of unicode would likely set the type to text/plain;charset=utf8.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170107/f9802b3d/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Jan  7 16:57:34 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jan 2017 15:57:34 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483806060.23369.23.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
 <1483806060.23369.23.camel@yahoo.de>
Message-ID: <C6996AB3-2EA7-4B4B-BA06-8E1C3FE73B14@twistedmatrix.com>


> On Jan 7, 2017, at 8:21 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> thanks for the quick replys guys, you were right. a .encode('utf-8')
> helps.

Glad you were able to get it working!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170107/d92697a2/attachment-0002.html>

From markrwilliams at gmail.com  Sat Jan  7 23:44:32 2017
From: markrwilliams at gmail.com (Mark Williams)
Date: Sat, 7 Jan 2017 22:44:32 -0800
Subject: [Twisted-Python] Streaming Requests
Message-ID: <20170108064432.fscacjstbglfoisz@hammal>

* What?
  A new year means renewed ambition.  So let's talk about receiving
  streaming requests!

* Why?
  Twisted's HTTP server implementation does not allow application code
  to interact with a request until its body has been entirely
  received.  It also doesn't allow incremental access to the request's
  body as it arrives.  This shortcoming has been an issue for a while;
  see http://twistedmatrix.com/trac/ticket/288

  Some of the discussion in #288 focuses on twisted.web.server and
  twisted.web.resource.  The approach I'll propose in this email will
  not.  There are two reasons for this.

  The first: I want twisted.web.proxy.Proxy to support the CONNECT
  HTTP method.  That requires that Request.process be called before
  any part of the body has been written by the client.  I'd also like
  to write proxies that connected the incoming request as an
  IPushProducer to an outgoing one as an IConsumer.  It just so
  happens that Proxy inherits directly from HTTPChannel and doesn't
  touch any of twisted.web.server.

  The second: the consensus after some discussion on IRC in
  #twisted-dev seems to be that we have to fix HTTPChannel first
  anyway, and that progress there can be made entirely in Twisted's
  private API.  Once we have some kind of Request-like thing that
  HTTPChannel can begin processing before the body has arrived, we can
  work out how to integrate it in twisted.web.server and and
  twisted.web.resource.

  In other words, we can make this change incrementally and
  backwards-compatibly, and get a better Proxy implementation out of
  it, too.

* Quickly: How?
  1. Define the Request interface HTTPChannel currently uses.  It will
     be private.  Call it _IDeprecatedHTTPChannelToRequestInterface
     because requests should eventually always be streaming.  There's
     a ticket here: https://twistedmatrix.com/trac/ticket/8981 and
     some code here:
     https://github.com/twisted/twisted/compare/twisted:88a7194...markrwilliams:ed19197
  2. Define a new streaming Request interface that HTTPChannel knows
     how to use.  It will be private.  Call it
     _IHTTPChannelToStreamingRequest.  It won't have a .content, but
     it will have a way to specify a protocol that receives the body
     incrementally.  The interaction will probably look a lot like the
     patch in https://twistedmatrix.com/trac/ticket/8143.  It won't be
     HTTPChannel's default requestFactory.
  3. Use the private _IHTTPChannelToStreamingRequest implementation in
     a new proxy implementation that supports CONNECT and also
     producer/consumer streaming between the client and proxy
     requests.
  4. Take stock and figure out how to make things work for
     twisted.web.server.

* Slowly: How?
  (Note: attributions are for posterity only.  Any mistakes in
  reasoning are because I transcribed something badly.)

  Tom Prince explained that HTTPChannel doesn't provide Request with
  the HTTP method, URI, or version until the body has arrived.
  Request.requestReceived, the method that receives these, calls
  Request.process, which means without change this behavior we can't
  change Proxy or Site, both of which begin their work by overriding
  Request.process.  So we have to start with HTTPChannel.  (For what
  it's worth, http://twistedmatrix.com/trac/ticket/288#comment:31
  supports this approach.)

  He also noted that the Request interface with which HTTPChannel
  interacts is mostly not described by twisted.iweb.IRequest.  That
  means we can augment the ways HTTPChannel talks to Request-like
  things without breaking many public APIs.

  Glyph said we should make this existing interface explicit but
  private.  That will let HTTPChannel (eventually) use the interface
  provided by requestFactory to determine whether to treat the Request
  as streaming or not.

  We can then define a new interface, _IHTTPChannelToStreamingRequest,
  and a new implementation that's completely separate from
  twisted.web.http.Request.  Both will be private.

  Tom Prince pointed out that with these two in place, we can then
  write a replacement for twisted.web.proxy.Proxy that uses these
  private APIs to provide HTTPS support via HTTP's CONNECT method.
  HTTPChannel's default requestFactory will continue to be
  twisted.web.http.Request.  The new proxy code will use the new
  _IHTTPChannelToStreamingRequest implementation.

  Exarkun pointed out that this new proxy implementation can be
  completely separate and indeed deprecate the existing one, avoiding
  the need to make twisted.web.proxy.ProxyRequest.process work with
  both the new _IHTTPChannelToStreamingRequest process()
  implementation and the existing one.  I am hopeful this new
  implementation will also close
  https://twistedmatrix.com/trac/ticket/8961

  If all that works, we can then work out an IStreamingRequest
  interface that will enable Twisted's web server utilize the private
  streaming request APIs.

* Comments?
  Will this approach break a public API?  Does it sound terrible?  Or
  good?  Please share your thoughts!

Let's hope 2017 is the year of the streaming request!

-Mark



From trac at twistedmatrix.com  Sun Jan  8 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Jan 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1483859118.96.805841243758297018@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170108/590f718e/attachment-0002.html>

From mithrandi at mithrandi.net  Sun Jan  8 01:52:20 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 08 Jan 2017 08:52:20 +0000
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <CAMcKhMTcHkf334A6QjfT=Y8qeXXRWki52etym7TbOo6DBRL=sQ@mail.gmail.com>
 <BEEF1CB8-594B-4027-A995-09077ABBB163@twistedmatrix.com>
 <CAMcKhMTvOTeXnnnvXsc5yT7bhcpL1tMh=m_j_KpOnkK5GQjvEQ@mail.gmail.com>
 <A9A8F6BC-4F3A-4998-99E1-DDB77CC38284@lukasa.co.uk>
 <16164E31-CA06-4583-B514-1B87904EAA30@twistedmatrix.com>
Message-ID: <CAMcKhMQjXHcFpAJUGTk-XKEbHy1DAtEueyoiCaKGko8HoXQyxg@mail.gmail.com>

On Sun, 8 Jan 2017 at 01:57 Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> I see you your standards pedantry, and raise you!
>
> MIME defines content-type to always have a charset:
>
> *https://tools.ietf.org/html/rfc1521#section-4
> <https://tools.ietf.org/html/rfc1521#section-4>*
>

RFC 1521 is obsoleted by RFC 2045 which has more nuanced semantics:
https://tools.ietf.org/html/rfc2045#section-5

But actually, HTTP is not MIME; so we should be looking here instead:
https://tools.ietf.org/html/rfc7231#section-3.1.1.1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170108/99cf022f/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Jan  8 17:34:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 8 Jan 2017 19:34:53 -0500
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <20170108064432.fscacjstbglfoisz@hammal>
References: <20170108064432.fscacjstbglfoisz@hammal>
Message-ID: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>

On Sun, Jan 8, 2017 at 1:44 AM, Mark Williams <markrwilliams at gmail.com>
wrote:

> * What?
>   A new year means renewed ambition.  So let's talk about receiving
>   streaming requests!
>
>
Hi Mark,

Thanks for tackling this long-standing issue!

I want to start off by responding to just one part of your email.  This is
actually the only part that looks potentially problematic to me so far,
which I take to be a good sign. :)


>   He also noted that the Request interface with which HTTPChannel
>   interacts is mostly not described by twisted.iweb.IRequest.  That
>   means we can augment the ways HTTPChannel talks to Request-like
>   things without breaking many public APIs.
>
>
How will this affect applications which have implemented Request-alike
classes (for example, for testing purposes)?  The interface may not be
explicitly defined as a Zope Interface right now but it is defined by the
current implementation and it is largely public (ie, non-_-prefixed
names).  Tests may have hooked in to parts of Request not documented by
IRequest out of necessity.  It would be a shame to break such carefully
crafted automated tests.

Here's one example I know of off the top of my head, <
https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>.
This one isn't a from-scratch re-implementation of the implicit Request
interface but a Request subclass, instead.  However, it still interacts
with a lot of important pieces of Request which aren't part of IRequest.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170108/7a2de361/attachment-0002.html>

From markrwilliams at gmail.com  Sun Jan  8 17:50:55 2017
From: markrwilliams at gmail.com (Mark Williams)
Date: Sun, 8 Jan 2017 16:50:55 -0800
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
Message-ID: <20170109005054.7b76t245rhe67wiy@hammal>

On Sun, Jan 08, 2017 at 07:34:53PM -0500, Jean-Paul Calderone wrote:
> Hi Mark,
>
> Thanks for tackling this long-standing issue!
>

I hope I actually make some progress :)

> >   He also noted that the Request interface with which HTTPChannel
> >   interacts is mostly not described by twisted.iweb.IRequest.  That
> >   means we can augment the ways HTTPChannel talks to Request-like
> >   things without breaking many public APIs.
> >
> >
> How will this affect applications which have implemented Request-alike
> classes (for example, for testing purposes)?  The interface may not be
> explicitly defined as a Zope Interface right now but it is defined by the
> current implementation and it is largely public (ie, non-_-prefixed
> names).  Tests may have hooked in to parts of Request not documented by
> IRequest out of necessity.  It would be a shame to break such carefully
> crafted automated tests.
>

The new streaming request interface will define how HTTPChannel talks
to a completely separate Request-like implementation.  HTTPChannel can
then inspect what interface is provided by the object returned from
its requestFactory and either use the existing code path or the new
streaming one.  The default requestFactory will remain
twisted.web.http.Request.

These things taken together should mean that existing code doesn't
need to change at all.  I hope to use Twisted's own tests to verify
this, but I might use Flocker's as well.

I'd like to point out that this approach means that defining
_IDeprecatedHTTPChannelToRequestInterface isn't strictly necessary.
I'd like to do so anyway to help me track the existing API so I'm less
likely to break it, and to make the dispatch logic in HTTPChannel more
robust.



From glyph at twistedmatrix.com  Sun Jan  8 19:49:13 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jan 2017 18:49:13 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1483729427.23369.21.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
Message-ID: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>


> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> hi,
> 
> 
> sending a simple post request with a body (cookies) results in a error
> here.
> 
> im using python 3.x with the latest twisted and treq installed via pip
> in a virtualenv.

Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:

Because of this issue, this example - http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.

We should fix the docs so that it does.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170108/ab9ee5d5/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan  8 19:49:54 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jan 2017 18:49:54 -0800
Subject: [Twisted-Python] Weekly Bug Summary
In-Reply-To: <1483859118.96.805841243758297018@twistedmatrix.com>
References: <1483859118.96.805841243758297018@twistedmatrix.com>
Message-ID: <0BA15C97-1B2A-473C-8CCF-4052F65D52DA@twistedmatrix.com>


> On Jan 7, 2017, at 11:05 PM, trac at twistedmatrix.com wrote:
> 
> Total:                10         13       2326         -3
Only 15 years left to go :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170108/f22a2385/attachment-0002.html>

From cory at lukasa.co.uk  Mon Jan  9 01:21:10 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Mon, 9 Jan 2017 08:21:10 +0000
Subject: [Twisted-Python] Streaming Requests
In-Reply-To: <20170108064432.fscacjstbglfoisz@hammal>
References: <20170108064432.fscacjstbglfoisz@hammal>
Message-ID: <52977E4A-CF20-4CF3-9FD9-6D1FA7CA65CB@lukasa.co.uk>


> On 8 Jan 2017, at 06:44, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> * Comments?
>  Will this approach break a public API?  Does it sound terrible?  Or
>  good?  Please share your thoughts!
> 
> Let's hope 2017 is the year of the streaming request!
> 
> -Mark

I’m very excited to see someone tackling this again: I began taking a swing at it last year and abandoned it in favour of some of the other HTTP/2 work. However, I think it’s a vital addition and I really look forward to seeing it land.

For my part, I should note that HTTPChannel has a twin in HTTP/2 land, which is the combination of t.w._http2.H2Connection and t.w._http2.H2Stream. These will also want updating. However, once you’ve defined the shape of the patch for HTTPChannel I am happy to help out with reviewing that and making corresponding changes to the HTTP/2 side of things too.

Cory


From glyph at twistedmatrix.com  Mon Jan  9 02:52:29 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jan 2017 01:52:29 -0800
Subject: [Twisted-Python] Testing Strategies (was Re:  Streaming Requests)
In-Reply-To: <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
Message-ID: <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>

On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Here's one example I know of off the top of my head, <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>>.  This one isn't a from-scratch re-implementation of the implicit Request interface but a Request subclass, instead.  However, it still interacts with a lot of important pieces of Request which aren't part of IRequest.

Mark already addressed how he won't be breaking this use-case (which is hugely important, and core to the whole idea of a compatibility policy, so that is as it should be).

However, this kind of test-mocking is, I think, ultimately done at the wrong layer.  It's trying to override some very vaguely-specified internals in the middle of an implementation.

Really, twisted.web should provide its own testing tools, of course.  But if you're going to implement something that does this sort of overriding, I think the idiom to follow would be treq.testing: https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py <https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py>, rather than any of the various implementations of DummyRequest (including more than a few I'm sure I've written).

Internally, treq.testing uses MemoryReactor and the (not-technically-public-but-it-really-should-be) iosim module.  Therefore the layer it's plugging in at is at the very well-defined interface between IAgent and IStreamClientEndpoint, and between HTTPChannel and Transport.  This gives the determinism and (most of the) speed of an in-memory implementation, but a great deal of the realism of a full-blown integration test.  In particular, it binds to the appropriate objects within Twisted and will throw deprecation warnings if their interfaces change.  (Also of note; since what it's building a fake for is really 99% Agent, the bulk of this could probably move up another level into Twisted with very little effort.)

I think following this idiom of pushing I/O through a fake reactor and having a back-end that can be controlled via test-specific APIs is probably what we should all be striving for, and in Twisted we should be working to make the memory-reactor stuff more complete and convenient, rather than adding dummy implementations at each layer of the stack.

This is a set of ideas that I've been gradually arriving at over a long period of time, but it's probably high time for some public discussion by now, even if it's just everybody saying "yeah, that sounds good" :-).

On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170109/9557646e/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan  9 05:13:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 9 Jan 2017 07:13:57 -0500
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
Message-ID: <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>

On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
>
> Here's one example I know of off the top of my head, <
> https://github.com/ScatterHQ/flocker/blob/master/flocker/
> restapi/testtools.py#L316>.  This one isn't a from-scratch
> re-implementation of the implicit Request interface but a Request subclass,
> instead.  However, it still interacts with a lot of important pieces of
> Request which aren't part of IRequest.
>
>
> Mark already addressed how he won't be breaking this use-case (which is
> hugely important, and core to the whole idea of a compatibility policy, so
> that is as it should be).
>
> However, this kind of test-mocking is, I think, ultimately done at the
> wrong layer.  It's trying to override some very vaguely-specified internals
> in the middle of an implementation.
>
>
Absolutely.



> Really, twisted.web should provide its own testing tools, of course.  But
> if you're going to implement something that does this sort of overriding, I
> think the idiom to follow would be treq.testing: https://github.
> com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25
> 839932940e/src/treq/testing.py, rather than any of the various
> implementations of DummyRequest (including more than a few I'm sure I've
> written).
>

Though, note, the link I gave above was support code for something very
similar to this treq code:
https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460

To clarify your point a bit (I think):


   - MemoryAgent (from Flocker) provides a testing IAgent by implementing
   an IRequest that does in-memory resource traversal to dispatch requests and
   generate responses.
   - RequestTraversalAgent (from treq) provides a testing IAgent by
   implementing (using) iosim to do in-memory protocol/transport interacts to
   drive an in-memory HTTP conversation that runs all of the regular Twisted
   Web HTTP processing machinery.

RequestTraversalAgent's approach is better because the protocol/transport
interface is better defined.  Because it's better
defined, RequestTraversalAgent doesn't have to touch pieces that we might
want to consider implementation details (whether they're _-prefixed or
not).  It also invokes a larger portion of the real implementation code
making it more likely to be a realistic simulation of real-world use of the
code.

Having spelled this out, what occurs to me now is
that RequestTraversalAgent is really just a step or so up the ladder and
there's further to go.  For example, RequestTraversalAgent only needs to
exist at all because `iosim` has a distinct interface.  This distinct
interface means you need a RequestTraversalAgent-like thing for each
reactor-using thing for which you want to provide a test double.  If this
adaption behavior were bundled up differently then I think we'd get a lot
more in-memory test doubles for free (or closer to it - we'd be another
rung up the ladder, at least).  That seems like it would be a big win given
how *few* of these testing helpers Twisted has historically managed to
provide (suggesting it's just too hard to do so given the current tools).


>
> This is a set of ideas that I've been gradually arriving at over a long
> period of time, but it's probably high time for some public discussion by
> now, even if it's just everybody saying "yeah, that sounds good" :-).
>

So, it pretty much sounds good, though with the above refinements. :)


>
> On a related note, 'proto_helpers' is in a super awkward place.
>  'twisted.testing', anyone? :)
>

Yes.  I almost suggested this about a week ago when I was preparing to
contribute some testing code but then realized I couldn't contribute the
code after all. :(

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170109/625c5099/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan  9 10:58:24 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 9 Jan 2017 12:58:24 -0500
Subject: [Twisted-Python] Announcing txAWS 0.2.3.1
Message-ID: <CAEeXt4PSgAGjFbj50=mUytatk5=0tu_UzhV6au+gvqCfWP_a7Q@mail.gmail.com>

I've just release txAWS 0.2.3.1.  txAWS is a library for interacting with
Amazon Web Services (AWS) using Twisted.

AWSServiceEndpoint's ssl_hostname_verification's parameter now defaults to
True instead of False.  This affects all txAWS APIs which issue requests to
AWS endpoints.  For any application which uses the default
AWSServiceEndpoints, the server's TLS certificate will now be verified.

This resolves a security issue in which txAWS applications were vulnerable
to man-in-the-middle attacks which could either steal sensitive information
or, possibly, alter the AWS operation requested.

The new release is available on PyPI in source and wheel forms.  You can
also find txAWS at its new home on github, <https://github.com/twisted/txaws
>.

Special thanks to Least Authority Enterprises
(<https://leastauthority.com/>) for
sponsoring the work to find and fix this issue and to publish this new
release.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170109/3f847fdd/attachment-0002.html>

From commercials24 at yahoo.de  Mon Jan  9 18:20:21 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 10 Jan 2017 02:20:21 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
Message-ID: <1484011221.23369.31.camel@yahoo.de>

hi,



i use twisted to send a web request over a proxy, this works over
treq.get(url, agent=myagent) without problems.

but in the process (started out with agent.request) i could not figure
out from what line of twisted code this error:

[Failure instance: Traceback (failure with no frames): <class
'twisted.web._newclient.RequestGenerationFailed'>:
[<twisted.python.failure.Failure builtins.TypeError: sequence item 0:
expected a bytes-like object, str found>]

came from.

btw, is there a way to have a debugger attached to twisted code that
shows what code is currently executed and has a step forward option?


the error does come up when you give agent.request a "GET" instead of a
b"GET".


heres the test code:
from twisted.python.log import err
from twisted.web.client import ProxyAgent
from twisted.internet import reactor, defer
from twisted.internet.endpoints import TCP4ClientEndpoint
import treq

def display(response):
    print("Received response")
    print(response.content)


def err(failure):
    print(failure)

def main():
    endpoint = TCP4ClientEndpoint(reactor, "223.25.102.186", 8080)
    agent = ProxyAgent(endpoint)
    d = agent.request("GET", bytes("http://somedomain.de", 'utf-8'))
    d.addCallbacks(display)
    d.addErrback(err)

if __name__ == "__main__":
    main()
    reactor.run()


this code will produce this error:
[Failure instance: Traceback (failure with no frames): <class
'twisted.web._newclient.RequestGenerationFailed'>:
[<twisted.python.failure.Failure builtins.TypeError: sequence item 0:
expected a bytes-like object, str found>]

and some .py files with line numbers. none of which really are the
problem.



as it turns out, the "GET" as a string gets problematic here:
https://github.com/twisted/twisted/blob/twisted-16.6.0/src/twisted/web/
_newclient.py#L651

requestLines.append(b' '.join([self.method, self.uri,
                b'HTTP/1.1\r\n']))


wouldnt it be better to have something like this:


try:
            requestLines.append(b' '.join([self.method, self.uri,
                b'HTTP/1.1\r\n']))
        except TypeError as e:
            raise TypeError("could not join: " + str(self.method) + " "
+ str(self.uri) + ' ' + 'HTTP/1.1\r\n' )




which will produce:
<class 'twisted.python.failure.Failure'> [Failure instance: Traceback:
<class 'TypeError'>: could not join: GET b'http://somedomain.de'
HTTP/1.1

to give the user a chance to find out what he did wrong?
...when he uses agent instead of treq for whatever reason.




From glyph at twistedmatrix.com  Tue Jan 10 00:12:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jan 2017 23:12:00 -0800
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484011221.23369.31.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
Message-ID: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>



> On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> the error does come up when you give agent.request a "GET" instead of a
> b"GET".

That's expected; you do have to pass the method as `bytes`, as documented here: https://twistedmatrix.com/documents/16.6.0/api/twisted.web.iweb.IAgent.html#request <https://twistedmatrix.com/documents/16.6.0/api/twisted.web.iweb.IAgent.html#request>

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170109/bb78f593/attachment-0002.html>

From commercials24 at yahoo.de  Tue Jan 10 16:19:57 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 11 Jan 2017 00:19:57 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
Message-ID: <1484090397.23369.35.camel@yahoo.de>

Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
> 
> 
> > On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > the error does come up when you give agent.request a "GET" instead
> > of a
> > b"GET".
> 
> That's expected; you do have to pass the method as `bytes`, as
> documented here: https://twistedmatrix.com/documents/16.6.0/api/twist
> ed.web.iweb.IAgent.html#request
> 
> 

True, but since python 2.x is still shipped with debian testing for
example there will be some people running into this issue.
Just to make twisted more approachable this could he handled.



From tommost at gmail.com  Tue Jan 10 19:43:34 2017
From: tommost at gmail.com (Tom Most)
Date: Tue, 10 Jan 2017 18:43:34 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
Message-ID: <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>

On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>
>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de
>> <mailto:commercials24 at yahoo.de>> wrote:
>>
>> hi,
>>
>>
>> sending a simple post request with a body (cookies) results in a error
>> here.
>>
>> im using python 3.x with the latest twisted and treq installed via pip
>> in a virtualenv.
>
> Something that we discussed on IRC but did not come up in the mailing
> list thread may be the one issue that *should* be fixed in treq:
>
> Because of this issue, this example
> - http://treq.readthedocs.io/en/latest/#post - which the OP was
> following, doesn't work on Python 3.
>
> We should fix the docs so that it does.

I submitted a PR to fix this a while ago:
https://github.com/twisted/treq/pull/152

Also, the docs on RTD are still out of date. Who owns them? I'd be happy
to help.

---Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170110/6b261e5c/attachment-0002.html>

From mithrandi at mithrandi.net  Tue Jan 10 21:01:39 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 11 Jan 2017 04:01:39 +0000
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484090397.23369.35.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
 <1484090397.23369.35.camel@yahoo.de>
Message-ID: <CAMcKhMTut6_pEOHbhCxLQHLsTW9TkoZ0rcw_u6kUAj89T+sdsw@mail.gmail.com>

On Wed, 11 Jan 2017 at 02:26 steven meiers <commercials24 at yahoo.de> wrote:

> True, but since python 2.x is still shipped with debian testing for
> example there will be some people running into this issue.
> Just to make twisted more approachable this could he handled.
>

The b'GET' syntax for byte strings works on Python 2.7 (you get a str) as
well as Python 3, so I would suggest we use it everywhere in the
documentation / examples to make it easier on programmers using both Python
2 and 3.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170111/75f19c82/attachment-0002.html>

From commercials24 at yahoo.de  Tue Jan 10 16:19:38 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 11 Jan 2017 00:19:38 +0100
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
Message-ID: <1484090378.23369.34.camel@yahoo.de>

Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
> 
> 
> > On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > the error does come up when you give agent.request a "GET" instead
> > of a
> > b"GET".
> 
> That's expected; you do have to pass the method as `bytes`, as
> documented here: https://twistedmatrix.com/documents/16.6.0/api/twist
> ed.web.iweb.IAgent.html#request
> 
> 
True, but since python 2.x is still shipped with debian testing for
example there will be some people running into this issue.
Just to make twisted more approachable this could he handled.



From glyph at twistedmatrix.com  Wed Jan 11 17:44:10 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 16:44:10 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
Message-ID: <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>


> On Jan 10, 2017, at 6:43 PM, Tom Most <tommost at gmail.com> wrote:
> 
> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>> 
>>> On Jan 6, 2017, at 11:03 AM, steven meiers < <mailto:commercials24 at yahoo.de>commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
>>> 
>>> hi,
>>> 
>>> 
>>> sending a simple post request with a body (cookies) results in a error
>>> here.
>>> 
>>> im using python 3.x with the latest twisted and treq installed via pip
>>> in a virtualenv.
>> 
>> Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:
>> 
>> Because of this issue, this example -  <http://treq.readthedocs.io/en/latest/#post>http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.
>> 
>> We should fix the docs so that it does.
> 
> I submitted a PR to fix this a while ago: https://github.com/twisted/treq/pull/152 <https://github.com/twisted/treq/pull/152>
> 
> Also, the docs on RTD are still out of date. Who owns them? I'd be happy to help.

Thanks, hopefully the next time my periodic review comes around I'll catch that one.

Looks like I own the docs.  Builds are apparently failing - should I add you to the project?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170111/41988bf3/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Jan 11 17:49:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 16:49:15 -0800
Subject: [Twisted-Python] understanding twisted, better error handling
In-Reply-To: <1484090378.23369.34.camel@yahoo.de>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <1484011221.23369.31.camel@yahoo.de>
 <2D56AC03-AB9A-4061-AEEE-32BCF4B38228@twistedmatrix.com>
 <1484090378.23369.34.camel@yahoo.de>
Message-ID: <9C767367-33E0-4C31-BDF7-183F1857A872@twistedmatrix.com>


> On Jan 10, 2017, at 3:19 PM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> Am Montag, den 09.01.2017, 23:12 -0800 schrieb Glyph Lefkowitz:
>> 
>> 
>>> On Jan 9, 2017, at 5:20 PM, steven meiers <commercials24 at yahoo.de>
>>> wrote:
>>> 
>>> the error does come up when you give agent.request a "GET" instead
>>> of a
>>> b"GET".
>> 
>> That's expected; you do have to pass the method as `bytes`, as
>> documented here: https://twistedmatrix.com/documents/16.6.0/api/twist
>> ed.web.iweb.IAgent.html#request
>> 
>> 
> True, but since python 2.x is still shipped with debian testing for
> example there will be some people running into this issue.
> Just to make twisted more approachable this could he handled.

I think that Tristan's suggestion is the best way to address this.

-glyph




From meejah at meejah.ca  Wed Jan 11 19:58:33 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 06:58:33 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
Message-ID: <864m153rxi.fsf@atlantis.meejah.ca>






From meejah at meejah.ca  Wed Jan 11 19:59:56 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 06:59:56 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
Message-ID: <86wpe12dar.fsf@atlantis.meejah.ca>



-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

txtorcon 0.18.0 is released, improving error-reporting when you have
SAFECOOKIE or COOKIE authentication turned on but can't read the file.

   * https://github.com/meejah/txtorcon/issues/200

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.18.0
   https://github.com/meejah/txtorcon/releases/tag/v0.18.0

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.18.0.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.18.0.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
12be80f1d5e2893378c6e8c752cf159479f868f8424e16b34b75cd679a0ab171  dist/txtorcon-0.18.0.tar.gz
cffe063dbcedd9d344e88a572c0de39b0390562165a865efa27019260c2119f6  dist/txtorcon-0.18.0-py2-none-any.whl
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJYdp4sAAoJEMJgKAMSgGmnxCIH/iiFJdYtbSnShAktDrwMuL6K
tJN+AALrr6zIydjIVG4pNuGydoxqtmrpb/12xNn/c7noEWZpuuHd+hn/PRn+XNaA
Gh+q4922VKs3ZCFYFClVAkZFtT5iug7EKnB6n0IKt4Z+rVAzRTCpHqgnCmmavHP1
s55jkYc+emC/jzGag22sD7HnPYHjkuKV+qy1Y6mF1//oD9FFhJUXvn5FVjf9cNb/
xta7HB3AMXp/8qdpURPJaJBjWOg1BxSVBngZXYiUJkkoOReOJU1ngDoU0J7VjQJq
Uyi2ijwylUnK6/7qLLS8pwyX/UmWgV7NeQgIr00Shsm7Jv+zkk0QhXbnwJo8pRQ=
=oJqn
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Wed Jan 11 21:05:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 20:05:18 -0800
Subject: [Twisted-Python] txtorcon 0.18.0
In-Reply-To: <864m153rxi.fsf@atlantis.meejah.ca>
References: <864m153rxi.fsf@atlantis.meejah.ca>
Message-ID: <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com>


> On Jan 11, 2017, at 6:58 PM, meejah <meejah at meejah.ca> wrote:
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Trying to figure out if this is a profound dissertation on the nature of OPSEC or just an email client crashing...

-glyph


From glyph at twistedmatrix.com  Wed Jan 11 21:41:26 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jan 2017 20:41:26 -0800
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
Message-ID: <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>


> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> On Jan 8, 2017, at 4:34 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> Here's one example I know of off the top of my head, <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L316>>.  This one isn't a from-scratch re-implementation of the implicit Request interface but a Request subclass, instead.  However, it still interacts with a lot of important pieces of Request which aren't part of IRequest.
> 
> Mark already addressed how he won't be breaking this use-case (which is hugely important, and core to the whole idea of a compatibility policy, so that is as it should be).
> 
> However, this kind of test-mocking is, I think, ultimately done at the wrong layer.  It's trying to override some very vaguely-specified internals in the middle of an implementation.
> 
> 
> Absolutely.

Yay! Glad to have some consensus on this.

> Really, twisted.web should provide its own testing tools, of course.  But if you're going to implement something that does this sort of overriding, I think the idiom to follow would be treq.testing: https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py <https://github.com/twisted/treq/blob/fcf5deb976c955ca6ef6484f414d25839932940e/src/treq/testing.py>, rather than any of the various implementations of DummyRequest (including more than a few I'm sure I've written).
> 
> Though, note, the link I gave above was support code for something very similar to this treq code: https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460 <https://github.com/ScatterHQ/flocker/blob/master/flocker/restapi/testtools.py#L460>
> 
> To clarify your point a bit (I think):
> 
> MemoryAgent (from Flocker) provides a testing IAgent by implementing an IRequest that does in-memory resource traversal to dispatch requests and generate responses.
> RequestTraversalAgent (from treq) provides a testing IAgent by implementing (using) iosim to do in-memory protocol/transport interacts to drive an in-memory HTTP conversation that runs all of the regular Twisted Web HTTP processing machinery.
> RequestTraversalAgent's approach is better because the protocol/transport interface is better defined.  Because it's better defined, RequestTraversalAgent doesn't have to touch pieces that we might want to consider implementation details (whether they're _-prefixed or not).  It also invokes a larger portion of the real implementation code making it more likely to be a realistic simulation of real-world use of the code.

100% agree.

> Having spelled this out, what occurs to me now is that RequestTraversalAgent is really just a step or so up the ladder and there's further to go.

I generally agree with this next bit, but I have my own spin.  So, one point at a time:

> For example, RequestTraversalAgent only needs to exist at all because `iosim` has a distinct interface.  This distinct interface means you need a RequestTraversalAgent-like thing for each reactor-using thing for which you want to provide a test double.

I think that there are pieces of RequestTraversalAgent for which this is true; the parts where it has to instantiate its own FakeTransport objects and IPv4Addresses and whatever.  This could be streamlined a lot more.

But at the higher level, each layer will want its own public API entrypoint, to facilitate the orchestration and setup of domain-specific client/server objects and reduce boilerplate for testing at a given level.

> If this adaption behavior were bundled up differently then I think we'd get a lot more in-memory test doubles for free (or closer to it - we'd be another rung up the ladder, at least).

This I definitely agree with.  Each abstraction-level-specific fake should be a paper-thin layer over the one below, and each abstraction layer should cover a fair amount of ground for itself.  For example, you can test Klein apps trivially with treq.testing, without adding very much extra logic at all.

> That seems like it would be a big win given how few of these testing helpers Twisted has historically managed to provide (suggesting it's just too hard to do so given the current tools).

Here I think there are a few mitigating factors:

I don't actually think that it's that hard using current tools.  It's pretty easy, in fact, to build up from the bottom and layer subsequent things on top of another.
The way I see the problem that we're facing is that we realized we should be doing this many years after doing the actual implementation, and we realized this several layers up.  So we built mid-tier test mocks and then tried to build on top of them, rather than heading straight for the bottom layer.  This has lead to awkwardness like needing to monkeypatch HostnameEndpoint to avoid deferToThread calls.
So, even now, we have an anemic bottom layer.  task.Clock is pretty good, but MemoryReactor still leaves a lot to be desired.
Therefore, I don't think that we really need to build that many different abstraction layers; if we really focus on nailing down (A) MemoryReactor+iosim+something with addresses so 'connectTCP' can be hooked up to 'listenTCP' when both are given the same address, and (B) the vast majority of what folks want to be able to test is HTTP API type stuff, so integrating treq.testing (treq is license-compatible, so we can just move the code if we want) would get us a _long_ way there, and would popularize this style with a lot of other developers who might then be motivated to help improve the more obscure corners, like, say, DNS.

I've been slowly improving the testability of Twisted's core; the recent name-resolver change made a LOT of things easier.  We should be making deterministicResolvingReactor and twisted.threads (along with MemoryWorker) public, and a lot of the circuitous routes that higher-level code needed to traverse to get to "no I/O" will just go away.  I'm probably forgetting a few other building blocks, but I've noticed that each additional one that I remove makes the task more like exponentially than linearly easier.

> This is a set of ideas that I've been gradually arriving at over a long period of time, but it's probably high time for some public discussion by now, even if it's just everybody saying "yeah, that sounds good" :-).
> 
> So, it pretty much sounds good, though with the above refinements. :)

Cool.  I suspect I haven't even covered all of it with my refine-refinements above, but at this point it seems clear we can all pull in the same direction.  I wonder if a themed sprint at some point in the next year might be worthwhile?

> 
> On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)
> 
> Yes.  I almost suggested this about a week ago when I was preparing to contribute some testing code but then realized I couldn't contribute the code after all. :(

Well, now it's just a matter of time :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170111/5edb52b1/attachment-0002.html>

From tommost at gmail.com  Wed Jan 11 23:05:21 2017
From: tommost at gmail.com (Tom Most)
Date: Wed, 11 Jan 2017 22:05:21 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
 <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
Message-ID: <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>

Sure, I'd be happy to help (but won't get to it until the weekend).
Username is twm.

Thanks,
Tom

On 01/11/2017 04:44 PM, Glyph Lefkowitz wrote:
>
>> On Jan 10, 2017, at 6:43 PM, Tom Most <tommost at gmail.com
>> <mailto:tommost at gmail.com>> wrote:
>>
>> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>>>
>>>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de>
>>>> wrote:
>>>>
>>>> hi,
>>>>
>>>>
>>>> sending a simple post request with a body (cookies) results in a error
>>>> here.
>>>>
>>>> im using python 3.x with the latest twisted and treq installed via pip
>>>> in a virtualenv.
>>>
>>> Something that we discussed on IRC but did not come up in the
>>> mailing list thread may be the one issue that *should* be fixed in treq:
>>>
>>> Because of this issue, this example
>>> - http://treq.readthedocs.io/en/latest/#post - which the OP was
>>> following, doesn't work on Python 3.
>>>
>>> We should fix the docs so that it does.
>>
>> I submitted a PR to fix this a while ago:
>> https://github.com/twisted/treq/pull/152
>>
>> Also, the docs on RTD are still out of date. Who owns them? I'd be
>> happy to help.
>
> Thanks, hopefully the next time my periodic review comes around I'll
> catch that one.
>
> Looks like I own the docs.  Builds are apparently failing - should I
> add you to the project?
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170111/b7ad23bd/attachment-0002.html>

From meejah at meejah.ca  Wed Jan 11 23:12:36 2017
From: meejah at meejah.ca (meejah)
Date: Thu, 12 Jan 2017 10:12:36 +0400
Subject: [Twisted-Python] txtorcon 0.18.0
In-Reply-To: <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com> (Glyph
 Lefkowitz's message of "Wed, 11 Jan 2017 20:05:18 -0800")
References: <864m153rxi.fsf@atlantis.meejah.ca>
 <9220738B-7E1A-43FC-BA00-F73EE5D7F606@twistedmatrix.com>
Message-ID: <86mvew3iy3.fsf@atlantis.meejah.ca>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> Trying to figure out if this is a profound dissertation on the nature
> of OPSEC or just an email client crashing...

"yes".

Well, actually ... I use emacs (Gnus) for email and have *nearly entirely*
switched over to tmux for all my terminal multiplexing needs (it's
great!). Except there's that one machine that still uses "screen"
instead, and I "somehow" got confused about prefix-keys and chorded out
the "send the email" Morse-code instead of the "insert a file" one...

-- 
meejah



From glyph at twistedmatrix.com  Thu Jan 12 01:29:09 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 00:29:09 -0800
Subject: [Twisted-Python] treq POST abborting with: err: ('Could not
 adapt', '{"....", "..."} <InterfaceClass twisted.web.iweb.IBodyProducer>)
In-Reply-To: <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>
References: <1483729427.23369.21.camel@yahoo.de>
 <AAA72807-B0C9-4F5E-BDD7-DAE0EFEE3E20@twistedmatrix.com>
 <44276790-b327-a1ef-1207-b301abcd0e76@gmail.com>
 <1879093D-6DF8-484C-BE80-8CE6AC32402F@twistedmatrix.com>
 <adf43670-a091-e513-2286-48132a5fc6ff@gmail.com>
Message-ID: <64670AF1-93F5-48E6-B801-D5C64C8DB6DE@twistedmatrix.com>

Done.
-g

> On Jan 11, 2017, at 10:05 PM, Tom Most <tommost at gmail.com> wrote:
> 
> Sure, I'd be happy to help (but won't get to it until the weekend). Username is twm.
> 
> Thanks,
> Tom
> On 01/11/2017 04:44 PM, Glyph Lefkowitz wrote:
>> 
>>> On Jan 10, 2017, at 6:43 PM, Tom Most < <mailto:tommost at gmail.com>tommost at gmail.com <mailto:tommost at gmail.com>> wrote:
>>> 
>>> On 01/08/2017 06:49 PM, Glyph Lefkowitz wrote:
>>>> 
>>>>> On Jan 6, 2017, at 11:03 AM, steven meiers <commercials24 at yahoo.de <mailto:commercials24 at yahoo.de>> wrote:
>>>>> 
>>>>> hi,
>>>>> 
>>>>> 
>>>>> sending a simple post request with a body (cookies) results in a error
>>>>> here.
>>>>> 
>>>>> im using python 3.x with the latest twisted and treq installed via pip
>>>>> in a virtualenv.
>>>> 
>>>> Something that we discussed on IRC but did not come up in the mailing list thread may be the one issue that *should* be fixed in treq:
>>>> 
>>>> Because of this issue, this example -  <http://treq.readthedocs.io/en/latest/#post>http://treq.readthedocs.io/en/latest/#post <http://treq.readthedocs.io/en/latest/#post> - which the OP was following, doesn't work on Python 3.
>>>> 
>>>> We should fix the docs so that it does.
>>> 
>>> I submitted a PR to fix this a while ago:  <https://github.com/twisted/treq/pull/152>https://github.com/twisted/treq/pull/152 <https://github.com/twisted/treq/pull/152>
>>> 
>>> Also, the docs on RTD are still out of date. Who owns them? I'd be happy to help.
>> 
>> Thanks, hopefully the next time my periodic review comes around I'll catch that one.
>> 
>> Looks like I own the docs.  Builds are apparently failing - should I add you to the project?
>> 
>> -glyph
>> 
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/f9a09327/attachment-0002.html>

From hawkowl at atleastfornow.net  Thu Jan 12 03:13:35 2017
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 12 Jan 2017 21:13:35 +1100
Subject: [Twisted-Python] Twisted 16.7.0rc2 Release Candidate Announcement
Message-ID: <7F324167-FA50-4F81-B1E2-557DB356E246@atleastfornow.net>

Happy new year!

Twisted 16.7.0rc2 is out, with a bugfix for a problem scrapy ran into. Sorry for the delay in 16.7 final, we've had a few regression reports, and we've made sure to follow them all up and get to the bottom of them before we did the release!

You can get the tarball and the NEWS file at https://twistedmatrix.com/Releases/rc/16.7.0rc2/ <https://twistedmatrix.com/Releases/rc/16.7.0rc2/> , or you can try it out from PyPI:

    python -m pip install Twisted==16.7.0rc2

Please test it, and let me know how your applications fare, good or bad! It will release this weekend if nothing is reported.

Regards,
    Amber Brown
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/1a3988f8/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jan 12 05:24:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 12 Jan 2017 07:24:25 -0500
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
Message-ID: <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>

On Wed, Jan 11, 2017 at 11:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> On a related note, 'proto_helpers' is in a super awkward place.
>>  'twisted.testing', anyone? :)
>>
>
> Yes.  I almost suggested this about a week ago when I was preparing to
> contribute some testing code but then realized I couldn't contribute the
> code after all. :(
>
>
> Well, now it's just a matter of time :).
>
>
Some further thoughts on this... What I've actually been doing elsewhere (
*mostly*) is to put the testing implementations quite near the real
implementations.  For example, I recently introduced
`workproject.subscription_manager.{network_client,memory_client}`.  But
contrary to this, in txAWS I'm following the pre-existing pattern which is
more like `txaws.service.AWSServiceRegion.get_ec2_client` &
`txaws.testing.service.FakeAWSServiceRegion.get_ec2_client`.

Which I prefer, I'm not really sure yet.  Role-named modules are easy to
recognize.  On the other hand, testing code next to implementation code is
easier to stumble across and you don't *have* to recognize a separate
testing module to find it.  Also, role-named modules tend to pile up and
get in each other's way (start working with `twisted.testing`,
`txaws.testing`, etc and things start to get confusing quickly).

Additionally, a related idea is that often the testing implementation might
actually serve as a good starting place for the real implementation.  I
think the code in txAWS is a good example of this (ie, the real and fake
implementations duplicate a lot of logic with some pointless divergences).
In the olden days I would have said "the testing implementation is often a
good *base class* for the real implementation".  But now I'll mumble
something about composition.  Put another way:

   - Clock should be the real implementation of all of the time-source
   independent logic of IReactorTime
   - FakeAWSServiceRegion should be the real implementation of the "client
   factory" logic (get_XXX_client) of AWSServiceRegion

and so on.

Perhaps this also speaks to the idea you mentioned that there should be a
stack of thin abstractions but I snipped that content already so I'll try
responding to that separately, later.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/a27e8463/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jan 12 16:42:03 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 12 Jan 2017 18:42:03 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
Message-ID: <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>

Note there is still some confusion over this matter.  See <
http://twistedmatrix.com/trac/ticket/8972>, <
http://twistedmatrix.com/trac/ticket/8978>, and <
https://github.com/twisted/twisted/pull/672>.

Jean-Paul

On Tue, Jan 3, 2017 at 3:24 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <
> hawkowl at atleastfornow.net> wrote:
>
>>
>>
>> We have, in the past, fixed up historic NEWS files in later releases
>> (e.g. the one which removed 2.6 support). We could always roll these
>> changes into a post1, but, that seems like a lot of effort. Maybe we could
>> put errata on the blog?
>>
>>
> With a link to the blog post in the NEWS file?  Cold checking blog was
> below "read git history and try to correlate with the issue tracker" on my
> list of how to track down this change.
>
> Jean-Paul
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/4d295426/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan 12 22:56:46 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 21:56:46 -0800
Subject: [Twisted-Python] Testing Strategies (was Re: Streaming Requests)
In-Reply-To: <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
 <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
Message-ID: <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>


> On Jan 12, 2017, at 4:24 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Wed, Jan 11, 2017 at 11:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 9, 2017, at 4:13 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Mon, Jan 9, 2017 at 4:52 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> On a related note, 'proto_helpers' is in a super awkward place.  'twisted.testing', anyone? :)
>> 
>> Yes.  I almost suggested this about a week ago when I was preparing to contribute some testing code but then realized I couldn't contribute the code after all. :(
> 
> Well, now it's just a matter of time :).
> 
> Some further thoughts on this... What I've actually been doing elsewhere (mostly) is to put the testing implementations quite near the real implementations.  For example, I recently introduced `workproject.subscription_manager.{network_client,memory_client}`.  But contrary to this, in txAWS I'm following the pre-existing pattern which is more like `txaws.service.AWSServiceRegion.get_ec2_client` & `txaws.testing.service.FakeAWSServiceRegion.get_ec2_client`.

"Memory" implementations are definitely a step up the value hierarchy from "fake" implementations.

I guess maybe both of these patterns make sense for certain things.  It makes sense to put a memory implementation next to the real one (c.f. SQLite), but it doesn't make as much sense to put a testing implementation there.  I would make this distinction by saying a "testing" implementation is one which has assertion method helpers, simulated I/O triggers, and similar.

> Which I prefer, I'm not really sure yet.  Role-named modules are easy to recognize.  On the other hand, testing code next to implementation code is easier to stumble across and you don't have to recognize a separate testing module to find it.  Also, role-named modules tend to pile up and get in each other's way (start working with `twisted.testing`, `txaws.testing`, etc and things start to get confusing quickly).

Yeah, and I guess it'll actually be `twisted.internet.testing`, `twisted.python.testing`, `twisted.web.testing` etc.  Which we explicitly rejected with `interfaces` because it got too confusing; the existence of multiple `endpoints` modules has been mildly irritating while working on HostnameEndpoint for the last couple of days.

> Additionally, a related idea is that often the testing implementation might actually serve as a good starting place for the real implementation.  I think the code in txAWS is a good example of this (ie, the real and fake implementations duplicate a lot of logic with some pointless divergences).  In the olden days I would have said "the testing implementation is often a good base class for the real implementation".  But now I'll mumble something about composition.

Yeah, I think this is the broader point, actually - the best possible "fake" implementation is a completely real implementation where the lower level it's composing against is fake.

> Put another way:
> Clock should be the real implementation of all of the time-source independent logic of IReactorTime
One minor tweak: Clock itself should be split into two objects, one of which has just 'advance' and one of which has IReactorTime <https://glyph.twistedmatrix.com/2015/05/separate-your-fakes-and-your-inspectors.html <https://glyph.twistedmatrix.com/2015/05/separate-your-fakes-and-your-inspectors.html>>.  Possibly three objects, since it gets its `seconds` from somewhere else?
> FakeAWSServiceRegion should be the real implementation of the "client factory" logic (get_XXX_client) of AWSServiceRegion 
> and so on.

Yes, definitely.

> Perhaps this also speaks to the idea you mentioned that there should be a stack of thin abstractions but I snipped that content already so I'll try responding to that separately, later.


Ideally, the only "fake" implementation we should need is StringTransport and Clock; the abstractions in the middle would be wiring together the layers in a way that's convenient for test clients to access.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/2b17487a/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan 12 23:13:05 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Jan 2017 22:13:05 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
Message-ID: <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>

Thanks for highlighting those.  I've put the link in the other direction as well.

> On Jan 12, 2017, at 3:42 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Note there is still some confusion over this matter.  See <http://twistedmatrix.com/trac/ticket/8972 <http://twistedmatrix.com/trac/ticket/8972>>, <http://twistedmatrix.com/trac/ticket/8978 <http://twistedmatrix.com/trac/ticket/8978>>, and <https://github.com/twisted/twisted/pull/672 <https://github.com/twisted/twisted/pull/672>>.
> 
> Jean-Paul
> 
> On Tue, Jan 3, 2017 at 3:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Tue, Jan 3, 2017 at 3:22 PM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> 
> We have, in the past, fixed up historic NEWS files in later releases (e.g. the one which removed 2.6 support). We could always roll these changes into a post1, but, that seems like a lot of effort. Maybe we could put errata on the blog?
> 
> 
> With a link to the blog post in the NEWS file?  Cold checking blog was below "read git history and try to correlate with the issue tracker" on my list of how to track down this change.
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170112/706014bb/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan 15 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Jan 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1484463918.57.8179539630336027116@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170115/81903290/attachment-0002.html>

From romanmescheryakov at yandex.ru  Mon Jan 16 07:15:24 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 16 Jan 2017 17:15:24 +0300
Subject: [Twisted-Python] =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
Message-ID: <105651484576124@web20o.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170116/468347a3/attachment-0002.html>

From ngoonee.talk at gmail.com  Mon Jan 16 14:26:35 2017
From: ngoonee.talk at gmail.com (Oon-Ee Ng)
Date: Tue, 17 Jan 2017 05:26:35 +0800
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <105651484576124@web20o.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
Message-ID: <CAGQ70es1NM2Y+nY-Q0-EMceYrmd12X0pj4xaDbQt7Wj3b81+hg@mail.gmail.com>

On Mon, Jan 16, 2017 at 10:15 PM, Роман Мещеряков
<romanmescheryakov at yandex.ru> wrote:
> Hi everyone! I’m new to Twisted and mailing lists, so please excuse me if I
> make some mistake. My question maybe trivial, but as far as I know it is
> neither explained on the twistedmatrix.com web site nor easily resolved
> using Google search. The question is: how can Perspective Broker server get
> an IP address of the client the server is being called by? For example,
> let’s consider first PB server example on the Using Perspective Broker page,
> pbsimple.py. Inside remote_echo method of the Echoer class, how one could
> obtain IP address of a client that is calling this method?
>
> One of solutions I found in Google requires client to pass some
> pb.Referenceable object as a parameter to a call, and then server is able to
> get client’s IP address by calling broker.transport.getPeer().host on that
> object. But passing pb.Referenceable just for purpose of getting caller’s IP
> address seems not very convenient. Are there more simple way?

Have not used PB myself, but based on the rest of twisted,
self.transport.client should have the information you need?



From twisted-python at 2xlp.com  Mon Jan 16 17:16:12 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Mon, 16 Jan 2017 19:16:12 -0500
Subject: [Twisted-Python] suggestions sought on multi-service application
	dealing with shared database issue
Message-ID: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>


I have a few ideas on how to handle this, but wanted to see if anyone else has dealt with this and has a recommended approach:

I have a twisted daemon that I will loosely describe as this:

	* an application defined in a `.tac` file that is an instance of `twisted.application.service.Application`
	* multiple user-defined services (IIRC 8 or 9) that are subclasses as twisted.application.internet.TimeService
	* the services are added to the application via `setServiceParent`
	* the reactor is started via `twisted.internet.reactor.run()`

I've run into an annoying issue a few times, and need to temporarily suspend all/most of the services from running...  an internal backup script occasionally breaks (on a new edge case every time we fix it) and ends up consuming 100% of disk space.  This cascades into database failures in my application.

I've got an external service monitoring disk-space and alerting me.  It's presently shutting down the twisted daemon when the error happens, but I'd like to keep twisted running and just adapt to the server conditions.

The two ideas I had so far:

1. Create a new service that monitors server conditions and can call stopService/startService on registered services as needed
2. Keep all the services running, but put a conditional check in the timer service's callable

has anyone preferred one of these, or something different, in the past?




From glyph at twistedmatrix.com  Mon Jan 16 23:50:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jan 2017 22:50:36 -0800
Subject: [Twisted-Python]
 =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
 =?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <105651484576124@web20o.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
Message-ID: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>


> On Jan 16, 2017, at 6:15 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! I’m new to Twisted and mailing lists, so please excuse me if I make some mistake.

Hi Roman! Doing great so far, no mistakes I can see.

> My question maybe trivial, but as far as I know it is neither explained on the twistedmatrix.com web site nor easily resolved using Google search. The question is: how can Perspective Broker server get an IP address of the client the server is being called by? For example, let’s consider first PB server example on the Using Perspective Broker <http://twistedmatrix.com/documents/current/core/howto/pb-usage.html> page, pbsimple.py. Inside remote_echo method of the Echoer class, how one could obtain IP address of a client that is calling this method?

This is a great question and really points to a weakness in the PB documentation.

> One of solutions I found in Google requires client to pass some pb.Referenceable object as a parameter to a call, and then server is able to get client’s IP address by calling broker.transport.getPeer().host on that object. But passing pb.Referenceable just for purpose of getting caller’s IP address seems not very convenient. Are there more simple way?

Yeah, adding a Referenceable argument is not really the right way to go; you don't want to have to expose a whole object and thereby change your network protocol just to get access to an object that's already present in the existing implementation.

What you need to do here is take advantage of the remoteMessageReceived method, https://twistedmatrix.com/documents/16.6.0/api/twisted.spread.pb.Referenceable.html#remoteMessageReceived <https://twistedmatrix.com/documents/16.6.0/api/twisted.spread.pb.Referenceable.html#remoteMessageReceived>, which is what actually calls the remote_ method for you.

The documentation isn't entirely clear, as it says it's calling the remote_ method with "the same" arguments, but if you look at the implementation, it is fairly straightforward:

https://github.com/twisted/twisted/blob/3257fbb3504329f603cc9b6e17442d913170b5d1/src/twisted/spread/flavors.py#L104-L124 <https://github.com/twisted/twisted/blob/3257fbb3504329f603cc9b6e17442d913170b5d1/src/twisted/spread/flavors.py#L104-L124>

it deserializes the arguments, calls the method, and serializes the result.

Notice that in order to do this serializing and deserializing, it's called with the broker, which is the object that has the IP you want.  So you could override this method to do its own serialization and deserialization.  But, luckily enough, there's something very close to what you want already: ViewPoint, which already does the insertion-of-an-argument for you.  So here's a little hack which will insert 'broker' as the first argument and call a 'view_' method rather than a 'remote_' one:

from twisted.spread.flavors import Referenceable, ViewPoint
class BrokerizedReferenceable(Referenceable, object):
    def remoteMessageReceived(self, broker, message, args, kw):
        return (ViewPoint(broker, self)
                .remoteMessageReceived(broker, message, args, kw))


This is untested but hopefully it will be close enough to put you on your way.  Make sense?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170116/3e9828ee/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 17 03:08:03 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 02:08:03 -0800
Subject: [Twisted-Python] suggestions sought on multi-service
 application dealing with shared database issue
In-Reply-To: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
Message-ID: <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>


> On Jan 16, 2017, at 16:16, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
> 
> I have a few ideas on how to handle this, but wanted to see if anyone else has dealt with this and has a recommended approach:
> 
> I have a twisted daemon that I will loosely describe as this:
> 
> 	* an application defined in a `.tac` file that is an instance of `twisted.application.service.Application`
> 	* multiple user-defined services (IIRC 8 or 9) that are subclasses as twisted.application.internet.TimeService
> 	* the services are added to the application via `setServiceParent`
> 	* the reactor is started via `twisted.internet.reactor.run()`
> 
> I've run into an annoying issue a few times, and need to temporarily suspend all/most of the services from running...  an internal backup script occasionally breaks (on a new edge case every time we fix it) and ends up consuming 100% of disk space.  This cascades into database failures in my application.
> 
> I've got an external service monitoring disk-space and alerting me.  It's presently shutting down the twisted daemon when the error happens, but I'd like to keep twisted running and just adapt to the server conditions.
> 
> The two ideas I had so far:
> 
> 1. Create a new service that monitors server conditions and can call stopService/startService on registered services as needed
> 2. Keep all the services running, but put a conditional check in the timer service's callable
> 
> has anyone preferred one of these, or something different, in the past?

It depends if it's easier to keep track of when changes happen, or determine what the current state is.

If it's easier to keep track of when changes happen, I would recommend calling `setServiceParent` to add/remove the service to the active service hierarchy.  (This will call `startService` / `stopService` for you automatically, as well as cooperating with things like ^c so it's better than calling them yourself).

If it's easier to query the current state, then a conditional in the timer is a lot simpler.

-glyph




From commercials24 at yahoo.de  Tue Jan 17 05:04:04 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 17 Jan 2017 13:04:04 +0100
Subject: [Twisted-Python] twisted code works,
	after importing it does not anymore
In-Reply-To: <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>
References: <20170108064432.fscacjstbglfoisz@hammal>
 <CAEeXt4NE_FRvA2e-20Rro1SJgQ1K+8H3MLmyj9z6OA+eoT1n0g@mail.gmail.com>
 <464CBB36-3247-4201-9BFB-7ADC2AF3D655@twistedmatrix.com>
 <CAEeXt4OhL=zJEsLH7Obr8J8c9KdCY7+f-4U=8bCDDq+y+8qQ7g@mail.gmail.com>
 <10E8649A-A981-432D-BA39-9EC935CE1CAE@twistedmatrix.com>
 <CAEeXt4PYVmao0Bgg6x=iVms3BZBTvDxc3cRQ_B8CJ4DUHW+zHg@mail.gmail.com>
 <BF253B90-9F37-4A52-8FA6-17BAFC0053C3@twistedmatrix.com>
Message-ID: <1484654644.5985.3.camel@yahoo.de>

hi,



this websocket code works but now i would like to be able to import it
to another class to have a way to send messages without waiting for the
answer.

the code is below here and also pasted here: https://bpaste.net/show/78
36ba3b8008 for some nice syntax highlighting.


just running websockets.py works...sending and receiving messages.
importing does not, says:

builtins.AttributeError: 'MyClientProtocol' object has no attribute
'deferred'


any ideas why it does give me this error?



but since the code works on its own i dont see why it can be imported.

first code paste is the import test which fails, after that is the
error mesage and at the  end is the code (mywebsocket.py) that is to be
imported.



from mywebsocket import runIt
import sys
from autobahn.twisted.websocket import WebSocketClientProtocol, \
            WebSocketClientFactory
from mywebsocket import MyClientProtocol
from twisted.python import log
from twisted.internet import reactor

if __name__ == '__main__':
    log.startLogging(sys.stdout)

    factory = WebSocketClientFactory(u"ws://127.0.0.1:8080/javaee7-
websocket-chat/chat/arduino")
    factory.protocol = MyClientProtocol
    reactor.connectTCP("127.0.0.1", 8080, factory)

    d, factory = runIt()
    def test_sendMessage(result):
        print("test_sesndMessage():", result)
        factory.p.sendMessage('python client', 'very nice message')

    d.addCallback(test_sendMessage)
    reactor.run()






python testimport.py 
2017-01-17 12:57:43+0100 [-] Log opened.
2017-01-17 12:57:43+0100 [-] Starting factory
<autobahn.twisted.websocket.WebSocketClientFactory object at
0x7fea4c21d358>
2017-01-17 12:57:43+0100 [-] Starting factory <mywebsocket.MyFactory
object at 0x7fea48a34b38>
2017-01-17 12:57:43+0100 [-] Server connected: tcp4:127.0.0.1:8080
2017-01-17 12:57:43+0100 [-] WebSocket connection open.
2017-01-17 12:57:43+0100 [-] test_sesndMessage(): yep that worked
2017-01-17 12:57:43+0100 [-] Server connected: tcp4:127.0.0.1:8080
2017-01-17 12:57:43+0100 [-] WebSocket connection open.
2017-01-17 12:57:43+0100 [MyClientProtocol,client] Unhandled Error
	Traceback (most recent call last):
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/log.py", line
103, in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/log.py", line
86, in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args,
**kw)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/context.py",
line 118, in callWithContext
	    return self.currentContext().callWithContext(ctx, func,
*args, **kw)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/python/context.py",
line 81, in callWithContext
	    return func(*args,**kw)
	--- <exception caught here> ---
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/posixbase.py", 
line 597, in _doReadOrWrite
	    why = selectable.doRead()
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/tcp.py", line
208, in doRead
	    return self._dataReceived(data)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/twisted/internet/tcp.py", line
214, in _dataReceived
	    rval = self.protocol.dataReceived(data)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/autobahn/twisted/websocket.py", 
line 132, in dataReceived
	    self._dataReceived(data)
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 1183, in _dataReceived
	    self.consumeData()
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 1212, in consumeData
	    self.processHandshake()
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-
packages/autobahn/websocket/protocol.py", line 3784, in
processHandshake
	    self._onOpen()
	  File "/home/julius/code/python/twisted/webchat-
client/venv/lib/python3.5/site-packages/autobahn/twisted/websocket.py", 
line 142, in _onOpen
	    self.onOpen()
	  File "/home/julius/code/python/twisted/webchat-
client/mywebsocket.py", line 18, in onOpen
	    self.deferred.callback('yep that worked')
	builtins.AttributeError: 'MyClientProtocol' object has no
attribute 'deferred'
	
2017-01-17 12:57:43+0100 [-] WebSocket connection closed: connection
was closed uncleanly (peer dropped the TCP connection without previous
WebSocket closing handshake)
2017-01-17 12:57:43+0100 [-] Stopping factory
<autobahn.twisted.websocket.WebSocketClientFactory object at
0x7fea4c21d358>
2017-01-17 12:57:43+0100 [-] Text message received: {"message":"very
nice message","sender":"python client","received":"Tue Jan 17 12:57:43
CET 2017"}
^C2017-01-17 12:57:44+0100 [-] Received SIGINT, shutting down.
2017-01-17 12:57:44+0100 [-] WebSocket connection closed: connection
was closed uncleanly (peer dropped the TCP connection without previous
WebSocket closing handshake)
2017-01-17 12:57:44+0100 [-] Stopping factory <mywebsocket.MyFactory
object at 0x7fea48a34b38>
2017-01-17 12:57:44+0100 [-] Main loop terminated.







mywebsocket.py
from autobahn.twisted.websocket import WebSocketClientProtocol, \
    WebSocketClientFactory
import sys

from twisted.python import log
from twisted.internet import reactor, defer

import json

class MyClientProtocol(WebSocketClientProtocol):

    def onConnect(self, response):
        tmp = "Server connected: {0}".format(response.peer)
        print(tmp)

    def onOpen(self):
        print("WebSocket connection open.")
        self.deferred.callback('yep that worked')

        def hello():
            print("sending message")
            message = json.dumps({"message":"1" ,"sender":"2",
"received":"3"}).encode('utf-8')

            
            self.sendMessage(message)
            self.factory.reactor.callLater(10, hello)


    def sendMessage(self, sender, message):
        message = json.dumps({"message": message, "sender": sender,
"received": "notusedyet"})
        super(MyClientProtocol, self).sendMessage(message.encode('utf-
8'))

    def onMessage(self, payload, isBinary):
        if isBinary:
            print("Binary message received: {0}
bytes".format(len(payload)))
        else:
            print("Text message received:
{0}".format(payload.decode('utf8')))

    def onClose(self, wasClean, code, reason):
        print("WebSocket connection closed: {0}".format(reason))




class MyFactory(WebSocketClientFactory):

    def __init__(self, deferred, *args, **kwargs):
        self.d = deferred
        super(MyFactory, self).__init__(*args, **kwargs)

    def buildProtocol(self, addr):
        p = super(MyFactory, self).buildProtocol(addr)
        self.p = p
        p.deferred = self.d
        return p



def runIt():
    log.startLogging(sys.stdout)


    d = defer.Deferred()

    factory = MyFactory(d, u"ws://127.0.0.1:8080/javaee7-websocket-
chat/chat/arduino")


    factory.protocol = MyClientProtocol
    
    def test_sendMessage(result):
        print("test_sesndMessage():", result)
        factory.p.sendMessage('python client', 'very nice message')

    reactor.connectTCP("127.0.0.1", 8080, factory)
    return (d, factory)


if __name__ == '__main__':
    runIt()
    reactor.run()



From romanmescheryakov at yandex.ru  Tue Jan 17 07:06:35 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 17 Jan 2017 17:06:35 +0300
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
Message-ID: <4889121484661995@web7h.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/fb0151c0/attachment-0002.html>

From twisted-python at 2xlp.com  Tue Jan 17 08:56:13 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 17 Jan 2017 10:56:13 -0500
Subject: [Twisted-Python] suggestions sought on multi-service
	application dealing with shared database issue
In-Reply-To: <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
Message-ID: <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>


On Jan 17, 2017, at 5:08 AM, Glyph Lefkowitz wrote:
> 
> It depends if it's easier to keep track of when changes happen, or determine what the current state is.
> 
> If it's easier to keep track of when changes happen, I would recommend calling `setServiceParent` to add/remove the service to the active service hierarchy.  (This will call `startService` / `stopService` for you automatically, as well as cooperating with things like ^c so it's better than calling them yourself).
> 
> If it's easier to query the current state, then a conditional in the timer is a lot simpler.

Thanks for the quick reply.

Can you point to some docs about setServiceParent being used to remove the service?  I couldn't find that anywhere.

I'm leaning towards that approach, because it would just consolidate where I write conditional (one place vs 9 services).  I had intended to run nagios, but got lazy and just installed monit, which was took under 3 minutes to install and configure to invoke an alert and touch/remove a marker on the filesystem to indicate state.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/853318eb/attachment-0002.html>

From romanmescheryakov at yandex.ru  Tue Jan 17 10:53:01 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 17 Jan 2017 20:53:01 +0300
Subject: [Twisted-Python] Strange ImportError after switching from OS
	package to pip
Message-ID: <6004951484675581@web11g.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/b9b59e64/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: master_player2.tac
Type: application/octet-stream
Size: 1166 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20170117/b9b59e64/attachment-0002.obj>

From exarkun at twistedmatrix.com  Tue Jan 17 11:03:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 17 Jan 2017 13:03:57 -0500
Subject: [Twisted-Python] Strange ImportError after switching from OS
 package to pip
In-Reply-To: <6004951484675581@web11g.yandex.ru>
References: <6004951484675581@web11g.yandex.ru>
Message-ID: <CAEeXt4NTvsshbt1UfHeu3gzvY2=JzUby7Quh5Y3Q_Bwao65TxA@mail.gmail.com>

On Tue, Jan 17, 2017 at 12:53 PM, Роман Мещеряков <
romanmescheryakov at yandex.ru> wrote:

> *Hi everyone! The 14.0.2 version of Twisted is latest that is available
> for Raspbian as a package, so until today I used it. I run my Twisted
> application in the following way:*
>
>
> *twistd -ny master_player2.tac*
>
>
> *There were no problems with starting my application.*
>
> *Yesterday I started facing strange problem with unjellying which looked
> like a bug. So I decided to remove old package version of Twisted
> (installed using apt-get) and install latest version using pip (which was
> 16.6.0). The commands I issued were (typing by memory):*
>
>
Seems likely related to
http://twistedmatrix.com/pipermail/twisted-python/2017-January/031021.html

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/a6f59209/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 17 16:41:20 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:41:20 -0800
Subject: [Twisted-Python]
 =?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
 =?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <4889121484661995@web7h.yandex.ru>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
 <4889121484661995@web7h.yandex.ru>
Message-ID: <EFF2AB60-7C13-4120-BE4D-DE7DCE3EF60F@twistedmatrix.com>


> On Jan 17, 2017, at 6:06 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> 17.01.2017, 09:52, "Glyph Lefkowitz" <glyph at twistedmatrix.com>:
>>  
> 
>> This is untested but hopefully it will be close enough to put you on your way.  Make sense?
> 
>  
> This works perfectly! Thank you very much! :)

Glad we could help!

-g


From glyph at twistedmatrix.com  Tue Jan 17 16:42:02 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:42:02 -0800
Subject: [Twisted-Python] suggestions sought on multi-service
 application dealing with shared database issue
In-Reply-To: <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
 <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
Message-ID: <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>


> On Jan 17, 2017, at 7:56 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
> Can you point to some docs about setServiceParent being used to remove the service?  I couldn't find that anywhere.

Sorry, I meant you should use https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent <https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent> disownServiceParent.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/ef28417f/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 17 16:48:01 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jan 2017 15:48:01 -0800
Subject: [Twisted-Python] Strange ImportError after switching from OS
 package to pip
In-Reply-To: <6004951484675581@web11g.yandex.ru>
References: <6004951484675581@web11g.yandex.ru>
Message-ID: <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>


> On Jan 17, 2017, at 9:53 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! The 14.0.2 version of Twisted is latest that is available for Raspbian as a package, so until today I used it. I run my Twisted application in the following way:
> twistd -ny master_player2.tac
> There were no problems with starting my application.
> Yesterday I started facing strange problem with unjellying which looked like a bug. So I decided to remove old package version of Twisted (installed using apt-get) and install latest version using pip (which was 16.6.0). The commands I issued were (typing by memory):
>  
> sudo apt-get purge python-twisted
> sudo apt-get autoremove
> sudo pip install Twisted

I should point out here that you should not modify your operating system like this.  If /usr/ is managed with 'apt', then let it do that; 'pip' and 'apt' can't manage the same files without stomping on each other.  Better would be to create a virtualenv for your application and 'pip install Twisted[tls,http2]' in there.

In this specific case, on a raspberry pi which is purpose-built, you'll probably be fine, but `sudo pip install` is just a bad habit to get into.

> After issuing these commands, without rebooting, I tried running my program as usual:
> ...
> exceptions.ImportError: No module named shared
> Failed to load application: No module named shared

Try `PYTHONPATH=.` on the command line before `twistd`.

(Also, you might want to try `twist` instead, then you don't need the `-n` option...)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/1d11dce0/attachment-0002.html>

From twisted-python at 2xlp.com  Tue Jan 17 17:56:50 2017
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 17 Jan 2017 19:56:50 -0500
Subject: [Twisted-Python] suggestions sought on multi-service
	application dealing with shared database issue
In-Reply-To: <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>
References: <11779FC1-40B1-4CA3-AC28-382DE325E438@2xlp.com>
 <3D875497-CD00-4B14-86A6-2077E744E390@twistedmatrix.com>
 <03A5EB70-6703-42E8-96B8-9C004F9B616A@2xlp.com>
 <CAEEAE89-9174-42AC-A62E-7387DC27F22A@twistedmatrix.com>
Message-ID: <91D4D96E-3A13-47CD-A083-BD3678DB213C@2xlp.com>


On Jan 17, 2017, at 6:42 PM, Glyph Lefkowitz wrote:

> 
> Sorry, I meant you should use https://twistedmatrix.com/documents/16.6.0/api/twisted.application.service.IService.html#disownServiceParent disownServiceParent.
> 

wonderful!  thanks! so much!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170117/524b6179/attachment-0002.html>

From romanmescheryakov at yandex.ru  Wed Jan 18 00:59:00 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Wed, 18 Jan 2017 10:59:00 +0300
Subject: [Twisted-Python] Strange ImportError after switching from OS
	package to pip
In-Reply-To: <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>
References: <6004951484675581@web11g.yandex.ru>
 <FB91F533-C0BC-45B9-BFCB-A4E8FBFAFF01@twistedmatrix.com>
Message-ID: <5718771484726340@web23m.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170118/02878d3c/attachment-0002.html>

From wolfgang.kde at rohdewald.de  Thu Jan 19 18:05:57 2017
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Fri, 20 Jan 2017 02:05:57 +0100
Subject: [Twisted-Python]
	=?utf-8?q?How_to_get_caller=E2=80=99s_IP_address?=
	=?utf-8?q?_in_Perspective_Broker_server?=
In-Reply-To: <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
References: <105651484576124@web20o.yandex.ru>
 <B6696D7F-9368-444F-AE7E-3218039318BC@twistedmatrix.com>
Message-ID: <106067578.pCpfLDCRkk@skull>

Am Montag, 16. Januar 2017, 22:50:36 CET schrieb Glyph Lefkowitz:
> This is untested but hopefully it will be close enough to put you on your
> way.  Make sense?

if you plan to use the portal/realm/avatar things later on, 
you can use avatar.source()

-- 
Wolfgang



From romanmescheryakov at yandex.ru  Fri Jan 20 02:33:36 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Fri, 20 Jan 2017 12:33:36 +0300
Subject: [Twisted-Python] =?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
	=?utf-8?q?_Logger_instance?=
Message-ID: <3743771484904816@web24h.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170120/42ed299f/attachment-0002.html>

From ok9 at a.xpbsx.com  Fri Jan 20 12:50:50 2017
From: ok9 at a.xpbsx.com (Sunsesoft.Du)
Date: Sat, 21 Jan 2017 03:50:50 +0800
Subject: [Twisted-Python] =?gb2312?b?zeLDs8jtvP7X1Nb30dC3oqOswfnE6rv9wNs=?=
	=?gb2312?b?tcTN4sOzyO28/sa3xcY=?=
Message-ID: <201701210350508165556@a.xpbsx.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170121/965f3b5b/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 20 22:53:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Jan 2017 21:53:18 -0800
Subject: [Twisted-Python]
 =?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
 =?utf-8?q?_Logger_instance?=
In-Reply-To: <3743771484904816@web24h.yandex.ru>
References: <3743771484904816@web24h.yandex.ru>
Message-ID: <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>

> On Jan 20, 2017, at 1:33 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> I expect the text between ‘[‘ and ‘#’ to be ‘ad_hoc’, but it is auto-generated name instead. Am I doing something wrong or this is a bug?

This is indeed a bug!  And a pretty serious one; it's explicitly documented to work otherwise.  Please file it.

The reason that this happens is that the 'namespace' field is filled out by the descriptor (__get__ method) of the `Logger` object when it is bound to `self`.

You can work around this in the meanwhile by changing your example to be like so:


import sys
from twisted.logger import (Logger, textFileLogObserver)

observer = textFileLogObserver(sys.stdout)

class MyClass:
    @property
    def log(self):
        return Logger(namespace="ad_hoc", observer=observer, source=self)

    def __init__(self):
        self.log.info("MyClass.__init__ called!")

    def __del__(self):
        self.log.info("Bye!")

obj = MyClass()

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170120/46db2fc7/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 20 23:21:03 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Jan 2017 22:21:03 -0800
Subject: [Twisted-Python] conch problem with ecdsa-sha2-nistp256 host
	key?
In-Reply-To: <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
References: <CAG=rPVeh1V-knqaCq=hmhhbZVbnTEcibTHWfY6J07=QhMV2t_Q@mail.gmail.com>
 <20161202030124.GA19532@hammal>
 <1553C08C-AA06-4FB3-90DC-11D881295764@twistedmatrix.com>
 <CAG=rPVc-ahNjN+br2MV-S5rTng71Y1jvR94oXJaZed+CZhskxw@mail.gmail.com>
 <E464AABC-DB66-44E6-9482-594254B907EA@twistedmatrix.com>
 <CAG=rPVdKNnD-gs3Aj+20HG-5BLJOmh7KEPUab5fD2A6P=ME96Q@mail.gmail.com>
 <720D721B-8360-43BE-8371-2DE572E18DF4@twistedmatrix.com>
 <CAG=rPVe1=ZWf19tFbJxuvLzpB62w5JSXf+cJ7hFYC83Xac7c=A@mail.gmail.com>
 <A224B127-D889-485E-8007-3D16592305E6@twistedmatrix.com>
 <CAG=rPVdiZSq4N+vx7na2yJMaNwh=AgUoNDBgBq_jNsXs+ghsOA@mail.gmail.com>
 <7B22DAAB-497F-49EC-9E31-64C061F6C8FE@twistedmatrix.com>
 <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
Message-ID: <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>


> On Dec 21, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Wed, Dec 21, 2016 at 4:46 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> 
> Can you file a new ticket for each of these?  The ordering thing seems super low priority, but not being able to receive multiple host keys is definitely a spec violation.
> 
> Thanks for figuring it out,
> 
> 
> Can you try these two patches, combined in one workspace ?
> 
> https://github.com/twisted/twisted/pull/640 <https://github.com/twisted/twisted/pull/640>
> https://github.com/twisted/twisted/pull/642 <https://github.com/twisted/twisted/pull/642>
I finally got around to trying this, and was baffled as to why the behavior wasn't different between trunk and trunk-with-merged-PRs; then I realized the commits from both were already in trunk :-).  Seems to work great now vs. 16.0 - thank you for fixing this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170120/70ca775c/attachment-0002.html>

From rodrigc at crodrigues.org  Sat Jan 21 16:58:04 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 21 Jan 2017 15:58:04 -0800
Subject: [Twisted-Python] conch problem with ecdsa-sha2-nistp256 host
	key?
In-Reply-To: <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>
References: <CAG=rPVeh1V-knqaCq=hmhhbZVbnTEcibTHWfY6J07=QhMV2t_Q@mail.gmail.com>
 <20161202030124.GA19532@hammal>
 <1553C08C-AA06-4FB3-90DC-11D881295764@twistedmatrix.com>
 <CAG=rPVc-ahNjN+br2MV-S5rTng71Y1jvR94oXJaZed+CZhskxw@mail.gmail.com>
 <E464AABC-DB66-44E6-9482-594254B907EA@twistedmatrix.com>
 <CAG=rPVdKNnD-gs3Aj+20HG-5BLJOmh7KEPUab5fD2A6P=ME96Q@mail.gmail.com>
 <720D721B-8360-43BE-8371-2DE572E18DF4@twistedmatrix.com>
 <CAG=rPVe1=ZWf19tFbJxuvLzpB62w5JSXf+cJ7hFYC83Xac7c=A@mail.gmail.com>
 <A224B127-D889-485E-8007-3D16592305E6@twistedmatrix.com>
 <CAG=rPVdiZSq4N+vx7na2yJMaNwh=AgUoNDBgBq_jNsXs+ghsOA@mail.gmail.com>
 <7B22DAAB-497F-49EC-9E31-64C061F6C8FE@twistedmatrix.com>
 <CAG=rPVdJFnfeytFZ0j8nYt8NhBAi5SQKmBy7c4aaQ=g_Gq4jTA@mail.gmail.com>
 <6689FD2C-4833-46EC-B6BA-3866BAE4CCE3@twistedmatrix.com>
Message-ID: <CAG=rPVfRKVvUQ3tOYUSL+Qq_fkbvdGe7xgVY8+6OvbF65-XjAw@mail.gmail.com>

On Fri, Jan 20, 2017 at 10:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
>
> I finally got around to trying this, and was baffled as to why the
> behavior wasn't different between trunk and trunk-with-merged-PRs; then I
> realized the commits from both were already in trunk :-).  Seems to work
> great now vs. 16.0 - thank you for fixing this!
>
>
Many thanks to the0id  Abhishek Choudhary for doing this to add ECDSA
support to conch.
I just fixed up some of the rough edges in conch.

One minor thing I noticed about conch that deviates from the OpenSSH client
is that conch wants to write two entries in ~/.ssh/known_hosts for each
host it
connects to:
- one entry for the hostname
- one entry for the IP address

If the entry doesn't exist already, then the encoded form of the hostname
is written, so it looks like:

|1|8QluEPLDr6TMoscEvJPcpzFGhGo=|5wLvN+5WhahGWukK2XtBFd/tjaQ=
ecdsa-sha2-nistp256
AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBmhQ2+fYcGOOdLqOsRQ5wzvQjP9K1tpF9+UTwLi9UIBIWOySfJBDtkZvycrIYcNolofySA//ffJA4ka0EvfAbg=

|1|EHrWwxCedWehiySnBrsY8YW/9TE=|uDqYMkrF0rvXgQIdDsUhBgPzKEo=
ecdsa-sha2-nistp256
AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBmhQ2+fYcGOOdLqOsRQ5wzvQjP9K1tpF9+UTwLi9UIBIWOySfJBDtkZvycrIYcNolofySA//ffJA4ka0EvfAbg=
This seems quite weird to me, and I'm not sure why this behavior was
implemented
differently from the OpenSSH client.

I didn't change this behavior, though.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170121/7f54e398/attachment-0002.html>

From rodrigc at crodrigues.org  Sat Jan 21 19:15:45 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 21 Jan 2017 18:15:45 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
	yield and Python 3 in buildbot
Message-ID: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>

Hi,

I have been submitting many patches to get buildbot working on Python 3:

http://bit.ly/2jCCMPW

I have run into one problem involving inlineCallback, Deferred, and yield
which I am having difficulty solving.  Can someone help me?

If I do the following inside a Python 3 virtualenv to set things up:

git clone https://github.com/buildbot/buildbot buildbot_test
cd buildbot_test
pip install -e pkg
pip install -e worker
pip install -e 'master[tls,tests]'

trial buildbot.test.unit.test_process_buildrequestdistributor
I get this error:

==================================================================
  File
"/Users/crodrigues/buildbot_test/master/buildbot/process/buildrequestdistributor.py",
line 93, in <lambda>^M
    brdicts.sort(key=lambda brd: brd['submitted_at'])
builtins.TypeError: 'Deferred' object is not subscriptable

buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db^M
==================================================================


The code causing this problem is on line 93 of
master/buildbot/process/buildrequestdistributor.py:

 78     @defer.inlineCallbacks
 79     def _fetchUnclaimedBrdicts(self):
 80         # Sets up a cache of all the unclaimed brdicts. The cache is
 81         # saved at self.unclaimedBrdicts cache. If the cache already
 82         # exists, this function does nothing. If a refetch is desired,
set
 83         # the self.unclaimedBrdicts to None before calling."""
 84         if self.unclaimedBrdicts is None:
 85             # TODO: use order of the DATA API
 86             brdicts = yield self.master.data.get(('builders',
 87                                                   (yield
self.bldr.getBuilderId()),
 88                                                   'buildrequests'),
 89
 [resultspec.Filter('claimed',
 90
'eq',
 91
[False])])
 92             # sort by submitted_at, so the first is the oldest
 93             brdicts.sort(key=lambda brd: brd['submitted_at'])
 94             self.unclaimedBrdicts = brdicts
 95         defer.returnValue(self.unclaimedBrdicts)

If I run the test on Python 2, I don't get the error, and on line 93,
brdicts is a dict.
However, if I run the test on Python 3, brdicts is a Deferred, thus the
error.

Can someone point me in the right direction for solving this problem?

I am not so familiar with the differences in generators and Deferreds
between Python 2 and 3.

Thanks.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170121/bb273520/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Jan 21 21:06:19 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jan 2017 20:06:19 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
Message-ID: <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>


> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> If I run the test on Python 2, I don't get the error, and on line 93, brdicts is a dict.
> However, if I run the test on Python 3, brdicts is a Deferred, thus the error.

This really ought to be impossible.  If I were seeing this, single-stepping through inlineCallbacks in pudb would probably be my next step.  Have you made any attempts to simplify it down to remove some of the buildbot-specific code?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170121/67b7f488/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan 22 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Jan 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1485068719.71.358662516567930366@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/30c7b45c/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:15:15 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:15:15 -0500
Subject: [Twisted-Python] admin/pr_as_branch
Message-ID: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>

Hello,

I didn't find any hints about the workflow surrounding the
admin/pr_as_branch tool so I invented one and wrote it up on the wiki:

https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/03a77f04/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 22 18:19:22 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 17:19:22 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
Message-ID: <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>


> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
> 
> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
> 
> Jean-Paul

Thanks for writing this up.  The workflow is evolving organically.

However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/faf8358e/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:24:26 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:24:26 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
Message-ID: <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Hello,
>
> I didn't find any hints about the workflow surrounding the
> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>
> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>
> Jean-Paul
>
>
> Thanks for writing this up.  The workflow is evolving organically.
>
> However, the "close the PR" step confuses me.  If you do this, the
> original contributor won't be able to respond to feedback.  What is the
> desired effect of this second PR?
>


The idea I heard is that it provides a place to hang build failure-related
review comments.  I also had some vague notion that it would be the place
you'd look to see the complete CI results.

So.  Where should further reviews go and where do you find CI results, if
you don't create a new PR?

Jean-Paul



>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/368aeb3f/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 22 18:28:43 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 17:28:43 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
Message-ID: <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>


> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> Hello,
>> 
>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>> 
>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>> 
>> Jean-Paul
> 
> Thanks for writing this up.  The workflow is evolving organically.
> 
> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
> 
> 
> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
> 
> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?

You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)

As far as further reviews - on the existing PR too, same as usual.

You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/a91eab1f/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:31:37 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:31:37 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
Message-ID: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>> Hello,
>>
>> I didn't find any hints about the workflow surrounding the
>> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>
>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>>
>> Jean-Paul
>>
>>
>> Thanks for writing this up.  The workflow is evolving organically.
>>
>> However, the "close the PR" step confuses me.  If you do this, the
>> original contributor won't be able to respond to feedback.  What is the
>> desired effect of this second PR?
>>
>
>
> The idea I heard is that it provides a place to hang build failure-related
> review comments.  I also had some vague notion that it would be the place
> you'd look to see the complete CI results.
>
> So.  Where should further reviews go and where do you find CI results, if
> you don't create a new PR?
>
>
> You find the CI results on the existing PR; they'll be displayed there.
> You just need to make sure that a branch in the repo has the exact same
> commit ID when you push it as the PR has.  (Statuses are reported on
> commits, and triggered on pushes, so everything should just line up.)
>
>
After the branch in the repo is all set (which I assume pr_as_branch will
do), does CI notice without further help and start the necessary builds?


> As far as further reviews - on the existing PR too, same as usual.
>
> You will need to run the script again when the contributor pushes their
> response to a review.  One feature that would be useful is to not need to
> specify the branch name twice, but if you name the second pr_as_branch
> invocation differently, it just means one more branch that should be
> deleted when looking at git branch --merged.
>
>
Yep, that makes sense.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/7c4785b7/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Jan 22 18:51:13 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 22 Jan 2017 20:51:13 -0500
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
Message-ID: <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>

On Sun, Jan 22, 2017 at 8:31 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>>
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <
>>> exarkun at twistedmatrix.com> wrote:
>>>
>>> Hello,
>>>
>>> I didn't find any hints about the workflow surrounding the
>>> admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>>
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76
>>>
>>> Jean-Paul
>>>
>>>
>>> Thanks for writing this up.  The workflow is evolving organically.
>>>
>>> However, the "close the PR" step confuses me.  If you do this, the
>>> original contributor won't be able to respond to feedback.  What is the
>>> desired effect of this second PR?
>>>
>>
>>
>> The idea I heard is that it provides a place to hang build
>> failure-related review comments.  I also had some vague notion that it
>> would be the place you'd look to see the complete CI results.
>>
>> So.  Where should further reviews go and where do you find CI results, if
>> you don't create a new PR?
>>
>>
>> You find the CI results on the existing PR; they'll be displayed there.
>> You just need to make sure that a branch in the repo has the exact same
>> commit ID when you push it as the PR has.  (Statuses are reported on
>> commits, and triggered on pushes, so everything should just line up.)
>>
>>
> After the branch in the repo is all set (which I assume pr_as_branch will
> do), does CI notice without further help and start the necessary builds?
>
>
>> As far as further reviews - on the existing PR too, same as usual.
>>
>> You will need to run the script again when the contributor pushes their
>> response to a review.  One feature that would be useful is to not need to
>> specify the branch name twice, but if you name the second pr_as_branch
>> invocation differently, it just means one more branch that should be
>> deleted when looking at git branch --merged.
>>
>>
> Yep, that makes sense.
>

Updated:
https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75



>
> Jean-Paul
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/d25bd4eb/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 22 21:21:11 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 20:21:11 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
Message-ID: <12259365-512D-4114-B255-6BFD937B5648@twistedmatrix.com>


> On Jan 22, 2017, at 5:31 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>>> 
>>> Hello,
>>> 
>>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>> 
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>>> 
>>> Jean-Paul
>> 
>> Thanks for writing this up.  The workflow is evolving organically.
>> 
>> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
>> 
>> 
>> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
>> 
>> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?
> 
> You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)
> 
> 
> After the branch in the repo is all set (which I assume pr_as_branch will do), does CI notice without further help and start the necessary builds?

It should, yes.  It's buildbot that notices, and (my understanding is) the hook buildbot uses is "push" not "new PR".  It runs for branches in the repo even if they don't have a PR yet.

> As far as further reviews - on the existing PR too, same as usual.
> 
> You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.
> 
> 
> Yep, that makes sense.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/f94c8c11/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 22 21:21:21 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Jan 2017 20:21:21 -0800
Subject: [Twisted-Python] admin/pr_as_branch
In-Reply-To: <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>
References: <CAEeXt4Mw0nx4VWA-tRdCkmBB4Yh=j1j5qAiNFoBsJQwTfLsxCg@mail.gmail.com>
 <5811E6D6-77E1-489D-9F51-2B75C46FEFF9@twistedmatrix.com>
 <CAEeXt4Onjfo950K_yA7MhD72C+TLi5Lt4msPUYHOi7Cc--9hLA@mail.gmail.com>
 <D831BC20-D95C-4AC0-8170-12C35078E767@twistedmatrix.com>
 <CAEeXt4P8QyWpAVXcMT=5b1rimm3nvBjLJa5bHWcdebbOH1PB1w@mail.gmail.com>
 <CAEeXt4Mr_QUNxvL9tJT3TBRFU=pWqCZVta0_4Yvfgihq_9t_5Q@mail.gmail.com>
Message-ID: <E75F3D3A-5262-4999-AAED-4D27612E92FE@twistedmatrix.com>


> On Jan 22, 2017, at 5:51 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Jan 22, 2017 at 8:31 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Sun, Jan 22, 2017 at 8:28 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 22, 2017, at 5:24 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Sun, Jan 22, 2017 at 8:19 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 22, 2017, at 5:15 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>>> 
>>> Hello,
>>> 
>>> I didn't find any hints about the workflow surrounding the admin/pr_as_branch tool so I invented one and wrote it up on the wiki:
>>> 
>>> https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=76>
>>> 
>>> Jean-Paul
>> 
>> Thanks for writing this up.  The workflow is evolving organically.
>> 
>> However, the "close the PR" step confuses me.  If you do this, the original contributor won't be able to respond to feedback.  What is the desired effect of this second PR?
>> 
>> 
>> The idea I heard is that it provides a place to hang build failure-related review comments.  I also had some vague notion that it would be the place you'd look to see the complete CI results.
>> 
>> So.  Where should further reviews go and where do you find CI results, if you don't create a new PR?
> 
> You find the CI results on the existing PR; they'll be displayed there.  You just need to make sure that a branch in the repo has the exact same commit ID when you push it as the PR has.  (Statuses are reported on commits, and triggered on pushes, so everything should just line up.)
> 
> 
> After the branch in the repo is all set (which I assume pr_as_branch will do), does CI notice without further help and start the necessary builds?
>  
> As far as further reviews - on the existing PR too, same as usual.
> 
> You will need to run the script again when the contributor pushes their response to a review.  One feature that would be useful is to not need to specify the branch name twice, but if you name the second pr_as_branch invocation differently, it just means one more branch that should be deleted when looking at git branch --merged.
> 
> 
> Yep, that makes sense.
> 
> Updated: https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75 <https://twistedmatrix.com/trac/wiki/ReviewProcess?action=diff&version=77&old_version=75>
Thanks!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170122/4330f6ab/attachment-0002.html>

From romanmescheryakov at yandex.ru  Mon Jan 23 01:26:46 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 23 Jan 2017 11:26:46 +0300
Subject: [Twisted-Python]
	=?utf-8?q?Can=E2=80=99t_change_namespace_for_the?=
	=?utf-8?q?_Logger_instance?=
In-Reply-To: <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>
References: <3743771484904816@web24h.yandex.ru>
 <F31C7DBC-E37E-4948-AB51-27C5FE351772@twistedmatrix.com>
Message-ID: <4774291485160006@web34m.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170123/21a26bf6/attachment-0002.html>

From rodrigc at crodrigues.org  Mon Jan 23 17:08:57 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 23 Jan 2017 16:08:57 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
Message-ID: <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>

On Sat, Jan 21, 2017 at 8:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
> If I run the test on Python 2, I don't get the error, and on line 93,
> brdicts is a dict.
> However, if I run the test on Python 3, brdicts is a Deferred, thus the
> error.
>
>
> This really ought to be impossible.  If I were seeing this,
> single-stepping through inlineCallbacks in pudb would probably be my next
> step.  Have you made any attempts to simplify it down to remove some of the
> buildbot-specific code?
>
> -glyph
>
>

I did some more debugging.  The callstack is quite deep. :/
I used this command to trigger the error:

trial
 buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db

I found in this function in buildbot's BuildRequestsEndpoint.get() function
(
https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146
) there is this line:



*        defer.returnValue(            [(yield self.db2data(br)) for br in
buildrequests])*
On Python 2, this line returns:
  an object list
  each list entry is a dictionary of name/value pairs that looks like:

[{'buildrequestid': 10, 'complete': False, 'waited_for': False,
'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
'priority': 0}]

On Python 3, this returns:
  an object <generator object BuildRequestsEndpoint.get.<locals>.<listcomp>
  of type <class 'generator'>

The self.db2data() function returns defer.succeed(data) (
https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L32
)

So it looks like on Python 3, this is not getting evaluated properly, and
the upper layer is trying
to index a Deferred instead of a list of dictionaries.

I'm not so familiar with generators/Deferreds in Py2 vs. Py3.  What is the
best way
to fix this to get consistent behavior on Py2 and Py3?

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170123/63885a1d/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan 23 18:10:56 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 23 Jan 2017 20:10:56 -0500
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
Message-ID: <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>

On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
wrote:

>
>
> On Sat, Jan 21, 2017 at 8:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 21, 2017, at 6:15 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>> If I run the test on Python 2, I don't get the error, and on line 93,
>> brdicts is a dict.
>> However, if I run the test on Python 3, brdicts is a Deferred, thus the
>> error.
>>
>>
>> This really ought to be impossible.  If I were seeing this,
>> single-stepping through inlineCallbacks in pudb would probably be my next
>> step.  Have you made any attempts to simplify it down to remove some of the
>> buildbot-specific code?
>>
>> -glyph
>>
>>
>
> I did some more debugging.  The callstack is quite deep. :/
> I used this command to trigger the error:
>
> trial  buildbot.test.unit.test_process_buildrequestdistributor.
> TestMaybeStartBuilds.test_slow_db
>
> I found in this function in buildbot's BuildRequestsEndpoint.get()
> function ( https://github.com/buildbot/buildbot/blob/master/master/
> buildbot/data/buildrequests.py#L146 ) there is this line:
>
>
>
> *        defer.returnValue(            [(yield self.db2data(br)) for br in
> buildrequests])*
> On Python 2, this line returns:
>   an object list
>   each list entry is a dictionary of name/value pairs that looks like:
>
> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
> 'priority': 0}]
>
> On Python 3, this returns:
>   an object <generator object BuildRequestsEndpoint.get.<
> locals>.<listcomp>
>   of type <class 'generator'>
>
>
Yep.

On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
comprehension.  It will have len(buildrequests) elements and each will be
the value sent back in to the generator via the yield expression.

On Python 3, the same expression is a list of one element which is a
generator expression.

This form is much clearer, I think, and behaves as intended on both
versions of Python:

    results = []
    for br in buildrequests:
        results.append((yield self.db2data(br)))
    defer.returnValue(results)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170123/23845ae8/attachment-0002.html>

From rodrigc at crodrigues.org  Tue Jan 24 13:48:07 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Tue, 24 Jan 2017 12:48:07 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
Message-ID: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>

On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>>
>>
>>
>> I did some more debugging.  The callstack is quite deep. :/
>> I used this command to trigger the error:
>>
>> trial  buildbot.test.unit.test_process_buildrequestdistributor.Tes
>> tMaybeStartBuilds.test_slow_db
>>
>> I found in this function in buildbot's BuildRequestsEndpoint.get()
>> function ( https://github.com/buildbot/buildbot/blob/master/master/buil
>> dbot/data/buildrequests.py#L146 ) there is this line:
>>
>>
>>
>> *        defer.returnValue(            [(yield self.db2data(br)) for br
>> in buildrequests])*
>> On Python 2, this line returns:
>>   an object list
>>   each list entry is a dictionary of name/value pairs that looks like:
>>
>> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
>> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
>> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
>> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
>> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
>> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
>> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>> 'priority': 0}]
>>
>> On Python 3, this returns:
>>   an object <generator object BuildRequestsEndpoint.get.<loc
>> als>.<listcomp>
>>   of type <class 'generator'>
>>
>>
> Yep.
>
> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
> comprehension.  It will have len(buildrequests) elements and each will be
> the value sent back in to the generator via the yield expression.
>
> On Python 3, the same expression is a list of one element which is a
> generator expression.
>
> This form is much clearer, I think, and behaves as intended on both
> versions of Python:
>
>     results = []
>     for br in buildrequests:
>         results.append((yield self.db2data(br)))
>     defer.returnValue(results)
>
>
>
Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.

 I'm not so familiar with generator expressions and Deferred's so have been
playing
around with things to try to understand.

I went back to the problem code, and changed:


*        defer.returnValue(            [(yield self.db2data(br)) for br in
buildrequests])*

to:

*       defer.returnValue(*
*           list([**(yield self.db2data(br)) for br in buildrequests])*

and ran the code under Python 3 and got a return value of:

           [ Deferred ]

instead of:
           [ {......} ]

where the Deferred.results value was the dictionary.

How does Python 2 directly go to returning the dictionary out of the
Deferred,
while Python 3 returns the Deferred inside the list?  self.db2data()
returns a Deferred.

Thanks.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170124/ccb10c1a/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 24 14:14:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jan 2017 13:14:32 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
Message-ID: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>


> On Jan 24, 2017, at 12:48 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
> 
> 
> 
> I did some more debugging.  The callstack is quite deep. :/
> I used this command to trigger the error:
> 
> trial  buildbot.test.unit.test_process_buildrequestdistributor.TestMaybeStartBuilds.test_slow_db
> 
> I found in this function in buildbot's BuildRequestsEndpoint.get() function ( https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146 <https://github.com/buildbot/buildbot/blob/master/master/buildbot/data/buildrequests.py#L146> ) there is this line:
> 
>         defer.returnValue(
>             [(yield self.db2data(br)) for br in buildrequests])
> 
> On Python 2, this line returns:
>   an object list
>   each list entry is a dictionary of name/value pairs that looks like:
> [{'buildrequestid': 10, 'complete': False, 'waited_for': False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6, 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None, 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for': False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13, 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None, 'priority': 0}]
> 
> 
> On Python 3, this returns:
>   an object <generator object BuildRequestsEndpoint.get.<locals>.<listcomp>
>   of type <class 'generator'>
> 
> 
> Yep.
> 
> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list comprehension.  It will have len(buildrequests) elements and each will be the value sent back in to the generator via the yield expression.
> 
> On Python 3, the same expression is a list of one element which is a generator expression.
> 
> This form is much clearer, I think, and behaves as intended on both versions of Python:
> 
>     results = []
>     for br in buildrequests:
>         results.append((yield self.db2data(br)))
>     defer.returnValue(results)
> 
> 
> 
> Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.
> 
>  I'm not so familiar with generator expressions and Deferred's so have been playing
> around with things to try to understand.
> 
> I went back to the problem code, and changed:
> 
>         defer.returnValue(
>             [(yield self.db2data(br)) for br in buildrequests])
> 
> to:
> 
>        defer.returnValue(
>            list([(yield self.db2data(br)) for br in buildrequests])
> 
> and ran the code under Python 3 and got a return value of:
> 
>            [ Deferred ]
> 
> instead of:
>            [ {......} ]
> 
> where the Deferred.results value was the dictionary.
> 
> How does Python 2 directly go to returning the dictionary out of the Deferred,
> while Python 3 returns the Deferred inside the list?  self.db2data() returns a Deferred.

I've encountered this before and quickly worked around it, but I think this might actually be a bug in python 3, or at least its documentation.

The language docs officially say that a "list display" (which is what I believe we're looking at here) "yields a new list object".  But that is not what I see here:

>>> [(yield 1) for x in range(10)]
<generator object <listcomp> at 0x10cd210f8>

That is a comprehension enclosed in square brackets, but I'm getting a generator object out rather than a list.

Is there a PEP for this that just hasn't updated the language reference?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170124/4302750e/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 24 14:17:25 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jan 2017 13:17:25 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
Message-ID: <96C1BBAA-48A7-4914-A4D5-8014B44F1964@twistedmatrix.com>


> On Jan 24, 2017, at 1:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> The language docs officially say that a "list display" (which is what I believe we're looking at here) "yields a new list object".  But that is not what I see here:
> 

I had intended to paste the reference, which is here: https://docs.python.org/2/reference/expressions.html#list-displays <https://docs.python.org/2/reference/expressions.html#list-displays>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170124/46a340f8/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Jan 25 11:06:59 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 25 Jan 2017 18:06:59 +0000
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
Message-ID: <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>

On 24/01/2017 21:14, Glyph Lefkowitz wrote:

> I've encountered this before and quickly worked around it, but I think
> this might actually be a bug in python 3, or at least its documentation.
>
> The language docs officially say that a "list display" (which is what I
> believe we're looking at here) "yields a new list object".  But that is
> not what I see here:
>
>     >>> [(yield 1) for x in range(10)]

Related, see:

http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions

http://bugs.python.org/issue10544

Basically, don't use yield inside comprehensions if you don't want 
weirdness, AFAICT :o/



From rodrigc at crodrigues.org  Thu Jan 26 02:41:51 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 26 Jan 2017 01:41:51 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
Message-ID: <CAG=rPVf2mCSwL__Zj31cQsFPY4G4MM-p4YfwbRNA=B6kKCWTdw@mail.gmail.com>

On Tue, Jan 24, 2017 at 12:48 PM, Craig Rodrigues <rodrigc at crodrigues.org>
wrote:

>
>
> On Mon, Jan 23, 2017 at 5:10 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Jan 23, 2017 at 7:08 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>>>
>>>
>>>
>>> I did some more debugging.  The callstack is quite deep. :/
>>> I used this command to trigger the error:
>>>
>>> trial  buildbot.test.unit.test_process_buildrequestdistributor.Tes
>>> tMaybeStartBuilds.test_slow_db
>>>
>>> I found in this function in buildbot's BuildRequestsEndpoint.get()
>>> function ( https://github.com/buildbot/buildbot/blob/master/master/buil
>>> dbot/data/buildrequests.py#L146 ) there is this line:
>>>
>>>
>>>
>>> *        defer.returnValue(            [(yield self.db2data(br)) for br
>>> in buildrequests])*
>>> On Python 2, this line returns:
>>>   an object list
>>>   each list entry is a dictionary of name/value pairs that looks like:
>>>
>>> [{'buildrequestid': 10, 'complete': False, 'waited_for': False,
>>> 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid': 11,
>>> 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 12, 6,
>>> 40, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>>> 'priority': 0}, {'buildrequestid': 11, 'complete': False, 'waited_for':
>>> False, 'claimed_at': None, 'results': -1, 'claimed': False, 'buildsetid':
>>> 11, 'complete_at': None, 'submitted_at': datetime.datetime(1970, 1, 2, 13,
>>> 30, tzinfo=tzutc()), 'builderid': 77, 'claimed_by_masterid': None,
>>> 'priority': 0}]
>>>
>>> On Python 3, this returns:
>>>   an object <generator object BuildRequestsEndpoint.get.<loc
>>> als>.<listcomp>
>>>   of type <class 'generator'>
>>>
>>>
>> Yep.
>>
>> On Python 2, [(yield self.db2data(br)) for br in buildrequests] is a list
>> comprehension.  It will have len(buildrequests) elements and each will be
>> the value sent back in to the generator via the yield expression.
>>
>> On Python 3, the same expression is a list of one element which is a
>> generator expression.
>>
>> This form is much clearer, I think, and behaves as intended on both
>> versions of Python:
>>
>>     results = []
>>     for br in buildrequests:
>>         results.append((yield self.db2data(br)))
>>     defer.returnValue(results)
>>
>>
>>
> Wow, thanks!  That fixed it.  I submitted those fixes upstream to buildbot.
>
>  I'm not so familiar with generator expressions and Deferred's so have
> been playing
> around with things to try to understand.
>
> I went back to the problem code, and changed:
>
>
> *        defer.returnValue(            [(yield self.db2data(br)) for br in
> buildrequests])*
>
> to:
>
> *       defer.returnValue(*
> *           list([**(yield self.db2data(br)) for br in buildrequests])*
>
> and ran the code under Python 3 and got a return value of:
>
>            [ Deferred ]
>
> instead of:
>            [ {......} ]
>
> where the Deferred.results value was the dictionary.
>
> How does Python 2 directly go to returning the dictionary out of the
> Deferred,
> while Python 3 returns the Deferred inside the list?  self.db2data()
> returns a Deferred.
>
> Thanks.
>
> --
> Craig
>


On the python-dev mailing list, Joe Jevnik gave a really excellent
explanation of what
is going on here, down to the Python bytecode level:

https://mail.python.org/pipermail/python-dev/2017-January/147244.html


--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170126/1af9491c/attachment-0002.html>

From rodrigc at crodrigues.org  Thu Jan 26 02:45:37 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 26 Jan 2017 01:45:37 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
 <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
Message-ID: <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>

On Wed, Jan 25, 2017 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

>
> Related, see:
>
> http://stackoverflow.com/questions/32139885/yield-in-list-
> comprehensions-and-generator-expressions
>
> http://bugs.python.org/issue10544
>
> Basically, don't use yield inside comprehensions if you don't want
> weirdness, AFAICT :o/
>
>
Yes, that's the exact issue!
Pointed out to me on the python-dev list:

https://mail.python.org/pipermail/python-dev/2017-January/147242.html

My vote is that this is a bug in Python.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170126/53cdff9a/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jan 26 15:34:04 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jan 2017 14:34:04 -0800
Subject: [Twisted-Python] Problems with inlineCallback, Deferred,
 yield and Python 3 in buildbot
In-Reply-To: <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>
References: <CAG=rPVeqn3XHGu17uz5KruTHYPgHNH=gKyOojHiHnCnVJs9O8g@mail.gmail.com>
 <3612FEEE-0226-47C2-89F7-07C7601980BE@twistedmatrix.com>
 <CAG=rPVfYi3MB0nwERAE80E1gG-DgtOqAx-A4yMXJqM33wb4vMA@mail.gmail.com>
 <CAEeXt4MesoFb7N8nFfc5FUtaDE8FJ1E=be6pckFOYnV=6=LJew@mail.gmail.com>
 <CAG=rPVcvW6or8eDbZ_QFdh3fe_H5f_oL844k84y2SyMOkuUFFg@mail.gmail.com>
 <38FB8C25-34FF-49CC-8535-582D3EDD299E@twistedmatrix.com>
 <d80a9453-5a0f-d9cd-b78f-85e32873c9d4@imperial.ac.uk>
 <CAG=rPVeyos-Y1vKNZ7i_kjpEwdXeQgJW7EF71sKkhBF43esz-Q@mail.gmail.com>
Message-ID: <BD87974A-7701-4D82-87D3-D193F9609249@twistedmatrix.com>


> On Jan 26, 2017, at 1:45 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> On Wed, Jan 25, 2017 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
> Related, see:
> 
> http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions <http://stackoverflow.com/questions/32139885/yield-in-list-comprehensions-and-generator-expressions>
> 
> http://bugs.python.org/issue10544 <http://bugs.python.org/issue10544>
> 
> Basically, don't use yield inside comprehensions if you don't want weirdness, AFAICT :o/
> 
> 
> Yes, that's the exact issue!
> Pointed out to me on the python-dev list:
> 
> https://mail.python.org/pipermail/python-dev/2017-January/147242.html <https://mail.python.org/pipermail/python-dev/2017-January/147242.html>
> 
> My vote is that this is a bug in Python.

Discussing on that bug, I discovered that this is sort-of fixed in python 3.6; not for generators, but for coroutines.  You can have an 'async def' function that does 'await' inside a generator and it should work.

Note that this is new in 3.6, and doesn't work in 3.5.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170126/7c01cb48/attachment-0002.html>

From romanmescheryakov at yandex.ru  Fri Jan 27 02:28:19 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Fri, 27 Jan 2017 12:28:19 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
Message-ID: <2818651485509299@web1h.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/5da53ee7/attachment-0002.html>

From rodrigc at crodrigues.org  Fri Jan 27 15:03:16 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Fri, 27 Jan 2017 14:03:16 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
Message-ID: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>

Hi,

I can't seem to create a ticket in Trac.  Can someone look?

--

Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/e8d80076/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 15:29:54 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 14:29:54 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
Message-ID: <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>


> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> I can't seem to create a ticket in Trac.  Can someone look?
> 
I can create tickets.  What behavior do you see?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/b94bc450/attachment-0002.html>

From rodrigc at crodrigues.org  Fri Jan 27 16:12:43 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Fri, 27 Jan 2017 15:12:43 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
Message-ID: <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>

On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
> Hi,
>
> I can't seem to create a ticket in Trac.  Can someone look?
>
> I can create tickets.  What behavior do you see?
>
>
After entering all the fields to create the ticket, and then clicking
submit, it would just hang
without creating the ticket.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/b2f6a27b/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:21:10 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:21:10 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
Message-ID: <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>


> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> Hi,
>> I can't seem to create a ticket in Trac.  Can someone look?
>> 
> I can create tickets.  What behavior do you see?
> 
> 
> After entering all the fields to create the ticket, and then clicking submit, it would just hang
> without creating the ticket.

Forever? No timeout?  Just the HTTP POST never returns?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/2a412d10/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:46:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:46:00 -0800
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <2818651485509299@web1h.yandex.ru>
References: <2818651485509299@web1h.yandex.ru>
Message-ID: <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>


> On Jan 27, 2017, at 1:28 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Hi everyone! On the Documentation <http://twistedmatrix.com/trac/wiki/Documentation> wiki page there is a “Mail lists” section with the “Search the ​twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>” link. I clicked the link (http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i> which redirected to https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i <https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i>) and entered there this search request: “How to get caller’s IP address in Perspective Broker server” (which is a title of question asked by me some time ago in this mailing list). The search didn’t find that question, and the newest result was of year 2009. If I search the same string in the main Google search, it is found here: http://www.mail-archive.com/twisted-python at twistedmatrix.com/ <http://www.mail-archive.com/twisted-python at twistedmatrix.com/>. Maybe the “Search the ​twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>” link should be updated?
>  

Yep.  Do you need wiki edit permissions to do so?

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/b08d7c78/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jan 27 16:49:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 18:49:33 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
Message-ID: <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>

On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>
>
> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>> Hi,
>>
>> I can't seem to create a ticket in Trac.  Can someone look?
>>
>> I can create tickets.  What behavior do you see?
>>
>>
> After entering all the fields to create the ticket, and then clicking
> submit, it would just hang
> without creating the ticket.
>
>
> Forever? No timeout?  Just the HTTP POST never returns?
>
>
FWIW, I've been experiencing similar problems.  In my case, the POST
doesn't return for as long as I care to wait (in one case, around 20
minutes).  Re-submitting, sometimes 3-5 times, generally results in a
successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit)
on Ubuntu 16.10.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/688276a0/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 16:52:27 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 15:52:27 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
Message-ID: <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>


> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> 
>> 
>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> Hi,
>>> I can't seem to create a ticket in Trac.  Can someone look?
>>> 
>> I can create tickets.  What behavior do you see?
>> 
>> 
>> After entering all the fields to create the ticket, and then clicking submit, it would just hang
>> without creating the ticket.
> 
> Forever? No timeout?  Just the HTTP POST never returns?
> 
> 
> FWIW, I've been experiencing similar problems.  In my case, the POST doesn't return for as long as I care to wait (in one case, around 20 minutes).  Re-submitting, sometimes 3-5 times, generally results in a successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit) on Ubuntu 16.10.

I'm using Safari 10.0.3 (12602.4.8) on Sierra.

Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/>.  Are either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/7bf291c7/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jan 27 16:53:45 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 18:53:45 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
Message-ID: <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>

On Fri, Jan 27, 2017 at 6:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
>  wrote:
>
>>
>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>> wrote:
>>
>>
>>
>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>>
>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org>
>>> wrote:
>>>
>>> Hi,
>>>
>>> I can't seem to create a ticket in Trac.  Can someone look?
>>>
>>> I can create tickets.  What behavior do you see?
>>>
>>>
>> After entering all the fields to create the ticket, and then clicking
>> submit, it would just hang
>> without creating the ticket.
>>
>>
>> Forever? No timeout?  Just the HTTP POST never returns?
>>
>>
> FWIW, I've been experiencing similar problems.  In my case, the POST
> doesn't return for as long as I care to wait (in one case, around 20
> minutes).  Re-submitting, sometimes 3-5 times, generally results in a
> successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit)
> on Ubuntu 16.10.
>
>
> I'm using Safari 10.0.3 (12602.4.8) on Sierra.
>
> Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com.  Are
> either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps
> one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.
>

My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar suggests
this is because lack of ALPN in twistedmatrix.com's OpenSSL and lack of NPN
in Chrome).

Jean-Paul

>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/0c797857/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 17:09:55 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 16:09:55 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
Message-ID: <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>


> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 6:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:49 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Fri, Jan 27, 2017 at 6:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> On Jan 27, 2017, at 3:12 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> 
>>> 
>>> On Fri, Jan 27, 2017 at 2:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>> 
>>>> On Jan 27, 2017, at 2:03 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>>> 
>>>> Hi,
>>>> I can't seem to create a ticket in Trac.  Can someone look?
>>>> 
>>> I can create tickets.  What behavior do you see?
>>> 
>>> 
>>> After entering all the fields to create the ticket, and then clicking submit, it would just hang
>>> without creating the ticket.
>> 
>> Forever? No timeout?  Just the HTTP POST never returns?
>> 
>> 
>> FWIW, I've been experiencing similar problems.  In my case, the POST doesn't return for as long as I care to wait (in one case, around 20 minutes).  Re-submitting, sometimes 3-5 times, generally results in a successful eventually.  This is with Chrome Version 54.0.2840.90 (64-bit) on Ubuntu 16.10.
> 
> I'm using Safari 10.0.3 (12602.4.8) on Sierra.
> 
> Interesting to check: I'm using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/>.  Are either of you?  I wonder if this is a bug in the HTTP/2 stack or perhaps one of the HTTP/1.1 changes made to accommodate the HTTP/2 implementation.
> 
> My browser is not using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/> (idnar suggests this is because lack of ALPN in twistedmatrix.com <http://twistedmatrix.com/>'s OpenSSL and lack of NPN in Chrome).

It might be interesting to upgrade to Twisted trunk to see if some of the HTTP server bugfixes that have landed will address this; however, I can't come up with a coherent theory as to why certain POSTs would just hang.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/f08c4aaa/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jan 27 17:16:19 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 19:16:19 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
Message-ID: <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>

On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>
> My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar
> suggests this is because lack of ALPN in twistedmatrix.com's OpenSSL and
> lack of NPN in Chrome).
>
>
> It might be interesting to upgrade to Twisted trunk to see if some of the
> HTTP server bugfixes that have landed will address this; however, I can't
> come up with a coherent theory as to why certain POSTs would just hang.
>
>
I've yet to detect any pattern to the problem.  With no way to reliably
reproduce the problem and not other real metric for whether things are
getting better or worse, I don't think I could evaluate the results of any
changes.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/7177ac62/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 27 17:25:47 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 27 Jan 2017 16:25:47 -0800
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
 <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
Message-ID: <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>


> On Jan 27, 2017, at 4:16 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> 
>> My browser is not using HTTP/2 to talk to twistedmatrix.com <http://twistedmatrix.com/> (idnar suggests this is because lack of ALPN in twistedmatrix.com <http://twistedmatrix.com/>'s OpenSSL and lack of NPN in Chrome).
> 
> It might be interesting to upgrade to Twisted trunk to see if some of the HTTP server bugfixes that have landed will address this; however, I can't come up with a coherent theory as to why certain POSTs would just hang.
> 
> 
> I've yet to detect any pattern to the problem.  With no way to reliably reproduce the problem and not other real metric for whether things are getting better or worse, I don't think I could evaluate the results of any changes.

How often do you experience it?  Is it often enough that we could, say, check back in in a week?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/51ccf4e2/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jan 27 17:34:00 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 27 Jan 2017 19:34:00 -0500
Subject: [Twisted-Python] Can't create ticket in Trac
In-Reply-To: <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>
References: <CAG=rPVfPAPVrN3fuFmOBThSGVeRDzZDGTT_0L4aS+nvnfy67LA@mail.gmail.com>
 <F85E7074-97B5-4153-84D0-1076549111C4@twistedmatrix.com>
 <CAG=rPVfMi4CCtwLaSZLZT-+mmFmy9gXxC_91fx13h5AUbu=aCQ@mail.gmail.com>
 <0BC34656-9803-4551-B521-F7B86B98522D@twistedmatrix.com>
 <CAEeXt4OruRocQq4-s-v=vkEWUOVU7Dq42XbmPVRQgS9=L57yfg@mail.gmail.com>
 <357ACA8F-32FA-4041-BF61-CE14209F5D8E@twistedmatrix.com>
 <CAEeXt4O9NyK8s3YsnM-HXRD6mVVt8kX0e4s8SzVf-gUGXzXaAA@mail.gmail.com>
 <C967A05A-C464-47D6-A6FF-A3EB968653D6@twistedmatrix.com>
 <CAEeXt4MGHEacdGj=Mo4kc9rkvi_B9-NA5Xds7-hWuv_Kf=m2qw@mail.gmail.com>
 <04179514-FC57-4646-89EB-EF70303E7954@twistedmatrix.com>
Message-ID: <CAEeXt4O-MoTOCT8ckx8=fz=DubnUT3oioyi5zGdbUF3jQLVDcg@mail.gmail.com>

On Fri, Jan 27, 2017 at 7:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 27, 2017, at 4:16 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Fri, Jan 27, 2017 at 7:09 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Jan 27, 2017, at 3:53 PM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>>
>>
>> My browser is not using HTTP/2 to talk to twistedmatrix.com (idnar
>> suggests this is because lack of ALPN in twistedmatrix.com's OpenSSL and
>> lack of NPN in Chrome).
>>
>>
>> It might be interesting to upgrade to Twisted trunk to see if some of the
>> HTTP server bugfixes that have landed will address this; however, I can't
>> come up with a coherent theory as to why certain POSTs would just hang.
>>
>>
> I've yet to detect any pattern to the problem.  With no way to reliably
> reproduce the problem and not other real metric for whether things are
> getting better or worse, I don't think I could evaluate the results of any
> changes.
>
>
> How often do you experience it?  Is it often enough that we could, say,
> check back in in a week?
>

My dataset is pretty small...  Perhaps 6 or 7 times in the last 2 or 3
weeks?  I don't know how many POSTs I've done in that time.  Maybe a couple
dozen?  I could probably tell the difference if it were *completely* fixed
(or *completely* broken :) so it may be worth making the change on that
basis.

Jean-Paul



>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170127/c6aa9aba/attachment-0002.html>

From romanmescheryakov at yandex.ru  Sat Jan 28 07:35:28 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Sat, 28 Jan 2017 17:35:28 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
Message-ID: <7304481485614128@web3m.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170128/b54818f7/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Jan 28 15:39:52 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 29 Jan 2017 09:39:52 +1100
Subject: [Twisted-Python] Twisted 17.1.0rc1 Release Candidate Announcement
Message-ID: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>

Hello everyone!

16.7 didn't go as well as planned, so I thought we'd try again in the new year! So, here is Twisted 17.1, the first release of 2017. It's got all the cool things that were going to be in 16.7, *and more*. Wow!

- twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
- twisted.web.server has had many cleanups revolving around timing out inactive clients.
- twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
- twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
- You can now call the new twist runner with `python -m twisted`.
- twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
- Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
- More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
- Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
- 60+ closed tickets.

You can get the tarball and the NEWS file at https://twistedmatrix.com/Releases/rc/17.1.0rc1/ <https://twistedmatrix.com/Releases/rc/17.1.0rc1/> , or you can try it out from PyPI:

    python -m pip install Twisted==17.1.0rc1

Please test it, and let me know how your applications fare, good or bad! If nothing comes up, 17.1 will release in a week.

A bit more hopeful this time,
    Amber Brown
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170129/18c13e56/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170129/18c13e56/attachment.sig>

From trac at twistedmatrix.com  Sun Jan 29 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Jan 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1485673519.67.8962399806405744679@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170129/7df08fb2/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 29 18:30:45 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jan 2017 17:30:45 -0800
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <7304481485614128@web3m.yandex.ru>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
 <7304481485614128@web3m.yandex.ru>
Message-ID: <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>

You should have edit permission now.

-glyph

> On Jan 28, 2017, at 6:35 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Yes, because now I can't see a link to edit the Documentation page. My login is RomanMeR
>  
> -- 
> Kind regards, Roman Mescheryakov
>  
>  
>  
> 28.01.2017, 02:47, "Glyph Lefkowitz" <glyph at twistedmatrix.com>:
>>  
>>> On Jan 27, 2017, at 1:28 AM, Роман Мещеряков <romanmescheryakov at yandex.ru <mailto:romanmescheryakov at yandex.ru>> wrote:
>>>  
>>> Hi everyone! On the Documentation <http://twistedmatrix.com/trac/wiki/Documentation> wiki page there is a “Mail lists” section with the “Search the ​twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>” link. I clicked the link (http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i> which redirected to https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i <https://cse.google.com/cse/home?cx=000092903031650492802:wmoqkjvon0i>) and entered there this search request: “How to get caller’s IP address in Perspective Broker server” (which is a title of question asked by me some time ago in this mailing list). The search didn’t find that question, and the newest result was of year 2009. If I search the same string in the main Google search, it is found here: http://www.mail-archive.com/twisted-python at twistedmatrix.com/ <http://www.mail-archive.com/twisted-python at twistedmatrix.com/>. Maybe the “Search the ​twisted-python <http://www.google.com/coop/cse?cx=000092903031650492802:wmoqkjvon0i>” link should be updated?
>>>  
>> 
>> Yep.  Do you need wiki edit permissions to do so?
>>  
>> -g
>> ,
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170129/c6ad8e03/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 29 18:31:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jan 2017 17:31:32 -0800
Subject: [Twisted-Python] Twisted 17.1.0rc1 Release Candidate
	Announcement
In-Reply-To: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>
References: <21E2C87A-C35D-404F-B1E0-D9799B557537@atleastfornow.net>
Message-ID: <AF128B67-4992-406F-AAA4-EB30FCDCD83F@twistedmatrix.com>


> On Jan 28, 2017, at 2:39 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hello everyone!
> 
> 16.7 didn't go as well as planned, so I thought we'd try again in the new year! So, here is Twisted 17.1, the first release of 2017. It's got all the cool things that were going to be in 16.7, *and more*. Wow!

Woohoo - this time for sure!

-glyph




From romanmescheryakov at yandex.ru  Mon Jan 30 00:58:57 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 30 Jan 2017 10:58:57 +0300
Subject: [Twisted-Python] Twisted Mailing List Archive Search
In-Reply-To: <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>
References: <2818651485509299@web1h.yandex.ru>
 <28CC5977-9F0C-481B-9B09-2F840EA881CD@twistedmatrix.com>
 <7304481485614128@web3m.yandex.ru>
 <84656920-9938-43ED-8946-E25B13684F0E@twistedmatrix.com>
Message-ID: <324841485763137@web10m.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/58fc3eb5/attachment-0002.html>

From kebin70 at gmail.com  Mon Jan 30 14:47:30 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 13:47:30 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
Message-ID: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>

hey all - quick question.  Trying to understand FileBodyProducer as it
pertains to POST.

json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))

agent.request("POST", ~*uri*, Headers({'User-Agent': ['AkamaiTest']}),
json_body)

Does the agent chunk the POST body?  Is this controllable?

Any insight appreciated!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/c383e8c3/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 30 15:39:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 14:39:36 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
Message-ID: <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>


> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> hey all - quick question.  Trying to understand FileBodyProducer as it pertains to POST.
> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
> agent.request("POST", ~uri, Headers({'User-Agent': ['AkamaiTest']}), json_body)
> Does the agent chunk the POST body?
Maybe!
> Is this controllable?
Not really.  The current implementation will certainly use chunked encoding sometimes, but there isn't a strong API guarantee of this anywhere.
> Any insight appreciated!

You probably don't want to try to control this.  I believe that proxies are within their rights to mess around with chunk boundaries and re-buffer things, so you don't have any strong guarantees that chunk sizes will be preserved.

Why is it that you want to control chunking in the first place?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/703c9242/attachment-0002.html>

From kebin70 at gmail.com  Mon Jan 30 17:16:54 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 16:16:54 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
Message-ID: <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>

Dealing with older apache, ruby, passenger setup.  Hoping to mimic behavior
and show OPS that chunked encoding isn't working correctly.

With python requests (http://docs.python-requests.org/en/master/) all POST
calls work correctly, but twisted requests are failing.

I'm thinking (and hoping) it's failing because twisted is chunking the post
body.  When I send the requests to a twisted endpoint like below the
requests are successful and the response is identical.

from twisted.web import server, resource
from twisted.internet import reactor

class Simple(resource.Resource):
    isLeaf = True
    def render_POST(self, request):
        print request.content.getvalue()
        return request.content.getvalue()

site = server.Site(Simple())
reactor.listenTCP(8080, site)
reactor.run()


On Mon, Jan 30, 2017 at 2:39 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com> wrote:
>
> hey all - quick question.  Trying to understand FileBodyProducer as it
> pertains to POST.
>
> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
>
> agent.request("POST", ~*uri*, Headers({'User-Agent': ['AkamaiTest']}), json_body)
>
> Does the agent chunk the POST body?
>
> Maybe!
>
> Is this controllable?
>
> Not really.  The current implementation will certainly use chunked
> encoding sometimes, but there isn't a strong API guarantee of this anywhere.
>
> Any insight appreciated!
>
> You probably don't want to try to control this.  I believe that proxies
> are within their rights to mess around with chunk boundaries and re-buffer
> things, so you don't have any strong guarantees that chunk sizes will be
> preserved.
>
> Why is it that you want to control chunking in the first place?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/ffd83b76/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 30 17:44:51 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 18:44:51 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
Message-ID: <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>

Gotcha.  I guess what I meant was that you shouldn't care about this at the application level, but you're talking about an operational concern, not an application-level concern.

Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?

-glyph

> On Jan 30, 2017, at 18:16, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> Dealing with older apache, ruby, passenger setup.  Hoping to mimic behavior and show OPS that chunked encoding isn't working correctly.
> 
> With python requests (http://docs.python-requests.org/en/master/ <http://docs.python-requests.org/en/master/>) all POST calls work correctly, but twisted requests are failing.
> 
> I'm thinking (and hoping) it's failing because twisted is chunking the post body.  When I send the requests to a twisted endpoint like below the requests are successful and the response is identical.
> from twisted.web import server, resource
> from twisted.internet import reactor
> 
> class Simple(resource.Resource):
>     isLeaf = True
>     def render_POST(self, request):
>         print request.content.getvalue()
>         return request.content.getvalue()
> 
> site = server.Site(Simple())
> reactor.listenTCP(8080, site)
> reactor.run()
> 
> On Mon, Jan 30, 2017 at 2:39 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Jan 30, 2017, at 13:47, Kevin Mcintyre <kebin70 at gmail.com <mailto:kebin70 at gmail.com>> wrote:
>> 
>> hey all - quick question.  Trying to understand FileBodyProducer as it pertains to POST.
>> json_body = FileBodyProducer(StringIO(json.dumps({'key': 'value'})))
>> agent.request("POST", ~uri, Headers({'User-Agent': ['AkamaiTest']}), json_body)
>> Does the agent chunk the POST body?
> 
> Maybe!
>> Is this controllable?
> Not really.  The current implementation will certainly use chunked encoding sometimes, but there isn't a strong API guarantee of this anywhere.
>> Any insight appreciated!
> 
> You probably don't want to try to control this.  I believe that proxies are within their rights to mess around with chunk boundaries and re-buffer things, so you don't have any strong guarantees that chunk sizes will be preserved.
> 
> Why is it that you want to control chunking in the first place?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/59b2a5b0/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan 30 17:59:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 30 Jan 2017 19:59:33 -0500
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
Message-ID: <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>

On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> Gotcha.  I guess what I meant was that you shouldn't care about this at
> the application level, but you're talking about an operational concern, not
> an application-level concern.
>
> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
>


Well... It *is* sort of tuneable, as you implied earlier.

If you pass an IBodyProducer with a non-None length, Agent will send a
Content-Length header - not use chunked Transfer-Encoding.
FileBodyProducer doesn't know how to determine the length of a StringIO, so
you get chunked with this example.  If you write the JSON to a regular file
and FileBodyProducer(open(the file)) you'll get a Content-Length request.
You could also write a new (trivial) IBodyProducer that does know how to
compute the length of a StringIO.

The documentation doesn't exactly spell this out - but the only reason
`length` is part of the interface is to be able to generate the
Content-Length header.

What would the ticket be?  Expanded documentation to make this behavior
into an explicit guarantee of the interface?  A new toggle somewhere to
force Agent.request into one mode or the other (regardless of the
performance consequences)?

And that stuff you said about proxies before was true ... So even if you
can control this in Agent, you're still not *guaranteed* the server will
see what you send.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/e1cd4566/attachment-0002.html>

From kebin70 at gmail.com  Mon Jan 30 18:44:18 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 17:44:18 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
Message-ID: <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>

Thanks - that's exactly what I was looking for.

*But note* when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I
still see a content-length in the request header as it's received by
twisted.  Am I correct to assume the request is agnostic...meaning it's
shaped the same for twisted as it is for apache.

Headers({'host': ['localhost:8080'], 'connection': ['close'],
'content-length': ['671'], 'user-agent': ['PassengerTest']})

from twisted.web import server, resource
from twisted.internet import reactor

class Simple(resource.Resource):
    isLeaf = True
    def render_POST(self, request):
        print request.requestHeaders
        return request.content.getvalue()

site = server.Site(Simple())
reactor.listenTCP(8080, site)
reactor.run()



On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> Gotcha.  I guess what I meant was that you shouldn't care about this at
>> the application level, but you're talking about an operational concern, not
>> an application-level concern.
>>
>> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
>>
>
>
> Well... It *is* sort of tuneable, as you implied earlier.
>
> If you pass an IBodyProducer with a non-None length, Agent will send a
> Content-Length header - not use chunked Transfer-Encoding.
> FileBodyProducer doesn't know how to determine the length of a StringIO, so
> you get chunked with this example.  If you write the JSON to a regular file
> and FileBodyProducer(open(the file)) you'll get a Content-Length request.
> You could also write a new (trivial) IBodyProducer that does know how to
> compute the length of a StringIO.
>
> The documentation doesn't exactly spell this out - but the only reason
> `length` is part of the interface is to be able to generate the
> Content-Length header.
>
> What would the ticket be?  Expanded documentation to make this behavior
> into an explicit guarantee of the interface?  A new toggle somewhere to
> force Agent.request into one mode or the other (regardless of the
> performance consequences)?
>
> And that stuff you said about proxies before was true ... So even if you
> can control this in Agent, you're still not *guaranteed* the server will
> see what you send.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/74662e13/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 30 19:01:25 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 20:01:25 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
Message-ID: <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>


> On Jan 30, 2017, at 19:44, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> 
> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> Gotcha.  I guess what I meant was that you shouldn't care about this at the application level, but you're talking about an operational concern, not an application-level concern.
> 
> Perhaps this should be a tunable on Agent somehow.  Can you file a ticket?
> 
> 
> Well... It is sort of tuneable, as you implied earlier.
> 
> If you pass an IBodyProducer with a non-None length, Agent will send a Content-Length header - not use chunked Transfer-Encoding.  FileBodyProducer doesn't know how to determine the length of a StringIO, so you get chunked with this example.

Not quite true: FileBodyProducer does know how to compute the length of a StringIO, via seek():

>>> from twisted.web.client import FileBodyProducer
>>> from io import BytesIO
>>> from cStringIO import StringIO
>>> FileBodyProducer(BytesIO(b"some bytes")).length
10L
>>> FileBodyProducer(StringIO(b"some bytes")).length
10

> If you write the JSON to a regular file and FileBodyProducer(open(the file)) you'll get a Content-Length request.  You could also write a new (trivial) IBodyProducer that does know how to compute the length of a StringIO.
> 
> The documentation doesn't exactly spell this out - but the only reason `length` is part of the interface is to be able to generate the Content-Length header.
> 
> What would the ticket be?  Expanded documentation to make this behavior into an explicit guarantee of the interface?  A new toggle somewhere to force Agent.request into one mode or the other (regardless of the performance consequences)?

Rather than "regardless" of the consequences, perhaps just a maximum body size.  If we made it an explicit guarantee in Agent, perhaps the interface change would not be in '.request' (which, as a formal interface used both inside and outside of Twisted, is fairly fixed), but rather a new `NonChunkedBodyProducer` concrete class that would implement IBodyProducer in terms of another IBodyProducer which either does or doesn't have a `length`.  (Or a function that does same, always returning its argument if `length` is already set...)

> And that stuff you said about proxies before was true ... So even if you can control this in Agent, you're still not guaranteed the server will see what you send.

> Thanks - that's exactly what I was looking for.
> 
> But note when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I still see a content-length in the request header as it's received by twisted.  Am I correct to assume the request is agnostic...meaning it's shaped the same for twisted as it is for apache.

It is shaped the same.  The reason you're seeing the error is due to the issue I pointed out above.
> Headers({'host': ['localhost:8080'], 'connection': ['close'], 'content-length': ['671'], 'user-agent': ['PassengerTest']})
> 

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/83115068/attachment-0002.html>

From kebin70 at gmail.com  Mon Jan 30 19:41:00 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Mon, 30 Jan 2017 18:41:00 -0800
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
 <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
Message-ID: <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>

"It is shaped the same.  The reason you're seeing the error is due to the
issue I pointed out above."

Just to be clear you mean that proxies can reshape the call in flight?



On Mon, Jan 30, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jan 30, 2017, at 19:44, Kevin Mcintyre <kebin70 at gmail.com> wrote:
>
> On Mon, Jan 30, 2017 at 4:59 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Jan 30, 2017 at 7:44 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
>> > wrote:
>>
>>> Gotcha.  I guess what I meant was that you shouldn't care about this at
>>> the application level, but you're talking about an operational concern, not
>>> an application-level concern.
>>>
>>> Perhaps this should be a tunable on Agent somehow.  Can you file a
>>> ticket?
>>>
>>
>>
>> Well... It *is* sort of tuneable, as you implied earlier.
>>
>> If you pass an IBodyProducer with a non-None length, Agent will send a
>> Content-Length header - not use chunked Transfer-Encoding.
>> FileBodyProducer doesn't know how to determine the length of a StringIO, so
>> you get chunked with this example.
>>
>
> Not quite true: FileBodyProducer *does* know how to compute the length of
> a StringIO, via seek():
>
>
> >>> from twisted.web.client import FileBodyProducer
> >>> from io import BytesIO
> >>> from cStringIO import StringIO
> >>> FileBodyProducer(BytesIO(b"some bytes")).length
> 10L
> >>> FileBodyProducer(StringIO(b"some bytes")).length
> 10
>
>
> If you write the JSON to a regular file and FileBodyProducer(open(the
>> file)) you'll get a Content-Length request.  You could also write a new
>> (trivial) IBodyProducer that does know how to compute the length of a
>> StringIO.
>>
>> The documentation doesn't exactly spell this out - but the only reason
>> `length` is part of the interface is to be able to generate the
>> Content-Length header.
>>
>> What would the ticket be?  Expanded documentation to make this behavior
>> into an explicit guarantee of the interface?  A new toggle somewhere to
>> force Agent.request into one mode or the other (regardless of the
>> performance consequences)?
>>
>
> Rather than "regardless" of the consequences, perhaps just a maximum body
> size.  If we made it an explicit guarantee in Agent, perhaps the interface
> change would not be in '.request' (which, as a formal interface used both
> inside and outside of Twisted, is fairly fixed), but rather a new
> `NonChunkedBodyProducer` concrete class that would implement IBodyProducer
> in terms of another IBodyProducer which either does or doesn't have a
> `length`.  (Or a function that does same, always returning its argument if
> `length` is already set...)
>
> And that stuff you said about proxies before was true ... So even if you
>> can control this in Agent, you're still not *guaranteed* the server will
>> see what you send.
>>
>
> Thanks - that's exactly what I was looking for.
>
> *But note* when using FileBodyProducer(StringIO(json.dumps(~blah))) -- I
> still see a content-length in the request header as it's received by
> twisted.  Am I correct to assume the request is agnostic...meaning it's
> shaped the same for twisted as it is for apache.
>
>
> It is shaped the same.  The reason you're seeing the error is due to the
> issue I pointed out above.
>
> Headers({'host': ['localhost:8080'], 'connection': ['close'],
> 'content-length': ['671'], 'user-agent': ['PassengerTest']})
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/df070132/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 30 20:44:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jan 2017 21:44:18 -0600
Subject: [Twisted-Python] web client FileBodyProducer - transfer encoding
In-Reply-To: <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>
References: <CAA-sNEYx5HrzRxfvKt7Rxv-2N3C-LW+E_3S5uYT6q9HmojQ7Lg@mail.gmail.com>
 <5AB8A2E3-7F63-4D73-9071-7F34ECB1B831@twistedmatrix.com>
 <CAA-sNEZQwJGq6f99-WemiQk2CyTeHPR5=+Kg3h1uY=WePizjKg@mail.gmail.com>
 <0991BD08-AA27-44E0-A7AC-47CA544EC9C0@twistedmatrix.com>
 <CAEeXt4NrJGxZE6m=xAUaG29pvxZNZjaUCdQvbOHt7DDo__NYrw@mail.gmail.com>
 <CAA-sNEbdQ5PhbXcM9yiK7j_odJu4wbt2V=uXpFEOCVqZ+QRk+g@mail.gmail.com>
 <DB302537-C004-4CAA-9D5F-135F8989DDD9@twistedmatrix.com>
 <CAA-sNEatZAiWr6pjwDoNt635-zxxVH34p68vEazHrKAu9QJ-3g@mail.gmail.com>
Message-ID: <90243C5A-D838-4FA8-A6D6-3F5B1D8FCFC6@twistedmatrix.com>


> On Jan 30, 2017, at 20:41, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> "It is shaped the same.  The reason you're seeing the error is due to the issue I pointed out above."
> 
> Just to be clear you mean that proxies can reshape the call in flight?

No, I mean that FileBodyObserver specifically calculates a length if it can, and it can for StringIO.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170130/096de740/attachment-0002.html>

