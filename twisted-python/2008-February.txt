From glyph at divmod.com  Fri Feb  1 00:11:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 05:11:00 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
Message-ID: <20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>

On 04:34 am, jml at mumak.net wrote:
>On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:

>Having a canonical representation doesn't exclude having multiple
>representations.

True enough.
>Looking at how these are actually used:
>- str() is used only for copyright (and tests)

This is probably the most poorly-thought-out method of the bunch anyway, 
so I'm glad to see it's used less.
>- short is used for __init__.py

Makes sense, this is where you'd go looking.
>- base is used for short, in _release._changeVersionInFile (don't know
>why base rather than everyone else, actually) and dist.py

base is used here because we will explicitly never put an SVN rev into a 
README file.
>- getVersionString is used only by deprecate.

So, perhaps this and str() should be the same thing.  Is there really a 
reason for omitting the svn revno here?
>In summary, sometimes we want the project name, sometimes we want the
>svn revno. This is perhaps better achieved by having a single function
>/ method that takes a couple of params.

>Personally, I think that having a project name in Version is silly.

... and yet, getVersionString uses that attribute?

The point of having a project name in a version is to specifically 
qualify the version to alert about meaningless comparisons.  "Twisted 
version 2.5.0" does not meaningfully compare to "Python version 2.5.0", 
despite being apparently equal if you elide the project name.
>For the purposes of this discussion, (my insane idea) is a massive, 
>massive YAGNI.

Definitely.
>>But, this is somewhat obviously a bike shed, so I am not going to
>>agitate terribly hard for this.  It's not like I use Twisted primarily
>>for dealing with my obscurely formatted package version strings ;-).
>
>Right. I propose we do nothing.

An easy position to defend.



From jml at mumak.net  Fri Feb  1 02:46:13 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 18:46:13 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
	<20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
Message-ID: <d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>

On Feb 1, 2008 4:11 PM,  <glyph at divmod.com> wrote:
> On 04:34 am, jml at mumak.net wrote:
> >On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:
>
> >Having a canonical representation doesn't exclude having multiple
> >representations.
>
> True enough.
> >Looking at how these are actually used:
> >- str() is used only for copyright (and tests)
>
> This is probably the most poorly-thought-out method of the bunch anyway,
> so I'm glad to see it's used less.
> >- short is used for __init__.py
>
> Makes sense, this is where you'd go looking.
> >- base is used for short, in _release._changeVersionInFile (don't know
> >why base rather than everyone else, actually) and dist.py
>
> base is used here because we will explicitly never put an SVN rev into a
> README file.
> >- getVersionString is used only by deprecate.
>
> So, perhaps this and str() should be the same thing.  Is there really a
> reason for omitting the svn revno here?

Is there a reason for including it?

getVersionString should probably be str()

> >In summary, sometimes we want the project name, sometimes we want the
> >svn revno. This is perhaps better achieved by having a single function
> >/ method that takes a couple of params.
>
> >Personally, I think that having a project name in Version is silly.
>
> ... and yet, getVersionString uses that attribute?
>

Well, it seemed like going with the flow.

The alternative was to hard-code the word 'Twisted' into the
deprecation code -- something that I wouldn't mind at all.

> The point of having a project name in a version is to specifically
> qualify the version to alert about meaningless comparisons.  "Twisted
> version 2.5.0" does not meaningfully compare to "Python version 2.5.0",
> despite being apparently equal if you elide the project name.

And the number of times we've constructed a twisted Version object for
Python is how many?

> >>But, this is somewhat obviously a bike shed, so I am not going to
> >>agitate terribly hard for this.  It's not like I use Twisted primarily
> >>for dealing with my obscurely formatted package version strings ;-).
> >
> >Right. I propose we do nothing.
>
> An easy position to defend.
>

Its virtue is its clarity.

I fall from my earlier motion and move that we move make
Version.__str__ behave like getVersionString and delete
getVersionString. Or, see the attached patch.

I'm off to a party where the drinks are on Google.
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: version-string.diff
Type: text/x-diff
Size: 3903 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080201/71c393c8/attachment.diff 

From glyph at divmod.com  Fri Feb  1 12:30:12 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 17:30:12 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
	<20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
	<d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>
Message-ID: <20080201173012.21558.1487576228.divmod.xquotient.5845@joule.divmod.com>


On 07:46 am, jml at mumak.net wrote:
>On Feb 1, 2008 4:11 PM,  <glyph at divmod.com> wrote:
>>On 04:34 am, jml at mumak.net wrote:

>> >- getVersionString is used only by deprecate.
>>
>>So, perhaps this and str() should be the same thing.  Is there really 
>>a
>>reason for omitting the svn revno here?
>
>Is there a reason for including it?

Diagnosing warnings and errors from development versions is easier if 
they properly report that they're development versions.  The SVN version 
will be omitted if it's not discovered, anyway.  (Though the SVN version 
discovery code needs to be fixed up, a separate issue.)
>getVersionString should probably be str()

Cool.
>>The point of having a project name in a version is to specifically
>>qualify the version to alert about meaningless comparisons.  "Twisted
>>version 2.5.0" does not meaningfully compare to "Python version 
>>2.5.0",
>>despite being apparently equal if you elide the project name.
>
>And the number of times we've constructed a twisted Version object for
>Python is how many?

Sorry, a better example would be "'Twisted version 2.5.0' does not 
meaningfully compare to 'Axiom version 2.5.0'".  And that's where this 
versioning code came from in the first place, so yes, we've built one or 
two of those objects :-).
>> >>But, this is somewhat obviously a bike shed, so I am not going to
>> >>agitate terribly hard for this.  It's not like I use Twisted 
>>primarily
>> >>for dealing with my obscurely formatted package version strings ;-).
>> >
>> >Right. I propose we do nothing.
>>
>>An easy position to defend.
>
>Its virtue is its clarity.
>
>I fall from my earlier motion and move that we move make
>Version.__str__ behave like getVersionString and delete
>getVersionString. Or, see the attached patch.

That also works for me.
>I'm off to a party where the drinks are on Google.

Cool, have a good time.  But next time, try to score a party where the 
*cars* are on google.  With their accounting they might not be able to 
tell the difference!



From dfarrell at mypublisher.com  Fri Feb  1 13:34:15 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Fri, 1 Feb 2008 13:34:15 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
Message-ID: <318F79422ADC5041A93343721F84474D8B0888@exchange.mypublisher.local>

Hello everyone,

 

I'm trying to install Twisted 2.5 on a Centos 5 intel based server that
has Python 2.4 on it, and am having problems. I download the Twisted 2.5
tar file, unpack it, go to the zope.interface directory and perform a
"sudo python setup.py install" command, which succeeds. I then go to the
root directory and do the same thing for Twisted "sudo python setup.py
install" and it looks like it completes successfully. When I go into the
Python interpreter and enter an "import twisted" line, that works fine.
However, if I do this, "from twisted import web" I get an error:

 

Python 2.4.3 (#1, Mar 14 2007, 19:01:42)

[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2

Type "help", "copyright", "credits" or "license" for more information.

>>> from twisted import web

Traceback (most recent call last):

  File "<stdin>", line 1, in ?

ImportError: cannot import name web

 

When I look in /usr/lib/python2.4/site-packages/twisted I see that it
has a web directory, so I'm not sure what's going on or what the problem
is. Any insights would be most welcome!

 

Thanks,

Doug Farrell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080201/f28bc972/attachment.htm 

From exarkun at divmod.com  Fri Feb  1 14:00:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 1 Feb 2008 14:00:38 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0888@exchange.mypublisher.local>
Message-ID: <20080201190038.6859.841504556.divmod.quotient.3641@ohm>

On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hello everyone,
>
>I'm trying to install Twisted 2.5 on a Centos 5 intel based server that
>has Python 2.4 on it, and am having problems. I download the Twisted 2.5
>tar file, unpack it, go to the zope.interface directory and perform a
>"sudo python setup.py install" command, which succeeds. I then go to the
>root directory and do the same thing for Twisted "sudo python setup.py
>install" and it looks like it completes successfully. When I go into the
>Python interpreter and enter an "import twisted" line, that works fine.
>However, if I do this, "from twisted import web" I get an error:
>
>Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
>[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
>Type "help", "copyright", "credits" or "license" for more information.
>>>> from twisted import web
>Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>ImportError: cannot import name web
>
>When I look in /usr/lib/python2.4/site-packages/twisted I see that it
>has a web directory, so I'm not sure what's going on or what the problem
>is. Any insights would be most welcome!
>

Is this a 64 bit machine?  Do you also have /usr/lib64/python2.4/site-packages/twisted?  If so, it may be that Python is
picking that up, causing it to ignore anything in /usr/lib/python2.4/site-packages/twisted.

If so, the solution is to tell distutils to install all of Twisted in the
same place.  I forget the exact options to do this, you can probably find
them in the output of "python setup.py install --help".

Jean-Paul



From fred at bsdhost.net  Fri Feb  1 20:39:45 2008
From: fred at bsdhost.net (Fred C)
Date: Fri, 1 Feb 2008 17:39:45 -0800
Subject: [Twisted-Python] snmp
Message-ID: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>


Hi

For a project I need to fiddle with snmp. I did a search on google and  
an I have found a lot of mailing list archives about twistedsnmp and  
pysnmp. All these post seems very old (more than 4 years old), and out  
of fashion. Can some one tell me what people are using these days to  
plain with snmp ?

Thanks for your suggestions.

-fred-

-- 
Fred C!
PGP-KeyID: E7EA02EC3B487EE9
PGP-FingerPrint: A906101E2CCDBB18D7BD09AEE7EA02EC3B487EE9






From daedalus at eigenmagic.com  Fri Feb  1 20:59:48 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sat, 02 Feb 2008 12:59:48 +1100
Subject: [Twisted-Python] snmp
In-Reply-To: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
References: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
Message-ID: <1201917588.21134.6.camel@fnord.melbourne.eigenmagic.net>

On Fri, 2008-02-01 at 17:39 -0800, Fred C wrote:
> Hi
> 
> For a project I need to fiddle with snmp. I did a search on google and  
> an I have found a lot of mailing list archives about twistedsnmp and  
> pysnmp. All these post seems very old (more than 4 years old), and out  
> of fashion. Can some one tell me what people are using these days to  
> plain with snmp ?

Hi Fred,

Check out libsnmp: http://www.seafelt.com/libsnmp. It works with
twisted, but can also be used without it.

For an example of how to use it with twisted, see the code at:
http://www.seafelt.com/software/seafelt-daily/sources/, specifically
lib/seafelt/poller_snmp.py.

I wrote libsnmp, and have plans to merge it into twisted proper (which
has been discussed on this list recently), but doing so is likely to
take a while.

-- 
Justin Warren <daedalus at eigenmagic.com>



From bernat at luffy.cx  Sat Feb  2 04:29:32 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Sat, 02 Feb 2008 10:29:32 +0100
Subject: [Twisted-Python] snmp
In-Reply-To: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net> (Fred C.'s
	message of "Fri, 1 Feb 2008 17:39:45 -0800")
References: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
Message-ID: <m3r6fvhfk3.fsf@neo.luffy.cx>

OoO  En cette  nuit stri?e  d'?clairs du  samedi 02  f?vrier  2008, vers
02:39, Fred C <fred at bsdhost.net> disait:

> For a project I need to fiddle with snmp. I did a search on google and
> an I have found a lot of mailing list archives about twistedsnmp and
> pysnmp. All these post seems very old (more than 4 years old), and out
> of fashion. Can some one tell me what people are using these days to
> plain with snmp ?

The big problem with twistedsnmp  is that it does not support officially
pysnmp 4,  does not work with pysnmp  2, works with pysnmp  3 which does
not exist any more and is optimized for an hybrid version pysnmp-se 2.5.

The  other drawback  is  that it  is  not maintained  any  more and  the
upstream seems to be unresponsive.

Aside  Justin  suggestion, you  can  also  look  at pynetsnmp  which  is
maintained   by   the   ZenOSS   project.   This   one   only   supports
manager-side. And documentation is a bit scarce.
-- 
Make it clear before you make it faster.
            - The Elements of Programming Style (Kernighan & Plauger)



From steve at holdenweb.com  Sat Feb  2 09:57:34 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 02 Feb 2008 09:57:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API for
 functions and methods.
In-Reply-To: <20080131172444.6859.1682835797.divmod.quotient.3270@ohm>
References: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>
	<20080131172444.6859.1682835797.divmod.quotient.3270@ohm>
Message-ID: <fo20d0$qhd$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Thu, 31 Jan 2008 17:01:48 -0000, glyph at divmod.com wrote:
>> On 04:23 pm, exarkun at divmod.com wrote:
>>> Maybe Version shouldn't be responsible for any view at all.  Maybe 
>>> Version
>>> is just a model class, and things that actually know what the view
>>> requirements are can implement the view?
>>
>> I agree insofar as the model is poorly exposed and documented.  The 
>> ivars have no documentation, and the only way to get the SVN revision 
>> is to call a private method or to mangle strings.
>>
>> However, some of these "views" should definitely be attached to the 
>> class, for convenience and simplicity.  For example, a sensible 
>> __repr__ makes debugging and inspecting these things a lot easier.
> 
> Having Version.__repr__ is fine.  __repr__ is a thing that Python classes
> often have.
> 
>> Adding a new module, function, or class which does the string 
>> formatting means that users of Version will need to look somewhere 
>> else to perform the function they want, and ultimately it doesn't 
>> eliminate the confusion - "do I want the 'short dotted' view or the 
>> 'includes project but without development version' view?" - unless we 
>> also reduce the number of options available.
> 
> What I had in mind was more that each application that wants to format
> Version in some particular way can do the formatting itself, not that it
> would pick an appropriate function from the version_view module and rely
> on it to do the formatting.
> 
> The complexity of the code we're talking about foisting on an application
> is on the order of "%s.%s" % (version.major, version.minor).  Not much of
> a burden.  On the other hand, if we really want to make this easy, then
> maybe Version should have a `format? method that just takes a format string
> and does the interpolation for you.
> 
And gold-plated toilet seats, they're good too ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From franciscsimon at franciscsimon.de  Sat Feb  2 13:13:58 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sat, 2 Feb 2008 19:13:58 +0100
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X 10.5 )
Message-ID: <96F72E7C-962A-407F-9733-DC4D80DDFAAC@franciscsimon.de>

Hi @all,


I've already installed following packages ( all installation i've made  
with: sudo python setup.py install ):

- zope interface v. 3.3.0
- twisted-core 2.5.0

and i've tried to install twisted-web 0.7.0 but:

i get this  Error:

Traceback (most recent call last):
   File "setup.py", line 13, in <module>
     scripts=dist.getScripts("web"),
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
     thingies = os.listdir(scriptdir)
OSError: [Errno 2] No such file or directory: 'bin'


i hope somebody can help me.

THX a lot

Frank
:-)



From exarkun at divmod.com  Sat Feb  2 13:25:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 2 Feb 2008 13:25:00 -0500
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X
	10.5 )
In-Reply-To: <96F72E7C-962A-407F-9733-DC4D80DDFAAC@franciscsimon.de>
Message-ID: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>

On Sat, 2 Feb 2008 19:13:58 +0100, Francisc Simon <franciscsimon at franciscsimon.de> wrote:
>Hi @all,
>
>
>I've already installed following packages ( all installation i've made 
>with: sudo python setup.py install ):
>
>- zope interface v. 3.3.0
>- twisted-core 2.5.0
>
>and i've tried to install twisted-web 0.7.0 but:
>
>i get this  Error:
>
>Traceback (most recent call last):
>   File "setup.py", line 13, in <module>
>     scripts=dist.getScripts("web"),
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
>Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
>     thingies = os.listdir(scriptdir)
>OSError: [Errno 2] No such file or directory: 'bin'
>
>
>i hope somebody can help me.
>

You could try installing using this package instead:

  http://twistedmatrix.com/trac/wiki/Packages#Leopard

Jean-Paul



From franciscsimon at franciscsimon.de  Sat Feb  2 13:53:48 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sat, 2 Feb 2008 19:53:48 +0100
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X 10.5
	)
In-Reply-To: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>
References: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>
Message-ID: <91BF8FCE-6931-4667-A9BE-EDFC33F091D9@franciscsimon.de>

Hi,

thx for the quick answar but it still does not work :-(

i get this error:

ImportError: No module named web


Frank


Am 02.02.2008 um 19:25 schrieb Jean-Paul Calderone:

> On Sat, 2 Feb 2008 19:13:58 +0100, Francisc Simon <franciscsimon at franciscsimon.de 
> > wrote:
>> Hi @all,
>>
>>
>> I've already installed following packages ( all installation i've  
>> made with: sudo python setup.py install ):
>>
>> - zope interface v. 3.3.0
>> - twisted-core 2.5.0
>>
>> and i've tried to install twisted-web 0.7.0 but:
>>
>> i get this  Error:
>>
>> Traceback (most recent call last):
>>  File "setup.py", line 13, in <module>
>>    scripts=dist.getScripts("web"),
>>  File "/System/Library/Frameworks/Python.framework/Versions/2.5/  
>> Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
>>    thingies = os.listdir(scriptdir)
>> OSError: [Errno 2] No such file or directory: 'bin'
>>
>>
>> i hope somebody can help me.
>>
>
> You could try installing using this package instead:
>
> http://twistedmatrix.com/trac/wiki/Packages#Leopard
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From dfarrell at mypublisher.com  Sat Feb  2 14:20:04 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Sat, 2 Feb 2008 14:20:04 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <20080201190038.6859.841504556.divmod.quotient.3641@ohm>
Message-ID: <318F79422ADC5041A93343721F84474D8B0899@exchange.mypublisher.local>


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> Sent: Friday, February 01, 2008 2:01 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Twisted and Centos5 install problems
> 
> On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell
<dfarrell at mypublisher.com>
> wrote:
> >Hello everyone,
> >
> >I'm trying to install Twisted 2.5 on a Centos 5 intel based server
that
> >has Python 2.4 on it, and am having problems. I download the Twisted
2.5
> >tar file, unpack it, go to the zope.interface directory and perform a
> >"sudo python setup.py install" command, which succeeds. I then go to
the
> >root directory and do the same thing for Twisted "sudo python
setup.py
> >install" and it looks like it completes successfully. When I go into
the
> >Python interpreter and enter an "import twisted" line, that works
fine.
> >However, if I do this, "from twisted import web" I get an error:
> >
> >Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
> >[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
> >Type "help", "copyright", "credits" or "license" for more
information.
> >>>> from twisted import web
> >Traceback (most recent call last):
> >  File "<stdin>", line 1, in ?
> >ImportError: cannot import name web
> >
> >When I look in /usr/lib/python2.4/site-packages/twisted I see that it
> >has a web directory, so I'm not sure what's going on or what the
problem
> >is. Any insights would be most welcome!
> >
> 
> Is this a 64 bit machine?  Do you also have /usr/lib64/python2.4/site-
> packages/twisted?  If so, it may be that Python is
> picking that up, causing it to ignore anything in
/usr/lib/python2.4/site-
> packages/twisted.
> 
> If so, the solution is to tell distutils to install all of Twisted in
the
> same place.  I forget the exact options to do this, you can probably
find
> them in the output of "python setup.py install --help".
> 
> Jean-Paul
> 
Jean-Paul

Thanks for the hint, when I looked at the output of uname -a on the
target machine it reported this:

Linux dev03.com 2.6.18-8.1.6.el5 #1 SMP Thu Jun 14 17:29:04 EDT 2007
x86_64 x86_64 x86_64 GNU/Linux

Which looks like it's running in Intel 64 bit mode to me. So I'll have
to look around to see how to install Twisted in a 64 environment. Any
help or suggestions would be greatly appreciated! :)

Thanks again!
Doug



From exarkun at divmod.com  Sat Feb  2 14:42:33 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 2 Feb 2008 14:42:33 -0500
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X
	10.5 )
In-Reply-To: <91BF8FCE-6931-4667-A9BE-EDFC33F091D9@franciscsimon.de>
Message-ID: <20080202194233.6859.1795317838.divmod.quotient.3942@ohm>

On Sat, 2 Feb 2008 19:53:48 +0100, Francisc Simon <franciscsimon at franciscsimon.de> wrote:
>Hi,
>
>thx for the quick answar but it still does not work :-(
>
>i get this error:
>
>ImportError: No module named web
>

OS X includes a version of Twisted which is missing twisted.web.  Even
after you install the full version of Twisted, you have to make sure the
system version isn't being used.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Feb  3 00:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Feb 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1202015106.68.168166733@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080203/8b1efdfc/attachment.htm 

From franciscsimon at franciscsimon.de  Sun Feb  3 07:14:26 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sun, 03 Feb 2008 13:14:26 +0100
Subject: [Twisted-Python] Tutorial commands not found in twistd (
 --athena-widget, --element )
Message-ID: <47A5B022.1060402@franciscsimon.de>

Hi @all,

i've tried this tutorial:

http://divmod.org/users/oubiwann/howto/chattutorial/env.html

but i get this error at the end:

/usr/local/bin/twistd: Unknown command: athena-widget

so i'm a little bit confused about this and tried to post it in 
irc.freenode.net at #divmod and #twisted but i got no response.

So i'll try it one more time at the mailinglist.

Has somebody a solution for this error ?

THX a lot.

Frank
:-)



From m-lists at the-moon.net  Sun Feb  3 09:41:33 2008
From: m-lists at the-moon.net (Richard Wall)
Date: Sun, 3 Feb 2008 14:41:33 +0000
Subject: [Twisted-Python] Tutorial commands not found in twistd (
	--athena-widget, --element )
In-Reply-To: <47A5B022.1060402@franciscsimon.de>
References: <47A5B022.1060402@franciscsimon.de>
Message-ID: <fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>

On Sun, Feb 3, 2008 at 12:14 PM, Francisc Simon
<franciscsimon at franciscsimon.de> wrote:
> Hi @all,
>  i've tried this tutorial:
>  http://divmod.org/users/oubiwann/howto/chattutorial/env.html
>  but i get this error at the end:
>  /usr/local/bin/twistd: Unknown command: athena-widget

Make sure you're using the SVN trunk versions of twistd / Nevow.  The
twistd plugin system is very new and the  "athena-widget" is an even
newer twistd plugin. If you follow the Combinator instructions in that
tutorial, it should just work and the path to twistd should look like:

richard at aziz:~/Projects$ which twistd
/home/richard/Projects/combinator_paths/bincache/twistd

richard at aziz:~/Projects$ whbranch
Divmod: trunk
Twisted: trunk

-RichardW.



From franciscsimon at franciscsimon.de  Sun Feb  3 12:57:32 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sun, 03 Feb 2008 18:57:32 +0100
Subject: [Twisted-Python] Tutorial commands not found in twistd
	(	--athena-widget, --element )
In-Reply-To: <fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>
References: <47A5B022.1060402@franciscsimon.de>
	<fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>
Message-ID: <47A6008C.3050903@franciscsimon.de>

Richard Wall schrieb:
> On Sun, Feb 3, 2008 at 12:14 PM, Francisc Simon
> <franciscsimon at franciscsimon.de> wrote:
>   
>> Hi @all,
>>  i've tried this tutorial:
>>  http://divmod.org/users/oubiwann/howto/chattutorial/env.html
>>  but i get this error at the end:
>>  /usr/local/bin/twistd: Unknown command: athena-widget
>>     
>
> Make sure you're using the SVN trunk versions of twistd / Nevow.  The
> twistd plugin system is very new and the  "athena-widget" is an even
> newer twistd plugin. If you follow the Combinator instructions in that
> tutorial, it should just work and the path to twistd should look like:
>
> richard at aziz:~/Projects$ which twistd
> /home/richard/Projects/combinator_paths/bincache/twistd
>
> richard at aziz:~/Projects$ whbranch
> Divmod: trunk
> Twisted: trunk
>
> -RichardW.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   
Hi thx a lot for help,

i've now an other error: /usr/local/bin/twistd: Specify a valid class 
name to --element

but it is the same tutorial and i think it is everthing the same in the 
tutorial described.

THX

Frank
:-)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080203/3b5d6778/attachment.htm 

From me at mocisoft.com  Sun Feb  3 14:41:47 2008
From: me at mocisoft.com (markus espenhain)
Date: Sun, 03 Feb 2008 20:41:47 +0100
Subject: [Twisted-Python] wired problem with deferreds
Message-ID: <1202067707.9860.27.camel@localhost>

hi

im stuck with the following deferred construct - the problem is that cb2
is called with None instead of the expected argument

from twisted.internet import defer

cd = None

def req1():
    return defer.Deferred().addCallback(req2)

def req2(a):
    print 'req2', a
    global cd
    if not cd:
        cd = defer.Deferred().addCallback(req3)
    return cd

def req3(a):
    print 'req3', a
    return a

def cb1(a):
    print 'cb1', a
    return a

def cb2(a):
    print 'cb2', a
    return a


d1 = req1().addCallback(cb1)
d1.callback('X')
d2 = req1().addCallback(cb2)
d2.callback('X')
cd.callback('S')

output:

req2 X
req2 X
req3 S
cb1 S
cb2 None # <- ?

req1 fetches a mapping for given arguments - req2 tries to create an
object + additional resquests by the result of req1 - but these objects
should only be created once - so far i didn't find an acceptable
workaround for that - req3 applys some modifications but the problem
occurs also without the step in req3 

is there something i overlooked so that cb2 isn't called with the
required arg?

thanks
markus




From drew.smathers at gmail.com  Mon Feb  4 12:18:51 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 4 Feb 2008 12:18:51 -0500
Subject: [Twisted-Python] wired problem with deferreds
In-Reply-To: <1202067707.9860.27.camel@localhost>
References: <1202067707.9860.27.camel@localhost>
Message-ID: <368574aa0802040918w7c6adb47jd96894e7340180e3@mail.gmail.com>

On Feb 3, 2008 2:41 PM, markus espenhain <me at mocisoft.com> wrote:

> is there something i overlooked so that cb2 isn't called with the
> required arg?
>

What are you trying to do?  This is quite a convoluted example.

Nonetheless, this does make me wonder what the heck is going on.  To appease
my curiosity, I added debug statements to Defer._runCallbacks:

                ...
                try:
                    self._runningCallbacks = True
                    try:
                        print 'calling %r (%r)' % (callback, self)
                        self.result = callback(self.result, *args, **kw)
                        print 'Got result', self.result
                    finally:
                        self._runningCallbacks = False
                    if isinstance(self.result, Deferred):
                      ...


And this is the output:
...
calling <function cb1 at 0x82a3e9c> (<Deferred at 0xb7a34c8cL  current
result: 'S'>)
cb1 S
Got result S
Got result None
...

WTF?  How on earth can this even happen???

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080204/ba7dcaa0/attachment.htm 

From pm-twisted-python at anapol.cz  Mon Feb  4 16:12:06 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Mon, 04 Feb 2008 22:12:06 +0100
Subject: [Twisted-Python] wired problem with deferreds
In-Reply-To: <1202067707.9860.27.camel@localhost>
References: <1202067707.9860.27.camel@localhost>
Message-ID: <47A77FA6.5000003@anapol.cz>

Hi,

it looks to me like the chain of deferred callbacks is broken by this. 
At least i think deferreds aren't supposed to return the result of last 
callbacked function in the chain. If that is true, then your code fails 
on this:

You have d1, d2, cd. Before callbacking cd, the callback chains will 
look like this:

xd1 = half-done d1, callback chain: [cb1]
xd2 = half-done d2, callback chain: [cb2]
cd, callback chain: [req3, xd1, xd2]

the cd's chain processing will take req3 and it's return value, 'S' will 
give to the xd1 (_continue method). xd1 will unpause itself and give the 
'S' to cb1. The point is here, that although cb1 returns 'S', it is only 
relevant to xd1 aka d1 chain processing. The d1 deferred does return 
None. So that goes to next in cd's chain, the xd2. xd2 will give None to 
cb2 and there goes your output.

The deferred chaining works, because if some addCallback'ed' function 
returns a deferred, then the current deffered adds it's '_continue' 
method to that deferred's chain. That way it gets the result values and 
can process the chain further then.

The short answer is probably: You can return a deferred(s) from 
addCallbackeds methods and wait for them, but should only wait in one 
place for one deferred. If returning the same deferred in multiple 
places, only the first will get the result of that deferred chain (and i 
thint that this is certainly not the common use case ;) Think about some 
tree-like-pattern, that branches only one way. Otherwise it's really 
twisted ;)

Probably you should use an array of distinct deferreds in req3, although 
I'm not sure of the purpose of the code.

Hope this helps.

Petr



markus espenhain wrote:
> hi
> 
> im stuck with the following deferred construct - the problem is that cb2
> is called with None instead of the expected argument
> 
> from twisted.internet import defer
> 
> cd = None
> 
> def req1():
>     return defer.Deferred().addCallback(req2)
> 
> def req2(a):
>     print 'req2', a
>     global cd
>     if not cd:
>         cd = defer.Deferred().addCallback(req3)
>     return cd
> 
> def req3(a):
>     print 'req3', a
>     return a
> 
> def cb1(a):
>     print 'cb1', a
>     return a
> 
> def cb2(a):
>     print 'cb2', a
>     return a
> 
> 
> d1 = req1().addCallback(cb1)
> d1.callback('X')
> d2 = req1().addCallback(cb2)
> d2.callback('X')
> cd.callback('S')
> 
> output:
> 
> req2 X
> req2 X
> req3 S
> cb1 S
> cb2 None # <- ?
> 
> req1 fetches a mapping for given arguments - req2 tries to create an
> object + additional resquests by the result of req1 - but these objects
> should only be created once - so far i didn't find an acceptable
> workaround for that - req3 applys some modifications but the problem
> occurs also without the step in req3 
> 
> is there something i overlooked so that cb2 isn't called with the
> required arg?
> 
> thanks
> markus



From db3l.net at gmail.com  Mon Feb  4 21:52:25 2008
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 04 Feb 2008 21:52:25 -0500
Subject: [Twisted-Python] Re: wired problem with deferreds
References: <1202067707.9860.27.camel@localhost>
Message-ID: <m2fxw8ru6u.fsf@valheru.db3l.homeip.net>

markus espenhain <me at mocisoft.com> writes:

> im stuck with the following deferred construct - the problem is that cb2
> is called with None instead of the expected argument
>
> from twisted.internet import defer
>
> cd = None
>
> def req1():
>     return defer.Deferred().addCallback(req2)
>
> def req2(a):
>     print 'req2', a
>     global cd
>     if not cd:
>         cd = defer.Deferred().addCallback(req3)
>     return cd
>
> def req3(a):
>     print 'req3', a
>     return a
>
> def cb1(a):
>     print 'cb1', a
>     return a
>
> def cb2(a):
>     print 'cb2', a
>     return a
>
>
> d1 = req1().addCallback(cb1)
> d1.callback('X')
> d2 = req1().addCallback(cb2)
> d2.callback('X')
> cd.callback('S')
>
> output:
>
> req2 X
> req2 X
> req3 S
> cb1 S
> cb2 None # <- ?
>
> req1 fetches a mapping for given arguments - req2 tries to create an
> object + additional resquests by the result of req1 - but these objects
> should only be created once - so far i didn't find an acceptable
> workaround for that - req3 applys some modifications but the problem
> occurs also without the step in req3 
>
> is there something i overlooked so that cb2 isn't called with the
> required arg?

I think it's because you're effectively pausing two callback chains on
the same nested deferred, and it's the continuation processing of that
deferred for the first callback chain that is clearing your result for
the second callback chain.

There are three deferred's involved above, with these initial callbacks:

d1 - Callbacks req2, then cb1
d2 - Callbacks req2 then cb2
cd - Callback req3

Now in each of the d1.callback() and d2.callback() calls, the callback
chain runs the first callback req2(), and then pauses because req2
returns a deferred (cb) that hasn't finished.

It's important to realize that the way the deferred object "pauses" a
callback is to simply insert its own continuation method as a final
callback on the nested deferred.

So, after those two callback() methods, the cd deferred actually has a
callback chain of req3, d1._continue, and d2._continue.

It's also important to note that the internal _continue method of the
deferred object has no return (thus None).  That's where your result
is being lost along the way to cb2.

So, when you finally call cd.callback('S'), I believe you actually
trigger a sequence of events such as:

  req3('S'), returning 'S'
  d1._continue('S'), returning None and unpausing d1
    (recursively)
    cb1('S') due to the next callback in d1's callback chain.
  d2._continue(None), returning None and unpausing d2
    (recursively)
    cb2(None) due to the next callback in d2's callback chain.
  
You'll find that if you temporarily add code to Deferred._continue to
pass through the result it is handed that you see it show up.

I don't know if sharing a nested deferred chain among more than one
outer deferred chain something that can be expected to have sane
behavior.  Then again, I'm not sure it's really a bad thing to have
the Deferred object pass through the result in addition to using it
for itself (e.g., adding a "return result" to the Deferred._continue
method).

You might find that if you need to perform some sort of singleton
action on the underlying operation, that you would be best off
manually handling how that callback affects others than relying on the
default Twisted behavior of nested deferreds.

-- David




From glyph at divmod.com  Mon Feb  4 22:19:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 05 Feb 2008 03:19:17 -0000
Subject: [Twisted-Python] using conch to create a "chrooted" sftp server
Message-ID: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>


I'd like to provide file-server access on my home network to a machine 
which hosts a variety of media, without exposing its entire filesystem. 
OpenSSH's sftp-server doesn't allow this, so of course I thought, I 
should use conch.

Completely replacing OpenSSH with Conch is inconvenient, however, and it 
is my only means to administer these machines, so both for the sake of 
easy packaging and making sure I don't make a mistake, I'd really like 
to keep the main SSH daemon in place but replace the sftp channel.

I *think* that means I'd need to do something with sshd_config, 
twisted.conch.ssh.filetransfer, and twisted.internet.stdio.  However, 
I'm a bit at a loss what that thing would be.

Can someone with stronger conch-fu than I give a brief description of 
how this could be done?  Ideally, I'd like some users (myself) to be 
able to access the entire filesystem, but others (the "storage" user, 
who has no shell) to only be able to access /public.  Finally I'd like 
the "guest" user to be able to access /public, but read-only, and 
/public/drop-box read-write.  I don't mind setting up UNIX permissions 
to enforce that last bit.



From dfarrell at mypublisher.com  Tue Feb  5 15:39:07 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 5 Feb 2008 15:39:07 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0899@exchange.mypublisher.local>
Message-ID: <318F79422ADC5041A93343721F84474D8B08CA@exchange.mypublisher.local>

> > On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell
> <dfarrell at mypublisher.com>
> > wrote:
> > >Hello everyone,
> > >
> > >I'm trying to install Twisted 2.5 on a Centos 5 intel based server
> that
> > >has Python 2.4 on it, and am having problems. I download the
Twisted
> 2.5
> > >tar file, unpack it, go to the zope.interface directory and perform
a
> > >"sudo python setup.py install" command, which succeeds. I then go
to
> the
> > >root directory and do the same thing for Twisted "sudo python
> setup.py
> > >install" and it looks like it completes successfully. When I go
into
> the
> > >Python interpreter and enter an "import twisted" line, that works
> fine.
> > >However, if I do this, "from twisted import web" I get an error:
> > >
> > >Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
> > >[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
> > >Type "help", "copyright", "credits" or "license" for more
> information.
> > >>>> from twisted import web
> > >Traceback (most recent call last):
> > >  File "<stdin>", line 1, in ?
> > >ImportError: cannot import name web
> > >
> > >When I look in /usr/lib/python2.4/site-packages/twisted I see that
it
> > >has a web directory, so I'm not sure what's going on or what the
> problem
> > >is. Any insights would be most welcome!
> > >
> >
> > Is this a 64 bit machine?  Do you also have
/usr/lib64/python2.4/site-
> > packages/twisted?  If so, it may be that Python is
> > picking that up, causing it to ignore anything in
> /usr/lib/python2.4/site-
> > packages/twisted.
> >
> > If so, the solution is to tell distutils to install all of Twisted
in
> the
> > same place.  I forget the exact options to do this, you can probably
> find
> > them in the output of "python setup.py install --help".
> >
> > Jean-Paul
> >
> Jean-Paul
> 
> Thanks for the hint, when I looked at the output of uname -a on the
> target machine it reported this:
> 
> Linux dev03.com 2.6.18-8.1.6.el5 #1 SMP Thu Jun 14 17:29:04 EDT 2007
> x86_64 x86_64 x86_64 GNU/Linux
> 
> Which looks like it's running in Intel 64 bit mode to me. So I'll have
> to look around to see how to install Twisted in a 64 environment. Any
> help or suggestions would be greatly appreciated! :)
> 
> Thanks again!
> Doug
> 

Hi everyone,

Just to "close the loop" on this, I re-installed Twisted on this 64 bit
machine like this:

python setup.py install --install-lib=/usr/lib64/python2.4/site-packages

and twisted has installed fine. I'm running my twistd daemon process
right now.

Doug



From leszczynscy at yahoo.com  Wed Feb  6 10:03:11 2008
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 06 Feb 2008 09:03:11 -0600
Subject: [Twisted-Python] simple tcpgate in Twisted
Message-ID: <47A9CC2F.6000106@yahoo.com>

Hi,

I need to write a simple TCP/IP gate which would accept connections, 
reconnect to arbitrary (address,port), retransmit all data from both 
ends, and finally closed the connection upon either end closing it too.

I was not able to find anything ready so I wrote a simple piece of the 
code (attached at the end along with the tcpecho used for testing 
purposes, for initiator side I use simply telnet). I also want to be as 
clean as possible from Twisted perspective. There are two problems I 
have encountered related to the cleanness of the solution:

1- I store self.gate_server_protocol in both 
GateClientProtocol(Protocol) and GateClientProtocolFactory(ClientFactory)
   
    This is an obvious redundancy, but it is not clear for me what is a 
relationship between a Protocol and a ClientFactory. Is it composition 
or aggregation, is it 1:1 or n:n. Is Factory created for each Protocol?

2 - Not sure id the relationship between GateServerProtocol and 
GateClientProtocol is correctly coded too.


The prototype does not accumulate the data in case a connection for is 
GateClientProtocol not established. I will finish it of once I am 
confident the main structure is solid.


Thx in advance for comments and sugestuions,

AndyL


-----------<CUT HERE>---------------

tcpgate.py
==========
from twisted.internet.protocol import Protocol,ClientFactory,ServerFactory
from twisted.internet import reactor

class GateClientProtocol(Protocol):
    def __init__(self,gate_server_protocol):
        self.gate_server_protocol=gate_server_protocol
        gate_server_protocol.gate_client_protocol=self

    def connectionLost(self,reason):
        print 'GateClientProtocol.connectionLost',reason
        self.gate_server_protocol.transport.loseConnection()
        
    def dataReceived(self,data):
        self.gate_server_protocol.transport.write(data)

class GateClientProtocolFactory(ClientFactory):
    def __init__(self,gate_server_protocol):
        self.gate_server_protocol=gate_server_protocol

    def buildProtocol(self,addr):
        print 'GateClientProtocolFactory:buildProtocol'
        return GateClientProtocol(self.gate_server_protocol)
    
    def clientConnectionFailed(self,connector,reason):
        print 'GateClientProtocolFactory:clientConnectionFailed',reason

class GateServerProtocol(Protocol):
    def __init__(self):
        self.gate_client_protocol=None

    def connectionMade(self):
        print 'GateServerProtocol.connectionMade'
        reactor.connectTCP('127.0.0.1',8002,GateClientProtocolFactory(self))

    def connectionLost(self,reason):
        print 'GateServerProtocol.connectionLost',reason
        if self.gate_client_protocol:
            self.gate_client_protocol.transport.loseConnection()
            self.gate_client_protocol=None

    def dataReceived(self,data):
        if self.gate_client_protocol:
            self.gate_client_protocol.transport.write(data)

factory=ServerFactory()
factory.protocol=GateServerProtocol

reactor.listenTCP(8001,factory)
reactor.run()


tcpecho.py
==========
from twisted.internet.protocol import Protocol,Factory
from twisted.internet import reactor

class Echo(Protocol):
    def connectionLost(self, reason):
        print 'Lost connection.  Reason:', reason

    def dataReceived(self, data):
        print 'Echo:',`data`
        if 'quit' in data:
            self.transport.loseConnection()
        else:
            self.transport.write(data)

factory=Factory()
factory.protocol=Echo

reactor.listenTCP(8002,factory)

reactor.run()







From exarkun at divmod.com  Wed Feb  6 10:15:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 6 Feb 2008 10:15:14 -0500
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <47A9CC2F.6000106@yahoo.com>
Message-ID: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>

On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Hi,
>
>I need to write a simple TCP/IP gate which would accept connections, 
>reconnect to arbitrary (address,port), retransmit all data from both ends, 
>and finally closed the connection upon either end closing it too.

twisted.protocols.portforward probably does something quite similar to what
you want.

>
>I was not able to find anything ready so I wrote a simple piece of the code 
>(attached at the end along with the tcpecho used for testing purposes, for 
>initiator side I use simply telnet). I also want to be as clean as possible 
>from Twisted perspective. There are two problems I have encountered related 
>to the cleanness of the solution:
>
>1- I store self.gate_server_protocol in both GateClientProtocol(Protocol) 
>and GateClientProtocolFactory(ClientFactory)
>      This is an obvious redundancy, but it is not clear for me what is a 
>relationship between a Protocol and a ClientFactory. Is it composition or 
>aggregation, is it 1:1 or n:n. Is Factory created for each Protocol?

The relationship is up to the factory.  In your code:

>    def connectionMade(self):
>        print 'GateServerProtocol.connectionMade'
>        reactor.connectTCP('127.0.0.1',8002,GateClientProtocolFactory(self))

It seems the relationship is 1:1.  Each time you want to establish a new
connection, you create a new GateClientProtocolFactory instance and there
is no reconnection logic implemented by GateClientProtocolFactory.

You may see simplification by using twisted.internet.protocols.ClientCreator
instead of having GateClientProtocolFactory.

>
>2 - Not sure id the relationship between GateServerProtocol and 
>GateClientProtocol is correctly coded too.
>

It seems basically correct, aside from the timing/connecting issue you
mentioned.

>
>The prototype does not accumulate the data in case a connection for is 
>GateClientProtocol not established. I will finish it of once I am confident 
>the main structure is solid.
>

Jean-Paul



From glyph at divmod.com  Thu Feb  7 12:58:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 07 Feb 2008 17:58:01 -0000
Subject: [Twisted-Python] [ANN] Twisted joins Software Freedom Conservancy, 
	Now Accepting Tax-Deductable Donations
Message-ID: <20080207175801.21558.1851715616.divmod.xquotient.6333@joule.divmod.com>


A little less than a year ago, we were approached by Erik Dahl of Zenoss 
about creating a legal entity which Zenoss (and hopefully others!) could 
use to donate to Twisted.  Accepting money in some official capacity 
would allow us to finance things like sprints, releases, maintenance 
work, dedicated reviewer time, as well as offsetting the ongoing costs 
to the founders of the project such as hosting and domain registration.

It's been a long, hard road to get there, but the Twisted project has 
finally, very recently joined the Software Freedom Conservancy.  So 
recently, in fact, that we won't be on the web page - 
http://conservancy.softwarefreedom.org/ - for another day or two.

Creating a full-fledged foundation can be a pretty serious hassle, and 
Twisted has historically been strapped for qualified personnel.  The 
Conservancy has allowed us to pool legal resources with other projects, 
such as Inkscape, Samba, and Wine, to reduce the management overhead 
associated with creating an official legal entity.

Some of you may have noticed that we recently added a Google Checkout 
link to the front page of twistedmatrix.com.  This new link points to 
Conservancy's account for us, which is a tax-exempt 501(c)(3) 
organization.  As a result, donations to Twisted are now tax-deductable.

In the coming weeks, we plan to announce our first group of donors, as 
well as different levels of sponsorship, allowing future organizations 
and individuals to be recognized for their contributions.  We also plan 
to create a mailing list for sponsors above a certain level to direct 
our attention to the issues which are important to them.

If your company would like to be mentioned in that initial announcement, 
please drop us a line at tsf at twistedmatrix.com, and we would be happy to 
discuss our plans for sponsorship levels with you.

We also plan to have a level of sponsorship for individuals who just 
want to chip in a little, but those of you who donate before we make the 
official announcement will get an honorable mention of some kind. 
(Given that we still have to figure this stuff out, I don't know *what* 
kind, but we'll do something.)

This is all thanks to the tireless efforts of Itamar Shtull-Trauring, 
and Karen Sandler from the Conservancy.



From andrewfr_ice at yahoo.com  Sat Feb  9 15:46:44 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 9 Feb 2008 12:46:44 -0800 (PST)
Subject: [Twisted-Python] Question about Twistd and PYTHONPATH
Message-ID: <78517.52248.qm@web34209.mail.mud.yahoo.com>

Hello Folks:

This is my first time using twistd. I have daemonized
a server by creating a TAC file. When I execute the
server (first I ran it out of its development
directory), 

twistd -y server.tac

I get:

no module named Reporter (Reporter is a class)

when I run a non-daemonized version of the same
server, I have no problem.

I checked my PYTHONPATH. It seems to be properly set.
I tried setting the path using sys.path. No go.

Is there embarassingly simple that I am missing? Is
there something I should be overriding?

Cheers,
Andrew



      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at twistedmatrix.com  Sun Feb 10 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Feb 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1202619907.14.330957183@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080210/84107c3c/attachment.htm 

From exarkun at divmod.com  Sun Feb 10 11:32:24 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 10 Feb 2008 11:32:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22475 - Fix
 twisted.spread.util.FilePager to make it works with empty files:
In-Reply-To: <E1JNvug-0004f3-00@wolfwood.twistedmatrix.com>
Message-ID: <20080210163224.6859.1949187822.divmod.quotient.7750@ohm>

On Sat, 09 Feb 2008 13:03:02 -0700, Thomas Herve <therve at wolfwood.twistedmatrix.com> wrote:
>Author: therve
>Date: Sat Feb  9 13:03:00 2008
>New Revision: 22475
>
>Modified:
>   trunk/twisted/spread/util.py
>   trunk/twisted/test/test_pb.py
>
>Log:
>Fix twisted.spread.util.FilePager to make it works with empty files:
>previously, it didn't callback correctly.
>
>Author: zectbumo
>Reviewer: therve
>Fixes: #3023
>
> [snip]
>+        while not l and ttl > 0:
>+            pump.pump()
>+            ttl -= 1
>+        print ttl

*cough* ;)

> [snip]

Jean-Paul



From leszczynscy at yahoo.com  Sun Feb 10 22:48:16 2008
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Sun, 10 Feb 2008 21:48:16 -0600
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>
References: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>
Message-ID: <47AFC580.4030801@yahoo.com>

Jean-Paul Calderone wrote:
> On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski 
> <leszczynscy at yahoo.com> wrote:
>> Hi,
>>
>> I need to write a simple TCP/IP gate which would accept connections, 
>> reconnect to arbitrary (address,port), retransmit all data from both 
>> ends, and finally closed the connection upon either end closing it too.
>
> twisted.protocols.portforward probably does something quite similar to 
> what
> you want.
>
thx a lot for a suggestion.  That self.transport.pause/resumeProducing
is great.

The only thing I am not sure how it works is how ProxyServer handles the
closing connection. from its external client. Is it just done in base
classes?

Regards,
Andy




From exarkun at divmod.com  Mon Feb 11 08:43:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 11 Feb 2008 08:43:36 -0500
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <47AFC580.4030801@yahoo.com>
Message-ID: <20080211134336.6859.487960994.divmod.quotient.8028@ohm>

On Sun, 10 Feb 2008 21:48:16 -0600, Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Jean-Paul Calderone wrote:
>>On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski 
>><leszczynscy at yahoo.com> wrote:
>>>Hi,
>>>
>>>I need to write a simple TCP/IP gate which would accept connections, 
>>>reconnect to arbitrary (address,port), retransmit all data from both ends, 
>>>and finally closed the connection upon either end closing it too.
>>
>>twisted.protocols.portforward probably does something quite similar to what
>>you want.
>thx a lot for a suggestion.  That self.transport.pause/resumeProducing
>is great.
>
>The only thing I am not sure how it works is how ProxyServer handles the
>closing connection. from its external client. Is it just done in base
>classes?

Both ProxyClient and ProxyServer subclass Proxy.  Proxy implements
connectionLost to close the other connection.  So, yes.

Jean-Paul



From lists at collab.nl  Mon Feb 11 17:23:53 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Mon, 11 Feb 2008 23:23:53 +0100
Subject: [Twisted-Python] ANN: PyAMF 0.1
Message-ID: <2B8D69F9-D9E9-490B-B831-2E9B2A96487B@collab.nl>

We released PyAMF 0.1, a lightweight library that allows Flash and  
Python applications to communicate via Adobe's ActionScript Message  
Format.
AMF3 and RemoteObject are supported in all the implemented Remoting  
gateways, currently supported for Django, Twisted and WSGI.

A summary of new features features and improvements in this release:

- TwistedGateway now expects deferred from service functions
- Added expose_request to TwistedGateway
- New error handling api useful for registering custom exception classes
- When a client receives a remoting error, an exception is generated
- expose_request per service control vastly improved
- Improved authentication per service control
- uuid is no longer installed when using Python 2.5 or newer
- The inheritance tree was not consulted when encoding attributes
- TypedObjects didn't work with old style classes
- ErrorFault now prints details

Check out the download page [1], installation instructions [2] and  
examples [3].

Questions? First stop is the mailing list [4], but we also hang out  
on [5].

Cheers,

- the PyAMF team

[1] http://pyamf.org/wiki/Download
[2] http://pyamf.org/wiki/Install
[3] http://pyamf.org/wiki/Examples
[4] http://pyamf.org/wiki/MailingList
[5] irc://freenode.net/pyamf

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080211/63cae720/attachment.htm 

From noamraph at gmail.com  Tue Feb 12 06:36:42 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Tue, 12 Feb 2008 13:36:42 +0200
Subject: [Twisted-Python] How to make a secure connection between two
	computers
Message-ID: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>

Hello,

I want to do a pretty simple thing (I think): I have two computers A
and B. I want A to connect to B, where both A verifies that it
connected to B and B verifies that it was connected from A. The
connection should be encrypted.

I assume it can be done by SSL and twisted. I tried quite a bit, but
it's too confusing. Perhaps someone can give me a tip? (Some openssl
commands to create the needed key/certificate files, and an echoserver
and echoclient programs would be really great.)

Thanks a lot,
Noam



From coder_gus at lavabit.com  Tue Feb 12 07:28:05 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Tue, 12 Feb 2008 14:28:05 +0200
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <47B190D5.3050009@lavabit.com>

Hi Noam,
You can find some client/server examples here:
http://twistedmatrix.com/projects/core/documentation/examples/
And how to generate the certs here: http://blog.vrplumber.com/356

Noam Raphael wrote:
> Hello,
>
> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.
>
> I assume it can be done by SSL and twisted. I tried quite a bit, but
> it's too confusing. Perhaps someone can give me a tip? (Some openssl
> commands to create the needed key/certificate files, and an echoserver
> and echoclient programs would be really great.)
>
> Thanks a lot,
> Noam
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________
> Click here to save cash and find low rates on auto loans.
> http://ads.lavabit.com/fc/Ioyw6kdc6UQTEoPD7pgReFBDweVSjgOFAvv1eC6X2QYOIge7AOQK1X/
> ____________________________________________________________________________________
>   


____________________________________________________________________________________
Click for free info on online degrees and make up to $150K/ year.
http://ads.lavabit.com/fc/Ioyw6kddD3OlYSmOugh1odzLXn4coqUWjZbeJPjWzGtddBmGJRiTvn/
____________________________________________________________________________________




From raizyr at gmail.com  Tue Feb 12 08:22:57 2008
From: raizyr at gmail.com (Raizyr)
Date: Tue, 12 Feb 2008 08:22:57 -0500
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <47B190D5.3050009@lavabit.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<47B190D5.3050009@lavabit.com>
Message-ID: <77864d6a0802120522h671a1bcax844f17e9e7c1fdb9@mail.gmail.com>

Also, you might want to pick up the Twisted Network Programming Essentials
book, I'm going through it now and it seems to do a good job of making the
overall concepts of Twisted easier to understand.

http://www.amazon.com/Twisted-Network-Programming-Essentials-Fettig/dp/0596100329/



On Feb 12, 2008 7:28 AM, coder_gus <coder_gus at lavabit.com> wrote:

> Hi Noam,
> You can find some client/server examples here:
> http://twistedmatrix.com/projects/core/documentation/examples/
> And how to generate the certs here: http://blog.vrplumber.com/356
>
> Noam Raphael wrote:
> > Hello,
> >
> > I want to do a pretty simple thing (I think): I have two computers A
> > and B. I want A to connect to B, where both A verifies that it
> > connected to B and B verifies that it was connected from A. The
> > connection should be encrypted.
> >
> > I assume it can be done by SSL and twisted. I tried quite a bit, but
> > it's too confusing. Perhaps someone can give me a tip? (Some openssl
> > commands to create the needed key/certificate files, and an echoserver
> > and echoclient programs would be really great.)
> >
> > Thanks a lot,
> > Noam
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> ____________________________________________________________________________________
> > Click here to save cash and find low rates on auto loans.
> >
> http://ads.lavabit.com/fc/Ioyw6kdc6UQTEoPD7pgReFBDweVSjgOFAvv1eC6X2QYOIge7AOQK1X/
> >
> ____________________________________________________________________________________
> >
>
>
>
> ____________________________________________________________________________________
> Click for free info on online degrees and make up to $150K/ year.
>
> http://ads.lavabit.com/fc/Ioyw6kddD3OlYSmOugh1odzLXn4coqUWjZbeJPjWzGtddBmGJRiTvn/
>
> ____________________________________________________________________________________
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris McNabb
raizyr at gmail.com
http://www.fatratz.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080212/8bb9137e/attachment.htm 

From mg at daimi.au.dk  Tue Feb 12 09:30:07 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 15:30:07 +0100
Subject: [Twisted-Python] Several Trial test suites
Message-ID: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>

Hello,

I am using Twisted and Trial with great success for a project where we
would like to have both a small regression test suite that should run
quickly and a larger test suite which will test the system under more
heavy load.

My project lives in a package called viff, and so far I have created a
viff.test package which contains the tests -- no problem, the test are
picked up fine when I do 'trial viff'.

To create a secondary test suite, do I have to create another package
at the viff level, say viff.stress_test, or is there some clever way
to organize things below viff.test?

How to people organize such trees with many tests?

Thanks for any inputs!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mg at daimi.au.dk  Tue Feb 12 11:27:22 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 17:27:22 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <87y79qqgwl.fsf@hbox.dyndns.org>

"Noam Raphael" <noamraph at gmail.com> writes:

> Hello,
>
> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.
>
> I assume it can be done by SSL and twisted. I tried quite a bit, but
> it's too confusing. Perhaps someone can give me a tip? (Some openssl
> commands to create the needed key/certificate files, and an echoserver
> and echoclient programs would be really great.)

I am using TLS via GNUTLS via python-gnutls :-)

  http://pypi.python.org/pypi/python-gnutls

As I understand it, TLS is the successor to SSL. Python-gnutls contains
an example echo server and client that using Twisted and TLS.

To generate the certificates I use this Makefile:

  # Default number of players. To generate keys and certificates for,
  # say, 5 players, simply add 'N=5' as a command line argument when you
  # run the Makefile.
  N = 3
  
  PLAYERS = $(addprefix player-, $(shell seq $N))
  KEYS = $(addsuffix .key, $(PLAYERS) ca)
  CERTS = $(addsuffix .cert, $(PLAYERS) ca)
  REQUESTS = $(addsuffix .request, $(PLAYERS) ca)
  CFGS = $(addsuffix .cfg, $(PLAYERS) ca)
  
  
  .PHONY: all
  all: $(CERTS)
  
  .PHONY: clean
  clean:
  	rm -f $(CERTS)
  	rm -f $(REQUESTS)
  	rm -f $(CFGS)
  
  .PHONY: distclean
  distclean: clean
  	rm -f $(KEYS)
  
  %.key:
  	certtool --generate-privkey --outfile $@
  
  player-%.cfg:
  	@echo 'cn = "VIFF Player $*"' > $@
  	@echo 'serial = $*' >> $@ # The player number is encoded here.
  	@echo 'expiration_days = 365' >> $@
  	@echo 'signing_key' >> $@
  	@echo 'encryption_key' >> $@
  
  player-%.request: player-%.cfg player-%.key
  	certtool --generate-request --template player-$*.cfg \
  	 --load-privkey player-$*.key --outfile $@
  
  player-%.cert: player-%.request player-%.cfg ca.cert ca.key
  	certtool --generate-certificate --template player-$*.cfg \
  	 --load-request player-$*.request \
  	 --load-ca-certificate ca.cert --load-ca-privkey ca.key \
  	 --outfile $@
  
  ca.cfg:
  	@echo 'cn = "VIFF Certificate Authority"' > $@
  	@echo 'expiration_days = 365' >> $@
  	@echo 'ca' >> $@
  	@echo 'cert_signing_key' >> $@
  
  
  ca.cert: ca.cfg ca.key
  	certtool --generate-self-signed --template ca.cfg \
  	         --load-privkey ca.key --outfile ca.cert
  
  .INTERMEDIATE: ca.cfg
  .PRECIOUS: %.key


I hope this helps you a bit!


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080212/ba40d5dc/attachment.pgp 

From exarkun at divmod.com  Tue Feb 12 12:27:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 12:27:10 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87y79qqgwl.fsf@hbox.dyndns.org>
Message-ID: <20080212172710.6859.1056843369.divmod.quotient.8547@ohm>

On Tue, 12 Feb 2008 17:27:22 +0100, Martin Geisler <mg at daimi.au.dk> wrote:
>"Noam Raphael" <noamraph at gmail.com> writes:
>
>> Hello,
>>
>> I want to do a pretty simple thing (I think): I have two computers A
>> and B. I want A to connect to B, where both A verifies that it
>> connected to B and B verifies that it was connected from A. The
>> connection should be encrypted.
>>
>> I assume it can be done by SSL and twisted. I tried quite a bit, but
>> it's too confusing. Perhaps someone can give me a tip? (Some openssl
>> commands to create the needed key/certificate files, and an echoserver
>> and echoclient programs would be really great.)
>
>I am using TLS via GNUTLS via python-gnutls :-)
>
>  http://pypi.python.org/pypi/python-gnutls
>
>As I understand it, TLS is the successor to SSL. Python-gnutls contains
>an example echo server and client that using Twisted and TLS.

Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
support is actually support of SSL and TLS.

>
>To generate the certificates I use this Makefile:
>
> [snip]

One can also use recent versions of twisted.internet.ssl to generate
certificates.

See KeyPair, PrivateCertificate, and Certificate (and maybe some other
stuff, if you want) here:

  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html

Jean-Paul



From george at ringdevelopment.com  Tue Feb 12 13:18:59 2008
From: george at ringdevelopment.com (George Pauly)
Date: Tue, 12 Feb 2008 13:18:59 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between
	two computers
In-Reply-To: <87y79qqgwl.fsf@hbox.dyndns.org>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<87y79qqgwl.fsf@hbox.dyndns.org>
Message-ID: <1202840340.6615.127.camel@localhost.localdomain>

On Tue, 2008-02-12 at 17:27 +0100, Martin Geisler wrote:
> "Noam Raphael" <noamraph at gmail.com> writes:
> 
> > Hello,
> >
> > I want to do a pretty simple thing (I think): I have two computers A
> > and B. I want A to connect to B, where both A verifies that it
> > connected to B and B verifies that it was connected from A. The
> > connection should be encrypted.
> >
> > I assume it can be done by SSL and twisted. I tried quite a bit, but
> > it's too confusing. Perhaps someone can give me a tip? (Some openssl
> > commands to create the needed key/certificate files, and an echoserver
> > and echoclient programs would be really great.)
> 
> I am using TLS via GNUTLS via python-gnutls :-)
> 
>   http://pypi.python.org/pypi/python-gnutls
> 
> As I understand it, TLS is the successor to SSL. Python-gnutls contains
> an example echo server and client that using Twisted and TLS.
> 
> To generate the certificates I use this Makefile:
> 
>   # Default number of players. To generate keys and certificates for,
>   # say, 5 players, simply add 'N=5' as a command line argument when you
>   # run the Makefile.
>   N = 3
>   
>   PLAYERS = $(addprefix player-, $(shell seq $N))
>   KEYS = $(addsuffix .key, $(PLAYERS) ca)
>   CERTS = $(addsuffix .cert, $(PLAYERS) ca)
>   REQUESTS = $(addsuffix .request, $(PLAYERS) ca)
>   CFGS = $(addsuffix .cfg, $(PLAYERS) ca)
>   
>   
>   .PHONY: all
>   all: $(CERTS)
>   
>   .PHONY: clean
>   clean:
>   	rm -f $(CERTS)
>   	rm -f $(REQUESTS)
>   	rm -f $(CFGS)
>   
>   .PHONY: distclean
>   distclean: clean
>   	rm -f $(KEYS)
>   
>   %.key:
>   	certtool --generate-privkey --outfile $@
>   
>   player-%.cfg:
>   	@echo 'cn = "VIFF Player $*"' > $@
>   	@echo 'serial = $*' >> $@ # The player number is encoded here.
>   	@echo 'expiration_days = 365' >> $@
>   	@echo 'signing_key' >> $@
>   	@echo 'encryption_key' >> $@
>   
>   player-%.request: player-%.cfg player-%.key
>   	certtool --generate-request --template player-$*.cfg \
>   	 --load-privkey player-$*.key --outfile $@
>   
>   player-%.cert: player-%.request player-%.cfg ca.cert ca.key
>   	certtool --generate-certificate --template player-$*.cfg \
>   	 --load-request player-$*.request \
>   	 --load-ca-certificate ca.cert --load-ca-privkey ca.key \
>   	 --outfile $@
>   
>   ca.cfg:
>   	@echo 'cn = "VIFF Certificate Authority"' > $@
>   	@echo 'expiration_days = 365' >> $@
>   	@echo 'ca' >> $@
>   	@echo 'cert_signing_key' >> $@
>   
>   
>   ca.cert: ca.cfg ca.key
>   	certtool --generate-self-signed --template ca.cfg \
>   	         --load-privkey ca.key --outfile ca.cert
>   
>   .INTERMEDIATE: ca.cfg
>   .PRECIOUS: %.key
> 
> 
> I hope this helps you a bit!
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From noamraph at gmail.com  Tue Feb 12 15:02:00 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Tue, 12 Feb 2008 22:02:00 +0200
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>

Thanks all!

I think that at the end, I'll just use Python's plain socket, since I
don't intend to serve more than one request at a time. I also don't
really need to use SSL, since my two computers can have a pre-shared
secret. Here's what I wrote - tell me what you think!

#!/usr/bin/env python

import sys
import socket

from Crypto.Hash import SHA
from Crypto.Cipher import ARC4

RANDOM_LEN = 16

def get_random():
    return open('/dev/urandom').read(RANDOM_LEN)

def recv(sock, n):
    buf = ''
    while len(buf) < n:
        r = sock.recv(n - len(buf))
        if not r:
            raise socket.error("Couldn't read enough bytes")
        buf += r
    return buf

def handshake(sock, secret):
    my_random = get_random()
    my_rc4 = ARC4.new(SHA.new(secret + my_random).digest())
    sock.sendall(my_random)
    peer_random = recv(sock, RANDOM_LEN)
    peer_rc4 = ARC4.new(SHA.new(secret + peer_random).digest())
    sock.sendall(peer_rc4.encrypt('\0'*RANDOM_LEN))
    peer_response = recv(sock, RANDOM_LEN)
    if my_rc4.decrypt(peer_response) != '\0' * RANDOM_LEN:
        raise socket.error('Failed peer authentication')
    return my_rc4, peer_rc4

def server(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host, port))
    s.listen(1)
    while True:
        conn, addr = s.accept()
        print 'Connected by', addr
        conn.settimeout(1)
        try:
            my_rc4, peer_rc4 = handshake(conn, secret)
            while True:
                data = my_rc4.decrypt(conn.recv(1024))
                if not data: break
                print 'Received', repr(data)
                conn.send(peer_rc4.encrypt(data))
            conn.close()
        except socket.error, e:
            print 'Error:', e
        else:
            print 'Closed connection'

def client(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(1)
    s.connect((host, port))
    my_rc4, peer_rc4 = handshake(s, secret)
    s.send(peer_rc4.encrypt('Hello, world'))
    data = my_rc4.decrypt(s.recv(1024))
    s.close()
    print 'Received', repr(data)

def main():
    if len(sys.argv) != 5 or sys.argv[1] not in ('server', 'client'):
        print "Usage: %s server/client host port secret"
        return
    is_server = sys.argv[1] == 'server'
    host = sys.argv[2]
    port = int(sys.argv[3])
    secret = sys.argv[4]
    if is_server:
        server(host, port, secret)
    else:
        client(host, port, secret)

if __name__ == '__main__':
    main()



From mg at daimi.au.dk  Tue Feb 12 14:08:21 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 20:08:21 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87y79qqgwl.fsf@hbox.dyndns.org>
	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
Message-ID: <87lk5qq9ga.fsf@hbox.dyndns.org>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>>I am using TLS via GNUTLS via python-gnutls :-)
>>
>>  http://pypi.python.org/pypi/python-gnutls
>>
>>As I understand it, TLS is the successor to SSL. Python-gnutls
>>contains an example echo server and client that using Twisted and TLS.
>
> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
> support is actually support of SSL and TLS.

Okay, good to know.

>>To generate the certificates I use this Makefile:
>>
>> [snip]
>
> One can also use recent versions of twisted.internet.ssl to generate
> certificates.
>
> See KeyPair, PrivateCertificate, and Certificate (and maybe some other
> stuff, if you want) here:
>
>  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html

Thanks! I actually do want to replace the Makefile with Python to make
it cross-platform. In that regard I probably also have to replace the
python-gnutls library since it has no Windows binaries (that I could
tell).

I initially stayed away from pyOpenSSL since

* it seems dead: last release was in 2004 with Windows installers for
  Python 2.1. This message seems to indicate that a live form exists:
  http://tinyurl.com/3b4yeq

* the OpenSSL license issue. My project is under the GPL and therefore I
  would prefer a library under the (L)GPL too to make things simple.

* The GnuTLS has a nice (maybe biased) comparison page:

    http://www.gnu.org/software/gnutls/comparison.html


Is there a cross-platform GPL compatible library out there that will
give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080212/4ae01789/attachment.pgp 

From exarkun at divmod.com  Tue Feb 12 15:36:12 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 15:36:12 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87lk5qq9ga.fsf@hbox.dyndns.org>
Message-ID: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>

On Tue, 12 Feb 2008 20:08:21 +0100, Martin Geisler <mg at daimi.au.dk> wrote:
>Jean-Paul Calderone <exarkun at divmod.com> writes:
>
>>>I am using TLS via GNUTLS via python-gnutls :-)
>>>
>>>  http://pypi.python.org/pypi/python-gnutls
>>>
>>>As I understand it, TLS is the successor to SSL. Python-gnutls
>>>contains an example echo server and client that using Twisted and TLS.
>>
>> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
>> support is actually support of SSL and TLS.
>
>Okay, good to know.
>
>>>To generate the certificates I use this Makefile:
>>>
>>> [snip]
>>
>> One can also use recent versions of twisted.internet.ssl to generate
>> certificates.
>>
>> See KeyPair, PrivateCertificate, and Certificate (and maybe some other
>> stuff, if you want) here:
>>
>>  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
>
>Thanks! I actually do want to replace the Makefile with Python to make
>it cross-platform. In that regard I probably also have to replace the
>python-gnutls library since it has no Windows binaries (that I could
>tell).
>
>I initially stayed away from pyOpenSSL since
>
>* it seems dead: last release was in 2004 with Windows installers for
>  Python 2.1. This message seems to indicate that a live form exists:
>  http://tinyurl.com/3b4yeq

There isn't much, if any, development happening on PyOpenSSL.  Partially,
this is because it does enough as it is now (although there are some
features it could provide which would be nice).  Partially it's because
the original author has disappeared into the void.

>
> [snip licensing issues I don't have any clue about]
>
>* The GnuTLS has a nice (maybe biased) comparison page:
>
>    http://www.gnu.org/software/gnutls/comparison.html
>

GnuTLS support in Twisted might be interesting.  I have heard rumors that
OpenSSL is a higher quality implementation than GnuTLS, but I don't have
any first-hand experience; it's possible this is just fud.

There's no reason Twisted couldn't support both of these libraries and use
whichever is available (or allow explicit selection).  I think there's even
a ticket open in the tracker for this.  But since PyOpenSSL basically works,
the motivation to work on this might be missing for a lot of people.

>
>Is there a cross-platform GPL compatible library out there that will
>give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?

There's also TLSLite, which includes Twisted support.  I don't have any
first-hand experience with it either, though.

There's also M2Crypto, but since that's just another OpenSSL wrapper, it
probably doesn't take care of your license concerns.

Jean-Paul



From drew.smathers at gmail.com  Tue Feb 12 16:07:48 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 12 Feb 2008 16:07:48 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
Message-ID: <368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>

On Feb 12, 2008 3:02 PM, Noam Raphael <noamraph at gmail.com> wrote:

> Thanks all!
>
> I think that at the end, I'll just use Python's plain socket, since I
> don't intend to serve more than one request at a time. I also don't
> really need to use SSL, since my two computers can have a pre-shared
> secret. Here's what I wrote - tell me what you think!
>

I think you could have written the equivalent program in less lines of code
using facilities provided by Twisted.  And you'd have the benefits of a
number of things your program doesn't provide including:

* transport/protocol separation
* ability to handle multiple clients efficiently

It is not my area expertise by any means, but shared-secret message hashing
is a rather crude (read : easy to sniff and replay traffic) security
mechanism.

Cheers,

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080212/cd5210bc/attachment.htm 

From jml at mumak.net  Tue Feb 12 17:40:41 2008
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 13 Feb 2008 09:40:41 +1100
Subject: [Twisted-Python] Several Trial test suites
In-Reply-To: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
References: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
Message-ID: <d06a5cd30802121440m53418e0clbe156cb820d694c5@mail.gmail.com>

On Feb 13, 2008 1:30 AM, Martin Geisler <mg at daimi.au.dk> wrote:
> Hello,
>
> I am using Twisted and Trial with great success for a project where we
> would like to have both a small regression test suite that should run
> quickly and a larger test suite which will test the system under more
> heavy load.
>
> My project lives in a package called viff, and so far I have created a
> viff.test package which contains the tests -- no problem, the test are
> picked up fine when I do 'trial viff'.
>
> To create a secondary test suite, do I have to create another package
> at the viff level, say viff.stress_test, or is there some clever way
> to organize things below viff.test?
>
> How to people organize such trees with many tests?
>
> Thanks for any inputs!
>

Hi Martin,

I'm not sure I understand your problem entirely, but I'll let you know
what I do.

My code lives in a package called 'foo'. Underneath that I have a
package called 'tests' that contains all my tests as 'test_*.py'
files. 'trial foo' runs all the tests.

If I wanted to have two different suites, say for unit tests and
integration tests, I might make another package beneath 'foo' called
'integrationtests'. If I felt a bit crazy that day, I might instead
move all of my unit tests to foo/tests/unit/ and all of my integration
tests to foo/tests/integration/.

The important things to remember are:
- Trial recurses down the Python module/package tree and treats
anything called 'test_*' as a possible location for tests.
- You can specify any fully-qualified Python name on the command line.
- There is no option to specifically exclude certain tests.
- You can define a test_suite() (or testSuite()) hook in a test module
if you want to do something fancy.

jml



From paulswartz at gmail.com  Tue Feb 12 17:46:06 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Tue, 12 Feb 2008 17:46:06 -0500
Subject: [Twisted-Python] using conch to create a "chrooted" sftp server
In-Reply-To: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>
References: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>
Message-ID: <324cfb540802121446x1e197b3et5278261609808089@mail.gmail.com>

On Mon, Feb 4, 2008 at 10:19 PM,  <glyph at divmod.com> wrote:
>
>  I'd like to provide file-server access on my home network to a machine
>  which hosts a variety of media, without exposing its entire filesystem.
>  OpenSSH's sftp-server doesn't allow this, so of course I thought, I
>  should use conch.
>
>  Completely replacing OpenSSH with Conch is inconvenient, however, and it
>  is my only means to administer these machines, so both for the sake of
>  easy packaging and making sure I don't make a mistake, I'd really like
>  to keep the main SSH daemon in place but replace the sftp channel.
>
>  I *think* that means I'd need to do something with sshd_config,
>  twisted.conch.ssh.filetransfer, and twisted.internet.stdio.  However,
>  I'm a bit at a loss what that thing would be.

On the OpenSSH side, you'll want to change the 'Subsystem sftp
/usr/lib/openssh/sftp-server' line in /etc/ssh/sshd_config (on
Debian/Ubuntu) to some script that you write.

On the Twisted side, you'll want to connect
twisted.conch.ssh.filetransfer.FileTransferServer to
twisted.internet.stdio.StandardIO.  You'll have to create your own
avatar based on the current user and pass that to the constructor.

>  Can someone with stronger conch-fu than I give a brief description of
>  how this could be done?  Ideally, I'd like some users (myself) to be
>  able to access the entire filesystem, but others (the "storage" user,
>  who has no shell) to only be able to access /public.  Finally I'd like
>  the "guest" user to be able to access /public, but read-only, and
>  /public/drop-box read-write.  I don't mind setting up UNIX permissions
>  to enforce that last bit.

You'll probably want to hack up
twisted.conch.unix.SFTPServerForUnixConchUser to do that.  It's an
adapter for whatever the avatar passed to FileTransferServer is to
ISFTPServer, and FileTransferServer calls the methods on that to
implement the actual file mechanics.

hth,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin



From noamraph at gmail.com  Tue Feb 12 18:04:28 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Wed, 13 Feb 2008 01:04:28 +0200
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
	<368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>
Message-ID: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>

2008/2/12, Drew Smathers <drew.smathers at gmail.com>:
> I think you could have written the equivalent program in less lines of code
> using facilities provided by Twisted.  And you'd have the benefits of a
> number of things your program doesn't provide including:
>
> * transport/protocol separation
> * ability to handle multiple clients efficiently
>
As it happens, I don't really need to handle multiple clients
efficiently. I started to write the program using twisted, and stopped
when I realized that I had to write a fairly complex state machine. If
you have a simple way to write this protocol using twisted, it would
be nice to know.

> It is not my area expertise by any means, but shared-secret message hashing
> is a rather crude (read : easy to sniff and replay traffic) security
> mechanism.
>
Well, in TLS, after handshaking, both sides have a shared secret they
use for communication. I just skip the handshaking. (I do have a
challenge-response in the protocol, so I don't think replaying will
work.) But I did forget about hashing the data, so here's a better
version:

#!/usr/bin/env python

import sys
import struct
import socket

from Crypto.Hash import SHA
from Crypto.Cipher import ARC4

RANDOM_LEN = 16

def get_random():
    return open('/dev/urandom').read(RANDOM_LEN)

class SocketEOFError(socket.error):
    pass

def recv(sock, n):
    buf = ''
    while len(buf) < n:
        r = sock.recv(n - len(buf))
        if not r:
            if not buf:
                raise SocketEOFError("Connection closed")
            else:
                raise socket.error("Couldn't read enough bytes")
        buf += r
    return buf

def handshake(sock, secret):
    my_random = get_random()
    my_rc4 = ARC4.new(SHA.new(secret + my_random).digest())
    sock.sendall(my_random)
    peer_random = recv(sock, RANDOM_LEN)
    peer_rc4 = ARC4.new(SHA.new(secret + peer_random).digest())
    sock.sendall(peer_rc4.encrypt('\0'*RANDOM_LEN))
    peer_response = recv(sock, RANDOM_LEN)
    if my_rc4.decrypt(peer_response) != '\0' * RANDOM_LEN:
        raise socket.error('Failed peer authentication')
    return my_rc4, peer_rc4

def send_data(sock, peer_rc4, secret, data):
    length_s = struct.pack('<h', len(data))
    mac = SHA.new(secret + data + length_s).digest()
    sock.sendall(length_s + peer_rc4.encrypt(data + mac))

def recv_data(sock, my_rc4, secret):
    try:
        length_s = recv(sock, 2)
    except SocketEOFError:
        return ''
    length = struct.unpack('<h', length_s)[0]
    msg = my_rc4.decrypt(recv(sock, length + SHA.digest_size))
    data = msg[:length]
    mac = SHA.new(secret + data + length_s).digest()
    if mac != msg[length:]:
        raise socket.error('Failed hash')
    return data

def server(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host, port))
    s.listen(1)
    while True:
        conn, addr = s.accept()
        print 'Connected by', addr
        conn.settimeout(1)
        try:
            my_rc4, peer_rc4 = handshake(conn, secret)
            while True:
                data = recv_data(conn, my_rc4, secret)
                if not data: break
                print 'Received', repr(data)
                send_data(conn, peer_rc4, secret, data)
            conn.close()
        except socket.error, e:
            print 'Error:', e
        else:
            print 'Closed connection'

def client(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(1)
    s.connect((host, port))
    my_rc4, peer_rc4 = handshake(s, secret)
    send_data(s, peer_rc4, secret, 'Hello, world!')
    data = recv_data(s, my_rc4, secret)
    s.close()
    print 'Received', repr(data)

def main():
    if len(sys.argv) != 5 or sys.argv[1] not in ('server', 'client'):
        print "Usage: %s server/client host port secret"
        return
    is_server = sys.argv[1] == 'server'
    host = sys.argv[2]
    port = int(sys.argv[3])
    secret = sys.argv[4]
    if is_server:
        server(host, port, secret)
    else:
        client(host, port, secret)

if __name__ == '__main__':
    main()



From exarkun at divmod.com  Tue Feb 12 18:14:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 18:14:36 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
Message-ID: <20080212231436.6859.958812812.divmod.quotient.8679@ohm>

On Wed, 13 Feb 2008 01:04:28 +0200, Noam Raphael <noamraph at gmail.com> wrote:
>
> [snip]
>>
>Well, in TLS, after handshaking, both sides have a shared secret they
>use for communication. I just skip the handshaking. (I do have a
>challenge-response in the protocol, so I don't think replaying will
>work.) But I did forget about hashing the data, so here's a better
>version:

When you invented a new crypto protocol, the default is that you have
lost.  Sorry, that's just how it goes.  I already see one weakness in
your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
sound wave therapy if you need further convincing.

Even if you don't use Twisted, use SSL.

Jean-Paul



From warner at lothar.com  Wed Feb 13 02:02:34 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 12 Feb 2008 23:02:34 -0800
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <20080212230234.3f3073e2@luther>

> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.

FWIW, my Foolscap project (http://foolscap.lothar.com/trac) may give you what
you're looking for. It's a capability-secure descendant of Perspective
Broker, giving you a secure connection from one object in one process to a
remote one. Everything works in terms of remote method invocations, basically
'deferred = rref.callRemote("methodname", args)'.

The capability-based security model means that the remote object is
represented by a secret string (called a "FURL") that contains both the
fingerprint of the target process' SSL key and a shared secret identifying
the particular object within that process. Both are checked, so once you pass
a FURL to your local Foolscap code, you can be sure that the resulting
connection is to exactly the object intended by whoever generated the FURL.

There is no checking of the client side (the "B verifies that it was
connected from A" portion of your sentence). That goal is accomplished by
limiting distribution of the FURL. The only way to connect to B is to know
B's FURL, so if you don't give the FURL to anyone but A, then nobody but A
(or someone they give it to) can connect to B. Easy.

We're using Foolscap in the allmydata.org "Tahoe" distributed filesystem, and
the basic security primitives that it provides has made a lot of the
higher-level design much much easier.


cheers,
 -Brian

(BTW, Foolscap's current version is 0.2.4, I've made several small releases
in the past few months and neglected to announce them here. oops.)



From mg at daimi.au.dk  Wed Feb 13 02:53:25 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 13 Feb 2008 08:53:25 +0100
Subject: [Twisted-Python] Re: Several Trial test suites
References: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
	<d06a5cd30802121440m53418e0clbe156cb820d694c5@mail.gmail.com>
Message-ID: <w1bskzxpa16.fsf@thyra03.daimi.au.dk>

"Jonathan Lange" <jml at mumak.net> writes:

Hi Jonathan

> I'm not sure I understand your problem entirely, but I'll let you
> know what I do.

Yeah, I guess I was a bit vague -- I was just wondering how best to
structure many tests so that I have good flexibility over what to run
and when to run it.

> My code lives in a package called 'foo'. Underneath that I have a
> package called 'tests' that contains all my tests as 'test_*.py'
> files. 'trial foo' runs all the tests.
>
> If I wanted to have two different suites, say for unit tests and
> integration tests, I might make another package beneath 'foo' called
> 'integrationtests'. If I felt a bit crazy that day, I might instead
> move all of my unit tests to foo/tests/unit/ and all of my
> integration tests to foo/tests/integration/.

That is a good idea, I think I'll group my tests similarly so that I
can easily run all tests or just selected subsets.

> The important things to remember are:
> - Trial recurses down the Python module/package tree and treats
> anything called 'test_*' as a possible location for tests.
> - You can specify any fully-qualified Python name on the command line.
> - There is no option to specifically exclude certain tests.

Okay, that was what I initially sought for. Thanks for the input!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From dr.marc.byrd at gmail.com  Wed Feb 13 17:07:36 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Wed, 13 Feb 2008 14:07:36 -0800
Subject: [Twisted-Python] Please help - no module named S3
Message-ID: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>

I'm trying to use the S3 library from amazon within a twisted app.  If I
import S3 from the interactive console, no problem.  If I import S3 from
twisted python program (that works fine w/o), I get Failed to load
application: No module named S3 .

The S3.py and S3.pyc are in the directory from where I start twistd .  Other
such modules work fine...

Any hints?

Thanks,


m


On Feb 12, 2008 6:30 AM, Martin Geisler <mg at daimi.au.dk> wrote:

> Hello,
>
> I am using Twisted and Trial with great success for a project where we
> would like to have both a small regression test suite that should run
> quickly and a larger test suite which will test the system under more
> heavy load.
>
> My project lives in a package called viff, and so far I have created a
> viff.test package which contains the tests -- no problem, the test are
> picked up fine when I do 'trial viff'.
>
> To create a secondary test suite, do I have to create another package
> at the viff level, say viff.stress_test, or is there some clever way
> to organize things below viff.test?
>
> How to people organize such trees with many tests?
>
> Thanks for any inputs!
>
> --
> Martin Geisler
>
> VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
> SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080213/8cf95259/attachment.htm 

From jml at mumak.net  Wed Feb 13 17:12:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 14 Feb 2008 09:12:16 +1100
Subject: [Twisted-Python] Please help - no module named S3
In-Reply-To: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>
References: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>
Message-ID: <d06a5cd30802131412y55e8de06l99ad4dbd6d9afcf9@mail.gmail.com>

On Feb 14, 2008 9:07 AM, Marc Byrd <dr.marc.byrd at gmail.com> wrote:
> I'm trying to use the S3 library from amazon within a twisted app.  If I
> import S3 from the interactive console, no problem.  If I import S3 from
> twisted python program (that works fine w/o), I get Failed to load
> application: No module named S3 .
>
> The S3.py and S3.pyc are in the directory from where I start twistd .  Other
> such modules work fine...
>

The current working directory is not in the Python load path by
default. Make sure that S3.py is in a directory that appears in your
sys.path, or use the PYTHONPATH environment variable to specify the
directory that they are in.

jml



From noamraph at gmail.com  Wed Feb 13 17:21:53 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Wed, 13 Feb 2008 22:21:53 +0000
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <20080212231436.6859.958812812.divmod.quotient.8679@ohm>
References: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
	<20080212231436.6859.958812812.divmod.quotient.8679@ohm>
Message-ID: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>

2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
> When you invented a new crypto protocol, the default is that you have
> lost.  Sorry, that's just how it goes.  I already see one weakness in
> your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
> sound wave therapy if you need further convincing.
>
> Even if you don't use Twisted, use SSL.
>
Well, you are probably right.
Just wondering: can you tell me what's the weakness you found? (I
might learn some cryptology from this...)

Another, not really related, question: Do you know if someone used the
new coroutine-generators in python2.5 as a way to write servers? It
seems to me like something that can make writing servers much easier,
since a function is much more natural than a state machine (that's the
reason I wrote this protocol without twisted).

Thanks,
Noam



From exarkun at divmod.com  Wed Feb 13 17:35:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 13 Feb 2008 17:35:03 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
Message-ID: <20080213223503.6859.1038639645.divmod.quotient.9058@ohm>

On Wed, 13 Feb 2008 22:21:53 +0000, Noam Raphael <noamraph at gmail.com> wrote:
>2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
>> When you invented a new crypto protocol, the default is that you have
>> lost.  Sorry, that's just how it goes.  I already see one weakness in
>> your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
>> sound wave therapy if you need further convincing.
>>
>> Even if you don't use Twisted, use SSL.
>>
>Well, you are probably right.
>Just wondering: can you tell me what's the weakness you found? (I
>might learn some cryptology from this...)

You used the same keys for authentication (challenge/response) as for
producing ciphertext.

>
>Another, not really related, question: Do you know if someone used the
>new coroutine-generators in python2.5 as a way to write servers? It

Python 2.5 generators aren't coroutines.  This isn't really relevant to
your question, but it might help to know if you ever talk to someone who
is used to real coroutines.

>seems to me like something that can make writing servers much easier,
>since a function is much more natural than a state machine (that's the
>reason I wrote this protocol without twisted).

You might be interested in twisted.internet.defer.inlineCallbacks.  Of
course, one might argue about your description of one style over the other
as more "natural" since programming is always a wholly unnatural act, but
that would probably just be a waste of time.

Jean-Paul



From drew.smathers at gmail.com  Wed Feb 13 17:42:14 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 13 Feb 2008 17:42:14 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
References: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
	<20080212231436.6859.958812812.divmod.quotient.8679@ohm>
	<b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
Message-ID: <368574aa0802131442l6aba92f5m854ead1900bc8caf@mail.gmail.com>

On Feb 13, 2008 5:21 PM, Noam Raphael <noamraph at gmail.com> wrote:

> 2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
> > When you invented a new crypto protocol, the default is that you have
> > lost.  Sorry, that's just how it goes.  I already see one weakness in
> > your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
> > sound wave therapy if you need further convincing.
> >
> > Even if you don't use Twisted, use SSL.
> >
> Well, you are probably right.
> Just wondering: can you tell me what's the weakness you found? (I
> might learn some cryptology from this...)
>
> Another, not really related, question: Do you know if someone used the
> new coroutine-generators in python2.5 as a way to write servers? It
> seems to me like something that can make writing servers much easier,
> since a function is much more natural than a state machine (that's the
> reason I wrote this protocol without twisted).
>

Coroutine-generators?  Python 2.5 doesn't have such a thing.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080213/023418ad/attachment.htm 

From steve at holdenweb.com  Thu Feb 14 05:49:34 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 14 Feb 2008 05:49:34 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87lk5qq9ga.fsf@hbox.dyndns.org>
References: <87y79qqgwl.fsf@hbox.dyndns.org>	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
	<87lk5qq9ga.fsf@hbox.dyndns.org>
Message-ID: <fp16c0$24q$1@ger.gmane.org>

Martin Geisler wrote:
> Jean-Paul Calderone <exarkun at divmod.com> writes:
> 
>>> I am using TLS via GNUTLS via python-gnutls :-)
>>>
>>>  http://pypi.python.org/pypi/python-gnutls
>>>
>>> As I understand it, TLS is the successor to SSL. Python-gnutls
>>> contains an example echo server and client that using Twisted and TLS.
>> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
>> support is actually support of SSL and TLS.
> 
> Okay, good to know.
> 
For the record, TLS is effectively the standardization of SSL by the 
IETF for inclusion into protocol stacks - SSL was originally provided as 
an application shim library layered over TCP, and had to be linked into 
every application that used it.

TLS can, I believe, also be referred to as SSL version 3.1, and I 
understand that the only significant change was the addition of a 
broader and more recent set of cipher specifications.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mg at daimi.au.dk  Thu Feb 14 06:42:48 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Thu, 14 Feb 2008 12:42:48 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87y79qqgwl.fsf@hbox.dyndns.org>
	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
	<87lk5qq9ga.fsf@hbox.dyndns.org> <fp16c0$24q$1@ger.gmane.org>
Message-ID: <w1br6fflq6f.fsf@thyra03.daimi.au.dk>

Steve Holden <steve at holdenweb.com> writes:

> Martin Geisler wrote:
>
>> Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>> Martin Geisler wrote:
>>>
>>>> As I understand it, TLS is the successor to SSL. [...]
>>>
>>> Yes, although TLS is commonly referred to as SSL, and Twisted's
>>> "SSL" support is actually support of SSL and TLS.
>>
>> Okay, good to know.
>
> For the record, TLS is effectively the standardization of SSL by the
> IETF for inclusion into protocol stacks - SSL was originally
> provided as an application shim library layered over TCP, and had to
> be linked into every application that used it.
>
> TLS can, I believe, also be referred to as SSL version 3.1, and I
> understand that the only significant change was the addition of a
> broader and more recent set of cipher specifications.

Thanks for the explaination. My application is an implementation of
secure multi-party computation, and to argue that the whole thing is
secure from top to bottom, I didn't want to use an old version (SSL)
if I could use something newer (TLS). But if there isn't any
compelling reason, I might of course just as well to with SSL(3).

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From thomas.boucher at student.ecp.fr  Thu Feb 14 10:32:30 2008
From: thomas.boucher at student.ecp.fr (Thomas Boucher)
Date: Thu, 14 Feb 2008 16:32:30 +0100
Subject: [Twisted-Python] Twisted and python-ogre 
Message-ID: <47B45F0E.6030307@student.ecp.fr>

Hello,

I am currently part of a MMORPG project in python, using Twisted
and python-ogre. I found some posts talking about the cohabitation 
between the two. However I couldn't find a definitive answer. What I am 
seeking for is more a general method than technical details.

What I would like to do is to put properly Twisted and python-ogre
together. To do that I have already tried the following ways :

  - First run python-ogre in the main loop. At a time, this loop launches
the twisted reactor in another thread with Thread(target =
sthg_which_runs_reactor.run).
The problem I am experiencing is described here [1]. The sendLine method
is executed immediately, but the data is received by the other side only
20/30 seconds after.

  - So I tried not to run Twisted in another thread, by using the way
described here [2]. Twisted is given the main loop and the
rendering is done frame by frame with the coiterate. It works sometimes,
the renderOneFrame in the coiterration is not really working.


But it seems more logical to run ptyhon-ogre in the main loop and
twisted on the side (in another thread for example, as soon as the 
client has decided to connect to the server). Have you any ideas how I 
could do this properly (with threads, without threads, with the 
coiterrate ...)?

If Twisted was originally made for MMORPGs, why the reactor wants so 
much to be in the main loop and to manage itself the other threads (with 
callInThread for example)?


Cheers


[1] http://archives.free.net.ph/message/20080102.113837.4c4513eb.en.html
[2] 
http://www.ogre3d.org/phpBB2addons/viewtopic.php?p=35187&sid=ce193664e1d3d7c4af509e6f4e2718c6

-- 
Thomas Boucher



From exarkun at divmod.com  Thu Feb 14 11:01:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 14 Feb 2008 11:01:58 -0500
Subject: [Twisted-Python] Twisted and python-ogre 
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>

On Thu, 14 Feb 2008 16:32:30 +0100, Thomas Boucher <thomas.boucher at student.ecp.fr> wrote:
>Hello,
>
>I am currently part of a MMORPG project in python, using Twisted
>and python-ogre. I found some posts talking about the cohabitation between 
>the two. However I couldn't find a definitive answer. What I am seeking for 
>is more a general method than technical details.
>
>What I would like to do is to put properly Twisted and python-ogre
>together. To do that I have already tried the following ways :
>
>  - First run python-ogre in the main loop. At a time, this loop launches
>the twisted reactor in another thread with Thread(target =
>sthg_which_runs_reactor.run).
>The problem I am experiencing is described here [1]. The sendLine method
>is executed immediately, but the data is received by the other side only
>20/30 seconds after.

Chris Armstrong's response to the post you refer to is accurate.  Twisted
APIs are not threadsafe.  In order to call them from a thread other than
the one in which the reactor is running, it is absolutely required that you
use reactor.callFromThread.  This is quite simple.  Instead of:

    proto.sendLine("line")

Simple do:

    reactor.callFromThread(proto.sendLine, "line")

You will have to do this for every call you make to a Twisted API (except
for reactor.callFromThread, of course ;).

Since this is quite inconvenient, inefficient, and error prone, it's best
if you keep the interaction between different threads to the barest minumum
you can manage.

>
>  - So I tried not to run Twisted in another thread, by using the way
>described here [2]. Twisted is given the main loop and the
>rendering is done frame by frame with the coiterate. It works sometimes,
>the renderOneFrame in the coiterration is not really working.
>

What do you mean "not really working"?

>
>But it seems more logical to run ptyhon-ogre in the main loop and
>twisted on the side (in another thread for example, as soon as the client 
>has decided to connect to the server). Have you any ideas how I could do 
>this properly (with threads, without threads, with the coiterrate ...)?

The best solution would be to really integrate the two loops.  I don't know
the details of OGRE though, so I can't tell you specifically how to do this.
It is tightly dependent on the details of the loops being integrated.

>
>If Twisted was originally made for MMORPGs, why the reactor wants so much to 
>be in the main loop and to manage itself the other threads (with 
>callInThread for example)?
>

Because most other event loops are very bad at managing events. :)  If you
want reasonable network performance, you need a good network event loop to
be in control.

Jean-Paul



From wthie at thiengineering.ch  Thu Feb 14 13:12:18 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 14 Feb 2008 19:12:18 +0100
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
References: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <47B48482.1020103@thiengineering.ch>

Hi Thomas

Looks like the twisted event loop should be in control and Ogre should 
be called like

     hb = task.LoopingCall(ogre.heartBeat) #system pump
     hb.start(0.05)

with ogre.heartbeat operating along the line of

Ogre::Root::getSingletonPtr()->renderOneFrame(); //C++ code

I don't know if this particular C++ call is exposed in PyOgre, but we 
have Ogre running in a networked multiplayer wxWidgets app written in 
C++ with exactly that setup, although the limit is - only one Ogre 
window per app when using this approach.

I would be really interested in how you solved your problem!

In the meantime
HTH, Werner

Thomas Boucher wrote:
> Hello,
> 
> I am currently part of a MMORPG project in python, using Twisted
> and python-ogre. I found some posts talking about the cohabitation 
> between the two. However I couldn't find a definitive answer. What I am 
> seeking for is more a general method than technical details.
> 
> What I would like to do is to put properly Twisted and python-ogre
> together. To do that I have already tried the following ways :
> 
>  - First run python-ogre in the main loop. At a time, this loop launches
> the twisted reactor in another thread with Thread(target =
> sthg_which_runs_reactor.run).
> The problem I am experiencing is described here [1]. The sendLine method
> is executed immediately, but the data is received by the other side only
> 20/30 seconds after.
> 
>  - So I tried not to run Twisted in another thread, by using the way
> described here [2]. Twisted is given the main loop and the
> rendering is done frame by frame with the coiterate. It works sometimes,
> the renderOneFrame in the coiterration is not really working.
> 
> 
> But it seems more logical to run ptyhon-ogre in the main loop and
> twisted on the side (in another thread for example, as soon as the 
> client has decided to connect to the server). Have you any ideas how I 
> could do this properly (with threads, without threads, with the 
> coiterrate ...)?
> 
> If Twisted was originally made for MMORPGs, why the reactor wants so 
> much to be in the main loop and to manage itself the other threads (with 
> callInThread for example)?
> 
> 
> Cheers
> 
> 
> [1] http://archives.free.net.ph/message/20080102.113837.4c4513eb.en.html
> [2] 
> http://www.ogre3d.org/phpBB2addons/viewtopic.php?p=35187&sid=ce193664e1d3d7c4af509e6f4e2718c6 
> 
> 



From broehl at gmail.com  Thu Feb 14 13:30:53 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Thu, 14 Feb 2008 13:30:53 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
References: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>

On Thu, Feb 14, 2008 at 10:32 AM, Thomas Boucher <
thomas.boucher at student.ecp.fr> wrote:

> I am currently part of a MMORPG project in python, using Twisted
> and python-ogre.


Hey, me too!  I wonder if anyone else out there is doing this -- it seems
like a natural combination of technologies.

- First run python-ogre in the main loop. At a time, this loop launches
> the twisted reactor in another thread


Everyone I've spoken to has recommended not using threads with Twisted.


> - So I tried not to run Twisted in another thread, by using the way
> described here [2]. Twisted is given the main loop and the
> rendering is done frame by frame with the coiterate. It works sometimes,
> the renderOneFrame in the coiterration is not really working.


I hadn't seen that discussion thread before, and I'm not that familiar with
coiteration.

What I'm currently doing is this:

def renderFrame():
    ogre.WindowEventUtilities.messagePump()
    root.renderOneFrame()

renderSystem._initRenderTargets()
root.clearEventTimes()
renderTask = task.LoopingCall(renderFrame)
renderTask.start(0.01, False)
reactor.run()

I do my keyboard and mouse capture in a frame listener which I register with
Ogre.

It works, but I've only done a little bit of network activity (e.g. an IRC
client).

If any Twisted experts would care to comment on the above code, I'd
appreciate it.

I'm also wondering what would be the advantages of using a coiterator...?

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080214/ae0064c4/attachment.htm 

From list-ener at strank.info  Thu Feb 14 14:05:24 2008
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 14 Feb 2008 20:05:24 +0100
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
References: <47B45F0E.6030307@student.ecp.fr>
	<20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
Message-ID: <47B490F4.2020702@strank.info>

on 14.02.2008 17:01 Jean-Paul Calderone said the following:
> On Thu, 14 Feb 2008 16:32:30 +0100, Thomas Boucher 
> <thomas.boucher at student.ecp.fr> wrote:
<snip>
>>
>> What I would like to do is to put properly Twisted and python-ogre
>> together. To do that I have already tried the following ways :
<snip>
>> But it seems more logical to run ptyhon-ogre in the main loop and
>> twisted on the side (in another thread for example, as soon as the 
>> client has decided to connect to the server). Have you any ideas how I 
>> could do this properly (with threads, without threads, with the 
>> coiterrate ...)?
> 
> The best solution would be to really integrate the two loops.  I don't know
> the details of OGRE though, so I can't tell you specifically how to do 
> this.
> It is tightly dependent on the details of the loops being integrated.

I use python-ogre plus twisted:
no threads, twisted has control and a LoopingCall triggers a basic Ogre 
iteration step (similar to the coiteration idea the OP referenced).
Using a LoopingCall provides automatic frame-rate limitation, the 
coiteration code gives render-as-often-as-possible.

Twisted's main loop is by far more complicated than Ogre's default loop, 
the latter simply runs pumpmessages-render-callframelisteners as often 
as possible and is easier to integrate into twisted's.

cheers,
stefan




From thomas.boucher at student.ecp.fr  Fri Feb 15 09:01:21 2008
From: thomas.boucher at student.ecp.fr (Thomas Boucher)
Date: Fri, 15 Feb 2008 15:01:21 +0100
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
References: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
Message-ID: <47B59B31.4030906@student.ecp.fr>

Jean-Paul Calderone a ?crit :
> Chris Armstrong's response to the post you refer to is accurate.  Twisted
> APIs are not threadsafe.  In order to call them from a thread other than
> the one in which the reactor is running, it is absolutely required that you
> use reactor.callFromThread.  This is quite simple.  Instead of:
> 
>    proto.sendLine("line")
> 
> Simple do:
> 
>    reactor.callFromThread(proto.sendLine, "line")
> 
> You will have to do this for every call you make to a Twisted API (except
> for reactor.callFromThread, of course ;).

I have just tried this method, and it perfectly works.
The twisted reactor is run in another thread and the calls to Twisted 
are managed by the callFromThread method. The main advantage I see to it 
(excepting the fact that it works) is that it does not require changes 
in the way the graphic rendering is done : you do not care about how 
python-ogre runs to code the twisted part.

> The best solution would be to really integrate the two loops.  I don't know
> the details of OGRE though, so I can't tell you specifically how to do 
> this.
> It is tightly dependent on the details of the loops being integrated.

What I can't see for the moment is how much better it would be to do 
like the other ways delivered in the discussion thread (by Werner, 
Bernie an Stefan). These ways consist in running Twisted first and in 
letting it manage python-ogre (by doing the rendering frame by frame 
with coiteration, or loopingcalls).
Is this better than doing separate threads ?

> Because most other event loops are very bad at managing events. :)  If you
> want reasonable network performance, you need a good network event loop to
> be in control.

Don't you think using basic sockets (easy to code in Python) to make the 
network connection from a client to a server is more efficient 
(considering the time spent to do it or the complexity of the code) and 
more easy to keep in a project ?

I suppose the connexion is better managed with Twisted with a lot of 
control (and moreover there are huge libs) but to what extend ?


Anyway, thanks for all the suggestions already given by everybody.

Cheers

-- 
Thomas Boucher



From exarkun at divmod.com  Fri Feb 15 09:25:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 15 Feb 2008 09:25:57 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B59B31.4030906@student.ecp.fr>
Message-ID: <20080215142557.6859.1357815474.divmod.quotient.9847@ohm>

On Fri, 15 Feb 2008 15:01:21 +0100, Thomas Boucher <thomas.boucher at student.ecp.fr> wrote:
>Jean-Paul Calderone a ?crit :
>>Chris Armstrong's response to the post you refer to is accurate.  Twisted
>>APIs are not threadsafe.  In order to call them from a thread other than
>>the one in which the reactor is running, it is absolutely required that you
>>use reactor.callFromThread.  This is quite simple.  Instead of:
>>
>>    proto.sendLine("line")
>>
>>Simple do:
>>
>>    reactor.callFromThread(proto.sendLine, "line")
>>
>>You will have to do this for every call you make to a Twisted API (except
>>for reactor.callFromThread, of course ;).
>
>I have just tried this method, and it perfectly works.
>The twisted reactor is run in another thread and the calls to Twisted are 
>managed by the callFromThread method. The main advantage I see to it 
>(excepting the fact that it works) is that it does not require changes in 
>the way the graphic rendering is done : you do not care about how python- 
>ogre runs to code the twisted part.
>>The best solution would be to really integrate the two loops.  I don't know
>>the details of OGRE though, so I can't tell you specifically how to do 
>>this.
>>It is tightly dependent on the details of the loops being integrated.
>
>What I can't see for the moment is how much better it would be to do like 
>the other ways delivered in the discussion thread (by Werner, Bernie an 
>Stefan). These ways consist in running Twisted first and in letting it 
>manage python-ogre (by doing the rendering frame by frame with coiteration, 
>or loopingcalls).
>Is this better than doing separate threads ?

There are arguments about efficiency.  Using threads has overhead which is
not present when not using threads.  These arguments are probably not very
convincing in this case, since you would only have two threads and their
overhead will be dwarfed by your rendering costs.  You should be aware that
reactor.callFromThread _does_ have some non-trivial overhead.  Using it for
each sendLine call _could_ have a noticable detrimental impact on your app's
performance.

There are arguments about simplicity.  It's harder to understand what a
multithreaded program is doing.  It's harder to debug a multithreaded
program.  It's very, very hard to unit test a multithreaded program.  This
is probably the compelling argument to try to avoid threads.

>>Because most other event loops are very bad at managing events. :)  If you
>>want reasonable network performance, you need a good network event loop to
>>be in control.
>
>Don't you think using basic sockets (easy to code in Python) to make the 
>network connection from a client to a server is more efficient (considering 
>the time spent to do it or the complexity of the code) and more easy to keep 
>in a project ?

That might be nice.  However, almost without exception, the network code I
read which does not use Twisted is buggy in the most trivial ways.  It is
rare for it to take more than a cursory glance to notice critical bugs
(the sort which will result in data being lost).  Of course, this doesn't
mean that all network code written without Twisted is fatally flawed, but
it does give me a reasonable basis to assume that it will have issues. :)

Twisted's APIs aren't just easier to use correctly than the BSD socket APIs,
they're also consistent across platforms.  Are you sure you know the BSD
APIs well enough to write some that is correct on Linux and on Windows?
(Let alone on OS X or FreeBSD)  Even if you are, would you rather spend your
time writing the error handling logic for each of these platforms or adding
features to your game?

Twisted may seems to be harder than the socket module.  It probably does
have a higher up-front cost.  However, in the long run, I think that you'll
save yourself a lot of time using it rather than using sockets directly.

You also get the advantages which the structure Twisted attempts to impose
on your application confers.  For example, protocol/transport separation
means that you can unit test your protocol implementation very easily.  And
that's assuming you even need to implement your own protocol, rather than
using one of the protocols Twisted already includes an implementation of.

You also leave open the possibility of easily taking advantage of some other
Twisted features which don't seem useful now but which you may benefit from
later in development.

Hope this helps,

Jean-Paul



From broehl at gmail.com  Fri Feb 15 10:31:14 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 10:31:14 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>
References: <47B45F0E.6030307@student.ecp.fr>
	<1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>
Message-ID: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>

On Thu, Feb 14, 2008 at 1:30 PM, Bernie Roehl <broehl at gmail.com> wrote:

> I'm also wondering what would be the advantages of using a coiterator...?


As an experiment, I tried switching to using a coiterator.  I got a 30%
increase in framerate!

My code now looks like this:

class RendererIterator:  # used if usingCoiterator is True
    def __iter__(self):
        return self
    def next(self):
        ogre.WindowEventUtilities.messagePump()
        root.renderOneFrame()

from twisted.internet.task import coiterate

renderSystem._initRenderTargets()
root.clearEventTimes()
coiterate(RendererIterator())
reactor.run()

Seems to work okay, but haven't tested it extensively.

Any Twisted-gurus have any comments/suggestions/cautions?

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080215/8ada9d37/attachment.htm 

From exarkun at divmod.com  Fri Feb 15 10:51:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 15 Feb 2008 10:51:27 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
Message-ID: <20080215155127.6859.558468479.divmod.quotient.9857@ohm>

On Fri, 15 Feb 2008 10:31:14 -0500, Bernie Roehl <broehl at gmail.com> wrote:
>On Thu, Feb 14, 2008 at 1:30 PM, Bernie Roehl <broehl at gmail.com> wrote:
>
>> I'm also wondering what would be the advantages of using a coiterator...?
>
>As an experiment, I tried switching to using a coiterator.  I got a 30%
>increase in framerate!

Hmmm. :)

>
>My code now looks like this:
>
>class RendererIterator:  # used if usingCoiterator is True
>    def __iter__(self):
>        return self
>    def next(self):
>        ogre.WindowEventUtilities.messagePump()
>        root.renderOneFrame()
>
>from twisted.internet.task import coiterate
>
>renderSystem._initRenderTargets()
>root.clearEventTimes()
>coiterate(RendererIterator())
>reactor.run()
>
>Seems to work okay, but haven't tested it extensively.
>
>Any Twisted-gurus have any comments/suggestions/cautions?
>

There shouldn't really be any performance difference between using
coiterate and using LoopingCall.  The significant behavioral difference
is that coiterate will call your code (RendererIterator.next in this
case) as fast as it can (with some constraints).  LoopingCall will call
your code no faster than you specify.

So my guess is that the 30% increase in FPS is because your system is
capable of doing that much additional work above what you asked to do
when you used LoopingCall.  If you make a corresponding decrease in the
interval you use with LoopingCall, do you not see any increase in FPS?
If not, then you may be getting a bit of extra performance from coiterate
from its behavior of sometimes calling your code multiple times without
letting the reactor run.  It will do this if it notices your code runs
very quickly and so decides that it can afford to call it again before
giving control back to the reactor to let network events be processed.
This may give you a somewhat unevent frame rate, as compared to LoopingCall,
but that might be suitable for your application.

Jean-Paul



From broehl at gmail.com  Fri Feb 15 11:09:07 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 11:09:07 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080215155127.6859.558468479.divmod.quotient.9857@ohm>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
Message-ID: <1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>

On Fri, Feb 15, 2008 at 10:51 AM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 15 Feb 2008 10:31:14 -0500, Bernie Roehl <broehl at gmail.com> wrote:
> >As an experiment, I tried switching to using a coiterator.  I got a 30%
> >increase in framerate!
>
> Hmmm. :)


Hmmm indeed!


> There shouldn't really be any performance difference between using
> coiterate and using LoopingCall.  The significant behavioral difference
> is that coiterate will call your code (RendererIterator.next in this
> case) as fast as it can (with some constraints).  LoopingCall will call
> your code no faster than you specify.
>
> So my guess is that the 30% increase in FPS is because your system is
> capable of doing that much additional work above what you asked to do
> when you used LoopingCall.  If you make a corresponding decrease in the
> interval you use with LoopingCall, do you not see any increase in FPS?


Well, I was using

            renderTask = task.LoopingCall(renderFrame)
            renderTask.start(0.01, False)

If I change the 0.01 to 0.0, I do indeed get a framerate comparable to using
the coiterator methord.

I wouldn't have thought that waiting ten milliseconds between calls would
make such a substantial difference.

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080215/ef5cc52f/attachment.htm 

From mithrandi at mithrandi.za.net  Fri Feb 15 13:45:20 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 15 Feb 2008 20:45:20 +0200
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
Message-ID: <20080215184520.GA25384@mithrandi.za.net>

* Bernie Roehl <broehl at gmail.com> [2008-02-15 11:09:07 -0500]:

> If I change the 0.01 to 0.0, I do indeed get a framerate comparable to using
> the coiterator methord.
> 
> I wouldn't have thought that waiting ten milliseconds between calls would
> make such a substantial difference.

It limits you to a maximum of 100 frames/sec or so (since there are 100
ten millisecond intervals in a second); what sort of framerates are you
seeing? Also, you should probably pick a number greater than 0, since
there's not much point in rendering more than a certain number of frames
every second -- the exact threshold at which it becomes pointless
depends on a variety of application / environment specific factors,
though.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080215/99699d36/attachment.pgp 

From broehl at gmail.com  Fri Feb 15 14:00:25 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 14:00:25 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080215184520.GA25384@mithrandi.za.net>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
	<20080215184520.GA25384@mithrandi.za.net>
Message-ID: <1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>

On the (relatively low-end) machine I'm running on, I get 33 fps with with
0.01, and 43 fps with 0.0 or with the coiterator.

I'm leaning towards the coiterator approach, since I don't have to worry
about figuring out what value to pass.


On Fri, Feb 15, 2008 at 1:45 PM, Tristan Seligmann <
mithrandi at mithrandi.za.net> wrote:

> * Bernie Roehl <broehl at gmail.com> [2008-02-15 11:09:07 -0500]:
>
> > If I change the 0.01 to 0.0, I do indeed get a framerate comparable to
> using
> > the coiterator methord.
> >
> > I wouldn't have thought that waiting ten milliseconds between calls
> would
> > make such a substantial difference.
>
> It limits you to a maximum of 100 frames/sec or so (since there are 100
> ten millisecond intervals in a second); what sort of framerates are you
> seeing? Also, you should probably pick a number greater than 0, since
> there's not much point in rendering more than a certain number of frames
> every second -- the exact threshold at which it becomes pointless
> depends on a variety of application / environment specific factors,
> though.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.8 (GNU/Linux)
>
> iEYEARECAAYFAke13cAACgkQpNuXDQIV94oMSgCghgH4cj3lwyDsxLHn4lrtygkq
> ic8An1XBicz3/lObeGZkv7OGxVd2Nyqb
> =HJIx
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080215/66d5aa72/attachment.htm 

From zooko at zooko.com  Fri Feb 15 19:03:58 2008
From: zooko at zooko.com (zooko)
Date: Fri, 15 Feb 2008 17:03:58 -0700
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.8
Message-ID: <3A8F57EB-F300-4EE2-845D-0E9F9A3C8AFC@zooko.com>

ANNOUNCING: Allmydata.org "Tahoe" version 0.8

We are pleased to announce the release of version 0.8 of allmydata.org
"Tahoe".

Allmydata.org "Tahoe" is a secure, decentralized, fault-tolerant
filesystem.  All of the source code is available under a Free
Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

This is the successor to Allmydata-Tahoe v0.7, which was released
January 8, 2008 [1].

This release improves performance, diagnostics, and packaging.  This
release of allmydata.org "Tahoe" will form the basis of the next
consumer backup product from Allmydata, Inc. -- http://allmydata.com .


Since v0.7 we've made the following changes:

  * Add a preliminary Microsoft Windows package (ticket #195).

  * Add a preliminary Macintosh package (ticket #182).

  * Display information about peers (ticket #32).

  * Display information about uploads and downloads (ticket #39).

  * Add unit tests and docs for contrib/fuse (ticket #255).

  * Add a preliminary FUSE interface for Macintosh.

  * Update docs, starting with docs/about.html --
    http://allmydata.org/source/tahoe/trunk/docs/about.html .

  * Improve logging, diagnostic tools, statistics, timing measurements
    during upload, etc..

  * Add more measurements of performance:
    http://allmydata.org/trac/tahoe/wiki/Performance .

  * Add an upload helper, with resumption of incomplete uploads and
    short-circuiting of uploads if the file is already present (tickets
    #116, #258, #218).

  * Make upload continue even if some servers disappear during the
    upload process.

  * Add mtime and ctime timestamps to files (ticket #183).

  * Make introduction more efficient by allowing nodes to act as
    clients-only and not publish themselves as servers (ticket #271).

  * Extend the web API to allow programmatic control of mutable files.

  * Fix potential problem that could cause corruption of downloaded
    mutable files if a long series of unlikely coincidences and hacked
    clients occurred (ticket #312).

  * Make file and directory names use unicode.

  * Use SHA-256d instead of SHA-256 for secure hashes.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is new, it is not yet recommended for storage of
highly confidential data nor for valuable data which is not otherwise
backed up. However, it works well in practice, it comes with extensive
unit tests [2], and there are no known security flaws which would
compromise confidentiality or data integrity.  (For a current
description of all known security issues and an overview of Tahoe's
security properties, please see the Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "doc/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
February 15, 2008
Boulder, Colorado, USA


[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=1805
[2] http://allmydata.org/tahoe-figleaf/current/
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=1804
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com




From steve at holdenweb.com  Fri Feb 15 21:39:43 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 15 Feb 2008 21:39:43 -0500
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <20080215142557.6859.1357815474.divmod.quotient.9847@ohm>
References: <47B59B31.4030906@student.ecp.fr>
	<20080215142557.6859.1357815474.divmod.quotient.9847@ohm>
Message-ID: <fp5idi$bkl$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Fri, 15 Feb 2008 15:01:21 +0100, Thomas Boucher 
> <thomas.boucher at student.ecp.fr> wrote:
>> Jean-Paul Calderone a ?crit :
>>> Chris Armstrong's response to the post you refer to is accurate.  
>>> Twisted
>>> APIs are not threadsafe.  In order to call them from a thread other than
>>> the one in which the reactor is running, it is absolutely required 
>>> that you
>>> use reactor.callFromThread.  This is quite simple.  Instead of:
>>>
>>>    proto.sendLine("line")
>>>
>>> Simple do:
>>>
>>>    reactor.callFromThread(proto.sendLine, "line")
>>>
>>> You will have to do this for every call you make to a Twisted API 
>>> (except
>>> for reactor.callFromThread, of course ;).
>>
>> I have just tried this method, and it perfectly works.
>> The twisted reactor is run in another thread and the calls to Twisted 
>> are managed by the callFromThread method. The main advantage I see to 
>> it (excepting the fact that it works) is that it does not require 
>> changes in the way the graphic rendering is done : you do not care 
>> about how python- ogre runs to code the twisted part.
>>> The best solution would be to really integrate the two loops.  I 
>>> don't know
>>> the details of OGRE though, so I can't tell you specifically how to 
>>> do this.
>>> It is tightly dependent on the details of the loops being integrated.
>>
>> What I can't see for the moment is how much better it would be to do 
>> like the other ways delivered in the discussion thread (by Werner, 
>> Bernie an Stefan). These ways consist in running Twisted first and in 
>> letting it manage python-ogre (by doing the rendering frame by frame 
>> with coiteration, or loopingcalls).
>> Is this better than doing separate threads ?
> 
> There are arguments about efficiency.  Using threads has overhead which is
> not present when not using threads.  These arguments are probably not very
> convincing in this case, since you would only have two threads and their
> overhead will be dwarfed by your rendering costs.  You should be aware that
> reactor.callFromThread _does_ have some non-trivial overhead.  Using it for
> each sendLine call _could_ have a noticable detrimental impact on your 
> app's
> performance.
> 
> There are arguments about simplicity.  It's harder to understand what a
> multithreaded program is doing.  It's harder to debug a multithreaded
> program.  It's very, very hard to unit test a multithreaded program.  This
> is probably the compelling argument to try to avoid threads.
> 
>>> Because most other event loops are very bad at managing events. :)  
>>> If you
>>> want reasonable network performance, you need a good network event 
>>> loop to
>>> be in control.
>>
>> Don't you think using basic sockets (easy to code in Python) to make 
>> the network connection from a client to a server is more efficient 
>> (considering the time spent to do it or the complexity of the code) 
>> and more easy to keep in a project ?
> 
> That might be nice.  However, almost without exception, the network code I
> read which does not use Twisted is buggy in the most trivial ways.  It is
> rare for it to take more than a cursory glance to notice critical bugs
> (the sort which will result in data being lost).  Of course, this doesn't
> mean that all network code written without Twisted is fatally flawed, but
> it does give me a reasonable basis to assume that it will have issues. :)
> 
> Twisted's APIs aren't just easier to use correctly than the BSD socket 
> APIs,
> they're also consistent across platforms.  Are you sure you know the BSD
> APIs well enough to write some that is correct on Linux and on Windows?
> (Let alone on OS X or FreeBSD)  Even if you are, would you rather spend 
> your
> time writing the error handling logic for each of these platforms or adding
> features to your game?
> 
> Twisted may seems to be harder than the socket module.  It probably does
> have a higher up-front cost.  However, in the long run, I think that you'll
> save yourself a lot of time using it rather than using sockets directly.
> 
> You also get the advantages which the structure Twisted attempts to impose
> on your application confers.  For example, protocol/transport separation
> means that you can unit test your protocol implementation very easily.  And
> that's assuming you even need to implement your own protocol, rather than
> using one of the protocols Twisted already includes an implementation of.
> 
> You also leave open the possibility of easily taking advantage of some 
> other
> Twisted features which don't seem useful now but which you may benefit from
> later in development.
> 
> Hope this helps,
> 

It certainly lists a goodly number of reasons why people should strongly 
consider using Twisted, and there are a goodly number one doesn't come 
across every day.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Fri Feb 15 21:45:03 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 15 Feb 2008 21:45:03 -0500
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>	<20080215184520.GA25384@mithrandi.za.net>
	<1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
Message-ID: <fp5inh$bkr$1@ger.gmane.org>

That's consistent with a frame rendering time of roughly 23 ms. Waiting 
10 ms after each rendering would indeed lower the rate by about 10 fps.

regards
  Steve

Bernie Roehl wrote:
> On the (relatively low-end) machine I'm running on, I get 33 fps with 
> with 0.01, and 43 fps with 0.0 or with the coiterator.
> 
> I'm leaning towards the coiterator approach, since I don't have to worry 
> about figuring out what value to pass.
> 
> 
> On Fri, Feb 15, 2008 at 1:45 PM, Tristan Seligmann 
> <mithrandi at mithrandi.za.net <mailto:mithrandi at mithrandi.za.net>> wrote:
> 
>     * Bernie Roehl <broehl at gmail.com <mailto:broehl at gmail.com>>
>     [2008-02-15 11:09:07 -0500]:
> 
>      > If I change the 0.01 to 0.0, I do indeed get a framerate
>     comparable to using
>      > the coiterator methord.
>      >
>      > I wouldn't have thought that waiting ten milliseconds between
>     calls would
>      > make such a substantial difference.
> 
>     It limits you to a maximum of 100 frames/sec or so (since there are 100
>     ten millisecond intervals in a second); what sort of framerates are you
>     seeing? Also, you should probably pick a number greater than 0, since
>     there's not much point in rendering more than a certain number of frames
>     every second -- the exact threshold at which it becomes pointless
>     depends on a variety of application / environment specific factors,
>     though.
>     --
>     mithrandi, i Ainil en-Balandor, a faer Ambar
> 
>     -----BEGIN PGP SIGNATURE-----
>     Version: GnuPG v2.0.8 (GNU/Linux)
> 
>     iEYEARECAAYFAke13cAACgkQpNuXDQIV94oMSgCghgH4cj3lwyDsxLHn4lrtygkq
>     ic8An1XBicz3/lObeGZkv7OGxVd2Nyqb
>     =HJIx
>     -----END PGP SIGNATURE-----
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> Bernie Roehl
> Mail: broehl at gmail.com <mailto:broehl at gmail.com>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mithrandi at mithrandi.za.net  Fri Feb 15 22:15:48 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 16 Feb 2008 05:15:48 +0200
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <fp5inh$bkr$1@ger.gmane.org>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
	<20080215184520.GA25384@mithrandi.za.net>
	<1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
	<fp5inh$bkr$1@ger.gmane.org>
Message-ID: <20080216031548.GA2652@mithrandi.za.net>

* Steve Holden <steve at holdenweb.com> [2008-02-15 21:45:03 -0500]:

> That's consistent with a frame rendering time of roughly 23 ms. Waiting  
> 10 ms after each rendering would indeed lower the rate by about 10 fps.

But LoopingCall tries to schedule the next call for N seconds after the
start of the previous call, not the end of the previous call, so that
doesn't quite explain it. (Unless I'm misunderstanding something...)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080216/bcb7d191/attachment.pgp 

From exarkun at twistedmatrix.com  Sun Feb 17 00:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Feb 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1203224706.71.1031780076@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080217/d583ff04/attachment.htm 

From mg at daimi.au.dk  Mon Feb 18 05:22:23 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 18 Feb 2008 11:22:23 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87lk5qq9ga.fsf@hbox.dyndns.org>
	<20080212203612.6859.870993561.divmod.quotient.8613@ohm>
Message-ID: <w1b1w7ak1i8.fsf@thyra03.daimi.au.dk>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>>I initially stayed away from pyOpenSSL since
>>
>>* it seems dead: last release was in 2004 with Windows installers
>>  for Python 2.1. This message seems to indicate that a live form
>>  exists: http://tinyurl.com/3b4yeq
>
> There isn't much, if any, development happening on PyOpenSSL.
> Partially, this is because it does enough as it is now (although
> there are some features it could provide which would be nice).
> Partially it's because the original author has disappeared into the
> void.

Okay, thanks for the explaination.

>> [snip licensing issues I don't have any clue about]
>>
>>* The GnuTLS has a nice (maybe biased) comparison page:
>>
>>    http://www.gnu.org/software/gnutls/comparison.html
>>
>
> GnuTLS support in Twisted might be interesting. I have heard rumors
> that OpenSSL is a higher quality implementation than GnuTLS, but I
> don't have any first-hand experience; it's possible this is just
> fud.

Neither do I... :-)

> There's no reason Twisted couldn't support both of these libraries
> and use whichever is available (or allow explicit selection). I
> think there's even a ticket open in the tracker for this. But since
> PyOpenSSL basically works, the motivation to work on this might be
> missing for a lot of people.

Right, I can definitely understand that!

>>Is there a cross-platform GPL compatible library out there that will
>>give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?
>
> There's also TLSLite, which includes Twisted support. I don't have
> any first-hand experience with it either, though.
>
> There's also M2Crypto, but since that's just another OpenSSL
> wrapper, it probably doesn't take care of your license concerns.

Thanks for the pointers! I'll look more into this when I (or more
likely, someone else) really need SSL/TLS support on Windows.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From incollu at cs.unibo.it  Mon Feb 18 05:29:41 2008
From: incollu at cs.unibo.it (Michele Incollu)
Date: Mon, 18 Feb 2008 11:29:41 +0100
Subject: [Twisted-Python] ftp upload resume
Message-ID: <47B95E15.8040501@cs.unibo.it>

/



In the Python ftplib.FTP class's retrbinary() method you can pass a file
/>/ offset using the 'rest' arg (in order to resume a partial download).
/>/ 
/>/ Please could someone advise how to do a similar thing using the Twisted
/>/ FTPClient class? 


/Is it possible to enable support for the REST command in a Twisted FTP server, (in order to resume a partial upload) ?

Thanks,

Michele




From incollu at cs.unibo.it  Mon Feb 18 05:43:49 2008
From: incollu at cs.unibo.it (Michele Incollu)
Date: Mon, 18 Feb 2008 11:43:49 +0100
Subject: [Twisted-Python] ftp upload resume
Message-ID: <47B96165.3070908@cs.unibo.it>


Is it possible to enable support for the REST command in a Twisted FTP 
server, (in order to resume a partial upload) ?

Thanks,

Michele


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mailing_lists at evotex.ch  Mon Feb 18 11:04:59 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 18 Feb 2008 17:04:59 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
Message-ID: <47B9ACAB.1060102@evotex.ch>

Hello,

I am trying to write a Server and Client that use an XML protocol. I saw 
that there is a XmlStream class and tried to use it, but was unable to. 
I saw one small example for a client (http://ralphm.net/blog/2005/10), 
but it raises some questions.

First of all, it seams to work compleatly differently that the other 
server/client examples.

I don't understand why there is a need to add observers, and what they 
are used for. I can't get any of these to work (on either side, client 
or server):

    def connectionMade(self):
        print 'Connected!'

    def dataReceived(self, data):
        print data

    def onDocumentStart(self, rootElement):
        print "Message start : ", rootElement

    def onElement(self, element):
        print "current element : ", element

    def onDocumentEnd(self, rootElement):
        print "Message end : ", rootElement

I'm kind of lost :-(
I'm new to Twisted and I though that I understood how it works (read 
howtos, turorials, etc, but this one doesn't seam like the others. Can 
someone please point me to an example, I searched google but no luck. 
All I need is a simple client-server xml echo example or a better 
understanding of how it works and how it differs from the other echo 
examples. Thank you,

Gabriel

Thank you



From p.mayers at imperial.ac.uk  Mon Feb 18 11:34:40 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 18 Feb 2008 16:34:40 +0000
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
In-Reply-To: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
Message-ID: <47B9B3A0.3050909@imperial.ac.uk>

> 
> There's also TLSLite, which includes Twisted support.  I don't have any
> first-hand experience with it either, though.

TLSLite is very very nice. I've used it to write an EAP-supporting 
radius server (for debugging only, real people should use FreeRadius) 
incidentally in Twisted.

In particular I find the TLSLite/Twisted integration nice because of the 
protocol wrapping approach (rather than magic methods and __class__ 
fiddles on the transport). The TLSConnection objects also make it quite 
a bit easier to get at some of the TLS-related items. The fallback to 
pure-python can be handy in a pinch too.

It's somewhat a shame it's public domain rather than an explicit license.



From mg at daimi.au.dk  Mon Feb 18 15:19:03 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 18 Feb 2008 21:19:03 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk>
Message-ID: <87mypyqaq0.fsf@hbox.dyndns.org>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

>> There's also TLSLite, which includes Twisted support. I don't have
>> any first-hand experience with it either, though.
>
> TLSLite is very very nice. I've used it to write an EAP-supporting
> radius server (for debugging only, real people should use FreeRadius)
> incidentally in Twisted.
>
> In particular I find the TLSLite/Twisted integration nice because of
> the protocol wrapping approach (rather than magic methods and
> __class__ fiddles on the transport). The TLSConnection objects also
> make it quite a bit easier to get at some of the TLS-related items.
> The fallback to pure-python can be handy in a pinch too.

I have just looked at it and it does look nice! Especially that it
supports so many backends which should make it possible to find a good
cross-platform one my project can use.

> It's somewhat a shame it's public domain rather than an explicit
> license.

Personally, then as long as people use the GPL or something with less
restrictions, then I am okay with it!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080218/efce9aea/attachment.pgp 

From zooko at zooko.com  Mon Feb 18 17:26:01 2008
From: zooko at zooko.com (zooko)
Date: Mon, 18 Feb 2008 15:26:01 -0700
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
In-Reply-To: <87mypyqaq0.fsf@hbox.dyndns.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
Message-ID: <86646156-8E16-4D40-AE55-DAA9E57E0B35@zooko.com>

You might be interested in this trac ticket:

http://allmydata.org/trac/tahoe/ticket/11 -- "I don't like pyopenssl"

Regards,

Zooko




From xavier at sydesy.com  Mon Feb 18 18:04:33 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Tue, 19 Feb 2008 00:04:33 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <4797864A.6070802@campana.vi.it>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
	<4797864A.6070802@campana.vi.it>
Message-ID: <2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>

> > right ? Did Ottavio Campana manage to have something working and did
> > he publish the result of his modifications ?
>
> Yes, I got something useful, it's going to be deployed soon but
> eventually I didn't come out with acls. Even though I have to say
> ldaptor fits well in my project and for some aspects I'm happier than
> with openldap.

Congrat !
Are you going to release the ldap code with an open source license ?

I'm in discussion with Tommi about adding ACLs, would you be
interested ? Beside, he told me ldaptor should be updated to work with
the latest on twisted, something you've done already ?

> I have a web application I wrote with twisted web. This application
> saves data in a sqlite file. Whenever the user modifies it from the web,
> the application updates also the files used by ldaptor, since what I
> need is only to export them with ldap.

Yes, more or less what I want to do (based on mysql instead of sqlite).

What is the ldap client you use ? What is the ldap schema (my goal is
to read it from a mail client)

> It does not have acls, but I managed to get something similar by
> patching how the ldap server works. Moreover, to prevent corruption I
> modified how operations different from search behave.

> What do you want to do?

Quite simply provide LDAP access (bind, search, unbind) on the
contacts in a CRM (civicrm). I'm working for NGOs, and that's the
easiest I found to provide access to the address book from within
outlook/thunderbird/whatever mail client.

> About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly
> everything I needed, give al look also to ldaptor/ldiftree.py to see how
> not to store everything in memory but in a filesystem. Also give a look
> at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac

Thanks ! Why didn't you try fetching directly from the db instead of
putting it in an intermediate file ?

> I hope it is enough, I've been able to understand how it works from
> these files.

I hope too.

> Bye,

Sorry for the delay, it took me a while to get in touch with tommi and
move forward on how to work on that together.


What is your application ? Is this something public ?

X+



From c2k_list at gmx.de  Mon Feb 18 18:42:53 2008
From: c2k_list at gmx.de (my list)
Date: Tue, 19 Feb 2008 00:42:53 +0100
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
Message-ID: <20080218234253.150210@gmx.net>

Hello,
I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:

"RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012." 

I installed python2.5 from source next to the standard debian python2.4 into /usr/local/lib/python2.5, redirect the link /usr/bin/python to /usr/local/bin/python2.5. Thats working, but when I try to import twisted with

"import twisted"

I receive the error above. Importing zope works just fine. All I found on the net was that there might be a problem with the two installations of python next to each other. But if so, how can I get rid of python2.4, because I need python2.5. Is there no chance to use both versions parallel?

The Version of the zopeinterface is 3.3.1-5, python is 2.4.4-7 and 2.5.1-6, twisted is 2.5.0-2.

I am fairly new to Debain and Python and I am really stuck. I hope someone can help me. I would appreciate it big time!

Regards,
Torsten
-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free



From screwtape at froup.com  Mon Feb 18 19:30:31 2008
From: screwtape at froup.com (Tim Allen)
Date: Tue, 19 Feb 2008 11:30:31 +1100
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
References: <20080218234253.150210@gmx.net>
Message-ID: <20080219003031.GO11572@thristian.org>

On Tue, Feb 19, 2008 at 12:42:53AM +0100, my list wrote:
> I installed python2.5 from source next to the standard debian
> python2.4 into /usr/local/lib/python2.5, redirect the link
> /usr/bin/python to /usr/local/bin/python2.5. 

Unlike Fedora or RedHat, Debian does not require one particular version
of Python with any given version of the distribution - you don't have to
compile your own.

You should be able to "sudo aptitude install python2.5" and wind up with
/usr/bin/python2.5 along with /usr/bin/python2.4. If you're using the
Debian-packaged versions of Twisted, they should automatically be
available from Python 2.5 as well (no mucking around with installing
special python2.5-twisted packages).



From exarkun at divmod.com  Mon Feb 18 20:29:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 18 Feb 2008 20:29:57 -0500
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
Message-ID: <20080219012957.6859.1868028742.divmod.quotient.10619@ohm>

On Tue, 19 Feb 2008 00:42:53 +0100, my list <c2k_list at gmx.de> wrote:
>Hello,
>I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:
>
>"RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012."

This is only a warning.  It'd probably be good to fix, but in practice
I doubt it will cause any issues.

Are you having problems other than this running something?  If so, the
real issue is most likely somewhere else.

Jean-Paul



From mg at daimi.au.dk  Tue Feb 19 02:36:18 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 19 Feb 2008 08:36:18 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
	<86646156-8E16-4D40-AE55-DAA9E57E0B35@zooko.com>
Message-ID: <w1blk5hiej1.fsf@thyra03.daimi.au.dk>

zooko <zooko at zooko.com> writes:

> You might be interested in this trac ticket:
>
> http://allmydata.org/trac/tahoe/ticket/11 -- "I don't like pyopenssl"

Thank you, lots of interesting links there too. I'm surpriced to see
so many different cryptographic libraries in Python!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From eburus at gmail.com  Tue Feb 19 03:20:55 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 19 Feb 2008 11:20:55 +0300
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
References: <20080218234253.150210@gmx.net>
Message-ID: <47BA9167.5090709@gmail.com>

Hi,
remove all zope.interface *.pyc files from the python's site-package
directory.
Rerun application, if it didn't work reinstall zope.interface from source.
Where is a C module and compilation are different for the PyObjects in
the 2.4 and 2.5 versions.

my list wrote:
> Hello,
> I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:
>
> "RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012." 
>
> I installed python2.5 from source next to the standard debian python2.4 into /usr/local/lib/python2.5, redirect the link /usr/bin/python to /usr/local/bin/python2.5. Thats working, but when I try to import twisted with
>
> "import twisted"
>
> I receive the error above. Importing zope works just fine. All I found on the net was that there might be a problem with the two installations of python next to each other. But if so, how can I get rid of python2.4, because I need python2.5. Is there no chance to use both versions parallel?
>
> The Version of the zopeinterface is 3.3.1-5, python is 2.4.4-7 and 2.5.1-6, twisted is 2.5.0-2.
>
> I am fairly new to Debain and Python and I am really stuck. I hope someone can help me. I would appreciate it big time!
>
> Regards,
> Torsten
>   

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080219/0ddd5617/attachment.htm 

From vvangelovski at gmail.com  Tue Feb 19 04:17:04 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 19 Feb 2008 10:17:04 +0100
Subject: [Twisted-Python] http proxy
Message-ID: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>

I'm trying to set up a http proxy which will write redirects to the
client if it requests certain uri but work as a normal proxy for
others. Can this be done with the higher level proxy classes, if so,
how?



From mailing_lists at evotex.ch  Tue Feb 19 06:29:38 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 19 Feb 2008 12:29:38 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <47B9ACAB.1060102@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>
Message-ID: <47BABDA2.10105@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I am trying to write a Server and Client that use an XML protocol. I 
> saw that there is a XmlStream class and tried to use it, but was 
> unable to. I saw one small example for a client 
> (http://ralphm.net/blog/2005/10), but it raises some questions.
>
> First of all, it seams to work compleatly differently that the other 
> server/client examples.
>
> I don't understand why there is a need to add observers, and what they 
> are used for. I can't get any of these to work (on either side, client 
> or server):
>
>    def connectionMade(self):
>        print 'Connected!'
>
>    def dataReceived(self, data):
>        print data
>
>    def onDocumentStart(self, rootElement):
>        print "Message start : ", rootElement
>
>    def onElement(self, element):
>        print "current element : ", element
>
>    def onDocumentEnd(self, rootElement):
>        print "Message end : ", rootElement
>
> I'm kind of lost :-(
> I'm new to Twisted and I though that I understood how it works (read 
> howtos, turorials, etc, but this one doesn't seam like the others. Can 
> someone please point me to an example, I searched google but no luck. 
> All I need is a simple client-server xml echo example or a better 
> understanding of how it works and how it differs from the other echo 
> examples. Thank you,
>
> Gabriel
>
> Thank you
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Ok, I've got some code sort of working, if I use the following 
XPathQuery string : "/*" on the following XML string :

<?xml version="1.0" encoding="utf-8"?>
<test><feed name="test">toto</feed></test>

the addObserver works ( xs.addObserver("/*", self.onTest) )
 but if I try the following :


xs.addObserver("/test/feed/@name", self.onTest)
or
xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)

I get the following :

<......>
  File 
"/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py", line 
104, in onElement
    self.dispatch(element)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py", 
line 232, in dispatch
    if query.matches(object):
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xpath.py", 
line 238, in matches
    return self.baseLocation.matches(elem)
exceptions.AttributeError: 'NoneType' object has no attribute 'matches'

Does anyone understand why?



From k_r_a_j_kumar at yahoo.co.in  Tue Feb 19 08:44:26 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 19 Feb 2008 19:14:26 +0530 (IST)
Subject: [Twisted-Python] save an received file
Message-ID: <743981.95061.qm@web8711.mail.in.yahoo.com>

Hi all,
My application receiving a file through a socket.
How can i save that file to my own folder or path.
Should i create an object of that?
How to check whether i received complete file or not?
and what about the original copy of the file which i received?
should i destroy it?
Thanks in advance.




      Chat on a cool, new interface. No download required. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080219/91631c2c/attachment.htm 

From exarkun at divmod.com  Tue Feb 19 08:54:59 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 19 Feb 2008 08:54:59 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <47BABDA2.10105@evotex.ch>
Message-ID: <20080219135459.6859.195113362.divmod.quotient.10826@ohm>

On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Ok, I've got some code sort of working, if I use the following XPathQuery 
>string : "/*" on the following XML string :
>
><?xml version="1.0" encoding="utf-8"?>
><test><feed name="test">toto</feed></test>
>
>the addObserver works ( xs.addObserver("/*", self.onTest) )
>but if I try the following :
>
>
>xs.addObserver("/test/feed/@name", self.onTest)
>or
>xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>

I don't think the xpath implementation in xish is complete.  You may
have found a bug or a case it doesn't handle.

Jean-Paul



From exarkun at divmod.com  Tue Feb 19 08:56:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 19 Feb 2008 08:56:43 -0500
Subject: [Twisted-Python] save an received file
In-Reply-To: <743981.95061.qm@web8711.mail.in.yahoo.com>
Message-ID: <20080219135643.6859.1143620165.divmod.quotient.10827@ohm>

On Tue, 19 Feb 2008 19:14:26 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi all,
>My application receiving a file through a socket.
>How can i save that file to my own folder or path.
>Should i create an object of that?
>How to check whether i received complete file or not?
>and what about the original copy of the file which i received?
>should i destroy it?
>Thanks in advance.
>

The Python tutorial covers files i/o:

  http://www.python.org/doc/tut/node9.html#SECTION009200000000000000000

If that's not what you're asking about, you need to be more specific.

Jean-Paul



From christopher.zorn at gmail.com  Tue Feb 19 09:11:53 2008
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Tue, 19 Feb 2008 09:11:53 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <20080219135459.6859.195113362.divmod.quotient.10826@ohm>
References: <47BABDA2.10105@evotex.ch>
	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
Message-ID: <149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>

On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti <
> mailing_lists at evotex.ch> wrote:
> > [snip]
> >Ok, I've got some code sort of working, if I use the following XPathQuery
> >string : "/*" on the following XML string :
> >
> ><?xml version="1.0" encoding="utf-8"?>
> ><test><feed name="test">toto</feed></test>
> >
> >the addObserver works ( xs.addObserver("/*", self.onTest) )
> >but if I try the following :
> >
> >
> >xs.addObserver("/test/feed/@name", self.onTest)
> >or
> >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
> >
>
> I don't think the xpath implementation in xish is complete.  You may
> have found a bug or a case it doesn't handle.
>

It is not complete. But if you would like to find the stanza 'feed' with the
attribute 'name' then it would like like

xs.addObserver("/test/feed[@name]", self.onTest)




>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080219/17b11bca/attachment.htm 

From mailing_lists at evotex.ch  Tue Feb 19 09:48:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 19 Feb 2008 15:48:46 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
References: <47BABDA2.10105@evotex.ch>	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
	<149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
Message-ID: <47BAEC4E.90707@evotex.ch>

Christopher Zorn wrote:
>
>
> On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com 
> <mailto:exarkun at divmod.com>> wrote:
>
>     On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti
>     <mailing_lists at evotex.ch <mailto:mailing_lists at evotex.ch>> wrote:
>     > [snip]
>     >Ok, I've got some code sort of working, if I use the following
>     XPathQuery
>     >string : "/*" on the following XML string :
>     >
>     ><?xml version="1.0" encoding="utf-8"?>
>     ><test><feed name="test">toto</feed></test>
>     >
>     >the addObserver works ( xs.addObserver("/*", self.onTest) )
>     >but if I try the following :
>     >
>     >
>     >xs.addObserver("/test/feed/@name", self.onTest)
>     >or
>     >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>     >
>
>     I don't think the xpath implementation in xish is complete.  You may
>     have found a bug or a case it doesn't handle.
>
>
> It is not complete. But if you would like to find the stanza 'feed' 
> with the attribute 'name' then it would like like
>
> xs.addObserver("/test/feed[@name]", self.onTest)
>
>
Ok, thanks (Jean-Paul & Christopher), that helped, I though I was doing 
something wrong :-). So there is no way of directly getting the stanza's 
attribute's value using the xpath implementation in xish? I can use the 
getAttribute() method but "pure" xpath would be nicer.

Gabriel
>  
>
>
>     Jean-Paul
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From ottavio at campana.vi.it  Tue Feb 19 11:29:35 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 19 Feb 2008 17:29:35 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>	<4797864A.6070802@campana.vi.it>
	<2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>
Message-ID: <47BB03EF.4040202@campana.vi.it>

xavier dutoit ha scritto:
>>> right ? Did Ottavio Campana manage to have something working and did
>>> he publish the result of his modifications ?
>> Yes, I got something useful, it's going to be deployed soon but
>> eventually I didn't come out with acls. Even though I have to say
>> ldaptor fits well in my project and for some aspects I'm happier than
>> with openldap.
> 
> Congrat !
> Are you going to release the ldap code with an open source license ?

well I think I think I'm releasing it opensource. Two days ago I 
discovered a tremendous problem in the software due to utf-8 encoding 
required by sqlite...

I'm trying to fix it, but it's not fixed yet, so I'd like to fix it 
before releasing.

 > I'm in discussion with Tommi about adding ACLs, would you be
 > interested ? Beside, he told me ldaptor should be updated to work with
 > the latest on twisted, something you've done already ?

well, I'm sorry but I don't think I'll have time. I just finished my 
doctorate, so I'm looking for a postdoc and I do not know what I'm doing 
(by the way, if you are aware of some positions... ;-) )

>> I have a web application I wrote with twisted web. This application
>> saves data in a sqlite file. Whenever the user modifies it from the web,
>> the application updates also the files used by ldaptor, since what I
>> need is only to export them with ldap.
> 
> Yes, more or less what I want to do (based on mysql instead of sqlite).
> 
> What is the ldap client you use ? What is the ldap schema (my goal is
> to read it from a mail client)

I use sqlite instead of mysql because the software has to run on an 
embedded system. I use inetorgperson, since it works with all clients, 
as far as I know (and have tested).

>> It does not have acls, but I managed to get something similar by
>> patching how the ldap server works. Moreover, to prevent corruption I
>> modified how operations different from search behave.
> 
>> What do you want to do?
> 
> Quite simply provide LDAP access (bind, search, unbind) on the
> contacts in a CRM (civicrm). I'm working for NGOs, and that's the
> easiest I found to provide access to the address book from within
> outlook/thunderbird/whatever mail client.

I do not know this crm...

>> About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly
>> everything I needed, give al look also to ldaptor/ldiftree.py to see how
>> not to store everything in memory but in a filesystem. Also give a look
>> at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac
> 
> Thanks ! Why didn't you try fetching directly from the db instead of
> putting it in an intermediate file ?

that was the easiest solution. But if you have patches... :-)

> What is your application ? Is this something public ?

it is (wants to be in the future) a front end to asterisk. By now it has 
an addressbook, which can be accessed with a browser to execute calls or 
with ldap protocol.

I'm working right now to understand how to fix the encoding problem, 
please email me next week, when I hope I'll have fixed it.

Bye

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080219/bff778fd/attachment.pgp 

From k_r_a_j_kumar at yahoo.co.in  Tue Feb 19 23:41:06 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Wed, 20 Feb 2008 10:11:06 +0530 (IST)
Subject: [Twisted-Python]need clarification on "save an received file"
Message-ID: <643592.60007.qm@web8707.mail.in.yahoo.com>

I need one clarification on this,
my appplication is of  server-client application, so when server receives a file through socket, will that file will be saved in  /temp/workfile ?
or  should  i use a socket handler with file object to receive that file ?

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Tuesday, 19 February, 2008 7:26:43 PM
Subject: Re: [Twisted-Python] save an received file

On 
Tue, 
19 
Feb 
2008 
19:14:26 
+0530 
(IST), 
Raj 
kumar 
<k_r_a_j_kumar at yahoo.co.in> 
wrote:
>Hi 
all,
>My 
application 
receiving 
a 
file 
through 
a 
socket.
>How 
can 
i 
save 
that 
file 
to 
my 
own 
folder 
or 
path.
>Should 
i 
create 
an 
object 
of 
that?
>How 
to 
check 
whether 
i 
received 
complete 
file 
or 
not?
>and 
what 
about 
the 
original 
copy 
of 
the 
file 
which 
i 
received?
>should 
i 
destroy 
it?
>Thanks 
in 
advance.
>

The 
Python 
tutorial 
covers 
files 
i/o:

  
http://www.python.org/doc/tut/node9.html#SECTION009200000000000000000

If 
that's 
not 
what 
you're 
asking 
about, 
you 
need 
to 
be 
more 
specific.

Jean-Paul

_______________________________________________
Twisted-Python 
mailing 
list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






      Get your domain and website for less than Rs.100/month*. Go to http://in.business.yahoo.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080220/dc264517/attachment.htm 

From drew.smathers at gmail.com  Wed Feb 20 00:56:07 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 20 Feb 2008 00:56:07 -0500
Subject: [Twisted-Python]need clarification on "save an received file"
In-Reply-To: <643592.60007.qm@web8707.mail.in.yahoo.com>
References: <643592.60007.qm@web8707.mail.in.yahoo.com>
Message-ID: <368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>

On Feb 19, 2008 11:41 PM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:

> I need one clarification on this,
> my appplication is of  server-client application, so when server receives
> a file through socket, will that file will be saved in  /temp/workfile ?
> or  should  i use a socket handler with file object to receive that file ?
>

I would try to help you my friend, but I have no earthly idea what you're
talking about.  /temp/workfile?  So far as I know, sockets receive bytes,
not files. Does that help?? Anyhow, if you provided some sample code showing
what you're trying to do, someone might be able to help you.  It would also
be apropriate if your question actually had something to do with Twisted.

Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080220/412c5885/attachment.htm 

From matthew.reg at gmail.com  Wed Feb 20 01:44:53 2008
From: matthew.reg at gmail.com (Matthew Zhang)
Date: Wed, 20 Feb 2008 14:44:53 +0800
Subject: [Twisted-Python] Question about Twistd and PYTHONPATH
In-Reply-To: <78517.52248.qm@web34209.mail.mud.yahoo.com>
References: <78517.52248.qm@web34209.mail.mud.yahoo.com>
Message-ID: <2f94b43d0802192244q131cfd3fv33ff4f7141e504ef@mail.gmail.com>

I guess your Reporter class is in another module.
I ran into the same situation a few days ago and finally made it work like
this:

import sys
sys.path.append('.')

from task import Task

Matthew

On Feb 10, 2008 4:46 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:

> Hello Folks:
>
> This is my first time using twistd. I have daemonized
> a server by creating a TAC file. When I execute the
> server (first I ran it out of its development
> directory),
>
> twistd -y server.tac
>
> I get:
>
> no module named Reporter (Reporter is a class)
>
> when I run a non-daemonized version of the same
> server, I have no problem.
>
> I checked my PYTHONPATH. It seems to be properly set.
> I tried setting the path using sys.path. No go.
>
> Is there embarassingly simple that I am missing? Is
> there something I should be overriding?
>
> Cheers,
> Andrew
>
>
>
>
>  ____________________________________________________________________________________
> Never miss a thing.  Make Yahoo your home page.
> http://www.yahoo.com/r/hs
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080220/89546df4/attachment.htm 

From mailing_lists at evotex.ch  Wed Feb 20 04:36:19 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 10:36:19 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BABDA2.10105@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch> <47BABDA2.10105@evotex.ch>
Message-ID: <47BBF493.4090708@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> I am trying to write a Server and Client that use an XML protocol. I 
>> saw that there is a XmlStream class and tried to use it, but was 
>> unable to. I saw one small example for a client 
>> (http://ralphm.net/blog/2005/10), but it raises some questions.
>>
>> First of all, it seams to work compleatly differently that the other 
>> server/client examples.
>>
>> I don't understand why there is a need to add observers, and what 
>> they are used for. I can't get any of these to work (on either side, 
>> client or server):
>>
>>    def connectionMade(self):
>>        print 'Connected!'
>>
>>    def dataReceived(self, data):
>>        print data
>>
>>    def onDocumentStart(self, rootElement):
>>        print "Message start : ", rootElement
>>
>>    def onElement(self, element):
>>        print "current element : ", element
>>
>>    def onDocumentEnd(self, rootElement):
>>        print "Message end : ", rootElement
>>
>> I'm kind of lost :-(
>> I'm new to Twisted and I though that I understood how it works (read 
>> howtos, turorials, etc, but this one doesn't seam like the others. 
>> Can someone please point me to an example, I searched google but no 
>> luck. All I need is a simple client-server xml echo example or a 
>> better understanding of how it works and how it differs from the 
>> other echo examples. Thank you,
>>
>> Gabriel
>>
>> Thank you
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Ok, I've got some code sort of working, if I use the following 
> XPathQuery string : "/*" on the following XML string :
>
> <?xml version="1.0" encoding="utf-8"?>
> <test><feed name="test">toto</feed></test>
>
> the addObserver works ( xs.addObserver("/*", self.onTest) )
> but if I try the following :
>
>
> xs.addObserver("/test/feed/@name", self.onTest)
> or
> xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>
> I get the following :
>
> <......>
>  File 
> "/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py", 
> line 104, in onElement
>    self.dispatch(element)
>  File 
> "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py", line 
> 232, in dispatch
>    if query.matches(object):
>  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xpath.py", 
> line 238, in matches
>    return self.baseLocation.matches(elem)
> exceptions.AttributeError: 'NoneType' object has no attribute 'matches'
>
> Does anyone understand why?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
I'm having some trouble with the XPath I think when trying to react on 
xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
the following :

    <?xml version="1.0" encoding="utf-8"?>
    <test><feed name='monNom'>toto</feed></test>

and the callback functions are :

    def onTest(self, element):
        print "got test : ", element

    def onFeed(self, element):
        print "got feed : ", element

    def onFeedFilteredByName(self, element):
        print "got feed name : ", element

    def onWildcard(self, element):
        print "got wildcard : ", element

and the bootstrap is added like so :

    f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)

and the bootstrap callback is :

    def connected(self, xs):
        print 'Connected!'
        xs.addObserver("/test", self.onTest)
        xs.addObserver("/test/feed", self.onFeed)
        xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
        xs.addObserver("/*", self.onWildcard)

The only one that gets called is "/*". I tested out the others using 
XPathQuery manually with :

    xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]

root being the above xml, and they work, I can even get the attributes 
(which is what  I really need to get) like so :

    
xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")

What am I doing wrong when adding observers? How can I get them to react 
on attribute names too?

Thank you,
Gabriel



From twisted at ralphm.ik.nu  Wed Feb 20 05:29:37 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 20 Feb 2008 11:29:37 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BBF493.4090708@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch> <47BABDA2.10105@evotex.ch>
	<47BBF493.4090708@evotex.ch>
Message-ID: <1203503377.8278.14.camel@localhost>


On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
> [..]
>
> I'm having some trouble with the XPath I think when trying to react on 
> xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
> the following :
> 
>     <?xml version="1.0" encoding="utf-8"?>
>     <test><feed name='monNom'>toto</feed></test>
> 
> and the callback functions are :
> 
>     def onTest(self, element):
>         print "got test : ", element
> 
>     def onFeed(self, element):
>         print "got feed : ", element
> 
>     def onFeedFilteredByName(self, element):
>         print "got feed name : ", element
> 
>     def onWildcard(self, element):
>         print "got wildcard : ", element
> 
> and the bootstrap is added like so :
> 
>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
> 
> and the bootstrap callback is :
> 
>     def connected(self, xs):
>         print 'Connected!'
>         xs.addObserver("/test", self.onTest)
>         xs.addObserver("/test/feed", self.onFeed)
>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>         xs.addObserver("/*", self.onWildcard)
> 
> The only one that gets called is "/*". I tested out the others using 
> XPathQuery manually with :
> 
>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
> 
> root being the above xml, and they work, I can even get the attributes 
> (which is what  I really need to get) like so :
> 
>     
> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")
> 
> What am I doing wrong when adding observers? How can I get them to react 
> on attribute names too?

Hi,

A somewhat lengthy explanation follows,

XML Streams are a result of the work on Jabber. As such, the generalized
version of XmlStream in xish works similarly, but without the Jabber
specifics in terms of namespaces and elements. However, the concept
behind XML Streams is that you open the stream with a root element, and
after that the units of exchange are the first-level childs of that root
element, or so-called XML Stanzas.

EventDispatcher, a superclass of XmlStream, is responsible for calling
back observers upon calls to its dispatch method. For each XML Stanza,
XmlStream will dispatch the DOM object at the root of that snippet of
XML (domish.Element) for the XML Stanza. Observers are registered to
XPath (-like) queries to match those Elements.

Now that's out of the way, in your specific example, the <feed/> element
would be an XML Stanza. So you can only register an observer to that,
like this:

   xs.addObserver('/feed', self.onFeed)

If some <feed/>'s would have child <title/>, you could add an observer
on just those <feed/>'s with a title like this:

   xs.addObserver('/feed/title', self.onFeedWithTitle)

The observer would still get the whole <feed/> element passed. So, to be
clear: the XPath-like queries are for matching against XML Stanzas, and
each XML Stanza that matches is then passed to the callbacks registered
to that query.

For completeness, ff you want to hook up an event to the start tag of
the root element having been received, you'd do this:

  xs.addObserver(STREAM_START_EVENT, self.onTest)

In that case, you need to do change the bootstrap registration to this:

  f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)

Hope that clears some things up.

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Wed Feb 20 05:34:16 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 20 Feb 2008 11:34:16 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BAEC4E.90707@evotex.ch>
References: <47BABDA2.10105@evotex.ch>
	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
	<149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
	<47BAEC4E.90707@evotex.ch>
Message-ID: <1203503656.8278.20.camel@localhost>


On Tue, 2008-02-19 at 15:48 +0100, Gabriel Rossetti wrote:
> Christopher Zorn wrote:
> >
> >
> > On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com 
> > <mailto:exarkun at divmod.com>> wrote:
> >
> >     On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti
> >     <mailing_lists at evotex.ch <mailto:mailing_lists at evotex.ch>> wrote:
> >     > [snip]
> >     >Ok, I've got some code sort of working, if I use the following
> >     XPathQuery
> >     >string : "/*" on the following XML string :
> >     >
> >     ><?xml version="1.0" encoding="utf-8"?>
> >     ><test><feed name="test">toto</feed></test>
> >     >
> >     >the addObserver works ( xs.addObserver("/*", self.onTest) )
> >     >but if I try the following :
> >     >
> >     >
> >     >xs.addObserver("/test/feed/@name", self.onTest)
> >     >or
> >     >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
> >     >
> >
> >     I don't think the xpath implementation in xish is complete.  You may
> >     have found a bug or a case it doesn't handle.
> >
> >
> > It is not complete. But if you would like to find the stanza 'feed' 
> > with the attribute 'name' then it would like like
> >
> > xs.addObserver("/test/feed[@name]", self.onTest)
> >
> >
> Ok, thanks (Jean-Paul & Christopher), that helped, I though I was doing 
> something wrong :-). So there is no way of directly getting the stanza's 
> attribute's value using the xpath implementation in xish? I can use the 
> getAttribute() method but "pure" xpath would be nicer.

See the other mail for a more complete answer to why the XPath
implementation is like it is.

Indeed the XPath implementation is far from complete. It shouldn't yield
that particular error though, I think. Could you file a ticket for this
specific case?

-- 
Groetjes,

ralphm




From mailing_lists at evotex.ch  Wed Feb 20 08:08:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 14:08:56 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory &
	XmlStream	:	XPathQuery error?
In-Reply-To: <1203503377.8278.14.camel@localhost>
References: <47B9ACAB.1060102@evotex.ch>
	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>
	<1203503377.8278.14.camel@localhost>
Message-ID: <47BC2668.1040309@evotex.ch>

Ralph Meijer wrote:
> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>   
>> [..]
>>
>> I'm having some trouble with the XPath I think when trying to react on 
>> xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
>> the following :
>>
>>     <?xml version="1.0" encoding="utf-8"?>
>>     <test><feed name='monNom'>toto</feed></test>
>>
>> and the callback functions are :
>>
>>     def onTest(self, element):
>>         print "got test : ", element
>>
>>     def onFeed(self, element):
>>         print "got feed : ", element
>>
>>     def onFeedFilteredByName(self, element):
>>         print "got feed name : ", element
>>
>>     def onWildcard(self, element):
>>         print "got wildcard : ", element
>>
>> and the bootstrap is added like so :
>>
>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>
>> and the bootstrap callback is :
>>
>>     def connected(self, xs):
>>         print 'Connected!'
>>         xs.addObserver("/test", self.onTest)
>>         xs.addObserver("/test/feed", self.onFeed)
>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>         xs.addObserver("/*", self.onWildcard)
>>
>> The only one that gets called is "/*". I tested out the others using 
>> XPathQuery manually with :
>>
>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>
>> root being the above xml, and they work, I can even get the attributes 
>> (which is what  I really need to get) like so :
>>
>>     
>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")
>>
>> What am I doing wrong when adding observers? How can I get them to react 
>> on attribute names too?
>>     
>
> Hi,
>
> A somewhat lengthy explanation follows,
>
> XML Streams are a result of the work on Jabber. As such, the generalized
> version of XmlStream in xish works similarly, but without the Jabber
> specifics in terms of namespaces and elements. However, the concept
> behind XML Streams is that you open the stream with a root element, and
> after that the units of exchange are the first-level childs of that root
> element, or so-called XML Stanzas.
>
> EventDispatcher, a superclass of XmlStream, is responsible for calling
> back observers upon calls to its dispatch method. For each XML Stanza,
> XmlStream will dispatch the DOM object at the root of that snippet of
> XML (domish.Element) for the XML Stanza. Observers are registered to
> XPath (-like) queries to match those Elements.
>
> Now that's out of the way, in your specific example, the <feed/> element
> would be an XML Stanza. So you can only register an observer to that,
> like this:
>
>    xs.addObserver('/feed', self.onFeed)
>
> If some <feed/>'s would have child <title/>, you could add an observer
> on just those <feed/>'s with a title like this:
>
>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>
> The observer would still get the whole <feed/> element passed. So, to be
> clear: the XPath-like queries are for matching against XML Stanzas, and
> each XML Stanza that matches is then passed to the callbacks registered
> to that query.
>
> For completeness, ff you want to hook up an event to the start tag of
> the root element having been received, you'd do this:
>
>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>
> In that case, you need to do change the bootstrap registration to this:
>
>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>
> Hope that clears some things up.
>
>   
Ralph, Thank you! Your explanation cleared up a lot for me, I had 
misunderstood the whole thing, this is exactly what I needed.

Thanks again,
Gabriel




From Andy at NewWorldElectric.com  Wed Feb 20 09:04:10 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 20 Feb 2008 09:04:10 -0500
Subject: [Twisted-Python]need clarification on "save an received file"
In-Reply-To: <368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>
References: <643592.60007.qm@web8707.mail.in.yahoo.com>
	<368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>
Message-ID: <37d49ed40802200604t321660c5of01a59c811309ad9@mail.gmail.com>

Oh, I get it, you're expecting it to work like php where files are
automatically stored somewhere for you, no it won't be saved, you need
to implement your own code to save it if you're using your own
protocols for the rest of your communications.  If you're using http
or another protocol, please mention that and maybe someone will know
if files are handled there, not sure myself.

-Andy

On Wed, Feb 20, 2008 at 12:56 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Feb 19, 2008 11:41 PM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
> >
> >
> >
> > I need one clarification on this,
> > my appplication is of  server-client application, so when server receives
> a file through socket, will that file will be saved in  /temp/workfile ?
> > or  should  i use a socket handler with file object to receive that file ?
> >
>
> I would try to help you my friend, but I have no earthly idea what you're
> talking about.  /temp/workfile?  So far as I know, sockets receive bytes,
> not files. Does that help?? Anyhow, if you provided some sample code showing
> what you're trying to do, someone might be able to help you.  It would also
> be apropriate if your question actually had something to do with Twisted.
>
> Cheers,
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to replicate.



From mailing_lists at evotex.ch  Wed Feb 20 10:19:52 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:19:52 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory
	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC2668.1040309@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>	<1203503377.8278.14.camel@localhost>
	<47BC2668.1040309@evotex.ch>
Message-ID: <47BC4518.2090405@evotex.ch>

Gabriel Rossetti wrote:
> Ralph Meijer wrote:
>> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>>  
>>> [..]
>>>
>>> I'm having some trouble with the XPath I think when trying to react 
>>> on xml messages. I am feeding the 
>>> twisted.words.xish.xmlstream.XmlStream the following :
>>>
>>>     <?xml version="1.0" encoding="utf-8"?>
>>>     <test><feed name='monNom'>toto</feed></test>
>>>
>>> and the callback functions are :
>>>
>>>     def onTest(self, element):
>>>         print "got test : ", element
>>>
>>>     def onFeed(self, element):
>>>         print "got feed : ", element
>>>
>>>     def onFeedFilteredByName(self, element):
>>>         print "got feed name : ", element
>>>
>>>     def onWildcard(self, element):
>>>         print "got wildcard : ", element
>>>
>>> and the bootstrap is added like so :
>>>
>>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>>
>>> and the bootstrap callback is :
>>>
>>>     def connected(self, xs):
>>>         print 'Connected!'
>>>         xs.addObserver("/test", self.onTest)
>>>         xs.addObserver("/test/feed", self.onFeed)
>>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>>         xs.addObserver("/*", self.onWildcard)
>>>
>>> The only one that gets called is "/*". I tested out the others using 
>>> XPathQuery manually with :
>>>
>>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>>
>>> root being the above xml, and they work, I can even get the 
>>> attributes (which is what  I really need to get) like so :
>>>
>>>     
>>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name") 
>>>
>>>
>>> What am I doing wrong when adding observers? How can I get them to 
>>> react on attribute names too?
>>>     
>>
>> Hi,
>>
>> A somewhat lengthy explanation follows,
>>
>> XML Streams are a result of the work on Jabber. As such, the generalized
>> version of XmlStream in xish works similarly, but without the Jabber
>> specifics in terms of namespaces and elements. However, the concept
>> behind XML Streams is that you open the stream with a root element, and
>> after that the units of exchange are the first-level childs of that root
>> element, or so-called XML Stanzas.
>>
>> EventDispatcher, a superclass of XmlStream, is responsible for calling
>> back observers upon calls to its dispatch method. For each XML Stanza,
>> XmlStream will dispatch the DOM object at the root of that snippet of
>> XML (domish.Element) for the XML Stanza. Observers are registered to
>> XPath (-like) queries to match those Elements.
>>
>> Now that's out of the way, in your specific example, the <feed/> element
>> would be an XML Stanza. So you can only register an observer to that,
>> like this:
>>
>>    xs.addObserver('/feed', self.onFeed)
>>
>> If some <feed/>'s would have child <title/>, you could add an observer
>> on just those <feed/>'s with a title like this:
>>
>>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>>
>> The observer would still get the whole <feed/> element passed. So, to be
>> clear: the XPath-like queries are for matching against XML Stanzas, and
>> each XML Stanza that matches is then passed to the callbacks registered
>> to that query.
>>
>> For completeness, ff you want to hook up an event to the start tag of
>> the root element having been received, you'd do this:
>>
>>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>>
>> In that case, you need to do change the bootstrap registration to this:
>>
>>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>>
>> Hope that clears some things up.
>>
>>   
> Ralph, Thank you! Your explanation cleared up a lot for me, I had 
> misunderstood the whole thing, this is exactly what I needed.
>
> Thanks again,
> Gabriel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Hi, one more question,

I'm trying to do the following :

receive an xml message, run different actions depending on XML Stanzas, 
modify the original message and send it back. I'm starting to wonder if 
XmlStream is really what I need? If I'm not mistaking, I have no way of 
getting the original message as a whole, correct? And if I'm not 
mistaking, if I have multiple connections, then the events get mixed up 
(from my own tests anyways), the processing is not atomic. If I have 
let's say that I have :

client1 : <test><header  id="1"/>
client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
client2 : <feed name="myName2">lala</feed></test>

my stanzas will get processed in that order, thus I can't even recreate 
the message (without a complicated state machine of some kind).

I'm kind of mixed up, because when using a thread based network 
framework, one tcp connection = one thread, thus the protocol execution 
is atomic, but this doesn't seam to be the case with Twisted (event 
based), is this correct or have I missed something again?

Thanks,
Gabriel



From andrewfr_ice at yahoo.com  Wed Feb 20 10:32:55 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 07:32:55 -0800 (PST)
Subject: Silly Error [Twisted-Python] Question about Twistd and PYTHONPATH
In-Reply-To: <E1JRmHa-0000Uy-1H@cube.twistedmatrix.com>
Message-ID: <239770.59321.qm@web34205.mail.mud.yahoo.com>

Hi Matthew:

>I guess your Reporter class is in another module.
>I ran into the same situation a few days ago and
>finally made it work
> like
>this:

>import sys
>sys.path.append('.')

Thanks for the response. My error seemed to be much
sillier - somehow the top level __init__.py was
missing!

Arrrgh....

Cheers,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From mailing_lists at evotex.ch  Wed Feb 20 10:34:09 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:34:09 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC4518.2090405@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>	<1203503377.8278.14.camel@localhost>	<47BC2668.1040309@evotex.ch>
	<47BC4518.2090405@evotex.ch>
Message-ID: <47BC4871.2070107@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Ralph Meijer wrote:
>>> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>>>  
>>>> [..]
>>>>
>>>> I'm having some trouble with the XPath I think when trying to react 
>>>> on xml messages. I am feeding the 
>>>> twisted.words.xish.xmlstream.XmlStream the following :
>>>>
>>>>     <?xml version="1.0" encoding="utf-8"?>
>>>>     <test><feed name='monNom'>toto</feed></test>
>>>>
>>>> and the callback functions are :
>>>>
>>>>     def onTest(self, element):
>>>>         print "got test : ", element
>>>>
>>>>     def onFeed(self, element):
>>>>         print "got feed : ", element
>>>>
>>>>     def onFeedFilteredByName(self, element):
>>>>         print "got feed name : ", element
>>>>
>>>>     def onWildcard(self, element):
>>>>         print "got wildcard : ", element
>>>>
>>>> and the bootstrap is added like so :
>>>>
>>>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>>>
>>>> and the bootstrap callback is :
>>>>
>>>>     def connected(self, xs):
>>>>         print 'Connected!'
>>>>         xs.addObserver("/test", self.onTest)
>>>>         xs.addObserver("/test/feed", self.onFeed)
>>>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>>>         xs.addObserver("/*", self.onWildcard)
>>>>
>>>> The only one that gets called is "/*". I tested out the others 
>>>> using XPathQuery manually with :
>>>>
>>>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>>>
>>>> root being the above xml, and they work, I can even get the 
>>>> attributes (which is what  I really need to get) like so :
>>>>
>>>>     
>>>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name") 
>>>>
>>>>
>>>> What am I doing wrong when adding observers? How can I get them to 
>>>> react on attribute names too?
>>>>     
>>>
>>> Hi,
>>>
>>> A somewhat lengthy explanation follows,
>>>
>>> XML Streams are a result of the work on Jabber. As such, the 
>>> generalized
>>> version of XmlStream in xish works similarly, but without the Jabber
>>> specifics in terms of namespaces and elements. However, the concept
>>> behind XML Streams is that you open the stream with a root element, and
>>> after that the units of exchange are the first-level childs of that 
>>> root
>>> element, or so-called XML Stanzas.
>>>
>>> EventDispatcher, a superclass of XmlStream, is responsible for calling
>>> back observers upon calls to its dispatch method. For each XML Stanza,
>>> XmlStream will dispatch the DOM object at the root of that snippet of
>>> XML (domish.Element) for the XML Stanza. Observers are registered to
>>> XPath (-like) queries to match those Elements.
>>>
>>> Now that's out of the way, in your specific example, the <feed/> 
>>> element
>>> would be an XML Stanza. So you can only register an observer to that,
>>> like this:
>>>
>>>    xs.addObserver('/feed', self.onFeed)
>>>
>>> If some <feed/>'s would have child <title/>, you could add an observer
>>> on just those <feed/>'s with a title like this:
>>>
>>>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>>>
>>> The observer would still get the whole <feed/> element passed. So, 
>>> to be
>>> clear: the XPath-like queries are for matching against XML Stanzas, and
>>> each XML Stanza that matches is then passed to the callbacks registered
>>> to that query.
>>>
>>> For completeness, ff you want to hook up an event to the start tag of
>>> the root element having been received, you'd do this:
>>>
>>>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>>>
>>> In that case, you need to do change the bootstrap registration to this:
>>>
>>>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>>>
>>> Hope that clears some things up.
>>>
>>>   
>> Ralph, Thank you! Your explanation cleared up a lot for me, I had 
>> misunderstood the whole thing, this is exactly what I needed.
>>
>> Thanks again,
>> Gabriel
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Hi, one more question,
>
> I'm trying to do the following :
>
> receive an xml message, run different actions depending on XML 
> Stanzas, modify the original message and send it back. 

I forgot to say that when I say send it back, it may be also sent to 
another server instead of back to the client that originally sent it, 
kind of like a forwarder that modifies some of the data before sending 
it along.

> I'm starting to wonder if XmlStream is really what I need? If I'm not 
> mistaking, I have no way of getting the original message as a whole, 
> correct? And if I'm not mistaking, if I have multiple connections, 
> then the events get mixed up (from my own tests anyways), the 
> processing is not atomic. If I have let's say that I have :
>
> client1 : <test><header  id="1"/>
> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
> client2 : <feed name="myName2">lala</feed></test>
>
> my stanzas will get processed in that order, thus I can't even 
> recreate the message (without a complicated state machine of some kind).
>
> I'm kind of mixed up, because when using a thread based network 
> framework, one tcp connection = one thread, thus the protocol 
> execution is atomic, but this doesn't seam to be the case with Twisted 
> (event based), is this correct or have I missed something again?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From exarkun at divmod.com  Wed Feb 20 10:35:54 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 10:35:54 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory
	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC4518.2090405@evotex.ch>
Message-ID: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>

On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>And if I'm not mistaking, 
>if I have multiple connections, then the events get mixed up (from my own 
>tests anyways), the processing is not atomic. If I have let's say that I 
>have :
>
>client1 : <test><header  id="1"/>
>client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>client2 : <feed name="myName2">lala</feed></test>

I think the 3rd line should be client1?

>
>my stanzas will get processed in that order, thus I can't even recreate the 
>message (without a complicated state machine of some kind).
>
>I'm kind of mixed up, because when using a thread based network framework, 
>one tcp connection = one thread, thus the protocol execution is atomic, but 
>this doesn't seam to be the case with Twisted (event based), is this correct 
>or have I missed something again?

If you send all events to a single function with no indication of where they
came from, then you will certainly have difficulty figuring out what's going
on.  So, don't do that. ;)

One solution is to have a difference instance for each connection and to use
a bound method as the event handler.  This gives you an obvious per-instance
place to keep state and such - on the instance.  There are other solutions,
of course, like passing in some extra object to the event handler so you can
differentiate between clients.

If you use instances and bound methods, then client1's stanzas will be sent
to the instance you created to handle client1 and client2's stanzas will be
sent to the instance you created to handle client2.  This way, it should be
trivial to keep track of what's going on.

Jean-Paul



From mailing_lists at evotex.ch  Wed Feb 20 10:45:14 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:45:14 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
Message-ID: <47BC4B0A.1040602@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> And if I'm not mistaking, if I have multiple connections, then the 
>> events get mixed up (from my own tests anyways), the processing is 
>> not atomic. If I have let's say that I have :
>>
>> client1 : <test><header  id="1"/>
>> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>> client2 : <feed name="myName2">lala</feed></test>
>
> I think the 3rd line should be client1?
yes it should :-)
>
>>
>> my stanzas will get processed in that order, thus I can't even 
>> recreate the message (without a complicated state machine of some kind).
>>
>> I'm kind of mixed up, because when using a thread based network 
>> framework, one tcp connection = one thread, thus the protocol 
>> execution is atomic, but this doesn't seam to be the case with 
>> Twisted (event based), is this correct or have I missed something again?
>
> If you send all events to a single function with no indication of 
> where they
> came from, then you will certainly have difficulty figuring out what's 
> going
> on.  So, don't do that. ;)
>
> One solution is to have a difference instance for each connection and 
> to use
> a bound method as the event handler.  This gives you an obvious 
> per-instance
> place to keep state and such - on the instance.  There are other 
> solutions,
> of course, like passing in some extra object to the event handler so 
> you can
> differentiate between clients.
>
> If you use instances and bound methods, then client1's stanzas will be 
> sent
> to the instance you created to handle client1 and client2's stanzas 
> will be
> sent to the instance you created to handle client2.  This way, it 
> should be
> trivial to keep track of what's going on.
>
> Jean-Paul
>
> ___________
Thanks Jean-Paul, I will look into this instance & binded methods technique.

Gabriel



From andrewfr_ice at yahoo.com  Wed Feb 20 10:51:41 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 07:51:41 -0800 (PST)
Subject: [Twisted-Python] Question about Using Deferreds in ServerProtocol
	request Handler
Message-ID: <415902.67535.qm@web34215.mail.mud.yahoo.com>

Hi Folks:

Much of what I do with Stackless involves making calls
from server requests that in turn, make Twisted calls
that return a deferred.

i.e.,

class MyRequestHandler(http.Request):
    
    """
    let us create a tasklet to do work in the request
handler
    and allow the Reactor to continue
    """
    def process(self):
        t = stackless.tasklet(self.doWork)()
        
    def doWork(self):
        message = 
MyRequestHandler.processor.getPage("")      
        self.write(message)
        self.finish()
        return

I have been able to do the same thing with an
inlineCallback

class MyRequestHandler(http.Request):
    
    @defer.inlineCallbacks
    def process(self):
        try:
            result = yield
client.getPage("http://www.google.com")
        except Exception, err:
            log.err(err, "process getPage call
failed")
        else:
            self.setHeader('Content-Type',
'text/html') 
            self.write(result)
            self.finish()

(although this works, the technique is not general for
all protocols)

However, how is this done with just deferreds and
callbacks without Stackless or inlineCallbacks?

Cheers,
Andrew
 



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From exarkun at divmod.com  Wed Feb 20 11:18:28 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 11:18:28 -0500
Subject: [Twisted-Python] Question about Using Deferreds in
	ServerProtocol request Handler
In-Reply-To: <415902.67535.qm@web34215.mail.mud.yahoo.com>
Message-ID: <20080220161828.6859.1257093107.divmod.quotient.11246@ohm>

On Wed, 20 Feb 2008 07:51:41 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hi Folks:
>
>Much of what I do with Stackless involves making calls
>from server requests that in turn, make Twisted calls
>that return a deferred.
>
> [snip]
>
>I have been able to do the same thing with an
>inlineCallback
>
>class MyRequestHandler(http.Request):
>
>    @defer.inlineCallbacks
>    def process(self):
>        try:
>            result = yield client.getPage("http://www.google.com")
>        except Exception, err:
>            log.err(err, "process getPage call failed")
>        else:
>            self.setHeader('Content-Type', 'text/html')
>            self.write(result)
>            self.finish()
>
>(although this works, the technique is not general for
>all protocols)
>
>However, how is this done with just deferreds and
>callbacks without Stackless or inlineCallbacks?

inlineCallbacks just allows a syntactic transformation.  The above
definition of process is identical to this one:

    def process(self):
        def callback(result):
            self.setHeader('Content-Type', 'text/html')
            self.write(result)
            self.finish()
        def errback(err):
            err.trap(Exception)
            log.err(err, "process getPage call failed")
        try:
            d = client.getPage("http://www.google.com")
        except Exception:
            d = failure.Failure()
        d.addCallbacks(callback, errback)

Exactly the same thing happens in either case.  The difference is
that inlineCallbacks lets you implement the callback as the section
of a generator function after a yield statement and the errback as
the suite of an except statement enclosing a yield expression in the
generator function.  The transformation is almost (or maybe actually)
a mechanical one which just changes the structure of the code, not the
behavior it implements.  inlineCallbacks is still based on Deferreds,
they're just obscured from view slightly.

Jean-Paul



From andrewfr_ice at yahoo.com  Wed Feb 20 14:50:08 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 11:50:08 -0800 (PST)
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question about Using
	in ServerProtocol request Handler
In-Reply-To: <E1JRsId-0006pX-Qn@cube.twistedmatrix.com>
Message-ID: <177670.19996.qm@web34210.mail.mud.yahoo.com>

Hi Jean-Paul:

>However, how is this done with just deferreds and
>callbacks without Stackless or inlineCallbacks?

Thanks for the response. And thanks for the
explanation of inlineCallbacks. Annotating your
example, I get  the following:

 def process(self):
        def callback(result):
            print "second"
            self.setHeader('Content-Type',
'text/html')
            self.write(result)
            self.finish()
        def errback(err):
            err.trap(Exception)
            log.err(err, "process getPage call
failed")
        try:
            d =
client.getPage("http://www.google.com")
        except Exception:
            d = failure.Failure()
        d.addCallbacks(callback, errback)
        print "first"

running this I get what I expected

"first"
"second"


This example I can follow. The server protocol handler
terminates. The callback eventually fires. Since the
callback has a reference to the request, it can write
back the response.

Bear with me, I am just starting to read up on
protocols... 

What I am unclear on, is why some Server Protocols
depend on 'return' and others don't (I assume with
HTTP, you can stream a response). What is the right
way to design a ServerProtocol? Is there an
'inclineCallback' friendly protocol

Unless I am fundamentally missing something it seems
that there are advantages to designing a Server
Protocol not to depend on 'return'

As I alluded to in other posts, I get confused over
this variation.

This is pyAMF

class pyAMFTest(TwistedGateway):
    def __init__(self):
        super(TubeTest, self).__init__()
        return
        
    def echo(self, x):
        print x
        return x

pretend I wish to do a callRemote(...)

def echo(self, x):
    def callback(result):
        print "second"
        """
        How do I return x?
        """        

    def errback(err):
        err.trap(Exception)
        log.err(err, "process getPage call failed")
    try:
        proxy = ....
        d = proxy.callRemote(...)
    except Exception:
        d = failure.Failure()
    d.addCallbacks(callback, errback)
    print "first"

In this case, how is 'x' transmitted back to the
reactor and the client? What is the proper way of
structuring this code. 

By the way, the inlineCallback and the Stackless
versions also have problems handling this.

This is starting to stimulate my interest in writing a
Stackless solution that handles this case....

Cheers,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From exarkun at divmod.com  Wed Feb 20 15:25:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 15:25:14 -0500
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question about
	Using in ServerProtocol request Handler
In-Reply-To: <177670.19996.qm@web34210.mail.mud.yahoo.com>
Message-ID: <20080220202514.6859.683784448.divmod.quotient.11275@ohm>

On Wed, 20 Feb 2008 11:50:08 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hi Jean-Paul:
>
>>However, how is this done with just deferreds and
>>callbacks without Stackless or inlineCallbacks?
>
>Thanks for the response. And thanks for the
>explanation of inlineCallbacks. Annotating your
>example, I get  the following:
>
> def process(self):
>        def callback(result):
>            print "second"
>            self.setHeader('Content-Type', 'text/html')
>            self.write(result)
>            self.finish()
>        def errback(err):
>            err.trap(Exception)
>            log.err(err, "process getPage call failed")
>        try:
>            d = client.getPage("http://www.google.com")
>        except Exception:
>            d = failure.Failure()
>        d.addCallbacks(callback, errback)
>        print "first"
>
>running this I get what I expected
>
>"first"
>"second"
>
>This example I can follow. The server protocol handler
>terminates. The callback eventually fires. Since the
>callback has a reference to the request, it can write
>back the response.
>
>Bear with me, I am just starting to read up on
>protocols...
>
>What I am unclear on, is why some Server Protocols
>depend on 'return' and others don't (I assume with
>HTTP, you can stream a response). What is the right
>way to design a ServerProtocol? Is there an
>'inclineCallback' friendly protocol

Depending on the value returned by a method is an API decision made
by whoever implemented the protocol.  They came to the decision, at
some point, that the convenient way for applications to specify the
result is to return it from a method.  Or, they didn't and provided
some other API for specifying results.

Basically, we're talking about how protocol actions get dispatched
and how the result of dispatching them is handled.  You can have a
dispatcher which calls a method and ignores the result, requiring
that the result be handed back through some explicit API.  An example
of this is twisted.web's Request class.  The process method of the
request is called.  The result is specified by calling the write
method (possibly more than once) and then the finish method.  The
return value from process is ignored.  Another kind of dispatcher
might take the return value of the function dispatched to and treat
it as the result.  It might support Deferreds or it might not. An
example of this is twisted.mail's POP3 server implementation (which
happens to support Deferreds in most places, but not all).

The only kind of dispatcher which is really hostile towards
inlineCallbacks is the kind which is hostile towards Deferreds in
general - ie, one which requires a return value and does not support
Deferreds.

>
>Unless I am fundamentally missing something it seems
>that there are advantages to designing a Server
>Protocol not to depend on 'return'

Not really.  It's just an API.  Unless the return value isn't allowed
to be a Deferred, there's little difference between using the return
value and ignoring it.

>
>As I alluded to in other posts, I get confused over
>this variation.
>
>This is pyAMF
>
>class pyAMFTest(TwistedGateway):
>    def __init__(self):
>        super(TubeTest, self).__init__()
>        return
>
>    def echo(self, x):
>        print x
>        return x
>
>pretend I wish to do a callRemote(...)
>
>def echo(self, x):
>    def callback(result):
>        print "second"
>        """
>        How do I return x?
>        """

You return x by returning x.  That is, `return x?. ;)  But see
below.

>
>    def errback(err):
>        err.trap(Exception)
>        log.err(err, "process getPage call failed")
>    try:
>        proxy = ....
>        d = proxy.callRemote(...)
>    except Exception:
>        d = failure.Failure()
>    d.addCallbacks(callback, errback)
>    print "first"

The function ends here, and the Deferred which will ultimately have
the result you're interested in has *not* been returned.  It should
have been so that the dispatcher (which, near as I can tell, does
support Deferreds) can get it.  So, `return d? after the print.

>
>In this case, how is 'x' transmitted back to the
>reactor and the client? What is the proper way of
>structuring this code.

The reactor doesn't care.  This is all pyAMF stuff.  pyAMF accepts
Deferreds (again, near as I can tell) and treats their eventual
result as the response to the request, sending it off in whatever
way is appropriate for AMF.

Hope this helps,

Jean-Paul



From jml at mumak.net  Wed Feb 20 17:54:05 2008
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 21 Feb 2008 09:54:05 +1100
Subject: [Twisted-Python] How to say "reverted". (was Re: [Twisted-commits]
	r22628 - Revert r22624: regression in test_conch.)
Message-ID: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>

On Wed, Feb 20, 2008 at 8:41 PM, Thomas Herve
<therve at wolfwood.twistedmatrix.com> wrote:
> Author: therve
>  Date: Wed Feb 20 02:41:55 2008
>  New Revision: 22628
>
>  Removed:
>    trunk/twisted/conch/test/test_transport.py
>  Modified:
>    trunk/twisted/conch/manhole_ssh.py
>    trunk/twisted/conch/ssh/factory.py
>    trunk/twisted/conch/ssh/service.py
>    trunk/twisted/conch/ssh/transport.py
>    trunk/twisted/conch/ssh/userauth.py
>    trunk/twisted/conch/test/test_conch.py
>    trunk/twisted/conch/test/test_ssh.py
>
>  Log:
>  Revert r22624: regression in test_conch.
>
>  Refs #2678

Hello all,

Thanks to Thomas for being alert enough to spot this regression and
energetic enough to revert it. I'm very glad that we have people[1]
monitoring the test suite making sure that we can trust trunk.
However, I have two suggestions on how we can announce trunk reverts
better. I'm not picking on him in particular, this is just the first
revert for which I am detached enough to comment sensibly.

1. When reverting a commit to trunk, the commit message should explain
what the regression is.

The word 'regression' is used sometimes to mean 'test suite failure'
and other times to mean 'a feature that I liked works differently now'
or 'this is slower than it was'. If it's a test failure, it's useful
to know what test, and particularly whether or not the test was
related to the change. If it's not a test failure, it's good to know
why the "regression" is considered severe enough to back out the
change, rather than just fixing it in place.

2. Reverting someone's contribution is bad news for them. We should
break the bad news gently.

Backing out someone's changes can often send an unintended message of
blame, when we actually want to be encouraging people to contribute.
"Revert <revno>: regression in <file>." is terse, unspecific and
leaves too much unsaid. We can't do anything about the bad news, but
we can change the way we break it. Being more specific helps a lot, as
does describing what happens next (e.g. "I'll fix it up and land it
for you", "Can you please investigate the failure and fix the test,
I'll review the fix for you as soon as it's ready.")

jml

[1] I'll be even happier when we have *machines* monitoring the test
suite, but that's another email.



From exarkun at divmod.com  Wed Feb 20 18:06:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 18:06:46 -0500
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
Message-ID: <20080220230646.6859.624297255.divmod.quotient.11299@ohm>

On Thu, 21 Feb 2008 09:54:05 +1100, Jonathan Lange <jml at mumak.net> wrote:
>
> [snip]
>
>1. When reverting a commit to trunk, the commit message should explain
>what the regression is.
>
>The word 'regression' is used sometimes to mean 'test suite failure'
>and other times to mean 'a feature that I liked works differently now'
>or 'this is slower than it was'. If it's a test failure, it's useful
>to know what test, and particularly whether or not the test was
>related to the change. If it's not a test failure, it's good to know
>why the "regression" is considered severe enough to back out the
>change, rather than just fixing it in place.
>

Yes, please.

>2. Reverting someone's contribution is bad news for them. We should
>break the bad news gently.
>
>Backing out someone's changes can often send an unintended message of
>blame, when we actually want to be encouraging people to contribute.
>"Revert <revno>: regression in <file>." is terse, unspecific and
>leaves too much unsaid. We can't do anything about the bad news, but
>we can change the way we break it. Being more specific helps a lot, as
>does describing what happens next (e.g. "I'll fix it up and land it
>for you", "Can you please investigate the failure and fix the test,
>I'll review the fix for you as soon as it's ready.")

Sounds great.

Of much less significance, but related and most people probably don't
know about it, "Reopens #1234" in the revert commit message will take
care of adding the commit message to the ticket and re-opening it.

Jean-Paul



From mithrandi at mithrandi.za.net  Wed Feb 20 19:38:56 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 21 Feb 2008 02:38:56 +0200
Subject: [Twisted-Python] Question about Using Deferreds in
	ServerProtocol request Handler
In-Reply-To: <20080220161828.6859.1257093107.divmod.quotient.11246@ohm>
References: <415902.67535.qm@web34215.mail.mud.yahoo.com>
	<20080220161828.6859.1257093107.divmod.quotient.11246@ohm>
Message-ID: <20080221003856.GB3464@mithrandi.net>

* Jean-Paul Calderone <exarkun at divmod.com> [2008-02-20 11:18:28 -0500]:

>        try:
>            d = client.getPage("http://www.google.com")
>        except Exception:
>            d = failure.Failure()

I guess this should be:

       try:
           d = client.getPage("http://www.google.com")
       except Exception:
           d = defer.fail()

Alternatively:

        d = maybeDeferred(client.getPage, "http://www.google.com")

although that's probably maybeDeferred() abuse.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080221/da723874/attachment.pgp 

From therve at free.fr  Thu Feb 21 02:48:34 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Thu, 21 Feb 2008 08:48:34 +0100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
Message-ID: <200802210848.35368.therve@free.fr>


> Hello all,
>
> Thanks to Thomas for being alert enough to spot this regression and
> energetic enough to revert it. I'm very glad that we have people[1]
> monitoring the test suite making sure that we can trust trunk.
> However, I have two suggestions on how we can announce trunk reverts
> better. I'm not picking on him in particular, this is just the first
> revert for which I am detached enough to comment sensibly.
>
> 1. When reverting a commit to trunk, the commit message should explain
> what the regression is.
>
> The word 'regression' is used sometimes to mean 'test suite failure'
> and other times to mean 'a feature that I liked works differently now'
> or 'this is slower than it was'. If it's a test failure, it's useful
> to know what test, and particularly whether or not the test was
> related to the change. If it's not a test failure, it's good to know
> why the "regression" is considered severe enough to back out the
> change, rather than just fixing it in place.
>
> 2. Reverting someone's contribution is bad news for them. We should
> break the bad news gently.
>
> Backing out someone's changes can often send an unintended message of
> blame, when we actually want to be encouraging people to contribute.
> "Revert <revno>: regression in <file>." is terse, unspecific and
> leaves too much unsaid. We can't do anything about the bad news, but
> we can change the way we break it. Being more specific helps a lot, as
> does describing what happens next (e.g. "I'll fix it up and land it
> for you", "Can you please investigate the failure and fix the test,
> I'll review the fix for you as soon as it's ready.")

Thanks for insisting on that. I totally agree with you, but of course lazyness 
sometimes comes in the middle of the way. FWIW, I've contacted Paul before 
the revert, so I hope he did take it personaly :). As a matter of fact, I 
think the responsability of revert is the one of the reviewer, because it's 
the reviewer who gave an early go for the commit.

Thanks also to JP for the 'Reopens' feature. I've documented it on the 
ReviewProcess page, don't hesitate to modify it.

> [1] I'll be even happier when we have *machines* monitoring the test
> suite, but that's another email.

Currently, our test suite is a little bit too unreliable to do this 
(aka 'intermittent failures'). But maybe in a near future...

-- 
Thomas



From mailing_lists at evotex.ch  Thu Feb 21 03:13:04 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 09:13:04 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
Message-ID: <47BD3290.5090305@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> And if I'm not mistaking, if I have multiple connections, then the 
>> events get mixed up (from my own tests anyways), the processing is 
>> not atomic. If I have let's say that I have :
>>
>> client1 : <test><header  id="1"/>
>> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>> client2 : <feed name="myName2">lala</feed></test>
>
> I think the 3rd line should be client1?
>
>>
>> my stanzas will get processed in that order, thus I can't even 
>> recreate the message (without a complicated state machine of some kind).
>>
>> I'm kind of mixed up, because when using a thread based network 
>> framework, one tcp connection = one thread, thus the protocol 
>> execution is atomic, but this doesn't seam to be the case with 
>> Twisted (event based), is this correct or have I missed something again?
>
> If you send all events to a single function with no indication of 
> where they
> came from, then you will certainly have difficulty figuring out what's 
> going
> on.  So, don't do that. ;)
>
> One solution is to have a difference instance for each connection and 
> to use
> a bound method as the event handler.  This gives you an obvious 
> per-instance
> place to keep state and such - on the instance.  

Jean-Paul, sorry for the dumb question, when you mean a different 
instance, you mean a thread? What is a bound method? I'm fairly new to 
python and very new to twisted (as you can probably tell).

Thank you! Gabriel

> There are other solutions,
> of course, like passing in some extra object to the event handler so 
> you can
> differentiate between clients.
>
> If you use instances and bound methods, then client1's stanzas will be 
> sent
> to the instance you created to handle client1 and client2's stanzas 
> will be
> sent to the instance you created to handle client2.  This way, it 
> should be
> trivial to keep track of what's going on.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Thu Feb 21 03:47:02 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 21 Feb 2008 19:47:02 +1100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <200802210848.35368.therve@free.fr>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
	<200802210848.35368.therve@free.fr>
Message-ID: <20080221084702.GD29155@steerpike.home.puzzling.org>

Thomas Herv? wrote:
[...]
> > [1] I'll be even happier when we have *machines* monitoring the test
> > suite, but that's another email.
> 
> Currently, our test suite is a little bit too unreliable to do this 
> (aka 'intermittent failures'). But maybe in a near future...

We've had intermittent failures for *years*.  I doubt that'll get solved in a
near future without some sort of significant change to how we do things.

Here's a thought experiment: one possibility would be completely automate the
running of the test suite, as jml is suggesting, e.g. by using a commit hook (or
a ?commit bot? like PQM) that will run the test suite before allowing a commit
to trunk.  Then intermittent failures become much more intolerable, because they
will regularly frustrate developers rather than being something you can usually
ignore.  Thus people will be much more motivated to find solutions to our
intermittent tests (whether by fixing the offending tests, or disabling them, or
something else).

I'm not sure it'd be worth the effort, but it's interesting to think about...

-Andrew.




From mailing_lists at evotex.ch  Thu Feb 21 04:31:16 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 10:31:16 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
 multiple clients with independent processing
Message-ID: <47BD44E4.7080508@evotex.ch>

Hello,

I am new to Twisted and I'm trying to write a server that accepts 
multiple client connections
and processes them separately. I *think*  this is done with a protocol 
instance per client connection, but I may be 100% wrong. I don't really 
understand how to do this with twisted. In a threaded server I would :

1) wait for a client connection
2) create a thread and hand it the client connection

then the server waits again for the next client connection, the thread 
executes the protocol, e.g. dialogs with the client until disconnection.

I have done this so far using Twisted :

1) created a protocol (the one that would be executed in a separate 
thread in the example above)
2) created a factory and listen for incoming connections.

This works great if I have one connection, but I need multiple 
connections being processed in parallel (simulated parallelism I guess)

Could someone please explain how Twisted works for this or point me to 
some documentation explaining this? I have searched the docs on the 
twisted website and google, but I can't find anything explaining this.

Thank you,
Gabriel



From stephen at thorne.id.au  Thu Feb 21 04:53:47 2008
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Feb 2008 19:53:47 +1000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD44E4.7080508@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>
Message-ID: <AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>

On 21/02/2008, at 7:31 PM, Gabriel Rossetti wrote:
>
> I have done this so far using Twisted :
>
> 1) created a protocol (the one that would be executed in a separate  
> thread in the example above)
> 2) created a factory and listen for incoming connections.
>
> This works great if I have one connection, but I need multiple  
> connections being processed in parallel (simulated parallelism I  
> guess)
>

Twisted handles the multiple connections by being event based. When a  
networking event occurs, you can receive notifications of those events.

For instance:

A new connection is established -> Factory is told, and has the  
ability to create and associate a protocol instance with that  
connection.
Data comes over a connection -> The Protocol object is told via the  
dataReceived method.
A connection is closed -> The Protocol is told via there  
connectionLost method.

Each time these methods are called, you are expected to return from  
them, not do things in while loops. To get more data, you just return  
control to the event loop (aka reactor.run()) and wait for futher  
notifications.

In order to send data, you send it to protocol.transport.write 
(allmydata), and the event loop takes the responsibility of sending  
that data to the other end of the connection.

I hope that helps you with the concepts involved here. I suggest  
playing around with the Echo server example if you want a readable  
example you can poke and prod.

Regards,
Stephen Thorne



From mailing_lists at evotex.ch  Thu Feb 21 05:07:24 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 11:07:24 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
References: <47BD44E4.7080508@evotex.ch>
	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
Message-ID: <47BD4D5C.2070709@evotex.ch>

Stephen Thorne wrote:
> On 21/02/2008, at 7:31 PM, Gabriel Rossetti wrote:
>>
>> I have done this so far using Twisted :
>>
>> 1) created a protocol (the one that would be executed in a separate 
>> thread in the example above)
>> 2) created a factory and listen for incoming connections.
>>
>> This works great if I have one connection, but I need multiple 
>> connections being processed in parallel (simulated parallelism I guess)
>>
>
> Twisted handles the multiple connections by being event based. When a 
> networking event occurs, you can receive notifications of those events.
>
> For instance:
>
> A new connection is established -> Factory is told, and has the 
> ability to create and associate a protocol instance with that connection.
> Data comes over a connection -> The Protocol object is told via the 
> dataReceived method.
> A connection is closed -> The Protocol is told via there 
> connectionLost method.
>
> Each time these methods are called, you are expected to return from 
> them, not do things in while loops. To get more data, you just return 
> control to the event loop (aka reactor.run()) and wait for futher 
> notifications.
>
> In order to send data, you send it to 
> protocol.transport.write(allmydata), and the event loop takes the 
> responsibility of sending that data to the other end of the connection.
>
> I hope that helps you with the concepts involved here. I suggest 
> playing around with the Echo server example if you want a readable 
> example you can poke and prod.
>
> Regards,
> Stephen Thorne
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Thank you Stephan, ok, but is an instance of a protocol created for 
every connection? I tried to add data received  by the protocol to a 
list, and if I get multiple connections that list is filled with all the 
connection's data, like if only one instance existed.

Regards,
Gabriel Rossetti



From p.mayers at imperial.ac.uk  Thu Feb 21 05:32:32 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 10:32:32 +0000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD4D5C.2070709@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
	<47BD4D5C.2070709@evotex.ch>
Message-ID: <47BD5340.80206@imperial.ac.uk>


> Thank you Stephan, ok, but is an instance of a protocol created for 
> every connection? I tried to add data received  by the protocol to a 

For TCP connections, assuming everything is coded correctly, yes.

> list, and if I get multiple connections that list is filled with all the 
> connection's data, like if only one instance existed.

You didn't by any chance use a class variable did you e.g.:

class foo(...):
   my_data = []
   def dataReceived(self, data):
     self.my_data.append(data)

...is wrong. "my_data" is shared by all instances of the class and is 
mutable. You'll need to create instance variables, usually (I believe) 
as part of the factory process.

If you can write a minimal example showing the problem, someone can 
probably tell you what you're doing wrong.



From therve at free.fr  Thu Feb 21 05:45:46 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 21 Feb 2008 11:45:46 +0100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <20080221084702.GD29155@steerpike.home.puzzling.org>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
	<200802210848.35368.therve@free.fr>
	<20080221084702.GD29155@steerpike.home.puzzling.org>
Message-ID: <20080221114546.euvgnjrdw4o8k0sg@wasabox.wasabout.net>

Quoting Andrew Bennetts <andrew-twisted at puzzling.org>:

> Thomas Herv? wrote:
> [...]
>> > [1] I'll be even happier when we have *machines* monitoring the test
>> > suite, but that's another email.
>>
>> Currently, our test suite is a little bit too unreliable to do this
>> (aka 'intermittent failures'). But maybe in a near future...
>
> We've had intermittent failures for *years*.  I doubt that'll get solved in a
> near future without some sort of significant change to how we do things.
>
> Here's a thought experiment: one possibility would be completely automate the
> running of the test suite, as jml is suggesting, e.g. by using a   
> commit hook (or
> a ?commit bot? like PQM) that will run the test suite before   
> allowing a commit
> to trunk.  Then intermittent failures become much more intolerable,   
> because they
> will regularly frustrate developers rather than being something you   
> can usually
> ignore.  Thus people will be much more motivated to find solutions to our
> intermittent tests (whether by fixing the offending tests, or   
> disabling them, or
> something else).
>
> I'm not sure it'd be worth the effort, but it's interesting to think about...


I think it definitely worth the effort. As I see it, maybe we could  
split the effort in 2 parts:
  * having one commit bot for our best supported platform. I think  
debian-py2.4-select has been free of intermittent failure for a bit  
now. Maybe we could trust it enough to disallow commits that breaks  
it. The other advantage for this is that we could formalize the merge  
process a bit more: for example, with a web page where you specify the  
branch name, authors, reviewers, tickets fixed, etc. It looks like  
what PQM is doing.
  * having better notifications for trunk commits that generate failed  
runs. Today, this work is basically done by JP looking at the buildbot  
and remembering the failures and tickets linked to them, and possibly  
creating a new ticket if it's not an already identified problem. It's  
not only cumbersome but probably let some errors pass through.


We could look at this after the release :).

-- 
Thomas





From p.mayers at imperial.ac.uk  Thu Feb 21 06:31:40 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 11:31:40 +0000
Subject: [Twisted-Python] Help
	using	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BD3290.5090305@evotex.ch>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
	<47BD3290.5090305@evotex.ch>
Message-ID: <47BD611C.3050700@imperial.ac.uk>


>>
>> One solution is to have a difference instance for each connection and 
>> to use
>> a bound method as the event handler.  This gives you an obvious 
>> per-instance
>> place to keep state and such - on the instance.  
> 
> Jean-Paul, sorry for the dumb question, when you mean a different 
> instance, you mean a thread? What is a bound method? I'm fairly new to 
> python and very new to twisted (as you can probably tell).


A bound method is a function on a class instance. e.g.:

 >>> class A:
...   def func(self):
...     pass
...
 >>> aa = A()

 >>> A.func
<unbound method A.func>
 >>> aa.func
<bound method A.func of <__main__.A instance at 0x2aaaaab423b0>>

A.func is the unbound method - it's a function object, defined in the 
class, but the class is not instantiated so it's unbound.

aa.func is a bound version of A.func - it's bound to the instance "aa" 
and will fill in the "self" argument when called.


Think about it like this:

When you use 1 thread per connection, your "state" is usually stored as 
local variables inside a function i.e. on the stack.

When you use 1 thread for all connections, your "state" needs to be 
attached to the connection e.g. as instance variables of the protocol or 
an attached object.

So, you might do this:

from twisted.protocols import basic
from twisted.internet import protocol, reactor

class MyProto(basic.LineReceiver):
     def lineReceived(self, line):
         self.data.append(line)

     def connectionLost(self, reason):
         print "my data was", '\n'.join(self.data)

class MyFactory(protocol.ServerFactory):
     protocol = MyProto
     def buildProtocol(self, *pargs, **kwargs):
         p = protocol.ServerFactory.buildProtocol(self, *pargs, **kwargs)
         p.data = []
         return p

reactor.listenTCP(8000, MyFactory())
reactor.run()

Relating to your other email - a similar technique works for more 
complex things e.g.

class MyProto(...)
  def dataReceived(self, data):
   self.parser.push(data)

class MyFactory(...)
  def buildProtocol(...)
    p = ..
    p.parser = XmlParser()




From mailing_lists at evotex.ch  Thu Feb 21 09:06:43 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 15:06:43 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD5340.80206@imperial.ac.uk>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>
	<47BD5340.80206@imperial.ac.uk>
Message-ID: <47BD8573.8000505@evotex.ch>

Phil Mayers wrote:
>
>> Thank you Stephan, ok, but is an instance of a protocol created for 
>> every connection? I tried to add data received  by the protocol to a 
>
> For TCP connections, assuming everything is coded correctly, yes.
>
>> list, and if I get multiple connections that list is filled with all 
>> the connection's data, like if only one instance existed.
>
> You didn't by any chance use a class variable did you e.g.:
>
> class foo(...):
>   my_data = []
>   def dataReceived(self, data):
>     self.my_data.append(data)
>
Yes, that must be it :

    class XmlStreamTestSrv(xmlstream.XmlStream):

        def __init__(self):
            xmlstream.XmlStream.__init__(self)
            self.message = []
    ...

even though I though that in python if you put a "self." in front it was 
an instance variable and not a class variable. I have been also having 
some strange problems, like if I overload

    def connectionMade(self):

it never gets called, even though the parent class (XmlStream) also has 
it, and also I can't call self.transport.getPeer() or 
xmlstream.XmlStream.transport.getPeer(), I get :

    print 'Connection from %s!' % 
str(xmlstream.XmlStream.transport.getPeer())
    exceptions.AttributeError: 'NoneType' object has no attribute 'getPeer'

so maybe something is wrong somewhere.
> ...is wrong. "my_data" is shared by all instances of the class and is 
> mutable. You'll need to create instance variables, usually (I believe) 
> as part of the factory process.
Ok, I'll look into that, thanks.
>
> If you can write a minimal example showing the problem, someone can 
> probably tell you what you're doing wrong.
>
Ok, thanks, here's a minimal example :

    from twisted.words.xish import xmlstream, domish
    from twisted.internet import reactor, protocol
    from twisted.internet.protocol import Protocol, Factory
    from twisted.words.xish import xpath


    class XmlStreamTestSrv(xmlstream.XmlStream):

        def __init__(self):
            xmlstream.XmlStream.__init__(self)
            self.message = []

        def connectionMade(self): # never called, why?
            print 'Connected :' #, string(self.transport.getPeer().host)

        def _onHeader(self, element):
            #print "got header from % : %s" % 
(str(self.transport.getPeer().host), element.toXml())
            self.message.append(element.toXml())

        def _connected(self, xs):
            #print 'Connection from %s!' % 
str(xmlstream.XmlStream.transport.getPeer().host)
            xs.addObserver("/header", self._onHeader)

    if __name__ == "__main__":

        c = XmlStreamTestSrv()

        f = xmlstream.XmlStreamFactory()
        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)

        reactor.listenTCP(4321, f)
        reactor.run()


Regards,
Gabriel Rossetti



From p.mayers at imperial.ac.uk  Thu Feb 21 09:52:19 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 14:52:19 +0000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD8573.8000505@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>
	<47BD8573.8000505@evotex.ch>
Message-ID: <47BD9023.9010501@imperial.ac.uk>

>> You didn't by any chance use a class variable did you e.g.:
>>
>> class foo(...):
>>   my_data = []
>>   def dataReceived(self, data):
>>     self.my_data.append(data)
>>
> Yes, that must be it :
> 
>    class XmlStreamTestSrv(xmlstream.XmlStream):
> 
>        def __init__(self):
>            xmlstream.XmlStream.__init__(self)
>            self.message = []

No, this is fine, as you say setting "self.foo" creates an instance 
variable.

I personally don't use __init__ methods of the protocol because I 
believe some protocols make complex use of this, but it should be fine.

>    ...
> 
> even though I though that in python if you put a "self." in front it was 
> an instance variable and not a class variable. I have been also having 
> some strange problems, like if I overload
> 
>    def connectionMade(self):
> 
> it never gets called, even though the parent class (XmlStream) also has 
> it, and also I can't call self.transport.getPeer() or 
> xmlstream.XmlStream.transport.getPeer(), I get :
> 
>    print 'Connection from %s!' % 
> str(xmlstream.XmlStream.transport.getPeer())
>    exceptions.AttributeError: 'NoneType' object has no attribute 'getPeer'
> 
> so maybe something is wrong somewhere.

It sounds like the protocol isn't being hooked up to the transport.

>> ...is wrong. "my_data" is shared by all instances of the class and is 
>> mutable. You'll need to create instance variables, usually (I believe) 
>> as part of the factory process.
> Ok, I'll look into that, thanks.
>>
>> If you can write a minimal example showing the problem, someone can 
>> probably tell you what you're doing wrong.
>>
> Ok, thanks, here's a minimal example :
> 
>    from twisted.words.xish import xmlstream, domish
>    from twisted.internet import reactor, protocol
>    from twisted.internet.protocol import Protocol, Factory
>    from twisted.words.xish import xpath
> 
> 
>    class XmlStreamTestSrv(xmlstream.XmlStream):
> 
>        def __init__(self):
>            xmlstream.XmlStream.__init__(self)
>            self.message = []
> 
>        def connectionMade(self): # never called, why?
>            print 'Connected :' #, string(self.transport.getPeer().host)
> 
>        def _onHeader(self, element):
>            #print "got header from % : %s" % 
> (str(self.transport.getPeer().host), element.toXml())
>            self.message.append(element.toXml())
> 
>        def _connected(self, xs):
>            #print 'Connection from %s!' % 
> str(xmlstream.XmlStream.transport.getPeer().host)
>            xs.addObserver("/header", self._onHeader)
> 
>    if __name__ == "__main__":
> 
>        c = XmlStreamTestSrv()
> 
>        f = xmlstream.XmlStreamFactory()
>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
> 
>        reactor.listenTCP(4321, f)
>        reactor.run()

Ah - you need to set the "protocol" attribute on the factory to the 
protocol *class*, and then when a connection is made the class will be 
instantiated and connected to the transport. This is why self.transport 
is None, and because you're using an instance of the protocol, the data 
is getting squashed together. Do this:

f = xmlstream.XmlStreamFactory()
f.protocol = XmlStreamTestSrv
reactor.listenTCP(4321, f)
reactor.run()




From mailing_lists at evotex.ch  Thu Feb 21 10:42:44 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 16:42:44 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD9023.9010501@imperial.ac.uk>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>	<47BD8573.8000505@evotex.ch>
	<47BD9023.9010501@imperial.ac.uk>
Message-ID: <47BD9BF4.5030408@evotex.ch>

Phil Mayers wrote:
>>> You didn't by any chance use a class variable did you e.g.:
>>>
>>> class foo(...):
>>>   my_data = []
>>>   def dataReceived(self, data):
>>>     self.my_data.append(data)
>>>
>> Yes, that must be it :
>>
>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>
>>        def __init__(self):
>>            xmlstream.XmlStream.__init__(self)
>>            self.message = []
>
> No, this is fine, as you say setting "self.foo" creates an instance 
> variable.
>
> I personally don't use __init__ methods of the protocol because I 
> believe some protocols make complex use of this, but it should be fine.
>
>>    ...
>>
>> even though I though that in python if you put a "self." in front it 
>> was an instance variable and not a class variable. I have been also 
>> having some strange problems, like if I overload
>>
>>    def connectionMade(self):
>>
>> it never gets called, even though the parent class (XmlStream) also 
>> has it, and also I can't call self.transport.getPeer() or 
>> xmlstream.XmlStream.transport.getPeer(), I get :
>>
>>    print 'Connection from %s!' % 
>> str(xmlstream.XmlStream.transport.getPeer())
>>    exceptions.AttributeError: 'NoneType' object has no attribute 
>> 'getPeer'
>>
>> so maybe something is wrong somewhere.
>
> It sounds like the protocol isn't being hooked up to the transport.
>
>>> ...is wrong. "my_data" is shared by all instances of the class and 
>>> is mutable. You'll need to create instance variables, usually (I 
>>> believe) as part of the factory process.
>> Ok, I'll look into that, thanks.
>>>
>>> If you can write a minimal example showing the problem, someone can 
>>> probably tell you what you're doing wrong.
>>>
>> Ok, thanks, here's a minimal example :
>>
>>    from twisted.words.xish import xmlstream, domish
>>    from twisted.internet import reactor, protocol
>>    from twisted.internet.protocol import Protocol, Factory
>>    from twisted.words.xish import xpath
>>
>>
>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>
>>        def __init__(self):
>>            xmlstream.XmlStream.__init__(self)
>>            self.message = []
>>
>>        def connectionMade(self): # never called, why?
>>            print 'Connected :' #, string(self.transport.getPeer().host)
>>
>>        def _onHeader(self, element):
>>            #print "got header from % : %s" % 
>> (str(self.transport.getPeer().host), element.toXml())
>>            self.message.append(element.toXml())
>>
>>        def _connected(self, xs):
>>            #print 'Connection from %s!' % 
>> str(xmlstream.XmlStream.transport.getPeer().host)
>>            xs.addObserver("/header", self._onHeader)
>>
>>    if __name__ == "__main__":
>>
>>        c = XmlStreamTestSrv()
>>
>>        f = xmlstream.XmlStreamFactory()
>>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
>>
>>        reactor.listenTCP(4321, f)
>>        reactor.run()
>
> Ah - you need to set the "protocol" attribute on the factory to the 
> protocol *class*, and then when a connection is made the class will be 
> instantiated and connected to the transport. This is why 
> self.transport is None, and because you're using an instance of the 
> protocol, the data is getting squashed together. Do this:
>
> f = xmlstream.XmlStreamFactory()
> f.protocol = XmlStreamTestSrv
> reactor.listenTCP(4321, f)
> reactor.run()
>
Ahh, ok, I get it, and I should therefor subclass 
xmlstream.XmlStreamFactory and add the bootstrap there, something like :

    class MyXmlStreamFactory(xmlstream.XmlStreamFactory):

        protocol = XmlStreamTestSrv

        def buildProtocol(self, *pargs, **kwargs):
            p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
**kwargs)
            addBootstrap(xmlstream.STREAM_START_EVENT, p._connected)

            return p

Regards,
Gabriel Rossetti



From mailing_lists at evotex.ch  Thu Feb 21 11:05:32 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 17:05:32 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD9BF4.5030408@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>	<47BD8573.8000505@evotex.ch>	<47BD9023.9010501@imperial.ac.uk>
	<47BD9BF4.5030408@evotex.ch>
Message-ID: <47BDA14C.9070103@evotex.ch>

Gabriel Rossetti wrote:
> Phil Mayers wrote:
>>>> You didn't by any chance use a class variable did you e.g.:
>>>>
>>>> class foo(...):
>>>>   my_data = []
>>>>   def dataReceived(self, data):
>>>>     self.my_data.append(data)
>>>>
>>> Yes, that must be it :
>>>
>>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>>
>>>        def __init__(self):
>>>            xmlstream.XmlStream.__init__(self)
>>>            self.message = []
>>
>> No, this is fine, as you say setting "self.foo" creates an instance 
>> variable.
>>
>> I personally don't use __init__ methods of the protocol because I 
>> believe some protocols make complex use of this, but it should be fine.
>>
>>>    ...
>>>
>>> even though I though that in python if you put a "self." in front it 
>>> was an instance variable and not a class variable. I have been also 
>>> having some strange problems, like if I overload
>>>
>>>    def connectionMade(self):
>>>
>>> it never gets called, even though the parent class (XmlStream) also 
>>> has it, and also I can't call self.transport.getPeer() or 
>>> xmlstream.XmlStream.transport.getPeer(), I get :
>>>
>>>    print 'Connection from %s!' % 
>>> str(xmlstream.XmlStream.transport.getPeer())
>>>    exceptions.AttributeError: 'NoneType' object has no attribute 
>>> 'getPeer'
>>>
>>> so maybe something is wrong somewhere.
>>
>> It sounds like the protocol isn't being hooked up to the transport.
>>
>>>> ...is wrong. "my_data" is shared by all instances of the class and 
>>>> is mutable. You'll need to create instance variables, usually (I 
>>>> believe) as part of the factory process.
>>> Ok, I'll look into that, thanks.
>>>>
>>>> If you can write a minimal example showing the problem, someone can 
>>>> probably tell you what you're doing wrong.
>>>>
>>> Ok, thanks, here's a minimal example :
>>>
>>>    from twisted.words.xish import xmlstream, domish
>>>    from twisted.internet import reactor, protocol
>>>    from twisted.internet.protocol import Protocol, Factory
>>>    from twisted.words.xish import xpath
>>>
>>>
>>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>>
>>>        def __init__(self):
>>>            xmlstream.XmlStream.__init__(self)
>>>            self.message = []
>>>
>>>        def connectionMade(self): # never called, why?
>>>            print 'Connected :' #, string(self.transport.getPeer().host)
>>>
>>>        def _onHeader(self, element):
>>>            #print "got header from % : %s" % 
>>> (str(self.transport.getPeer().host), element.toXml())
>>>            self.message.append(element.toXml())
>>>
>>>        def _connected(self, xs):
>>>            #print 'Connection from %s!' % 
>>> str(xmlstream.XmlStream.transport.getPeer().host)
>>>            xs.addObserver("/header", self._onHeader)
>>>
>>>    if __name__ == "__main__":
>>>
>>>        c = XmlStreamTestSrv()
>>>
>>>        f = xmlstream.XmlStreamFactory()
>>>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>>>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
>>>
>>>        reactor.listenTCP(4321, f)
>>>        reactor.run()
>>
>> Ah - you need to set the "protocol" attribute on the factory to the 
>> protocol *class*, and then when a connection is made the class will 
>> be instantiated and connected to the transport. This is why 
>> self.transport is None, and because you're using an instance of the 
>> protocol, the data is getting squashed together. Do this:
>>
>> f = xmlstream.XmlStreamFactory()
>> f.protocol = XmlStreamTestSrv
>> reactor.listenTCP(4321, f)
>> reactor.run()
>>
> Ahh, ok, I get it, and I should therefor subclass 
> xmlstream.XmlStreamFactory and add the bootstrap there, something like :
>
>    class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>
>        protocol = XmlStreamTestSrv
>
>        def buildProtocol(self, *pargs, **kwargs):
>            p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
> **kwargs)
>            addBootstrap(xmlstream.STREAM_START_EVENT, p._connected)
>
>            return p
>
> Regards,
> Gabriel Rossetti
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Sorry, I made a mistake, that should be :


   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):

       protocol = XmlStreamTestSrv

       def buildProtocol(self, *pargs, **kwargs):
           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
**kwargs)
           
xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
p._connected)

           return p

but I get this error :

    File "test.py", line 91, in buildProtocol
    
xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
p._connected)
    exceptions.AttributeError: XmlStream instance has no attribute 
'_connected'

isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a XmlStream?

Gabriel



From exarkun at divmod.com  Thu Feb 21 11:22:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 21 Feb 2008 11:22:06 -0500
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BDA14C.9070103@evotex.ch>
Message-ID: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>

On Thu, 21 Feb 2008 17:05:32 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Sorry, I made a mistake, that should be :
>
>
>   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>
>       protocol = XmlStreamTestSrv
>
>       def buildProtocol(self, *pargs, **kwargs):
>           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
>**kwargs)
>xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>p._connected)
>
>           return p
>
>but I get this error :
>
>    File "test.py", line 91, in buildProtocol
>    xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>p._connected)
>    exceptions.AttributeError: XmlStream instance has no attribute 
>'_connected'
>
>isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a XmlStream?
>

In Twisted 2.5, XmlStreamFactory ignores its `protocol? attribute.  In the
next release, it will respect it.  Until then, you'll have to instantiate
the protocol yourself.  This is quite simple.  The base implementation of
buildProtocol in current trunk at HEAD just does this:

    def buildProtocol(self, addr):
        """
        Create an instance of XmlStream.

        The returned instance will have bootstrap event observers registered
        and will proceed to handle input on an incoming connection.
        """
        xs = self.protocol(*self.args, **self.kwargs)
        xs.factory = self
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)
        return xs

Jean-Paul



From mailing_lists at evotex.ch  Thu Feb 21 11:33:30 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 17:33:30 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>
References: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>
Message-ID: <47BDA7DA.1030108@evotex.ch>

Jean-Paul Calderone wrote:
> On Thu, 21 Feb 2008 17:05:32 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> Sorry, I made a mistake, that should be :
>>
>>
>>   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>>
>>       protocol = XmlStreamTestSrv
>>
>>       def buildProtocol(self, *pargs, **kwargs):
>>           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
>> **kwargs)
>> xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>> p._connected)
>>
>>           return p
>>
>> but I get this error :
>>
>>    File "test.py", line 91, in buildProtocol
>>    
>> xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>> p._connected)
>>    exceptions.AttributeError: XmlStream instance has no attribute 
>> '_connected'
>>
>> isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a 
>> XmlStream?
>>
>
> In Twisted 2.5, XmlStreamFactory ignores its `protocol? attribute.  In 
> the
> next release, it will respect it.  Until then, you'll have to instantiate
> the protocol yourself.  This is quite simple.  The base implementation of
> buildProtocol in current trunk at HEAD just does this:
>
>    def buildProtocol(self, addr):
>        """
>        Create an instance of XmlStream.
>
>        The returned instance will have bootstrap event observers 
> registered
>        and will proceed to handle input on an incoming connection.
>        """
>        xs = self.protocol(*self.args, **self.kwargs)
>        xs.factory = self
>        for event, fn in self.bootstraps:
>            xs.addObserver(event, fn)
>        return xs
>
> Jean-Paul
>
Ahh, ok, so using will never work :-)

ok, I'll do that then, thanks!

Gabriel



From andrewfr_ice at yahoo.com  Thu Feb 21 17:00:07 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 21 Feb 2008 14:00:07 -0800 (PST)
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question
In-Reply-To: <E1JS6YK-0001He-JD@cube.twistedmatrix.com>
Message-ID: <390541.42037.qm@web34214.mail.mud.yahoo.com>

Hi Jean-Paul:

>Depending on the value returned by a method is an API
>decision made by whoever implemented the protocol.

...

>The only kind of dispatcher which is really hostile
>towards inlineCallbacks is the kind which is hostile
>towards Deferreds in general - ie, one which requires
>a return value and does not support Deferreds.

This is extremely *helpful*. From reading the
"Evolution of Finger" paper, I am realising that
Deferreds are also used in ServerProtocols (this makes
sense).

>Not really.  It's just an API.  Unless the return
>value isn't allowed to be a Deferred, there's little
>difference between using the return
>value and ignoring it.

...

>The reactor doesn't care.  This is all pyAMF stuff. 
>pyAMF accepts Deferreds (again, near as I can tell)
>and treats their eventual result as the response to
>the request, sending it off in whatever
>way is appropriate for AMF.

I notice that I am using an old version of pyAMF. When
I tried callbacks, a string representation of the
Deferred was sent back to my client. Looking at the
latest version (I can't install and use it right now),
I see lines like "A Twisted Friendly implement"
version and __call__ returns a deferred.

Once again Jean-Paul, I find your explanation super
helpful and save me time going down the wrong path. 

Cheers,
Andrew




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From phil-twisted at tuxeo.org  Fri Feb 22 14:54:30 2008
From: phil-twisted at tuxeo.org (Philippe Frycia)
Date: Fri, 22 Feb 2008 20:54:30 +0100
Subject: [Twisted-Python] How to make a custom transport based on
	sendmsg/recvmsg?
In-Reply-To: <87mypyqaq0.fsf@hbox.dyndns.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>	<47B9B3A0.3050909@imperial.ac.uk>
	<87mypyqaq0.fsf@hbox.dyndns.org>
Message-ID: <47BF2876.2060804@tuxeo.org>

Hi,

I would like to make a custom protocol, based on Unix sockets, that is
able to send and receive file descriptors in addition to regular
"stream" data.
At the low level, I can do this with a patched version of eunuchs, that
adds sendmsg() and recvmsg() functionality to python.

I have tried to find my way in the Twisted API documentation and in the
sources, and as far as I found out, I have to override the doWrite()
method of the abstract.FileDescriptor class, and the doRead() method of
one of its subclasses.


The only way I have found until now is to do this in the Protocol
subclass like this:

class TLVProtocol(Protocol):
    def doWrite(self):
        if len(self.tlvstosend)==0:
            self.transport.stopWriting()
            return 0
        tlv=self.tlvstosend.pop(0)
        (files,ancillary)=tlv.encode()
        sendmsg(self.transport.socket.fileno(), data, ancillary=ancillary)

    def doRead(self):
        (data, dummy, dummy, ancillary) =
recvmsg(self.transport.socket.fileno())
        if len(data)==0:
            return 0
        tlv=encode(data, ancillary)
        .... # process tlv object

    def connectionMade(self):
        self.tlvstosend=[]
        self.transport.doWrite=self.doWrite
        self.transport.doRead=self.doRead
        ...

    def sendtlv(self, tlv):
        self.tlvstosend.append(tlv)
        self.transport.startWriting()



Some of the return values are not completed yet (EOF, ...).
Am I completely on the wrong track here ?
If not, what other methods of self.transport do I need to override ?
If yes, what is the correct way to do this ?

Thanks.




From drew.smathers at gmail.com  Fri Feb 22 16:35:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 22 Feb 2008 16:35:52 -0500
Subject: [Twisted-Python] How to make a custom transport based on
	sendmsg/recvmsg?
In-Reply-To: <47BF2876.2060804@tuxeo.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
	<47BF2876.2060804@tuxeo.org>
Message-ID: <368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>

On Fri, Feb 22, 2008 at 2:54 PM, Philippe Frycia <phil-twisted at tuxeo.org> wrote:
> Hi,
>
>  I would like to make a custom protocol, based on Unix sockets, that is
>  able to send and receive file descriptors in addition to regular
>  "stream" data.

You should not make assumptions about the transport layer in your
protocol implementation - be it Unix domain sockets, TCP, etc.

>  At the low level, I can do this with a patched version of eunuchs, that
>  adds sendmsg() and recvmsg() functionality to python.
>
>  I have tried to find my way in the Twisted API documentation and in the
>  sources, and as far as I found out, I have to override the doWrite()
>  method of the abstract.FileDescriptor class, and the doRead() method of
>  one of its subclasses.
>
>
>  The only way I have found until now is to do this in the Protocol
>  subclass like this:
>
>  class TLVProtocol(Protocol):
>     def doWrite(self):
>         if len(self.tlvstosend)==0:
>             self.transport.stopWriting()
>             return 0
>         tlv=self.tlvstosend.pop(0)
>         (files,ancillary)=tlv.encode()
>         sendmsg(self.transport.socket.fileno(), data, ancillary=ancillary)
>

If you don't see an attribute documented in the interface for
something (ITransport here for example), and you're referencing it on
the implementation, then you're most definitely doing something bad.
The attribute I'm talking about here is "socket."

>     def doRead(self):
>         (data, dummy, dummy, ancillary) =
>  recvmsg(self.transport.socket.fileno())
>         if len(data)==0:
>             return 0
>         tlv=encode(data, ancillary)
>         .... # process tlv object
>
>     def connectionMade(self):
>         self.tlvstosend=[]
>         self.transport.doWrite=self.doWrite
>         self.transport.doRead=self.doRead
>         ...
>
>     def sendtlv(self, tlv):
>         self.tlvstosend.append(tlv)
>         self.transport.startWriting()
>
>
>
>  Some of the return values are not completed yet (EOF, ...).
>  Am I completely on the wrong track here ?

It sounds like you're trying to do something relatively low-level
(interfacing with eunuchs directly) at a high-level using Protocols.
So to do something that isn't just a hack, you'll need to do a lot
more work - and it might not be worth the effort.  Can you describe
first why you need to use sendmsg/recvmsg in your application?

Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From phil-twisted at tuxeo.org  Fri Feb 22 17:10:35 2008
From: phil-twisted at tuxeo.org (Philippe Frycia)
Date: Fri, 22 Feb 2008 23:10:35 +0100
Subject: [Twisted-Python] How to make a custom transport based
	on	sendmsg/recvmsg?
In-Reply-To: <368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>	<47B9B3A0.3050909@imperial.ac.uk>
	<87mypyqaq0.fsf@hbox.dyndns.org>	<47BF2876.2060804@tuxeo.org>
	<368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>
Message-ID: <47BF485B.5070206@tuxeo.org>

Drew Smathers wrote:
> You should not make assumptions about the transport layer in your
> protocol implementation - be it Unix domain sockets, TCP, etc.
>   
In my case, it is not only an assumption: the applications I want to 
interact with do use unix sockets and file descriptor passing.
Maybe my assumption that I need to use a Protocol is wrong, if I need a 
specific transport.

> If you don't see an attribute documented in the interface for
> something (ITransport here for example), and you're referencing it on
> the implementation, then you're most definitely doing something bad.
> The attribute I'm talking about here is "socket."
>   
OK. So what attribute(s) do I have to replace/override to plug my 
low-level read/write routines in a protocol ?

> It sounds like you're trying to do something relatively low-level
> (interfacing with eunuchs directly) at a high-level using Protocols.
>   
Maybe I don't need to use a Protocol at all. But what else ?
> So to do something that isn't just a hack, you'll need to do a lot
> more work - and it might not be worth the effort.  Can you describe
> first why you need to use sendmsg/recvmsg in your application?
>   

As I said above, I would like to interact with a set of (existing) 
applications that use unix sockets and TLV-based messages for 
interprocess communication.
They also use file descriptor passing with sendmsg/recvmsg.
In fact, this is the way they find each other: services announce 
themselves to a central broker, and clients ask for services to this 
broker. The broker then creates a socketpair and passes the file 
descriptor of both ends to each party.
They also make use of this file descriptor passing mechanism to use 
specific devices from different processes while keeping their state and 
"ownership": once one process has made some initialization on a device, 
it can pass the descriptor to another process that can use it further.

The C framework on which these applications are written is completely 
asynchronous and the model seems fine.
I was able to use asyncore with eunuchs to do this low-level stuff as 
prototype, but I really would like to use Twisted instead.

As far as I can see, the low-level doRead and doWrite implementations 
are about the only thing I have to plug in the system to have it working.
In fact my sample code is mostly working, I just want to be sure I do it 
The Right Way, if at all possible.

Please, don't tell me Twisted is not made for something other than byte 
stream based comms... :-)

Thank you for your help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080222/db13b90e/attachment.htm 

From stephen_leake at stephe-leake.org  Sat Feb 23 04:12:41 2008
From: stephen_leake at stephe-leake.org (Stephen Leake)
Date: Sat, 23 Feb 2008 04:12:41 -0500
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
Message-ID: <uve4ggho6.fsf@stephe-leake.org>

I'm attempting to install Twisted using the Cygwin installation of
Python. This is my first time using Python; I'm setting up a buildbot
for monotone (http://www.venge.net/mtn-wiki/BuildBot).

I could probably make things work with a native Win32 installation of
Python, but I suspect it would be simpler in the long run to get the
Cygwin version working.

The first problem is the location and name of the Python library.
Cygwin puts it in:

/lib/python2.5/config/python2.5.dll.a

But the default Twisted install scripts use this link option:

-lpython2.5

Changing that to:

-L/lib/python2.5/config -lpython2.5.dll

lets some of the links succeed. 

I'm doing this by manually re-executing the link step, after editing
the command line options.

How do I tell the Twisted install system where the Python library is,
so it gets the link command correct? I read setup.py, and poked around
in some other scripts, but I don't see where this option is set. I'm
used to debuging Gnu configure scripts, but Python setup is new to me.  


Another link problem is with TwistedRunner:

gcc -shared -Wl,--enable-auto-image-base build/temp.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.o -L/lib/python2.5/config -lpython2.5.dll -o build/lib.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.dll
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:24: undefined reference to `_pmap_unset'
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:25: undefined reference to `_pmap_set'
build/temp.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.o: In function `portmap_unset':
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:39: undefined reference to `_pmap_unset'

pmap_set and pmap_unset are defined in <rpc/pmap_clnt.h>. What library
are these functions in?

--
-- Stephe



From zooko at zooko.com  Sat Feb 23 10:20:52 2008
From: zooko at zooko.com (zooko)
Date: Sat, 23 Feb 2008 08:20:52 -0700
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <uve4ggho6.fsf@stephe-leake.org>
References: <uve4ggho6.fsf@stephe-leake.org>
Message-ID: <50ECC97F-C733-49F8-B4AE-68DB8703F675@zooko.com>

When I want to install Twisted on cygwin, using the cygwin version of  
Python, I just get the twisted sumo source tarball, untar it, and run  
"python ./setup.py install".  That's all.

Is that what you did?

I don't really understand the problems you encountered, starting with  
not understanding why you need to know the location of a Python DLL.

Oh, I have a theory.  I theorize that you tried to use a Twisted  
"binary" package.  I think it is a bad idea in general to use a  
binary package of software when you can get the source instead, and  
in particular I think that installing Twisted is much easier on all  
platforms including Windows and Cygwin if you do it from the Twisted  
source tarball than if you do it from the "binary package".

Regards,

Zooko



From ssmiley483 at yahoo.com  Sat Feb 23 18:42:03 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Sat, 23 Feb 2008 15:42:03 -0800 (PST)
Subject: [Twisted-Python] Twisted.Web, Twisted.Web2, or something else?
Message-ID: <726698.86076.qm@web31105.mail.mud.yahoo.com>

Hi all, 

What is the groups opinion on which web library to use as the basis of my system?

I've started the work using Twisted.Web, but would like a sanity check before I go too far down this path.

The piece of a larger system that I'm working on is basically a generic communication bridge application that will allow various external systems to talk to our system.  The initial release of this system is implementing a simple HTTP GET Server that allows the external systems to use a URL to either send small amounts of data to or request data from our system.

Here is an example scenario:

Our bridge application would be installed on an interactive kiosk.  The kiosk presentation would be able to report usage data by calling a URL such as http://localhost:8000/ReportUsage?ScreenID=1234.  The bridge application would receive this request, write it to a local data cache for later batch uploading to a central server.  The local HTTP Server would return a simple text or XML response to the calling application to indicate success/failure of the request.

Eventually we want to have a variety of interfaces that are tailored to specific types of applications.  But for right now we're looking at implementing the lowest common denominator which is exchanging information via simple HTTP calls.


So getting back to my original question, is Twisted.Web or Twisted.Web2 the better framework to use in this case or is there another framework than Twisted that may work better?


NOTE: I'm working in Python 2.5 and Twisted 2.5 if that makes any difference. Primary development is being done on Linux but with the goal of being able to run on Linux, Windows, or Mac.

Thanks in advance for your suggestions and comments.

-Shawn




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at twistedmatrix.com  Sun Feb 24 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Feb 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1203829507.12.665603988@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080224/7553f3b8/attachment.htm 

From michal.dtz at gmail.com  Sun Feb 24 05:15:13 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Sun, 24 Feb 2008 11:15:13 +0100
Subject: [Twisted-Python] Twisted.Web, Twisted.Web2, or something else?
In-Reply-To: <726698.86076.qm@web31105.mail.mud.yahoo.com>
References: <726698.86076.qm@web31105.mail.mud.yahoo.com>
Message-ID: <20080224111513.73d10e97@2step.chello.pl>

Dnia 2008-02-23, o godz. 15:42:03
Shawn Smiley <ssmiley483 at yahoo.com> napisa?(a):

> Hi all, 
> 
> What is the groups opinion on which web library to use as the basis
> of my system?
> 
> I've started the work using Twisted.Web, but would like a sanity
> check before I go too far down this path.

Please read this document:

	http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted

Twisted Web has its own mailing list here:

	http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-- 
m



From matt at madebykite.com  Sun Feb 24 05:48:37 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 10:48:37 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
Message-ID: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>

Hi All,

Hope you are all enjoying your weekends.

I have a simple twisted proxy server, obviously passed on  
twisted.web.proxy. Periodically, it makes a call to a MySQL database,  
using adbapi.ConnectionPool.

When I initially boot the server, I see traffic going through the  
proxy and everything works fine, twistd consumes less than 5% CPU. I  
return 24 hours later, the server is still responsive (ie. functions  
fine) but it consumes 100% of the CPU.

I have only noticed this behaviour since I added the db connection  
via adbapi. I assume, because the proxy still functions well that the  
threads in the adbapi pool are working overtime.

When I manhole in to the server, gc.collect() shows objects are being  
cleaned up, and gc.garbage reports nothing.

I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL 5.0.51a.

Does anyone have any experience of this problem? Is there an easy  
workaround?

Thanks for your time :)


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From matt at madebykite.com  Sun Feb 24 06:11:20 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 11:11:20 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
Message-ID: <2886502A-D9C6-4E24-83D8-673874FE17FB@madebykite.com>

Sorry, that should be *based* not passed on!

On 24 Feb 2008, at 10:48, Matthew Glubb wrote:

> I have a simple twisted proxy server, obviously passed on  
> twisted.web.proxy.




From therve at free.fr  Sun Feb 24 06:17:49 2008
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Sun, 24 Feb 2008 12:17:49 +0100
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
Message-ID: <47C1525D.4030501@free.fr>

Matthew Glubb a ?crit :
> Hi All,
>
> Hope you are all enjoying your weekends.
>
> I have a simple twisted proxy server, obviously passed on 
> twisted.web.proxy. Periodically, it makes a call to a MySQL database, 
> using adbapi.ConnectionPool.
>
> When I initially boot the server, I see traffic going through the 
> proxy and everything works fine, twistd consumes less than 5% CPU. I 
> return 24 hours later, the server is still responsive (ie. functions 
> fine) but it consumes 100% of the CPU.
>
> I have only noticed this behaviour since I added the db connection via 
> adbapi. I assume, because the proxy still functions well that the 
> threads in the adbapi pool are working overtime.
>
> When I manhole in to the server, gc.collect() shows objects are being 
> cleaned up, and gc.garbage reports nothing.
>
> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL 5.0.51a.
>
> Does anyone have any experience of this problem? Is there an easy 
> workaround?
Unfortunately, this is a known problem with epoll on Twisted 2.5. 
Fortunately, this has been fixed in trunk. You can see more informations 
at http://twistedmatrix.com/trac/ticket/2809. There is different 
workaround for Twisted 2.5, either by backporting epollreactor from 
trunk, or applying one of the small patch proposed.

-- 
Thomas



From matt at madebykite.com  Sun Feb 24 09:08:22 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 14:08:22 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <47C1525D.4030501@free.fr>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
	<47C1525D.4030501@free.fr>
Message-ID: <40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>

Brilliant. Thanks Thomas. It's nice to know that it can be fixed :)

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 24 Feb 2008, at 11:17, Thomas Herv? wrote:

> Matthew Glubb a ?crit :
>> Hi All,
>>
>> Hope you are all enjoying your weekends.
>>
>> I have a simple twisted proxy server, obviously passed on  
>> twisted.web.proxy. Periodically, it makes a call to a MySQL  
>> database, using adbapi.ConnectionPool.
>>
>> When I initially boot the server, I see traffic going through the  
>> proxy and everything works fine, twistd consumes less than 5% CPU.  
>> I return 24 hours later, the server is still responsive (ie.  
>> functions fine) but it consumes 100% of the CPU.
>>
>> I have only noticed this behaviour since I added the db connection  
>> via adbapi. I assume, because the proxy still functions well that  
>> the threads in the adbapi pool are working overtime.
>>
>> When I manhole in to the server, gc.collect() shows objects are  
>> being cleaned up, and gc.garbage reports nothing.
>>
>> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL  
>> 5.0.51a.
>>
>> Does anyone have any experience of this problem? Is there an easy  
>> workaround?
> Unfortunately, this is a known problem with epoll on Twisted 2.5.  
> Fortunately, this has been fixed in trunk. You can see more  
> informations at http://twistedmatrix.com/trac/ticket/2809. There is  
> different workaround for Twisted 2.5, either by backporting  
> epollreactor from trunk, or applying one of the small patch proposed.
>
> -- 
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matt at madebykite.com  Sun Feb 24 14:37:15 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 19:37:15 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
	<47C1525D.4030501@free.fr>
	<40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>
Message-ID: <6DC1EB87-6767-4B04-84D9-57EEFE30ECCE@madebykite.com>

I just wanted to say thanks for your guidance regarding my epoll  
problem. I copied twisted.internet.epollreactor.py from trunk and it  
seems to be fine now.

Regards,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 24 Feb 2008, at 14:08, Matthew Glubb wrote:

> Brilliant. Thanks Thomas. It's nice to know that it can be fixed :)
>
> Matt
> 	
>
> Matthew Glubb
> Technical Partner
>
> email: matthew.glubb at madebykite.com
> phone: 44 (0) 7715 754017
> skype: mglubb
>
> Kite
> http://madebykite.com
>
> --
> GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244
>
> On 24 Feb 2008, at 11:17, Thomas Herv? wrote:
>
>> Matthew Glubb a ?crit :
>>> Hi All,
>>>
>>> Hope you are all enjoying your weekends.
>>>
>>> I have a simple twisted proxy server, obviously passed on  
>>> twisted.web.proxy. Periodically, it makes a call to a MySQL  
>>> database, using adbapi.ConnectionPool.
>>>
>>> When I initially boot the server, I see traffic going through the  
>>> proxy and everything works fine, twistd consumes less than 5%  
>>> CPU. I return 24 hours later, the server is still responsive (ie.  
>>> functions fine) but it consumes 100% of the CPU.
>>>
>>> I have only noticed this behaviour since I added the db  
>>> connection via adbapi. I assume, because the proxy still  
>>> functions well that the threads in the adbapi pool are working  
>>> overtime.
>>>
>>> When I manhole in to the server, gc.collect() shows objects are  
>>> being cleaned up, and gc.garbage reports nothing.
>>>
>>> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL  
>>> 5.0.51a.
>>>
>>> Does anyone have any experience of this problem? Is there an easy  
>>> workaround?
>> Unfortunately, this is a known problem with epoll on Twisted 2.5.  
>> Fortunately, this has been fixed in trunk. You can see more  
>> informations at http://twistedmatrix.com/trac/ticket/2809. There  
>> is different workaround for Twisted 2.5, either by backporting  
>> epollreactor from trunk, or applying one of the small patch proposed.
>>
>> -- 
>> Thomas
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andreww at datanet.ab.ca  Mon Feb 25 03:08:26 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Mon, 25 Feb 2008 01:08:26 -0700
Subject: [Twisted-Python] http proxy
In-Reply-To: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
References: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
Message-ID: <47C2777A.6040804@datanet.ab.ca>

Vasil Vangelovski wrote:

>I'm trying to set up a http proxy which will write redirects to the
>client if it requests certain uri but work as a normal proxy for
>others. Can this be done with the higher level proxy classes, if so,
>how?
>  
>
Not easily. The proxy classes included with Twisted only really work for 
a simple transparent non-authenticating proxy. Also, twisted.web2.proxy 
was incomplete and didn't work the last time I checked. 
twisted.web.proxy works, but is only compatible with HTTP/1.0 and does 
not allow persistent connections or pipelining.

<shameless plug>
I am in the process of writing a Twisted-based proxy that supports 
filter plugins (the site is http://xuproxy.sourceforge.net). Currently, 
it is in an alpha state (transparent HTTP proxying with pipelining 
support appears to be fully working, but there may be major bugs 
lurking), so I wouldn't recommend using it for production use.
</shameless plug>




From matt at madebykite.com  Mon Feb 25 03:27:05 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Mon, 25 Feb 2008 08:27:05 +0000
Subject: [Twisted-Python] http proxy
In-Reply-To: <47C2777A.6040804@datanet.ab.ca>
References: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
	<47C2777A.6040804@datanet.ab.ca>
Message-ID: <34264645-E26C-468A-9C69-BE348B8637D4@madebykite.com>

I make use of the twisted web proxy.

I tend to set it up as a cache_peer parent of a standard squid  
installation. In this setup it works well. I can use squid ACLs to  
only direct the traffic that my twisted proxy should handle to the  
cache_peer. Squid takes care of the persistent connections to the  
client, at least (not sure what the overhead for non-persistent  
connections on the loopback address are but it's got to be a lot less).

If anyone is interested, I have implemented a basic ICP protocol in  
twisted.

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 25 Feb 2008, at 08:08, Andrew Warkentin wrote:

> Vasil Vangelovski wrote:
>
>> I'm trying to set up a http proxy which will write redirects to the
>> client if it requests certain uri but work as a normal proxy for
>> others. Can this be done with the higher level proxy classes, if so,
>> how?
>>
> Not easily. The proxy classes included with Twisted only really  
> work for a simple transparent non-authenticating proxy. Also,  
> twisted.web2.proxy was incomplete and didn't work the last time I  
> checked. twisted.web.proxy works, but is only compatible with HTTP/ 
> 1.0 and does not allow persistent connections or pipelining.
>
> <shameless plug>
> I am in the process of writing a Twisted-based proxy that supports  
> filter plugins (the site is http://xuproxy.sourceforge.net).  
> Currently, it is in an alpha state (transparent HTTP proxying with  
> pipelining support appears to be fully working, but there may be  
> major bugs lurking), so I wouldn't recommend using it for  
> production use.
> </shameless plug>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Mon Feb 25 13:08:13 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 25 Feb 2008 10:08:13 -0800 (PST)
Subject: [Twisted-Python] Open Spaces Revisited
Message-ID: <600899.69310.qm@web34206.mail.mud.yahoo.com>

Hi Folks:

Earlier someone asked whether there was going to be a
PyCon 2008 Open Space for Twisted. I will be attending
the PyCon 2008 conference. Since this is my first
PyCon, I don't know how Open Spaces work. I am
wondering if any agreement was reached? It would be
neat to meet other folks interested in Twisted to
exchange information and experiences.

Cheers,
Andrew  


      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From steve at holdenweb.com  Mon Feb 25 15:22:09 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 25 Feb 2008 15:22:09 -0500
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <600899.69310.qm@web34206.mail.mud.yahoo.com>
References: <600899.69310.qm@web34206.mail.mud.yahoo.com>
Message-ID: <fpv829$cga$1@ger.gmane.org>

Andrew Francis wrote:
> Hi Folks:
> 
> Earlier someone asked whether there was going to be a
> PyCon 2008 Open Space for Twisted. I will be attending
> the PyCon 2008 conference. Since this is my first
> PyCon, I don't know how Open Spaces work. I am
> wondering if any agreement was reached? It would be
> neat to meet other folks interested in Twisted to
> exchange information and experiences.
> 
> Cheers,
> Andrew  
> 
There are signs that there's going (again, hooray!) to be a concerted 
Twisted presence at PyCon 2008. I am hoping to demonstrate my ignorance 
publicly and learn something about Twisted by running one (or more) Open 
Space sessions entitled "Teach Me Twisted", that reverse the usual flow 
of information and maybe produce something to add to the documentation.

But I am sure that regular Twisted crew will tell you much more.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From michal.dtz at gmail.com  Mon Feb 25 16:03:46 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Mon, 25 Feb 2008 22:03:46 +0100
Subject: [Twisted-Python] Reactor is left dirty after calling
 twisted.mail.smtp.sendmail via trial
Message-ID: <20080225220346.567211fe@2step.chello.pl>

Hi, 

please consider attached minimal non-working code example.

If I send an e-mail from a Trial testcase - using t.m.smtp.sendmail,
the reactor is left dirty.

Is it a bug, feature, or... how should we treat this situation? 

In my case, I already substituted t.m.smtp.sendmail in my tests, unless
hitting a situation, where testing if my parameters to that function
caused it to raise an exception. That's why I'm trying to test it this
way. And, it leaves reactor dirty. 

Regards,
-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_twisted_smtp.py
Type: text/x-python
Size: 346 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080225/344ed473/attachment.py 

From programmer.py at gmail.com  Mon Feb 25 21:24:54 2008
From: programmer.py at gmail.com (Jaime Wyant)
Date: Mon, 25 Feb 2008 20:24:54 -0600
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <uve4ggho6.fsf@stephe-leake.org>
References: <uve4ggho6.fsf@stephe-leake.org>
Message-ID: <d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>

On Sat, Feb 23, 2008 at 3:12 AM, Stephen Leake <
stephen_leake at stephe-leake.org> wrote:

> I'm attempting to install Twisted using the Cygwin installation of
> Python. This is my first time using Python; I'm setting up a buildbot
> for monotone (http://www.venge.net/mtn-wiki/BuildBot).
>
> I could probably make things work with a native Win32 installation of
> Python, but I suspect it would be simpler in the long run to get the
> Cygwin version working.
>

[snip!]

As far as simplicity goes, IIRC, windows Twisted comes as a windows
executable.  Install windows python, then install twisted.  I don't think it
can get much easier than that.

jw
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080225/b3d936ad/attachment.htm 

From stephen_leake at stephe-leake.org  Tue Feb 26 03:37:26 2008
From: stephen_leake at stephe-leake.org (Stephen Leake)
Date: Tue, 26 Feb 2008 03:37:26 -0500
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>
	(Jaime Wyant's message of "Mon, 25 Feb 2008 20:24:54 -0600")
References: <uve4ggho6.fsf@stephe-leake.org>
	<d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>
Message-ID: <u3argw1tl.fsf@stephe-leake.org>

"Jaime Wyant" <programmer.py at gmail.com> writes:

> On Sat, Feb 23, 2008 at 3:12 AM, Stephen Leake <
> stephen_leake at stephe-leake.org> wrote:
>
>> I'm attempting to install Twisted using the Cygwin installation of
>> Python. This is my first time using Python; I'm setting up a buildbot
>> for monotone (http://www.venge.net/mtn-wiki/BuildBot).
>>
>> I could probably make things work with a native Win32 installation of
>> Python, but I suspect it would be simpler in the long run to get the
>> Cygwin version working.
>>
>
> [snip!]
>
> As far as simplicity goes, IIRC, windows Twisted comes as a windows
> executable.  Install windows python, then install twisted.  I don't think it
> can get much easier than that.

That makes the Twisted installation easier, yes.

But it doesn't make _using_ Twisted easier. Mixing Win32 tools and
Cygwin tools is usually a headache.


-- 
-- Stephe



From Marcin.Kasperski at softax.com.pl  Tue Feb 26 06:26:22 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 26 Feb 2008 12:26:22 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
References: <20080225220346.567211fe@2step.chello.pl>
Message-ID: <874pbw3qn5.fsf@softax.com.pl>

> If I send an e-mail from a Trial testcase - using t.m.smtp.sendmail,
> the reactor is left dirty.
>
> Is it a bug, feature, or... how should we treat this situation? 

Feature. Email is sent asynchronously, you get deferred and can use it
(for example to acknowledge that the email has already been sent).

I bet you just need to sync with this deferred. The way to do it
is to return the deferred from the test case.

> class Test1(unittest.TestCase):
>    def test_sendmail(self):
>
>       return smtp.sendmail('localhost', 'foo at bar.pl', 'dotz at localhost',
>                            'this leaves reactor dirty :-(').addCallback(evenIfCallbackIsCalled)

Adding callback should have no meaning here, you need to return deferred
from test to sync with that whether the processing is complicated or simple.

At first sight it seems OK to me. Are you sure you run your tests with
trial?  Syncing with returned deferreds is trial-specific, other test
runners won't do it...

-- 
----------------------------------------------------------------------
| Marcin Kasperski   | The cost of a few uncorrected non-critical
| http://mekk.waw.pl | human errors is less then the cost imposed
|                    |  by a process that tries to prevent them.
|                    |           (Booch,Martin,Newkirk)
----------------------------------------------------------------------




From michal.dtz at gmail.com  Tue Feb 26 08:23:56 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 26 Feb 2008 14:23:56 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <874pbw3qn5.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
Message-ID: <20080226142356.7fa2f603@2step.chello.pl>

Dnia 2008-02-26, o godz. 12:26:22
Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisa?(a):

> > class Test1(unittest.TestCase):
> >    def test_sendmail(self):
> >
> >       return smtp.sendmail('localhost', 'foo at bar.pl',
> > 'dotz at localhost', 'this leaves reactor
> > dirty :-(').addCallback(evenIfCallbackIsCalled)  
> 
> Adding callback should have no meaning here, you need to return
> deferred from test to sync with that whether the processing is
> complicated or simple.

I am using trial to run the tests - if I did that the other way, how
would I get an exception about unclean reactor? :-)

The last time I checked, addCallback did return a Deferred, in fact it
was returning 'self', so I really don't think it's the case here. 

Am I wrong?

-- 
m



From Marcin.Kasperski at softax.com.pl  Tue Feb 26 09:40:54 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 26 Feb 2008 15:40:54 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
	<20080226142356.7fa2f603@2step.chello.pl>
Message-ID: <87ve4b3hmx.fsf@softax.com.pl>

> Am I wrong?

I took a deeper look. Looks like it is caused by the way smtp.py
works. More or less, at least for my naive eye, it seems to me
that the deferred returned from sendmail/sendEmail is fired as
soon as email sending is done, and cleanup (closing smtp connection,
removing factory etc) proceeds asynchronously.

In real code it is likely good thing as you need not to wait for
final message exchanges.

Not sure whether it is possible to do anything with that (without 
rewriting the module deeply) :-(

  { it would be test-friendly if sendmail either returned two
    deferreds, one fired after send, second after cleanup, or
    had option to sync returned deferred on cleanup... }


-- 
----------------------------------------------------------------------
| Marcin Kasperski   |    You have the right to accept your
| http://mekk.waw.pl | responsibilites instead of having them
|                    |         assigned to you. (Beck)
----------------------------------------------------------------------




From radix at twistedmatrix.com  Tue Feb 26 10:03:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 26 Feb 2008 10:03:55 -0500
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <874pbw3qn5.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
Message-ID: <60ed19d40802260703j3fc77867s32db59dd661fdafd@mail.gmail.com>

On Tue, Feb 26, 2008 at 6:26 AM, Marcin Kasperski
<Marcin.Kasperski at softax.com.pl> wrote:
>  At first sight it seems OK to me. Are you sure you run your tests with
>  trial?  Syncing with returned deferreds is trial-specific, other test
>  runners won't do it...

That's not true. It's not the runner that provides this behavior, it's
the TestCase class. You can run your Trial TestCases with other
runners and deferreds will be handled.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From michal.dtz at gmail.com  Tue Feb 26 14:33:12 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 26 Feb 2008 20:33:12 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <87ve4b3hmx.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
	<20080226142356.7fa2f603@2step.chello.pl>
	<87ve4b3hmx.fsf@softax.com.pl>
Message-ID: <20080226203312.7005959a@2step.chello.pl>

Dnia 2008-02-26, o godz. 15:40:54
Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisa?(a):

> > Am I wrong?
> 
> I took a deeper look. Looks like it is caused by the way smtp.py
> works.
[...]
> Not sure whether it is possible to do anything with that (without 
> rewriting the module deeply) :-(

Let me ask the other way then - is it against testing philosophy to run
functions like t.m.smtp.sendmail from the unittest? It is
environment-dependent - however there are some cases when calling it
from the test is useful. 

If I shouldn't even think about calling such functions from the
unittest, maybe someone could point out a better method of testing?

-- 
m



From camrdale at gmail.com  Tue Feb 26 15:12:22 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 12:12:22 -0800
Subject: [Twisted-Python] Throttling a web2 server
Message-ID: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>

Hi,

I'm relatively new to Twisted, and I was wondering if anyone has had
success with the ThrottlingFactory, or any other methods for
throttling push producers.

I'm attempting to throttle the bandwidth of the web2 server using the
twisted.protocols.policies.ThrottlingFactory. I know this isn't
possible with web1 (see Ticket #601), but it should be possible with
web2 since web2 uses a streaming (push) producer.

The trouble I'm having is that the ThrottlingFactory doesn't throttle
the server at all. I've traced the output, and it seems to be due to
the twisted.internet.tcp.Server also calling the pauseProducing() and
resumeProducing() methods of the producer.

The way the ThrottlingFactory works, is that it schedules periodic
checks of the number of bytes written using reactor.callLater. If too
many bytes have been written, then the producer is paused. However,
these periodic checks always occur when the producer is already paused
by the twisted.internet.tcp.Server, and so have no effect. Later the
producer is resumed by the twisted.internet.tcp.Server, and so the
throttling is non-existent.

Thanks,
Cameron



From exarkun at divmod.com  Tue Feb 26 16:06:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 26 Feb 2008 16:06:44 -0500
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <20080226203312.7005959a@2step.chello.pl>
Message-ID: <20080226210644.6859.1586703780.divmod.quotient.13615@ohm>

On Tue, 26 Feb 2008 20:33:12 +0100, Micha? Pasternak <michal.dtz at gmail.com> wrote:
>Dnia 2008-02-26, o godz. 15:40:54
>Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisa?(a):
>
>> > Am I wrong?
>>
>> I took a deeper look. Looks like it is caused by the way smtp.py
>> works.
>[...]
>> Not sure whether it is possible to do anything with that (without
>> rewriting the module deeply) :-(
>
>Let me ask the other way then - is it against testing philosophy to run
>functions like t.m.smtp.sendmail from the unittest? It is
>environment-dependent - however there are some cases when calling it
>from the test is useful.

Maybe so, but then it's not really a unit test, since by calling it you
have just included an entire SMTP server in the test along with whatever
else you're trying to test.  Still, maybe it's a good idea sometimes.  The
API was created a long time ago, and it's probably not ideal.  It is very
unfortunate that it gives you no way to know when it is really done.

>
>If I shouldn't even think about calling such functions from the
>unittest, maybe someone could point out a better method of testing?

Well...  I dunno what you're testing.  But you could make a fake (verified,
of course) of sendmail() and call that in your tests instead.

Jean-Paul



From exarkun at divmod.com  Tue Feb 26 16:17:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 26 Feb 2008 16:17:03 -0500
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
Message-ID: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>

On Tue, 26 Feb 2008 12:12:22 -0800, Cameron Dale <camrdale at gmail.com> wrote:
>Hi,
>
>I'm relatively new to Twisted, and I was wondering if anyone has had
>success with the ThrottlingFactory, or any other methods for
>throttling push producers.
>
>I'm attempting to throttle the bandwidth of the web2 server using the
>twisted.protocols.policies.ThrottlingFactory. I know this isn't
>possible with web1 (see Ticket #601), but it should be possible with
>web2 since web2 uses a streaming (push) producer.
>
>The trouble I'm having is that the ThrottlingFactory doesn't throttle
>the server at all. I've traced the output, and it seems to be due to
>the twisted.internet.tcp.Server also calling the pauseProducing() and
>resumeProducing() methods of the producer.
>
>The way the ThrottlingFactory works, is that it schedules periodic
>checks of the number of bytes written using reactor.callLater. If too
>many bytes have been written, then the producer is paused. However,
>these periodic checks always occur when the producer is already paused
>by the twisted.internet.tcp.Server, and so have no effect. Later the
>producer is resumed by the twisted.internet.tcp.Server, and so the
>throttling is non-existent.
>

Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
to fix it? :)

Jean-Paul



From donwsmith at gmail.com  Tue Feb 26 17:41:56 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 14:41:56 -0800
Subject: [Twisted-Python] DeferredList?
Message-ID: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>

Greetings,

I have a problem I hope someone here can assist with. I'm using TwistedSNMP
to query a bunch of SNMP devices asynchronously. The behavior I'm trying to
get is to get is to query all the devices via SNMP, each query returns a
deferred, and when all their callbacks have been fired then I want to stop
the reactor and thereby exit the program. I thought perhaps I could put each
of these SNMP deferreds in a DeferredList and add a callback to the
DeferredList that would stop the reactor but it does not do that. Enclosed
is a code sample. Am I doing something incorrectly, or should I do something
different?

Thanks! -Don

"""Trivial example to retrieve an OID from a remote Agent"""
from twisted.internet import reactor
from twistedsnmp import snmpprotocol, agentproxy
from twisted.enterprise import adbapi
from twisted.internet import defer
import os

APPNAME = 'ClearSNMP'
d_results = {} #dictionary to store results
device_name = 'Unknown'

db_conn = {'user':'sa',
            'password':'password',
            'host':'localhost',
            'database':'ClearSNMP'
            }

community_string = 'public'

deferred_list = [] #list to help group the snmp requests

outfile = open('outfile.csv','wb',0)
#add headers to the outfile
outfile.write
("device_name,link_oid,link_name,link_capacity_oid,link_capacity,traffic_in_oid,traffic_in,traffic_out_oid,traffic_out")

#create the database connection pool
dbpool = adbapi.ConnectionPool("pymssql", user=db_conn['user'],
password=db_conn['password'], host=db_conn['host'],
database=db_conn['database'])


def main( class_handler, proxy, oids ):
    """Do a getTable on proxy for OIDs and store in oidStore"""
    df = proxy.getTable(
        oids, timeout=.25, retryCount=5
    )
    if class_handler == 'tasman':
        df.addCallback( tasmanResults )
    else:
        df.addCallback( results )
    #df.addCallback( exiter )
    df.addErrback( errorReporter, proxy )
    #df.addErrback( exiter )
    return df


def tasmanResults( result ):

    """Results 'appear' to be a nested dictionary, but it is really an
object of OIDs. I figured out how to get to the OIDs by
    casting them as a dictionary using the built_in dict() function. Now I
can iterate over all the OIDs."""
    #print 'Results:'
    d_table_key = {}
    for table_key in result.keys():
        #get the device name. for some reason i have to do this in a loop as
just saying dict(result[table_key])['.1.3.6.1.2.1.1.5.0'] doesn't work
        for oid in dict(result[table_key]).keys():
            if oid=='.1.3.6.1.2.1.1.5.0':
                device_name=str(dict(result[table_key])[oid])

        d_oid = {}
        for oid in dict(result[table_key]).keys():
            d_oid[str(oid)]=dict(result[table_key])[oid]
        d_table_key[str(table_key)] = d_oid
    d_results[device_name]=d_table_key

    #specify the table oids so we can match them appropriately later
    link_name_table    = ".1.3.6.1.2.1.2.2.1.2"
    link_capacity_table    = ".1.3.6.1.2.1.2.2.1.5"
    traffic_in_table    = ".1.3.6.1.2.1.2.2.1.10"
    traffic_out_table    = ".1.3.6.1.2.1.2.2.1.16"

    # For each link name in the table I need to get the values from the
link_capacity, traffic_in and traffic_out tables and put them in the same
line

    for i in d_results.keys():
        d_row = {} #holds the column values for a row

        #set device_name in Row
        d_row['device_name'] = device_name

        for k in d_results[i][link_name_table]:
            #set link_oid and link_name in Row
            d_row['link_oid'] = k
            d_row['link_name'] =
d_results[i][link_name_table][d_row['link_oid']]

            #lookup the capacity metric for this link_oid
            #create the oid to lookup
            d_row['link_capacity_oid'] =
d_row['link_oid'].replace(link_name_table,link_capacity_table)
            d_row['link_capacity'] =
d_results[i][link_capacity_table][d_row['link_capacity_oid']]

            #lookup the traffic_in metric for this link_oid
            #create the oid to lookup
            d_row['traffic_in_oid'] =
d_row['link_oid'].replace(link_name_table,traffic_in_table)
            d_row['traffic_in'] =
d_results[i][traffic_in_table][d_row['traffic_in_oid']]

            #lookup the traffic_out metric for this link_oid
            #create the oid to lookup
            d_row['traffic_out_oid'] =
d_row['link_oid'].replace(link_name_table,traffic_out_table)
            d_row['traffic_out'] =
d_results[i][traffic_out_table][d_row['traffic_out_oid']]

            #Calculate Utilization - if we can


            #print d_row
            out =
d_row['device_name']+","+d_row['link_oid']+","+d_row['link_name']+","+d_row['link_capacity_oid']+","+str(d_row['link_capacity'])+","+d_row['traffic_in_oid']+","+str(d_row['traffic_in'])+","+d_row['traffic_out_oid']+","+str(d_row['traffic_out'])+'\r\n'
            #print out
            outfile.write(out)
    return result


def errorReporter( err, proxy ):
    #print 'ERROR', err.getTraceback()
    #log the failed snmp query attempt
    print 'Failed to retrieve SNMP counters from agent:',proxy
    return err

def exiter( value ):

    reactor.stop()
    outfile.close()

    return value


def getNetworkElements():
    return dbpool.runQuery("select top 10 ip, mkt, dns_name, dns_fqdn from
dns where dns_type='TASMAN'")

def printResult(l):
    for item in l:
        print "Fetching counters for "+item[2]
        #deferred_list.append(snmpSetup(item[0], 161, 'ctipublic','tasman'))
    ipAddress = item[0]
    portno = 161
    community = community_string
    class_handler = 'tasman'
        print ipAddress,portno
        # choose random port in range 25000 to 30000
        port = snmpprotocol.port()
        targetPort = int(portno)
        proxy = agentproxy.AgentProxy(ipAddress,
                  targetPort,
                  community = community,
                  snmpVersion = 'v1',
                  protocol = port.protocol,
                  )


        d_oids = {'.1.3.6.1.2.1.1':"System Tables",
            '.1.3.6.1.2.1.2.2.1.2':"Circuit Name",
            '.1.3.6.1.2.1.2.2.1.5':"Capacity",
            '.1.3.6.1.2.1.2.2.1.10':"Traffic In",
            '.1.3.6.1.2.1.2.2.1.16':"Traffic Out"
            }

    """Do a getTable on proxy for OIDs and store in oidStore"""
    df = proxy.getTable(
        d_oids, timeout=.25, retryCount=5
    )
    if class_handler == 'tasman':
        df.addCallback( tasmanResults )
    else:
        df.addCallback( results )
    df.addErrback( errorReporter, proxy )
    deferred_list.append(df)
    return



if __name__ == "__main__":
    import sys
    #start the log service
    from twisted.python import log
    from twisted.python import logfile
    # rotate every 100000000 bytes
    f = logfile.LogFile(APPNAME+str(os.getpid())+".log", "Logs",
rotateLength=100000000)
    # setup logging to use our new logfile
    #log.startLogging(f)


    g = getNetworkElements().addCallback(printResult)
    dl = defer.DeferredList(deferred_list, 0, 0, 1 )
    print dir(dl)
    dl.addCallback(exiter)

    reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080226/dcde14a6/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Feb 26 18:33:32 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 26 Feb 2008 23:33:32 +0000
Subject: [Twisted-Python] DeferredList?
In-Reply-To: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
References: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
Message-ID: <47C4A1CC.5090307@imperial.ac.uk>


You are creating the DeferredList before getNetworkElements has 
callback'ed - i.e. it's empty.

Move the creation of the DeferredList (and adding it's callback) to just 
before the "return" in "printResult"


>     g = getNetworkElements().addCallback(printResult)
>     dl = defer.DeferredList(deferred_list, 0, 0, 1 )
>     print dir(dl)
>     dl.addCallback(exiter)
>    
>     reactor.run()
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From donwsmith at gmail.com  Tue Feb 26 18:52:33 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 15:52:33 -0800
Subject: [Twisted-Python] DeferredList?
In-Reply-To: <47C4A1CC.5090307@imperial.ac.uk>
References: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
	<47C4A1CC.5090307@imperial.ac.uk>
Message-ID: <24f63c200802261552y77aaf35bg6aedc242c4ef8e5c@mail.gmail.com>

Thanks, Phil.

I tried this and now I get a different error which I'm not sure what to do
with:

Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable

Do you have any ideas?

Thanks,

Don

On Tue, Feb 26, 2008 at 3:33 PM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

>
> You are creating the DeferredList before getNetworkElements has
> callback'ed - i.e. it's empty.
>
> Move the creation of the DeferredList (and adding it's callback) to just
> before the "return" in "printResult"
>
>
> >     g = getNetworkElements().addCallback(printResult)
> >     dl = defer.DeferredList(deferred_list, 0, 0, 1 )
> >     print dir(dl)
> >     dl.addCallback(exiter)
> >
> >     reactor.run()
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080226/b477527c/attachment.htm 

From camrdale at gmail.com  Tue Feb 26 21:41:47 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 18:41:47 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
Message-ID: <f4438a6a0802261841p3bbc2a18p41030dbec102e66a@mail.gmail.com>

On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 26 Feb 2008 12:12:22 -0800, Cameron Dale <camrdale at gmail.com> wrote:
>  >The trouble I'm having is that the ThrottlingFactory doesn't throttle
>  >the server at all. I've traced the output, and it seems to be due to
>  >the twisted.internet.tcp.Server also calling the pauseProducing() and
>  >resumeProducing() methods of the producer.
>  >
>  >The way the ThrottlingFactory works, is that it schedules periodic
>  >checks of the number of bytes written using reactor.callLater. If too
>  >many bytes have been written, then the producer is paused. However,
>  >these periodic checks always occur when the producer is already paused
>  >by the twisted.internet.tcp.Server, and so have no effect. Later the
>  >producer is resumed by the twisted.internet.tcp.Server, and so the
>  >throttling is non-existent.
>
> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>  to fix it? :)

I will have to do something as throttling is needed, but I'm just not
sure how to go about it. Do you have an idea of how it could be fixed?

The ThrottlingFactory methodology would seem to be broken and unusable
due to this behaviour. The only workaround I can think of is to modify
the push producer to keep a tally of the number of pauses received,
and only resume when it gets back to 0. That obviously requires
modifying the underlying producer, and is far from ideal as I believe
the pauseProducing() call is expected to be idempotent.

Or perhaps the ThrottlingFactory should create a dummy producer that
gets data from the real producer, but then throttles it before sending
it out to the twisted.internet.tcp.Server. That is complicated by the
fact that the producer would not be available to be modified by the
factory before it is passed to the Server, so exchanging it for the
dummy producer would also be a problem.

So, are there any other ideas of how throttling can be accomplished
with Twisted? I'm sure someone must have used throttling at some
point.

Thanks,
Cameron



From donwsmith at gmail.com  Wed Feb 27 01:32:58 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 22:32:58 -0800
Subject: [Twisted-Python] Twisted Amazon Web Service module?
Message-ID: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>

Has anyone built a Twisted module for use with any of Amazon's web service
components? Specifically SimpleDB and SQS?

I've looked at boto, which is really cool, but not Twisted...

Regards,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080226/92da033a/attachment.htm 

From camrdale at gmail.com  Wed Feb 27 02:20:17 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 23:20:17 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
Message-ID: <f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>

On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>  to fix it? :)

Well, I took a stab at fixing it. Attached is my first attempt, as a
patch against the current SVN version. I only fixed the write
throttling, as that's the one I'm interested in. A similar technique
may work for reads as well.

It does throttle correctly, by buffering any throttled packets and
pausing the producer. If the Sever then unpauses the producer, it will
only result in an extra packet being buffered. I also implemented a
protocol queue so that the producers are all given a fair portion of
the bandwidth.

The only thing it requires currently is that the producers don't try
and write too large of a piece of data at once. I had to modify the
twisted.web2.stream.FileSream slightly to make it do this, as
otherwise it would 'stream' the entire file in one write() request. In
theory, a single large write could be chunked and buffered, but that
would add a lot of memory overhead to the buffering.

Anyway, I'm sure it's not great, but I'd appreciate any feedback,
especially on how I could make it better. :)

Thanks,
Cameron
-------------- next part --------------
A non-text attachment was scrubbed...
Name: policies.py.patch
Type: text/x-diff
Size: 7324 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080226/1b95844b/attachment.patch 

From mailing_lists at evotex.ch  Wed Feb 27 03:32:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 09:32:01 +0100
Subject: [Twisted-Python] Factory question
Message-ID: <47C52001.2080506@evotex.ch>

Hello everyone,

I have a small question, I have a service which needs to sometimes send 
data (without having received any prior to sending) and sometimes 
receive data, which is better :

1) create a factory that inherits from ServerFactory and ClientFactory, 
thus it can listen and send data

2) create a factory that inherits from ServerFactory only and uses a 
single-use client (ClientCreator, as shown in the writing clients howto) 
when it needs to send data

Thank you!
Gabriel



From mailing_lists at evotex.ch  Wed Feb 27 04:06:05 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 10:06:05 +0100
Subject: [Twisted-Python] How to get an unused port 
Message-ID: <47C527FD.3090203@evotex.ch>

Hello,

I need to be able to get an unused port for a server, it will then 
communicate it to a third party.
I don't have any restrictions other than it shouldn't be a known used 
port (one used by other apps (above 1023)), but for that I'll probably 
have to create a list and verify manually. Does anyone know how to do 
this (without iterating all ports and trying), it must be possible since 
a client gets the next unused port from the OS, I'd like to do this with 
Twisted if possible.

Thanks,
Gabriel



From andrew-twisted at puzzling.org  Wed Feb 27 04:20:46 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 27 Feb 2008 20:20:46 +1100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <47C527FD.3090203@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
Message-ID: <20080227092046.GA18967@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
> Hello,
>
> I need to be able to get an unused port for a server, it will then 
> communicate it to a third party.
> I don't have any restrictions other than it shouldn't be a known used port 
> (one used by other apps (above 1023)), but for that I'll probably have to 
> create a list and verify manually. Does anyone know how to do this (without 
> iterating all ports and trying), it must be possible since a client gets 
> the next unused port from the OS, I'd like to do this with Twisted if 
> possible.

Pass 0 as the port number.

-Andrew.




From matt at madebykite.com  Wed Feb 27 04:24:08 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 27 Feb 2008 09:24:08 +0000
Subject: [Twisted-Python] How to get an unused port 
In-Reply-To: <47C527FD.3090203@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
Message-ID: <6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>

Hi Gabriel,

If memory serves me correctly, when calling reactor.ConnectTCP,  
specify zero for your port, you'll automatically get an unused port  
from the dynamic range.

Hope that helps,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 27 Feb 2008, at 09:06, Gabriel Rossetti wrote:

> Hello,
>
> I need to be able to get an unused port for a server, it will then  
> communicate it to a third party.
> I don't have any restrictions other than it shouldn't be a known  
> used port (one used by other apps (above 1023)), but for that I'll  
> probably have to create a list and verify manually. Does anyone  
> know how to do this (without iterating all ports and trying), it  
> must be possible since a client gets the next unused port from the  
> OS, I'd like to do this with Twisted if possible.
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mithrandi at mithrandi.za.net  Wed Feb 27 05:01:53 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Wed, 27 Feb 2008 12:01:53 +0200
Subject: [Twisted-Python] Twisted Amazon Web Service module?
In-Reply-To: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
References: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
Message-ID: <20080227100153.GC32333@mithrandi.net>

* Don Smith <donwsmith at gmail.com> [2008-02-26 22:32:58 -0800]:

> Has anyone built a Twisted module for use with any of Amazon's web service
> components? Specifically SimpleDB and SQS?
> 
> I've looked at boto, which is really cool, but not Twisted...

I have some AWS code here:

    http://edgeverse.com/trac/browser/aws
    http://slipgate.za.net/~mithrandi/darcs/EdgeVerse/trunk/aws/

Currently, it consists of a full (I think) S3 wrapper, and a partial ECS
wrapper, so I'm not sure how much this helps you, but at least it's a
start.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080227/48a9bafa/attachment.pgp 

From therve at free.fr  Wed Feb 27 05:19:59 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 27 Feb 2008 11:19:59 +0100
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
	<f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
Message-ID: <20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>

Quoting Cameron Dale <camrdale at gmail.com>:

> On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>>  to fix it? :)
>
> Well, I took a stab at fixing it. Attached is my first attempt, as a
> patch against the current SVN version. I only fixed the write
> throttling, as that's the one I'm interested in. A similar technique
> may work for reads as well.

Thanks. Some maintenance on this would be great.

> It does throttle correctly, by buffering any throttled packets and
> pausing the producer. If the Sever then unpauses the producer, it will
> only result in an extra packet being buffered. I also implemented a
> protocol queue so that the producers are all given a fair portion of
> the bandwidth.
>
> The only thing it requires currently is that the producers don't try
> and write too large of a piece of data at once. I had to modify the
> twisted.web2.stream.FileSream slightly to make it do this, as
> otherwise it would 'stream' the entire file in one write() request. In
> theory, a single large write could be chunked and buffered, but that
> would add a lot of memory overhead to the buffering.
>
> Anyway, I'm sure it's not great, but I'd appreciate any feedback,
> especially on how I could make it better. :)

I haven't very closely at your patch, but there is definitely  
something missing: tests. It's a requirement for anything going into  
Twisted, and generally a requirement for making something works.

The discussion should probably continue in the tracker. You can open a  
ticket, or maybe attach your patch at  
http://twistedmatrix.com/trac/ticket/1460 (which doesn't exactly  
describe the same goal).

-- 
Thomas





From mailing_lists at evotex.ch  Wed Feb 27 05:36:51 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:36:51 +0100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
Message-ID: <47C53D43.4020007@evotex.ch>

Matthew Glubb wrote:
> Hi Gabriel,
>
> If memory serves me correctly, when calling reactor.ConnectTCP, 
> specify zero for your port, you'll automatically get an unused port 
> from the dynamic range.
>
Thank you, unfortunately I tried it and got 0 back :

 >>> reactor.connectTCP("localhost", 0, ClientFactory()).port
0
 >>> reactor.connectTCP("localhost", 0, 
ClientFactory()).getDestination().port
0

I tried running reactor.run() but I get an exception :

exceptions.AttributeError: Factory instance has no attribute 
'clientConnectionFailed'

I though the ClientFactory had that, I must be wrong, I could of course 
subclass it and add it but it's a bit "complicated" for just getting a 
free port, so I may have done something wrong...

Gabriel

> Hope that helps,
>
>
> Matt   
>
> Matthew Glubb
> Technical Partner
>
> email: matthew.glubb at madebykite.com
> phone: 44 (0) 7715 754017
> skype: mglubb
>
> Kite
> http://madebykite.com
>
> -- 
> GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244
>
> On 27 Feb 2008, at 09:06, Gabriel Rossetti wrote:
>
>> Hello,
>>
>> I need to be able to get an unused port for a server, it will then 
>> communicate it to a third party.
>> I don't have any restrictions other than it shouldn't be a known used 
>> port (one used by other apps (above 1023)), but for that I'll 
>> probably have to create a list and verify manually. Does anyone know 
>> how to do this (without iterating all ports and trying), it must be 
>> possible since a client gets the next unused port from the OS, I'd 
>> like to do this with Twisted if possible.
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From mg at daimi.au.dk  Wed Feb 27 05:45:01 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 27 Feb 2008 11:45:01 +0100
Subject: [Twisted-Python] Re: How to get an unused port
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch>
Message-ID: <w1by796d6fm.fsf@thyra03.daimi.au.dk>

Gabriel Rossetti <mailing_lists at evotex.ch> writes:

> Matthew Glubb wrote:
>> Hi Gabriel,
>>
>> If memory serves me correctly, when calling reactor.ConnectTCP,
>> specify zero for your port, you'll automatically get an unused port
>> from the dynamic range.
>>
> Thank you, unfortunately I tried it and got 0 back :
>
>>>> reactor.connectTCP("localhost", 0, ClientFactory()).port
> 0
>>>> reactor.connectTCP("localhost", 0,
> ClientFactory()).getDestination().port
> 0

You will never want to connect to port 0 -- there is no such port as
far as I know. Instead you can listen on it. The OS will then allocate
a free port for you to listen on.

So I think you have turned things upside down here :-)

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mailing_lists at evotex.ch  Wed Feb 27 05:56:50 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:56:50 +0100
Subject: [Twisted-Python] Re: How to get an unused port
In-Reply-To: <w1by796d6fm.fsf@thyra03.daimi.au.dk>
References: <47C527FD.3090203@evotex.ch>	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>	<47C53D43.4020007@evotex.ch>
	<w1by796d6fm.fsf@thyra03.daimi.au.dk>
Message-ID: <47C541F2.6070007@evotex.ch>

Martin Geisler wrote:
> Gabriel Rossetti <mailing_lists at evotex.ch> writes:
>
>   
>> Matthew Glubb wrote:
>>     
>>> Hi Gabriel,
>>>
>>> If memory serves me correctly, when calling reactor.ConnectTCP,
>>> specify zero for your port, you'll automatically get an unused port
>>> from the dynamic range.
>>>
>>>       
>> Thank you, unfortunately I tried it and got 0 back :
>>
>>     
>>>>> reactor.connectTCP("localhost", 0, ClientFactory()).port
>>>>>           
>> 0
>>     
>>>>> reactor.connectTCP("localhost", 0,
>>>>>           
>> ClientFactory()).getDestination().port
>> 0
>>     
>
> You will never want to connect to port 0 -- there is no such port as
> far as I know. Instead you can listen on it. The OS will then allocate
> a free port for you to listen on.
>
> So I think you have turned things upside down here :-)
>
>   
Yes, I realized that just after sending the email :-)

like you said :

 >>> reactor.listenTCP(0, Factory()).getHost().port
59768

or

 >>> reactor.listenTCP(0, Factory())._realPortNumber
47315

work :-)

thanks again to everyone who helpd,
Gabriel






From mailing_lists at evotex.ch  Wed Feb 27 05:57:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:57:35 +0100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <20080227092046.GA18967@steerpike.home.puzzling.org>
References: <47C527FD.3090203@evotex.ch>
	<20080227092046.GA18967@steerpike.home.puzzling.org>
Message-ID: <47C5421F.3050802@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
>   
>> Hello,
>>
>> I need to be able to get an unused port for a server, it will then 
>> communicate it to a third party.
>> I don't have any restrictions other than it shouldn't be a known used port 
>> (one used by other apps (above 1023)), but for that I'll probably have to 
>> create a list and verify manually. Does anyone know how to do this (without 
>> iterating all ports and trying), it must be possible since a client gets 
>> the next unused port from the OS, I'd like to do this with Twisted if 
>> possible.
>>     
>
> Pass 0 as the port number.
>
> -Andrew.
>
>   
Hello Andrew, thanks for the reply, I finally got it, see my last 
message on this thread.

Gabriel



From coder_gus at lavabit.com  Wed Feb 27 06:11:36 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Wed, 27 Feb 2008 13:11:36 +0200
Subject: [Twisted-Python] twisted application server
Message-ID: <47C54568.9000605@lavabit.com>

Hi,
I am in charge of writing an application server for a three-tier 
architecture system. It will receive requests&data trough an xml 
protocol agreed with the client devs. Basically it will work on a 
database and return the results to the client. The way I thought it is a 
twisted server accepts connections from the clients, a coordinator 
thread gets the request in a queue and pass them to free workers, which 
in turn upon completion will place the result in the thread coordinator 
response queue. The weird part is that another system places data in the 
database when a specific request comes in so I have to permanently pool 
the database for incoming data. This thing will be done with a pooling 
thread.
So, my question is: is this kind of architecture good to implement? 
(asynchronous server and threaded workers)
I might somehow miss some important details, but please feel free to ask 
questions.

Thanks.




From mg at daimi.au.dk  Wed Feb 27 06:22:29 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 27 Feb 2008 12:22:29 +0100
Subject: [Twisted-Python] Re: How to get an unused port
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch> <w1by796d6fm.fsf@thyra03.daimi.au.dk>
	<47C541F2.6070007@evotex.ch>
Message-ID: <w1btzjud4p6.fsf@thyra03.daimi.au.dk>

Gabriel Rossetti <mailing_lists at evotex.ch> writes:

>> You will never want to connect to port 0 -- there is no such port
>> as far as I know. Instead you can listen on it. The OS will then
>> allocate a free port for you to listen on.
>>
>> So I think you have turned things upside down here :-)
>
> Yes, I realized that just after sending the email :-)

Its always like that... :-) I'm glad you got it working!

> like you said :
>
>>>> reactor.listenTCP(0, Factory()).getHost().port
> 59768
>
> work :-)

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From glyph at divmod.com  Wed Feb 27 06:46:27 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 27 Feb 2008 11:46:27 -0000
Subject: [Twisted-Python] twisted application server
In-Reply-To: <47C54568.9000605@lavabit.com>
References: <47C54568.9000605@lavabit.com>
Message-ID: <20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>


On 11:11 am, coder_gus at lavabit.com wrote:
>So, my question is: is this kind of architecture good to implement? 
>(asynchronous server and threaded workers)

You might want to consider using process workers instead of thread 
workers, using spawnProcess and a simple control protocol.  This is 
easier to debug, since threads are painful to figure out, and it also 
scales better - you escape python's GIL and can take advantage of 
multiple cores, but even if it weren't for that, you can switch 
spawnProcess to some kind of remote connection API and run your 
processes remotely.



From therve at free.fr  Wed Feb 27 07:59:04 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 27 Feb 2008 13:59:04 +0100
Subject: [Twisted-Python] Re: How to get an unused port
In-Reply-To: <47C541F2.6070007@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch> <w1by796d6fm.fsf@thyra03.daimi.au.dk>
	<47C541F2.6070007@evotex.ch>
Message-ID: <20080227135904.wovdxvuj4c0g0w4w@wasabox.wasabout.net>

Quoting Gabriel Rossetti <mailing_lists at evotex.ch>:

>>>> reactor.listenTCP(0, Factory()).getHost().port
> 59768

That's the good thing to use.

> or
>
>>>> reactor.listenTCP(0, Factory())._realPortNumber
> 47315
>
> work :-)

Indeed, but please don't do that. The underscore prefix indicated a  
private member, so this is the kind of thing that can disappear or  
change without warnings. In this case, the previous pattern should do  
the job.

-- 
Thomas




From andrewfr_ice at yahoo.com  Wed Feb 27 10:48:27 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 27 Feb 2008 07:48:27 -0800 (PST)
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <E1JU1M9-0005fD-Em@cube.twistedmatrix.com>
Message-ID: <287172.43129.qm@web34204.mail.mud.yahoo.com>

Hi Steve et al:

>There are signs that there's going (again, hooray!)
to >be a concerted Twisted presence at PyCon 2008. I
am >hoping to demonstrate my ignorance publicly and
learn >something about Twisted by running one (or
more)
>Open Space sessions entitled "Teach Me Twisted", that
>reverse the usual flow

I am happy to share my ignorance....

Steve, right now I don't see a reservation for Twisted
in either the "Birds of a Feather" or "Open Spaces." I
would recommend you book a space soon.

Also I am not sure how the "open spaces" works. Is it
another talk. Or is it a bunch of one on ones, or one
to a few?

As I suggested in private, perhaps it would be best to
survey a few topics that interest folks. In turn, find
volunteers that know those areas and are willing to
talk about them.

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From drew.smathers at gmail.com  Wed Feb 27 11:12:53 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 11:12:53 -0500
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C52001.2080506@evotex.ch>
References: <47C52001.2080506@evotex.ch>
Message-ID: <368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>

On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello everyone,
>
>  I have a small question, I have a service which needs to sometimes send
>  data (without having received any prior to sending) and sometimes
>  receive data, which is better :
>
>  1) create a factory that inherits from ServerFactory and ClientFactory,
>  thus it can listen and send data
>
>  2) create a factory that inherits from ServerFactory only and uses a
>  single-use client (ClientCreator, as shown in the writing clients howto)
>  when it needs to send data
>

I'm not sure of there's a single right way to do it, but I wouldn't
bother inheriting from both ClientFactory and ServerFactory.  I think
you're on the write track with 2, though.

In most use cases you shouldn't have to create custom factories.  Just
write the protocol to support bidirectional comm and to create the
server:

f = Factory()
f.protocol = YourBidirectionalProtocol

Regarding the client, how you implement it depends on whether or not
the server is establishing the connection vs. reusing the existing
connection.  If you're establishing the connection (like in a cluster
app with known peers), just use ClientCreator.  If you're reusing the
existing connection, then you might not have to anything, unless you
have some state to set up which could be done by overriding
connectionMade on your Protocol.

Finally, take everything I've stated above with a grain of salt.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From steve at shrogers.com  Wed Feb 27 11:28:45 2008
From: steve at shrogers.com (Steven H. Rogers)
Date: Wed, 27 Feb 2008 09:28:45 -0700 (MST)
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <287172.43129.qm@web34204.mail.mud.yahoo.com>
References: <287172.43129.qm@web34204.mail.mud.yahoo.com>
Message-ID: <11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>

On Wed, February 27, 2008 08:48, Andrew Francis wrote:
>
> Also I am not sure how the "open spaces" works. Is it
> another talk. Or is it a bunch of one on ones, or one
> to a few?
>

Last year there was a board in a high traffic area for reserving open
space rooms and posting information about meetings in them.  It was pretty
dynamic.  Some open space meetings were prepared talks, while others were
just groups getting together to talk about a topic of interest, and I
think some may have turned into coding sessions.

# Steve



From nathan.stocks at gmail.com  Wed Feb 27 12:57:03 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 10:57:03 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
Message-ID: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>

Is the AMP protocol bidirectional (beyond the response you get to each
message)?  I'm really new to Twisted, and I followed the ampserver.py
and ampclient.py examples to get an AMP connection working, because
someone suggested that to me as an easy protocol to start with.
Although sending a message from the client to the server works fine, I
can't figure out how to initiate a message from the server to the
client over the connection that the client initially created.

I'm working on a little project where the "server" and the "client"
actually need to talk more like peers where each can initiate a
message to the other.  The server is outside the NAT, so it'd be best
if the communication could happen both ways over the connection that
the client initiates.

Could someone point me in the right direction?  I can provide my
existing code if that makes any difference.

~ Nathan



From drew.smathers at gmail.com  Wed Feb 27 13:50:41 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 13:50:41 -0500
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
Message-ID: <368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
> Is the AMP protocol bidirectional (beyond the response you get to each
>  message)?

Yes:
http://djfroofy.livejournal.com/3509.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nathan.stocks at gmail.com  Wed Feb 27 14:09:26 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 12:09:26 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
Message-ID: <96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>

On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  message)?
>
>  Yes:
>  http://djfroofy.livejournal.com/3509.html

Drew, you're everywhere!

Ok, so next question:

How do you access the callRemote method from outside the protocol
itself on the server side?  In the example above, from the server's
main() could you call pf.protocol.CallRemote()?

~ Nathan



From dripton at ripton.net  Wed Feb 27 14:10:19 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 27 Feb 2008 11:10:19 -0800
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
Message-ID: <20080227191019.GA22717@vidar.dreamhost.com>

On 2008.02.27 10:57:03 -0700, Nathan wrote:
> Is the AMP protocol bidirectional (beyond the response you get to each
> message)?  

Yes.

> I'm really new to Twisted, and I followed the ampserver.py
> and ampclient.py examples to get an AMP connection working, because
> someone suggested that to me as an easy protocol to start with.
> Although sending a message from the client to the server works fine, I
> can't figure out how to initiate a message from the server to the
> client over the connection that the client initially created.
> 
> I'm working on a little project where the "server" and the "client"
> actually need to talk more like peers where each can initiate a
> message to the other.  The server is outside the NAT, so it'd be best
> if the communication could happen both ways over the connection that
> the client initiates.
> 
> Could someone point me in the right direction?  I can provide my
> existing code if that makes any difference.

It was non-obvious to me too.

You call callRemote on the server-side Protocol to send a message to the
client side.

I have a little demonstration PyGTK / AMP chat program at
http://ripton.net/hg/ampchat/

-- 
David Ripton    dripton at ripton.net



From drew.smathers at gmail.com  Wed Feb 27 15:47:02 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 15:47:02 -0500
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
	<96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
Message-ID: <368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>

On Wed, Feb 27, 2008 at 2:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
> On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  > On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  >  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  >  message)?
>  >
>  >  Yes:
>  >  http://djfroofy.livejournal.com/3509.html
>
>  Drew, you're everywhere!
>
>  Ok, so next question:
>
>  How do you access the callRemote method from outside the protocol
>  itself on the server side?  In the example above, from the server's
>  main() could you call pf.protocol.CallRemote()?
>

I think looking at David's chat demo will steer you in the right direction:

http://ripton.net/hg/ampchat/file/90a4007ef2a7/chatserver.py

In a nutshell - just keep them in list or dict bound to the factory
and be sure to do cleanup on connectionLost.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nathan.stocks at gmail.com  Wed Feb 27 15:46:56 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 13:46:56 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <20080227191019.GA22717@vidar.dreamhost.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
Message-ID: <96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
>  It was non-obvious to me too.
>
>  You call callRemote on the server-side Protocol to send a message to the
>  client side.
>
>  I have a little demonstration PyGTK / AMP chat program at
>  http://ripton.net/hg/ampchat/

I tried to look at your demo chat program, but all I could find was a
mercurial summary page.  Do I need to install mercurial and check it
out using that URL?  (I've never used mercurial)

I don't quite understand what you mean by "on the server-side
Protocol."  I have multiple clients connected to the server
simultaneously, so if you mean (in the case of
http://djfroofy.livejournal.com/3509.html ) calling
TheServer.callRemote, then I don't see how it would know _which_
client to send the message to.  I'm obviously misunderstanding
something!

~ Nathan



From nathan.stocks at gmail.com  Wed Feb 27 16:20:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 14:20:35 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <20080227191019.GA22717@vidar.dreamhost.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
Message-ID: <96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
> On 2008.02.27 10:57:03 -0700, Nathan wrote:
>  > Is the AMP protocol bidirectional (beyond the response you get to each
>  > message)?
>
>  Yes.
>
>
>  > I'm really new to Twisted, and I followed the ampserver.py
>  > and ampclient.py examples to get an AMP connection working, because
>  > someone suggested that to me as an easy protocol to start with.
>  > Although sending a message from the client to the server works fine, I
>  > can't figure out how to initiate a message from the server to the
>  > client over the connection that the client initially created.
>  >
>  > I'm working on a little project where the "server" and the "client"
>  > actually need to talk more like peers where each can initiate a
>  > message to the other.  The server is outside the NAT, so it'd be best
>  > if the communication could happen both ways over the connection that
>  > the client initiates.
>  >
>  > Could someone point me in the right direction?  I can provide my
>  > existing code if that makes any difference.
>
>  It was non-obvious to me too.
>
>  You call callRemote on the server-side Protocol to send a message to the
>  client side.
>
>  I have a little demonstration PyGTK / AMP chat program at
>  http://ripton.net/hg/ampchat/

Oh, wow.  I was looking at your example program, and thought "I should
look at the amp api", so I googled "twisted amp" and the top link was:

http://www.ripton.net/blog/?p=16

Which is your blog post about this thread, because of this thread.  I
don't know if I should be awed that Google's so dang quick, or that by
my multitude of questions I'm causing the universe to change...  :-)

~ Nathan



From nathan.stocks at gmail.com  Wed Feb 27 16:34:06 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 14:34:06 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
	<96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
	<368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>
Message-ID: <96c9d6a80802271334n695bd356kdc7b729eea0da7cd@mail.gmail.com>

On Wed, Feb 27, 2008 at 1:47 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Wed, Feb 27, 2008 at 2:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  >  > On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  >  >  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  >  >  message)?
>  >  >
>  >  >  Yes:
>  >  >  http://djfroofy.livejournal.com/3509.html
>  >
>  >  Drew, you're everywhere!
>  >
>  >  Ok, so next question:
>  >
>  >  How do you access the callRemote method from outside the protocol
>  >  itself on the server side?  In the example above, from the server's
>  >  main() could you call pf.protocol.CallRemote()?
>  >
>
>  I think looking at David's chat demo will steer you in the right direction:
>
>  http://ripton.net/hg/ampchat/file/90a4007ef2a7/chatserver.py
>
>  In a nutshell - just keep them in list or dict bound to the factory
>  and be sure to do cleanup on connectionLost.

Ok, so after much staring at code, it looks the pattern is as follows:

1)  Create a custom factory class that subclasses ServerFactory and
adds a dict to store "protocol" objects and sets its own self.protocol
to the custom protocol that subclasses amp.AMP.

2) Somewhere in the custom protocol (He did it in a login function,
but I'm assuming I could do it in connectionMade if I wanted to?),
access the factory's dict  through self.factory.whatever and stick
"self" (the current protocol object) in the dict, preferably keyed by
some identifier that lets you pick out the one you want later
(ServerFactory.protocol <=> AMP.factory ... so circular!)

3) Send messages from the server to a specific client with
your_factory.somedict[identifier].callRemote(SomeCommand)

Did I get that right?

~ Nathan



From dripton at ripton.net  Wed Feb 27 16:40:33 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 27 Feb 2008 13:40:33 -0800
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
	<96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>
Message-ID: <20080227214032.GA1314@vidar.dreamhost.com>

On 2008.02.27 13:46:56 -0700, Nathan wrote:
> On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
> >  It was non-obvious to me too.
> >
> >  You call callRemote on the server-side Protocol to send a message to the
> >  client side.
> >
> >  I have a little demonstration PyGTK / AMP chat program at
> >  http://ripton.net/hg/ampchat/
> 
> I tried to look at your demo chat program, but all I could find was a
> mercurial summary page.  Do I need to install mercurial and check it
> out using that URL?  (I've never used mercurial)

You can do that.  Or you can click around in the links within the
Mercurial web interface until you see the code.  (I think you want
"manifest" and "file".)

> I don't quite understand what you mean by "on the server-side
> Protocol."  I have multiple clients connected to the server
> simultaneously, so if you mean (in the case of
> http://djfroofy.livejournal.com/3509.html ) calling
> TheServer.callRemote, then I don't see how it would know _which_
> client to send the message to.  I'm obviously misunderstanding
> something!

Each time a client connects to the server, a new protocol instance is
created on the server side.  When the client successfully logs in, I
add the username:protocol to a dict in the server-side factory.  So I
know how to find clients by username.

Then if someone sends a private message, I lookup the target username's
protocol in the dict, and do protocol.callRemote(commands.Send, message,
sender)

-- 
David Ripton    dripton at ripton.net



From clemesha at gmail.com  Wed Feb 27 18:37:47 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 27 Feb 2008 15:37:47 -0800
Subject: [Twisted-Python] twisted application server
In-Reply-To: <20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
Message-ID: <d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>

On Wed, Feb 27, 2008 at 3:46 AM, <glyph at divmod.com> wrote:

>
> On 11:11 am, coder_gus at lavabit.com wrote:
> >So, my question is: is this kind of architecture good to implement?
> >(asynchronous server and threaded workers)
>
> You might want to consider using process workers instead of thread
> workers, using spawnProcess and a simple control protocol.  This is
> easier to debug, since threads are painful to figure out, and it also
> scales better - you escape python's GIL and can take advantage of
> multiple cores, but even if it weren't for that, you can switch
> spawnProcess to some kind of remote connection API and run your
> processes remotely.


Would you say that this method of using a separate process instead of
threads to do work also is possibly good for database operations?

I'm always reading 'beware of threads' ;) with respect to Twisted,
so using a very simple control protocol to manage a separate
dedicate database process might be better than
relying on the threading that 'adbapi' uses?

Any comments on this would be appreciated.

Thanks,
-Alex


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080227/1e9802d9/attachment.htm 

From glyph at divmod.com  Wed Feb 27 19:20:29 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 28 Feb 2008 00:20:29 -0000
Subject: [Twisted-Python] twisted application server
In-Reply-To: <d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
Message-ID: <20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>

On 11:37 pm, clemesha at gmail.com wrote:
>Would you say that this method of using a separate process instead of
>threads to do work also is possibly good for database operations?

Sure.
>I'm always reading 'beware of threads' ;) with respect to Twisted,
>so using a very simple control protocol to manage a separate
>dedicate database process might be better than
>relying on the threading that 'adbapi' uses?

It would definitely work.  The main reason adbapi itself isn't done this 
way is that setting up a process pool is unfortunately more work than 
spawning a thread - you have to decide on a proper set of environment 
variables, locate the python interpreter, locate the script that you're 
going to run, make sure that script is installed by setup.py, decide on 
a control protocol, wait for the subprocess to start up before sending 
it messages, shut down the process appropriately, catch process 
termination and restart (or not), etc etc etc.  Twisted should really 
have a nice API that does all that stuff for you, though, and it's a 
shame that it doesn't.

The other reason is that adbapi is old.  If we were going to implement 
something like ADBAPI today, we'd probably write a process pool first, 
but adbapi was written as a quick hack to get some database integration 
a long time ago.

The only caveat is that additional Python interpreters take up more RAM 
than additional threads.  If the database processes are doing any heavy 
CPU lifting though, this cost could well be worth it.



From big_tyo at inf.its-sby.edu  Thu Feb 28 00:59:43 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Thu, 28 Feb 2008 12:59:43 +0700 (ICT)
Subject: [Twisted-Python] thread created from tcp connection
Message-ID: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>

hi,my name is raditya from indonesia,i'm newbie at twisted... i tried to
develop a server that receive data from many clients and send the same
data to all connected clients,and somehow i found some problem here.

The Problem is i still haven't figure out how to send some parameters to a
thread that created from established tcp connection.

please,can anyone help me with this little problem of mine?


best regard,
raditya


ps : sorry for the bad english


-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------




From glyph at divmod.com  Thu Feb 28 01:11:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 28 Feb 2008 06:11:58 -0000
Subject: [Twisted-Python] thread created from tcp connection
In-Reply-To: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>
References: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>
Message-ID: <20080228061158.21558.1802159749.divmod.xquotient.7194@joule.divmod.com>


On 05:59 am, big_tyo at inf.its-sby.edu wrote:
>The Problem is i still haven't figure out how to send some parameters 
>to a
>thread that created from established tcp connection.

The real problem is probably that Twisted is not thread safe; you 
probably should not be using threads at all.
>ps : sorry for the bad english

No problem!  I'm sure my indonesian is much worse :).  Thanks for using 
Twisted.

Since your english is not very good, it would be best if you could 
include Python code with your next message, so we can know exactly what 
you are talking about.



From coder_gus at lavabit.com  Thu Feb 28 06:58:04 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Thu, 28 Feb 2008 13:58:04 +0200
Subject: [Twisted-Python] connection identification string
Message-ID: <47C6A1CC.4020209@lavabit.com>

Is there a way to identify a connection by a number/string for later use?
It could be easily implemented or given the async character of twisted 
probably is not worth it ... but just as a hint? Is there?

Thanks.




From george at ringdevelopment.com  Thu Feb 28 08:32:38 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 28 Feb 2008 08:32:38 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <1204205558.29665.31.camel@localhost.localdomain>

On Thu, 2008-02-28 at 13:58 +0200, coder_gus wrote:
> Is there a way to identify a connection by a number/string for later use?
> It could be easily implemented or given the async character of twisted 
> probably is not worth it ... but just as a hint? Is there?

I've used a dictionary to keep track of sessions, with a unique string
to identify a session object.
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From itamar at itamarst.org  Thu Feb 28 08:41:03 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2008 08:41:03 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <1204206064.11169.94.camel@localhost.localdomain>


On Thu, 2008-02-28 at 13:58 +0200, coder_gus wrote:
> Is there a way to identify a connection by a number/string for later use?
> It could be easily implemented or given the async character of twisted 
> probably is not worth it ... but just as a hint? Is there?

Most of the time you can just use a reference to the Protocol
instance... if you need to refer to the connection based on input from
network protocol you can just use a dictionary mapping strings to
Protocols.




From radix at twistedmatrix.com  Thu Feb 28 08:48:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 28 Feb 2008 08:48:55 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <60ed19d40802280548n39398aeeo7f3d7a7bb40c0df8@mail.gmail.com>

On Thu, Feb 28, 2008 at 6:58 AM, coder_gus <coder_gus at lavabit.com> wrote:
> Is there a way to identify a connection by a number/string for later use?
>  It could be easily implemented or given the async character of twisted
>  probably is not worth it ... but just as a hint? Is there?

Protocol objects can be put inside of Python data structures like
dicts and lists. For example, it may be useful for an IRC server to
have a mapping of {username: protocol instance}.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Thu Feb 28 09:42:00 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 28 Feb 2008 15:42:00 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
References: <47C52001.2080506@evotex.ch>
	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
Message-ID: <47C6C838.4020308@evotex.ch>

Drew Smathers wrote:
> On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello everyone,
>>
>>  I have a small question, I have a service which needs to sometimes send
>>  data (without having received any prior to sending) and sometimes
>>  receive data, which is better :
>>
>>  1) create a factory that inherits from ServerFactory and ClientFactory,
>>  thus it can listen and send data
>>
>>  2) create a factory that inherits from ServerFactory only and uses a
>>  single-use client (ClientCreator, as shown in the writing clients howto)
>>  when it needs to send data
>>
>>     
>
> I'm not sure of there's a single right way to do it, but I wouldn't
> bother inheriting from both ClientFactory and ServerFactory.  I think
> you're on the write track with 2, though.
>
>   
I had taken route 1 up until now (I'm thinking about switching...)

Maybe there's something I haven't quite gotten, when ClientA initially 
connects to the server, the factory creates an instance of the protocol, 
correct? Now ClientA sends some data to the server, which processes it 
and sends something back. After that, the TCP session ends, and the 
client disconnects, and the protocols instance dies. Is this correct or 
does it live on and get reused somehow? I ask this because since 
initially the clients send data to the server (registration), the server 
will there after send data to the clients. This makes the client have to 
connect to the server initially though a port using reactor.connectTCP() 
and listen to a port (that the server now knows since the client 
registered itself) using reactor.listenTCP(). I think I have to use 
reactor.connectTCP() instead of  ClientCreator since the connection has 
to happen at the beginning and a transport needs to exist before I can 
send anything. Well...now that I think about it, I could have the 
factory register the client...... that would make me not have to inherit 
from the Client factory.... (I've now switched to solution 2, see last 
part of this email).
> In most use cases you shouldn't have to create custom factories.  
I have to since I need a non-reconnecting client xmlstream, and the 
factory used with xmlstreams is a reconnecting client.
> Just
> write the protocol to support bidirectional comm and to create the
> server:
>
> f = Factory()
> f.protocol = YourBidirectionalProtocol
>
> Regarding the client, how you implement it depends on whether or not
> the server is establishing the connection vs. reusing the existing
> connection.  
What exactly do you mean by reusing an existing connection?
> If you're establishing the connection (like in a cluster
> app with known peers), just use ClientCreator.  If you're reusing the
> existing connection, then you might not have to anything, unless you
> have some state to set up which could be done by overriding
> connectionMade on your Protocol.
>
> Finally, take everything I've stated above with a grain of salt.
>
>   
Thanks, I find it fairly hard to get used to Twisted, I wanted to buy 
the book, but it was written in 2005 and I'm not sure if it's still 
valid with today's version.

BTW, any idea why I'm getting this type of behavior (one server, 3 
distinct connections from clients) :

Daemon listening for connections...

daemon proto instance 1
Connection from 127.0.0.1:57821! <-- ok, Client1
....
daemon proto instance 2
Connection from 127.0.0.1:57821! <-- Client1 again????? why?
Connection from 127.0.0.1:57823! <-- ok, Client2
....
daemon proto instance 3
Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
Connection from 127.0.0.1:57824! <-- ok, Client3

Oh, and by the time I finished writing this email, I've switched to 
solution 2, but I still get the  behavior above.



From drew.smathers at gmail.com  Thu Feb 28 10:39:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 28 Feb 2008 10:39:52 -0500
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C6C838.4020308@evotex.ch>
References: <47C52001.2080506@evotex.ch>
	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
	<47C6C838.4020308@evotex.ch>
Message-ID: <368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>

On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Drew Smathers wrote:
>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>  > <mailing_lists at evotex.ch> wrote:
>  >
>  >> Hello everyone,
>  >>
>  >>  I have a small question, I have a service which needs to sometimes send
>  >>  data (without having received any prior to sending) and sometimes
>  >>  receive data, which is better :
>  >>
>  >>  1) create a factory that inherits from ServerFactory and ClientFactory,
>  >>  thus it can listen and send data
>  >>
>  >>  2) create a factory that inherits from ServerFactory only and uses a
>  >>  single-use client (ClientCreator, as shown in the writing clients howto)
>  >>  when it needs to send data
>  >>
>  >>
>  >
>  > I'm not sure of there's a single right way to do it, but I wouldn't
>  > bother inheriting from both ClientFactory and ServerFactory.  I think
>  > you're on the write track with 2, though.
>  >
>  >
>  I had taken route 1 up until now (I'm thinking about switching...)
>
>  Maybe there's something I haven't quite gotten, when ClientA initially
>  connects to the server, the factory creates an instance of the protocol,
>  correct?

Yes.

> Now ClientA sends some data to the server, which processes it
>  and sends something back. After that, the TCP session ends, and the
>  client disconnects, and the protocols instance dies. Is this correct or
>  does it live on and get reused somehow?

The protocol instance does not get reused.

>  I ask this because since
>  initially the clients send data to the server (registration), the server
>  will there after send data to the clients. This makes the client have to
>  connect to the server initially though a port using reactor.connectTCP()
>  and listen to a port (that the server now knows since the client
>  registered itself) using reactor.listenTCP().

This is might be a bad idea - depending on the locality of your
servers and clients. Why not just use the established connection?  If
the *client* is listening on a port then it isn't just a client - it's
a server, or a peer in a clustered system.

>  I think I have to use
>  reactor.connectTCP() instead of  ClientCreator since the connection has
>  to happen at the beginning and a transport needs to exist before I can
>  send anything. Well...now that I think about it, I could have the
>  factory register the client...... that would make me not have to inherit
>  from the Client factory.... (I've now switched to solution 2, see last
>  part of this email).
>

Ok.

> > In most use cases you shouldn't have to create custom factories.
>  I have to since I need a non-reconnecting client xmlstream, and the
>  factory used with xmlstreams is a reconnecting client.
>
> > Just
>  > write the protocol to support bidirectional comm and to create the
>  > server:
>  >
>  > f = Factory()
>  > f.protocol = YourBidirectionalProtocol
>  >
>  > Regarding the client, how you implement it depends on whether or not
>  > the server is establishing the connection vs. reusing the existing
>  > connection.
>  What exactly do you mean by reusing an existing connection?
>
> > If you're establishing the connection (like in a cluster
>  > app with known peers), just use ClientCreator.  If you're reusing the
>  > existing connection, then you might not have to anything, unless you
>  > have some state to set up which could be done by overriding
>  > connectionMade on your Protocol.
>  >
>  > Finally, take everything I've stated above with a grain of salt.
>  >
>  >
>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>  the book, but it was written in 2005 and I'm not sure if it's still
>  valid with today's version.
>

The book it is not up to date.

>  BTW, any idea why I'm getting this type of behavior (one server, 3
>  distinct connections from clients) :
>

Without seeing your code, no.

>  Daemon listening for connections...
>
>  daemon proto instance 1
>  Connection from 127.0.0.1:57821! <-- ok, Client1
>  ....
>  daemon proto instance 2
>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>  Connection from 127.0.0.1:57823! <-- ok, Client2
>  ....
>  daemon proto instance 3
>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>  Connection from 127.0.0.1:57824! <-- ok, Client3
>
>  Oh, and by the time I finished writing this email, I've switched to
>  solution 2, but I still get the  behavior above.
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From mailing_lists at evotex.ch  Thu Feb 28 11:14:29 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 28 Feb 2008 17:14:29 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
References: <47C52001.2080506@evotex.ch>	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>	<47C6C838.4020308@evotex.ch>
	<368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
Message-ID: <47C6DDE5.7030207@evotex.ch>

Drew Smathers wrote:
> On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Drew Smathers wrote:
>>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>>  > <mailing_lists at evotex.ch> wrote:
>>  >
>>  >> Hello everyone,
>>  >>
>>  >>  I have a small question, I have a service which needs to sometimes send
>>  >>  data (without having received any prior to sending) and sometimes
>>  >>  receive data, which is better :
>>  >>
>>  >>  1) create a factory that inherits from ServerFactory and ClientFactory,
>>  >>  thus it can listen and send data
>>  >>
>>  >>  2) create a factory that inherits from ServerFactory only and uses a
>>  >>  single-use client (ClientCreator, as shown in the writing clients howto)
>>  >>  when it needs to send data
>>  >>
>>  >>
>>  >
>>  > I'm not sure of there's a single right way to do it, but I wouldn't
>>  > bother inheriting from both ClientFactory and ServerFactory.  I think
>>  > you're on the write track with 2, though.
>>  >
>>  >
>>  I had taken route 1 up until now (I'm thinking about switching...)
>>
>>  Maybe there's something I haven't quite gotten, when ClientA initially
>>  connects to the server, the factory creates an instance of the protocol,
>>  correct?
>>     
>
> Yes.
>
>   
Ok
>> Now ClientA sends some data to the server, which processes it
>>  and sends something back. After that, the TCP session ends, and the
>>  client disconnects, and the protocols instance dies. Is this correct or
>>  does it live on and get reused somehow?
>>     
>
> The protocol instance does not get reused.
>
>   
Ok, so every time there is data exchanged (new tcp/ip session) then a 
new protocol instance is created. Any persistence/state data must 
therefore be stored in the factory if I understand correctly.
>>  I ask this because since
>>  initially the clients send data to the server (registration), the server
>>  will there after send data to the clients. This makes the client have to
>>  connect to the server initially though a port using reactor.connectTCP()
>>  and listen to a port (that the server now knows since the client
>>  registered itself) using reactor.listenTCP().
>>     
>
> This is might be a bad idea - depending on the locality of your
> servers and clients. Why not just use the established connection?  
The idea is to have services register on a central server then they 
transmit messages to the daemon which routes/relays them to the correct 
service, sort of like a micro-kernel. So, sometimes the services 
initiate the communication process and sometimes they don't, the central 
server does. This makes the services be servers and clients. Imagine this :

service1 has some data that needs to be processed by service2 (which 
will in turn send it to another service), is sends it to the central 
server, which sends it to service2. Service2 does whatever it has to do, 
and then sends it to the central server to route to service_n.

So the established connection is usually useless, except for sending 
some sort of ACK maybe.

> If
> the *client* is listening on a port then it isn't just a client - it's
> a server, or a peer in a clustered system.
>
>   
I guess it's/they a sort of peer(s) in a clustered system, it/they may 
reside on the same machine as the central server or not.
>>  I think I have to use
>>  reactor.connectTCP() instead of  ClientCreator since the connection has
>>  to happen at the beginning and a transport needs to exist before I can
>>  send anything. Well...now that I think about it, I could have the
>>  factory register the client...... that would make me not have to inherit
>>  from the Client factory.... (I've now switched to solution 2, see last
>>  part of this email).
>>
>>     
>
> Ok.
>
>   
>>> In most use cases you shouldn't have to create custom factories.
>>>       
>>  I have to since I need a non-reconnecting client xmlstream, and the
>>  factory used with xmlstreams is a reconnecting client.
>>
>>     
>>> Just
>>>       
>>  > write the protocol to support bidirectional comm and to create the
>>  > server:
>>  >
>>  > f = Factory()
>>  > f.protocol = YourBidirectionalProtocol
>>  >
>>  > Regarding the client, how you implement it depends on whether or not
>>  > the server is establishing the connection vs. reusing the existing
>>  > connection.
>>  What exactly do you mean by reusing an existing connection?
>>
>>     
>>> If you're establishing the connection (like in a cluster
>>>       
>>  > app with known peers), just use ClientCreator.  If you're reusing the
>>  > existing connection, then you might not have to anything, unless you
>>  > have some state to set up which could be done by overriding
>>  > connectionMade on your Protocol.
>>  >
>>  > Finally, take everything I've stated above with a grain of salt.
>>  >
>>  >
>>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>>  the book, but it was written in 2005 and I'm not sure if it's still
>>  valid with today's version.
>>
>>     
>
> The book it is not up to date.
>
>   
>>  BTW, any idea why I'm getting this type of behavior (one server, 3
>>  distinct connections from clients) :
>>
>>     
>
> Without seeing your code, no.
>
>   
ok, it's a bit long.....

-------------------------"Central server" aka 
Daemon---------------------------------------------------------------------------

class MdfXmlStreamFactory(XmlStreamFactoryMixin):
    """
    The factory class used by the daemon and services to create
    protocol instances
    """
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        XmlStreamFactoryMixin.__init__(self)
        self.args = args
        self.kwargs = kwargs
        self.protocol = proto

    def buildProtocol(self, addr):
        """
        Builds the protocol and
       
        @param addr: The address (protocol, IP, port) of the connection
        @type addr: 
L{IPv4Address<twisted.internet.address._ServerFactoryIPv4Address>}
       
        @return: an instance of the built protocol
        """
        #self.resetDelay()
        xs = self.protocol(*self.args, **self.kwargs)
        xs.factory = self
        self.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, 
xs.connected) # stream connect event or xml start event???
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)

        return xs

class MdfXmlStreamServerFactory(MdfXmlStreamFactory, ServerFactory):
    """
    The factory class used by the daemon to create
    protocol instances
    """
   
    # The registered services
    _services = {}
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        MdfXmlStreamFactory.__init__(self, proto, *args, **kwargs)

class Daemon(xmlstream.XmlStream):
    """
    The daemon is the implementation of a microkernel type inter-service
    communication (ISC) routing daemon. Here is how it works :
   
        - Services announce their presence to the daemon by giving their 
name,
          version, ip, port and a list of message-types that they accept
        - The daemon listens for messages from the attached services, 
when one
          is received, it routes the message to the correct service
   
    @todo: add unique id generation/verification
    """
   
    # Holds the real method
    __dataReceived = xmlstream.XmlStream.dataReceived
   
    # The registered services
    #__services = {}
    cnt = 1
   
    def __init__(self, *args, **kwargs):
        """
        Constructor
       
        @param args: non-keyword args
        @type args: C{tuple}
        @param kwargs: keyword args
        @type kwargs: C{dict}
        """
        xmlstream.XmlStream.__init__(self)
        self.__routeTo = None
        self.__lastMsgType = None
        self.__lastMsgId = None
        self.inst = Daemon.cnt
        Daemon.cnt += 1
        print "daemon proto instance %d" % self.inst
       
   
    def connectionMade(self):
        xmlstream.XmlStream.connectionMade(self)
   
    def dataReceived(self, data):
        """
        Called everytime data is received
       
        @param data: the data received
        @type data: C{object} (anything)
        """
        self.__dataReceived(data)
       
    def connectionLost(self, reason):
        """
        Called when the connection is shut down, restores the
        dataReceived method
       
        @param reason: the reason why the connection was lost
        @type reason: C{str}
        """
        self.__dataReceived = xmlstream.XmlStream.dataReceived
        self.__routeTo = None
        xmlstream.XmlStream.connectionLost(self, reason)
   
    def __onHeader(self, element):
        """
        Analyse a header and set the data's recipiant
       
        @param element: the header element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
        """
        print "got header from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())
       
        self.__lastMsgId = element.getAttribute("id")
        self.__lastMsgType = element.getAttribute("type")
        if(self.__lastMsgType != constants._REG_MSG_TYPE):
            self.__routeTo = self.factory._services[type]
            self.__dataReceived = __routeDataReceived
   
    def __onReg(self, element):
        """
        Register a service
       
        @param element: the registeration element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
        """
        print "got reg from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())

        name = 
str(xpath.XPathQuery("/body/reg/name").queryForNodes(element)[0])
        version = 
str(xpath.XPathQuery("/body/reg/version").queryForNodes(element)[0])
        #address = 
str(xpath.XPathQuery("/body/reg/address").queryForNodes(element)[0])
        port = 
int(str(xpath.XPathQuery("/body/reg/port").queryForNodes(element)[0]))
        msgs = [ str(m) for m in 
xpath.XPathQuery("/body/reg/message_type").queryForNodes(element) ]
       
        address = self.transport.getPeer().host
        #port = self.transport.getPeer().port
        serv = ServiceReg(name, version, msgs, address, port)
        self.__registerService(serv)
       
    def connected(self, xs):
        """
        Called when a client connects using an XML stream
       
        @param xs: the current xml stream
        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        """
       
        print 'Connection from %s:%s!' % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port))
        xs.addObserver("/header", self.__onHeader)
        xs.addObserver("/body/reg", self.__onReg)
       
    def __routeDataReceived(self, data):
        """
        Pushes the messages to the correct service
       
        @param data: the data received
        @type data: C{object} (anything)
        """
        print "route '%s' to : %s" % (str(data), self.__routeTo)
       
        utils.sendMessage(self.__routeTo.ip, self.__routeTo.port, data)
        #self.send(data)
       
    def __registerService(self, service):
        """
        Register a service
       
        @param service: the service to register
        @type service: L{ServiceReg}
       
        @raise ServiceMessageConflictError: if another service already 
has a
                                            message registered that the 
current
                                            service is trying to register
       
        @todo: what is to be done with the exception once raised???? 
Finish status message...
        """
       
        def foundConflict(self, msgTypes):
            """
            Check if there is a conflict with message types to be registered
            by this service
           
            @param service: the service messages to check for conflicts
            @type service: C{str}
           
            @return: the conflicting service type or None if no
                    conflict is found
            """
            for mt in msgTypes:
                if(self.factory._services.has_key(mt)):
                    return mt
            return None
       
        print "Registering service : ", str(service)
       
        try:
            #
            # Check if another service already registered a message type 
that
            # the current service is trying to register
            #
            conflict = foundConflict(self, service.acceptedMsgs)
            if(conflict != None):
                raise ServiceMessageConflictError(conflict)
           
            #
            # Regrister the message types and this service
            #
            for msgType in service.acceptedMsgs:
                self.factory._services[msgType] = service
               
        except ServiceMessageConflictError, reason:
            status = 
utils.createConfirmationMsgBody(constants._MSG_FAILURE_TYPE,
                                                     self.__lastMsgId, 
str(reason))
        else:
            status = 
utils.createConfirmationMsgBody(constants._MSG_SUCCESS_TYPE,
                                                     self.__lastMsgId)
           
        #
        # Send registeration confirmation (succeeded or failed)
        #
        msgRoot = utils.createMessage(constants._REG_MSG_CONFIRM_TYPE,
                                      constants._CONF_MSG_ID,
                                      constants._DAEMON_SERVICE_NAME,
                                      constants._MSG_SPEC_VERSION,
                                      constants._STATUS_DATA_TYPE, status)
       
        print "Sending confirmation message to %s : %s" % 
(self.transport.getPeer().host, msgRoot.toXml())
       
        #self.send(msgRoot)
        utils.sendMessage(self.transport.getPeer().host, service.port, 
msgRoot)
   
if(__name__ == "__main__"):

    reactor.listenTCP(4321, MdfXmlStreamServerFactory(Daemon))
    print "Listening for connections..."
    reactor.run()

----------------------------------------"Service"-----------------------------------------------------------------------------------------------------

class MdfXmlStreamClientFactory(MdfXmlStreamServerFactory):
    """
    The factory class used by the services to create
    protocol instances
   
    @attention: this class might dissapear, I have to see if it's useful 
to keep it or not
    """
   
    __daemonAddrs = None
    __daemonPort = None
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        MdfXmlStreamServerFactory.__init__(self, proto, *args, **kwargs)
        self._serviceInfo = ServiceReg(kwargs["name"], 
kwargs["version"], list(kwargs.get("messageTypes", [])))
        MdfXmlStreamClientFactory.__daemonAddrs = kwargs["address"]
        MdfXmlStreamClientFactory.__daemonPort = kwargs["port"]
       
    def register(self, port):
        """
        Register the service
       
        @param port: the service's port
        @type port: C{int}
        """
        self._serviceInfo.port = port
        msgBodyData = utils.createRegMsgBody(self._serviceInfo.name,
                                             self._serviceInfo.version,
                                             str(self._serviceInfo.port),
                                             self._serviceInfo.acceptedMsgs)
       
        msgRoot = utils.createMessage(constants._REG_MSG_TYPE,
                                      constants._REG_MSG_ID,
                                      self._serviceInfo.name,
                                      constants._MSG_SPEC_VERSION,
                                      constants._REG_DATA_TYPE, msgBodyData)
       
        utils.sendMessage(MdfXmlStreamClientFactory.__daemonAddrs,
                          MdfXmlStreamClientFactory.__daemonPort,
                          msgRoot)

class BaseService(xmlstream.XmlStream):
    """
    The service is the implementation of a microkernel type inter-service
    communication (ISC) endpoint. Here is how it works :
   
        - Services announce their presence to the daemon by giving their 
name,
          version, ip, port and a list of message-types that they accept
        - The daemon listens for messages from the attached services, 
when one
          is received, it routes the message to the correct service
         
    @todo: add unique id generation/verification
    """
   
    def __init__(self, *args, **kwargs):
        """
        Constructor
       
        @param args: non-keyword args
        @type args: C{tuple}
        @param kwargs: keyword args
        @type kwargs: C{dict}
        """
        xmlstream.XmlStream.__init__(self)
        self._msgSrc = None
        self._msgDest = None
        self._msgBodyData = None
        self._registered = False
   
    def _onHeader(self, element):
        """
        Analyse a header and save the source and destination
       
        @param element: the header element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add msg spec version verification
        @todo: add id verification???
        """
        print "got header from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())
       
        self._msgSrc = 
xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("source")
        self._msgDest = 
xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("destination")
       
    def _onBody(self, element):
        """
        Get the body act accordingly
       
        @param element: the body element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add data type verification
        @todo: call data action callbacks
        """
        self._msgBodyData = 
xpath.XPathQuery("/body").queryForNodes(element)[0].toXml()
        print "_onbody : ", self._msgBodyData
       
    def _onConfirm(self, element):
        """
        Get the confirmation message and act accordingly
       
        @param element: the confirmation element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add data type verification
        @todo: call data action callbacks
        """
        status = 
str(xpath.XPathQuery("/body/conf/status").queryForNodes(element)[0])
        id = 
int(str(xpath.XPathQuery("/body/conf/id").queryForNodes(element)[0]))
        msg = 
str(xpath.XPathQuery("/body/conf/msg").queryForNodes(element)[0])
        if(id == constants._REG_MSG_ID):
            if(status == constants._MSG_SUCCESS_TYPE):
                self._registered = True
       
    def connected(self, xs):
        """
        Called when a client connects using an XML stream
       
        @param xs: the current xml stream
        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
       
        @todo: add data action callbacks
        """
        print 'Connection from %s:%s!' % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port))
        xs.addObserver("/header", self._onHeader)
        xs.addObserver("/body/conf", self._onConfirm)
        xs.addObserver("/body", self._onBody)
       

def start(daemonAddrs, daemonPort, serviceRef, serviceName, 
serviceVersion, serviceMessageTypes):
    """
    Start the daemon
   
    @param daemonPort: the port the daemon listens on
    @type daemonPort: C{int}
    @param serviceRef: a reference to the service's class
    @type serviceRef: a subclass of L{BaseService<service.BaseService>}
    @param serviceName: the service's name
    @type serviceName: C{str}
    @param serviceVersion: the service's version
    @type serviceVersion: C{str}
    @param serviceMessageTypes: the list of messages the service registers
    @type serviceMessageTypes: C{str list}
    """
    f = MdfXmlStreamClientFactory(serviceRef, address=daemonAddrs, 
port=daemonPort, name=serviceName, version=serviceVersion, 
messageTypes=serviceMessageTypes)
    port = reactor.listenTCP(0, f).getHost().port
    f.register(port)
    print port
   
    reactor.run()

if(__name__ == "__main__"):

    start("localhost", 4321, BaseService, "service_base", "1.0", ["all"])
>>  Daemon listening for connections...
>>
>>  daemon proto instance 1
>>  Connection from 127.0.0.1:57821! <-- ok, Client1
>>  ....
>>  daemon proto instance 2
>>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>>  Connection from 127.0.0.1:57823! <-- ok, Client2
>>  ....
>>  daemon proto instance 3
>>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>>  Connection from 127.0.0.1:57824! <-- ok, Client3
>>
>>  Oh, and by the time I finished writing this email, I've switched to
>>  solution 2, but I still get the  behavior above.
>>
>>
>>
>>  _______________________________________________
>>  Twisted-Python mailing list
>>  Twisted-Python at twistedmatrix.com
>>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>   
Thank you,
Gabriel



From camrdale at gmail.com  Thu Feb 28 15:34:34 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 28 Feb 2008 12:34:34 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
	<f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
	<20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>
Message-ID: <f4438a6a0802281234v3377e269jf3a4463e69d84e01@mail.gmail.com>

On 2/27/08, Thomas Herv? <therve at free.fr> wrote:
> Thanks. Some maintenance on this would be great.

I'm not sure what you mean, is there some current maintenance (e.g.
more comments) you think should be added now? or do you refer to
future maintenance in case things break?

> I haven't very closely at your patch, but there is definitely
>  something missing: tests. It's a requirement for anything going into
>  Twisted, and generally a requirement for making something works.

Attached is a patch to twisted.test.test_policies.py to work with the
modified policies.py. In preparing it, I did fix one bug in my
previous policies.py which caused the write limiter to always be
active, so I attach an updated (fixed) patch of policies.py.

One thing I found in the tests is that the resumeProducing() calls
that my modified policies.py schedules via reactor.callLater() are
never called. This is (I believe) an artifact of the test, as the test
uses the twisted.internet.task.Clock's advance function, which only
runs scheduled calls added to it and not the reactor. Being unfamiliar
with twisted's testing framework, and having spent FAR too much time
on this already, I was not able to modify the test to work properly
with the reactor.callLater's, so I commented out those parts of the
test.

>  The discussion should probably continue in the tracker. You can open a
>  ticket, or maybe attach your patch at
>  http://twistedmatrix.com/trac/ticket/1460 (which doesn't exactly
>  describe the same goal).

Noted, though I prefer email.

Thanks,
Cameron
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_policies.py.patch
Type: text/x-diff
Size: 1550 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080228/dd4955f5/attachment.patch 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: policies.py.patch
Type: text/x-diff
Size: 7651 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080228/dd4955f5/attachment-0001.patch 

From nathan.stocks at gmail.com  Thu Feb 28 15:48:55 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 28 Feb 2008 13:48:55 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
Message-ID: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>

My project teammate has a nearly identical MacBook Pro as mine (we're
both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
source (sudo python setup.py install) succeeds on my machine, while on
his machine it complains about a missing Python.h file.  Does anyone
know what package provides that Python.h file?  Is it one of the
packages on the Leopard DVD?

~ Nathan



From dreid at dreid.org  Thu Feb 28 17:07:58 2008
From: dreid at dreid.org (David Reid)
Date: Thu, 28 Feb 2008 14:07:58 -0800
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
Message-ID: <CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>


On Feb 28, 2008, at 12:48 PM, Nathan wrote:

> My project teammate has a nearly identical MacBook Pro as mine (we're
> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
> source (sudo python setup.py install) succeeds on my machine, while on
> his machine it complains about a missing Python.h file.  Does anyone
> know what package provides that Python.h file?  Is it one of the
> packages on the Leopard DVD?

Developer Tools.

There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard

-David

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz









From nathan.stocks at gmail.com  Thu Feb 28 18:19:25 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 28 Feb 2008 16:19:25 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
Message-ID: <96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>

On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
>
>
>  On Feb 28, 2008, at 12:48 PM, Nathan wrote:
>
>  > My project teammate has a nearly identical MacBook Pro as mine (we're
>  > both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
>  > source (sudo python setup.py install) succeeds on my machine, while on
>  > his machine it complains about a missing Python.h file.  Does anyone
>  > know what package provides that Python.h file?  Is it one of the
>  > packages on the Leopard DVD?
>
>  Developer Tools.
>
>  There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard

Yes, I should have mentioned that I found a binary package for him and
installed it.  Nevertheless, I really would like to know why it didn't
work, as I don't want to depend on someone else to package it for me.
Sometimes it's nice to be able to use the latest version in the
trunk...

~ Nathan



From dreid at dreid.org  Thu Feb 28 19:11:30 2008
From: dreid at dreid.org (David Reid)
Date: Thu, 28 Feb 2008 16:11:30 -0800
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
Message-ID: <A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>


On Feb 28, 2008, at 3:19 PM, Nathan wrote:

> On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
>>
>>
>> On Feb 28, 2008, at 12:48 PM, Nathan wrote:
>>
>>> My project teammate has a nearly identical MacBook Pro as mine  
>>> (we're
>>> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
>>> source (sudo python setup.py install) succeeds on my machine,  
>>> while on
>>> his machine it complains about a missing Python.h file.  Does anyone
>>> know what package provides that Python.h file?  Is it one of the
>>> packages on the Leopard DVD?
>>
>> Developer Tools.

Sorry I thought I made this clear, Python.h is shipped with the Apple  
Developer Tools.  (i.e. Install XCode)

>>
>>
>> There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard
>
> Yes, I should have mentioned that I found a binary package for him and
> installed it.  Nevertheless, I really would like to know why it didn't
> work, as I don't want to depend on someone else to package it for me.
> Sometimes it's nice to be able to use the latest version in the
> trunk...
>
> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz









From natester at gmail.com  Fri Feb 29 00:37:55 2008
From: natester at gmail.com (Nathaniel Haggard)
Date: Thu, 28 Feb 2008 22:37:55 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
	<A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
Message-ID: <4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>

On osx install from source puts twisted in 2 different places.  There
are args you can pass to setup to make it work.


On 2/28/08, David Reid <dreid at dreid.org> wrote:
>
> On Feb 28, 2008, at 3:19 PM, Nathan wrote:
>
> > On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
> >>
> >>
> >> On Feb 28, 2008, at 12:48 PM, Nathan wrote:
> >>
> >>> My project teammate has a nearly identical MacBook Pro as mine
> >>> (we're
> >>> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
> >>> source (sudo python setup.py install) succeeds on my machine,
> >>> while on
> >>> his machine it complains about a missing Python.h file.  Does anyone
> >>> know what package provides that Python.h file?  Is it one of the
> >>> packages on the Leopard DVD?
> >>
> >> Developer Tools.
>
> Sorry I thought I made this clear, Python.h is shipped with the Apple
> Developer Tools.  (i.e. Install XCode)
>
> >>
> >>
> >> There are binary packages available:
> http://twistedmatrix.com/trac/wiki/Packages#Leopard
> >
> > Yes, I should have mentioned that I found a binary package for him and
> > installed it.  Nevertheless, I really would like to know why it didn't
> > work, as I don't want to depend on someone else to package it for me.
> > Sometimes it's nice to be able to use the latest version in the
> > trunk...
> >
> > ~ Nathan
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> "Usually the protocol is this: I appoint someone for a task,
> which they are not qualified to do.  Then, they have to fight
> a bear if they don't want to do it." -- Glyph Lefkowitz
>
>
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mailing_lists at evotex.ch  Fri Feb 29 05:34:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 29 Feb 2008 11:34:46 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C6DDE5.7030207@evotex.ch>
References: <47C52001.2080506@evotex.ch>	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>	<47C6C838.4020308@evotex.ch>	<368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
	<47C6DDE5.7030207@evotex.ch>
Message-ID: <47C7DFC6.3040107@evotex.ch>

Gabriel Rossetti wrote:
> Drew Smathers wrote:
>> On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
>> <mailing_lists at evotex.ch> wrote:
>>  
>>> Drew Smathers wrote:
>>>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>>>  > <mailing_lists at evotex.ch> wrote:
>>>  >
>>>  >> Hello everyone,
>>>  >>
>>>  >>  I have a small question, I have a service which needs to 
>>> sometimes send
>>>  >>  data (without having received any prior to sending) and sometimes
>>>  >>  receive data, which is better :
>>>  >>
>>>  >>  1) create a factory that inherits from ServerFactory and 
>>> ClientFactory,
>>>  >>  thus it can listen and send data
>>>  >>
>>>  >>  2) create a factory that inherits from ServerFactory only and 
>>> uses a
>>>  >>  single-use client (ClientCreator, as shown in the writing 
>>> clients howto)
>>>  >>  when it needs to send data
>>>  >>
>>>  >>
>>>  >
>>>  > I'm not sure of there's a single right way to do it, but I wouldn't
>>>  > bother inheriting from both ClientFactory and ServerFactory.  I 
>>> think
>>>  > you're on the write track with 2, though.
>>>  >
>>>  >
>>>  I had taken route 1 up until now (I'm thinking about switching...)
>>>
>>>  Maybe there's something I haven't quite gotten, when ClientA initially
>>>  connects to the server, the factory creates an instance of the 
>>> protocol,
>>>  correct?
>>>     
>>
>> Yes.
>>
>>   
> Ok
>>> Now ClientA sends some data to the server, which processes it
>>>  and sends something back. After that, the TCP session ends, and the
>>>  client disconnects, and the protocols instance dies. Is this 
>>> correct or
>>>  does it live on and get reused somehow?
>>>     
>>
>> The protocol instance does not get reused.
>>
>>   
> Ok, so every time there is data exchanged (new tcp/ip session) then a 
> new protocol instance is created. Any persistence/state data must 
> therefore be stored in the factory if I understand correctly.
>>>  I ask this because since
>>>  initially the clients send data to the server (registration), the 
>>> server
>>>  will there after send data to the clients. This makes the client 
>>> have to
>>>  connect to the server initially though a port using 
>>> reactor.connectTCP()
>>>  and listen to a port (that the server now knows since the client
>>>  registered itself) using reactor.listenTCP().
>>>     
>>
>> This is might be a bad idea - depending on the locality of your
>> servers and clients. Why not just use the established connection?  
> The idea is to have services register on a central server then they 
> transmit messages to the daemon which routes/relays them to the 
> correct service, sort of like a micro-kernel. So, sometimes the 
> services initiate the communication process and sometimes they don't, 
> the central server does. This makes the services be servers and 
> clients. Imagine this :
>
> service1 has some data that needs to be processed by service2 (which 
> will in turn send it to another service), is sends it to the central 
> server, which sends it to service2. Service2 does whatever it has to 
> do, and then sends it to the central server to route to service_n.
>
> So the established connection is usually useless, except for sending 
> some sort of ACK maybe.
>
>> If
>> the *client* is listening on a port then it isn't just a client - it's
>> a server, or a peer in a clustered system.
>>
>>   
> I guess it's/they a sort of peer(s) in a clustered system, it/they may 
> reside on the same machine as the central server or not.
>>>  I think I have to use
>>>  reactor.connectTCP() instead of  ClientCreator since the connection 
>>> has
>>>  to happen at the beginning and a transport needs to exist before I can
>>>  send anything. Well...now that I think about it, I could have the
>>>  factory register the client...... that would make me not have to 
>>> inherit
>>>  from the Client factory.... (I've now switched to solution 2, see last
>>>  part of this email).
>>>
>>>     
>>
>> Ok.
>>
>>  
>>>> In most use cases you shouldn't have to create custom factories.
>>>>       
>>>  I have to since I need a non-reconnecting client xmlstream, and the
>>>  factory used with xmlstreams is a reconnecting client.
>>>
>>>    
>>>> Just
>>>>       
>>>  > write the protocol to support bidirectional comm and to create the
>>>  > server:
>>>  >
>>>  > f = Factory()
>>>  > f.protocol = YourBidirectionalProtocol
>>>  >
>>>  > Regarding the client, how you implement it depends on whether or not
>>>  > the server is establishing the connection vs. reusing the existing
>>>  > connection.
>>>  What exactly do you mean by reusing an existing connection?
>>>
>>>    
>>>> If you're establishing the connection (like in a cluster
>>>>       
>>>  > app with known peers), just use ClientCreator.  If you're reusing 
>>> the
>>>  > existing connection, then you might not have to anything, unless you
>>>  > have some state to set up which could be done by overriding
>>>  > connectionMade on your Protocol.
>>>  >
>>>  > Finally, take everything I've stated above with a grain of salt.
>>>  >
>>>  >
>>>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>>>  the book, but it was written in 2005 and I'm not sure if it's still
>>>  valid with today's version.
>>>
>>>     
>>
>> The book it is not up to date.
>>
>>  
>>>  BTW, any idea why I'm getting this type of behavior (one server, 3
>>>  distinct connections from clients) :
>>>
>>>     
>>
>> Without seeing your code, no.
>>
>>   
Ok, I figured out what is wrong, when the factories are created, I add a 
bootstrap to an event that will call a callback when that event is 
received. In the central server, when a client/service connects, the 
callback is called and xml event observers are added (and now I added a 
method that removes them when the client disconnects). What happens is 
when a second client connects, the event calls the callback for every 
instance of the protocol, not just the one for the current connection. I 
traced it down to the following code in   :

        self.addBootstrap(xmlstream.STREAM_START_EVENT, xs._connected)
        self.addBootstrap(xmlstream.STREAM_END_EVENT, xs._disconnected)
       
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)

since the original XmlStreamFactory/XmlStreamFactoryMixin was designed 
to be a XML client and not a server, it has no notion of differentiating 
protocol instances (since there is only one)

Gabriel
> ok, it's a bit long.....
>
> -------------------------"Central server" aka 
> Daemon--------------------------------------------------------------------------- 
>
>
> class MdfXmlStreamFactory(XmlStreamFactoryMixin):
>    """
>    The factory class used by the daemon and services to create
>    protocol instances
>    """
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        XmlStreamFactoryMixin.__init__(self)
>        self.args = args
>        self.kwargs = kwargs
>        self.protocol = proto
>
>    def buildProtocol(self, addr):
>        """
>        Builds the protocol and
>              @param addr: The address (protocol, IP, port) of the 
> connection
>        @type addr: 
> L{IPv4Address<twisted.internet.address._ServerFactoryIPv4Address>}
>              @return: an instance of the built protocol
>        """
>        #self.resetDelay()
>        xs = self.protocol(*self.args, **self.kwargs)
>        xs.factory = self
>        self.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, 
> xs.connected) # stream connect event or xml start event???
>        for event, fn in self.bootstraps:
>            xs.addObserver(event, fn)
>
>        return xs
>
> class MdfXmlStreamServerFactory(MdfXmlStreamFactory, ServerFactory):
>    """
>    The factory class used by the daemon to create
>    protocol instances
>    """
>      # The registered services
>    _services = {}
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        MdfXmlStreamFactory.__init__(self, proto, *args, **kwargs)
>
> class Daemon(xmlstream.XmlStream):
>    """
>    The daemon is the implementation of a microkernel type inter-service
>    communication (ISC) routing daemon. Here is how it works :
>          - Services announce their presence to the daemon by giving 
> their name,
>          version, ip, port and a list of message-types that they accept
>        - The daemon listens for messages from the attached services, 
> when one
>          is received, it routes the message to the correct service
>      @todo: add unique id generation/verification
>    """
>      # Holds the real method
>    __dataReceived = xmlstream.XmlStream.dataReceived
>      # The registered services
>    #__services = {}
>    cnt = 1
>      def __init__(self, *args, **kwargs):
>        """
>        Constructor
>              @param args: non-keyword args
>        @type args: C{tuple}
>        @param kwargs: keyword args
>        @type kwargs: C{dict}
>        """
>        xmlstream.XmlStream.__init__(self)
>        self.__routeTo = None
>        self.__lastMsgType = None
>        self.__lastMsgId = None
>        self.inst = Daemon.cnt
>        Daemon.cnt += 1
>        print "daemon proto instance %d" % self.inst
>            def connectionMade(self):
>        xmlstream.XmlStream.connectionMade(self)
>      def dataReceived(self, data):
>        """
>        Called everytime data is received
>              @param data: the data received
>        @type data: C{object} (anything)
>        """
>        self.__dataReceived(data)
>          def connectionLost(self, reason):
>        """
>        Called when the connection is shut down, restores the
>        dataReceived method
>              @param reason: the reason why the connection was lost
>        @type reason: C{str}
>        """
>        self.__dataReceived = xmlstream.XmlStream.dataReceived
>        self.__routeTo = None
>        xmlstream.XmlStream.connectionLost(self, reason)
>      def __onHeader(self, element):
>        """
>        Analyse a header and set the data's recipiant
>              @param element: the header element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>        """
>        print "got header from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>              self.__lastMsgId = element.getAttribute("id")
>        self.__lastMsgType = element.getAttribute("type")
>        if(self.__lastMsgType != constants._REG_MSG_TYPE):
>            self.__routeTo = self.factory._services[type]
>            self.__dataReceived = __routeDataReceived
>      def __onReg(self, element):
>        """
>        Register a service
>              @param element: the registeration element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>        """
>        print "got reg from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>
>        name = 
> str(xpath.XPathQuery("/body/reg/name").queryForNodes(element)[0])
>        version = 
> str(xpath.XPathQuery("/body/reg/version").queryForNodes(element)[0])
>        #address = 
> str(xpath.XPathQuery("/body/reg/address").queryForNodes(element)[0])
>        port = 
> int(str(xpath.XPathQuery("/body/reg/port").queryForNodes(element)[0]))
>        msgs = [ str(m) for m in 
> xpath.XPathQuery("/body/reg/message_type").queryForNodes(element) ]
>              address = self.transport.getPeer().host
>        #port = self.transport.getPeer().port
>        serv = ServiceReg(name, version, msgs, address, port)
>        self.__registerService(serv)
>          def connected(self, xs):
>        """
>        Called when a client connects using an XML stream
>              @param xs: the current xml stream
>        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        """
>              print 'Connection from %s:%s!' % 
> (str(self.transport.getPeer().host), str(self.transport.getPeer().port))
>        xs.addObserver("/header", self.__onHeader)
>        xs.addObserver("/body/reg", self.__onReg)
>          def __routeDataReceived(self, data):
>        """
>        Pushes the messages to the correct service
>              @param data: the data received
>        @type data: C{object} (anything)
>        """
>        print "route '%s' to : %s" % (str(data), self.__routeTo)
>              utils.sendMessage(self.__routeTo.ip, self.__routeTo.port, 
> data)
>        #self.send(data)
>          def __registerService(self, service):
>        """
>        Register a service
>              @param service: the service to register
>        @type service: L{ServiceReg}
>              @raise ServiceMessageConflictError: if another service 
> already has a
>                                            message registered that the 
> current
>                                            service is trying to register
>              @todo: what is to be done with the exception once 
> raised???? Finish status message...
>        """
>              def foundConflict(self, msgTypes):
>            """
>            Check if there is a conflict with message types to be 
> registered
>            by this service
>                      @param service: the service messages to check for 
> conflicts
>            @type service: C{str}
>                      @return: the conflicting service type or None if no
>                    conflict is found
>            """
>            for mt in msgTypes:
>                if(self.factory._services.has_key(mt)):
>                    return mt
>            return None
>              print "Registering service : ", str(service)
>              try:
>            #
>            # Check if another service already registered a message 
> type that
>            # the current service is trying to register
>            #
>            conflict = foundConflict(self, service.acceptedMsgs)
>            if(conflict != None):
>                raise ServiceMessageConflictError(conflict)
>                      #
>            # Regrister the message types and this service
>            #
>            for msgType in service.acceptedMsgs:
>                self.factory._services[msgType] = service
>                      except ServiceMessageConflictError, reason:
>            status = 
> utils.createConfirmationMsgBody(constants._MSG_FAILURE_TYPE,
>                                                     self.__lastMsgId, 
> str(reason))
>        else:
>            status = 
> utils.createConfirmationMsgBody(constants._MSG_SUCCESS_TYPE,
>                                                     self.__lastMsgId)
>                  #
>        # Send registeration confirmation (succeeded or failed)
>        #
>        msgRoot = utils.createMessage(constants._REG_MSG_CONFIRM_TYPE,
>                                      constants._CONF_MSG_ID,
>                                      constants._DAEMON_SERVICE_NAME,
>                                      constants._MSG_SPEC_VERSION,
>                                      constants._STATUS_DATA_TYPE, status)
>              print "Sending confirmation message to %s : %s" % 
> (self.transport.getPeer().host, msgRoot.toXml())
>              #self.send(msgRoot)
>        utils.sendMessage(self.transport.getPeer().host, service.port, 
> msgRoot)
>   if(__name__ == "__main__"):
>
>    reactor.listenTCP(4321, MdfXmlStreamServerFactory(Daemon))
>    print "Listening for connections..."
>    reactor.run()
>
> ----------------------------------------"Service"----------------------------------------------------------------------------------------------------- 
>
>
> class MdfXmlStreamClientFactory(MdfXmlStreamServerFactory):
>    """
>    The factory class used by the services to create
>    protocol instances
>      @attention: this class might dissapear, I have to see if it's 
> useful to keep it or not
>    """
>      __daemonAddrs = None
>    __daemonPort = None
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        MdfXmlStreamServerFactory.__init__(self, proto, *args, **kwargs)
>        self._serviceInfo = ServiceReg(kwargs["name"], 
> kwargs["version"], list(kwargs.get("messageTypes", [])))
>        MdfXmlStreamClientFactory.__daemonAddrs = kwargs["address"]
>        MdfXmlStreamClientFactory.__daemonPort = kwargs["port"]
>          def register(self, port):
>        """
>        Register the service
>              @param port: the service's port
>        @type port: C{int}
>        """
>        self._serviceInfo.port = port
>        msgBodyData = utils.createRegMsgBody(self._serviceInfo.name,
>                                             self._serviceInfo.version,
>                                             str(self._serviceInfo.port),
>                                             
> self._serviceInfo.acceptedMsgs)
>              msgRoot = utils.createMessage(constants._REG_MSG_TYPE,
>                                      constants._REG_MSG_ID,
>                                      self._serviceInfo.name,
>                                      constants._MSG_SPEC_VERSION,
>                                      constants._REG_DATA_TYPE, 
> msgBodyData)
>              utils.sendMessage(MdfXmlStreamClientFactory.__daemonAddrs,
>                          MdfXmlStreamClientFactory.__daemonPort,
>                          msgRoot)
>
> class BaseService(xmlstream.XmlStream):
>    """
>    The service is the implementation of a microkernel type inter-service
>    communication (ISC) endpoint. Here is how it works :
>          - Services announce their presence to the daemon by giving 
> their name,
>          version, ip, port and a list of message-types that they accept
>        - The daemon listens for messages from the attached services, 
> when one
>          is received, it routes the message to the correct service
>            @todo: add unique id generation/verification
>    """
>      def __init__(self, *args, **kwargs):
>        """
>        Constructor
>              @param args: non-keyword args
>        @type args: C{tuple}
>        @param kwargs: keyword args
>        @type kwargs: C{dict}
>        """
>        xmlstream.XmlStream.__init__(self)
>        self._msgSrc = None
>        self._msgDest = None
>        self._msgBodyData = None
>        self._registered = False
>      def _onHeader(self, element):
>        """
>        Analyse a header and save the source and destination
>              @param element: the header element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add msg spec version verification
>        @todo: add id verification???
>        """
>        print "got header from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>              self._msgSrc = 
> xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("source") 
>
>        self._msgDest = 
> xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("destination") 
>
>          def _onBody(self, element):
>        """
>        Get the body act accordingly
>              @param element: the body element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add data type verification
>        @todo: call data action callbacks
>        """
>        self._msgBodyData = 
> xpath.XPathQuery("/body").queryForNodes(element)[0].toXml()
>        print "_onbody : ", self._msgBodyData
>          def _onConfirm(self, element):
>        """
>        Get the confirmation message and act accordingly
>              @param element: the confirmation element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add data type verification
>        @todo: call data action callbacks
>        """
>        status = 
> str(xpath.XPathQuery("/body/conf/status").queryForNodes(element)[0])
>        id = 
> int(str(xpath.XPathQuery("/body/conf/id").queryForNodes(element)[0]))
>        msg = 
> str(xpath.XPathQuery("/body/conf/msg").queryForNodes(element)[0])
>        if(id == constants._REG_MSG_ID):
>            if(status == constants._MSG_SUCCESS_TYPE):
>                self._registered = True
>          def connected(self, xs):
>        """
>        Called when a client connects using an XML stream
>              @param xs: the current xml stream
>        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>              @todo: add data action callbacks
>        """
>        print 'Connection from %s:%s!' % 
> (str(self.transport.getPeer().host), str(self.transport.getPeer().port))
>        xs.addObserver("/header", self._onHeader)
>        xs.addObserver("/body/conf", self._onConfirm)
>        xs.addObserver("/body", self._onBody)
>      
> def start(daemonAddrs, daemonPort, serviceRef, serviceName, 
> serviceVersion, serviceMessageTypes):
>    """
>    Start the daemon
>      @param daemonPort: the port the daemon listens on
>    @type daemonPort: C{int}
>    @param serviceRef: a reference to the service's class
>    @type serviceRef: a subclass of L{BaseService<service.BaseService>}
>    @param serviceName: the service's name
>    @type serviceName: C{str}
>    @param serviceVersion: the service's version
>    @type serviceVersion: C{str}
>    @param serviceMessageTypes: the list of messages the service registers
>    @type serviceMessageTypes: C{str list}
>    """
>    f = MdfXmlStreamClientFactory(serviceRef, address=daemonAddrs, 
> port=daemonPort, name=serviceName, version=serviceVersion, 
> messageTypes=serviceMessageTypes)
>    port = reactor.listenTCP(0, f).getHost().port
>    f.register(port)
>    print port
>      reactor.run()
>
> if(__name__ == "__main__"):
>
>    start("localhost", 4321, BaseService, "service_base", "1.0", ["all"])
>>>  Daemon listening for connections...
>>>
>>>  daemon proto instance 1
>>>  Connection from 127.0.0.1:57821! <-- ok, Client1
>>>  ....
>>>  daemon proto instance 2
>>>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>>>  Connection from 127.0.0.1:57823! <-- ok, Client2
>>>  ....
>>>  daemon proto instance 3
>>>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>>>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>>>  Connection from 127.0.0.1:57824! <-- ok, Client3
>>>
>>>  Oh, and by the time I finished writing this email, I've switched to
>>>  solution 2, but I still get the  behavior above.
>>>
>>>
>>>
>>>  _______________________________________________
>>>  Twisted-Python mailing list
>>>  Twisted-Python at twistedmatrix.com
>>>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>     
>>
>>
>>
>>   
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From steve at holdenweb.com  Fri Feb 29 10:47:02 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 29 Feb 2008 10:47:02 -0500
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>
References: <287172.43129.qm@web34204.mail.mud.yahoo.com>
	<11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>
Message-ID: <fq99dq$kos$1@ger.gmane.org>

Steven H. Rogers wrote:
> On Wed, February 27, 2008 08:48, Andrew Francis wrote:
>> Also I am not sure how the "open spaces" works. Is it
>> another talk. Or is it a bunch of one on ones, or one
>> to a few?
>>
> 
> Last year there was a board in a high traffic area for reserving open
> space rooms and posting information about meetings in them.  It was pretty
> dynamic.  Some open space meetings were prepared talks, while others were
> just groups getting together to talk about a topic of interest, and I
> think some may have turned into coding sessions.
> 
> # Steve

Yes, despite higher numbers this year (887 registrants so far!) there is 
plenty of Open Space accommodation, and I believe the principle is to 
leave most stuff open until the conference actually begins. Checking on

   http://us.pycon.org/2008/conference/openspace/

I do see the phrase "Open Space scheduling happens at PyCon". I am 
giving a tutorial, so I should will be there to book the space in plenty 
of time, and the larger rooms will handle up to 50 people comfortably.

We could probably register a BoF in advance, but I don't want to hijack 
what will really be a Twisted community event, and I don't know what 
people's schedules are (as I understand there may be other Twisted 
events). It would be really nice to get an idea of numbers to make sure 
that we have an appropriately-sized room.

I was hoping we could do it after dinner on Friday or Saturday, in a 
fairly leisurely style - perhaps starting at 7:00 or 7:30 and repairing 
to the bar for liquid refreshments about 9:30? To encourage 
participation I will happily buy a drink for anyone who significantly 
advances my understanding of Twisted; on the other hand, lead me down a 
blind alley and you owe me a drink (unless I judge you are doing it just 
to get me hammered).

Would that make it more fun? I should really be the only one on the spot 
here. I'll be wearing brown trousers ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Fri Feb 29 11:04:49 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 29 Feb 2008 11:04:49 -0500
Subject: [Twisted-Python] Re: Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>	<20080227191019.GA22717@vidar.dreamhost.com>
	<96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>
Message-ID: <fq9af4$oia$1@ger.gmane.org>

Nathan wrote:
> On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
[...]
>>  I have a little demonstration PyGTK / AMP chat program at
>>  http://ripton.net/hg/ampchat/
> 
> Oh, wow.  I was looking at your example program, and thought "I should
> look at the amp api", so I googled "twisted amp" and the top link was:
> 
> http://www.ripton.net/blog/?p=16
> 
> Which is your blog post about this thread, because of this thread.  I
> don't know if I should be awed that Google's so dang quick, or that by
> my multitude of questions I'm causing the universe to change...  :-)
> 
Keep changing the universe. Inquiring minds want to know, and 
information wants to be free ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nathan.stocks at gmail.com  Fri Feb 29 11:28:01 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 29 Feb 2008 09:28:01 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
	<A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
	<4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>
Message-ID: <96c9d6a80802290828k434c081cw7a268851d771081d@mail.gmail.com>

On Thu, Feb 28, 2008 at 10:37 PM, Nathaniel Haggard <natester at gmail.com> wrote:
> On osx install from source puts twisted in 2 different places.  There
>  are args you can pass to setup to make it work.

It's failing because Python.h wasn't present on the system.

~ Nathan



From dr.marc.byrd at gmail.com  Fri Feb 29 13:19:32 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Fri, 29 Feb 2008 10:19:32 -0800
Subject: [Twisted-Python] Fwd: Seeking Validation - search web service using
	memcached
In-Reply-To: <a33934630802291017t3b39cdc9i77b5b2361afa706a@mail.gmail.com>
References: <a33934630802291017t3b39cdc9i77b5b2361afa706a@mail.gmail.com>
Message-ID: <a33934630802291019n4a4614cdh3291f38fdafd2a5f@mail.gmail.com>

I would also be very grateful for feedback from the twisted point of view.

Thanks,


Marc


---------- Forwarded message ----------
From: Marc Byrd <dr.marc.byrd at gmail.com>
Date: Fri, Feb 29, 2008 at 10:17 AM
Subject: Seeking Validation - search web service using memcached
To: rubyonrails-talk at googlegroups.com


Hi,

I'm looking for some validation for some work I've done for a client, and
I'm open to criticism ("mock me" ? ;^), relevant awareness of similar
projects, and alternatives.

When I looked around in about September 2007 for a good scalable search
solution for Ruby on Rails, I found the choices lacking.  Firstly, none of
the solutions seemed to have an option for keeping the reverse indices
in-memory across any number of machines I might like to store them.
Secondly, many of the solutions seemed too general purpose and heavy weight
for my client's needs (which are basically to search for items from the db,
based on tags).  But without addressing the first concern, I felt that
anything I implemented would not scale to the customer's needs and
aspirations, and that for such an investment, virtually unlimited scale
would be mandatory.

Therefore I looked at memcached - well-proven on many large-scale sites for
caching, but to my knowledge not used in search.  Note that memcached uses
an approach wherein the clients all calculate a server based on a given key,
such that no central (scale-limiting) controller is required.  Having chosen
memcached, I next attempted to use various memcached connectors into RoR.  I
found them at the time (Oct 2007 or so) to be slow and buggy; it didn't take
more than a couple of times of totally corrupting the entire cache to avert
my attention from a Ruby approach to using memcached.  Meanwhile, I knew
from prior experience that the python client for memcached was both fast and
reliable.  The python memcached client was routinely 3x faster for the tests
I ran.  Python also seems to be quite fast at set operations.

Getting to the punchline, I used python and memcached, wrapped in twisted,
to provide a ReSTful web service api, which is called from RoR to get ALL of
the information needed to render search results.  The API has been extended
to allow the Ruby code to "fire and forget" new indexing info onto a deque
(fifo queue), which is processed by a loosely-coupled daemon - overhead to
Ruby is about 20ms.

Prior to this approach, the client was using MyISAM full text search.
Search results were 10s for smaller search terms (5000 uses), and 20+s for
larger search terms (100k+ uses).

With the web service, the search results are routinely returned in 1-2
seconds, and the web service itself returns results to RoR within
100-200ms.  Indexing is a challenge - the rank score needs to be updated
upon each viewing, but I've now gotten that to be almost real-time (5
minutes max).  Plus I can re-index the entire database of 1M+ items in about
8 hours.  The index is backed up nightly in case of a memcached server
failure (we're using 3).  In addition to search, the search web service is
used for relatedness and for something like bookmarks.

So, is there anything out there that can touch these results and provide for
virtually unlimited scale (no central controller)?

Thanks in advance,


Marc

PS:  Because of leaks in rmagick and its inferior performance compared to
the Python Image Library, I'm also considering a similar approach for
generating many different sizes of fairly large (10MB) images.  A similar
fire and forget web service approach could be used to minimize the impact on
the RoR side.  Early tests show a 10x speed improvement (even without the
fire and forget).  Any thoughts there?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080229/784986af/attachment.htm 

From jml at mumak.net  Fri Feb 29 17:17:39 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 1 Mar 2008 09:17:39 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear() method
	to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
References: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
Message-ID: <d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>

On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
<therve at wolfwood.twistedmatrix.com> wrote:
>  @@ -1241,6 +1242,13 @@
>          return result
>
>
>  +    def clear(self):
>  +        """
>  +        Remove all previously added tests.
>  +        """
>  +        self._tests = []
>  +
>  +
>


>   class TestDecorator(components.proxyForInterface(itrial.ITestCase,
>                                                   "_originalTest")):
>  @@ -1293,8 +1301,8 @@
>      # Originally, we recreated the suite by calling test.__class__. The problem
>      # was that the old suite kept references to test instances, which turns out
>      # to never be free. Now we remove the original references by emptying the
>  -    # _tests list.
>  -    test._tests = []
>  +    # list of tests.
>  +    test.clear()

What's your plan for making sure this works with stdlib TestSuite?

jml



From jml at mumak.net  Fri Feb  1 00:46:13 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 18:46:13 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
	<20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
Message-ID: <d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>

On Feb 1, 2008 4:11 PM,  <glyph at divmod.com> wrote:
> On 04:34 am, jml at mumak.net wrote:
> >On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:
>
> >Having a canonical representation doesn't exclude having multiple
> >representations.
>
> True enough.
> >Looking at how these are actually used:
> >- str() is used only for copyright (and tests)
>
> This is probably the most poorly-thought-out method of the bunch anyway,
> so I'm glad to see it's used less.
> >- short is used for __init__.py
>
> Makes sense, this is where you'd go looking.
> >- base is used for short, in _release._changeVersionInFile (don't know
> >why base rather than everyone else, actually) and dist.py
>
> base is used here because we will explicitly never put an SVN rev into a
> README file.
> >- getVersionString is used only by deprecate.
>
> So, perhaps this and str() should be the same thing.  Is there really a
> reason for omitting the svn revno here?

Is there a reason for including it?

getVersionString should probably be str()

> >In summary, sometimes we want the project name, sometimes we want the
> >svn revno. This is perhaps better achieved by having a single function
> >/ method that takes a couple of params.
>
> >Personally, I think that having a project name in Version is silly.
>
> ... and yet, getVersionString uses that attribute?
>

Well, it seemed like going with the flow.

The alternative was to hard-code the word 'Twisted' into the
deprecation code -- something that I wouldn't mind at all.

> The point of having a project name in a version is to specifically
> qualify the version to alert about meaningless comparisons.  "Twisted
> version 2.5.0" does not meaningfully compare to "Python version 2.5.0",
> despite being apparently equal if you elide the project name.

And the number of times we've constructed a twisted Version object for
Python is how many?

> >>But, this is somewhat obviously a bike shed, so I am not going to
> >>agitate terribly hard for this.  It's not like I use Twisted primarily
> >>for dealing with my obscurely formatted package version strings ;-).
> >
> >Right. I propose we do nothing.
>
> An easy position to defend.
>

Its virtue is its clarity.

I fall from my earlier motion and move that we move make
Version.__str__ behave like getVersionString and delete
getVersionString. Or, see the attached patch.

I'm off to a party where the drinks are on Google.
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: version-string.diff
Type: text/x-diff
Size: 3904 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080201/71c393c8/attachment-0002.diff>

From glyph at divmod.com  Fri Feb  1 10:30:12 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 17:30:12 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
	<20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>
	<d06a5cd30801312346m32196caej1ae93cca9e2fa56@mail.gmail.com>
Message-ID: <20080201173012.21558.1487576228.divmod.xquotient.5845@joule.divmod.com>


On 07:46 am, jml at mumak.net wrote:
>On Feb 1, 2008 4:11 PM,  <glyph at divmod.com> wrote:
>>On 04:34 am, jml at mumak.net wrote:

>> >- getVersionString is used only by deprecate.
>>
>>So, perhaps this and str() should be the same thing.  Is there really 
>>a
>>reason for omitting the svn revno here?
>
>Is there a reason for including it?

Diagnosing warnings and errors from development versions is easier if 
they properly report that they're development versions.  The SVN version 
will be omitted if it's not discovered, anyway.  (Though the SVN version 
discovery code needs to be fixed up, a separate issue.)
>getVersionString should probably be str()

Cool.
>>The point of having a project name in a version is to specifically
>>qualify the version to alert about meaningless comparisons.  "Twisted
>>version 2.5.0" does not meaningfully compare to "Python version 
>>2.5.0",
>>despite being apparently equal if you elide the project name.
>
>And the number of times we've constructed a twisted Version object for
>Python is how many?

Sorry, a better example would be "'Twisted version 2.5.0' does not 
meaningfully compare to 'Axiom version 2.5.0'".  And that's where this 
versioning code came from in the first place, so yes, we've built one or 
two of those objects :-).
>> >>But, this is somewhat obviously a bike shed, so I am not going to
>> >>agitate terribly hard for this.  It's not like I use Twisted 
>>primarily
>> >>for dealing with my obscurely formatted package version strings ;-).
>> >
>> >Right. I propose we do nothing.
>>
>>An easy position to defend.
>
>Its virtue is its clarity.
>
>I fall from my earlier motion and move that we move make
>Version.__str__ behave like getVersionString and delete
>getVersionString. Or, see the attached patch.

That also works for me.
>I'm off to a party where the drinks are on Google.

Cool, have a good time.  But next time, try to score a party where the 
*cars* are on google.  With their accounting they might not be able to 
tell the difference!



From dfarrell at mypublisher.com  Fri Feb  1 11:34:15 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Fri, 1 Feb 2008 13:34:15 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
Message-ID: <318F79422ADC5041A93343721F84474D8B0888@exchange.mypublisher.local>

Hello everyone,

 

I'm trying to install Twisted 2.5 on a Centos 5 intel based server that
has Python 2.4 on it, and am having problems. I download the Twisted 2.5
tar file, unpack it, go to the zope.interface directory and perform a
"sudo python setup.py install" command, which succeeds. I then go to the
root directory and do the same thing for Twisted "sudo python setup.py
install" and it looks like it completes successfully. When I go into the
Python interpreter and enter an "import twisted" line, that works fine.
However, if I do this, "from twisted import web" I get an error:

 

Python 2.4.3 (#1, Mar 14 2007, 19:01:42)

[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2

Type "help", "copyright", "credits" or "license" for more information.

>>> from twisted import web

Traceback (most recent call last):

  File "<stdin>", line 1, in ?

ImportError: cannot import name web

 

When I look in /usr/lib/python2.4/site-packages/twisted I see that it
has a web directory, so I'm not sure what's going on or what the problem
is. Any insights would be most welcome!

 

Thanks,

Doug Farrell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080201/f28bc972/attachment.html>

From exarkun at divmod.com  Fri Feb  1 12:00:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 1 Feb 2008 14:00:38 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0888@exchange.mypublisher.local>
Message-ID: <20080201190038.6859.841504556.divmod.quotient.3641@ohm>

On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hello everyone,
>
>I'm trying to install Twisted 2.5 on a Centos 5 intel based server that
>has Python 2.4 on it, and am having problems. I download the Twisted 2.5
>tar file, unpack it, go to the zope.interface directory and perform a
>"sudo python setup.py install" command, which succeeds. I then go to the
>root directory and do the same thing for Twisted "sudo python setup.py
>install" and it looks like it completes successfully. When I go into the
>Python interpreter and enter an "import twisted" line, that works fine.
>However, if I do this, "from twisted import web" I get an error:
>
>Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
>[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
>Type "help", "copyright", "credits" or "license" for more information.
>>>> from twisted import web
>Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>ImportError: cannot import name web
>
>When I look in /usr/lib/python2.4/site-packages/twisted I see that it
>has a web directory, so I'm not sure what's going on or what the problem
>is. Any insights would be most welcome!
>

Is this a 64 bit machine?  Do you also have /usr/lib64/python2.4/site-packages/twisted?  If so, it may be that Python is
picking that up, causing it to ignore anything in /usr/lib/python2.4/site-packages/twisted.

If so, the solution is to tell distutils to install all of Twisted in the
same place.  I forget the exact options to do this, you can probably find
them in the output of "python setup.py install --help".

Jean-Paul



From fred at bsdhost.net  Fri Feb  1 18:39:45 2008
From: fred at bsdhost.net (Fred C)
Date: Fri, 1 Feb 2008 17:39:45 -0800
Subject: [Twisted-Python] snmp
Message-ID: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>


Hi

For a project I need to fiddle with snmp. I did a search on google and  
an I have found a lot of mailing list archives about twistedsnmp and  
pysnmp. All these post seems very old (more than 4 years old), and out  
of fashion. Can some one tell me what people are using these days to  
plain with snmp ?

Thanks for your suggestions.

-fred-

-- 
Fred C!
PGP-KeyID: E7EA02EC3B487EE9
PGP-FingerPrint: A906101E2CCDBB18D7BD09AEE7EA02EC3B487EE9






From daedalus at eigenmagic.com  Fri Feb  1 18:59:48 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sat, 02 Feb 2008 12:59:48 +1100
Subject: [Twisted-Python] snmp
In-Reply-To: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
References: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
Message-ID: <1201917588.21134.6.camel@fnord.melbourne.eigenmagic.net>

On Fri, 2008-02-01 at 17:39 -0800, Fred C wrote:
> Hi
> 
> For a project I need to fiddle with snmp. I did a search on google and  
> an I have found a lot of mailing list archives about twistedsnmp and  
> pysnmp. All these post seems very old (more than 4 years old), and out  
> of fashion. Can some one tell me what people are using these days to  
> plain with snmp ?

Hi Fred,

Check out libsnmp: http://www.seafelt.com/libsnmp. It works with
twisted, but can also be used without it.

For an example of how to use it with twisted, see the code at:
http://www.seafelt.com/software/seafelt-daily/sources/, specifically
lib/seafelt/poller_snmp.py.

I wrote libsnmp, and have plans to merge it into twisted proper (which
has been discussed on this list recently), but doing so is likely to
take a while.

-- 
Justin Warren <daedalus at eigenmagic.com>



From bernat at luffy.cx  Sat Feb  2 02:29:32 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Sat, 02 Feb 2008 10:29:32 +0100
Subject: [Twisted-Python] snmp
In-Reply-To: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net> (Fred C.'s
	message of "Fri, 1 Feb 2008 17:39:45 -0800")
References: <11782E94-F9BB-4D63-A2F9-8048DA33AE31@bsdhost.net>
Message-ID: <m3r6fvhfk3.fsf@neo.luffy.cx>

OoO  En cette  nuit striée  d'éclairs du  samedi 02  février  2008, vers
02:39, Fred C <fred at bsdhost.net> disait:

> For a project I need to fiddle with snmp. I did a search on google and
> an I have found a lot of mailing list archives about twistedsnmp and
> pysnmp. All these post seems very old (more than 4 years old), and out
> of fashion. Can some one tell me what people are using these days to
> plain with snmp ?

The big problem with twistedsnmp  is that it does not support officially
pysnmp 4,  does not work with pysnmp  2, works with pysnmp  3 which does
not exist any more and is optimized for an hybrid version pysnmp-se 2.5.

The  other drawback  is  that it  is  not maintained  any  more and  the
upstream seems to be unresponsive.

Aside  Justin  suggestion, you  can  also  look  at pynetsnmp  which  is
maintained   by   the   ZenOSS   project.   This   one   only   supports
manager-side. And documentation is a bit scarce.
-- 
Make it clear before you make it faster.
            - The Elements of Programming Style (Kernighan & Plauger)



From steve at holdenweb.com  Sat Feb  2 07:57:34 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 02 Feb 2008 09:57:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API for
 functions and methods.
In-Reply-To: <20080131172444.6859.1682835797.divmod.quotient.3270@ohm>
References: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>
	<20080131172444.6859.1682835797.divmod.quotient.3270@ohm>
Message-ID: <fo20d0$qhd$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Thu, 31 Jan 2008 17:01:48 -0000, glyph at divmod.com wrote:
>> On 04:23 pm, exarkun at divmod.com wrote:
>>> Maybe Version shouldn't be responsible for any view at all.  Maybe 
>>> Version
>>> is just a model class, and things that actually know what the view
>>> requirements are can implement the view?
>>
>> I agree insofar as the model is poorly exposed and documented.  The 
>> ivars have no documentation, and the only way to get the SVN revision 
>> is to call a private method or to mangle strings.
>>
>> However, some of these "views" should definitely be attached to the 
>> class, for convenience and simplicity.  For example, a sensible 
>> __repr__ makes debugging and inspecting these things a lot easier.
> 
> Having Version.__repr__ is fine.  __repr__ is a thing that Python classes
> often have.
> 
>> Adding a new module, function, or class which does the string 
>> formatting means that users of Version will need to look somewhere 
>> else to perform the function they want, and ultimately it doesn't 
>> eliminate the confusion - "do I want the 'short dotted' view or the 
>> 'includes project but without development version' view?" - unless we 
>> also reduce the number of options available.
> 
> What I had in mind was more that each application that wants to format
> Version in some particular way can do the formatting itself, not that it
> would pick an appropriate function from the version_view module and rely
> on it to do the formatting.
> 
> The complexity of the code we're talking about foisting on an application
> is on the order of "%s.%s" % (version.major, version.minor).  Not much of
> a burden.  On the other hand, if we really want to make this easy, then
> maybe Version should have a `format´ method that just takes a format string
> and does the interpolation for you.
> 
And gold-plated toilet seats, they're good too ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From franciscsimon at franciscsimon.de  Sat Feb  2 11:13:58 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sat, 2 Feb 2008 19:13:58 +0100
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X 10.5 )
Message-ID: <96F72E7C-962A-407F-9733-DC4D80DDFAAC@franciscsimon.de>

Hi @all,


I've already installed following packages ( all installation i've made  
with: sudo python setup.py install ):

- zope interface v. 3.3.0
- twisted-core 2.5.0

and i've tried to install twisted-web 0.7.0 but:

i get this  Error:

Traceback (most recent call last):
   File "setup.py", line 13, in <module>
     scripts=dist.getScripts("web"),
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
     thingies = os.listdir(scriptdir)
OSError: [Errno 2] No such file or directory: 'bin'


i hope somebody can help me.

THX a lot

Frank
:-)



From exarkun at divmod.com  Sat Feb  2 11:25:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 2 Feb 2008 13:25:00 -0500
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X
	10.5 )
In-Reply-To: <96F72E7C-962A-407F-9733-DC4D80DDFAAC@franciscsimon.de>
Message-ID: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>

On Sat, 2 Feb 2008 19:13:58 +0100, Francisc Simon <franciscsimon at franciscsimon.de> wrote:
>Hi @all,
>
>
>I've already installed following packages ( all installation i've made 
>with: sudo python setup.py install ):
>
>- zope interface v. 3.3.0
>- twisted-core 2.5.0
>
>and i've tried to install twisted-web 0.7.0 but:
>
>i get this  Error:
>
>Traceback (most recent call last):
>   File "setup.py", line 13, in <module>
>     scripts=dist.getScripts("web"),
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
>Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
>     thingies = os.listdir(scriptdir)
>OSError: [Errno 2] No such file or directory: 'bin'
>
>
>i hope somebody can help me.
>

You could try installing using this package instead:

  http://twistedmatrix.com/trac/wiki/Packages#Leopard

Jean-Paul



From franciscsimon at franciscsimon.de  Sat Feb  2 11:53:48 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sat, 2 Feb 2008 19:53:48 +0100
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X 10.5
	)
In-Reply-To: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>
References: <20080202182500.6859.737053387.divmod.quotient.3928@ohm>
Message-ID: <91BF8FCE-6931-4667-A9BE-EDFC33F091D9@franciscsimon.de>

Hi,

thx for the quick answar but it still does not work :-(

i get this error:

ImportError: No module named web


Frank


Am 02.02.2008 um 19:25 schrieb Jean-Paul Calderone:

> On Sat, 2 Feb 2008 19:13:58 +0100, Francisc Simon <franciscsimon at franciscsimon.de 
> > wrote:
>> Hi @all,
>>
>>
>> I've already installed following packages ( all installation i've  
>> made with: sudo python setup.py install ):
>>
>> - zope interface v. 3.3.0
>> - twisted-core 2.5.0
>>
>> and i've tried to install twisted-web 0.7.0 but:
>>
>> i get this  Error:
>>
>> Traceback (most recent call last):
>>  File "setup.py", line 13, in <module>
>>    scripts=dist.getScripts("web"),
>>  File "/System/Library/Frameworks/Python.framework/Versions/2.5/  
>> Extras/lib/python/twisted/python/dist.py", line 218, in getScripts
>>    thingies = os.listdir(scriptdir)
>> OSError: [Errno 2] No such file or directory: 'bin'
>>
>>
>> i hope somebody can help me.
>>
>
> You could try installing using this package instead:
>
> http://twistedmatrix.com/trac/wiki/Packages#Leopard
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From dfarrell at mypublisher.com  Sat Feb  2 12:20:04 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Sat, 2 Feb 2008 14:20:04 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <20080201190038.6859.841504556.divmod.quotient.3641@ohm>
Message-ID: <318F79422ADC5041A93343721F84474D8B0899@exchange.mypublisher.local>


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> Sent: Friday, February 01, 2008 2:01 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Twisted and Centos5 install problems
> 
> On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell
<dfarrell at mypublisher.com>
> wrote:
> >Hello everyone,
> >
> >I'm trying to install Twisted 2.5 on a Centos 5 intel based server
that
> >has Python 2.4 on it, and am having problems. I download the Twisted
2.5
> >tar file, unpack it, go to the zope.interface directory and perform a
> >"sudo python setup.py install" command, which succeeds. I then go to
the
> >root directory and do the same thing for Twisted "sudo python
setup.py
> >install" and it looks like it completes successfully. When I go into
the
> >Python interpreter and enter an "import twisted" line, that works
fine.
> >However, if I do this, "from twisted import web" I get an error:
> >
> >Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
> >[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
> >Type "help", "copyright", "credits" or "license" for more
information.
> >>>> from twisted import web
> >Traceback (most recent call last):
> >  File "<stdin>", line 1, in ?
> >ImportError: cannot import name web
> >
> >When I look in /usr/lib/python2.4/site-packages/twisted I see that it
> >has a web directory, so I'm not sure what's going on or what the
problem
> >is. Any insights would be most welcome!
> >
> 
> Is this a 64 bit machine?  Do you also have /usr/lib64/python2.4/site-
> packages/twisted?  If so, it may be that Python is
> picking that up, causing it to ignore anything in
/usr/lib/python2.4/site-
> packages/twisted.
> 
> If so, the solution is to tell distutils to install all of Twisted in
the
> same place.  I forget the exact options to do this, you can probably
find
> them in the output of "python setup.py install --help".
> 
> Jean-Paul
> 
Jean-Paul

Thanks for the hint, when I looked at the output of uname -a on the
target machine it reported this:

Linux dev03.com 2.6.18-8.1.6.el5 #1 SMP Thu Jun 14 17:29:04 EDT 2007
x86_64 x86_64 x86_64 GNU/Linux

Which looks like it's running in Intel 64 bit mode to me. So I'll have
to look around to see how to install Twisted in a 64 environment. Any
help or suggestions would be greatly appreciated! :)

Thanks again!
Doug



From exarkun at divmod.com  Sat Feb  2 12:42:33 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 2 Feb 2008 14:42:33 -0500
Subject: [Twisted-Python] Installing Twisted-Web 0.7.0 problem ( OS X
	10.5 )
In-Reply-To: <91BF8FCE-6931-4667-A9BE-EDFC33F091D9@franciscsimon.de>
Message-ID: <20080202194233.6859.1795317838.divmod.quotient.3942@ohm>

On Sat, 2 Feb 2008 19:53:48 +0100, Francisc Simon <franciscsimon at franciscsimon.de> wrote:
>Hi,
>
>thx for the quick answar but it still does not work :-(
>
>i get this error:
>
>ImportError: No module named web
>

OS X includes a version of Twisted which is missing twisted.web.  Even
after you install the full version of Twisted, you have to make sure the
system version isn't being used.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Feb  2 22:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Feb 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1202015106.68.168166733@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080203/8b1efdfc/attachment.html>

From franciscsimon at franciscsimon.de  Sun Feb  3 05:14:26 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sun, 03 Feb 2008 13:14:26 +0100
Subject: [Twisted-Python] Tutorial commands not found in twistd (
 --athena-widget, --element )
Message-ID: <47A5B022.1060402@franciscsimon.de>

Hi @all,

i've tried this tutorial:

http://divmod.org/users/oubiwann/howto/chattutorial/env.html

but i get this error at the end:

/usr/local/bin/twistd: Unknown command: athena-widget

so i'm a little bit confused about this and tried to post it in 
irc.freenode.net at #divmod and #twisted but i got no response.

So i'll try it one more time at the mailinglist.

Has somebody a solution for this error ?

THX a lot.

Frank
:-)



From m-lists at the-moon.net  Sun Feb  3 07:41:33 2008
From: m-lists at the-moon.net (Richard Wall)
Date: Sun, 3 Feb 2008 14:41:33 +0000
Subject: [Twisted-Python] Tutorial commands not found in twistd (
	--athena-widget, --element )
In-Reply-To: <47A5B022.1060402@franciscsimon.de>
References: <47A5B022.1060402@franciscsimon.de>
Message-ID: <fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>

On Sun, Feb 3, 2008 at 12:14 PM, Francisc Simon
<franciscsimon at franciscsimon.de> wrote:
> Hi @all,
>  i've tried this tutorial:
>  http://divmod.org/users/oubiwann/howto/chattutorial/env.html
>  but i get this error at the end:
>  /usr/local/bin/twistd: Unknown command: athena-widget

Make sure you're using the SVN trunk versions of twistd / Nevow.  The
twistd plugin system is very new and the  "athena-widget" is an even
newer twistd plugin. If you follow the Combinator instructions in that
tutorial, it should just work and the path to twistd should look like:

richard at aziz:~/Projects$ which twistd
/home/richard/Projects/combinator_paths/bincache/twistd

richard at aziz:~/Projects$ whbranch
Divmod: trunk
Twisted: trunk

-RichardW.



From franciscsimon at franciscsimon.de  Sun Feb  3 10:57:32 2008
From: franciscsimon at franciscsimon.de (Francisc Simon)
Date: Sun, 03 Feb 2008 18:57:32 +0100
Subject: [Twisted-Python] Tutorial commands not found in twistd
	(	--athena-widget, --element )
In-Reply-To: <fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>
References: <47A5B022.1060402@franciscsimon.de>
	<fa6a0cb50802030641u55abb6fep6a0768da8d5716d6@mail.gmail.com>
Message-ID: <47A6008C.3050903@franciscsimon.de>

Richard Wall schrieb:
> On Sun, Feb 3, 2008 at 12:14 PM, Francisc Simon
> <franciscsimon at franciscsimon.de> wrote:
>   
>> Hi @all,
>>  i've tried this tutorial:
>>  http://divmod.org/users/oubiwann/howto/chattutorial/env.html
>>  but i get this error at the end:
>>  /usr/local/bin/twistd: Unknown command: athena-widget
>>     
>
> Make sure you're using the SVN trunk versions of twistd / Nevow.  The
> twistd plugin system is very new and the  "athena-widget" is an even
> newer twistd plugin. If you follow the Combinator instructions in that
> tutorial, it should just work and the path to twistd should look like:
>
> richard at aziz:~/Projects$ which twistd
> /home/richard/Projects/combinator_paths/bincache/twistd
>
> richard at aziz:~/Projects$ whbranch
> Divmod: trunk
> Twisted: trunk
>
> -RichardW.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   
Hi thx a lot for help,

i've now an other error: /usr/local/bin/twistd: Specify a valid class 
name to --element

but it is the same tutorial and i think it is everthing the same in the 
tutorial described.

THX

Frank
:-)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080203/3b5d6778/attachment.html>

From me at mocisoft.com  Sun Feb  3 12:41:47 2008
From: me at mocisoft.com (markus espenhain)
Date: Sun, 03 Feb 2008 20:41:47 +0100
Subject: [Twisted-Python] wired problem with deferreds
Message-ID: <1202067707.9860.27.camel@localhost>

hi

im stuck with the following deferred construct - the problem is that cb2
is called with None instead of the expected argument

from twisted.internet import defer

cd = None

def req1():
    return defer.Deferred().addCallback(req2)

def req2(a):
    print 'req2', a
    global cd
    if not cd:
        cd = defer.Deferred().addCallback(req3)
    return cd

def req3(a):
    print 'req3', a
    return a

def cb1(a):
    print 'cb1', a
    return a

def cb2(a):
    print 'cb2', a
    return a


d1 = req1().addCallback(cb1)
d1.callback('X')
d2 = req1().addCallback(cb2)
d2.callback('X')
cd.callback('S')

output:

req2 X
req2 X
req3 S
cb1 S
cb2 None # <- ?

req1 fetches a mapping for given arguments - req2 tries to create an
object + additional resquests by the result of req1 - but these objects
should only be created once - so far i didn't find an acceptable
workaround for that - req3 applys some modifications but the problem
occurs also without the step in req3 

is there something i overlooked so that cb2 isn't called with the
required arg?

thanks
markus




From drew.smathers at gmail.com  Mon Feb  4 10:18:51 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 4 Feb 2008 12:18:51 -0500
Subject: [Twisted-Python] wired problem with deferreds
In-Reply-To: <1202067707.9860.27.camel@localhost>
References: <1202067707.9860.27.camel@localhost>
Message-ID: <368574aa0802040918w7c6adb47jd96894e7340180e3@mail.gmail.com>

On Feb 3, 2008 2:41 PM, markus espenhain <me at mocisoft.com> wrote:

> is there something i overlooked so that cb2 isn't called with the
> required arg?
>

What are you trying to do?  This is quite a convoluted example.

Nonetheless, this does make me wonder what the heck is going on.  To appease
my curiosity, I added debug statements to Defer._runCallbacks:

                ...
                try:
                    self._runningCallbacks = True
                    try:
                        print 'calling %r (%r)' % (callback, self)
                        self.result = callback(self.result, *args, **kw)
                        print 'Got result', self.result
                    finally:
                        self._runningCallbacks = False
                    if isinstance(self.result, Deferred):
                      ...


And this is the output:
...
calling <function cb1 at 0x82a3e9c> (<Deferred at 0xb7a34c8cL  current
result: 'S'>)
cb1 S
Got result S
Got result None
...

WTF?  How on earth can this even happen???

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080204/ba7dcaa0/attachment.html>

From pm-twisted-python at anapol.cz  Mon Feb  4 14:12:06 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Mon, 04 Feb 2008 22:12:06 +0100
Subject: [Twisted-Python] wired problem with deferreds
In-Reply-To: <1202067707.9860.27.camel@localhost>
References: <1202067707.9860.27.camel@localhost>
Message-ID: <47A77FA6.5000003@anapol.cz>

Hi,

it looks to me like the chain of deferred callbacks is broken by this. 
At least i think deferreds aren't supposed to return the result of last 
callbacked function in the chain. If that is true, then your code fails 
on this:

You have d1, d2, cd. Before callbacking cd, the callback chains will 
look like this:

xd1 = half-done d1, callback chain: [cb1]
xd2 = half-done d2, callback chain: [cb2]
cd, callback chain: [req3, xd1, xd2]

the cd's chain processing will take req3 and it's return value, 'S' will 
give to the xd1 (_continue method). xd1 will unpause itself and give the 
'S' to cb1. The point is here, that although cb1 returns 'S', it is only 
relevant to xd1 aka d1 chain processing. The d1 deferred does return 
None. So that goes to next in cd's chain, the xd2. xd2 will give None to 
cb2 and there goes your output.

The deferred chaining works, because if some addCallback'ed' function 
returns a deferred, then the current deffered adds it's '_continue' 
method to that deferred's chain. That way it gets the result values and 
can process the chain further then.

The short answer is probably: You can return a deferred(s) from 
addCallbackeds methods and wait for them, but should only wait in one 
place for one deferred. If returning the same deferred in multiple 
places, only the first will get the result of that deferred chain (and i 
thint that this is certainly not the common use case ;) Think about some 
tree-like-pattern, that branches only one way. Otherwise it's really 
twisted ;)

Probably you should use an array of distinct deferreds in req3, although 
I'm not sure of the purpose of the code.

Hope this helps.

Petr



markus espenhain wrote:
> hi
> 
> im stuck with the following deferred construct - the problem is that cb2
> is called with None instead of the expected argument
> 
> from twisted.internet import defer
> 
> cd = None
> 
> def req1():
>     return defer.Deferred().addCallback(req2)
> 
> def req2(a):
>     print 'req2', a
>     global cd
>     if not cd:
>         cd = defer.Deferred().addCallback(req3)
>     return cd
> 
> def req3(a):
>     print 'req3', a
>     return a
> 
> def cb1(a):
>     print 'cb1', a
>     return a
> 
> def cb2(a):
>     print 'cb2', a
>     return a
> 
> 
> d1 = req1().addCallback(cb1)
> d1.callback('X')
> d2 = req1().addCallback(cb2)
> d2.callback('X')
> cd.callback('S')
> 
> output:
> 
> req2 X
> req2 X
> req3 S
> cb1 S
> cb2 None # <- ?
> 
> req1 fetches a mapping for given arguments - req2 tries to create an
> object + additional resquests by the result of req1 - but these objects
> should only be created once - so far i didn't find an acceptable
> workaround for that - req3 applys some modifications but the problem
> occurs also without the step in req3 
> 
> is there something i overlooked so that cb2 isn't called with the
> required arg?
> 
> thanks
> markus



From db3l.net at gmail.com  Mon Feb  4 19:52:25 2008
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 04 Feb 2008 21:52:25 -0500
Subject: [Twisted-Python] Re: wired problem with deferreds
References: <1202067707.9860.27.camel@localhost>
Message-ID: <m2fxw8ru6u.fsf@valheru.db3l.homeip.net>

markus espenhain <me at mocisoft.com> writes:

> im stuck with the following deferred construct - the problem is that cb2
> is called with None instead of the expected argument
>
> from twisted.internet import defer
>
> cd = None
>
> def req1():
>     return defer.Deferred().addCallback(req2)
>
> def req2(a):
>     print 'req2', a
>     global cd
>     if not cd:
>         cd = defer.Deferred().addCallback(req3)
>     return cd
>
> def req3(a):
>     print 'req3', a
>     return a
>
> def cb1(a):
>     print 'cb1', a
>     return a
>
> def cb2(a):
>     print 'cb2', a
>     return a
>
>
> d1 = req1().addCallback(cb1)
> d1.callback('X')
> d2 = req1().addCallback(cb2)
> d2.callback('X')
> cd.callback('S')
>
> output:
>
> req2 X
> req2 X
> req3 S
> cb1 S
> cb2 None # <- ?
>
> req1 fetches a mapping for given arguments - req2 tries to create an
> object + additional resquests by the result of req1 - but these objects
> should only be created once - so far i didn't find an acceptable
> workaround for that - req3 applys some modifications but the problem
> occurs also without the step in req3 
>
> is there something i overlooked so that cb2 isn't called with the
> required arg?

I think it's because you're effectively pausing two callback chains on
the same nested deferred, and it's the continuation processing of that
deferred for the first callback chain that is clearing your result for
the second callback chain.

There are three deferred's involved above, with these initial callbacks:

d1 - Callbacks req2, then cb1
d2 - Callbacks req2 then cb2
cd - Callback req3

Now in each of the d1.callback() and d2.callback() calls, the callback
chain runs the first callback req2(), and then pauses because req2
returns a deferred (cb) that hasn't finished.

It's important to realize that the way the deferred object "pauses" a
callback is to simply insert its own continuation method as a final
callback on the nested deferred.

So, after those two callback() methods, the cd deferred actually has a
callback chain of req3, d1._continue, and d2._continue.

It's also important to note that the internal _continue method of the
deferred object has no return (thus None).  That's where your result
is being lost along the way to cb2.

So, when you finally call cd.callback('S'), I believe you actually
trigger a sequence of events such as:

  req3('S'), returning 'S'
  d1._continue('S'), returning None and unpausing d1
    (recursively)
    cb1('S') due to the next callback in d1's callback chain.
  d2._continue(None), returning None and unpausing d2
    (recursively)
    cb2(None) due to the next callback in d2's callback chain.
  
You'll find that if you temporarily add code to Deferred._continue to
pass through the result it is handed that you see it show up.

I don't know if sharing a nested deferred chain among more than one
outer deferred chain something that can be expected to have sane
behavior.  Then again, I'm not sure it's really a bad thing to have
the Deferred object pass through the result in addition to using it
for itself (e.g., adding a "return result" to the Deferred._continue
method).

You might find that if you need to perform some sort of singleton
action on the underlying operation, that you would be best off
manually handling how that callback affects others than relying on the
default Twisted behavior of nested deferreds.

-- David




From glyph at divmod.com  Mon Feb  4 20:19:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 05 Feb 2008 03:19:17 -0000
Subject: [Twisted-Python] using conch to create a "chrooted" sftp server
Message-ID: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>


I'd like to provide file-server access on my home network to a machine 
which hosts a variety of media, without exposing its entire filesystem. 
OpenSSH's sftp-server doesn't allow this, so of course I thought, I 
should use conch.

Completely replacing OpenSSH with Conch is inconvenient, however, and it 
is my only means to administer these machines, so both for the sake of 
easy packaging and making sure I don't make a mistake, I'd really like 
to keep the main SSH daemon in place but replace the sftp channel.

I *think* that means I'd need to do something with sshd_config, 
twisted.conch.ssh.filetransfer, and twisted.internet.stdio.  However, 
I'm a bit at a loss what that thing would be.

Can someone with stronger conch-fu than I give a brief description of 
how this could be done?  Ideally, I'd like some users (myself) to be 
able to access the entire filesystem, but others (the "storage" user, 
who has no shell) to only be able to access /public.  Finally I'd like 
the "guest" user to be able to access /public, but read-only, and 
/public/drop-box read-write.  I don't mind setting up UNIX permissions 
to enforce that last bit.



From dfarrell at mypublisher.com  Tue Feb  5 13:39:07 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 5 Feb 2008 15:39:07 -0500
Subject: [Twisted-Python] Twisted and Centos5 install problems
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0899@exchange.mypublisher.local>
Message-ID: <318F79422ADC5041A93343721F84474D8B08CA@exchange.mypublisher.local>

> > On Fri, 1 Feb 2008 13:34:15 -0500, Doug Farrell
> <dfarrell at mypublisher.com>
> > wrote:
> > >Hello everyone,
> > >
> > >I'm trying to install Twisted 2.5 on a Centos 5 intel based server
> that
> > >has Python 2.4 on it, and am having problems. I download the
Twisted
> 2.5
> > >tar file, unpack it, go to the zope.interface directory and perform
a
> > >"sudo python setup.py install" command, which succeeds. I then go
to
> the
> > >root directory and do the same thing for Twisted "sudo python
> setup.py
> > >install" and it looks like it completes successfully. When I go
into
> the
> > >Python interpreter and enter an "import twisted" line, that works
> fine.
> > >However, if I do this, "from twisted import web" I get an error:
> > >
> > >Python 2.4.3 (#1, Mar 14 2007, 19:01:42)
> > >[GCC 4.1.1 20070105 (Red Hat 4.1.1-52)] on linux2
> > >Type "help", "copyright", "credits" or "license" for more
> information.
> > >>>> from twisted import web
> > >Traceback (most recent call last):
> > >  File "<stdin>", line 1, in ?
> > >ImportError: cannot import name web
> > >
> > >When I look in /usr/lib/python2.4/site-packages/twisted I see that
it
> > >has a web directory, so I'm not sure what's going on or what the
> problem
> > >is. Any insights would be most welcome!
> > >
> >
> > Is this a 64 bit machine?  Do you also have
/usr/lib64/python2.4/site-
> > packages/twisted?  If so, it may be that Python is
> > picking that up, causing it to ignore anything in
> /usr/lib/python2.4/site-
> > packages/twisted.
> >
> > If so, the solution is to tell distutils to install all of Twisted
in
> the
> > same place.  I forget the exact options to do this, you can probably
> find
> > them in the output of "python setup.py install --help".
> >
> > Jean-Paul
> >
> Jean-Paul
> 
> Thanks for the hint, when I looked at the output of uname -a on the
> target machine it reported this:
> 
> Linux dev03.com 2.6.18-8.1.6.el5 #1 SMP Thu Jun 14 17:29:04 EDT 2007
> x86_64 x86_64 x86_64 GNU/Linux
> 
> Which looks like it's running in Intel 64 bit mode to me. So I'll have
> to look around to see how to install Twisted in a 64 environment. Any
> help or suggestions would be greatly appreciated! :)
> 
> Thanks again!
> Doug
> 

Hi everyone,

Just to "close the loop" on this, I re-installed Twisted on this 64 bit
machine like this:

python setup.py install --install-lib=/usr/lib64/python2.4/site-packages

and twisted has installed fine. I'm running my twistd daemon process
right now.

Doug



From leszczynscy at yahoo.com  Wed Feb  6 08:03:11 2008
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 06 Feb 2008 09:03:11 -0600
Subject: [Twisted-Python] simple tcpgate in Twisted
Message-ID: <47A9CC2F.6000106@yahoo.com>

Hi,

I need to write a simple TCP/IP gate which would accept connections, 
reconnect to arbitrary (address,port), retransmit all data from both 
ends, and finally closed the connection upon either end closing it too.

I was not able to find anything ready so I wrote a simple piece of the 
code (attached at the end along with the tcpecho used for testing 
purposes, for initiator side I use simply telnet). I also want to be as 
clean as possible from Twisted perspective. There are two problems I 
have encountered related to the cleanness of the solution:

1- I store self.gate_server_protocol in both 
GateClientProtocol(Protocol) and GateClientProtocolFactory(ClientFactory)
   
    This is an obvious redundancy, but it is not clear for me what is a 
relationship between a Protocol and a ClientFactory. Is it composition 
or aggregation, is it 1:1 or n:n. Is Factory created for each Protocol?

2 - Not sure id the relationship between GateServerProtocol and 
GateClientProtocol is correctly coded too.


The prototype does not accumulate the data in case a connection for is 
GateClientProtocol not established. I will finish it of once I am 
confident the main structure is solid.


Thx in advance for comments and sugestuions,

AndyL


-----------<CUT HERE>---------------

tcpgate.py
==========
from twisted.internet.protocol import Protocol,ClientFactory,ServerFactory
from twisted.internet import reactor

class GateClientProtocol(Protocol):
    def __init__(self,gate_server_protocol):
        self.gate_server_protocol=gate_server_protocol
        gate_server_protocol.gate_client_protocol=self

    def connectionLost(self,reason):
        print 'GateClientProtocol.connectionLost',reason
        self.gate_server_protocol.transport.loseConnection()
        
    def dataReceived(self,data):
        self.gate_server_protocol.transport.write(data)

class GateClientProtocolFactory(ClientFactory):
    def __init__(self,gate_server_protocol):
        self.gate_server_protocol=gate_server_protocol

    def buildProtocol(self,addr):
        print 'GateClientProtocolFactory:buildProtocol'
        return GateClientProtocol(self.gate_server_protocol)
    
    def clientConnectionFailed(self,connector,reason):
        print 'GateClientProtocolFactory:clientConnectionFailed',reason

class GateServerProtocol(Protocol):
    def __init__(self):
        self.gate_client_protocol=None

    def connectionMade(self):
        print 'GateServerProtocol.connectionMade'
        reactor.connectTCP('127.0.0.1',8002,GateClientProtocolFactory(self))

    def connectionLost(self,reason):
        print 'GateServerProtocol.connectionLost',reason
        if self.gate_client_protocol:
            self.gate_client_protocol.transport.loseConnection()
            self.gate_client_protocol=None

    def dataReceived(self,data):
        if self.gate_client_protocol:
            self.gate_client_protocol.transport.write(data)

factory=ServerFactory()
factory.protocol=GateServerProtocol

reactor.listenTCP(8001,factory)
reactor.run()


tcpecho.py
==========
from twisted.internet.protocol import Protocol,Factory
from twisted.internet import reactor

class Echo(Protocol):
    def connectionLost(self, reason):
        print 'Lost connection.  Reason:', reason

    def dataReceived(self, data):
        print 'Echo:',`data`
        if 'quit' in data:
            self.transport.loseConnection()
        else:
            self.transport.write(data)

factory=Factory()
factory.protocol=Echo

reactor.listenTCP(8002,factory)

reactor.run()







From exarkun at divmod.com  Wed Feb  6 08:15:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 6 Feb 2008 10:15:14 -0500
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <47A9CC2F.6000106@yahoo.com>
Message-ID: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>

On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Hi,
>
>I need to write a simple TCP/IP gate which would accept connections, 
>reconnect to arbitrary (address,port), retransmit all data from both ends, 
>and finally closed the connection upon either end closing it too.

twisted.protocols.portforward probably does something quite similar to what
you want.

>
>I was not able to find anything ready so I wrote a simple piece of the code 
>(attached at the end along with the tcpecho used for testing purposes, for 
>initiator side I use simply telnet). I also want to be as clean as possible 
>from Twisted perspective. There are two problems I have encountered related 
>to the cleanness of the solution:
>
>1- I store self.gate_server_protocol in both GateClientProtocol(Protocol) 
>and GateClientProtocolFactory(ClientFactory)
>      This is an obvious redundancy, but it is not clear for me what is a 
>relationship between a Protocol and a ClientFactory. Is it composition or 
>aggregation, is it 1:1 or n:n. Is Factory created for each Protocol?

The relationship is up to the factory.  In your code:

>    def connectionMade(self):
>        print 'GateServerProtocol.connectionMade'
>        reactor.connectTCP('127.0.0.1',8002,GateClientProtocolFactory(self))

It seems the relationship is 1:1.  Each time you want to establish a new
connection, you create a new GateClientProtocolFactory instance and there
is no reconnection logic implemented by GateClientProtocolFactory.

You may see simplification by using twisted.internet.protocols.ClientCreator
instead of having GateClientProtocolFactory.

>
>2 - Not sure id the relationship between GateServerProtocol and 
>GateClientProtocol is correctly coded too.
>

It seems basically correct, aside from the timing/connecting issue you
mentioned.

>
>The prototype does not accumulate the data in case a connection for is 
>GateClientProtocol not established. I will finish it of once I am confident 
>the main structure is solid.
>

Jean-Paul



From glyph at divmod.com  Thu Feb  7 10:58:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 07 Feb 2008 17:58:01 -0000
Subject: [Twisted-Python] [ANN] Twisted joins Software Freedom Conservancy, 
	Now Accepting Tax-Deductable Donations
Message-ID: <20080207175801.21558.1851715616.divmod.xquotient.6333@joule.divmod.com>


A little less than a year ago, we were approached by Erik Dahl of Zenoss 
about creating a legal entity which Zenoss (and hopefully others!) could 
use to donate to Twisted.  Accepting money in some official capacity 
would allow us to finance things like sprints, releases, maintenance 
work, dedicated reviewer time, as well as offsetting the ongoing costs 
to the founders of the project such as hosting and domain registration.

It's been a long, hard road to get there, but the Twisted project has 
finally, very recently joined the Software Freedom Conservancy.  So 
recently, in fact, that we won't be on the web page - 
http://conservancy.softwarefreedom.org/ - for another day or two.

Creating a full-fledged foundation can be a pretty serious hassle, and 
Twisted has historically been strapped for qualified personnel.  The 
Conservancy has allowed us to pool legal resources with other projects, 
such as Inkscape, Samba, and Wine, to reduce the management overhead 
associated with creating an official legal entity.

Some of you may have noticed that we recently added a Google Checkout 
link to the front page of twistedmatrix.com.  This new link points to 
Conservancy's account for us, which is a tax-exempt 501(c)(3) 
organization.  As a result, donations to Twisted are now tax-deductable.

In the coming weeks, we plan to announce our first group of donors, as 
well as different levels of sponsorship, allowing future organizations 
and individuals to be recognized for their contributions.  We also plan 
to create a mailing list for sponsors above a certain level to direct 
our attention to the issues which are important to them.

If your company would like to be mentioned in that initial announcement, 
please drop us a line at tsf at twistedmatrix.com, and we would be happy to 
discuss our plans for sponsorship levels with you.

We also plan to have a level of sponsorship for individuals who just 
want to chip in a little, but those of you who donate before we make the 
official announcement will get an honorable mention of some kind. 
(Given that we still have to figure this stuff out, I don't know *what* 
kind, but we'll do something.)

This is all thanks to the tireless efforts of Itamar Shtull-Trauring, 
and Karen Sandler from the Conservancy.



From andrewfr_ice at yahoo.com  Sat Feb  9 13:46:44 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 9 Feb 2008 12:46:44 -0800 (PST)
Subject: [Twisted-Python] Question about Twistd and PYTHONPATH
Message-ID: <78517.52248.qm@web34209.mail.mud.yahoo.com>

Hello Folks:

This is my first time using twistd. I have daemonized
a server by creating a TAC file. When I execute the
server (first I ran it out of its development
directory), 

twistd -y server.tac

I get:

no module named Reporter (Reporter is a class)

when I run a non-daemonized version of the same
server, I have no problem.

I checked my PYTHONPATH. It seems to be properly set.
I tried setting the path using sys.path. No go.

Is there embarassingly simple that I am missing? Is
there something I should be overriding?

Cheers,
Andrew



      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at twistedmatrix.com  Sat Feb  9 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Feb 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1202619907.14.330957183@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080210/84107c3c/attachment.html>

From exarkun at divmod.com  Sun Feb 10 09:32:24 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 10 Feb 2008 11:32:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22475 - Fix
 twisted.spread.util.FilePager to make it works with empty files:
In-Reply-To: <E1JNvug-0004f3-00@wolfwood.twistedmatrix.com>
Message-ID: <20080210163224.6859.1949187822.divmod.quotient.7750@ohm>

On Sat, 09 Feb 2008 13:03:02 -0700, Thomas Herve <therve at wolfwood.twistedmatrix.com> wrote:
>Author: therve
>Date: Sat Feb  9 13:03:00 2008
>New Revision: 22475
>
>Modified:
>   trunk/twisted/spread/util.py
>   trunk/twisted/test/test_pb.py
>
>Log:
>Fix twisted.spread.util.FilePager to make it works with empty files:
>previously, it didn't callback correctly.
>
>Author: zectbumo
>Reviewer: therve
>Fixes: #3023
>
> [snip]
>+        while not l and ttl > 0:
>+            pump.pump()
>+            ttl -= 1
>+        print ttl

*cough* ;)

> [snip]

Jean-Paul



From leszczynscy at yahoo.com  Sun Feb 10 20:48:16 2008
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Sun, 10 Feb 2008 21:48:16 -0600
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>
References: <20080206151514.6859.1777463794.divmod.quotient.5724@ohm>
Message-ID: <47AFC580.4030801@yahoo.com>

Jean-Paul Calderone wrote:
> On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski 
> <leszczynscy at yahoo.com> wrote:
>> Hi,
>>
>> I need to write a simple TCP/IP gate which would accept connections, 
>> reconnect to arbitrary (address,port), retransmit all data from both 
>> ends, and finally closed the connection upon either end closing it too.
>
> twisted.protocols.portforward probably does something quite similar to 
> what
> you want.
>
thx a lot for a suggestion.  That self.transport.pause/resumeProducing
is great.

The only thing I am not sure how it works is how ProxyServer handles the
closing connection. from its external client. Is it just done in base
classes?

Regards,
Andy




From exarkun at divmod.com  Mon Feb 11 06:43:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 11 Feb 2008 08:43:36 -0500
Subject: [Twisted-Python] simple tcpgate in Twisted
In-Reply-To: <47AFC580.4030801@yahoo.com>
Message-ID: <20080211134336.6859.487960994.divmod.quotient.8028@ohm>

On Sun, 10 Feb 2008 21:48:16 -0600, Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Jean-Paul Calderone wrote:
>>On Wed, 06 Feb 2008 09:03:11 -0600, Andy Leszczynski 
>><leszczynscy at yahoo.com> wrote:
>>>Hi,
>>>
>>>I need to write a simple TCP/IP gate which would accept connections, 
>>>reconnect to arbitrary (address,port), retransmit all data from both ends, 
>>>and finally closed the connection upon either end closing it too.
>>
>>twisted.protocols.portforward probably does something quite similar to what
>>you want.
>thx a lot for a suggestion.  That self.transport.pause/resumeProducing
>is great.
>
>The only thing I am not sure how it works is how ProxyServer handles the
>closing connection. from its external client. Is it just done in base
>classes?

Both ProxyClient and ProxyServer subclass Proxy.  Proxy implements
connectionLost to close the other connection.  So, yes.

Jean-Paul



From lists at collab.nl  Mon Feb 11 15:23:53 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Mon, 11 Feb 2008 23:23:53 +0100
Subject: [Twisted-Python] ANN: PyAMF 0.1
Message-ID: <2B8D69F9-D9E9-490B-B831-2E9B2A96487B@collab.nl>

We released PyAMF 0.1, a lightweight library that allows Flash and  
Python applications to communicate via Adobe's ActionScript Message  
Format.
AMF3 and RemoteObject are supported in all the implemented Remoting  
gateways, currently supported for Django, Twisted and WSGI.

A summary of new features features and improvements in this release:

- TwistedGateway now expects deferred from service functions
- Added expose_request to TwistedGateway
- New error handling api useful for registering custom exception classes
- When a client receives a remoting error, an exception is generated
- expose_request per service control vastly improved
- Improved authentication per service control
- uuid is no longer installed when using Python 2.5 or newer
- The inheritance tree was not consulted when encoding attributes
- TypedObjects didn't work with old style classes
- ErrorFault now prints details

Check out the download page [1], installation instructions [2] and  
examples [3].

Questions? First stop is the mailing list [4], but we also hang out  
on [5].

Cheers,

- the PyAMF team

[1] http://pyamf.org/wiki/Download
[2] http://pyamf.org/wiki/Install
[3] http://pyamf.org/wiki/Examples
[4] http://pyamf.org/wiki/MailingList
[5] irc://freenode.net/pyamf

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080211/63cae720/attachment.html>

From noamraph at gmail.com  Tue Feb 12 04:36:42 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Tue, 12 Feb 2008 13:36:42 +0200
Subject: [Twisted-Python] How to make a secure connection between two
	computers
Message-ID: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>

Hello,

I want to do a pretty simple thing (I think): I have two computers A
and B. I want A to connect to B, where both A verifies that it
connected to B and B verifies that it was connected from A. The
connection should be encrypted.

I assume it can be done by SSL and twisted. I tried quite a bit, but
it's too confusing. Perhaps someone can give me a tip? (Some openssl
commands to create the needed key/certificate files, and an echoserver
and echoclient programs would be really great.)

Thanks a lot,
Noam



From coder_gus at lavabit.com  Tue Feb 12 05:28:05 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Tue, 12 Feb 2008 14:28:05 +0200
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <47B190D5.3050009@lavabit.com>

Hi Noam,
You can find some client/server examples here:
http://twistedmatrix.com/projects/core/documentation/examples/
And how to generate the certs here: http://blog.vrplumber.com/356

Noam Raphael wrote:
> Hello,
>
> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.
>
> I assume it can be done by SSL and twisted. I tried quite a bit, but
> it's too confusing. Perhaps someone can give me a tip? (Some openssl
> commands to create the needed key/certificate files, and an echoserver
> and echoclient programs would be really great.)
>
> Thanks a lot,
> Noam
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________
> Click here to save cash and find low rates on auto loans.
> http://ads.lavabit.com/fc/Ioyw6kdc6UQTEoPD7pgReFBDweVSjgOFAvv1eC6X2QYOIge7AOQK1X/
> ____________________________________________________________________________________
>   


____________________________________________________________________________________
Click for free info on online degrees and make up to $150K/ year.
http://ads.lavabit.com/fc/Ioyw6kddD3OlYSmOugh1odzLXn4coqUWjZbeJPjWzGtddBmGJRiTvn/
____________________________________________________________________________________




From raizyr at gmail.com  Tue Feb 12 06:22:57 2008
From: raizyr at gmail.com (Raizyr)
Date: Tue, 12 Feb 2008 08:22:57 -0500
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <47B190D5.3050009@lavabit.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<47B190D5.3050009@lavabit.com>
Message-ID: <77864d6a0802120522h671a1bcax844f17e9e7c1fdb9@mail.gmail.com>

Also, you might want to pick up the Twisted Network Programming Essentials
book, I'm going through it now and it seems to do a good job of making the
overall concepts of Twisted easier to understand.

http://www.amazon.com/Twisted-Network-Programming-Essentials-Fettig/dp/0596100329/



On Feb 12, 2008 7:28 AM, coder_gus <coder_gus at lavabit.com> wrote:

> Hi Noam,
> You can find some client/server examples here:
> http://twistedmatrix.com/projects/core/documentation/examples/
> And how to generate the certs here: http://blog.vrplumber.com/356
>
> Noam Raphael wrote:
> > Hello,
> >
> > I want to do a pretty simple thing (I think): I have two computers A
> > and B. I want A to connect to B, where both A verifies that it
> > connected to B and B verifies that it was connected from A. The
> > connection should be encrypted.
> >
> > I assume it can be done by SSL and twisted. I tried quite a bit, but
> > it's too confusing. Perhaps someone can give me a tip? (Some openssl
> > commands to create the needed key/certificate files, and an echoserver
> > and echoclient programs would be really great.)
> >
> > Thanks a lot,
> > Noam
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> ____________________________________________________________________________________
> > Click here to save cash and find low rates on auto loans.
> >
> http://ads.lavabit.com/fc/Ioyw6kdc6UQTEoPD7pgReFBDweVSjgOFAvv1eC6X2QYOIge7AOQK1X/
> >
> ____________________________________________________________________________________
> >
>
>
>
> ____________________________________________________________________________________
> Click for free info on online degrees and make up to $150K/ year.
>
> http://ads.lavabit.com/fc/Ioyw6kddD3OlYSmOugh1odzLXn4coqUWjZbeJPjWzGtddBmGJRiTvn/
>
> ____________________________________________________________________________________
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris McNabb
raizyr at gmail.com
http://www.fatratz.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080212/8bb9137e/attachment.html>

From mg at daimi.au.dk  Tue Feb 12 07:30:07 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 15:30:07 +0100
Subject: [Twisted-Python] Several Trial test suites
Message-ID: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>

Hello,

I am using Twisted and Trial with great success for a project where we
would like to have both a small regression test suite that should run
quickly and a larger test suite which will test the system under more
heavy load.

My project lives in a package called viff, and so far I have created a
viff.test package which contains the tests -- no problem, the test are
picked up fine when I do 'trial viff'.

To create a secondary test suite, do I have to create another package
at the viff level, say viff.stress_test, or is there some clever way
to organize things below viff.test?

How to people organize such trees with many tests?

Thanks for any inputs!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mg at daimi.au.dk  Tue Feb 12 09:27:22 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 17:27:22 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <87y79qqgwl.fsf@hbox.dyndns.org>

"Noam Raphael" <noamraph at gmail.com> writes:

> Hello,
>
> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.
>
> I assume it can be done by SSL and twisted. I tried quite a bit, but
> it's too confusing. Perhaps someone can give me a tip? (Some openssl
> commands to create the needed key/certificate files, and an echoserver
> and echoclient programs would be really great.)

I am using TLS via GNUTLS via python-gnutls :-)

  http://pypi.python.org/pypi/python-gnutls

As I understand it, TLS is the successor to SSL. Python-gnutls contains
an example echo server and client that using Twisted and TLS.

To generate the certificates I use this Makefile:

  # Default number of players. To generate keys and certificates for,
  # say, 5 players, simply add 'N=5' as a command line argument when you
  # run the Makefile.
  N = 3
  
  PLAYERS = $(addprefix player-, $(shell seq $N))
  KEYS = $(addsuffix .key, $(PLAYERS) ca)
  CERTS = $(addsuffix .cert, $(PLAYERS) ca)
  REQUESTS = $(addsuffix .request, $(PLAYERS) ca)
  CFGS = $(addsuffix .cfg, $(PLAYERS) ca)
  
  
  .PHONY: all
  all: $(CERTS)
  
  .PHONY: clean
  clean:
  	rm -f $(CERTS)
  	rm -f $(REQUESTS)
  	rm -f $(CFGS)
  
  .PHONY: distclean
  distclean: clean
  	rm -f $(KEYS)
  
  %.key:
  	certtool --generate-privkey --outfile $@
  
  player-%.cfg:
  	@echo 'cn = "VIFF Player $*"' > $@
  	@echo 'serial = $*' >> $@ # The player number is encoded here.
  	@echo 'expiration_days = 365' >> $@
  	@echo 'signing_key' >> $@
  	@echo 'encryption_key' >> $@
  
  player-%.request: player-%.cfg player-%.key
  	certtool --generate-request --template player-$*.cfg \
  	 --load-privkey player-$*.key --outfile $@
  
  player-%.cert: player-%.request player-%.cfg ca.cert ca.key
  	certtool --generate-certificate --template player-$*.cfg \
  	 --load-request player-$*.request \
  	 --load-ca-certificate ca.cert --load-ca-privkey ca.key \
  	 --outfile $@
  
  ca.cfg:
  	@echo 'cn = "VIFF Certificate Authority"' > $@
  	@echo 'expiration_days = 365' >> $@
  	@echo 'ca' >> $@
  	@echo 'cert_signing_key' >> $@
  
  
  ca.cert: ca.cfg ca.key
  	certtool --generate-self-signed --template ca.cfg \
  	         --load-privkey ca.key --outfile ca.cert
  
  .INTERMEDIATE: ca.cfg
  .PRECIOUS: %.key


I hope this helps you a bit!


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080212/ba40d5dc/attachment.sig>

From exarkun at divmod.com  Tue Feb 12 10:27:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 12:27:10 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87y79qqgwl.fsf@hbox.dyndns.org>
Message-ID: <20080212172710.6859.1056843369.divmod.quotient.8547@ohm>

On Tue, 12 Feb 2008 17:27:22 +0100, Martin Geisler <mg at daimi.au.dk> wrote:
>"Noam Raphael" <noamraph at gmail.com> writes:
>
>> Hello,
>>
>> I want to do a pretty simple thing (I think): I have two computers A
>> and B. I want A to connect to B, where both A verifies that it
>> connected to B and B verifies that it was connected from A. The
>> connection should be encrypted.
>>
>> I assume it can be done by SSL and twisted. I tried quite a bit, but
>> it's too confusing. Perhaps someone can give me a tip? (Some openssl
>> commands to create the needed key/certificate files, and an echoserver
>> and echoclient programs would be really great.)
>
>I am using TLS via GNUTLS via python-gnutls :-)
>
>  http://pypi.python.org/pypi/python-gnutls
>
>As I understand it, TLS is the successor to SSL. Python-gnutls contains
>an example echo server and client that using Twisted and TLS.

Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
support is actually support of SSL and TLS.

>
>To generate the certificates I use this Makefile:
>
> [snip]

One can also use recent versions of twisted.internet.ssl to generate
certificates.

See KeyPair, PrivateCertificate, and Certificate (and maybe some other
stuff, if you want) here:

  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html

Jean-Paul



From george at ringdevelopment.com  Tue Feb 12 11:18:59 2008
From: george at ringdevelopment.com (George Pauly)
Date: Tue, 12 Feb 2008 13:18:59 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between
	two computers
In-Reply-To: <87y79qqgwl.fsf@hbox.dyndns.org>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<87y79qqgwl.fsf@hbox.dyndns.org>
Message-ID: <1202840340.6615.127.camel@localhost.localdomain>

On Tue, 2008-02-12 at 17:27 +0100, Martin Geisler wrote:
> "Noam Raphael" <noamraph at gmail.com> writes:
> 
> > Hello,
> >
> > I want to do a pretty simple thing (I think): I have two computers A
> > and B. I want A to connect to B, where both A verifies that it
> > connected to B and B verifies that it was connected from A. The
> > connection should be encrypted.
> >
> > I assume it can be done by SSL and twisted. I tried quite a bit, but
> > it's too confusing. Perhaps someone can give me a tip? (Some openssl
> > commands to create the needed key/certificate files, and an echoserver
> > and echoclient programs would be really great.)
> 
> I am using TLS via GNUTLS via python-gnutls :-)
> 
>   http://pypi.python.org/pypi/python-gnutls
> 
> As I understand it, TLS is the successor to SSL. Python-gnutls contains
> an example echo server and client that using Twisted and TLS.
> 
> To generate the certificates I use this Makefile:
> 
>   # Default number of players. To generate keys and certificates for,
>   # say, 5 players, simply add 'N=5' as a command line argument when you
>   # run the Makefile.
>   N = 3
>   
>   PLAYERS = $(addprefix player-, $(shell seq $N))
>   KEYS = $(addsuffix .key, $(PLAYERS) ca)
>   CERTS = $(addsuffix .cert, $(PLAYERS) ca)
>   REQUESTS = $(addsuffix .request, $(PLAYERS) ca)
>   CFGS = $(addsuffix .cfg, $(PLAYERS) ca)
>   
>   
>   .PHONY: all
>   all: $(CERTS)
>   
>   .PHONY: clean
>   clean:
>   	rm -f $(CERTS)
>   	rm -f $(REQUESTS)
>   	rm -f $(CFGS)
>   
>   .PHONY: distclean
>   distclean: clean
>   	rm -f $(KEYS)
>   
>   %.key:
>   	certtool --generate-privkey --outfile $@
>   
>   player-%.cfg:
>   	@echo 'cn = "VIFF Player $*"' > $@
>   	@echo 'serial = $*' >> $@ # The player number is encoded here.
>   	@echo 'expiration_days = 365' >> $@
>   	@echo 'signing_key' >> $@
>   	@echo 'encryption_key' >> $@
>   
>   player-%.request: player-%.cfg player-%.key
>   	certtool --generate-request --template player-$*.cfg \
>   	 --load-privkey player-$*.key --outfile $@
>   
>   player-%.cert: player-%.request player-%.cfg ca.cert ca.key
>   	certtool --generate-certificate --template player-$*.cfg \
>   	 --load-request player-$*.request \
>   	 --load-ca-certificate ca.cert --load-ca-privkey ca.key \
>   	 --outfile $@
>   
>   ca.cfg:
>   	@echo 'cn = "VIFF Certificate Authority"' > $@
>   	@echo 'expiration_days = 365' >> $@
>   	@echo 'ca' >> $@
>   	@echo 'cert_signing_key' >> $@
>   
>   
>   ca.cert: ca.cfg ca.key
>   	certtool --generate-self-signed --template ca.cfg \
>   	         --load-privkey ca.key --outfile ca.cert
>   
>   .INTERMEDIATE: ca.cfg
>   .PRECIOUS: %.key
> 
> 
> I hope this helps you a bit!
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From noamraph at gmail.com  Tue Feb 12 13:02:00 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Tue, 12 Feb 2008 22:02:00 +0200
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>

Thanks all!

I think that at the end, I'll just use Python's plain socket, since I
don't intend to serve more than one request at a time. I also don't
really need to use SSL, since my two computers can have a pre-shared
secret. Here's what I wrote - tell me what you think!

#!/usr/bin/env python

import sys
import socket

from Crypto.Hash import SHA
from Crypto.Cipher import ARC4

RANDOM_LEN = 16

def get_random():
    return open('/dev/urandom').read(RANDOM_LEN)

def recv(sock, n):
    buf = ''
    while len(buf) < n:
        r = sock.recv(n - len(buf))
        if not r:
            raise socket.error("Couldn't read enough bytes")
        buf += r
    return buf

def handshake(sock, secret):
    my_random = get_random()
    my_rc4 = ARC4.new(SHA.new(secret + my_random).digest())
    sock.sendall(my_random)
    peer_random = recv(sock, RANDOM_LEN)
    peer_rc4 = ARC4.new(SHA.new(secret + peer_random).digest())
    sock.sendall(peer_rc4.encrypt('\0'*RANDOM_LEN))
    peer_response = recv(sock, RANDOM_LEN)
    if my_rc4.decrypt(peer_response) != '\0' * RANDOM_LEN:
        raise socket.error('Failed peer authentication')
    return my_rc4, peer_rc4

def server(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host, port))
    s.listen(1)
    while True:
        conn, addr = s.accept()
        print 'Connected by', addr
        conn.settimeout(1)
        try:
            my_rc4, peer_rc4 = handshake(conn, secret)
            while True:
                data = my_rc4.decrypt(conn.recv(1024))
                if not data: break
                print 'Received', repr(data)
                conn.send(peer_rc4.encrypt(data))
            conn.close()
        except socket.error, e:
            print 'Error:', e
        else:
            print 'Closed connection'

def client(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(1)
    s.connect((host, port))
    my_rc4, peer_rc4 = handshake(s, secret)
    s.send(peer_rc4.encrypt('Hello, world'))
    data = my_rc4.decrypt(s.recv(1024))
    s.close()
    print 'Received', repr(data)

def main():
    if len(sys.argv) != 5 or sys.argv[1] not in ('server', 'client'):
        print "Usage: %s server/client host port secret"
        return
    is_server = sys.argv[1] == 'server'
    host = sys.argv[2]
    port = int(sys.argv[3])
    secret = sys.argv[4]
    if is_server:
        server(host, port, secret)
    else:
        client(host, port, secret)

if __name__ == '__main__':
    main()



From mg at daimi.au.dk  Tue Feb 12 12:08:21 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 12 Feb 2008 20:08:21 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87y79qqgwl.fsf@hbox.dyndns.org>
	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
Message-ID: <87lk5qq9ga.fsf@hbox.dyndns.org>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>>I am using TLS via GNUTLS via python-gnutls :-)
>>
>>  http://pypi.python.org/pypi/python-gnutls
>>
>>As I understand it, TLS is the successor to SSL. Python-gnutls
>>contains an example echo server and client that using Twisted and TLS.
>
> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
> support is actually support of SSL and TLS.

Okay, good to know.

>>To generate the certificates I use this Makefile:
>>
>> [snip]
>
> One can also use recent versions of twisted.internet.ssl to generate
> certificates.
>
> See KeyPair, PrivateCertificate, and Certificate (and maybe some other
> stuff, if you want) here:
>
>  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html

Thanks! I actually do want to replace the Makefile with Python to make
it cross-platform. In that regard I probably also have to replace the
python-gnutls library since it has no Windows binaries (that I could
tell).

I initially stayed away from pyOpenSSL since

* it seems dead: last release was in 2004 with Windows installers for
  Python 2.1. This message seems to indicate that a live form exists:
  http://tinyurl.com/3b4yeq

* the OpenSSL license issue. My project is under the GPL and therefore I
  would prefer a library under the (L)GPL too to make things simple.

* The GnuTLS has a nice (maybe biased) comparison page:

    http://www.gnu.org/software/gnutls/comparison.html


Is there a cross-platform GPL compatible library out there that will
give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080212/4ae01789/attachment.sig>

From exarkun at divmod.com  Tue Feb 12 13:36:12 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 15:36:12 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87lk5qq9ga.fsf@hbox.dyndns.org>
Message-ID: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>

On Tue, 12 Feb 2008 20:08:21 +0100, Martin Geisler <mg at daimi.au.dk> wrote:
>Jean-Paul Calderone <exarkun at divmod.com> writes:
>
>>>I am using TLS via GNUTLS via python-gnutls :-)
>>>
>>>  http://pypi.python.org/pypi/python-gnutls
>>>
>>>As I understand it, TLS is the successor to SSL. Python-gnutls
>>>contains an example echo server and client that using Twisted and TLS.
>>
>> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
>> support is actually support of SSL and TLS.
>
>Okay, good to know.
>
>>>To generate the certificates I use this Makefile:
>>>
>>> [snip]
>>
>> One can also use recent versions of twisted.internet.ssl to generate
>> certificates.
>>
>> See KeyPair, PrivateCertificate, and Certificate (and maybe some other
>> stuff, if you want) here:
>>
>>  http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
>
>Thanks! I actually do want to replace the Makefile with Python to make
>it cross-platform. In that regard I probably also have to replace the
>python-gnutls library since it has no Windows binaries (that I could
>tell).
>
>I initially stayed away from pyOpenSSL since
>
>* it seems dead: last release was in 2004 with Windows installers for
>  Python 2.1. This message seems to indicate that a live form exists:
>  http://tinyurl.com/3b4yeq

There isn't much, if any, development happening on PyOpenSSL.  Partially,
this is because it does enough as it is now (although there are some
features it could provide which would be nice).  Partially it's because
the original author has disappeared into the void.

>
> [snip licensing issues I don't have any clue about]
>
>* The GnuTLS has a nice (maybe biased) comparison page:
>
>    http://www.gnu.org/software/gnutls/comparison.html
>

GnuTLS support in Twisted might be interesting.  I have heard rumors that
OpenSSL is a higher quality implementation than GnuTLS, but I don't have
any first-hand experience; it's possible this is just fud.

There's no reason Twisted couldn't support both of these libraries and use
whichever is available (or allow explicit selection).  I think there's even
a ticket open in the tracker for this.  But since PyOpenSSL basically works,
the motivation to work on this might be missing for a lot of people.

>
>Is there a cross-platform GPL compatible library out there that will
>give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?

There's also TLSLite, which includes Twisted support.  I don't have any
first-hand experience with it either, though.

There's also M2Crypto, but since that's just another OpenSSL wrapper, it
probably doesn't take care of your license concerns.

Jean-Paul



From drew.smathers at gmail.com  Tue Feb 12 14:07:48 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 12 Feb 2008 16:07:48 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
Message-ID: <368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>

On Feb 12, 2008 3:02 PM, Noam Raphael <noamraph at gmail.com> wrote:

> Thanks all!
>
> I think that at the end, I'll just use Python's plain socket, since I
> don't intend to serve more than one request at a time. I also don't
> really need to use SSL, since my two computers can have a pre-shared
> secret. Here's what I wrote - tell me what you think!
>

I think you could have written the equivalent program in less lines of code
using facilities provided by Twisted.  And you'd have the benefits of a
number of things your program doesn't provide including:

* transport/protocol separation
* ability to handle multiple clients efficiently

It is not my area expertise by any means, but shared-secret message hashing
is a rather crude (read : easy to sniff and replay traffic) security
mechanism.

Cheers,

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080212/cd5210bc/attachment.html>

From jml at mumak.net  Tue Feb 12 15:40:41 2008
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 13 Feb 2008 09:40:41 +1100
Subject: [Twisted-Python] Several Trial test suites
In-Reply-To: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
References: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
Message-ID: <d06a5cd30802121440m53418e0clbe156cb820d694c5@mail.gmail.com>

On Feb 13, 2008 1:30 AM, Martin Geisler <mg at daimi.au.dk> wrote:
> Hello,
>
> I am using Twisted and Trial with great success for a project where we
> would like to have both a small regression test suite that should run
> quickly and a larger test suite which will test the system under more
> heavy load.
>
> My project lives in a package called viff, and so far I have created a
> viff.test package which contains the tests -- no problem, the test are
> picked up fine when I do 'trial viff'.
>
> To create a secondary test suite, do I have to create another package
> at the viff level, say viff.stress_test, or is there some clever way
> to organize things below viff.test?
>
> How to people organize such trees with many tests?
>
> Thanks for any inputs!
>

Hi Martin,

I'm not sure I understand your problem entirely, but I'll let you know
what I do.

My code lives in a package called 'foo'. Underneath that I have a
package called 'tests' that contains all my tests as 'test_*.py'
files. 'trial foo' runs all the tests.

If I wanted to have two different suites, say for unit tests and
integration tests, I might make another package beneath 'foo' called
'integrationtests'. If I felt a bit crazy that day, I might instead
move all of my unit tests to foo/tests/unit/ and all of my integration
tests to foo/tests/integration/.

The important things to remember are:
- Trial recurses down the Python module/package tree and treats
anything called 'test_*' as a possible location for tests.
- You can specify any fully-qualified Python name on the command line.
- There is no option to specifically exclude certain tests.
- You can define a test_suite() (or testSuite()) hook in a test module
if you want to do something fancy.

jml



From paulswartz at gmail.com  Tue Feb 12 15:46:06 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Tue, 12 Feb 2008 17:46:06 -0500
Subject: [Twisted-Python] using conch to create a "chrooted" sftp server
In-Reply-To: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>
References: <20080205031917.21558.1170225242.divmod.xquotient.6090@joule.divmod.com>
Message-ID: <324cfb540802121446x1e197b3et5278261609808089@mail.gmail.com>

On Mon, Feb 4, 2008 at 10:19 PM,  <glyph at divmod.com> wrote:
>
>  I'd like to provide file-server access on my home network to a machine
>  which hosts a variety of media, without exposing its entire filesystem.
>  OpenSSH's sftp-server doesn't allow this, so of course I thought, I
>  should use conch.
>
>  Completely replacing OpenSSH with Conch is inconvenient, however, and it
>  is my only means to administer these machines, so both for the sake of
>  easy packaging and making sure I don't make a mistake, I'd really like
>  to keep the main SSH daemon in place but replace the sftp channel.
>
>  I *think* that means I'd need to do something with sshd_config,
>  twisted.conch.ssh.filetransfer, and twisted.internet.stdio.  However,
>  I'm a bit at a loss what that thing would be.

On the OpenSSH side, you'll want to change the 'Subsystem sftp
/usr/lib/openssh/sftp-server' line in /etc/ssh/sshd_config (on
Debian/Ubuntu) to some script that you write.

On the Twisted side, you'll want to connect
twisted.conch.ssh.filetransfer.FileTransferServer to
twisted.internet.stdio.StandardIO.  You'll have to create your own
avatar based on the current user and pass that to the constructor.

>  Can someone with stronger conch-fu than I give a brief description of
>  how this could be done?  Ideally, I'd like some users (myself) to be
>  able to access the entire filesystem, but others (the "storage" user,
>  who has no shell) to only be able to access /public.  Finally I'd like
>  the "guest" user to be able to access /public, but read-only, and
>  /public/drop-box read-write.  I don't mind setting up UNIX permissions
>  to enforce that last bit.

You'll probably want to hack up
twisted.conch.unix.SFTPServerForUnixConchUser to do that.  It's an
adapter for whatever the avatar passed to FileTransferServer is to
ISFTPServer, and FileTransferServer calls the methods on that to
implement the actual file mechanics.

hth,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin



From noamraph at gmail.com  Tue Feb 12 16:04:28 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Wed, 13 Feb 2008 01:04:28 +0200
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
	<b348a0850802121202j7d377107j5f02263ab374ff52@mail.gmail.com>
	<368574aa0802121307s335d475mfd3e0f29c93a70@mail.gmail.com>
Message-ID: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>

2008/2/12, Drew Smathers <drew.smathers at gmail.com>:
> I think you could have written the equivalent program in less lines of code
> using facilities provided by Twisted.  And you'd have the benefits of a
> number of things your program doesn't provide including:
>
> * transport/protocol separation
> * ability to handle multiple clients efficiently
>
As it happens, I don't really need to handle multiple clients
efficiently. I started to write the program using twisted, and stopped
when I realized that I had to write a fairly complex state machine. If
you have a simple way to write this protocol using twisted, it would
be nice to know.

> It is not my area expertise by any means, but shared-secret message hashing
> is a rather crude (read : easy to sniff and replay traffic) security
> mechanism.
>
Well, in TLS, after handshaking, both sides have a shared secret they
use for communication. I just skip the handshaking. (I do have a
challenge-response in the protocol, so I don't think replaying will
work.) But I did forget about hashing the data, so here's a better
version:

#!/usr/bin/env python

import sys
import struct
import socket

from Crypto.Hash import SHA
from Crypto.Cipher import ARC4

RANDOM_LEN = 16

def get_random():
    return open('/dev/urandom').read(RANDOM_LEN)

class SocketEOFError(socket.error):
    pass

def recv(sock, n):
    buf = ''
    while len(buf) < n:
        r = sock.recv(n - len(buf))
        if not r:
            if not buf:
                raise SocketEOFError("Connection closed")
            else:
                raise socket.error("Couldn't read enough bytes")
        buf += r
    return buf

def handshake(sock, secret):
    my_random = get_random()
    my_rc4 = ARC4.new(SHA.new(secret + my_random).digest())
    sock.sendall(my_random)
    peer_random = recv(sock, RANDOM_LEN)
    peer_rc4 = ARC4.new(SHA.new(secret + peer_random).digest())
    sock.sendall(peer_rc4.encrypt('\0'*RANDOM_LEN))
    peer_response = recv(sock, RANDOM_LEN)
    if my_rc4.decrypt(peer_response) != '\0' * RANDOM_LEN:
        raise socket.error('Failed peer authentication')
    return my_rc4, peer_rc4

def send_data(sock, peer_rc4, secret, data):
    length_s = struct.pack('<h', len(data))
    mac = SHA.new(secret + data + length_s).digest()
    sock.sendall(length_s + peer_rc4.encrypt(data + mac))

def recv_data(sock, my_rc4, secret):
    try:
        length_s = recv(sock, 2)
    except SocketEOFError:
        return ''
    length = struct.unpack('<h', length_s)[0]
    msg = my_rc4.decrypt(recv(sock, length + SHA.digest_size))
    data = msg[:length]
    mac = SHA.new(secret + data + length_s).digest()
    if mac != msg[length:]:
        raise socket.error('Failed hash')
    return data

def server(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host, port))
    s.listen(1)
    while True:
        conn, addr = s.accept()
        print 'Connected by', addr
        conn.settimeout(1)
        try:
            my_rc4, peer_rc4 = handshake(conn, secret)
            while True:
                data = recv_data(conn, my_rc4, secret)
                if not data: break
                print 'Received', repr(data)
                send_data(conn, peer_rc4, secret, data)
            conn.close()
        except socket.error, e:
            print 'Error:', e
        else:
            print 'Closed connection'

def client(host, port, secret):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(1)
    s.connect((host, port))
    my_rc4, peer_rc4 = handshake(s, secret)
    send_data(s, peer_rc4, secret, 'Hello, world!')
    data = recv_data(s, my_rc4, secret)
    s.close()
    print 'Received', repr(data)

def main():
    if len(sys.argv) != 5 or sys.argv[1] not in ('server', 'client'):
        print "Usage: %s server/client host port secret"
        return
    is_server = sys.argv[1] == 'server'
    host = sys.argv[2]
    port = int(sys.argv[3])
    secret = sys.argv[4]
    if is_server:
        server(host, port, secret)
    else:
        client(host, port, secret)

if __name__ == '__main__':
    main()



From exarkun at divmod.com  Tue Feb 12 16:14:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 12 Feb 2008 18:14:36 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
Message-ID: <20080212231436.6859.958812812.divmod.quotient.8679@ohm>

On Wed, 13 Feb 2008 01:04:28 +0200, Noam Raphael <noamraph at gmail.com> wrote:
>
> [snip]
>>
>Well, in TLS, after handshaking, both sides have a shared secret they
>use for communication. I just skip the handshaking. (I do have a
>challenge-response in the protocol, so I don't think replaying will
>work.) But I did forget about hashing the data, so here's a better
>version:

When you invented a new crypto protocol, the default is that you have
lost.  Sorry, that's just how it goes.  I already see one weakness in
your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
sound wave therapy if you need further convincing.

Even if you don't use Twisted, use SSL.

Jean-Paul



From warner at lothar.com  Wed Feb 13 00:02:34 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 12 Feb 2008 23:02:34 -0800
Subject: [Twisted-Python] How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
References: <b348a0850802120336q647c3580uf106155ed5d50a24@mail.gmail.com>
Message-ID: <20080212230234.3f3073e2@luther>

> I want to do a pretty simple thing (I think): I have two computers A
> and B. I want A to connect to B, where both A verifies that it
> connected to B and B verifies that it was connected from A. The
> connection should be encrypted.

FWIW, my Foolscap project (http://foolscap.lothar.com/trac) may give you what
you're looking for. It's a capability-secure descendant of Perspective
Broker, giving you a secure connection from one object in one process to a
remote one. Everything works in terms of remote method invocations, basically
'deferred = rref.callRemote("methodname", args)'.

The capability-based security model means that the remote object is
represented by a secret string (called a "FURL") that contains both the
fingerprint of the target process' SSL key and a shared secret identifying
the particular object within that process. Both are checked, so once you pass
a FURL to your local Foolscap code, you can be sure that the resulting
connection is to exactly the object intended by whoever generated the FURL.

There is no checking of the client side (the "B verifies that it was
connected from A" portion of your sentence). That goal is accomplished by
limiting distribution of the FURL. The only way to connect to B is to know
B's FURL, so if you don't give the FURL to anyone but A, then nobody but A
(or someone they give it to) can connect to B. Easy.

We're using Foolscap in the allmydata.org "Tahoe" distributed filesystem, and
the basic security primitives that it provides has made a lot of the
higher-level design much much easier.


cheers,
 -Brian

(BTW, Foolscap's current version is 0.2.4, I've made several small releases
in the past few months and neglected to announce them here. oops.)



From mg at daimi.au.dk  Wed Feb 13 00:53:25 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 13 Feb 2008 08:53:25 +0100
Subject: [Twisted-Python] Re: Several Trial test suites
References: <w1by79qp7rk.fsf@thyra03.daimi.au.dk>
	<d06a5cd30802121440m53418e0clbe156cb820d694c5@mail.gmail.com>
Message-ID: <w1bskzxpa16.fsf@thyra03.daimi.au.dk>

"Jonathan Lange" <jml at mumak.net> writes:

Hi Jonathan

> I'm not sure I understand your problem entirely, but I'll let you
> know what I do.

Yeah, I guess I was a bit vague -- I was just wondering how best to
structure many tests so that I have good flexibility over what to run
and when to run it.

> My code lives in a package called 'foo'. Underneath that I have a
> package called 'tests' that contains all my tests as 'test_*.py'
> files. 'trial foo' runs all the tests.
>
> If I wanted to have two different suites, say for unit tests and
> integration tests, I might make another package beneath 'foo' called
> 'integrationtests'. If I felt a bit crazy that day, I might instead
> move all of my unit tests to foo/tests/unit/ and all of my
> integration tests to foo/tests/integration/.

That is a good idea, I think I'll group my tests similarly so that I
can easily run all tests or just selected subsets.

> The important things to remember are:
> - Trial recurses down the Python module/package tree and treats
> anything called 'test_*' as a possible location for tests.
> - You can specify any fully-qualified Python name on the command line.
> - There is no option to specifically exclude certain tests.

Okay, that was what I initially sought for. Thanks for the input!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From dr.marc.byrd at gmail.com  Wed Feb 13 15:07:36 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Wed, 13 Feb 2008 14:07:36 -0800
Subject: [Twisted-Python] Please help - no module named S3
Message-ID: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>

I'm trying to use the S3 library from amazon within a twisted app.  If I
import S3 from the interactive console, no problem.  If I import S3 from
twisted python program (that works fine w/o), I get Failed to load
application: No module named S3 .

The S3.py and S3.pyc are in the directory from where I start twistd .  Other
such modules work fine...

Any hints?

Thanks,


m


On Feb 12, 2008 6:30 AM, Martin Geisler <mg at daimi.au.dk> wrote:

> Hello,
>
> I am using Twisted and Trial with great success for a project where we
> would like to have both a small regression test suite that should run
> quickly and a larger test suite which will test the system under more
> heavy load.
>
> My project lives in a package called viff, and so far I have created a
> viff.test package which contains the tests -- no problem, the test are
> picked up fine when I do 'trial viff'.
>
> To create a secondary test suite, do I have to create another package
> at the viff level, say viff.stress_test, or is there some clever way
> to organize things below viff.test?
>
> How to people organize such trees with many tests?
>
> Thanks for any inputs!
>
> --
> Martin Geisler
>
> VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
> SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080213/8cf95259/attachment.html>

From jml at mumak.net  Wed Feb 13 15:12:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 14 Feb 2008 09:12:16 +1100
Subject: [Twisted-Python] Please help - no module named S3
In-Reply-To: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>
References: <a33934630802131407y13636a19vbba9e2ec7ec2d66e@mail.gmail.com>
Message-ID: <d06a5cd30802131412y55e8de06l99ad4dbd6d9afcf9@mail.gmail.com>

On Feb 14, 2008 9:07 AM, Marc Byrd <dr.marc.byrd at gmail.com> wrote:
> I'm trying to use the S3 library from amazon within a twisted app.  If I
> import S3 from the interactive console, no problem.  If I import S3 from
> twisted python program (that works fine w/o), I get Failed to load
> application: No module named S3 .
>
> The S3.py and S3.pyc are in the directory from where I start twistd .  Other
> such modules work fine...
>

The current working directory is not in the Python load path by
default. Make sure that S3.py is in a directory that appears in your
sys.path, or use the PYTHONPATH environment variable to specify the
directory that they are in.

jml



From noamraph at gmail.com  Wed Feb 13 15:21:53 2008
From: noamraph at gmail.com (Noam Raphael)
Date: Wed, 13 Feb 2008 22:21:53 +0000
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <20080212231436.6859.958812812.divmod.quotient.8679@ohm>
References: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
	<20080212231436.6859.958812812.divmod.quotient.8679@ohm>
Message-ID: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>

2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
> When you invented a new crypto protocol, the default is that you have
> lost.  Sorry, that's just how it goes.  I already see one weakness in
> your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
> sound wave therapy if you need further convincing.
>
> Even if you don't use Twisted, use SSL.
>
Well, you are probably right.
Just wondering: can you tell me what's the weakness you found? (I
might learn some cryptology from this...)

Another, not really related, question: Do you know if someone used the
new coroutine-generators in python2.5 as a way to write servers? It
seems to me like something that can make writing servers much easier,
since a function is much more natural than a state machine (that's the
reason I wrote this protocol without twisted).

Thanks,
Noam



From exarkun at divmod.com  Wed Feb 13 15:35:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 13 Feb 2008 17:35:03 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
Message-ID: <20080213223503.6859.1038639645.divmod.quotient.9058@ohm>

On Wed, 13 Feb 2008 22:21:53 +0000, Noam Raphael <noamraph at gmail.com> wrote:
>2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
>> When you invented a new crypto protocol, the default is that you have
>> lost.  Sorry, that's just how it goes.  I already see one weakness in
>> your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
>> sound wave therapy if you need further convincing.
>>
>> Even if you don't use Twisted, use SSL.
>>
>Well, you are probably right.
>Just wondering: can you tell me what's the weakness you found? (I
>might learn some cryptology from this...)

You used the same keys for authentication (challenge/response) as for
producing ciphertext.

>
>Another, not really related, question: Do you know if someone used the
>new coroutine-generators in python2.5 as a way to write servers? It

Python 2.5 generators aren't coroutines.  This isn't really relevant to
your question, but it might help to know if you ever talk to someone who
is used to real coroutines.

>seems to me like something that can make writing servers much easier,
>since a function is much more natural than a state machine (that's the
>reason I wrote this protocol without twisted).

You might be interested in twisted.internet.defer.inlineCallbacks.  Of
course, one might argue about your description of one style over the other
as more "natural" since programming is always a wholly unnatural act, but
that would probably just be a waste of time.

Jean-Paul



From drew.smathers at gmail.com  Wed Feb 13 15:42:14 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 13 Feb 2008 17:42:14 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
References: <b348a0850802121504k2c8488f8jabda92d354434319@mail.gmail.com>
	<20080212231436.6859.958812812.divmod.quotient.8679@ohm>
	<b348a0850802131421q17b80639q4f9bf5970db1e56a@mail.gmail.com>
Message-ID: <368574aa0802131442l6aba92f5m854ead1900bc8caf@mail.gmail.com>

On Feb 13, 2008 5:21 PM, Noam Raphael <noamraph at gmail.com> wrote:

> 2008/2/13, Jean-Paul Calderone <exarkun at divmod.com>:
> > When you invented a new crypto protocol, the default is that you have
> > lost.  Sorry, that's just how it goes.  I already see one weakness in
> > your code, as compared to SSL.  I'm sure there are more.  Google Gutmann
> > sound wave therapy if you need further convincing.
> >
> > Even if you don't use Twisted, use SSL.
> >
> Well, you are probably right.
> Just wondering: can you tell me what's the weakness you found? (I
> might learn some cryptology from this...)
>
> Another, not really related, question: Do you know if someone used the
> new coroutine-generators in python2.5 as a way to write servers? It
> seems to me like something that can make writing servers much easier,
> since a function is much more natural than a state machine (that's the
> reason I wrote this protocol without twisted).
>

Coroutine-generators?  Python 2.5 doesn't have such a thing.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080213/023418ad/attachment.html>

From steve at holdenweb.com  Thu Feb 14 03:49:34 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 14 Feb 2008 05:49:34 -0500
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
In-Reply-To: <87lk5qq9ga.fsf@hbox.dyndns.org>
References: <87y79qqgwl.fsf@hbox.dyndns.org>	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
	<87lk5qq9ga.fsf@hbox.dyndns.org>
Message-ID: <fp16c0$24q$1@ger.gmane.org>

Martin Geisler wrote:
> Jean-Paul Calderone <exarkun at divmod.com> writes:
> 
>>> I am using TLS via GNUTLS via python-gnutls :-)
>>>
>>>  http://pypi.python.org/pypi/python-gnutls
>>>
>>> As I understand it, TLS is the successor to SSL. Python-gnutls
>>> contains an example echo server and client that using Twisted and TLS.
>> Yes, although TLS is commonly referred to as SSL, and Twisted's "SSL"
>> support is actually support of SSL and TLS.
> 
> Okay, good to know.
> 
For the record, TLS is effectively the standardization of SSL by the 
IETF for inclusion into protocol stacks - SSL was originally provided as 
an application shim library layered over TCP, and had to be linked into 
every application that used it.

TLS can, I believe, also be referred to as SSL version 3.1, and I 
understand that the only significant change was the addition of a 
broader and more recent set of cipher specifications.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mg at daimi.au.dk  Thu Feb 14 04:42:48 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Thu, 14 Feb 2008 12:42:48 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87y79qqgwl.fsf@hbox.dyndns.org>
	<20080212172710.6859.1056843369.divmod.quotient.8547@ohm>
	<87lk5qq9ga.fsf@hbox.dyndns.org> <fp16c0$24q$1@ger.gmane.org>
Message-ID: <w1br6fflq6f.fsf@thyra03.daimi.au.dk>

Steve Holden <steve at holdenweb.com> writes:

> Martin Geisler wrote:
>
>> Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>> Martin Geisler wrote:
>>>
>>>> As I understand it, TLS is the successor to SSL. [...]
>>>
>>> Yes, although TLS is commonly referred to as SSL, and Twisted's
>>> "SSL" support is actually support of SSL and TLS.
>>
>> Okay, good to know.
>
> For the record, TLS is effectively the standardization of SSL by the
> IETF for inclusion into protocol stacks - SSL was originally
> provided as an application shim library layered over TCP, and had to
> be linked into every application that used it.
>
> TLS can, I believe, also be referred to as SSL version 3.1, and I
> understand that the only significant change was the addition of a
> broader and more recent set of cipher specifications.

Thanks for the explaination. My application is an implementation of
secure multi-party computation, and to argue that the whole thing is
secure from top to bottom, I didn't want to use an old version (SSL)
if I could use something newer (TLS). But if there isn't any
compelling reason, I might of course just as well to with SSL(3).

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From thomas.boucher at student.ecp.fr  Thu Feb 14 08:32:30 2008
From: thomas.boucher at student.ecp.fr (Thomas Boucher)
Date: Thu, 14 Feb 2008 16:32:30 +0100
Subject: [Twisted-Python] Twisted and python-ogre 
Message-ID: <47B45F0E.6030307@student.ecp.fr>

Hello,

I am currently part of a MMORPG project in python, using Twisted
and python-ogre. I found some posts talking about the cohabitation 
between the two. However I couldn't find a definitive answer. What I am 
seeking for is more a general method than technical details.

What I would like to do is to put properly Twisted and python-ogre
together. To do that I have already tried the following ways :

  - First run python-ogre in the main loop. At a time, this loop launches
the twisted reactor in another thread with Thread(target =
sthg_which_runs_reactor.run).
The problem I am experiencing is described here [1]. The sendLine method
is executed immediately, but the data is received by the other side only
20/30 seconds after.

  - So I tried not to run Twisted in another thread, by using the way
described here [2]. Twisted is given the main loop and the
rendering is done frame by frame with the coiterate. It works sometimes,
the renderOneFrame in the coiterration is not really working.


But it seems more logical to run ptyhon-ogre in the main loop and
twisted on the side (in another thread for example, as soon as the 
client has decided to connect to the server). Have you any ideas how I 
could do this properly (with threads, without threads, with the 
coiterrate ...)?

If Twisted was originally made for MMORPGs, why the reactor wants so 
much to be in the main loop and to manage itself the other threads (with 
callInThread for example)?


Cheers


[1] http://archives.free.net.ph/message/20080102.113837.4c4513eb.en.html
[2] 
http://www.ogre3d.org/phpBB2addons/viewtopic.php?p=35187&sid=ce193664e1d3d7c4af509e6f4e2718c6

-- 
Thomas Boucher



From exarkun at divmod.com  Thu Feb 14 09:01:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 14 Feb 2008 11:01:58 -0500
Subject: [Twisted-Python] Twisted and python-ogre 
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>

On Thu, 14 Feb 2008 16:32:30 +0100, Thomas Boucher <thomas.boucher at student.ecp.fr> wrote:
>Hello,
>
>I am currently part of a MMORPG project in python, using Twisted
>and python-ogre. I found some posts talking about the cohabitation between 
>the two. However I couldn't find a definitive answer. What I am seeking for 
>is more a general method than technical details.
>
>What I would like to do is to put properly Twisted and python-ogre
>together. To do that I have already tried the following ways :
>
>  - First run python-ogre in the main loop. At a time, this loop launches
>the twisted reactor in another thread with Thread(target =
>sthg_which_runs_reactor.run).
>The problem I am experiencing is described here [1]. The sendLine method
>is executed immediately, but the data is received by the other side only
>20/30 seconds after.

Chris Armstrong's response to the post you refer to is accurate.  Twisted
APIs are not threadsafe.  In order to call them from a thread other than
the one in which the reactor is running, it is absolutely required that you
use reactor.callFromThread.  This is quite simple.  Instead of:

    proto.sendLine("line")

Simple do:

    reactor.callFromThread(proto.sendLine, "line")

You will have to do this for every call you make to a Twisted API (except
for reactor.callFromThread, of course ;).

Since this is quite inconvenient, inefficient, and error prone, it's best
if you keep the interaction between different threads to the barest minumum
you can manage.

>
>  - So I tried not to run Twisted in another thread, by using the way
>described here [2]. Twisted is given the main loop and the
>rendering is done frame by frame with the coiterate. It works sometimes,
>the renderOneFrame in the coiterration is not really working.
>

What do you mean "not really working"?

>
>But it seems more logical to run ptyhon-ogre in the main loop and
>twisted on the side (in another thread for example, as soon as the client 
>has decided to connect to the server). Have you any ideas how I could do 
>this properly (with threads, without threads, with the coiterrate ...)?

The best solution would be to really integrate the two loops.  I don't know
the details of OGRE though, so I can't tell you specifically how to do this.
It is tightly dependent on the details of the loops being integrated.

>
>If Twisted was originally made for MMORPGs, why the reactor wants so much to 
>be in the main loop and to manage itself the other threads (with 
>callInThread for example)?
>

Because most other event loops are very bad at managing events. :)  If you
want reasonable network performance, you need a good network event loop to
be in control.

Jean-Paul



From wthie at thiengineering.ch  Thu Feb 14 11:12:18 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 14 Feb 2008 19:12:18 +0100
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
References: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <47B48482.1020103@thiengineering.ch>

Hi Thomas

Looks like the twisted event loop should be in control and Ogre should 
be called like

     hb = task.LoopingCall(ogre.heartBeat) #system pump
     hb.start(0.05)

with ogre.heartbeat operating along the line of

Ogre::Root::getSingletonPtr()->renderOneFrame(); //C++ code

I don't know if this particular C++ call is exposed in PyOgre, but we 
have Ogre running in a networked multiplayer wxWidgets app written in 
C++ with exactly that setup, although the limit is - only one Ogre 
window per app when using this approach.

I would be really interested in how you solved your problem!

In the meantime
HTH, Werner

Thomas Boucher wrote:
> Hello,
> 
> I am currently part of a MMORPG project in python, using Twisted
> and python-ogre. I found some posts talking about the cohabitation 
> between the two. However I couldn't find a definitive answer. What I am 
> seeking for is more a general method than technical details.
> 
> What I would like to do is to put properly Twisted and python-ogre
> together. To do that I have already tried the following ways :
> 
>  - First run python-ogre in the main loop. At a time, this loop launches
> the twisted reactor in another thread with Thread(target =
> sthg_which_runs_reactor.run).
> The problem I am experiencing is described here [1]. The sendLine method
> is executed immediately, but the data is received by the other side only
> 20/30 seconds after.
> 
>  - So I tried not to run Twisted in another thread, by using the way
> described here [2]. Twisted is given the main loop and the
> rendering is done frame by frame with the coiterate. It works sometimes,
> the renderOneFrame in the coiterration is not really working.
> 
> 
> But it seems more logical to run ptyhon-ogre in the main loop and
> twisted on the side (in another thread for example, as soon as the 
> client has decided to connect to the server). Have you any ideas how I 
> could do this properly (with threads, without threads, with the 
> coiterrate ...)?
> 
> If Twisted was originally made for MMORPGs, why the reactor wants so 
> much to be in the main loop and to manage itself the other threads (with 
> callInThread for example)?
> 
> 
> Cheers
> 
> 
> [1] http://archives.free.net.ph/message/20080102.113837.4c4513eb.en.html
> [2] 
> http://www.ogre3d.org/phpBB2addons/viewtopic.php?p=35187&sid=ce193664e1d3d7c4af509e6f4e2718c6 
> 
> 



From broehl at gmail.com  Thu Feb 14 11:30:53 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Thu, 14 Feb 2008 13:30:53 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B45F0E.6030307@student.ecp.fr>
References: <47B45F0E.6030307@student.ecp.fr>
Message-ID: <1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>

On Thu, Feb 14, 2008 at 10:32 AM, Thomas Boucher <
thomas.boucher at student.ecp.fr> wrote:

> I am currently part of a MMORPG project in python, using Twisted
> and python-ogre.


Hey, me too!  I wonder if anyone else out there is doing this -- it seems
like a natural combination of technologies.

- First run python-ogre in the main loop. At a time, this loop launches
> the twisted reactor in another thread


Everyone I've spoken to has recommended not using threads with Twisted.


> - So I tried not to run Twisted in another thread, by using the way
> described here [2]. Twisted is given the main loop and the
> rendering is done frame by frame with the coiterate. It works sometimes,
> the renderOneFrame in the coiterration is not really working.


I hadn't seen that discussion thread before, and I'm not that familiar with
coiteration.

What I'm currently doing is this:

def renderFrame():
    ogre.WindowEventUtilities.messagePump()
    root.renderOneFrame()

renderSystem._initRenderTargets()
root.clearEventTimes()
renderTask = task.LoopingCall(renderFrame)
renderTask.start(0.01, False)
reactor.run()

I do my keyboard and mouse capture in a frame listener which I register with
Ogre.

It works, but I've only done a little bit of network activity (e.g. an IRC
client).

If any Twisted experts would care to comment on the above code, I'd
appreciate it.

I'm also wondering what would be the advantages of using a coiterator...?

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080214/ae0064c4/attachment.html>

From list-ener at strank.info  Thu Feb 14 12:05:24 2008
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 14 Feb 2008 20:05:24 +0100
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
References: <47B45F0E.6030307@student.ecp.fr>
	<20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
Message-ID: <47B490F4.2020702@strank.info>

on 14.02.2008 17:01 Jean-Paul Calderone said the following:
> On Thu, 14 Feb 2008 16:32:30 +0100, Thomas Boucher 
> <thomas.boucher at student.ecp.fr> wrote:
<snip>
>>
>> What I would like to do is to put properly Twisted and python-ogre
>> together. To do that I have already tried the following ways :
<snip>
>> But it seems more logical to run ptyhon-ogre in the main loop and
>> twisted on the side (in another thread for example, as soon as the 
>> client has decided to connect to the server). Have you any ideas how I 
>> could do this properly (with threads, without threads, with the 
>> coiterrate ...)?
> 
> The best solution would be to really integrate the two loops.  I don't know
> the details of OGRE though, so I can't tell you specifically how to do 
> this.
> It is tightly dependent on the details of the loops being integrated.

I use python-ogre plus twisted:
no threads, twisted has control and a LoopingCall triggers a basic Ogre 
iteration step (similar to the coiteration idea the OP referenced).
Using a LoopingCall provides automatic frame-rate limitation, the 
coiteration code gives render-as-often-as-possible.

Twisted's main loop is by far more complicated than Ogre's default loop, 
the latter simply runs pumpmessages-render-callframelisteners as often 
as possible and is easier to integrate into twisted's.

cheers,
stefan




From thomas.boucher at student.ecp.fr  Fri Feb 15 07:01:21 2008
From: thomas.boucher at student.ecp.fr (Thomas Boucher)
Date: Fri, 15 Feb 2008 15:01:21 +0100
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
References: <20080214160158.6859.1468967103.divmod.quotient.9427@ohm>
Message-ID: <47B59B31.4030906@student.ecp.fr>

Jean-Paul Calderone a écrit :
> Chris Armstrong's response to the post you refer to is accurate.  Twisted
> APIs are not threadsafe.  In order to call them from a thread other than
> the one in which the reactor is running, it is absolutely required that you
> use reactor.callFromThread.  This is quite simple.  Instead of:
> 
>    proto.sendLine("line")
> 
> Simple do:
> 
>    reactor.callFromThread(proto.sendLine, "line")
> 
> You will have to do this for every call you make to a Twisted API (except
> for reactor.callFromThread, of course ;).

I have just tried this method, and it perfectly works.
The twisted reactor is run in another thread and the calls to Twisted 
are managed by the callFromThread method. The main advantage I see to it 
(excepting the fact that it works) is that it does not require changes 
in the way the graphic rendering is done : you do not care about how 
python-ogre runs to code the twisted part.

> The best solution would be to really integrate the two loops.  I don't know
> the details of OGRE though, so I can't tell you specifically how to do 
> this.
> It is tightly dependent on the details of the loops being integrated.

What I can't see for the moment is how much better it would be to do 
like the other ways delivered in the discussion thread (by Werner, 
Bernie an Stefan). These ways consist in running Twisted first and in 
letting it manage python-ogre (by doing the rendering frame by frame 
with coiteration, or loopingcalls).
Is this better than doing separate threads ?

> Because most other event loops are very bad at managing events. :)  If you
> want reasonable network performance, you need a good network event loop to
> be in control.

Don't you think using basic sockets (easy to code in Python) to make the 
network connection from a client to a server is more efficient 
(considering the time spent to do it or the complexity of the code) and 
more easy to keep in a project ?

I suppose the connexion is better managed with Twisted with a lot of 
control (and moreover there are huge libs) but to what extend ?


Anyway, thanks for all the suggestions already given by everybody.

Cheers

-- 
Thomas Boucher



From exarkun at divmod.com  Fri Feb 15 07:25:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 15 Feb 2008 09:25:57 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <47B59B31.4030906@student.ecp.fr>
Message-ID: <20080215142557.6859.1357815474.divmod.quotient.9847@ohm>

On Fri, 15 Feb 2008 15:01:21 +0100, Thomas Boucher <thomas.boucher at student.ecp.fr> wrote:
>Jean-Paul Calderone a écrit :
>>Chris Armstrong's response to the post you refer to is accurate.  Twisted
>>APIs are not threadsafe.  In order to call them from a thread other than
>>the one in which the reactor is running, it is absolutely required that you
>>use reactor.callFromThread.  This is quite simple.  Instead of:
>>
>>    proto.sendLine("line")
>>
>>Simple do:
>>
>>    reactor.callFromThread(proto.sendLine, "line")
>>
>>You will have to do this for every call you make to a Twisted API (except
>>for reactor.callFromThread, of course ;).
>
>I have just tried this method, and it perfectly works.
>The twisted reactor is run in another thread and the calls to Twisted are 
>managed by the callFromThread method. The main advantage I see to it 
>(excepting the fact that it works) is that it does not require changes in 
>the way the graphic rendering is done : you do not care about how python- 
>ogre runs to code the twisted part.
>>The best solution would be to really integrate the two loops.  I don't know
>>the details of OGRE though, so I can't tell you specifically how to do 
>>this.
>>It is tightly dependent on the details of the loops being integrated.
>
>What I can't see for the moment is how much better it would be to do like 
>the other ways delivered in the discussion thread (by Werner, Bernie an 
>Stefan). These ways consist in running Twisted first and in letting it 
>manage python-ogre (by doing the rendering frame by frame with coiteration, 
>or loopingcalls).
>Is this better than doing separate threads ?

There are arguments about efficiency.  Using threads has overhead which is
not present when not using threads.  These arguments are probably not very
convincing in this case, since you would only have two threads and their
overhead will be dwarfed by your rendering costs.  You should be aware that
reactor.callFromThread _does_ have some non-trivial overhead.  Using it for
each sendLine call _could_ have a noticable detrimental impact on your app's
performance.

There are arguments about simplicity.  It's harder to understand what a
multithreaded program is doing.  It's harder to debug a multithreaded
program.  It's very, very hard to unit test a multithreaded program.  This
is probably the compelling argument to try to avoid threads.

>>Because most other event loops are very bad at managing events. :)  If you
>>want reasonable network performance, you need a good network event loop to
>>be in control.
>
>Don't you think using basic sockets (easy to code in Python) to make the 
>network connection from a client to a server is more efficient (considering 
>the time spent to do it or the complexity of the code) and more easy to keep 
>in a project ?

That might be nice.  However, almost without exception, the network code I
read which does not use Twisted is buggy in the most trivial ways.  It is
rare for it to take more than a cursory glance to notice critical bugs
(the sort which will result in data being lost).  Of course, this doesn't
mean that all network code written without Twisted is fatally flawed, but
it does give me a reasonable basis to assume that it will have issues. :)

Twisted's APIs aren't just easier to use correctly than the BSD socket APIs,
they're also consistent across platforms.  Are you sure you know the BSD
APIs well enough to write some that is correct on Linux and on Windows?
(Let alone on OS X or FreeBSD)  Even if you are, would you rather spend your
time writing the error handling logic for each of these platforms or adding
features to your game?

Twisted may seems to be harder than the socket module.  It probably does
have a higher up-front cost.  However, in the long run, I think that you'll
save yourself a lot of time using it rather than using sockets directly.

You also get the advantages which the structure Twisted attempts to impose
on your application confers.  For example, protocol/transport separation
means that you can unit test your protocol implementation very easily.  And
that's assuming you even need to implement your own protocol, rather than
using one of the protocols Twisted already includes an implementation of.

You also leave open the possibility of easily taking advantage of some other
Twisted features which don't seem useful now but which you may benefit from
later in development.

Hope this helps,

Jean-Paul



From broehl at gmail.com  Fri Feb 15 08:31:14 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 10:31:14 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>
References: <47B45F0E.6030307@student.ecp.fr>
	<1045831b0802141030k514c67aep9b6ced58b06e6039@mail.gmail.com>
Message-ID: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>

On Thu, Feb 14, 2008 at 1:30 PM, Bernie Roehl <broehl at gmail.com> wrote:

> I'm also wondering what would be the advantages of using a coiterator...?


As an experiment, I tried switching to using a coiterator.  I got a 30%
increase in framerate!

My code now looks like this:

class RendererIterator:  # used if usingCoiterator is True
    def __iter__(self):
        return self
    def next(self):
        ogre.WindowEventUtilities.messagePump()
        root.renderOneFrame()

from twisted.internet.task import coiterate

renderSystem._initRenderTargets()
root.clearEventTimes()
coiterate(RendererIterator())
reactor.run()

Seems to work okay, but haven't tested it extensively.

Any Twisted-gurus have any comments/suggestions/cautions?

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080215/8ada9d37/attachment.html>

From exarkun at divmod.com  Fri Feb 15 08:51:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 15 Feb 2008 10:51:27 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
Message-ID: <20080215155127.6859.558468479.divmod.quotient.9857@ohm>

On Fri, 15 Feb 2008 10:31:14 -0500, Bernie Roehl <broehl at gmail.com> wrote:
>On Thu, Feb 14, 2008 at 1:30 PM, Bernie Roehl <broehl at gmail.com> wrote:
>
>> I'm also wondering what would be the advantages of using a coiterator...?
>
>As an experiment, I tried switching to using a coiterator.  I got a 30%
>increase in framerate!

Hmmm. :)

>
>My code now looks like this:
>
>class RendererIterator:  # used if usingCoiterator is True
>    def __iter__(self):
>        return self
>    def next(self):
>        ogre.WindowEventUtilities.messagePump()
>        root.renderOneFrame()
>
>from twisted.internet.task import coiterate
>
>renderSystem._initRenderTargets()
>root.clearEventTimes()
>coiterate(RendererIterator())
>reactor.run()
>
>Seems to work okay, but haven't tested it extensively.
>
>Any Twisted-gurus have any comments/suggestions/cautions?
>

There shouldn't really be any performance difference between using
coiterate and using LoopingCall.  The significant behavioral difference
is that coiterate will call your code (RendererIterator.next in this
case) as fast as it can (with some constraints).  LoopingCall will call
your code no faster than you specify.

So my guess is that the 30% increase in FPS is because your system is
capable of doing that much additional work above what you asked to do
when you used LoopingCall.  If you make a corresponding decrease in the
interval you use with LoopingCall, do you not see any increase in FPS?
If not, then you may be getting a bit of extra performance from coiterate
from its behavior of sometimes calling your code multiple times without
letting the reactor run.  It will do this if it notices your code runs
very quickly and so decides that it can afford to call it again before
giving control back to the reactor to let network events be processed.
This may give you a somewhat unevent frame rate, as compared to LoopingCall,
but that might be suitable for your application.

Jean-Paul



From broehl at gmail.com  Fri Feb 15 09:09:07 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 11:09:07 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080215155127.6859.558468479.divmod.quotient.9857@ohm>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
Message-ID: <1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>

On Fri, Feb 15, 2008 at 10:51 AM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 15 Feb 2008 10:31:14 -0500, Bernie Roehl <broehl at gmail.com> wrote:
> >As an experiment, I tried switching to using a coiterator.  I got a 30%
> >increase in framerate!
>
> Hmmm. :)


Hmmm indeed!


> There shouldn't really be any performance difference between using
> coiterate and using LoopingCall.  The significant behavioral difference
> is that coiterate will call your code (RendererIterator.next in this
> case) as fast as it can (with some constraints).  LoopingCall will call
> your code no faster than you specify.
>
> So my guess is that the 30% increase in FPS is because your system is
> capable of doing that much additional work above what you asked to do
> when you used LoopingCall.  If you make a corresponding decrease in the
> interval you use with LoopingCall, do you not see any increase in FPS?


Well, I was using

            renderTask = task.LoopingCall(renderFrame)
            renderTask.start(0.01, False)

If I change the 0.01 to 0.0, I do indeed get a framerate comparable to using
the coiterator methord.

I wouldn't have thought that waiting ten milliseconds between calls would
make such a substantial difference.

-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080215/ef5cc52f/attachment.html>

From mithrandi at mithrandi.za.net  Fri Feb 15 11:45:20 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 15 Feb 2008 20:45:20 +0200
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
Message-ID: <20080215184520.GA25384@mithrandi.za.net>

* Bernie Roehl <broehl at gmail.com> [2008-02-15 11:09:07 -0500]:

> If I change the 0.01 to 0.0, I do indeed get a framerate comparable to using
> the coiterator methord.
> 
> I wouldn't have thought that waiting ten milliseconds between calls would
> make such a substantial difference.

It limits you to a maximum of 100 frames/sec or so (since there are 100
ten millisecond intervals in a second); what sort of framerates are you
seeing? Also, you should probably pick a number greater than 0, since
there's not much point in rendering more than a certain number of frames
every second -- the exact threshold at which it becomes pointless
depends on a variety of application / environment specific factors,
though.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080215/99699d36/attachment.sig>

From broehl at gmail.com  Fri Feb 15 12:00:25 2008
From: broehl at gmail.com (Bernie Roehl)
Date: Fri, 15 Feb 2008 14:00:25 -0500
Subject: [Twisted-Python] Twisted and python-ogre
In-Reply-To: <20080215184520.GA25384@mithrandi.za.net>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
	<20080215184520.GA25384@mithrandi.za.net>
Message-ID: <1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>

On the (relatively low-end) machine I'm running on, I get 33 fps with with
0.01, and 43 fps with 0.0 or with the coiterator.

I'm leaning towards the coiterator approach, since I don't have to worry
about figuring out what value to pass.


On Fri, Feb 15, 2008 at 1:45 PM, Tristan Seligmann <
mithrandi at mithrandi.za.net> wrote:

> * Bernie Roehl <broehl at gmail.com> [2008-02-15 11:09:07 -0500]:
>
> > If I change the 0.01 to 0.0, I do indeed get a framerate comparable to
> using
> > the coiterator methord.
> >
> > I wouldn't have thought that waiting ten milliseconds between calls
> would
> > make such a substantial difference.
>
> It limits you to a maximum of 100 frames/sec or so (since there are 100
> ten millisecond intervals in a second); what sort of framerates are you
> seeing? Also, you should probably pick a number greater than 0, since
> there's not much point in rendering more than a certain number of frames
> every second -- the exact threshold at which it becomes pointless
> depends on a variety of application / environment specific factors,
> though.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.8 (GNU/Linux)
>
> iEYEARECAAYFAke13cAACgkQpNuXDQIV94oMSgCghgH4cj3lwyDsxLHn4lrtygkq
> ic8An1XBicz3/lObeGZkv7OGxVd2Nyqb
> =HJIx
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Bernie Roehl
Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080215/66d5aa72/attachment.html>

From zooko at zooko.com  Fri Feb 15 17:03:58 2008
From: zooko at zooko.com (zooko)
Date: Fri, 15 Feb 2008 17:03:58 -0700
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.8
Message-ID: <3A8F57EB-F300-4EE2-845D-0E9F9A3C8AFC@zooko.com>

ANNOUNCING: Allmydata.org "Tahoe" version 0.8

We are pleased to announce the release of version 0.8 of allmydata.org
"Tahoe".

Allmydata.org "Tahoe" is a secure, decentralized, fault-tolerant
filesystem.  All of the source code is available under a Free
Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

This is the successor to Allmydata-Tahoe v0.7, which was released
January 8, 2008 [1].

This release improves performance, diagnostics, and packaging.  This
release of allmydata.org "Tahoe" will form the basis of the next
consumer backup product from Allmydata, Inc. -- http://allmydata.com .


Since v0.7 we've made the following changes:

  * Add a preliminary Microsoft Windows package (ticket #195).

  * Add a preliminary Macintosh package (ticket #182).

  * Display information about peers (ticket #32).

  * Display information about uploads and downloads (ticket #39).

  * Add unit tests and docs for contrib/fuse (ticket #255).

  * Add a preliminary FUSE interface for Macintosh.

  * Update docs, starting with docs/about.html --
    http://allmydata.org/source/tahoe/trunk/docs/about.html .

  * Improve logging, diagnostic tools, statistics, timing measurements
    during upload, etc..

  * Add more measurements of performance:
    http://allmydata.org/trac/tahoe/wiki/Performance .

  * Add an upload helper, with resumption of incomplete uploads and
    short-circuiting of uploads if the file is already present (tickets
    #116, #258, #218).

  * Make upload continue even if some servers disappear during the
    upload process.

  * Add mtime and ctime timestamps to files (ticket #183).

  * Make introduction more efficient by allowing nodes to act as
    clients-only and not publish themselves as servers (ticket #271).

  * Extend the web API to allow programmatic control of mutable files.

  * Fix potential problem that could cause corruption of downloaded
    mutable files if a long series of unlikely coincidences and hacked
    clients occurred (ticket #312).

  * Make file and directory names use unicode.

  * Use SHA-256d instead of SHA-256 for secure hashes.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is new, it is not yet recommended for storage of
highly confidential data nor for valuable data which is not otherwise
backed up. However, it works well in practice, it comes with extensive
unit tests [2], and there are no known security flaws which would
compromise confidentiality or data integrity.  (For a current
description of all known security issues and an overview of Tahoe's
security properties, please see the Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "doc/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
February 15, 2008
Boulder, Colorado, USA


[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=1805
[2] http://allmydata.org/tahoe-figleaf/current/
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=1804
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com




From steve at holdenweb.com  Fri Feb 15 19:39:43 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 15 Feb 2008 21:39:43 -0500
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <20080215142557.6859.1357815474.divmod.quotient.9847@ohm>
References: <47B59B31.4030906@student.ecp.fr>
	<20080215142557.6859.1357815474.divmod.quotient.9847@ohm>
Message-ID: <fp5idi$bkl$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Fri, 15 Feb 2008 15:01:21 +0100, Thomas Boucher 
> <thomas.boucher at student.ecp.fr> wrote:
>> Jean-Paul Calderone a écrit :
>>> Chris Armstrong's response to the post you refer to is accurate.  
>>> Twisted
>>> APIs are not threadsafe.  In order to call them from a thread other than
>>> the one in which the reactor is running, it is absolutely required 
>>> that you
>>> use reactor.callFromThread.  This is quite simple.  Instead of:
>>>
>>>    proto.sendLine("line")
>>>
>>> Simple do:
>>>
>>>    reactor.callFromThread(proto.sendLine, "line")
>>>
>>> You will have to do this for every call you make to a Twisted API 
>>> (except
>>> for reactor.callFromThread, of course ;).
>>
>> I have just tried this method, and it perfectly works.
>> The twisted reactor is run in another thread and the calls to Twisted 
>> are managed by the callFromThread method. The main advantage I see to 
>> it (excepting the fact that it works) is that it does not require 
>> changes in the way the graphic rendering is done : you do not care 
>> about how python- ogre runs to code the twisted part.
>>> The best solution would be to really integrate the two loops.  I 
>>> don't know
>>> the details of OGRE though, so I can't tell you specifically how to 
>>> do this.
>>> It is tightly dependent on the details of the loops being integrated.
>>
>> What I can't see for the moment is how much better it would be to do 
>> like the other ways delivered in the discussion thread (by Werner, 
>> Bernie an Stefan). These ways consist in running Twisted first and in 
>> letting it manage python-ogre (by doing the rendering frame by frame 
>> with coiteration, or loopingcalls).
>> Is this better than doing separate threads ?
> 
> There are arguments about efficiency.  Using threads has overhead which is
> not present when not using threads.  These arguments are probably not very
> convincing in this case, since you would only have two threads and their
> overhead will be dwarfed by your rendering costs.  You should be aware that
> reactor.callFromThread _does_ have some non-trivial overhead.  Using it for
> each sendLine call _could_ have a noticable detrimental impact on your 
> app's
> performance.
> 
> There are arguments about simplicity.  It's harder to understand what a
> multithreaded program is doing.  It's harder to debug a multithreaded
> program.  It's very, very hard to unit test a multithreaded program.  This
> is probably the compelling argument to try to avoid threads.
> 
>>> Because most other event loops are very bad at managing events. :)  
>>> If you
>>> want reasonable network performance, you need a good network event 
>>> loop to
>>> be in control.
>>
>> Don't you think using basic sockets (easy to code in Python) to make 
>> the network connection from a client to a server is more efficient 
>> (considering the time spent to do it or the complexity of the code) 
>> and more easy to keep in a project ?
> 
> That might be nice.  However, almost without exception, the network code I
> read which does not use Twisted is buggy in the most trivial ways.  It is
> rare for it to take more than a cursory glance to notice critical bugs
> (the sort which will result in data being lost).  Of course, this doesn't
> mean that all network code written without Twisted is fatally flawed, but
> it does give me a reasonable basis to assume that it will have issues. :)
> 
> Twisted's APIs aren't just easier to use correctly than the BSD socket 
> APIs,
> they're also consistent across platforms.  Are you sure you know the BSD
> APIs well enough to write some that is correct on Linux and on Windows?
> (Let alone on OS X or FreeBSD)  Even if you are, would you rather spend 
> your
> time writing the error handling logic for each of these platforms or adding
> features to your game?
> 
> Twisted may seems to be harder than the socket module.  It probably does
> have a higher up-front cost.  However, in the long run, I think that you'll
> save yourself a lot of time using it rather than using sockets directly.
> 
> You also get the advantages which the structure Twisted attempts to impose
> on your application confers.  For example, protocol/transport separation
> means that you can unit test your protocol implementation very easily.  And
> that's assuming you even need to implement your own protocol, rather than
> using one of the protocols Twisted already includes an implementation of.
> 
> You also leave open the possibility of easily taking advantage of some 
> other
> Twisted features which don't seem useful now but which you may benefit from
> later in development.
> 
> Hope this helps,
> 

It certainly lists a goodly number of reasons why people should strongly 
consider using Twisted, and there are a goodly number one doesn't come 
across every day.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Fri Feb 15 19:45:03 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 15 Feb 2008 21:45:03 -0500
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>	<20080215184520.GA25384@mithrandi.za.net>
	<1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
Message-ID: <fp5inh$bkr$1@ger.gmane.org>

That's consistent with a frame rendering time of roughly 23 ms. Waiting 
10 ms after each rendering would indeed lower the rate by about 10 fps.

regards
  Steve

Bernie Roehl wrote:
> On the (relatively low-end) machine I'm running on, I get 33 fps with 
> with 0.01, and 43 fps with 0.0 or with the coiterator.
> 
> I'm leaning towards the coiterator approach, since I don't have to worry 
> about figuring out what value to pass.
> 
> 
> On Fri, Feb 15, 2008 at 1:45 PM, Tristan Seligmann 
> <mithrandi at mithrandi.za.net <mailto:mithrandi at mithrandi.za.net>> wrote:
> 
>     * Bernie Roehl <broehl at gmail.com <mailto:broehl at gmail.com>>
>     [2008-02-15 11:09:07 -0500]:
> 
>      > If I change the 0.01 to 0.0, I do indeed get a framerate
>     comparable to using
>      > the coiterator methord.
>      >
>      > I wouldn't have thought that waiting ten milliseconds between
>     calls would
>      > make such a substantial difference.
> 
>     It limits you to a maximum of 100 frames/sec or so (since there are 100
>     ten millisecond intervals in a second); what sort of framerates are you
>     seeing? Also, you should probably pick a number greater than 0, since
>     there's not much point in rendering more than a certain number of frames
>     every second -- the exact threshold at which it becomes pointless
>     depends on a variety of application / environment specific factors,
>     though.
>     --
>     mithrandi, i Ainil en-Balandor, a faer Ambar
> 
>     -----BEGIN PGP SIGNATURE-----
>     Version: GnuPG v2.0.8 (GNU/Linux)
> 
>     iEYEARECAAYFAke13cAACgkQpNuXDQIV94oMSgCghgH4cj3lwyDsxLHn4lrtygkq
>     ic8An1XBicz3/lObeGZkv7OGxVd2Nyqb
>     =HJIx
>     -----END PGP SIGNATURE-----
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> Bernie Roehl
> Mail: broehl at gmail.com <mailto:broehl at gmail.com>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mithrandi at mithrandi.za.net  Fri Feb 15 20:15:48 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 16 Feb 2008 05:15:48 +0200
Subject: [Twisted-Python] Re: Twisted and python-ogre
In-Reply-To: <fp5inh$bkr$1@ger.gmane.org>
References: <1045831b0802150731l5182b557q6947dd48d54501cf@mail.gmail.com>
	<20080215155127.6859.558468479.divmod.quotient.9857@ohm>
	<1045831b0802150809n3d5f74f9o8c8d54ff6764a612@mail.gmail.com>
	<20080215184520.GA25384@mithrandi.za.net>
	<1045831b0802151100t65de168u3e7f9cf932e9a8b6@mail.gmail.com>
	<fp5inh$bkr$1@ger.gmane.org>
Message-ID: <20080216031548.GA2652@mithrandi.za.net>

* Steve Holden <steve at holdenweb.com> [2008-02-15 21:45:03 -0500]:

> That's consistent with a frame rendering time of roughly 23 ms. Waiting  
> 10 ms after each rendering would indeed lower the rate by about 10 fps.

But LoopingCall tries to schedule the next call for N seconds after the
start of the previous call, not the end of the previous call, so that
doesn't quite explain it. (Unless I'm misunderstanding something...)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080216/bcb7d191/attachment.sig>

From exarkun at twistedmatrix.com  Sat Feb 16 22:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Feb 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1203224706.71.1031780076@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080217/d583ff04/attachment.html>

From mg at daimi.au.dk  Mon Feb 18 03:22:23 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 18 Feb 2008 11:22:23 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between two
	computers
References: <87lk5qq9ga.fsf@hbox.dyndns.org>
	<20080212203612.6859.870993561.divmod.quotient.8613@ohm>
Message-ID: <w1b1w7ak1i8.fsf@thyra03.daimi.au.dk>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>>I initially stayed away from pyOpenSSL since
>>
>>* it seems dead: last release was in 2004 with Windows installers
>>  for Python 2.1. This message seems to indicate that a live form
>>  exists: http://tinyurl.com/3b4yeq
>
> There isn't much, if any, development happening on PyOpenSSL.
> Partially, this is because it does enough as it is now (although
> there are some features it could provide which would be nice).
> Partially it's because the original author has disappeared into the
> void.

Okay, thanks for the explaination.

>> [snip licensing issues I don't have any clue about]
>>
>>* The GnuTLS has a nice (maybe biased) comparison page:
>>
>>    http://www.gnu.org/software/gnutls/comparison.html
>>
>
> GnuTLS support in Twisted might be interesting. I have heard rumors
> that OpenSSL is a higher quality implementation than GnuTLS, but I
> don't have any first-hand experience; it's possible this is just
> fud.

Neither do I... :-)

> There's no reason Twisted couldn't support both of these libraries
> and use whichever is available (or allow explicit selection). I
> think there's even a ticket open in the tracker for this. But since
> PyOpenSSL basically works, the motivation to work on this might be
> missing for a lot of people.

Right, I can definitely understand that!

>>Is there a cross-platform GPL compatible library out there that will
>>give me TLS for Linux, Mac, and Windows on Python 2.4 and upwards?
>
> There's also TLSLite, which includes Twisted support. I don't have
> any first-hand experience with it either, though.
>
> There's also M2Crypto, but since that's just another OpenSSL
> wrapper, it probably doesn't take care of your license concerns.

Thanks for the pointers! I'll look more into this when I (or more
likely, someone else) really need SSL/TLS support on Windows.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From incollu at cs.unibo.it  Mon Feb 18 03:29:41 2008
From: incollu at cs.unibo.it (Michele Incollu)
Date: Mon, 18 Feb 2008 11:29:41 +0100
Subject: [Twisted-Python] ftp upload resume
Message-ID: <47B95E15.8040501@cs.unibo.it>

/



In the Python ftplib.FTP class's retrbinary() method you can pass a file
/>/ offset using the 'rest' arg (in order to resume a partial download).
/>/ 
/>/ Please could someone advise how to do a similar thing using the Twisted
/>/ FTPClient class? 


/Is it possible to enable support for the REST command in a Twisted FTP server, (in order to resume a partial upload) ?

Thanks,

Michele




From incollu at cs.unibo.it  Mon Feb 18 03:43:49 2008
From: incollu at cs.unibo.it (Michele Incollu)
Date: Mon, 18 Feb 2008 11:43:49 +0100
Subject: [Twisted-Python] ftp upload resume
Message-ID: <47B96165.3070908@cs.unibo.it>


Is it possible to enable support for the REST command in a Twisted FTP 
server, (in order to resume a partial upload) ?

Thanks,

Michele


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mailing_lists at evotex.ch  Mon Feb 18 09:04:59 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 18 Feb 2008 17:04:59 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
Message-ID: <47B9ACAB.1060102@evotex.ch>

Hello,

I am trying to write a Server and Client that use an XML protocol. I saw 
that there is a XmlStream class and tried to use it, but was unable to. 
I saw one small example for a client (http://ralphm.net/blog/2005/10), 
but it raises some questions.

First of all, it seams to work compleatly differently that the other 
server/client examples.

I don't understand why there is a need to add observers, and what they 
are used for. I can't get any of these to work (on either side, client 
or server):

    def connectionMade(self):
        print 'Connected!'

    def dataReceived(self, data):
        print data

    def onDocumentStart(self, rootElement):
        print "Message start : ", rootElement

    def onElement(self, element):
        print "current element : ", element

    def onDocumentEnd(self, rootElement):
        print "Message end : ", rootElement

I'm kind of lost :-(
I'm new to Twisted and I though that I understood how it works (read 
howtos, turorials, etc, but this one doesn't seam like the others. Can 
someone please point me to an example, I searched google but no luck. 
All I need is a simple client-server xml echo example or a better 
understanding of how it works and how it differs from the other echo 
examples. Thank you,

Gabriel

Thank you



From p.mayers at imperial.ac.uk  Mon Feb 18 09:34:40 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 18 Feb 2008 16:34:40 +0000
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
In-Reply-To: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
Message-ID: <47B9B3A0.3050909@imperial.ac.uk>

> 
> There's also TLSLite, which includes Twisted support.  I don't have any
> first-hand experience with it either, though.

TLSLite is very very nice. I've used it to write an EAP-supporting 
radius server (for debugging only, real people should use FreeRadius) 
incidentally in Twisted.

In particular I find the TLSLite/Twisted integration nice because of the 
protocol wrapping approach (rather than magic methods and __class__ 
fiddles on the transport). The TLSConnection objects also make it quite 
a bit easier to get at some of the TLS-related items. The fallback to 
pure-python can be handy in a pinch too.

It's somewhat a shame it's public domain rather than an explicit license.



From mg at daimi.au.dk  Mon Feb 18 13:19:03 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 18 Feb 2008 21:19:03 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk>
Message-ID: <87mypyqaq0.fsf@hbox.dyndns.org>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

>> There's also TLSLite, which includes Twisted support. I don't have
>> any first-hand experience with it either, though.
>
> TLSLite is very very nice. I've used it to write an EAP-supporting
> radius server (for debugging only, real people should use FreeRadius)
> incidentally in Twisted.
>
> In particular I find the TLSLite/Twisted integration nice because of
> the protocol wrapping approach (rather than magic methods and
> __class__ fiddles on the transport). The TLSConnection objects also
> make it quite a bit easier to get at some of the TLS-related items.
> The fallback to pure-python can be handy in a pinch too.

I have just looked at it and it does look nice! Especially that it
supports so many backends which should make it possible to find a good
cross-platform one my project can use.

> It's somewhat a shame it's public domain rather than an explicit
> license.

Personally, then as long as people use the GPL or something with less
restrictions, then I am okay with it!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080218/efce9aea/attachment.sig>

From zooko at zooko.com  Mon Feb 18 15:26:01 2008
From: zooko at zooko.com (zooko)
Date: Mon, 18 Feb 2008 15:26:01 -0700
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
In-Reply-To: <87mypyqaq0.fsf@hbox.dyndns.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
Message-ID: <86646156-8E16-4D40-AE55-DAA9E57E0B35@zooko.com>

You might be interested in this trac ticket:

http://allmydata.org/trac/tahoe/ticket/11 -- "I don't like pyopenssl"

Regards,

Zooko




From xavier at sydesy.com  Mon Feb 18 16:04:33 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Tue, 19 Feb 2008 00:04:33 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <4797864A.6070802@campana.vi.it>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
	<4797864A.6070802@campana.vi.it>
Message-ID: <2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>

> > right ? Did Ottavio Campana manage to have something working and did
> > he publish the result of his modifications ?
>
> Yes, I got something useful, it's going to be deployed soon but
> eventually I didn't come out with acls. Even though I have to say
> ldaptor fits well in my project and for some aspects I'm happier than
> with openldap.

Congrat !
Are you going to release the ldap code with an open source license ?

I'm in discussion with Tommi about adding ACLs, would you be
interested ? Beside, he told me ldaptor should be updated to work with
the latest on twisted, something you've done already ?

> I have a web application I wrote with twisted web. This application
> saves data in a sqlite file. Whenever the user modifies it from the web,
> the application updates also the files used by ldaptor, since what I
> need is only to export them with ldap.

Yes, more or less what I want to do (based on mysql instead of sqlite).

What is the ldap client you use ? What is the ldap schema (my goal is
to read it from a mail client)

> It does not have acls, but I managed to get something similar by
> patching how the ldap server works. Moreover, to prevent corruption I
> modified how operations different from search behave.

> What do you want to do?

Quite simply provide LDAP access (bind, search, unbind) on the
contacts in a CRM (civicrm). I'm working for NGOs, and that's the
easiest I found to provide access to the address book from within
outlook/thunderbird/whatever mail client.

> About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly
> everything I needed, give al look also to ldaptor/ldiftree.py to see how
> not to store everything in memory but in a filesystem. Also give a look
> at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac

Thanks ! Why didn't you try fetching directly from the db instead of
putting it in an intermediate file ?

> I hope it is enough, I've been able to understand how it works from
> these files.

I hope too.

> Bye,

Sorry for the delay, it took me a while to get in touch with tommi and
move forward on how to work on that together.


What is your application ? Is this something public ?

X+



From c2k_list at gmx.de  Mon Feb 18 16:42:53 2008
From: c2k_list at gmx.de (my list)
Date: Tue, 19 Feb 2008 00:42:53 +0100
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
Message-ID: <20080218234253.150210@gmx.net>

Hello,
I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:

"RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012." 

I installed python2.5 from source next to the standard debian python2.4 into /usr/local/lib/python2.5, redirect the link /usr/bin/python to /usr/local/bin/python2.5. Thats working, but when I try to import twisted with

"import twisted"

I receive the error above. Importing zope works just fine. All I found on the net was that there might be a problem with the two installations of python next to each other. But if so, how can I get rid of python2.4, because I need python2.5. Is there no chance to use both versions parallel?

The Version of the zopeinterface is 3.3.1-5, python is 2.4.4-7 and 2.5.1-6, twisted is 2.5.0-2.

I am fairly new to Debain and Python and I am really stuck. I hope someone can help me. I would appreciate it big time!

Regards,
Torsten
-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free



From screwtape at froup.com  Mon Feb 18 17:30:31 2008
From: screwtape at froup.com (Tim Allen)
Date: Tue, 19 Feb 2008 11:30:31 +1100
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
References: <20080218234253.150210@gmx.net>
Message-ID: <20080219003031.GO11572@thristian.org>

On Tue, Feb 19, 2008 at 12:42:53AM +0100, my list wrote:
> I installed python2.5 from source next to the standard debian
> python2.4 into /usr/local/lib/python2.5, redirect the link
> /usr/bin/python to /usr/local/bin/python2.5. 

Unlike Fedora or RedHat, Debian does not require one particular version
of Python with any given version of the distribution - you don't have to
compile your own.

You should be able to "sudo aptitude install python2.5" and wind up with
/usr/bin/python2.5 along with /usr/bin/python2.4. If you're using the
Debian-packaged versions of Twisted, they should automatically be
available from Python 2.5 as well (no mucking around with installing
special python2.5-twisted packages).



From exarkun at divmod.com  Mon Feb 18 18:29:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 18 Feb 2008 20:29:57 -0500
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
Message-ID: <20080219012957.6859.1868028742.divmod.quotient.10619@ohm>

On Tue, 19 Feb 2008 00:42:53 +0100, my list <c2k_list at gmx.de> wrote:
>Hello,
>I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:
>
>"RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012."

This is only a warning.  It'd probably be good to fix, but in practice
I doubt it will cause any issues.

Are you having problems other than this running something?  If so, the
real issue is most likely somewhere else.

Jean-Paul



From mg at daimi.au.dk  Tue Feb 19 00:36:18 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 19 Feb 2008 08:36:18 +0100
Subject: [Twisted-Python] Re: How to make a secure connection between
	two	computers
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
	<86646156-8E16-4D40-AE55-DAA9E57E0B35@zooko.com>
Message-ID: <w1blk5hiej1.fsf@thyra03.daimi.au.dk>

zooko <zooko at zooko.com> writes:

> You might be interested in this trac ticket:
>
> http://allmydata.org/trac/tahoe/ticket/11 -- "I don't like pyopenssl"

Thank you, lots of interesting links there too. I'm surpriced to see
so many different cryptographic libraries in Python!

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From eburus at gmail.com  Tue Feb 19 01:20:55 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 19 Feb 2008 11:20:55 +0300
Subject: [Twisted-Python] Python C API version mismatch when importing
	twisted
In-Reply-To: <20080218234253.150210@gmx.net>
References: <20080218234253.150210@gmx.net>
Message-ID: <47BA9167.5090709@gmail.com>

Hi,
remove all zope.interface *.pyc files from the python's site-package
directory.
Rerun application, if it didn't work reinstall zope.interface from source.
Where is a C module and compilation are different for the PyObjects in
the 2.4 and 2.5 versions.

my list wrote:
> Hello,
> I got an error message when I'm trying to import twisted in python2.5 on a Debian Lenny machine. The error is:
>
> "RunetimeWarning: Python C API version mismacht for module _zoper_interface_coptimizations: This Python has API version 1013, moduel _zope_interface_coptimizations has version 1012." 
>
> I installed python2.5 from source next to the standard debian python2.4 into /usr/local/lib/python2.5, redirect the link /usr/bin/python to /usr/local/bin/python2.5. Thats working, but when I try to import twisted with
>
> "import twisted"
>
> I receive the error above. Importing zope works just fine. All I found on the net was that there might be a problem with the two installations of python next to each other. But if so, how can I get rid of python2.4, because I need python2.5. Is there no chance to use both versions parallel?
>
> The Version of the zopeinterface is 3.3.1-5, python is 2.4.4-7 and 2.5.1-6, twisted is 2.5.0-2.
>
> I am fairly new to Debain and Python and I am really stuck. I hope someone can help me. I would appreciate it big time!
>
> Regards,
> Torsten
>   

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080219/0ddd5617/attachment.html>

From vvangelovski at gmail.com  Tue Feb 19 02:17:04 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 19 Feb 2008 10:17:04 +0100
Subject: [Twisted-Python] http proxy
Message-ID: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>

I'm trying to set up a http proxy which will write redirects to the
client if it requests certain uri but work as a normal proxy for
others. Can this be done with the higher level proxy classes, if so,
how?



From mailing_lists at evotex.ch  Tue Feb 19 04:29:38 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 19 Feb 2008 12:29:38 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <47B9ACAB.1060102@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>
Message-ID: <47BABDA2.10105@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I am trying to write a Server and Client that use an XML protocol. I 
> saw that there is a XmlStream class and tried to use it, but was 
> unable to. I saw one small example for a client 
> (http://ralphm.net/blog/2005/10), but it raises some questions.
>
> First of all, it seams to work compleatly differently that the other 
> server/client examples.
>
> I don't understand why there is a need to add observers, and what they 
> are used for. I can't get any of these to work (on either side, client 
> or server):
>
>    def connectionMade(self):
>        print 'Connected!'
>
>    def dataReceived(self, data):
>        print data
>
>    def onDocumentStart(self, rootElement):
>        print "Message start : ", rootElement
>
>    def onElement(self, element):
>        print "current element : ", element
>
>    def onDocumentEnd(self, rootElement):
>        print "Message end : ", rootElement
>
> I'm kind of lost :-(
> I'm new to Twisted and I though that I understood how it works (read 
> howtos, turorials, etc, but this one doesn't seam like the others. Can 
> someone please point me to an example, I searched google but no luck. 
> All I need is a simple client-server xml echo example or a better 
> understanding of how it works and how it differs from the other echo 
> examples. Thank you,
>
> Gabriel
>
> Thank you
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Ok, I've got some code sort of working, if I use the following 
XPathQuery string : "/*" on the following XML string :

<?xml version="1.0" encoding="utf-8"?>
<test><feed name="test">toto</feed></test>

the addObserver works ( xs.addObserver("/*", self.onTest) )
 but if I try the following :


xs.addObserver("/test/feed/@name", self.onTest)
or
xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)

I get the following :

<......>
  File 
"/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py", line 
104, in onElement
    self.dispatch(element)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py", 
line 232, in dispatch
    if query.matches(object):
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xpath.py", 
line 238, in matches
    return self.baseLocation.matches(elem)
exceptions.AttributeError: 'NoneType' object has no attribute 'matches'

Does anyone understand why?



From k_r_a_j_kumar at yahoo.co.in  Tue Feb 19 06:44:26 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 19 Feb 2008 19:14:26 +0530 (IST)
Subject: [Twisted-Python] save an received file
Message-ID: <743981.95061.qm@web8711.mail.in.yahoo.com>

Hi all,
My application receiving a file through a socket.
How can i save that file to my own folder or path.
Should i create an object of that?
How to check whether i received complete file or not?
and what about the original copy of the file which i received?
should i destroy it?
Thanks in advance.




      Chat on a cool, new interface. No download required. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080219/91631c2c/attachment.html>

From exarkun at divmod.com  Tue Feb 19 06:54:59 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 19 Feb 2008 08:54:59 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <47BABDA2.10105@evotex.ch>
Message-ID: <20080219135459.6859.195113362.divmod.quotient.10826@ohm>

On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Ok, I've got some code sort of working, if I use the following XPathQuery 
>string : "/*" on the following XML string :
>
><?xml version="1.0" encoding="utf-8"?>
><test><feed name="test">toto</feed></test>
>
>the addObserver works ( xs.addObserver("/*", self.onTest) )
>but if I try the following :
>
>
>xs.addObserver("/test/feed/@name", self.onTest)
>or
>xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>

I don't think the xpath implementation in xish is complete.  You may
have found a bug or a case it doesn't handle.

Jean-Paul



From exarkun at divmod.com  Tue Feb 19 06:56:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 19 Feb 2008 08:56:43 -0500
Subject: [Twisted-Python] save an received file
In-Reply-To: <743981.95061.qm@web8711.mail.in.yahoo.com>
Message-ID: <20080219135643.6859.1143620165.divmod.quotient.10827@ohm>

On Tue, 19 Feb 2008 19:14:26 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi all,
>My application receiving a file through a socket.
>How can i save that file to my own folder or path.
>Should i create an object of that?
>How to check whether i received complete file or not?
>and what about the original copy of the file which i received?
>should i destroy it?
>Thanks in advance.
>

The Python tutorial covers files i/o:

  http://www.python.org/doc/tut/node9.html#SECTION009200000000000000000

If that's not what you're asking about, you need to be more specific.

Jean-Paul



From christopher.zorn at gmail.com  Tue Feb 19 07:11:53 2008
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Tue, 19 Feb 2008 09:11:53 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream :
	XPathQuery error?
In-Reply-To: <20080219135459.6859.195113362.divmod.quotient.10826@ohm>
References: <47BABDA2.10105@evotex.ch>
	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
Message-ID: <149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>

On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti <
> mailing_lists at evotex.ch> wrote:
> > [snip]
> >Ok, I've got some code sort of working, if I use the following XPathQuery
> >string : "/*" on the following XML string :
> >
> ><?xml version="1.0" encoding="utf-8"?>
> ><test><feed name="test">toto</feed></test>
> >
> >the addObserver works ( xs.addObserver("/*", self.onTest) )
> >but if I try the following :
> >
> >
> >xs.addObserver("/test/feed/@name", self.onTest)
> >or
> >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
> >
>
> I don't think the xpath implementation in xish is complete.  You may
> have found a bug or a case it doesn't handle.
>

It is not complete. But if you would like to find the stanza 'feed' with the
attribute 'name' then it would like like

xs.addObserver("/test/feed[@name]", self.onTest)




>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080219/17b11bca/attachment.html>

From mailing_lists at evotex.ch  Tue Feb 19 07:48:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 19 Feb 2008 15:48:46 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
References: <47BABDA2.10105@evotex.ch>	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
	<149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
Message-ID: <47BAEC4E.90707@evotex.ch>

Christopher Zorn wrote:
>
>
> On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com 
> <mailto:exarkun at divmod.com>> wrote:
>
>     On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti
>     <mailing_lists at evotex.ch <mailto:mailing_lists at evotex.ch>> wrote:
>     > [snip]
>     >Ok, I've got some code sort of working, if I use the following
>     XPathQuery
>     >string : "/*" on the following XML string :
>     >
>     ><?xml version="1.0" encoding="utf-8"?>
>     ><test><feed name="test">toto</feed></test>
>     >
>     >the addObserver works ( xs.addObserver("/*", self.onTest) )
>     >but if I try the following :
>     >
>     >
>     >xs.addObserver("/test/feed/@name", self.onTest)
>     >or
>     >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>     >
>
>     I don't think the xpath implementation in xish is complete.  You may
>     have found a bug or a case it doesn't handle.
>
>
> It is not complete. But if you would like to find the stanza 'feed' 
> with the attribute 'name' then it would like like
>
> xs.addObserver("/test/feed[@name]", self.onTest)
>
>
Ok, thanks (Jean-Paul & Christopher), that helped, I though I was doing 
something wrong :-). So there is no way of directly getting the stanza's 
attribute's value using the xpath implementation in xish? I can use the 
getAttribute() method but "pure" xpath would be nicer.

Gabriel
>  
>
>
>     Jean-Paul
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From ottavio at campana.vi.it  Tue Feb 19 09:29:35 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 19 Feb 2008 17:29:35 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>	<4797864A.6070802@campana.vi.it>
	<2617b9b70802181504l6f82fa8aqe723d7220f260a95@mail.gmail.com>
Message-ID: <47BB03EF.4040202@campana.vi.it>

xavier dutoit ha scritto:
>>> right ? Did Ottavio Campana manage to have something working and did
>>> he publish the result of his modifications ?
>> Yes, I got something useful, it's going to be deployed soon but
>> eventually I didn't come out with acls. Even though I have to say
>> ldaptor fits well in my project and for some aspects I'm happier than
>> with openldap.
> 
> Congrat !
> Are you going to release the ldap code with an open source license ?

well I think I think I'm releasing it opensource. Two days ago I 
discovered a tremendous problem in the software due to utf-8 encoding 
required by sqlite...

I'm trying to fix it, but it's not fixed yet, so I'd like to fix it 
before releasing.

 > I'm in discussion with Tommi about adding ACLs, would you be
 > interested ? Beside, he told me ldaptor should be updated to work with
 > the latest on twisted, something you've done already ?

well, I'm sorry but I don't think I'll have time. I just finished my 
doctorate, so I'm looking for a postdoc and I do not know what I'm doing 
(by the way, if you are aware of some positions... ;-) )

>> I have a web application I wrote with twisted web. This application
>> saves data in a sqlite file. Whenever the user modifies it from the web,
>> the application updates also the files used by ldaptor, since what I
>> need is only to export them with ldap.
> 
> Yes, more or less what I want to do (based on mysql instead of sqlite).
> 
> What is the ldap client you use ? What is the ldap schema (my goal is
> to read it from a mail client)

I use sqlite instead of mysql because the software has to run on an 
embedded system. I use inetorgperson, since it works with all clients, 
as far as I know (and have tested).

>> It does not have acls, but I managed to get something similar by
>> patching how the ldap server works. Moreover, to prevent corruption I
>> modified how operations different from search behave.
> 
>> What do you want to do?
> 
> Quite simply provide LDAP access (bind, search, unbind) on the
> contacts in a CRM (civicrm). I'm working for NGOs, and that's the
> easiest I found to provide access to the address book from within
> outlook/thunderbird/whatever mail client.

I do not know this crm...

>> About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly
>> everything I needed, give al look also to ldaptor/ldiftree.py to see how
>> not to store everything in memory but in a filesystem. Also give a look
>> at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac
> 
> Thanks ! Why didn't you try fetching directly from the db instead of
> putting it in an intermediate file ?

that was the easiest solution. But if you have patches... :-)

> What is your application ? Is this something public ?

it is (wants to be in the future) a front end to asterisk. By now it has 
an addressbook, which can be accessed with a browser to execute calls or 
with ldap protocol.

I'm working right now to understand how to fix the encoding problem, 
please email me next week, when I hope I'll have fixed it.

Bye

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20080219/bff778fd/attachment.sig>

From k_r_a_j_kumar at yahoo.co.in  Tue Feb 19 21:41:06 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Wed, 20 Feb 2008 10:11:06 +0530 (IST)
Subject: [Twisted-Python]need clarification on "save an received file"
Message-ID: <643592.60007.qm@web8707.mail.in.yahoo.com>

I need one clarification on this,
my appplication is of  server-client application, so when server receives a file through socket, will that file will be saved in  /temp/workfile ?
or  should  i use a socket handler with file object to receive that file ?

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Tuesday, 19 February, 2008 7:26:43 PM
Subject: Re: [Twisted-Python] save an received file

On 
Tue, 
19 
Feb 
2008 
19:14:26 
+0530 
(IST), 
Raj 
kumar 
<k_r_a_j_kumar at yahoo.co.in> 
wrote:
>Hi 
all,
>My 
application 
receiving 
a 
file 
through 
a 
socket.
>How 
can 
i 
save 
that 
file 
to 
my 
own 
folder 
or 
path.
>Should 
i 
create 
an 
object 
of 
that?
>How 
to 
check 
whether 
i 
received 
complete 
file 
or 
not?
>and 
what 
about 
the 
original 
copy 
of 
the 
file 
which 
i 
received?
>should 
i 
destroy 
it?
>Thanks 
in 
advance.
>

The 
Python 
tutorial 
covers 
files 
i/o:

  
http://www.python.org/doc/tut/node9.html#SECTION009200000000000000000

If 
that's 
not 
what 
you're 
asking 
about, 
you 
need 
to 
be 
more 
specific.

Jean-Paul

_______________________________________________
Twisted-Python 
mailing 
list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






      Get your domain and website for less than Rs.100/month*. Go to http://in.business.yahoo.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080220/dc264517/attachment.html>

From drew.smathers at gmail.com  Tue Feb 19 22:56:07 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 20 Feb 2008 00:56:07 -0500
Subject: [Twisted-Python]need clarification on "save an received file"
In-Reply-To: <643592.60007.qm@web8707.mail.in.yahoo.com>
References: <643592.60007.qm@web8707.mail.in.yahoo.com>
Message-ID: <368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>

On Feb 19, 2008 11:41 PM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:

> I need one clarification on this,
> my appplication is of  server-client application, so when server receives
> a file through socket, will that file will be saved in  /temp/workfile ?
> or  should  i use a socket handler with file object to receive that file ?
>

I would try to help you my friend, but I have no earthly idea what you're
talking about.  /temp/workfile?  So far as I know, sockets receive bytes,
not files. Does that help?? Anyhow, if you provided some sample code showing
what you're trying to do, someone might be able to help you.  It would also
be apropriate if your question actually had something to do with Twisted.

Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080220/412c5885/attachment.html>

From matthew.reg at gmail.com  Tue Feb 19 23:44:53 2008
From: matthew.reg at gmail.com (Matthew Zhang)
Date: Wed, 20 Feb 2008 14:44:53 +0800
Subject: [Twisted-Python] Question about Twistd and PYTHONPATH
In-Reply-To: <78517.52248.qm@web34209.mail.mud.yahoo.com>
References: <78517.52248.qm@web34209.mail.mud.yahoo.com>
Message-ID: <2f94b43d0802192244q131cfd3fv33ff4f7141e504ef@mail.gmail.com>

I guess your Reporter class is in another module.
I ran into the same situation a few days ago and finally made it work like
this:

import sys
sys.path.append('.')

from task import Task

Matthew

On Feb 10, 2008 4:46 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:

> Hello Folks:
>
> This is my first time using twistd. I have daemonized
> a server by creating a TAC file. When I execute the
> server (first I ran it out of its development
> directory),
>
> twistd -y server.tac
>
> I get:
>
> no module named Reporter (Reporter is a class)
>
> when I run a non-daemonized version of the same
> server, I have no problem.
>
> I checked my PYTHONPATH. It seems to be properly set.
> I tried setting the path using sys.path. No go.
>
> Is there embarassingly simple that I am missing? Is
> there something I should be overriding?
>
> Cheers,
> Andrew
>
>
>
>
>  ____________________________________________________________________________________
> Never miss a thing.  Make Yahoo your home page.
> http://www.yahoo.com/r/hs
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080220/89546df4/attachment.html>

From mailing_lists at evotex.ch  Wed Feb 20 02:36:19 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 10:36:19 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BABDA2.10105@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch> <47BABDA2.10105@evotex.ch>
Message-ID: <47BBF493.4090708@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> I am trying to write a Server and Client that use an XML protocol. I 
>> saw that there is a XmlStream class and tried to use it, but was 
>> unable to. I saw one small example for a client 
>> (http://ralphm.net/blog/2005/10), but it raises some questions.
>>
>> First of all, it seams to work compleatly differently that the other 
>> server/client examples.
>>
>> I don't understand why there is a need to add observers, and what 
>> they are used for. I can't get any of these to work (on either side, 
>> client or server):
>>
>>    def connectionMade(self):
>>        print 'Connected!'
>>
>>    def dataReceived(self, data):
>>        print data
>>
>>    def onDocumentStart(self, rootElement):
>>        print "Message start : ", rootElement
>>
>>    def onElement(self, element):
>>        print "current element : ", element
>>
>>    def onDocumentEnd(self, rootElement):
>>        print "Message end : ", rootElement
>>
>> I'm kind of lost :-(
>> I'm new to Twisted and I though that I understood how it works (read 
>> howtos, turorials, etc, but this one doesn't seam like the others. 
>> Can someone please point me to an example, I searched google but no 
>> luck. All I need is a simple client-server xml echo example or a 
>> better understanding of how it works and how it differs from the 
>> other echo examples. Thank you,
>>
>> Gabriel
>>
>> Thank you
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Ok, I've got some code sort of working, if I use the following 
> XPathQuery string : "/*" on the following XML string :
>
> <?xml version="1.0" encoding="utf-8"?>
> <test><feed name="test">toto</feed></test>
>
> the addObserver works ( xs.addObserver("/*", self.onTest) )
> but if I try the following :
>
>
> xs.addObserver("/test/feed/@name", self.onTest)
> or
> xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
>
> I get the following :
>
> <......>
>  File 
> "/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py", 
> line 104, in onElement
>    self.dispatch(element)
>  File 
> "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py", line 
> 232, in dispatch
>    if query.matches(object):
>  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xpath.py", 
> line 238, in matches
>    return self.baseLocation.matches(elem)
> exceptions.AttributeError: 'NoneType' object has no attribute 'matches'
>
> Does anyone understand why?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
I'm having some trouble with the XPath I think when trying to react on 
xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
the following :

    <?xml version="1.0" encoding="utf-8"?>
    <test><feed name='monNom'>toto</feed></test>

and the callback functions are :

    def onTest(self, element):
        print "got test : ", element

    def onFeed(self, element):
        print "got feed : ", element

    def onFeedFilteredByName(self, element):
        print "got feed name : ", element

    def onWildcard(self, element):
        print "got wildcard : ", element

and the bootstrap is added like so :

    f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)

and the bootstrap callback is :

    def connected(self, xs):
        print 'Connected!'
        xs.addObserver("/test", self.onTest)
        xs.addObserver("/test/feed", self.onFeed)
        xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
        xs.addObserver("/*", self.onWildcard)

The only one that gets called is "/*". I tested out the others using 
XPathQuery manually with :

    xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]

root being the above xml, and they work, I can even get the attributes 
(which is what  I really need to get) like so :

    
xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")

What am I doing wrong when adding observers? How can I get them to react 
on attribute names too?

Thank you,
Gabriel



From twisted at ralphm.ik.nu  Wed Feb 20 03:29:37 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 20 Feb 2008 11:29:37 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BBF493.4090708@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch> <47BABDA2.10105@evotex.ch>
	<47BBF493.4090708@evotex.ch>
Message-ID: <1203503377.8278.14.camel@localhost>


On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
> [..]
>
> I'm having some trouble with the XPath I think when trying to react on 
> xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
> the following :
> 
>     <?xml version="1.0" encoding="utf-8"?>
>     <test><feed name='monNom'>toto</feed></test>
> 
> and the callback functions are :
> 
>     def onTest(self, element):
>         print "got test : ", element
> 
>     def onFeed(self, element):
>         print "got feed : ", element
> 
>     def onFeedFilteredByName(self, element):
>         print "got feed name : ", element
> 
>     def onWildcard(self, element):
>         print "got wildcard : ", element
> 
> and the bootstrap is added like so :
> 
>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
> 
> and the bootstrap callback is :
> 
>     def connected(self, xs):
>         print 'Connected!'
>         xs.addObserver("/test", self.onTest)
>         xs.addObserver("/test/feed", self.onFeed)
>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>         xs.addObserver("/*", self.onWildcard)
> 
> The only one that gets called is "/*". I tested out the others using 
> XPathQuery manually with :
> 
>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
> 
> root being the above xml, and they work, I can even get the attributes 
> (which is what  I really need to get) like so :
> 
>     
> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")
> 
> What am I doing wrong when adding observers? How can I get them to react 
> on attribute names too?

Hi,

A somewhat lengthy explanation follows,

XML Streams are a result of the work on Jabber. As such, the generalized
version of XmlStream in xish works similarly, but without the Jabber
specifics in terms of namespaces and elements. However, the concept
behind XML Streams is that you open the stream with a root element, and
after that the units of exchange are the first-level childs of that root
element, or so-called XML Stanzas.

EventDispatcher, a superclass of XmlStream, is responsible for calling
back observers upon calls to its dispatch method. For each XML Stanza,
XmlStream will dispatch the DOM object at the root of that snippet of
XML (domish.Element) for the XML Stanza. Observers are registered to
XPath (-like) queries to match those Elements.

Now that's out of the way, in your specific example, the <feed/> element
would be an XML Stanza. So you can only register an observer to that,
like this:

   xs.addObserver('/feed', self.onFeed)

If some <feed/>'s would have child <title/>, you could add an observer
on just those <feed/>'s with a title like this:

   xs.addObserver('/feed/title', self.onFeedWithTitle)

The observer would still get the whole <feed/> element passed. So, to be
clear: the XPath-like queries are for matching against XML Stanzas, and
each XML Stanza that matches is then passed to the callbacks registered
to that query.

For completeness, ff you want to hook up an event to the start tag of
the root element having been received, you'd do this:

  xs.addObserver(STREAM_START_EVENT, self.onTest)

In that case, you need to do change the bootstrap registration to this:

  f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)

Hope that clears some things up.

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Wed Feb 20 03:34:16 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 20 Feb 2008 11:34:16 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory & XmlStream
	:	XPathQuery error?
In-Reply-To: <47BAEC4E.90707@evotex.ch>
References: <47BABDA2.10105@evotex.ch>
	<20080219135459.6859.195113362.divmod.quotient.10826@ohm>
	<149014b90802190611o28b2f921t6434c86e79c9e7fc@mail.gmail.com>
	<47BAEC4E.90707@evotex.ch>
Message-ID: <1203503656.8278.20.camel@localhost>


On Tue, 2008-02-19 at 15:48 +0100, Gabriel Rossetti wrote:
> Christopher Zorn wrote:
> >
> >
> > On Feb 19, 2008 8:54 AM, Jean-Paul Calderone <exarkun at divmod.com 
> > <mailto:exarkun at divmod.com>> wrote:
> >
> >     On Tue, 19 Feb 2008 12:29:38 +0100, Gabriel Rossetti
> >     <mailing_lists at evotex.ch <mailto:mailing_lists at evotex.ch>> wrote:
> >     > [snip]
> >     >Ok, I've got some code sort of working, if I use the following
> >     XPathQuery
> >     >string : "/*" on the following XML string :
> >     >
> >     ><?xml version="1.0" encoding="utf-8"?>
> >     ><test><feed name="test">toto</feed></test>
> >     >
> >     >the addObserver works ( xs.addObserver("/*", self.onTest) )
> >     >but if I try the following :
> >     >
> >     >
> >     >xs.addObserver("/test/feed/@name", self.onTest)
> >     >or
> >     >xs.addObserver(xpath.XPathQuery("/test/feed/@name"), self.onTest)
> >     >
> >
> >     I don't think the xpath implementation in xish is complete.  You may
> >     have found a bug or a case it doesn't handle.
> >
> >
> > It is not complete. But if you would like to find the stanza 'feed' 
> > with the attribute 'name' then it would like like
> >
> > xs.addObserver("/test/feed[@name]", self.onTest)
> >
> >
> Ok, thanks (Jean-Paul & Christopher), that helped, I though I was doing 
> something wrong :-). So there is no way of directly getting the stanza's 
> attribute's value using the xpath implementation in xish? I can use the 
> getAttribute() method but "pure" xpath would be nicer.

See the other mail for a more complete answer to why the XPath
implementation is like it is.

Indeed the XPath implementation is far from complete. It shouldn't yield
that particular error though, I think. Could you file a ticket for this
specific case?

-- 
Groetjes,

ralphm




From mailing_lists at evotex.ch  Wed Feb 20 06:08:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 14:08:56 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory &
	XmlStream	:	XPathQuery error?
In-Reply-To: <1203503377.8278.14.camel@localhost>
References: <47B9ACAB.1060102@evotex.ch>
	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>
	<1203503377.8278.14.camel@localhost>
Message-ID: <47BC2668.1040309@evotex.ch>

Ralph Meijer wrote:
> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>   
>> [..]
>>
>> I'm having some trouble with the XPath I think when trying to react on 
>> xml messages. I am feeding the twisted.words.xish.xmlstream.XmlStream 
>> the following :
>>
>>     <?xml version="1.0" encoding="utf-8"?>
>>     <test><feed name='monNom'>toto</feed></test>
>>
>> and the callback functions are :
>>
>>     def onTest(self, element):
>>         print "got test : ", element
>>
>>     def onFeed(self, element):
>>         print "got feed : ", element
>>
>>     def onFeedFilteredByName(self, element):
>>         print "got feed name : ", element
>>
>>     def onWildcard(self, element):
>>         print "got wildcard : ", element
>>
>> and the bootstrap is added like so :
>>
>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>
>> and the bootstrap callback is :
>>
>>     def connected(self, xs):
>>         print 'Connected!'
>>         xs.addObserver("/test", self.onTest)
>>         xs.addObserver("/test/feed", self.onFeed)
>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>         xs.addObserver("/*", self.onWildcard)
>>
>> The only one that gets called is "/*". I tested out the others using 
>> XPathQuery manually with :
>>
>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>
>> root being the above xml, and they work, I can even get the attributes 
>> (which is what  I really need to get) like so :
>>
>>     
>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name")
>>
>> What am I doing wrong when adding observers? How can I get them to react 
>> on attribute names too?
>>     
>
> Hi,
>
> A somewhat lengthy explanation follows,
>
> XML Streams are a result of the work on Jabber. As such, the generalized
> version of XmlStream in xish works similarly, but without the Jabber
> specifics in terms of namespaces and elements. However, the concept
> behind XML Streams is that you open the stream with a root element, and
> after that the units of exchange are the first-level childs of that root
> element, or so-called XML Stanzas.
>
> EventDispatcher, a superclass of XmlStream, is responsible for calling
> back observers upon calls to its dispatch method. For each XML Stanza,
> XmlStream will dispatch the DOM object at the root of that snippet of
> XML (domish.Element) for the XML Stanza. Observers are registered to
> XPath (-like) queries to match those Elements.
>
> Now that's out of the way, in your specific example, the <feed/> element
> would be an XML Stanza. So you can only register an observer to that,
> like this:
>
>    xs.addObserver('/feed', self.onFeed)
>
> If some <feed/>'s would have child <title/>, you could add an observer
> on just those <feed/>'s with a title like this:
>
>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>
> The observer would still get the whole <feed/> element passed. So, to be
> clear: the XPath-like queries are for matching against XML Stanzas, and
> each XML Stanza that matches is then passed to the callbacks registered
> to that query.
>
> For completeness, ff you want to hook up an event to the start tag of
> the root element having been received, you'd do this:
>
>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>
> In that case, you need to do change the bootstrap registration to this:
>
>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>
> Hope that clears some things up.
>
>   
Ralph, Thank you! Your explanation cleared up a lot for me, I had 
misunderstood the whole thing, this is exactly what I needed.

Thanks again,
Gabriel




From Andy at NewWorldElectric.com  Wed Feb 20 07:04:10 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 20 Feb 2008 09:04:10 -0500
Subject: [Twisted-Python]need clarification on "save an received file"
In-Reply-To: <368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>
References: <643592.60007.qm@web8707.mail.in.yahoo.com>
	<368574aa0802192156k62b4a7c0re7c12903330b0a7@mail.gmail.com>
Message-ID: <37d49ed40802200604t321660c5of01a59c811309ad9@mail.gmail.com>

Oh, I get it, you're expecting it to work like php where files are
automatically stored somewhere for you, no it won't be saved, you need
to implement your own code to save it if you're using your own
protocols for the rest of your communications.  If you're using http
or another protocol, please mention that and maybe someone will know
if files are handled there, not sure myself.

-Andy

On Wed, Feb 20, 2008 at 12:56 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Feb 19, 2008 11:41 PM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
> >
> >
> >
> > I need one clarification on this,
> > my appplication is of  server-client application, so when server receives
> a file through socket, will that file will be saved in  /temp/workfile ?
> > or  should  i use a socket handler with file object to receive that file ?
> >
>
> I would try to help you my friend, but I have no earthly idea what you're
> talking about.  /temp/workfile?  So far as I know, sockets receive bytes,
> not files. Does that help?? Anyhow, if you provided some sample code showing
> what you're trying to do, someone might be able to help you.  It would also
> be apropriate if your question actually had something to do with Twisted.
>
> Cheers,
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to replicate.



From mailing_lists at evotex.ch  Wed Feb 20 08:19:52 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:19:52 +0100
Subject: [Twisted-Python] Help using XmlStreamFactory
	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC2668.1040309@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>	<1203503377.8278.14.camel@localhost>
	<47BC2668.1040309@evotex.ch>
Message-ID: <47BC4518.2090405@evotex.ch>

Gabriel Rossetti wrote:
> Ralph Meijer wrote:
>> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>>  
>>> [..]
>>>
>>> I'm having some trouble with the XPath I think when trying to react 
>>> on xml messages. I am feeding the 
>>> twisted.words.xish.xmlstream.XmlStream the following :
>>>
>>>     <?xml version="1.0" encoding="utf-8"?>
>>>     <test><feed name='monNom'>toto</feed></test>
>>>
>>> and the callback functions are :
>>>
>>>     def onTest(self, element):
>>>         print "got test : ", element
>>>
>>>     def onFeed(self, element):
>>>         print "got feed : ", element
>>>
>>>     def onFeedFilteredByName(self, element):
>>>         print "got feed name : ", element
>>>
>>>     def onWildcard(self, element):
>>>         print "got wildcard : ", element
>>>
>>> and the bootstrap is added like so :
>>>
>>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>>
>>> and the bootstrap callback is :
>>>
>>>     def connected(self, xs):
>>>         print 'Connected!'
>>>         xs.addObserver("/test", self.onTest)
>>>         xs.addObserver("/test/feed", self.onFeed)
>>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>>         xs.addObserver("/*", self.onWildcard)
>>>
>>> The only one that gets called is "/*". I tested out the others using 
>>> XPathQuery manually with :
>>>
>>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>>
>>> root being the above xml, and they work, I can even get the 
>>> attributes (which is what  I really need to get) like so :
>>>
>>>     
>>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name") 
>>>
>>>
>>> What am I doing wrong when adding observers? How can I get them to 
>>> react on attribute names too?
>>>     
>>
>> Hi,
>>
>> A somewhat lengthy explanation follows,
>>
>> XML Streams are a result of the work on Jabber. As such, the generalized
>> version of XmlStream in xish works similarly, but without the Jabber
>> specifics in terms of namespaces and elements. However, the concept
>> behind XML Streams is that you open the stream with a root element, and
>> after that the units of exchange are the first-level childs of that root
>> element, or so-called XML Stanzas.
>>
>> EventDispatcher, a superclass of XmlStream, is responsible for calling
>> back observers upon calls to its dispatch method. For each XML Stanza,
>> XmlStream will dispatch the DOM object at the root of that snippet of
>> XML (domish.Element) for the XML Stanza. Observers are registered to
>> XPath (-like) queries to match those Elements.
>>
>> Now that's out of the way, in your specific example, the <feed/> element
>> would be an XML Stanza. So you can only register an observer to that,
>> like this:
>>
>>    xs.addObserver('/feed', self.onFeed)
>>
>> If some <feed/>'s would have child <title/>, you could add an observer
>> on just those <feed/>'s with a title like this:
>>
>>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>>
>> The observer would still get the whole <feed/> element passed. So, to be
>> clear: the XPath-like queries are for matching against XML Stanzas, and
>> each XML Stanza that matches is then passed to the callbacks registered
>> to that query.
>>
>> For completeness, ff you want to hook up an event to the start tag of
>> the root element having been received, you'd do this:
>>
>>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>>
>> In that case, you need to do change the bootstrap registration to this:
>>
>>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>>
>> Hope that clears some things up.
>>
>>   
> Ralph, Thank you! Your explanation cleared up a lot for me, I had 
> misunderstood the whole thing, this is exactly what I needed.
>
> Thanks again,
> Gabriel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Hi, one more question,

I'm trying to do the following :

receive an xml message, run different actions depending on XML Stanzas, 
modify the original message and send it back. I'm starting to wonder if 
XmlStream is really what I need? If I'm not mistaking, I have no way of 
getting the original message as a whole, correct? And if I'm not 
mistaking, if I have multiple connections, then the events get mixed up 
(from my own tests anyways), the processing is not atomic. If I have 
let's say that I have :

client1 : <test><header  id="1"/>
client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
client2 : <feed name="myName2">lala</feed></test>

my stanzas will get processed in that order, thus I can't even recreate 
the message (without a complicated state machine of some kind).

I'm kind of mixed up, because when using a thread based network 
framework, one tcp connection = one thread, thus the protocol execution 
is atomic, but this doesn't seam to be the case with Twisted (event 
based), is this correct or have I missed something again?

Thanks,
Gabriel



From andrewfr_ice at yahoo.com  Wed Feb 20 08:32:55 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 07:32:55 -0800 (PST)
Subject: Silly Error [Twisted-Python] Question about Twistd and PYTHONPATH
In-Reply-To: <E1JRmHa-0000Uy-1H@cube.twistedmatrix.com>
Message-ID: <239770.59321.qm@web34205.mail.mud.yahoo.com>

Hi Matthew:

>I guess your Reporter class is in another module.
>I ran into the same situation a few days ago and
>finally made it work
> like
>this:

>import sys
>sys.path.append('.')

Thanks for the response. My error seemed to be much
sillier - somehow the top level __init__.py was
missing!

Arrrgh....

Cheers,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From mailing_lists at evotex.ch  Wed Feb 20 08:34:09 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:34:09 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC4518.2090405@evotex.ch>
References: <47B9ACAB.1060102@evotex.ch>	<47BABDA2.10105@evotex.ch>	<47BBF493.4090708@evotex.ch>	<1203503377.8278.14.camel@localhost>	<47BC2668.1040309@evotex.ch>
	<47BC4518.2090405@evotex.ch>
Message-ID: <47BC4871.2070107@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Ralph Meijer wrote:
>>> On Wed, 2008-02-20 at 10:36 +0100, Gabriel Rossetti wrote:
>>>  
>>>> [..]
>>>>
>>>> I'm having some trouble with the XPath I think when trying to react 
>>>> on xml messages. I am feeding the 
>>>> twisted.words.xish.xmlstream.XmlStream the following :
>>>>
>>>>     <?xml version="1.0" encoding="utf-8"?>
>>>>     <test><feed name='monNom'>toto</feed></test>
>>>>
>>>> and the callback functions are :
>>>>
>>>>     def onTest(self, element):
>>>>         print "got test : ", element
>>>>
>>>>     def onFeed(self, element):
>>>>         print "got feed : ", element
>>>>
>>>>     def onFeedFilteredByName(self, element):
>>>>         print "got feed name : ", element
>>>>
>>>>     def onWildcard(self, element):
>>>>         print "got wildcard : ", element
>>>>
>>>> and the bootstrap is added like so :
>>>>
>>>>     f.addBootstrap(xmlstream.STREAM_START_EVENT, connected)
>>>>
>>>> and the bootstrap callback is :
>>>>
>>>>     def connected(self, xs):
>>>>         print 'Connected!'
>>>>         xs.addObserver("/test", self.onTest)
>>>>         xs.addObserver("/test/feed", self.onFeed)
>>>>         xs.addObserver("/test/feed[@name]", self.onFeedFilteredByName)
>>>>         xs.addObserver("/*", self.onWildcard)
>>>>
>>>> The only one that gets called is "/*". I tested out the others 
>>>> using XPathQuery manually with :
>>>>
>>>>     xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0]
>>>>
>>>> root being the above xml, and they work, I can even get the 
>>>> attributes (which is what  I really need to get) like so :
>>>>
>>>>     
>>>> xpath.XPathQuery("//feed[@name]").queryForNodes(root)[0].getAttribute("name") 
>>>>
>>>>
>>>> What am I doing wrong when adding observers? How can I get them to 
>>>> react on attribute names too?
>>>>     
>>>
>>> Hi,
>>>
>>> A somewhat lengthy explanation follows,
>>>
>>> XML Streams are a result of the work on Jabber. As such, the 
>>> generalized
>>> version of XmlStream in xish works similarly, but without the Jabber
>>> specifics in terms of namespaces and elements. However, the concept
>>> behind XML Streams is that you open the stream with a root element, and
>>> after that the units of exchange are the first-level childs of that 
>>> root
>>> element, or so-called XML Stanzas.
>>>
>>> EventDispatcher, a superclass of XmlStream, is responsible for calling
>>> back observers upon calls to its dispatch method. For each XML Stanza,
>>> XmlStream will dispatch the DOM object at the root of that snippet of
>>> XML (domish.Element) for the XML Stanza. Observers are registered to
>>> XPath (-like) queries to match those Elements.
>>>
>>> Now that's out of the way, in your specific example, the <feed/> 
>>> element
>>> would be an XML Stanza. So you can only register an observer to that,
>>> like this:
>>>
>>>    xs.addObserver('/feed', self.onFeed)
>>>
>>> If some <feed/>'s would have child <title/>, you could add an observer
>>> on just those <feed/>'s with a title like this:
>>>
>>>    xs.addObserver('/feed/title', self.onFeedWithTitle)
>>>
>>> The observer would still get the whole <feed/> element passed. So, 
>>> to be
>>> clear: the XPath-like queries are for matching against XML Stanzas, and
>>> each XML Stanza that matches is then passed to the callbacks registered
>>> to that query.
>>>
>>> For completeness, ff you want to hook up an event to the start tag of
>>> the root element having been received, you'd do this:
>>>
>>>   xs.addObserver(STREAM_START_EVENT, self.onTest)
>>>
>>> In that case, you need to do change the bootstrap registration to this:
>>>
>>>   f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, connected)
>>>
>>> Hope that clears some things up.
>>>
>>>   
>> Ralph, Thank you! Your explanation cleared up a lot for me, I had 
>> misunderstood the whole thing, this is exactly what I needed.
>>
>> Thanks again,
>> Gabriel
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Hi, one more question,
>
> I'm trying to do the following :
>
> receive an xml message, run different actions depending on XML 
> Stanzas, modify the original message and send it back. 

I forgot to say that when I say send it back, it may be also sent to 
another server instead of back to the client that originally sent it, 
kind of like a forwarder that modifies some of the data before sending 
it along.

> I'm starting to wonder if XmlStream is really what I need? If I'm not 
> mistaking, I have no way of getting the original message as a whole, 
> correct? And if I'm not mistaking, if I have multiple connections, 
> then the events get mixed up (from my own tests anyways), the 
> processing is not atomic. If I have let's say that I have :
>
> client1 : <test><header  id="1"/>
> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
> client2 : <feed name="myName2">lala</feed></test>
>
> my stanzas will get processed in that order, thus I can't even 
> recreate the message (without a complicated state machine of some kind).
>
> I'm kind of mixed up, because when using a thread based network 
> framework, one tcp connection = one thread, thus the protocol 
> execution is atomic, but this doesn't seam to be the case with Twisted 
> (event based), is this correct or have I missed something again?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From exarkun at divmod.com  Wed Feb 20 08:35:54 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 10:35:54 -0500
Subject: [Twisted-Python] Help using XmlStreamFactory
	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BC4518.2090405@evotex.ch>
Message-ID: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>

On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>And if I'm not mistaking, 
>if I have multiple connections, then the events get mixed up (from my own 
>tests anyways), the processing is not atomic. If I have let's say that I 
>have :
>
>client1 : <test><header  id="1"/>
>client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>client2 : <feed name="myName2">lala</feed></test>

I think the 3rd line should be client1?

>
>my stanzas will get processed in that order, thus I can't even recreate the 
>message (without a complicated state machine of some kind).
>
>I'm kind of mixed up, because when using a thread based network framework, 
>one tcp connection = one thread, thus the protocol execution is atomic, but 
>this doesn't seam to be the case with Twisted (event based), is this correct 
>or have I missed something again?

If you send all events to a single function with no indication of where they
came from, then you will certainly have difficulty figuring out what's going
on.  So, don't do that. ;)

One solution is to have a difference instance for each connection and to use
a bound method as the event handler.  This gives you an obvious per-instance
place to keep state and such - on the instance.  There are other solutions,
of course, like passing in some extra object to the event handler so you can
differentiate between clients.

If you use instances and bound methods, then client1's stanzas will be sent
to the instance you created to handle client1 and client2's stanzas will be
sent to the instance you created to handle client2.  This way, it should be
trivial to keep track of what's going on.

Jean-Paul



From mailing_lists at evotex.ch  Wed Feb 20 08:45:14 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 20 Feb 2008 16:45:14 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
Message-ID: <47BC4B0A.1040602@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> And if I'm not mistaking, if I have multiple connections, then the 
>> events get mixed up (from my own tests anyways), the processing is 
>> not atomic. If I have let's say that I have :
>>
>> client1 : <test><header  id="1"/>
>> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>> client2 : <feed name="myName2">lala</feed></test>
>
> I think the 3rd line should be client1?
yes it should :-)
>
>>
>> my stanzas will get processed in that order, thus I can't even 
>> recreate the message (without a complicated state machine of some kind).
>>
>> I'm kind of mixed up, because when using a thread based network 
>> framework, one tcp connection = one thread, thus the protocol 
>> execution is atomic, but this doesn't seam to be the case with 
>> Twisted (event based), is this correct or have I missed something again?
>
> If you send all events to a single function with no indication of 
> where they
> came from, then you will certainly have difficulty figuring out what's 
> going
> on.  So, don't do that. ;)
>
> One solution is to have a difference instance for each connection and 
> to use
> a bound method as the event handler.  This gives you an obvious 
> per-instance
> place to keep state and such - on the instance.  There are other 
> solutions,
> of course, like passing in some extra object to the event handler so 
> you can
> differentiate between clients.
>
> If you use instances and bound methods, then client1's stanzas will be 
> sent
> to the instance you created to handle client1 and client2's stanzas 
> will be
> sent to the instance you created to handle client2.  This way, it 
> should be
> trivial to keep track of what's going on.
>
> Jean-Paul
>
> ___________
Thanks Jean-Paul, I will look into this instance & binded methods technique.

Gabriel



From andrewfr_ice at yahoo.com  Wed Feb 20 08:51:41 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 07:51:41 -0800 (PST)
Subject: [Twisted-Python] Question about Using Deferreds in ServerProtocol
	request Handler
Message-ID: <415902.67535.qm@web34215.mail.mud.yahoo.com>

Hi Folks:

Much of what I do with Stackless involves making calls
from server requests that in turn, make Twisted calls
that return a deferred.

i.e.,

class MyRequestHandler(http.Request):
    
    """
    let us create a tasklet to do work in the request
handler
    and allow the Reactor to continue
    """
    def process(self):
        t = stackless.tasklet(self.doWork)()
        
    def doWork(self):
        message = 
MyRequestHandler.processor.getPage("")      
        self.write(message)
        self.finish()
        return

I have been able to do the same thing with an
inlineCallback

class MyRequestHandler(http.Request):
    
    @defer.inlineCallbacks
    def process(self):
        try:
            result = yield
client.getPage("http://www.google.com")
        except Exception, err:
            log.err(err, "process getPage call
failed")
        else:
            self.setHeader('Content-Type',
'text/html') 
            self.write(result)
            self.finish()

(although this works, the technique is not general for
all protocols)

However, how is this done with just deferreds and
callbacks without Stackless or inlineCallbacks?

Cheers,
Andrew
 



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From exarkun at divmod.com  Wed Feb 20 09:18:28 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 11:18:28 -0500
Subject: [Twisted-Python] Question about Using Deferreds in
	ServerProtocol request Handler
In-Reply-To: <415902.67535.qm@web34215.mail.mud.yahoo.com>
Message-ID: <20080220161828.6859.1257093107.divmod.quotient.11246@ohm>

On Wed, 20 Feb 2008 07:51:41 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hi Folks:
>
>Much of what I do with Stackless involves making calls
>from server requests that in turn, make Twisted calls
>that return a deferred.
>
> [snip]
>
>I have been able to do the same thing with an
>inlineCallback
>
>class MyRequestHandler(http.Request):
>
>    @defer.inlineCallbacks
>    def process(self):
>        try:
>            result = yield client.getPage("http://www.google.com")
>        except Exception, err:
>            log.err(err, "process getPage call failed")
>        else:
>            self.setHeader('Content-Type', 'text/html')
>            self.write(result)
>            self.finish()
>
>(although this works, the technique is not general for
>all protocols)
>
>However, how is this done with just deferreds and
>callbacks without Stackless or inlineCallbacks?

inlineCallbacks just allows a syntactic transformation.  The above
definition of process is identical to this one:

    def process(self):
        def callback(result):
            self.setHeader('Content-Type', 'text/html')
            self.write(result)
            self.finish()
        def errback(err):
            err.trap(Exception)
            log.err(err, "process getPage call failed")
        try:
            d = client.getPage("http://www.google.com")
        except Exception:
            d = failure.Failure()
        d.addCallbacks(callback, errback)

Exactly the same thing happens in either case.  The difference is
that inlineCallbacks lets you implement the callback as the section
of a generator function after a yield statement and the errback as
the suite of an except statement enclosing a yield expression in the
generator function.  The transformation is almost (or maybe actually)
a mechanical one which just changes the structure of the code, not the
behavior it implements.  inlineCallbacks is still based on Deferreds,
they're just obscured from view slightly.

Jean-Paul



From andrewfr_ice at yahoo.com  Wed Feb 20 12:50:08 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 20 Feb 2008 11:50:08 -0800 (PST)
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question about Using
	in ServerProtocol request Handler
In-Reply-To: <E1JRsId-0006pX-Qn@cube.twistedmatrix.com>
Message-ID: <177670.19996.qm@web34210.mail.mud.yahoo.com>

Hi Jean-Paul:

>However, how is this done with just deferreds and
>callbacks without Stackless or inlineCallbacks?

Thanks for the response. And thanks for the
explanation of inlineCallbacks. Annotating your
example, I get  the following:

 def process(self):
        def callback(result):
            print "second"
            self.setHeader('Content-Type',
'text/html')
            self.write(result)
            self.finish()
        def errback(err):
            err.trap(Exception)
            log.err(err, "process getPage call
failed")
        try:
            d =
client.getPage("http://www.google.com")
        except Exception:
            d = failure.Failure()
        d.addCallbacks(callback, errback)
        print "first"

running this I get what I expected

"first"
"second"


This example I can follow. The server protocol handler
terminates. The callback eventually fires. Since the
callback has a reference to the request, it can write
back the response.

Bear with me, I am just starting to read up on
protocols... 

What I am unclear on, is why some Server Protocols
depend on 'return' and others don't (I assume with
HTTP, you can stream a response). What is the right
way to design a ServerProtocol? Is there an
'inclineCallback' friendly protocol

Unless I am fundamentally missing something it seems
that there are advantages to designing a Server
Protocol not to depend on 'return'

As I alluded to in other posts, I get confused over
this variation.

This is pyAMF

class pyAMFTest(TwistedGateway):
    def __init__(self):
        super(TubeTest, self).__init__()
        return
        
    def echo(self, x):
        print x
        return x

pretend I wish to do a callRemote(...)

def echo(self, x):
    def callback(result):
        print "second"
        """
        How do I return x?
        """        

    def errback(err):
        err.trap(Exception)
        log.err(err, "process getPage call failed")
    try:
        proxy = ....
        d = proxy.callRemote(...)
    except Exception:
        d = failure.Failure()
    d.addCallbacks(callback, errback)
    print "first"

In this case, how is 'x' transmitted back to the
reactor and the client? What is the proper way of
structuring this code. 

By the way, the inlineCallback and the Stackless
versions also have problems handling this.

This is starting to stimulate my interest in writing a
Stackless solution that handles this case....

Cheers,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From exarkun at divmod.com  Wed Feb 20 13:25:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 15:25:14 -0500
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question about
	Using in ServerProtocol request Handler
In-Reply-To: <177670.19996.qm@web34210.mail.mud.yahoo.com>
Message-ID: <20080220202514.6859.683784448.divmod.quotient.11275@ohm>

On Wed, 20 Feb 2008 11:50:08 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hi Jean-Paul:
>
>>However, how is this done with just deferreds and
>>callbacks without Stackless or inlineCallbacks?
>
>Thanks for the response. And thanks for the
>explanation of inlineCallbacks. Annotating your
>example, I get  the following:
>
> def process(self):
>        def callback(result):
>            print "second"
>            self.setHeader('Content-Type', 'text/html')
>            self.write(result)
>            self.finish()
>        def errback(err):
>            err.trap(Exception)
>            log.err(err, "process getPage call failed")
>        try:
>            d = client.getPage("http://www.google.com")
>        except Exception:
>            d = failure.Failure()
>        d.addCallbacks(callback, errback)
>        print "first"
>
>running this I get what I expected
>
>"first"
>"second"
>
>This example I can follow. The server protocol handler
>terminates. The callback eventually fires. Since the
>callback has a reference to the request, it can write
>back the response.
>
>Bear with me, I am just starting to read up on
>protocols...
>
>What I am unclear on, is why some Server Protocols
>depend on 'return' and others don't (I assume with
>HTTP, you can stream a response). What is the right
>way to design a ServerProtocol? Is there an
>'inclineCallback' friendly protocol

Depending on the value returned by a method is an API decision made
by whoever implemented the protocol.  They came to the decision, at
some point, that the convenient way for applications to specify the
result is to return it from a method.  Or, they didn't and provided
some other API for specifying results.

Basically, we're talking about how protocol actions get dispatched
and how the result of dispatching them is handled.  You can have a
dispatcher which calls a method and ignores the result, requiring
that the result be handed back through some explicit API.  An example
of this is twisted.web's Request class.  The process method of the
request is called.  The result is specified by calling the write
method (possibly more than once) and then the finish method.  The
return value from process is ignored.  Another kind of dispatcher
might take the return value of the function dispatched to and treat
it as the result.  It might support Deferreds or it might not. An
example of this is twisted.mail's POP3 server implementation (which
happens to support Deferreds in most places, but not all).

The only kind of dispatcher which is really hostile towards
inlineCallbacks is the kind which is hostile towards Deferreds in
general - ie, one which requires a return value and does not support
Deferreds.

>
>Unless I am fundamentally missing something it seems
>that there are advantages to designing a Server
>Protocol not to depend on 'return'

Not really.  It's just an API.  Unless the return value isn't allowed
to be a Deferred, there's little difference between using the return
value and ignoring it.

>
>As I alluded to in other posts, I get confused over
>this variation.
>
>This is pyAMF
>
>class pyAMFTest(TwistedGateway):
>    def __init__(self):
>        super(TubeTest, self).__init__()
>        return
>
>    def echo(self, x):
>        print x
>        return x
>
>pretend I wish to do a callRemote(...)
>
>def echo(self, x):
>    def callback(result):
>        print "second"
>        """
>        How do I return x?
>        """

You return x by returning x.  That is, `return x´. ;)  But see
below.

>
>    def errback(err):
>        err.trap(Exception)
>        log.err(err, "process getPage call failed")
>    try:
>        proxy = ....
>        d = proxy.callRemote(...)
>    except Exception:
>        d = failure.Failure()
>    d.addCallbacks(callback, errback)
>    print "first"

The function ends here, and the Deferred which will ultimately have
the result you're interested in has *not* been returned.  It should
have been so that the dispatcher (which, near as I can tell, does
support Deferreds) can get it.  So, `return d´ after the print.

>
>In this case, how is 'x' transmitted back to the
>reactor and the client? What is the proper way of
>structuring this code.

The reactor doesn't care.  This is all pyAMF stuff.  pyAMF accepts
Deferreds (again, near as I can tell) and treats their eventual
result as the response to the request, sending it off in whatever
way is appropriate for AMF.

Hope this helps,

Jean-Paul



From jml at mumak.net  Wed Feb 20 15:54:05 2008
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 21 Feb 2008 09:54:05 +1100
Subject: [Twisted-Python] How to say "reverted". (was Re: [Twisted-commits]
	r22628 - Revert r22624: regression in test_conch.)
Message-ID: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>

On Wed, Feb 20, 2008 at 8:41 PM, Thomas Herve
<therve at wolfwood.twistedmatrix.com> wrote:
> Author: therve
>  Date: Wed Feb 20 02:41:55 2008
>  New Revision: 22628
>
>  Removed:
>    trunk/twisted/conch/test/test_transport.py
>  Modified:
>    trunk/twisted/conch/manhole_ssh.py
>    trunk/twisted/conch/ssh/factory.py
>    trunk/twisted/conch/ssh/service.py
>    trunk/twisted/conch/ssh/transport.py
>    trunk/twisted/conch/ssh/userauth.py
>    trunk/twisted/conch/test/test_conch.py
>    trunk/twisted/conch/test/test_ssh.py
>
>  Log:
>  Revert r22624: regression in test_conch.
>
>  Refs #2678

Hello all,

Thanks to Thomas for being alert enough to spot this regression and
energetic enough to revert it. I'm very glad that we have people[1]
monitoring the test suite making sure that we can trust trunk.
However, I have two suggestions on how we can announce trunk reverts
better. I'm not picking on him in particular, this is just the first
revert for which I am detached enough to comment sensibly.

1. When reverting a commit to trunk, the commit message should explain
what the regression is.

The word 'regression' is used sometimes to mean 'test suite failure'
and other times to mean 'a feature that I liked works differently now'
or 'this is slower than it was'. If it's a test failure, it's useful
to know what test, and particularly whether or not the test was
related to the change. If it's not a test failure, it's good to know
why the "regression" is considered severe enough to back out the
change, rather than just fixing it in place.

2. Reverting someone's contribution is bad news for them. We should
break the bad news gently.

Backing out someone's changes can often send an unintended message of
blame, when we actually want to be encouraging people to contribute.
"Revert <revno>: regression in <file>." is terse, unspecific and
leaves too much unsaid. We can't do anything about the bad news, but
we can change the way we break it. Being more specific helps a lot, as
does describing what happens next (e.g. "I'll fix it up and land it
for you", "Can you please investigate the failure and fix the test,
I'll review the fix for you as soon as it's ready.")

jml

[1] I'll be even happier when we have *machines* monitoring the test
suite, but that's another email.



From exarkun at divmod.com  Wed Feb 20 16:06:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 20 Feb 2008 18:06:46 -0500
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
Message-ID: <20080220230646.6859.624297255.divmod.quotient.11299@ohm>

On Thu, 21 Feb 2008 09:54:05 +1100, Jonathan Lange <jml at mumak.net> wrote:
>
> [snip]
>
>1. When reverting a commit to trunk, the commit message should explain
>what the regression is.
>
>The word 'regression' is used sometimes to mean 'test suite failure'
>and other times to mean 'a feature that I liked works differently now'
>or 'this is slower than it was'. If it's a test failure, it's useful
>to know what test, and particularly whether or not the test was
>related to the change. If it's not a test failure, it's good to know
>why the "regression" is considered severe enough to back out the
>change, rather than just fixing it in place.
>

Yes, please.

>2. Reverting someone's contribution is bad news for them. We should
>break the bad news gently.
>
>Backing out someone's changes can often send an unintended message of
>blame, when we actually want to be encouraging people to contribute.
>"Revert <revno>: regression in <file>." is terse, unspecific and
>leaves too much unsaid. We can't do anything about the bad news, but
>we can change the way we break it. Being more specific helps a lot, as
>does describing what happens next (e.g. "I'll fix it up and land it
>for you", "Can you please investigate the failure and fix the test,
>I'll review the fix for you as soon as it's ready.")

Sounds great.

Of much less significance, but related and most people probably don't
know about it, "Reopens #1234" in the revert commit message will take
care of adding the commit message to the ticket and re-opening it.

Jean-Paul



From mithrandi at mithrandi.za.net  Wed Feb 20 17:38:56 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 21 Feb 2008 02:38:56 +0200
Subject: [Twisted-Python] Question about Using Deferreds in
	ServerProtocol request Handler
In-Reply-To: <20080220161828.6859.1257093107.divmod.quotient.11246@ohm>
References: <415902.67535.qm@web34215.mail.mud.yahoo.com>
	<20080220161828.6859.1257093107.divmod.quotient.11246@ohm>
Message-ID: <20080221003856.GB3464@mithrandi.net>

* Jean-Paul Calderone <exarkun at divmod.com> [2008-02-20 11:18:28 -0500]:

>        try:
>            d = client.getPage("http://www.google.com")
>        except Exception:
>            d = failure.Failure()

I guess this should be:

       try:
           d = client.getPage("http://www.google.com")
       except Exception:
           d = defer.fail()

Alternatively:

        d = maybeDeferred(client.getPage, "http://www.google.com")

although that's probably maybeDeferred() abuse.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080221/da723874/attachment.sig>

From therve at free.fr  Thu Feb 21 00:48:34 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Thu, 21 Feb 2008 08:48:34 +0100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
Message-ID: <200802210848.35368.therve@free.fr>


> Hello all,
>
> Thanks to Thomas for being alert enough to spot this regression and
> energetic enough to revert it. I'm very glad that we have people[1]
> monitoring the test suite making sure that we can trust trunk.
> However, I have two suggestions on how we can announce trunk reverts
> better. I'm not picking on him in particular, this is just the first
> revert for which I am detached enough to comment sensibly.
>
> 1. When reverting a commit to trunk, the commit message should explain
> what the regression is.
>
> The word 'regression' is used sometimes to mean 'test suite failure'
> and other times to mean 'a feature that I liked works differently now'
> or 'this is slower than it was'. If it's a test failure, it's useful
> to know what test, and particularly whether or not the test was
> related to the change. If it's not a test failure, it's good to know
> why the "regression" is considered severe enough to back out the
> change, rather than just fixing it in place.
>
> 2. Reverting someone's contribution is bad news for them. We should
> break the bad news gently.
>
> Backing out someone's changes can often send an unintended message of
> blame, when we actually want to be encouraging people to contribute.
> "Revert <revno>: regression in <file>." is terse, unspecific and
> leaves too much unsaid. We can't do anything about the bad news, but
> we can change the way we break it. Being more specific helps a lot, as
> does describing what happens next (e.g. "I'll fix it up and land it
> for you", "Can you please investigate the failure and fix the test,
> I'll review the fix for you as soon as it's ready.")

Thanks for insisting on that. I totally agree with you, but of course lazyness 
sometimes comes in the middle of the way. FWIW, I've contacted Paul before 
the revert, so I hope he did take it personaly :). As a matter of fact, I 
think the responsability of revert is the one of the reviewer, because it's 
the reviewer who gave an early go for the commit.

Thanks also to JP for the 'Reopens' feature. I've documented it on the 
ReviewProcess page, don't hesitate to modify it.

> [1] I'll be even happier when we have *machines* monitoring the test
> suite, but that's another email.

Currently, our test suite is a little bit too unreliable to do this 
(aka 'intermittent failures'). But maybe in a near future...

-- 
Thomas



From mailing_lists at evotex.ch  Thu Feb 21 01:13:04 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 09:13:04 +0100
Subject: [Twisted-Python] Help using
	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
Message-ID: <47BD3290.5090305@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 20 Feb 2008 16:19:52 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> And if I'm not mistaking, if I have multiple connections, then the 
>> events get mixed up (from my own tests anyways), the processing is 
>> not atomic. If I have let's say that I have :
>>
>> client1 : <test><header  id="1"/>
>> client2 : <test><header  id="2"/><feed name="myName">toto</feed></test>
>> client2 : <feed name="myName2">lala</feed></test>
>
> I think the 3rd line should be client1?
>
>>
>> my stanzas will get processed in that order, thus I can't even 
>> recreate the message (without a complicated state machine of some kind).
>>
>> I'm kind of mixed up, because when using a thread based network 
>> framework, one tcp connection = one thread, thus the protocol 
>> execution is atomic, but this doesn't seam to be the case with 
>> Twisted (event based), is this correct or have I missed something again?
>
> If you send all events to a single function with no indication of 
> where they
> came from, then you will certainly have difficulty figuring out what's 
> going
> on.  So, don't do that. ;)
>
> One solution is to have a difference instance for each connection and 
> to use
> a bound method as the event handler.  This gives you an obvious 
> per-instance
> place to keep state and such - on the instance.  

Jean-Paul, sorry for the dumb question, when you mean a different 
instance, you mean a thread? What is a bound method? I'm fairly new to 
python and very new to twisted (as you can probably tell).

Thank you! Gabriel

> There are other solutions,
> of course, like passing in some extra object to the event handler so 
> you can
> differentiate between clients.
>
> If you use instances and bound methods, then client1's stanzas will be 
> sent
> to the instance you created to handle client1 and client2's stanzas 
> will be
> sent to the instance you created to handle client2.  This way, it 
> should be
> trivial to keep track of what's going on.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Thu Feb 21 01:47:02 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 21 Feb 2008 19:47:02 +1100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <200802210848.35368.therve@free.fr>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
	<200802210848.35368.therve@free.fr>
Message-ID: <20080221084702.GD29155@steerpike.home.puzzling.org>

Thomas Hervé wrote:
[...]
> > [1] I'll be even happier when we have *machines* monitoring the test
> > suite, but that's another email.
> 
> Currently, our test suite is a little bit too unreliable to do this 
> (aka 'intermittent failures'). But maybe in a near future...

We've had intermittent failures for *years*.  I doubt that'll get solved in a
near future without some sort of significant change to how we do things.

Here's a thought experiment: one possibility would be completely automate the
running of the test suite, as jml is suggesting, e.g. by using a commit hook (or
a “commit bot” like PQM) that will run the test suite before allowing a commit
to trunk.  Then intermittent failures become much more intolerable, because they
will regularly frustrate developers rather than being something you can usually
ignore.  Thus people will be much more motivated to find solutions to our
intermittent tests (whether by fixing the offending tests, or disabling them, or
something else).

I'm not sure it'd be worth the effort, but it's interesting to think about...

-Andrew.




From mailing_lists at evotex.ch  Thu Feb 21 02:31:16 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 10:31:16 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
 multiple clients with independent processing
Message-ID: <47BD44E4.7080508@evotex.ch>

Hello,

I am new to Twisted and I'm trying to write a server that accepts 
multiple client connections
and processes them separately. I *think*  this is done with a protocol 
instance per client connection, but I may be 100% wrong. I don't really 
understand how to do this with twisted. In a threaded server I would :

1) wait for a client connection
2) create a thread and hand it the client connection

then the server waits again for the next client connection, the thread 
executes the protocol, e.g. dialogs with the client until disconnection.

I have done this so far using Twisted :

1) created a protocol (the one that would be executed in a separate 
thread in the example above)
2) created a factory and listen for incoming connections.

This works great if I have one connection, but I need multiple 
connections being processed in parallel (simulated parallelism I guess)

Could someone please explain how Twisted works for this or point me to 
some documentation explaining this? I have searched the docs on the 
twisted website and google, but I can't find anything explaining this.

Thank you,
Gabriel



From stephen at thorne.id.au  Thu Feb 21 02:53:47 2008
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Feb 2008 19:53:47 +1000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD44E4.7080508@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>
Message-ID: <AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>

On 21/02/2008, at 7:31 PM, Gabriel Rossetti wrote:
>
> I have done this so far using Twisted :
>
> 1) created a protocol (the one that would be executed in a separate  
> thread in the example above)
> 2) created a factory and listen for incoming connections.
>
> This works great if I have one connection, but I need multiple  
> connections being processed in parallel (simulated parallelism I  
> guess)
>

Twisted handles the multiple connections by being event based. When a  
networking event occurs, you can receive notifications of those events.

For instance:

A new connection is established -> Factory is told, and has the  
ability to create and associate a protocol instance with that  
connection.
Data comes over a connection -> The Protocol object is told via the  
dataReceived method.
A connection is closed -> The Protocol is told via there  
connectionLost method.

Each time these methods are called, you are expected to return from  
them, not do things in while loops. To get more data, you just return  
control to the event loop (aka reactor.run()) and wait for futher  
notifications.

In order to send data, you send it to protocol.transport.write 
(allmydata), and the event loop takes the responsibility of sending  
that data to the other end of the connection.

I hope that helps you with the concepts involved here. I suggest  
playing around with the Echo server example if you want a readable  
example you can poke and prod.

Regards,
Stephen Thorne



From mailing_lists at evotex.ch  Thu Feb 21 03:07:24 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 11:07:24 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
References: <47BD44E4.7080508@evotex.ch>
	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
Message-ID: <47BD4D5C.2070709@evotex.ch>

Stephen Thorne wrote:
> On 21/02/2008, at 7:31 PM, Gabriel Rossetti wrote:
>>
>> I have done this so far using Twisted :
>>
>> 1) created a protocol (the one that would be executed in a separate 
>> thread in the example above)
>> 2) created a factory and listen for incoming connections.
>>
>> This works great if I have one connection, but I need multiple 
>> connections being processed in parallel (simulated parallelism I guess)
>>
>
> Twisted handles the multiple connections by being event based. When a 
> networking event occurs, you can receive notifications of those events.
>
> For instance:
>
> A new connection is established -> Factory is told, and has the 
> ability to create and associate a protocol instance with that connection.
> Data comes over a connection -> The Protocol object is told via the 
> dataReceived method.
> A connection is closed -> The Protocol is told via there 
> connectionLost method.
>
> Each time these methods are called, you are expected to return from 
> them, not do things in while loops. To get more data, you just return 
> control to the event loop (aka reactor.run()) and wait for futher 
> notifications.
>
> In order to send data, you send it to 
> protocol.transport.write(allmydata), and the event loop takes the 
> responsibility of sending that data to the other end of the connection.
>
> I hope that helps you with the concepts involved here. I suggest 
> playing around with the Echo server example if you want a readable 
> example you can poke and prod.
>
> Regards,
> Stephen Thorne
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Thank you Stephan, ok, but is an instance of a protocol created for 
every connection? I tried to add data received  by the protocol to a 
list, and if I get multiple connections that list is filled with all the 
connection's data, like if only one instance existed.

Regards,
Gabriel Rossetti



From p.mayers at imperial.ac.uk  Thu Feb 21 03:32:32 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 10:32:32 +0000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD4D5C.2070709@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>
	<47BD4D5C.2070709@evotex.ch>
Message-ID: <47BD5340.80206@imperial.ac.uk>


> Thank you Stephan, ok, but is an instance of a protocol created for 
> every connection? I tried to add data received  by the protocol to a 

For TCP connections, assuming everything is coded correctly, yes.

> list, and if I get multiple connections that list is filled with all the 
> connection's data, like if only one instance existed.

You didn't by any chance use a class variable did you e.g.:

class foo(...):
   my_data = []
   def dataReceived(self, data):
     self.my_data.append(data)

...is wrong. "my_data" is shared by all instances of the class and is 
mutable. You'll need to create instance variables, usually (I believe) 
as part of the factory process.

If you can write a minimal example showing the problem, someone can 
probably tell you what you're doing wrong.



From therve at free.fr  Thu Feb 21 03:45:46 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 21 Feb 2008 11:45:46 +0100
Subject: [Twisted-Python] How to say "reverted". (was Re:
	[Twisted-commits] r22628 - Revert r22624: regression in test_conch.)
In-Reply-To: <20080221084702.GD29155@steerpike.home.puzzling.org>
References: <d06a5cd30802201454j5085325alb529b557ce838017@mail.gmail.com>
	<200802210848.35368.therve@free.fr>
	<20080221084702.GD29155@steerpike.home.puzzling.org>
Message-ID: <20080221114546.euvgnjrdw4o8k0sg@wasabox.wasabout.net>

Quoting Andrew Bennetts <andrew-twisted at puzzling.org>:

> Thomas Hervé wrote:
> [...]
>> > [1] I'll be even happier when we have *machines* monitoring the test
>> > suite, but that's another email.
>>
>> Currently, our test suite is a little bit too unreliable to do this
>> (aka 'intermittent failures'). But maybe in a near future...
>
> We've had intermittent failures for *years*.  I doubt that'll get solved in a
> near future without some sort of significant change to how we do things.
>
> Here's a thought experiment: one possibility would be completely automate the
> running of the test suite, as jml is suggesting, e.g. by using a   
> commit hook (or
> a ?commit bot? like PQM) that will run the test suite before   
> allowing a commit
> to trunk.  Then intermittent failures become much more intolerable,   
> because they
> will regularly frustrate developers rather than being something you   
> can usually
> ignore.  Thus people will be much more motivated to find solutions to our
> intermittent tests (whether by fixing the offending tests, or   
> disabling them, or
> something else).
>
> I'm not sure it'd be worth the effort, but it's interesting to think about...


I think it definitely worth the effort. As I see it, maybe we could  
split the effort in 2 parts:
  * having one commit bot for our best supported platform. I think  
debian-py2.4-select has been free of intermittent failure for a bit  
now. Maybe we could trust it enough to disallow commits that breaks  
it. The other advantage for this is that we could formalize the merge  
process a bit more: for example, with a web page where you specify the  
branch name, authors, reviewers, tickets fixed, etc. It looks like  
what PQM is doing.
  * having better notifications for trunk commits that generate failed  
runs. Today, this work is basically done by JP looking at the buildbot  
and remembering the failures and tickets linked to them, and possibly  
creating a new ticket if it's not an already identified problem. It's  
not only cumbersome but probably let some errors pass through.


We could look at this after the release :).

-- 
Thomas





From p.mayers at imperial.ac.uk  Thu Feb 21 04:31:40 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 11:31:40 +0000
Subject: [Twisted-Python] Help
	using	XmlStreamFactory	&	XmlStream	:	XPathQuery error?
In-Reply-To: <47BD3290.5090305@evotex.ch>
References: <20080220153554.6859.1592074008.divmod.quotient.11235@ohm>
	<47BD3290.5090305@evotex.ch>
Message-ID: <47BD611C.3050700@imperial.ac.uk>


>>
>> One solution is to have a difference instance for each connection and 
>> to use
>> a bound method as the event handler.  This gives you an obvious 
>> per-instance
>> place to keep state and such - on the instance.  
> 
> Jean-Paul, sorry for the dumb question, when you mean a different 
> instance, you mean a thread? What is a bound method? I'm fairly new to 
> python and very new to twisted (as you can probably tell).


A bound method is a function on a class instance. e.g.:

 >>> class A:
...   def func(self):
...     pass
...
 >>> aa = A()

 >>> A.func
<unbound method A.func>
 >>> aa.func
<bound method A.func of <__main__.A instance at 0x2aaaaab423b0>>

A.func is the unbound method - it's a function object, defined in the 
class, but the class is not instantiated so it's unbound.

aa.func is a bound version of A.func - it's bound to the instance "aa" 
and will fill in the "self" argument when called.


Think about it like this:

When you use 1 thread per connection, your "state" is usually stored as 
local variables inside a function i.e. on the stack.

When you use 1 thread for all connections, your "state" needs to be 
attached to the connection e.g. as instance variables of the protocol or 
an attached object.

So, you might do this:

from twisted.protocols import basic
from twisted.internet import protocol, reactor

class MyProto(basic.LineReceiver):
     def lineReceived(self, line):
         self.data.append(line)

     def connectionLost(self, reason):
         print "my data was", '\n'.join(self.data)

class MyFactory(protocol.ServerFactory):
     protocol = MyProto
     def buildProtocol(self, *pargs, **kwargs):
         p = protocol.ServerFactory.buildProtocol(self, *pargs, **kwargs)
         p.data = []
         return p

reactor.listenTCP(8000, MyFactory())
reactor.run()

Relating to your other email - a similar technique works for more 
complex things e.g.

class MyProto(...)
  def dataReceived(self, data):
   self.parser.push(data)

class MyFactory(...)
  def buildProtocol(...)
    p = ..
    p.parser = XmlParser()




From mailing_lists at evotex.ch  Thu Feb 21 07:06:43 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 15:06:43 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD5340.80206@imperial.ac.uk>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>
	<47BD5340.80206@imperial.ac.uk>
Message-ID: <47BD8573.8000505@evotex.ch>

Phil Mayers wrote:
>
>> Thank you Stephan, ok, but is an instance of a protocol created for 
>> every connection? I tried to add data received  by the protocol to a 
>
> For TCP connections, assuming everything is coded correctly, yes.
>
>> list, and if I get multiple connections that list is filled with all 
>> the connection's data, like if only one instance existed.
>
> You didn't by any chance use a class variable did you e.g.:
>
> class foo(...):
>   my_data = []
>   def dataReceived(self, data):
>     self.my_data.append(data)
>
Yes, that must be it :

    class XmlStreamTestSrv(xmlstream.XmlStream):

        def __init__(self):
            xmlstream.XmlStream.__init__(self)
            self.message = []
    ...

even though I though that in python if you put a "self." in front it was 
an instance variable and not a class variable. I have been also having 
some strange problems, like if I overload

    def connectionMade(self):

it never gets called, even though the parent class (XmlStream) also has 
it, and also I can't call self.transport.getPeer() or 
xmlstream.XmlStream.transport.getPeer(), I get :

    print 'Connection from %s!' % 
str(xmlstream.XmlStream.transport.getPeer())
    exceptions.AttributeError: 'NoneType' object has no attribute 'getPeer'

so maybe something is wrong somewhere.
> ...is wrong. "my_data" is shared by all instances of the class and is 
> mutable. You'll need to create instance variables, usually (I believe) 
> as part of the factory process.
Ok, I'll look into that, thanks.
>
> If you can write a minimal example showing the problem, someone can 
> probably tell you what you're doing wrong.
>
Ok, thanks, here's a minimal example :

    from twisted.words.xish import xmlstream, domish
    from twisted.internet import reactor, protocol
    from twisted.internet.protocol import Protocol, Factory
    from twisted.words.xish import xpath


    class XmlStreamTestSrv(xmlstream.XmlStream):

        def __init__(self):
            xmlstream.XmlStream.__init__(self)
            self.message = []

        def connectionMade(self): # never called, why?
            print 'Connected :' #, string(self.transport.getPeer().host)

        def _onHeader(self, element):
            #print "got header from % : %s" % 
(str(self.transport.getPeer().host), element.toXml())
            self.message.append(element.toXml())

        def _connected(self, xs):
            #print 'Connection from %s!' % 
str(xmlstream.XmlStream.transport.getPeer().host)
            xs.addObserver("/header", self._onHeader)

    if __name__ == "__main__":

        c = XmlStreamTestSrv()

        f = xmlstream.XmlStreamFactory()
        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)

        reactor.listenTCP(4321, f)
        reactor.run()


Regards,
Gabriel Rossetti



From p.mayers at imperial.ac.uk  Thu Feb 21 07:52:19 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 21 Feb 2008 14:52:19 +0000
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD8573.8000505@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>
	<47BD8573.8000505@evotex.ch>
Message-ID: <47BD9023.9010501@imperial.ac.uk>

>> You didn't by any chance use a class variable did you e.g.:
>>
>> class foo(...):
>>   my_data = []
>>   def dataReceived(self, data):
>>     self.my_data.append(data)
>>
> Yes, that must be it :
> 
>    class XmlStreamTestSrv(xmlstream.XmlStream):
> 
>        def __init__(self):
>            xmlstream.XmlStream.__init__(self)
>            self.message = []

No, this is fine, as you say setting "self.foo" creates an instance 
variable.

I personally don't use __init__ methods of the protocol because I 
believe some protocols make complex use of this, but it should be fine.

>    ...
> 
> even though I though that in python if you put a "self." in front it was 
> an instance variable and not a class variable. I have been also having 
> some strange problems, like if I overload
> 
>    def connectionMade(self):
> 
> it never gets called, even though the parent class (XmlStream) also has 
> it, and also I can't call self.transport.getPeer() or 
> xmlstream.XmlStream.transport.getPeer(), I get :
> 
>    print 'Connection from %s!' % 
> str(xmlstream.XmlStream.transport.getPeer())
>    exceptions.AttributeError: 'NoneType' object has no attribute 'getPeer'
> 
> so maybe something is wrong somewhere.

It sounds like the protocol isn't being hooked up to the transport.

>> ...is wrong. "my_data" is shared by all instances of the class and is 
>> mutable. You'll need to create instance variables, usually (I believe) 
>> as part of the factory process.
> Ok, I'll look into that, thanks.
>>
>> If you can write a minimal example showing the problem, someone can 
>> probably tell you what you're doing wrong.
>>
> Ok, thanks, here's a minimal example :
> 
>    from twisted.words.xish import xmlstream, domish
>    from twisted.internet import reactor, protocol
>    from twisted.internet.protocol import Protocol, Factory
>    from twisted.words.xish import xpath
> 
> 
>    class XmlStreamTestSrv(xmlstream.XmlStream):
> 
>        def __init__(self):
>            xmlstream.XmlStream.__init__(self)
>            self.message = []
> 
>        def connectionMade(self): # never called, why?
>            print 'Connected :' #, string(self.transport.getPeer().host)
> 
>        def _onHeader(self, element):
>            #print "got header from % : %s" % 
> (str(self.transport.getPeer().host), element.toXml())
>            self.message.append(element.toXml())
> 
>        def _connected(self, xs):
>            #print 'Connection from %s!' % 
> str(xmlstream.XmlStream.transport.getPeer().host)
>            xs.addObserver("/header", self._onHeader)
> 
>    if __name__ == "__main__":
> 
>        c = XmlStreamTestSrv()
> 
>        f = xmlstream.XmlStreamFactory()
>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
> 
>        reactor.listenTCP(4321, f)
>        reactor.run()

Ah - you need to set the "protocol" attribute on the factory to the 
protocol *class*, and then when a connection is made the class will be 
instantiated and connected to the transport. This is why self.transport 
is None, and because you're using an instance of the protocol, the data 
is getting squashed together. Do this:

f = xmlstream.XmlStreamFactory()
f.protocol = XmlStreamTestSrv
reactor.listenTCP(4321, f)
reactor.run()




From mailing_lists at evotex.ch  Thu Feb 21 08:42:44 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 16:42:44 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD9023.9010501@imperial.ac.uk>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>	<47BD8573.8000505@evotex.ch>
	<47BD9023.9010501@imperial.ac.uk>
Message-ID: <47BD9BF4.5030408@evotex.ch>

Phil Mayers wrote:
>>> You didn't by any chance use a class variable did you e.g.:
>>>
>>> class foo(...):
>>>   my_data = []
>>>   def dataReceived(self, data):
>>>     self.my_data.append(data)
>>>
>> Yes, that must be it :
>>
>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>
>>        def __init__(self):
>>            xmlstream.XmlStream.__init__(self)
>>            self.message = []
>
> No, this is fine, as you say setting "self.foo" creates an instance 
> variable.
>
> I personally don't use __init__ methods of the protocol because I 
> believe some protocols make complex use of this, but it should be fine.
>
>>    ...
>>
>> even though I though that in python if you put a "self." in front it 
>> was an instance variable and not a class variable. I have been also 
>> having some strange problems, like if I overload
>>
>>    def connectionMade(self):
>>
>> it never gets called, even though the parent class (XmlStream) also 
>> has it, and also I can't call self.transport.getPeer() or 
>> xmlstream.XmlStream.transport.getPeer(), I get :
>>
>>    print 'Connection from %s!' % 
>> str(xmlstream.XmlStream.transport.getPeer())
>>    exceptions.AttributeError: 'NoneType' object has no attribute 
>> 'getPeer'
>>
>> so maybe something is wrong somewhere.
>
> It sounds like the protocol isn't being hooked up to the transport.
>
>>> ...is wrong. "my_data" is shared by all instances of the class and 
>>> is mutable. You'll need to create instance variables, usually (I 
>>> believe) as part of the factory process.
>> Ok, I'll look into that, thanks.
>>>
>>> If you can write a minimal example showing the problem, someone can 
>>> probably tell you what you're doing wrong.
>>>
>> Ok, thanks, here's a minimal example :
>>
>>    from twisted.words.xish import xmlstream, domish
>>    from twisted.internet import reactor, protocol
>>    from twisted.internet.protocol import Protocol, Factory
>>    from twisted.words.xish import xpath
>>
>>
>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>
>>        def __init__(self):
>>            xmlstream.XmlStream.__init__(self)
>>            self.message = []
>>
>>        def connectionMade(self): # never called, why?
>>            print 'Connected :' #, string(self.transport.getPeer().host)
>>
>>        def _onHeader(self, element):
>>            #print "got header from % : %s" % 
>> (str(self.transport.getPeer().host), element.toXml())
>>            self.message.append(element.toXml())
>>
>>        def _connected(self, xs):
>>            #print 'Connection from %s!' % 
>> str(xmlstream.XmlStream.transport.getPeer().host)
>>            xs.addObserver("/header", self._onHeader)
>>
>>    if __name__ == "__main__":
>>
>>        c = XmlStreamTestSrv()
>>
>>        f = xmlstream.XmlStreamFactory()
>>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
>>
>>        reactor.listenTCP(4321, f)
>>        reactor.run()
>
> Ah - you need to set the "protocol" attribute on the factory to the 
> protocol *class*, and then when a connection is made the class will be 
> instantiated and connected to the transport. This is why 
> self.transport is None, and because you're using an instance of the 
> protocol, the data is getting squashed together. Do this:
>
> f = xmlstream.XmlStreamFactory()
> f.protocol = XmlStreamTestSrv
> reactor.listenTCP(4321, f)
> reactor.run()
>
Ahh, ok, I get it, and I should therefor subclass 
xmlstream.XmlStreamFactory and add the bootstrap there, something like :

    class MyXmlStreamFactory(xmlstream.XmlStreamFactory):

        protocol = XmlStreamTestSrv

        def buildProtocol(self, *pargs, **kwargs):
            p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
**kwargs)
            addBootstrap(xmlstream.STREAM_START_EVENT, p._connected)

            return p

Regards,
Gabriel Rossetti



From mailing_lists at evotex.ch  Thu Feb 21 09:05:32 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 17:05:32 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BD9BF4.5030408@evotex.ch>
References: <47BD44E4.7080508@evotex.ch>	<AB920B5A-0DD7-40B1-A845-C9552E088AEA@thorne.id.au>	<47BD4D5C.2070709@evotex.ch>	<47BD5340.80206@imperial.ac.uk>	<47BD8573.8000505@evotex.ch>	<47BD9023.9010501@imperial.ac.uk>
	<47BD9BF4.5030408@evotex.ch>
Message-ID: <47BDA14C.9070103@evotex.ch>

Gabriel Rossetti wrote:
> Phil Mayers wrote:
>>>> You didn't by any chance use a class variable did you e.g.:
>>>>
>>>> class foo(...):
>>>>   my_data = []
>>>>   def dataReceived(self, data):
>>>>     self.my_data.append(data)
>>>>
>>> Yes, that must be it :
>>>
>>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>>
>>>        def __init__(self):
>>>            xmlstream.XmlStream.__init__(self)
>>>            self.message = []
>>
>> No, this is fine, as you say setting "self.foo" creates an instance 
>> variable.
>>
>> I personally don't use __init__ methods of the protocol because I 
>> believe some protocols make complex use of this, but it should be fine.
>>
>>>    ...
>>>
>>> even though I though that in python if you put a "self." in front it 
>>> was an instance variable and not a class variable. I have been also 
>>> having some strange problems, like if I overload
>>>
>>>    def connectionMade(self):
>>>
>>> it never gets called, even though the parent class (XmlStream) also 
>>> has it, and also I can't call self.transport.getPeer() or 
>>> xmlstream.XmlStream.transport.getPeer(), I get :
>>>
>>>    print 'Connection from %s!' % 
>>> str(xmlstream.XmlStream.transport.getPeer())
>>>    exceptions.AttributeError: 'NoneType' object has no attribute 
>>> 'getPeer'
>>>
>>> so maybe something is wrong somewhere.
>>
>> It sounds like the protocol isn't being hooked up to the transport.
>>
>>>> ...is wrong. "my_data" is shared by all instances of the class and 
>>>> is mutable. You'll need to create instance variables, usually (I 
>>>> believe) as part of the factory process.
>>> Ok, I'll look into that, thanks.
>>>>
>>>> If you can write a minimal example showing the problem, someone can 
>>>> probably tell you what you're doing wrong.
>>>>
>>> Ok, thanks, here's a minimal example :
>>>
>>>    from twisted.words.xish import xmlstream, domish
>>>    from twisted.internet import reactor, protocol
>>>    from twisted.internet.protocol import Protocol, Factory
>>>    from twisted.words.xish import xpath
>>>
>>>
>>>    class XmlStreamTestSrv(xmlstream.XmlStream):
>>>
>>>        def __init__(self):
>>>            xmlstream.XmlStream.__init__(self)
>>>            self.message = []
>>>
>>>        def connectionMade(self): # never called, why?
>>>            print 'Connected :' #, string(self.transport.getPeer().host)
>>>
>>>        def _onHeader(self, element):
>>>            #print "got header from % : %s" % 
>>> (str(self.transport.getPeer().host), element.toXml())
>>>            self.message.append(element.toXml())
>>>
>>>        def _connected(self, xs):
>>>            #print 'Connection from %s!' % 
>>> str(xmlstream.XmlStream.transport.getPeer().host)
>>>            xs.addObserver("/header", self._onHeader)
>>>
>>>    if __name__ == "__main__":
>>>
>>>        c = XmlStreamTestSrv()
>>>
>>>        f = xmlstream.XmlStreamFactory()
>>>        #f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, c._connected)
>>>        f.addBootstrap(xmlstream.STREAM_START_EVENT, c._connected)
>>>
>>>        reactor.listenTCP(4321, f)
>>>        reactor.run()
>>
>> Ah - you need to set the "protocol" attribute on the factory to the 
>> protocol *class*, and then when a connection is made the class will 
>> be instantiated and connected to the transport. This is why 
>> self.transport is None, and because you're using an instance of the 
>> protocol, the data is getting squashed together. Do this:
>>
>> f = xmlstream.XmlStreamFactory()
>> f.protocol = XmlStreamTestSrv
>> reactor.listenTCP(4321, f)
>> reactor.run()
>>
> Ahh, ok, I get it, and I should therefor subclass 
> xmlstream.XmlStreamFactory and add the bootstrap there, something like :
>
>    class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>
>        protocol = XmlStreamTestSrv
>
>        def buildProtocol(self, *pargs, **kwargs):
>            p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
> **kwargs)
>            addBootstrap(xmlstream.STREAM_START_EVENT, p._connected)
>
>            return p
>
> Regards,
> Gabriel Rossetti
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Sorry, I made a mistake, that should be :


   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):

       protocol = XmlStreamTestSrv

       def buildProtocol(self, *pargs, **kwargs):
           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
**kwargs)
           
xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
p._connected)

           return p

but I get this error :

    File "test.py", line 91, in buildProtocol
    
xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
p._connected)
    exceptions.AttributeError: XmlStream instance has no attribute 
'_connected'

isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a XmlStream?

Gabriel



From exarkun at divmod.com  Thu Feb 21 09:22:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 21 Feb 2008 11:22:06 -0500
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <47BDA14C.9070103@evotex.ch>
Message-ID: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>

On Thu, 21 Feb 2008 17:05:32 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Sorry, I made a mistake, that should be :
>
>
>   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>
>       protocol = XmlStreamTestSrv
>
>       def buildProtocol(self, *pargs, **kwargs):
>           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
>**kwargs)
>xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>p._connected)
>
>           return p
>
>but I get this error :
>
>    File "test.py", line 91, in buildProtocol
>    xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>p._connected)
>    exceptions.AttributeError: XmlStream instance has no attribute 
>'_connected'
>
>isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a XmlStream?
>

In Twisted 2.5, XmlStreamFactory ignores its `protocol´ attribute.  In the
next release, it will respect it.  Until then, you'll have to instantiate
the protocol yourself.  This is quite simple.  The base implementation of
buildProtocol in current trunk at HEAD just does this:

    def buildProtocol(self, addr):
        """
        Create an instance of XmlStream.

        The returned instance will have bootstrap event observers registered
        and will proceed to handle input on an incoming connection.
        """
        xs = self.protocol(*self.args, **self.kwargs)
        xs.factory = self
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)
        return xs

Jean-Paul



From mailing_lists at evotex.ch  Thu Feb 21 09:33:30 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 21 Feb 2008 17:33:30 +0100
Subject: [Twisted-Python] Question about writing a server that accepts
	multiple clients with independent processing
In-Reply-To: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>
References: <20080221162206.6859.1035937359.divmod.quotient.11598@ohm>
Message-ID: <47BDA7DA.1030108@evotex.ch>

Jean-Paul Calderone wrote:
> On Thu, 21 Feb 2008 17:05:32 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> Sorry, I made a mistake, that should be :
>>
>>
>>   class MyXmlStreamFactory(xmlstream.XmlStreamFactory):
>>
>>       protocol = XmlStreamTestSrv
>>
>>       def buildProtocol(self, *pargs, **kwargs):
>>           p = xmlstream.XmlStreamFactory.buildProtocol(self, *pargs, 
>> **kwargs)
>> xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>> p._connected)
>>
>>           return p
>>
>> but I get this error :
>>
>>    File "test.py", line 91, in buildProtocol
>>    
>> xmlstream.XmlStreamFactory.addBootstrap(xmlstream.STREAM_START_EVENT, 
>> p._connected)
>>    exceptions.AttributeError: XmlStream instance has no attribute 
>> '_connected'
>>
>> isn't p supposed to be a XmlStreamTestSrv? Why does it say it's a 
>> XmlStream?
>>
>
> In Twisted 2.5, XmlStreamFactory ignores its `protocol´ attribute.  In 
> the
> next release, it will respect it.  Until then, you'll have to instantiate
> the protocol yourself.  This is quite simple.  The base implementation of
> buildProtocol in current trunk at HEAD just does this:
>
>    def buildProtocol(self, addr):
>        """
>        Create an instance of XmlStream.
>
>        The returned instance will have bootstrap event observers 
> registered
>        and will proceed to handle input on an incoming connection.
>        """
>        xs = self.protocol(*self.args, **self.kwargs)
>        xs.factory = self
>        for event, fn in self.bootstraps:
>            xs.addObserver(event, fn)
>        return xs
>
> Jean-Paul
>
Ahh, ok, so using will never work :-)

ok, I'll do that then, thanks!

Gabriel



From andrewfr_ice at yahoo.com  Thu Feb 21 15:00:07 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 21 Feb 2008 14:00:07 -0800 (PST)
Subject: InlineCallback Friendly ? Re: [Twisted-Python] Question
In-Reply-To: <E1JS6YK-0001He-JD@cube.twistedmatrix.com>
Message-ID: <390541.42037.qm@web34214.mail.mud.yahoo.com>

Hi Jean-Paul:

>Depending on the value returned by a method is an API
>decision made by whoever implemented the protocol.

...

>The only kind of dispatcher which is really hostile
>towards inlineCallbacks is the kind which is hostile
>towards Deferreds in general - ie, one which requires
>a return value and does not support Deferreds.

This is extremely *helpful*. From reading the
"Evolution of Finger" paper, I am realising that
Deferreds are also used in ServerProtocols (this makes
sense).

>Not really.  It's just an API.  Unless the return
>value isn't allowed to be a Deferred, there's little
>difference between using the return
>value and ignoring it.

...

>The reactor doesn't care.  This is all pyAMF stuff. 
>pyAMF accepts Deferreds (again, near as I can tell)
>and treats their eventual result as the response to
>the request, sending it off in whatever
>way is appropriate for AMF.

I notice that I am using an old version of pyAMF. When
I tried callbacks, a string representation of the
Deferred was sent back to my client. Looking at the
latest version (I can't install and use it right now),
I see lines like "A Twisted Friendly implement"
version and __call__ returns a deferred.

Once again Jean-Paul, I find your explanation super
helpful and save me time going down the wrong path. 

Cheers,
Andrew




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From phil-twisted at tuxeo.org  Fri Feb 22 12:54:30 2008
From: phil-twisted at tuxeo.org (Philippe Frycia)
Date: Fri, 22 Feb 2008 20:54:30 +0100
Subject: [Twisted-Python] How to make a custom transport based on
	sendmsg/recvmsg?
In-Reply-To: <87mypyqaq0.fsf@hbox.dyndns.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>	<47B9B3A0.3050909@imperial.ac.uk>
	<87mypyqaq0.fsf@hbox.dyndns.org>
Message-ID: <47BF2876.2060804@tuxeo.org>

Hi,

I would like to make a custom protocol, based on Unix sockets, that is
able to send and receive file descriptors in addition to regular
"stream" data.
At the low level, I can do this with a patched version of eunuchs, that
adds sendmsg() and recvmsg() functionality to python.

I have tried to find my way in the Twisted API documentation and in the
sources, and as far as I found out, I have to override the doWrite()
method of the abstract.FileDescriptor class, and the doRead() method of
one of its subclasses.


The only way I have found until now is to do this in the Protocol
subclass like this:

class TLVProtocol(Protocol):
    def doWrite(self):
        if len(self.tlvstosend)==0:
            self.transport.stopWriting()
            return 0
        tlv=self.tlvstosend.pop(0)
        (files,ancillary)=tlv.encode()
        sendmsg(self.transport.socket.fileno(), data, ancillary=ancillary)

    def doRead(self):
        (data, dummy, dummy, ancillary) =
recvmsg(self.transport.socket.fileno())
        if len(data)==0:
            return 0
        tlv=encode(data, ancillary)
        .... # process tlv object

    def connectionMade(self):
        self.tlvstosend=[]
        self.transport.doWrite=self.doWrite
        self.transport.doRead=self.doRead
        ...

    def sendtlv(self, tlv):
        self.tlvstosend.append(tlv)
        self.transport.startWriting()



Some of the return values are not completed yet (EOF, ...).
Am I completely on the wrong track here ?
If not, what other methods of self.transport do I need to override ?
If yes, what is the correct way to do this ?

Thanks.




From drew.smathers at gmail.com  Fri Feb 22 14:35:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 22 Feb 2008 16:35:52 -0500
Subject: [Twisted-Python] How to make a custom transport based on
	sendmsg/recvmsg?
In-Reply-To: <47BF2876.2060804@tuxeo.org>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>
	<47B9B3A0.3050909@imperial.ac.uk> <87mypyqaq0.fsf@hbox.dyndns.org>
	<47BF2876.2060804@tuxeo.org>
Message-ID: <368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>

On Fri, Feb 22, 2008 at 2:54 PM, Philippe Frycia <phil-twisted at tuxeo.org> wrote:
> Hi,
>
>  I would like to make a custom protocol, based on Unix sockets, that is
>  able to send and receive file descriptors in addition to regular
>  "stream" data.

You should not make assumptions about the transport layer in your
protocol implementation - be it Unix domain sockets, TCP, etc.

>  At the low level, I can do this with a patched version of eunuchs, that
>  adds sendmsg() and recvmsg() functionality to python.
>
>  I have tried to find my way in the Twisted API documentation and in the
>  sources, and as far as I found out, I have to override the doWrite()
>  method of the abstract.FileDescriptor class, and the doRead() method of
>  one of its subclasses.
>
>
>  The only way I have found until now is to do this in the Protocol
>  subclass like this:
>
>  class TLVProtocol(Protocol):
>     def doWrite(self):
>         if len(self.tlvstosend)==0:
>             self.transport.stopWriting()
>             return 0
>         tlv=self.tlvstosend.pop(0)
>         (files,ancillary)=tlv.encode()
>         sendmsg(self.transport.socket.fileno(), data, ancillary=ancillary)
>

If you don't see an attribute documented in the interface for
something (ITransport here for example), and you're referencing it on
the implementation, then you're most definitely doing something bad.
The attribute I'm talking about here is "socket."

>     def doRead(self):
>         (data, dummy, dummy, ancillary) =
>  recvmsg(self.transport.socket.fileno())
>         if len(data)==0:
>             return 0
>         tlv=encode(data, ancillary)
>         .... # process tlv object
>
>     def connectionMade(self):
>         self.tlvstosend=[]
>         self.transport.doWrite=self.doWrite
>         self.transport.doRead=self.doRead
>         ...
>
>     def sendtlv(self, tlv):
>         self.tlvstosend.append(tlv)
>         self.transport.startWriting()
>
>
>
>  Some of the return values are not completed yet (EOF, ...).
>  Am I completely on the wrong track here ?

It sounds like you're trying to do something relatively low-level
(interfacing with eunuchs directly) at a high-level using Protocols.
So to do something that isn't just a hack, you'll need to do a lot
more work - and it might not be worth the effort.  Can you describe
first why you need to use sendmsg/recvmsg in your application?

Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From phil-twisted at tuxeo.org  Fri Feb 22 15:10:35 2008
From: phil-twisted at tuxeo.org (Philippe Frycia)
Date: Fri, 22 Feb 2008 23:10:35 +0100
Subject: [Twisted-Python] How to make a custom transport based
	on	sendmsg/recvmsg?
In-Reply-To: <368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>
References: <20080212203612.6859.870993561.divmod.quotient.8613@ohm>	<47B9B3A0.3050909@imperial.ac.uk>
	<87mypyqaq0.fsf@hbox.dyndns.org>	<47BF2876.2060804@tuxeo.org>
	<368574aa0802221335p7bebc061x9547f968b1d44a02@mail.gmail.com>
Message-ID: <47BF485B.5070206@tuxeo.org>

Drew Smathers wrote:
> You should not make assumptions about the transport layer in your
> protocol implementation - be it Unix domain sockets, TCP, etc.
>   
In my case, it is not only an assumption: the applications I want to 
interact with do use unix sockets and file descriptor passing.
Maybe my assumption that I need to use a Protocol is wrong, if I need a 
specific transport.

> If you don't see an attribute documented in the interface for
> something (ITransport here for example), and you're referencing it on
> the implementation, then you're most definitely doing something bad.
> The attribute I'm talking about here is "socket."
>   
OK. So what attribute(s) do I have to replace/override to plug my 
low-level read/write routines in a protocol ?

> It sounds like you're trying to do something relatively low-level
> (interfacing with eunuchs directly) at a high-level using Protocols.
>   
Maybe I don't need to use a Protocol at all. But what else ?
> So to do something that isn't just a hack, you'll need to do a lot
> more work - and it might not be worth the effort.  Can you describe
> first why you need to use sendmsg/recvmsg in your application?
>   

As I said above, I would like to interact with a set of (existing) 
applications that use unix sockets and TLV-based messages for 
interprocess communication.
They also use file descriptor passing with sendmsg/recvmsg.
In fact, this is the way they find each other: services announce 
themselves to a central broker, and clients ask for services to this 
broker. The broker then creates a socketpair and passes the file 
descriptor of both ends to each party.
They also make use of this file descriptor passing mechanism to use 
specific devices from different processes while keeping their state and 
"ownership": once one process has made some initialization on a device, 
it can pass the descriptor to another process that can use it further.

The C framework on which these applications are written is completely 
asynchronous and the model seems fine.
I was able to use asyncore with eunuchs to do this low-level stuff as 
prototype, but I really would like to use Twisted instead.

As far as I can see, the low-level doRead and doWrite implementations 
are about the only thing I have to plug in the system to have it working.
In fact my sample code is mostly working, I just want to be sure I do it 
The Right Way, if at all possible.

Please, don't tell me Twisted is not made for something other than byte 
stream based comms... :-)

Thank you for your help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080222/db13b90e/attachment.html>

From stephen_leake at stephe-leake.org  Sat Feb 23 02:12:41 2008
From: stephen_leake at stephe-leake.org (Stephen Leake)
Date: Sat, 23 Feb 2008 04:12:41 -0500
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
Message-ID: <uve4ggho6.fsf@stephe-leake.org>

I'm attempting to install Twisted using the Cygwin installation of
Python. This is my first time using Python; I'm setting up a buildbot
for monotone (http://www.venge.net/mtn-wiki/BuildBot).

I could probably make things work with a native Win32 installation of
Python, but I suspect it would be simpler in the long run to get the
Cygwin version working.

The first problem is the location and name of the Python library.
Cygwin puts it in:

/lib/python2.5/config/python2.5.dll.a

But the default Twisted install scripts use this link option:

-lpython2.5

Changing that to:

-L/lib/python2.5/config -lpython2.5.dll

lets some of the links succeed. 

I'm doing this by manually re-executing the link step, after editing
the command line options.

How do I tell the Twisted install system where the Python library is,
so it gets the link command correct? I read setup.py, and poked around
in some other scripts, but I don't see where this option is set. I'm
used to debuging Gnu configure scripts, but Python setup is new to me.  


Another link problem is with TwistedRunner:

gcc -shared -Wl,--enable-auto-image-base build/temp.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.o -L/lib/python2.5/config -lpython2.5.dll -o build/lib.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.dll
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:24: undefined reference to `_pmap_unset'
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:25: undefined reference to `_pmap_set'
build/temp.cygwin-1.5.25-i686-2.5/twisted/runner/portmap.o: In function `portmap_unset':
/Apps/Twisted-2.5.0/TwistedRunner-0.2.0/twisted/runner/portmap.c:39: undefined reference to `_pmap_unset'

pmap_set and pmap_unset are defined in <rpc/pmap_clnt.h>. What library
are these functions in?

--
-- Stephe



From zooko at zooko.com  Sat Feb 23 08:20:52 2008
From: zooko at zooko.com (zooko)
Date: Sat, 23 Feb 2008 08:20:52 -0700
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <uve4ggho6.fsf@stephe-leake.org>
References: <uve4ggho6.fsf@stephe-leake.org>
Message-ID: <50ECC97F-C733-49F8-B4AE-68DB8703F675@zooko.com>

When I want to install Twisted on cygwin, using the cygwin version of  
Python, I just get the twisted sumo source tarball, untar it, and run  
"python ./setup.py install".  That's all.

Is that what you did?

I don't really understand the problems you encountered, starting with  
not understanding why you need to know the location of a Python DLL.

Oh, I have a theory.  I theorize that you tried to use a Twisted  
"binary" package.  I think it is a bad idea in general to use a  
binary package of software when you can get the source instead, and  
in particular I think that installing Twisted is much easier on all  
platforms including Windows and Cygwin if you do it from the Twisted  
source tarball than if you do it from the "binary package".

Regards,

Zooko



From ssmiley483 at yahoo.com  Sat Feb 23 16:42:03 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Sat, 23 Feb 2008 15:42:03 -0800 (PST)
Subject: [Twisted-Python] Twisted.Web, Twisted.Web2, or something else?
Message-ID: <726698.86076.qm@web31105.mail.mud.yahoo.com>

Hi all, 

What is the groups opinion on which web library to use as the basis of my system?

I've started the work using Twisted.Web, but would like a sanity check before I go too far down this path.

The piece of a larger system that I'm working on is basically a generic communication bridge application that will allow various external systems to talk to our system.  The initial release of this system is implementing a simple HTTP GET Server that allows the external systems to use a URL to either send small amounts of data to or request data from our system.

Here is an example scenario:

Our bridge application would be installed on an interactive kiosk.  The kiosk presentation would be able to report usage data by calling a URL such as http://localhost:8000/ReportUsage?ScreenID=1234.  The bridge application would receive this request, write it to a local data cache for later batch uploading to a central server.  The local HTTP Server would return a simple text or XML response to the calling application to indicate success/failure of the request.

Eventually we want to have a variety of interfaces that are tailored to specific types of applications.  But for right now we're looking at implementing the lowest common denominator which is exchanging information via simple HTTP calls.


So getting back to my original question, is Twisted.Web or Twisted.Web2 the better framework to use in this case or is there another framework than Twisted that may work better?


NOTE: I'm working in Python 2.5 and Twisted 2.5 if that makes any difference. Primary development is being done on Linux but with the goal of being able to run on Linux, Windows, or Mac.

Thanks in advance for your suggestions and comments.

-Shawn




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at twistedmatrix.com  Sat Feb 23 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Feb 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1203829507.12.665603988@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080224/7553f3b8/attachment.html>

From michal.dtz at gmail.com  Sun Feb 24 03:15:13 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Sun, 24 Feb 2008 11:15:13 +0100
Subject: [Twisted-Python] Twisted.Web, Twisted.Web2, or something else?
In-Reply-To: <726698.86076.qm@web31105.mail.mud.yahoo.com>
References: <726698.86076.qm@web31105.mail.mud.yahoo.com>
Message-ID: <20080224111513.73d10e97@2step.chello.pl>

Dnia 2008-02-23, o godz. 15:42:03
Shawn Smiley <ssmiley483 at yahoo.com> napisał(a):

> Hi all, 
> 
> What is the groups opinion on which web library to use as the basis
> of my system?
> 
> I've started the work using Twisted.Web, but would like a sanity
> check before I go too far down this path.

Please read this document:

	http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted

Twisted Web has its own mailing list here:

	http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-- 
m



From matt at madebykite.com  Sun Feb 24 03:48:37 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 10:48:37 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
Message-ID: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>

Hi All,

Hope you are all enjoying your weekends.

I have a simple twisted proxy server, obviously passed on  
twisted.web.proxy. Periodically, it makes a call to a MySQL database,  
using adbapi.ConnectionPool.

When I initially boot the server, I see traffic going through the  
proxy and everything works fine, twistd consumes less than 5% CPU. I  
return 24 hours later, the server is still responsive (ie. functions  
fine) but it consumes 100% of the CPU.

I have only noticed this behaviour since I added the db connection  
via adbapi. I assume, because the proxy still functions well that the  
threads in the adbapi pool are working overtime.

When I manhole in to the server, gc.collect() shows objects are being  
cleaned up, and gc.garbage reports nothing.

I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL 5.0.51a.

Does anyone have any experience of this problem? Is there an easy  
workaround?

Thanks for your time :)


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From matt at madebykite.com  Sun Feb 24 04:11:20 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 11:11:20 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
Message-ID: <2886502A-D9C6-4E24-83D8-673874FE17FB@madebykite.com>

Sorry, that should be *based* not passed on!

On 24 Feb 2008, at 10:48, Matthew Glubb wrote:

> I have a simple twisted proxy server, obviously passed on  
> twisted.web.proxy.




From therve at free.fr  Sun Feb 24 04:17:49 2008
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Sun, 24 Feb 2008 12:17:49 +0100
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
Message-ID: <47C1525D.4030501@free.fr>

Matthew Glubb a écrit :
> Hi All,
>
> Hope you are all enjoying your weekends.
>
> I have a simple twisted proxy server, obviously passed on 
> twisted.web.proxy. Periodically, it makes a call to a MySQL database, 
> using adbapi.ConnectionPool.
>
> When I initially boot the server, I see traffic going through the 
> proxy and everything works fine, twistd consumes less than 5% CPU. I 
> return 24 hours later, the server is still responsive (ie. functions 
> fine) but it consumes 100% of the CPU.
>
> I have only noticed this behaviour since I added the db connection via 
> adbapi. I assume, because the proxy still functions well that the 
> threads in the adbapi pool are working overtime.
>
> When I manhole in to the server, gc.collect() shows objects are being 
> cleaned up, and gc.garbage reports nothing.
>
> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL 5.0.51a.
>
> Does anyone have any experience of this problem? Is there an easy 
> workaround?
Unfortunately, this is a known problem with epoll on Twisted 2.5. 
Fortunately, this has been fixed in trunk. You can see more informations 
at http://twistedmatrix.com/trac/ticket/2809. There is different 
workaround for Twisted 2.5, either by backporting epollreactor from 
trunk, or applying one of the small patch proposed.

-- 
Thomas



From matt at madebykite.com  Sun Feb 24 07:08:22 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 14:08:22 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <47C1525D.4030501@free.fr>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
	<47C1525D.4030501@free.fr>
Message-ID: <40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>

Brilliant. Thanks Thomas. It's nice to know that it can be fixed :)

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 24 Feb 2008, at 11:17, Thomas Hervé wrote:

> Matthew Glubb a écrit :
>> Hi All,
>>
>> Hope you are all enjoying your weekends.
>>
>> I have a simple twisted proxy server, obviously passed on  
>> twisted.web.proxy. Periodically, it makes a call to a MySQL  
>> database, using adbapi.ConnectionPool.
>>
>> When I initially boot the server, I see traffic going through the  
>> proxy and everything works fine, twistd consumes less than 5% CPU.  
>> I return 24 hours later, the server is still responsive (ie.  
>> functions fine) but it consumes 100% of the CPU.
>>
>> I have only noticed this behaviour since I added the db connection  
>> via adbapi. I assume, because the proxy still functions well that  
>> the threads in the adbapi pool are working overtime.
>>
>> When I manhole in to the server, gc.collect() shows objects are  
>> being cleaned up, and gc.garbage reports nothing.
>>
>> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL  
>> 5.0.51a.
>>
>> Does anyone have any experience of this problem? Is there an easy  
>> workaround?
> Unfortunately, this is a known problem with epoll on Twisted 2.5.  
> Fortunately, this has been fixed in trunk. You can see more  
> informations at http://twistedmatrix.com/trac/ticket/2809. There is  
> different workaround for Twisted 2.5, either by backporting  
> epollreactor from trunk, or applying one of the small patch proposed.
>
> -- 
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matt at madebykite.com  Sun Feb 24 12:37:15 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 24 Feb 2008 19:37:15 +0000
Subject: [Twisted-Python] Twisted Consumes 100% CPU
In-Reply-To: <40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>
References: <D8300701-E032-4CFD-AAF8-2FF8A8FB7D02@madebykite.com>
	<47C1525D.4030501@free.fr>
	<40B271C9-6EC5-4342-97F3-9468BAF0DAA9@madebykite.com>
Message-ID: <6DC1EB87-6767-4B04-84D9-57EEFE30ECCE@madebykite.com>

I just wanted to say thanks for your guidance regarding my epoll  
problem. I copied twisted.internet.epollreactor.py from trunk and it  
seems to be fine now.

Regards,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 24 Feb 2008, at 14:08, Matthew Glubb wrote:

> Brilliant. Thanks Thomas. It's nice to know that it can be fixed :)
>
> Matt
> 	
>
> Matthew Glubb
> Technical Partner
>
> email: matthew.glubb at madebykite.com
> phone: 44 (0) 7715 754017
> skype: mglubb
>
> Kite
> http://madebykite.com
>
> --
> GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244
>
> On 24 Feb 2008, at 11:17, Thomas Hervé wrote:
>
>> Matthew Glubb a écrit :
>>> Hi All,
>>>
>>> Hope you are all enjoying your weekends.
>>>
>>> I have a simple twisted proxy server, obviously passed on  
>>> twisted.web.proxy. Periodically, it makes a call to a MySQL  
>>> database, using adbapi.ConnectionPool.
>>>
>>> When I initially boot the server, I see traffic going through the  
>>> proxy and everything works fine, twistd consumes less than 5%  
>>> CPU. I return 24 hours later, the server is still responsive (ie.  
>>> functions fine) but it consumes 100% of the CPU.
>>>
>>> I have only noticed this behaviour since I added the db  
>>> connection via adbapi. I assume, because the proxy still  
>>> functions well that the threads in the adbapi pool are working  
>>> overtime.
>>>
>>> When I manhole in to the server, gc.collect() shows objects are  
>>> being cleaned up, and gc.garbage reports nothing.
>>>
>>> I am running Twisted 2.5, Python 2.5.1, Linux 2.6, epoll, MySQL  
>>> 5.0.51a.
>>>
>>> Does anyone have any experience of this problem? Is there an easy  
>>> workaround?
>> Unfortunately, this is a known problem with epoll on Twisted 2.5.  
>> Fortunately, this has been fixed in trunk. You can see more  
>> informations at http://twistedmatrix.com/trac/ticket/2809. There  
>> is different workaround for Twisted 2.5, either by backporting  
>> epollreactor from trunk, or applying one of the small patch proposed.
>>
>> -- 
>> Thomas
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andreww at datanet.ab.ca  Mon Feb 25 01:08:26 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Mon, 25 Feb 2008 01:08:26 -0700
Subject: [Twisted-Python] http proxy
In-Reply-To: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
References: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
Message-ID: <47C2777A.6040804@datanet.ab.ca>

Vasil Vangelovski wrote:

>I'm trying to set up a http proxy which will write redirects to the
>client if it requests certain uri but work as a normal proxy for
>others. Can this be done with the higher level proxy classes, if so,
>how?
>  
>
Not easily. The proxy classes included with Twisted only really work for 
a simple transparent non-authenticating proxy. Also, twisted.web2.proxy 
was incomplete and didn't work the last time I checked. 
twisted.web.proxy works, but is only compatible with HTTP/1.0 and does 
not allow persistent connections or pipelining.

<shameless plug>
I am in the process of writing a Twisted-based proxy that supports 
filter plugins (the site is http://xuproxy.sourceforge.net). Currently, 
it is in an alpha state (transparent HTTP proxying with pipelining 
support appears to be fully working, but there may be major bugs 
lurking), so I wouldn't recommend using it for production use.
</shameless plug>




From matt at madebykite.com  Mon Feb 25 01:27:05 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Mon, 25 Feb 2008 08:27:05 +0000
Subject: [Twisted-Python] http proxy
In-Reply-To: <47C2777A.6040804@datanet.ab.ca>
References: <406b9fda0802190117q1b5cfabetfaca3a51f1a68b1e@mail.gmail.com>
	<47C2777A.6040804@datanet.ab.ca>
Message-ID: <34264645-E26C-468A-9C69-BE348B8637D4@madebykite.com>

I make use of the twisted web proxy.

I tend to set it up as a cache_peer parent of a standard squid  
installation. In this setup it works well. I can use squid ACLs to  
only direct the traffic that my twisted proxy should handle to the  
cache_peer. Squid takes care of the persistent connections to the  
client, at least (not sure what the overhead for non-persistent  
connections on the loopback address are but it's got to be a lot less).

If anyone is interested, I have implemented a basic ICP protocol in  
twisted.

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 25 Feb 2008, at 08:08, Andrew Warkentin wrote:

> Vasil Vangelovski wrote:
>
>> I'm trying to set up a http proxy which will write redirects to the
>> client if it requests certain uri but work as a normal proxy for
>> others. Can this be done with the higher level proxy classes, if so,
>> how?
>>
> Not easily. The proxy classes included with Twisted only really  
> work for a simple transparent non-authenticating proxy. Also,  
> twisted.web2.proxy was incomplete and didn't work the last time I  
> checked. twisted.web.proxy works, but is only compatible with HTTP/ 
> 1.0 and does not allow persistent connections or pipelining.
>
> <shameless plug>
> I am in the process of writing a Twisted-based proxy that supports  
> filter plugins (the site is http://xuproxy.sourceforge.net).  
> Currently, it is in an alpha state (transparent HTTP proxying with  
> pipelining support appears to be fully working, but there may be  
> major bugs lurking), so I wouldn't recommend using it for  
> production use.
> </shameless plug>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Mon Feb 25 11:08:13 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 25 Feb 2008 10:08:13 -0800 (PST)
Subject: [Twisted-Python] Open Spaces Revisited
Message-ID: <600899.69310.qm@web34206.mail.mud.yahoo.com>

Hi Folks:

Earlier someone asked whether there was going to be a
PyCon 2008 Open Space for Twisted. I will be attending
the PyCon 2008 conference. Since this is my first
PyCon, I don't know how Open Spaces work. I am
wondering if any agreement was reached? It would be
neat to meet other folks interested in Twisted to
exchange information and experiences.

Cheers,
Andrew  


      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From steve at holdenweb.com  Mon Feb 25 13:22:09 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 25 Feb 2008 15:22:09 -0500
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <600899.69310.qm@web34206.mail.mud.yahoo.com>
References: <600899.69310.qm@web34206.mail.mud.yahoo.com>
Message-ID: <fpv829$cga$1@ger.gmane.org>

Andrew Francis wrote:
> Hi Folks:
> 
> Earlier someone asked whether there was going to be a
> PyCon 2008 Open Space for Twisted. I will be attending
> the PyCon 2008 conference. Since this is my first
> PyCon, I don't know how Open Spaces work. I am
> wondering if any agreement was reached? It would be
> neat to meet other folks interested in Twisted to
> exchange information and experiences.
> 
> Cheers,
> Andrew  
> 
There are signs that there's going (again, hooray!) to be a concerted 
Twisted presence at PyCon 2008. I am hoping to demonstrate my ignorance 
publicly and learn something about Twisted by running one (or more) Open 
Space sessions entitled "Teach Me Twisted", that reverse the usual flow 
of information and maybe produce something to add to the documentation.

But I am sure that regular Twisted crew will tell you much more.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From michal.dtz at gmail.com  Mon Feb 25 14:03:46 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Mon, 25 Feb 2008 22:03:46 +0100
Subject: [Twisted-Python] Reactor is left dirty after calling
 twisted.mail.smtp.sendmail via trial
Message-ID: <20080225220346.567211fe@2step.chello.pl>

Hi, 

please consider attached minimal non-working code example.

If I send an e-mail from a Trial testcase - using t.m.smtp.sendmail,
the reactor is left dirty.

Is it a bug, feature, or... how should we treat this situation? 

In my case, I already substituted t.m.smtp.sendmail in my tests, unless
hitting a situation, where testing if my parameters to that function
caused it to raise an exception. That's why I'm trying to test it this
way. And, it leaves reactor dirty. 

Regards,
-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_twisted_smtp.py
Type: text/x-python
Size: 346 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080225/344ed473/attachment-0002.py>

From programmer.py at gmail.com  Mon Feb 25 19:24:54 2008
From: programmer.py at gmail.com (Jaime Wyant)
Date: Mon, 25 Feb 2008 20:24:54 -0600
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <uve4ggho6.fsf@stephe-leake.org>
References: <uve4ggho6.fsf@stephe-leake.org>
Message-ID: <d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>

On Sat, Feb 23, 2008 at 3:12 AM, Stephen Leake <
stephen_leake at stephe-leake.org> wrote:

> I'm attempting to install Twisted using the Cygwin installation of
> Python. This is my first time using Python; I'm setting up a buildbot
> for monotone (http://www.venge.net/mtn-wiki/BuildBot).
>
> I could probably make things work with a native Win32 installation of
> Python, but I suspect it would be simpler in the long run to get the
> Cygwin version working.
>

[snip!]

As far as simplicity goes, IIRC, windows Twisted comes as a windows
executable.  Install windows python, then install twisted.  I don't think it
can get much easier than that.

jw
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080225/b3d936ad/attachment.html>

From stephen_leake at stephe-leake.org  Tue Feb 26 01:37:26 2008
From: stephen_leake at stephe-leake.org (Stephen Leake)
Date: Tue, 26 Feb 2008 03:37:26 -0500
Subject: [Twisted-Python] Installing Twisted on Win32 Cygwin
In-Reply-To: <d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>
	(Jaime Wyant's message of "Mon, 25 Feb 2008 20:24:54 -0600")
References: <uve4ggho6.fsf@stephe-leake.org>
	<d52c72d20802251824m2e3b2734qdd0b7eefff8f443b@mail.gmail.com>
Message-ID: <u3argw1tl.fsf@stephe-leake.org>

"Jaime Wyant" <programmer.py at gmail.com> writes:

> On Sat, Feb 23, 2008 at 3:12 AM, Stephen Leake <
> stephen_leake at stephe-leake.org> wrote:
>
>> I'm attempting to install Twisted using the Cygwin installation of
>> Python. This is my first time using Python; I'm setting up a buildbot
>> for monotone (http://www.venge.net/mtn-wiki/BuildBot).
>>
>> I could probably make things work with a native Win32 installation of
>> Python, but I suspect it would be simpler in the long run to get the
>> Cygwin version working.
>>
>
> [snip!]
>
> As far as simplicity goes, IIRC, windows Twisted comes as a windows
> executable.  Install windows python, then install twisted.  I don't think it
> can get much easier than that.

That makes the Twisted installation easier, yes.

But it doesn't make _using_ Twisted easier. Mixing Win32 tools and
Cygwin tools is usually a headache.


-- 
-- Stephe



From Marcin.Kasperski at softax.com.pl  Tue Feb 26 04:26:22 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 26 Feb 2008 12:26:22 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
References: <20080225220346.567211fe@2step.chello.pl>
Message-ID: <874pbw3qn5.fsf@softax.com.pl>

> If I send an e-mail from a Trial testcase - using t.m.smtp.sendmail,
> the reactor is left dirty.
>
> Is it a bug, feature, or... how should we treat this situation? 

Feature. Email is sent asynchronously, you get deferred and can use it
(for example to acknowledge that the email has already been sent).

I bet you just need to sync with this deferred. The way to do it
is to return the deferred from the test case.

> class Test1(unittest.TestCase):
>    def test_sendmail(self):
>
>       return smtp.sendmail('localhost', 'foo at bar.pl', 'dotz at localhost',
>                            'this leaves reactor dirty :-(').addCallback(evenIfCallbackIsCalled)

Adding callback should have no meaning here, you need to return deferred
from test to sync with that whether the processing is complicated or simple.

At first sight it seems OK to me. Are you sure you run your tests with
trial?  Syncing with returned deferreds is trial-specific, other test
runners won't do it...

-- 
----------------------------------------------------------------------
| Marcin Kasperski   | The cost of a few uncorrected non-critical
| http://mekk.waw.pl | human errors is less then the cost imposed
|                    |  by a process that tries to prevent them.
|                    |           (Booch,Martin,Newkirk)
----------------------------------------------------------------------




From michal.dtz at gmail.com  Tue Feb 26 06:23:56 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 26 Feb 2008 14:23:56 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <874pbw3qn5.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
Message-ID: <20080226142356.7fa2f603@2step.chello.pl>

Dnia 2008-02-26, o godz. 12:26:22
Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisał(a):

> > class Test1(unittest.TestCase):
> >    def test_sendmail(self):
> >
> >       return smtp.sendmail('localhost', 'foo at bar.pl',
> > 'dotz at localhost', 'this leaves reactor
> > dirty :-(').addCallback(evenIfCallbackIsCalled)  
> 
> Adding callback should have no meaning here, you need to return
> deferred from test to sync with that whether the processing is
> complicated or simple.

I am using trial to run the tests - if I did that the other way, how
would I get an exception about unclean reactor? :-)

The last time I checked, addCallback did return a Deferred, in fact it
was returning 'self', so I really don't think it's the case here. 

Am I wrong?

-- 
m



From Marcin.Kasperski at softax.com.pl  Tue Feb 26 07:40:54 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 26 Feb 2008 15:40:54 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
	<20080226142356.7fa2f603@2step.chello.pl>
Message-ID: <87ve4b3hmx.fsf@softax.com.pl>

> Am I wrong?

I took a deeper look. Looks like it is caused by the way smtp.py
works. More or less, at least for my naive eye, it seems to me
that the deferred returned from sendmail/sendEmail is fired as
soon as email sending is done, and cleanup (closing smtp connection,
removing factory etc) proceeds asynchronously.

In real code it is likely good thing as you need not to wait for
final message exchanges.

Not sure whether it is possible to do anything with that (without 
rewriting the module deeply) :-(

  { it would be test-friendly if sendmail either returned two
    deferreds, one fired after send, second after cleanup, or
    had option to sync returned deferred on cleanup... }


-- 
----------------------------------------------------------------------
| Marcin Kasperski   |    You have the right to accept your
| http://mekk.waw.pl | responsibilites instead of having them
|                    |         assigned to you. (Beck)
----------------------------------------------------------------------




From radix at twistedmatrix.com  Tue Feb 26 08:03:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 26 Feb 2008 10:03:55 -0500
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <874pbw3qn5.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
Message-ID: <60ed19d40802260703j3fc77867s32db59dd661fdafd@mail.gmail.com>

On Tue, Feb 26, 2008 at 6:26 AM, Marcin Kasperski
<Marcin.Kasperski at softax.com.pl> wrote:
>  At first sight it seems OK to me. Are you sure you run your tests with
>  trial?  Syncing with returned deferreds is trial-specific, other test
>  runners won't do it...

That's not true. It's not the runner that provides this behavior, it's
the TestCase class. You can run your Trial TestCases with other
runners and deferreds will be handled.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From michal.dtz at gmail.com  Tue Feb 26 12:33:12 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 26 Feb 2008 20:33:12 +0100
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <87ve4b3hmx.fsf@softax.com.pl>
References: <20080225220346.567211fe@2step.chello.pl>
	<874pbw3qn5.fsf@softax.com.pl>
	<20080226142356.7fa2f603@2step.chello.pl>
	<87ve4b3hmx.fsf@softax.com.pl>
Message-ID: <20080226203312.7005959a@2step.chello.pl>

Dnia 2008-02-26, o godz. 15:40:54
Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisał(a):

> > Am I wrong?
> 
> I took a deeper look. Looks like it is caused by the way smtp.py
> works.
[...]
> Not sure whether it is possible to do anything with that (without 
> rewriting the module deeply) :-(

Let me ask the other way then - is it against testing philosophy to run
functions like t.m.smtp.sendmail from the unittest? It is
environment-dependent - however there are some cases when calling it
from the test is useful. 

If I shouldn't even think about calling such functions from the
unittest, maybe someone could point out a better method of testing?

-- 
m



From camrdale at gmail.com  Tue Feb 26 13:12:22 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 12:12:22 -0800
Subject: [Twisted-Python] Throttling a web2 server
Message-ID: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>

Hi,

I'm relatively new to Twisted, and I was wondering if anyone has had
success with the ThrottlingFactory, or any other methods for
throttling push producers.

I'm attempting to throttle the bandwidth of the web2 server using the
twisted.protocols.policies.ThrottlingFactory. I know this isn't
possible with web1 (see Ticket #601), but it should be possible with
web2 since web2 uses a streaming (push) producer.

The trouble I'm having is that the ThrottlingFactory doesn't throttle
the server at all. I've traced the output, and it seems to be due to
the twisted.internet.tcp.Server also calling the pauseProducing() and
resumeProducing() methods of the producer.

The way the ThrottlingFactory works, is that it schedules periodic
checks of the number of bytes written using reactor.callLater. If too
many bytes have been written, then the producer is paused. However,
these periodic checks always occur when the producer is already paused
by the twisted.internet.tcp.Server, and so have no effect. Later the
producer is resumed by the twisted.internet.tcp.Server, and so the
throttling is non-existent.

Thanks,
Cameron



From exarkun at divmod.com  Tue Feb 26 14:06:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 26 Feb 2008 16:06:44 -0500
Subject: [Twisted-Python] Re: Reactor is left dirty after calling
	twisted.mail.smtp.sendmail via trial
In-Reply-To: <20080226203312.7005959a@2step.chello.pl>
Message-ID: <20080226210644.6859.1586703780.divmod.quotient.13615@ohm>

On Tue, 26 Feb 2008 20:33:12 +0100, Michał Pasternak <michal.dtz at gmail.com> wrote:
>Dnia 2008-02-26, o godz. 15:40:54
>Marcin Kasperski <Marcin.Kasperski at softax.com.pl> napisał(a):
>
>> > Am I wrong?
>>
>> I took a deeper look. Looks like it is caused by the way smtp.py
>> works.
>[...]
>> Not sure whether it is possible to do anything with that (without
>> rewriting the module deeply) :-(
>
>Let me ask the other way then - is it against testing philosophy to run
>functions like t.m.smtp.sendmail from the unittest? It is
>environment-dependent - however there are some cases when calling it
>from the test is useful.

Maybe so, but then it's not really a unit test, since by calling it you
have just included an entire SMTP server in the test along with whatever
else you're trying to test.  Still, maybe it's a good idea sometimes.  The
API was created a long time ago, and it's probably not ideal.  It is very
unfortunate that it gives you no way to know when it is really done.

>
>If I shouldn't even think about calling such functions from the
>unittest, maybe someone could point out a better method of testing?

Well...  I dunno what you're testing.  But you could make a fake (verified,
of course) of sendmail() and call that in your tests instead.

Jean-Paul



From exarkun at divmod.com  Tue Feb 26 14:17:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 26 Feb 2008 16:17:03 -0500
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
Message-ID: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>

On Tue, 26 Feb 2008 12:12:22 -0800, Cameron Dale <camrdale at gmail.com> wrote:
>Hi,
>
>I'm relatively new to Twisted, and I was wondering if anyone has had
>success with the ThrottlingFactory, or any other methods for
>throttling push producers.
>
>I'm attempting to throttle the bandwidth of the web2 server using the
>twisted.protocols.policies.ThrottlingFactory. I know this isn't
>possible with web1 (see Ticket #601), but it should be possible with
>web2 since web2 uses a streaming (push) producer.
>
>The trouble I'm having is that the ThrottlingFactory doesn't throttle
>the server at all. I've traced the output, and it seems to be due to
>the twisted.internet.tcp.Server also calling the pauseProducing() and
>resumeProducing() methods of the producer.
>
>The way the ThrottlingFactory works, is that it schedules periodic
>checks of the number of bytes written using reactor.callLater. If too
>many bytes have been written, then the producer is paused. However,
>these periodic checks always occur when the producer is already paused
>by the twisted.internet.tcp.Server, and so have no effect. Later the
>producer is resumed by the twisted.internet.tcp.Server, and so the
>throttling is non-existent.
>

Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
to fix it? :)

Jean-Paul



From donwsmith at gmail.com  Tue Feb 26 15:41:56 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 14:41:56 -0800
Subject: [Twisted-Python] DeferredList?
Message-ID: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>

Greetings,

I have a problem I hope someone here can assist with. I'm using TwistedSNMP
to query a bunch of SNMP devices asynchronously. The behavior I'm trying to
get is to get is to query all the devices via SNMP, each query returns a
deferred, and when all their callbacks have been fired then I want to stop
the reactor and thereby exit the program. I thought perhaps I could put each
of these SNMP deferreds in a DeferredList and add a callback to the
DeferredList that would stop the reactor but it does not do that. Enclosed
is a code sample. Am I doing something incorrectly, or should I do something
different?

Thanks! -Don

"""Trivial example to retrieve an OID from a remote Agent"""
from twisted.internet import reactor
from twistedsnmp import snmpprotocol, agentproxy
from twisted.enterprise import adbapi
from twisted.internet import defer
import os

APPNAME = 'ClearSNMP'
d_results = {} #dictionary to store results
device_name = 'Unknown'

db_conn = {'user':'sa',
            'password':'password',
            'host':'localhost',
            'database':'ClearSNMP'
            }

community_string = 'public'

deferred_list = [] #list to help group the snmp requests

outfile = open('outfile.csv','wb',0)
#add headers to the outfile
outfile.write
("device_name,link_oid,link_name,link_capacity_oid,link_capacity,traffic_in_oid,traffic_in,traffic_out_oid,traffic_out")

#create the database connection pool
dbpool = adbapi.ConnectionPool("pymssql", user=db_conn['user'],
password=db_conn['password'], host=db_conn['host'],
database=db_conn['database'])


def main( class_handler, proxy, oids ):
    """Do a getTable on proxy for OIDs and store in oidStore"""
    df = proxy.getTable(
        oids, timeout=.25, retryCount=5
    )
    if class_handler == 'tasman':
        df.addCallback( tasmanResults )
    else:
        df.addCallback( results )
    #df.addCallback( exiter )
    df.addErrback( errorReporter, proxy )
    #df.addErrback( exiter )
    return df


def tasmanResults( result ):

    """Results 'appear' to be a nested dictionary, but it is really an
object of OIDs. I figured out how to get to the OIDs by
    casting them as a dictionary using the built_in dict() function. Now I
can iterate over all the OIDs."""
    #print 'Results:'
    d_table_key = {}
    for table_key in result.keys():
        #get the device name. for some reason i have to do this in a loop as
just saying dict(result[table_key])['.1.3.6.1.2.1.1.5.0'] doesn't work
        for oid in dict(result[table_key]).keys():
            if oid=='.1.3.6.1.2.1.1.5.0':
                device_name=str(dict(result[table_key])[oid])

        d_oid = {}
        for oid in dict(result[table_key]).keys():
            d_oid[str(oid)]=dict(result[table_key])[oid]
        d_table_key[str(table_key)] = d_oid
    d_results[device_name]=d_table_key

    #specify the table oids so we can match them appropriately later
    link_name_table    = ".1.3.6.1.2.1.2.2.1.2"
    link_capacity_table    = ".1.3.6.1.2.1.2.2.1.5"
    traffic_in_table    = ".1.3.6.1.2.1.2.2.1.10"
    traffic_out_table    = ".1.3.6.1.2.1.2.2.1.16"

    # For each link name in the table I need to get the values from the
link_capacity, traffic_in and traffic_out tables and put them in the same
line

    for i in d_results.keys():
        d_row = {} #holds the column values for a row

        #set device_name in Row
        d_row['device_name'] = device_name

        for k in d_results[i][link_name_table]:
            #set link_oid and link_name in Row
            d_row['link_oid'] = k
            d_row['link_name'] =
d_results[i][link_name_table][d_row['link_oid']]

            #lookup the capacity metric for this link_oid
            #create the oid to lookup
            d_row['link_capacity_oid'] =
d_row['link_oid'].replace(link_name_table,link_capacity_table)
            d_row['link_capacity'] =
d_results[i][link_capacity_table][d_row['link_capacity_oid']]

            #lookup the traffic_in metric for this link_oid
            #create the oid to lookup
            d_row['traffic_in_oid'] =
d_row['link_oid'].replace(link_name_table,traffic_in_table)
            d_row['traffic_in'] =
d_results[i][traffic_in_table][d_row['traffic_in_oid']]

            #lookup the traffic_out metric for this link_oid
            #create the oid to lookup
            d_row['traffic_out_oid'] =
d_row['link_oid'].replace(link_name_table,traffic_out_table)
            d_row['traffic_out'] =
d_results[i][traffic_out_table][d_row['traffic_out_oid']]

            #Calculate Utilization - if we can


            #print d_row
            out =
d_row['device_name']+","+d_row['link_oid']+","+d_row['link_name']+","+d_row['link_capacity_oid']+","+str(d_row['link_capacity'])+","+d_row['traffic_in_oid']+","+str(d_row['traffic_in'])+","+d_row['traffic_out_oid']+","+str(d_row['traffic_out'])+'\r\n'
            #print out
            outfile.write(out)
    return result


def errorReporter( err, proxy ):
    #print 'ERROR', err.getTraceback()
    #log the failed snmp query attempt
    print 'Failed to retrieve SNMP counters from agent:',proxy
    return err

def exiter( value ):

    reactor.stop()
    outfile.close()

    return value


def getNetworkElements():
    return dbpool.runQuery("select top 10 ip, mkt, dns_name, dns_fqdn from
dns where dns_type='TASMAN'")

def printResult(l):
    for item in l:
        print "Fetching counters for "+item[2]
        #deferred_list.append(snmpSetup(item[0], 161, 'ctipublic','tasman'))
    ipAddress = item[0]
    portno = 161
    community = community_string
    class_handler = 'tasman'
        print ipAddress,portno
        # choose random port in range 25000 to 30000
        port = snmpprotocol.port()
        targetPort = int(portno)
        proxy = agentproxy.AgentProxy(ipAddress,
                  targetPort,
                  community = community,
                  snmpVersion = 'v1',
                  protocol = port.protocol,
                  )


        d_oids = {'.1.3.6.1.2.1.1':"System Tables",
            '.1.3.6.1.2.1.2.2.1.2':"Circuit Name",
            '.1.3.6.1.2.1.2.2.1.5':"Capacity",
            '.1.3.6.1.2.1.2.2.1.10':"Traffic In",
            '.1.3.6.1.2.1.2.2.1.16':"Traffic Out"
            }

    """Do a getTable on proxy for OIDs and store in oidStore"""
    df = proxy.getTable(
        d_oids, timeout=.25, retryCount=5
    )
    if class_handler == 'tasman':
        df.addCallback( tasmanResults )
    else:
        df.addCallback( results )
    df.addErrback( errorReporter, proxy )
    deferred_list.append(df)
    return



if __name__ == "__main__":
    import sys
    #start the log service
    from twisted.python import log
    from twisted.python import logfile
    # rotate every 100000000 bytes
    f = logfile.LogFile(APPNAME+str(os.getpid())+".log", "Logs",
rotateLength=100000000)
    # setup logging to use our new logfile
    #log.startLogging(f)


    g = getNetworkElements().addCallback(printResult)
    dl = defer.DeferredList(deferred_list, 0, 0, 1 )
    print dir(dl)
    dl.addCallback(exiter)

    reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080226/dcde14a6/attachment.html>

From p.mayers at imperial.ac.uk  Tue Feb 26 16:33:32 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 26 Feb 2008 23:33:32 +0000
Subject: [Twisted-Python] DeferredList?
In-Reply-To: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
References: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
Message-ID: <47C4A1CC.5090307@imperial.ac.uk>


You are creating the DeferredList before getNetworkElements has 
callback'ed - i.e. it's empty.

Move the creation of the DeferredList (and adding it's callback) to just 
before the "return" in "printResult"


>     g = getNetworkElements().addCallback(printResult)
>     dl = defer.DeferredList(deferred_list, 0, 0, 1 )
>     print dir(dl)
>     dl.addCallback(exiter)
>    
>     reactor.run()
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From donwsmith at gmail.com  Tue Feb 26 16:52:33 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 15:52:33 -0800
Subject: [Twisted-Python] DeferredList?
In-Reply-To: <47C4A1CC.5090307@imperial.ac.uk>
References: <24f63c200802261441x69201979r86da43abbf427320@mail.gmail.com>
	<47C4A1CC.5090307@imperial.ac.uk>
Message-ID: <24f63c200802261552y77aaf35bg6aedc242c4ef8e5c@mail.gmail.com>

Thanks, Phil.

I tried this and now I get a different error which I'm not sure what to do
with:

Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable
Traceback (most recent call last):
  File "twisted_help.py", line 186, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
220,
in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
228,
in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 561,
in ru
nUntilCurrent
    call.func(*call.args, **call.kw)
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 411,
in _c
ontinueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: 'NoneType' object is unsubscriptable

Do you have any ideas?

Thanks,

Don

On Tue, Feb 26, 2008 at 3:33 PM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

>
> You are creating the DeferredList before getNetworkElements has
> callback'ed - i.e. it's empty.
>
> Move the creation of the DeferredList (and adding it's callback) to just
> before the "return" in "printResult"
>
>
> >     g = getNetworkElements().addCallback(printResult)
> >     dl = defer.DeferredList(deferred_list, 0, 0, 1 )
> >     print dir(dl)
> >     dl.addCallback(exiter)
> >
> >     reactor.run()
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080226/b477527c/attachment.html>

From camrdale at gmail.com  Tue Feb 26 19:41:47 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 18:41:47 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
Message-ID: <f4438a6a0802261841p3bbc2a18p41030dbec102e66a@mail.gmail.com>

On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 26 Feb 2008 12:12:22 -0800, Cameron Dale <camrdale at gmail.com> wrote:
>  >The trouble I'm having is that the ThrottlingFactory doesn't throttle
>  >the server at all. I've traced the output, and it seems to be due to
>  >the twisted.internet.tcp.Server also calling the pauseProducing() and
>  >resumeProducing() methods of the producer.
>  >
>  >The way the ThrottlingFactory works, is that it schedules periodic
>  >checks of the number of bytes written using reactor.callLater. If too
>  >many bytes have been written, then the producer is paused. However,
>  >these periodic checks always occur when the producer is already paused
>  >by the twisted.internet.tcp.Server, and so have no effect. Later the
>  >producer is resumed by the twisted.internet.tcp.Server, and so the
>  >throttling is non-existent.
>
> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>  to fix it? :)

I will have to do something as throttling is needed, but I'm just not
sure how to go about it. Do you have an idea of how it could be fixed?

The ThrottlingFactory methodology would seem to be broken and unusable
due to this behaviour. The only workaround I can think of is to modify
the push producer to keep a tally of the number of pauses received,
and only resume when it gets back to 0. That obviously requires
modifying the underlying producer, and is far from ideal as I believe
the pauseProducing() call is expected to be idempotent.

Or perhaps the ThrottlingFactory should create a dummy producer that
gets data from the real producer, but then throttles it before sending
it out to the twisted.internet.tcp.Server. That is complicated by the
fact that the producer would not be available to be modified by the
factory before it is passed to the Server, so exchanging it for the
dummy producer would also be a problem.

So, are there any other ideas of how throttling can be accomplished
with Twisted? I'm sure someone must have used throttling at some
point.

Thanks,
Cameron



From donwsmith at gmail.com  Tue Feb 26 23:32:58 2008
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 26 Feb 2008 22:32:58 -0800
Subject: [Twisted-Python] Twisted Amazon Web Service module?
Message-ID: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>

Has anyone built a Twisted module for use with any of Amazon's web service
components? Specifically SimpleDB and SQS?

I've looked at boto, which is really cool, but not Twisted...

Regards,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080226/92da033a/attachment.html>

From camrdale at gmail.com  Wed Feb 27 00:20:17 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Tue, 26 Feb 2008 23:20:17 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
Message-ID: <f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>

On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>  to fix it? :)

Well, I took a stab at fixing it. Attached is my first attempt, as a
patch against the current SVN version. I only fixed the write
throttling, as that's the one I'm interested in. A similar technique
may work for reads as well.

It does throttle correctly, by buffering any throttled packets and
pausing the producer. If the Sever then unpauses the producer, it will
only result in an extra packet being buffered. I also implemented a
protocol queue so that the producers are all given a fair portion of
the bandwidth.

The only thing it requires currently is that the producers don't try
and write too large of a piece of data at once. I had to modify the
twisted.web2.stream.FileSream slightly to make it do this, as
otherwise it would 'stream' the entire file in one write() request. In
theory, a single large write could be chunked and buffered, but that
would add a lot of memory overhead to the buffering.

Anyway, I'm sure it's not great, but I'd appreciate any feedback,
especially on how I could make it better. :)

Thanks,
Cameron
-------------- next part --------------
A non-text attachment was scrubbed...
Name: policies.py.patch
Type: text/x-diff
Size: 7325 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080226/1b95844b/attachment-0002.patch>

From mailing_lists at evotex.ch  Wed Feb 27 01:32:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 09:32:01 +0100
Subject: [Twisted-Python] Factory question
Message-ID: <47C52001.2080506@evotex.ch>

Hello everyone,

I have a small question, I have a service which needs to sometimes send 
data (without having received any prior to sending) and sometimes 
receive data, which is better :

1) create a factory that inherits from ServerFactory and ClientFactory, 
thus it can listen and send data

2) create a factory that inherits from ServerFactory only and uses a 
single-use client (ClientCreator, as shown in the writing clients howto) 
when it needs to send data

Thank you!
Gabriel



From mailing_lists at evotex.ch  Wed Feb 27 02:06:05 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 10:06:05 +0100
Subject: [Twisted-Python] How to get an unused port 
Message-ID: <47C527FD.3090203@evotex.ch>

Hello,

I need to be able to get an unused port for a server, it will then 
communicate it to a third party.
I don't have any restrictions other than it shouldn't be a known used 
port (one used by other apps (above 1023)), but for that I'll probably 
have to create a list and verify manually. Does anyone know how to do 
this (without iterating all ports and trying), it must be possible since 
a client gets the next unused port from the OS, I'd like to do this with 
Twisted if possible.

Thanks,
Gabriel



From andrew-twisted at puzzling.org  Wed Feb 27 02:20:46 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 27 Feb 2008 20:20:46 +1100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <47C527FD.3090203@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
Message-ID: <20080227092046.GA18967@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
> Hello,
>
> I need to be able to get an unused port for a server, it will then 
> communicate it to a third party.
> I don't have any restrictions other than it shouldn't be a known used port 
> (one used by other apps (above 1023)), but for that I'll probably have to 
> create a list and verify manually. Does anyone know how to do this (without 
> iterating all ports and trying), it must be possible since a client gets 
> the next unused port from the OS, I'd like to do this with Twisted if 
> possible.

Pass 0 as the port number.

-Andrew.




From matt at madebykite.com  Wed Feb 27 02:24:08 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 27 Feb 2008 09:24:08 +0000
Subject: [Twisted-Python] How to get an unused port 
In-Reply-To: <47C527FD.3090203@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
Message-ID: <6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>

Hi Gabriel,

If memory serves me correctly, when calling reactor.ConnectTCP,  
specify zero for your port, you'll automatically get an unused port  
from the dynamic range.

Hope that helps,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 27 Feb 2008, at 09:06, Gabriel Rossetti wrote:

> Hello,
>
> I need to be able to get an unused port for a server, it will then  
> communicate it to a third party.
> I don't have any restrictions other than it shouldn't be a known  
> used port (one used by other apps (above 1023)), but for that I'll  
> probably have to create a list and verify manually. Does anyone  
> know how to do this (without iterating all ports and trying), it  
> must be possible since a client gets the next unused port from the  
> OS, I'd like to do this with Twisted if possible.
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mithrandi at mithrandi.za.net  Wed Feb 27 03:01:53 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Wed, 27 Feb 2008 12:01:53 +0200
Subject: [Twisted-Python] Twisted Amazon Web Service module?
In-Reply-To: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
References: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
Message-ID: <20080227100153.GC32333@mithrandi.net>

* Don Smith <donwsmith at gmail.com> [2008-02-26 22:32:58 -0800]:

> Has anyone built a Twisted module for use with any of Amazon's web service
> components? Specifically SimpleDB and SQS?
> 
> I've looked at boto, which is really cool, but not Twisted...

I have some AWS code here:

    http://edgeverse.com/trac/browser/aws
    http://slipgate.za.net/~mithrandi/darcs/EdgeVerse/trunk/aws/

Currently, it consists of a full (I think) S3 wrapper, and a partial ECS
wrapper, so I'm not sure how much this helps you, but at least it's a
start.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080227/48a9bafa/attachment.sig>

From therve at free.fr  Wed Feb 27 03:19:59 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 27 Feb 2008 11:19:59 +0100
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
	<f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
Message-ID: <20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>

Quoting Cameron Dale <camrdale at gmail.com>:

> On 2/26/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> Yes.  It would be good if ThrottlingFactory were fixed.  Would you like
>>  to fix it? :)
>
> Well, I took a stab at fixing it. Attached is my first attempt, as a
> patch against the current SVN version. I only fixed the write
> throttling, as that's the one I'm interested in. A similar technique
> may work for reads as well.

Thanks. Some maintenance on this would be great.

> It does throttle correctly, by buffering any throttled packets and
> pausing the producer. If the Sever then unpauses the producer, it will
> only result in an extra packet being buffered. I also implemented a
> protocol queue so that the producers are all given a fair portion of
> the bandwidth.
>
> The only thing it requires currently is that the producers don't try
> and write too large of a piece of data at once. I had to modify the
> twisted.web2.stream.FileSream slightly to make it do this, as
> otherwise it would 'stream' the entire file in one write() request. In
> theory, a single large write could be chunked and buffered, but that
> would add a lot of memory overhead to the buffering.
>
> Anyway, I'm sure it's not great, but I'd appreciate any feedback,
> especially on how I could make it better. :)

I haven't very closely at your patch, but there is definitely  
something missing: tests. It's a requirement for anything going into  
Twisted, and generally a requirement for making something works.

The discussion should probably continue in the tracker. You can open a  
ticket, or maybe attach your patch at  
http://twistedmatrix.com/trac/ticket/1460 (which doesn't exactly  
describe the same goal).

-- 
Thomas





From mailing_lists at evotex.ch  Wed Feb 27 03:36:51 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:36:51 +0100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
Message-ID: <47C53D43.4020007@evotex.ch>

Matthew Glubb wrote:
> Hi Gabriel,
>
> If memory serves me correctly, when calling reactor.ConnectTCP, 
> specify zero for your port, you'll automatically get an unused port 
> from the dynamic range.
>
Thank you, unfortunately I tried it and got 0 back :

 >>> reactor.connectTCP("localhost", 0, ClientFactory()).port
0
 >>> reactor.connectTCP("localhost", 0, 
ClientFactory()).getDestination().port
0

I tried running reactor.run() but I get an exception :

exceptions.AttributeError: Factory instance has no attribute 
'clientConnectionFailed'

I though the ClientFactory had that, I must be wrong, I could of course 
subclass it and add it but it's a bit "complicated" for just getting a 
free port, so I may have done something wrong...

Gabriel

> Hope that helps,
>
>
> Matt   
>
> Matthew Glubb
> Technical Partner
>
> email: matthew.glubb at madebykite.com
> phone: 44 (0) 7715 754017
> skype: mglubb
>
> Kite
> http://madebykite.com
>
> -- 
> GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244
>
> On 27 Feb 2008, at 09:06, Gabriel Rossetti wrote:
>
>> Hello,
>>
>> I need to be able to get an unused port for a server, it will then 
>> communicate it to a third party.
>> I don't have any restrictions other than it shouldn't be a known used 
>> port (one used by other apps (above 1023)), but for that I'll 
>> probably have to create a list and verify manually. Does anyone know 
>> how to do this (without iterating all ports and trying), it must be 
>> possible since a client gets the next unused port from the OS, I'd 
>> like to do this with Twisted if possible.
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From mg at daimi.au.dk  Wed Feb 27 03:45:01 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 27 Feb 2008 11:45:01 +0100
Subject: [Twisted-Python] Re: How to get an unused port
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch>
Message-ID: <w1by796d6fm.fsf@thyra03.daimi.au.dk>

Gabriel Rossetti <mailing_lists at evotex.ch> writes:

> Matthew Glubb wrote:
>> Hi Gabriel,
>>
>> If memory serves me correctly, when calling reactor.ConnectTCP,
>> specify zero for your port, you'll automatically get an unused port
>> from the dynamic range.
>>
> Thank you, unfortunately I tried it and got 0 back :
>
>>>> reactor.connectTCP("localhost", 0, ClientFactory()).port
> 0
>>>> reactor.connectTCP("localhost", 0,
> ClientFactory()).getDestination().port
> 0

You will never want to connect to port 0 -- there is no such port as
far as I know. Instead you can listen on it. The OS will then allocate
a free port for you to listen on.

So I think you have turned things upside down here :-)

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mailing_lists at evotex.ch  Wed Feb 27 03:56:50 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:56:50 +0100
Subject: [Twisted-Python] Re: How to get an unused port
In-Reply-To: <w1by796d6fm.fsf@thyra03.daimi.au.dk>
References: <47C527FD.3090203@evotex.ch>	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>	<47C53D43.4020007@evotex.ch>
	<w1by796d6fm.fsf@thyra03.daimi.au.dk>
Message-ID: <47C541F2.6070007@evotex.ch>

Martin Geisler wrote:
> Gabriel Rossetti <mailing_lists at evotex.ch> writes:
>
>   
>> Matthew Glubb wrote:
>>     
>>> Hi Gabriel,
>>>
>>> If memory serves me correctly, when calling reactor.ConnectTCP,
>>> specify zero for your port, you'll automatically get an unused port
>>> from the dynamic range.
>>>
>>>       
>> Thank you, unfortunately I tried it and got 0 back :
>>
>>     
>>>>> reactor.connectTCP("localhost", 0, ClientFactory()).port
>>>>>           
>> 0
>>     
>>>>> reactor.connectTCP("localhost", 0,
>>>>>           
>> ClientFactory()).getDestination().port
>> 0
>>     
>
> You will never want to connect to port 0 -- there is no such port as
> far as I know. Instead you can listen on it. The OS will then allocate
> a free port for you to listen on.
>
> So I think you have turned things upside down here :-)
>
>   
Yes, I realized that just after sending the email :-)

like you said :

 >>> reactor.listenTCP(0, Factory()).getHost().port
59768

or

 >>> reactor.listenTCP(0, Factory())._realPortNumber
47315

work :-)

thanks again to everyone who helpd,
Gabriel






From mailing_lists at evotex.ch  Wed Feb 27 03:57:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 27 Feb 2008 11:57:35 +0100
Subject: [Twisted-Python] How to get an unused port
In-Reply-To: <20080227092046.GA18967@steerpike.home.puzzling.org>
References: <47C527FD.3090203@evotex.ch>
	<20080227092046.GA18967@steerpike.home.puzzling.org>
Message-ID: <47C5421F.3050802@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
>   
>> Hello,
>>
>> I need to be able to get an unused port for a server, it will then 
>> communicate it to a third party.
>> I don't have any restrictions other than it shouldn't be a known used port 
>> (one used by other apps (above 1023)), but for that I'll probably have to 
>> create a list and verify manually. Does anyone know how to do this (without 
>> iterating all ports and trying), it must be possible since a client gets 
>> the next unused port from the OS, I'd like to do this with Twisted if 
>> possible.
>>     
>
> Pass 0 as the port number.
>
> -Andrew.
>
>   
Hello Andrew, thanks for the reply, I finally got it, see my last 
message on this thread.

Gabriel



From coder_gus at lavabit.com  Wed Feb 27 04:11:36 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Wed, 27 Feb 2008 13:11:36 +0200
Subject: [Twisted-Python] twisted application server
Message-ID: <47C54568.9000605@lavabit.com>

Hi,
I am in charge of writing an application server for a three-tier 
architecture system. It will receive requests&data trough an xml 
protocol agreed with the client devs. Basically it will work on a 
database and return the results to the client. The way I thought it is a 
twisted server accepts connections from the clients, a coordinator 
thread gets the request in a queue and pass them to free workers, which 
in turn upon completion will place the result in the thread coordinator 
response queue. The weird part is that another system places data in the 
database when a specific request comes in so I have to permanently pool 
the database for incoming data. This thing will be done with a pooling 
thread.
So, my question is: is this kind of architecture good to implement? 
(asynchronous server and threaded workers)
I might somehow miss some important details, but please feel free to ask 
questions.

Thanks.




From mg at daimi.au.dk  Wed Feb 27 04:22:29 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 27 Feb 2008 12:22:29 +0100
Subject: [Twisted-Python] Re: How to get an unused port
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch> <w1by796d6fm.fsf@thyra03.daimi.au.dk>
	<47C541F2.6070007@evotex.ch>
Message-ID: <w1btzjud4p6.fsf@thyra03.daimi.au.dk>

Gabriel Rossetti <mailing_lists at evotex.ch> writes:

>> You will never want to connect to port 0 -- there is no such port
>> as far as I know. Instead you can listen on it. The OS will then
>> allocate a free port for you to listen on.
>>
>> So I think you have turned things upside down here :-)
>
> Yes, I realized that just after sending the email :-)

Its always like that... :-) I'm glad you got it working!

> like you said :
>
>>>> reactor.listenTCP(0, Factory()).getHost().port
> 59768
>
> work :-)

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From glyph at divmod.com  Wed Feb 27 04:46:27 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 27 Feb 2008 11:46:27 -0000
Subject: [Twisted-Python] twisted application server
In-Reply-To: <47C54568.9000605@lavabit.com>
References: <47C54568.9000605@lavabit.com>
Message-ID: <20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>


On 11:11 am, coder_gus at lavabit.com wrote:
>So, my question is: is this kind of architecture good to implement? 
>(asynchronous server and threaded workers)

You might want to consider using process workers instead of thread 
workers, using spawnProcess and a simple control protocol.  This is 
easier to debug, since threads are painful to figure out, and it also 
scales better - you escape python's GIL and can take advantage of 
multiple cores, but even if it weren't for that, you can switch 
spawnProcess to some kind of remote connection API and run your 
processes remotely.



From therve at free.fr  Wed Feb 27 05:59:04 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 27 Feb 2008 13:59:04 +0100
Subject: [Twisted-Python] Re: How to get an unused port
In-Reply-To: <47C541F2.6070007@evotex.ch>
References: <47C527FD.3090203@evotex.ch>
	<6CFCFA71-846D-4E6B-8DA7-89BC4A013DEB@madebykite.com>
	<47C53D43.4020007@evotex.ch> <w1by796d6fm.fsf@thyra03.daimi.au.dk>
	<47C541F2.6070007@evotex.ch>
Message-ID: <20080227135904.wovdxvuj4c0g0w4w@wasabox.wasabout.net>

Quoting Gabriel Rossetti <mailing_lists at evotex.ch>:

>>>> reactor.listenTCP(0, Factory()).getHost().port
> 59768

That's the good thing to use.

> or
>
>>>> reactor.listenTCP(0, Factory())._realPortNumber
> 47315
>
> work :-)

Indeed, but please don't do that. The underscore prefix indicated a  
private member, so this is the kind of thing that can disappear or  
change without warnings. In this case, the previous pattern should do  
the job.

-- 
Thomas




From andrewfr_ice at yahoo.com  Wed Feb 27 08:48:27 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 27 Feb 2008 07:48:27 -0800 (PST)
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <E1JU1M9-0005fD-Em@cube.twistedmatrix.com>
Message-ID: <287172.43129.qm@web34204.mail.mud.yahoo.com>

Hi Steve et al:

>There are signs that there's going (again, hooray!)
to >be a concerted Twisted presence at PyCon 2008. I
am >hoping to demonstrate my ignorance publicly and
learn >something about Twisted by running one (or
more)
>Open Space sessions entitled "Teach Me Twisted", that
>reverse the usual flow

I am happy to share my ignorance....

Steve, right now I don't see a reservation for Twisted
in either the "Birds of a Feather" or "Open Spaces." I
would recommend you book a space soon.

Also I am not sure how the "open spaces" works. Is it
another talk. Or is it a bunch of one on ones, or one
to a few?

As I suggested in private, perhaps it would be best to
survey a few topics that interest folks. In turn, find
volunteers that know those areas and are willing to
talk about them.

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From drew.smathers at gmail.com  Wed Feb 27 09:12:53 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 11:12:53 -0500
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C52001.2080506@evotex.ch>
References: <47C52001.2080506@evotex.ch>
Message-ID: <368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>

On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello everyone,
>
>  I have a small question, I have a service which needs to sometimes send
>  data (without having received any prior to sending) and sometimes
>  receive data, which is better :
>
>  1) create a factory that inherits from ServerFactory and ClientFactory,
>  thus it can listen and send data
>
>  2) create a factory that inherits from ServerFactory only and uses a
>  single-use client (ClientCreator, as shown in the writing clients howto)
>  when it needs to send data
>

I'm not sure of there's a single right way to do it, but I wouldn't
bother inheriting from both ClientFactory and ServerFactory.  I think
you're on the write track with 2, though.

In most use cases you shouldn't have to create custom factories.  Just
write the protocol to support bidirectional comm and to create the
server:

f = Factory()
f.protocol = YourBidirectionalProtocol

Regarding the client, how you implement it depends on whether or not
the server is establishing the connection vs. reusing the existing
connection.  If you're establishing the connection (like in a cluster
app with known peers), just use ClientCreator.  If you're reusing the
existing connection, then you might not have to anything, unless you
have some state to set up which could be done by overriding
connectionMade on your Protocol.

Finally, take everything I've stated above with a grain of salt.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From steve at shrogers.com  Wed Feb 27 09:28:45 2008
From: steve at shrogers.com (Steven H. Rogers)
Date: Wed, 27 Feb 2008 09:28:45 -0700 (MST)
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <287172.43129.qm@web34204.mail.mud.yahoo.com>
References: <287172.43129.qm@web34204.mail.mud.yahoo.com>
Message-ID: <11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>

On Wed, February 27, 2008 08:48, Andrew Francis wrote:
>
> Also I am not sure how the "open spaces" works. Is it
> another talk. Or is it a bunch of one on ones, or one
> to a few?
>

Last year there was a board in a high traffic area for reserving open
space rooms and posting information about meetings in them.  It was pretty
dynamic.  Some open space meetings were prepared talks, while others were
just groups getting together to talk about a topic of interest, and I
think some may have turned into coding sessions.

# Steve



From nathan.stocks at gmail.com  Wed Feb 27 10:57:03 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 10:57:03 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
Message-ID: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>

Is the AMP protocol bidirectional (beyond the response you get to each
message)?  I'm really new to Twisted, and I followed the ampserver.py
and ampclient.py examples to get an AMP connection working, because
someone suggested that to me as an easy protocol to start with.
Although sending a message from the client to the server works fine, I
can't figure out how to initiate a message from the server to the
client over the connection that the client initially created.

I'm working on a little project where the "server" and the "client"
actually need to talk more like peers where each can initiate a
message to the other.  The server is outside the NAT, so it'd be best
if the communication could happen both ways over the connection that
the client initiates.

Could someone point me in the right direction?  I can provide my
existing code if that makes any difference.

~ Nathan



From drew.smathers at gmail.com  Wed Feb 27 11:50:41 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 13:50:41 -0500
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
Message-ID: <368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
> Is the AMP protocol bidirectional (beyond the response you get to each
>  message)?

Yes:
http://djfroofy.livejournal.com/3509.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nathan.stocks at gmail.com  Wed Feb 27 12:09:26 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 12:09:26 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
Message-ID: <96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>

On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  message)?
>
>  Yes:
>  http://djfroofy.livejournal.com/3509.html

Drew, you're everywhere!

Ok, so next question:

How do you access the callRemote method from outside the protocol
itself on the server side?  In the example above, from the server's
main() could you call pf.protocol.CallRemote()?

~ Nathan



From dripton at ripton.net  Wed Feb 27 12:10:19 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 27 Feb 2008 11:10:19 -0800
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
Message-ID: <20080227191019.GA22717@vidar.dreamhost.com>

On 2008.02.27 10:57:03 -0700, Nathan wrote:
> Is the AMP protocol bidirectional (beyond the response you get to each
> message)?  

Yes.

> I'm really new to Twisted, and I followed the ampserver.py
> and ampclient.py examples to get an AMP connection working, because
> someone suggested that to me as an easy protocol to start with.
> Although sending a message from the client to the server works fine, I
> can't figure out how to initiate a message from the server to the
> client over the connection that the client initially created.
> 
> I'm working on a little project where the "server" and the "client"
> actually need to talk more like peers where each can initiate a
> message to the other.  The server is outside the NAT, so it'd be best
> if the communication could happen both ways over the connection that
> the client initiates.
> 
> Could someone point me in the right direction?  I can provide my
> existing code if that makes any difference.

It was non-obvious to me too.

You call callRemote on the server-side Protocol to send a message to the
client side.

I have a little demonstration PyGTK / AMP chat program at
http://ripton.net/hg/ampchat/

-- 
David Ripton    dripton at ripton.net



From drew.smathers at gmail.com  Wed Feb 27 13:47:02 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 27 Feb 2008 15:47:02 -0500
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
	<96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
Message-ID: <368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>

On Wed, Feb 27, 2008 at 2:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
> On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  > On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  >  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  >  message)?
>  >
>  >  Yes:
>  >  http://djfroofy.livejournal.com/3509.html
>
>  Drew, you're everywhere!
>
>  Ok, so next question:
>
>  How do you access the callRemote method from outside the protocol
>  itself on the server side?  In the example above, from the server's
>  main() could you call pf.protocol.CallRemote()?
>

I think looking at David's chat demo will steer you in the right direction:

http://ripton.net/hg/ampchat/file/90a4007ef2a7/chatserver.py

In a nutshell - just keep them in list or dict bound to the factory
and be sure to do cleanup on connectionLost.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nathan.stocks at gmail.com  Wed Feb 27 13:46:56 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 13:46:56 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <20080227191019.GA22717@vidar.dreamhost.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
Message-ID: <96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
>  It was non-obvious to me too.
>
>  You call callRemote on the server-side Protocol to send a message to the
>  client side.
>
>  I have a little demonstration PyGTK / AMP chat program at
>  http://ripton.net/hg/ampchat/

I tried to look at your demo chat program, but all I could find was a
mercurial summary page.  Do I need to install mercurial and check it
out using that URL?  (I've never used mercurial)

I don't quite understand what you mean by "on the server-side
Protocol."  I have multiple clients connected to the server
simultaneously, so if you mean (in the case of
http://djfroofy.livejournal.com/3509.html ) calling
TheServer.callRemote, then I don't see how it would know _which_
client to send the message to.  I'm obviously misunderstanding
something!

~ Nathan



From nathan.stocks at gmail.com  Wed Feb 27 14:20:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 14:20:35 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <20080227191019.GA22717@vidar.dreamhost.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
Message-ID: <96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>

On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
> On 2008.02.27 10:57:03 -0700, Nathan wrote:
>  > Is the AMP protocol bidirectional (beyond the response you get to each
>  > message)?
>
>  Yes.
>
>
>  > I'm really new to Twisted, and I followed the ampserver.py
>  > and ampclient.py examples to get an AMP connection working, because
>  > someone suggested that to me as an easy protocol to start with.
>  > Although sending a message from the client to the server works fine, I
>  > can't figure out how to initiate a message from the server to the
>  > client over the connection that the client initially created.
>  >
>  > I'm working on a little project where the "server" and the "client"
>  > actually need to talk more like peers where each can initiate a
>  > message to the other.  The server is outside the NAT, so it'd be best
>  > if the communication could happen both ways over the connection that
>  > the client initiates.
>  >
>  > Could someone point me in the right direction?  I can provide my
>  > existing code if that makes any difference.
>
>  It was non-obvious to me too.
>
>  You call callRemote on the server-side Protocol to send a message to the
>  client side.
>
>  I have a little demonstration PyGTK / AMP chat program at
>  http://ripton.net/hg/ampchat/

Oh, wow.  I was looking at your example program, and thought "I should
look at the amp api", so I googled "twisted amp" and the top link was:

http://www.ripton.net/blog/?p=16

Which is your blog post about this thread, because of this thread.  I
don't know if I should be awed that Google's so dang quick, or that by
my multitude of questions I'm causing the universe to change...  :-)

~ Nathan



From nathan.stocks at gmail.com  Wed Feb 27 14:34:06 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 27 Feb 2008 14:34:06 -0700
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<368574aa0802271050r52adaad4uba8fbdf17dff8064@mail.gmail.com>
	<96c9d6a80802271109n696cdd3dq41b906c7b0ca9d79@mail.gmail.com>
	<368574aa0802271247x63179eb3ueec3434e3cf2184c@mail.gmail.com>
Message-ID: <96c9d6a80802271334n695bd356kdc7b729eea0da7cd@mail.gmail.com>

On Wed, Feb 27, 2008 at 1:47 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Wed, Feb 27, 2008 at 2:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > On Wed, Feb 27, 2008 at 11:50 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  >  > On Wed, Feb 27, 2008 at 12:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  >  >  > Is the AMP protocol bidirectional (beyond the response you get to each
>  >  >  >  message)?
>  >  >
>  >  >  Yes:
>  >  >  http://djfroofy.livejournal.com/3509.html
>  >
>  >  Drew, you're everywhere!
>  >
>  >  Ok, so next question:
>  >
>  >  How do you access the callRemote method from outside the protocol
>  >  itself on the server side?  In the example above, from the server's
>  >  main() could you call pf.protocol.CallRemote()?
>  >
>
>  I think looking at David's chat demo will steer you in the right direction:
>
>  http://ripton.net/hg/ampchat/file/90a4007ef2a7/chatserver.py
>
>  In a nutshell - just keep them in list or dict bound to the factory
>  and be sure to do cleanup on connectionLost.

Ok, so after much staring at code, it looks the pattern is as follows:

1)  Create a custom factory class that subclasses ServerFactory and
adds a dict to store "protocol" objects and sets its own self.protocol
to the custom protocol that subclasses amp.AMP.

2) Somewhere in the custom protocol (He did it in a login function,
but I'm assuming I could do it in connectionMade if I wanted to?),
access the factory's dict  through self.factory.whatever and stick
"self" (the current protocol object) in the dict, preferably keyed by
some identifier that lets you pick out the one you want later
(ServerFactory.protocol <=> AMP.factory ... so circular!)

3) Send messages from the server to a specific client with
your_factory.somedict[identifier].callRemote(SomeCommand)

Did I get that right?

~ Nathan



From dripton at ripton.net  Wed Feb 27 14:40:33 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 27 Feb 2008 13:40:33 -0800
Subject: [Twisted-Python] Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>
	<20080227191019.GA22717@vidar.dreamhost.com>
	<96c9d6a80802271246r12864c46nbda3eb6be97e39bd@mail.gmail.com>
Message-ID: <20080227214032.GA1314@vidar.dreamhost.com>

On 2008.02.27 13:46:56 -0700, Nathan wrote:
> On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
> >  It was non-obvious to me too.
> >
> >  You call callRemote on the server-side Protocol to send a message to the
> >  client side.
> >
> >  I have a little demonstration PyGTK / AMP chat program at
> >  http://ripton.net/hg/ampchat/
> 
> I tried to look at your demo chat program, but all I could find was a
> mercurial summary page.  Do I need to install mercurial and check it
> out using that URL?  (I've never used mercurial)

You can do that.  Or you can click around in the links within the
Mercurial web interface until you see the code.  (I think you want
"manifest" and "file".)

> I don't quite understand what you mean by "on the server-side
> Protocol."  I have multiple clients connected to the server
> simultaneously, so if you mean (in the case of
> http://djfroofy.livejournal.com/3509.html ) calling
> TheServer.callRemote, then I don't see how it would know _which_
> client to send the message to.  I'm obviously misunderstanding
> something!

Each time a client connects to the server, a new protocol instance is
created on the server side.  When the client successfully logs in, I
add the username:protocol to a dict in the server-side factory.  So I
know how to find clients by username.

Then if someone sends a private message, I lookup the target username's
protocol in the dict, and do protocol.callRemote(commands.Send, message,
sender)

-- 
David Ripton    dripton at ripton.net



From clemesha at gmail.com  Wed Feb 27 16:37:47 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 27 Feb 2008 15:37:47 -0800
Subject: [Twisted-Python] twisted application server
In-Reply-To: <20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
Message-ID: <d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>

On Wed, Feb 27, 2008 at 3:46 AM, <glyph at divmod.com> wrote:

>
> On 11:11 am, coder_gus at lavabit.com wrote:
> >So, my question is: is this kind of architecture good to implement?
> >(asynchronous server and threaded workers)
>
> You might want to consider using process workers instead of thread
> workers, using spawnProcess and a simple control protocol.  This is
> easier to debug, since threads are painful to figure out, and it also
> scales better - you escape python's GIL and can take advantage of
> multiple cores, but even if it weren't for that, you can switch
> spawnProcess to some kind of remote connection API and run your
> processes remotely.


Would you say that this method of using a separate process instead of
threads to do work also is possibly good for database operations?

I'm always reading 'beware of threads' ;) with respect to Twisted,
so using a very simple control protocol to manage a separate
dedicate database process might be better than
relying on the threading that 'adbapi' uses?

Any comments on this would be appreciated.

Thanks,
-Alex


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080227/1e9802d9/attachment.html>

From glyph at divmod.com  Wed Feb 27 17:20:29 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 28 Feb 2008 00:20:29 -0000
Subject: [Twisted-Python] twisted application server
In-Reply-To: <d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
Message-ID: <20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>

On 11:37 pm, clemesha at gmail.com wrote:
>Would you say that this method of using a separate process instead of
>threads to do work also is possibly good for database operations?

Sure.
>I'm always reading 'beware of threads' ;) with respect to Twisted,
>so using a very simple control protocol to manage a separate
>dedicate database process might be better than
>relying on the threading that 'adbapi' uses?

It would definitely work.  The main reason adbapi itself isn't done this 
way is that setting up a process pool is unfortunately more work than 
spawning a thread - you have to decide on a proper set of environment 
variables, locate the python interpreter, locate the script that you're 
going to run, make sure that script is installed by setup.py, decide on 
a control protocol, wait for the subprocess to start up before sending 
it messages, shut down the process appropriately, catch process 
termination and restart (or not), etc etc etc.  Twisted should really 
have a nice API that does all that stuff for you, though, and it's a 
shame that it doesn't.

The other reason is that adbapi is old.  If we were going to implement 
something like ADBAPI today, we'd probably write a process pool first, 
but adbapi was written as a quick hack to get some database integration 
a long time ago.

The only caveat is that additional Python interpreters take up more RAM 
than additional threads.  If the database processes are doing any heavy 
CPU lifting though, this cost could well be worth it.



From big_tyo at inf.its-sby.edu  Wed Feb 27 22:59:43 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Thu, 28 Feb 2008 12:59:43 +0700 (ICT)
Subject: [Twisted-Python] thread created from tcp connection
Message-ID: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>

hi,my name is raditya from indonesia,i'm newbie at twisted... i tried to
develop a server that receive data from many clients and send the same
data to all connected clients,and somehow i found some problem here.

The Problem is i still haven't figure out how to send some parameters to a
thread that created from established tcp connection.

please,can anyone help me with this little problem of mine?


best regard,
raditya


ps : sorry for the bad english


-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------




From glyph at divmod.com  Wed Feb 27 23:11:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 28 Feb 2008 06:11:58 -0000
Subject: [Twisted-Python] thread created from tcp connection
In-Reply-To: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>
References: <49183.10.126.11.163.1204178383.squirrel@202.46.129.82>
Message-ID: <20080228061158.21558.1802159749.divmod.xquotient.7194@joule.divmod.com>


On 05:59 am, big_tyo at inf.its-sby.edu wrote:
>The Problem is i still haven't figure out how to send some parameters 
>to a
>thread that created from established tcp connection.

The real problem is probably that Twisted is not thread safe; you 
probably should not be using threads at all.
>ps : sorry for the bad english

No problem!  I'm sure my indonesian is much worse :).  Thanks for using 
Twisted.

Since your english is not very good, it would be best if you could 
include Python code with your next message, so we can know exactly what 
you are talking about.



From coder_gus at lavabit.com  Thu Feb 28 04:58:04 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Thu, 28 Feb 2008 13:58:04 +0200
Subject: [Twisted-Python] connection identification string
Message-ID: <47C6A1CC.4020209@lavabit.com>

Is there a way to identify a connection by a number/string for later use?
It could be easily implemented or given the async character of twisted 
probably is not worth it ... but just as a hint? Is there?

Thanks.




From george at ringdevelopment.com  Thu Feb 28 06:32:38 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 28 Feb 2008 08:32:38 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <1204205558.29665.31.camel@localhost.localdomain>

On Thu, 2008-02-28 at 13:58 +0200, coder_gus wrote:
> Is there a way to identify a connection by a number/string for later use?
> It could be easily implemented or given the async character of twisted 
> probably is not worth it ... but just as a hint? Is there?

I've used a dictionary to keep track of sessions, with a unique string
to identify a session object.
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From itamar at itamarst.org  Thu Feb 28 06:41:03 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2008 08:41:03 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <1204206064.11169.94.camel@localhost.localdomain>


On Thu, 2008-02-28 at 13:58 +0200, coder_gus wrote:
> Is there a way to identify a connection by a number/string for later use?
> It could be easily implemented or given the async character of twisted 
> probably is not worth it ... but just as a hint? Is there?

Most of the time you can just use a reference to the Protocol
instance... if you need to refer to the connection based on input from
network protocol you can just use a dictionary mapping strings to
Protocols.




From radix at twistedmatrix.com  Thu Feb 28 06:48:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 28 Feb 2008 08:48:55 -0500
Subject: [Twisted-Python] connection identification string
In-Reply-To: <47C6A1CC.4020209@lavabit.com>
References: <47C6A1CC.4020209@lavabit.com>
Message-ID: <60ed19d40802280548n39398aeeo7f3d7a7bb40c0df8@mail.gmail.com>

On Thu, Feb 28, 2008 at 6:58 AM, coder_gus <coder_gus at lavabit.com> wrote:
> Is there a way to identify a connection by a number/string for later use?
>  It could be easily implemented or given the async character of twisted
>  probably is not worth it ... but just as a hint? Is there?

Protocol objects can be put inside of Python data structures like
dicts and lists. For example, it may be useful for an IRC server to
have a mapping of {username: protocol instance}.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Thu Feb 28 07:42:00 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 28 Feb 2008 15:42:00 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
References: <47C52001.2080506@evotex.ch>
	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
Message-ID: <47C6C838.4020308@evotex.ch>

Drew Smathers wrote:
> On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello everyone,
>>
>>  I have a small question, I have a service which needs to sometimes send
>>  data (without having received any prior to sending) and sometimes
>>  receive data, which is better :
>>
>>  1) create a factory that inherits from ServerFactory and ClientFactory,
>>  thus it can listen and send data
>>
>>  2) create a factory that inherits from ServerFactory only and uses a
>>  single-use client (ClientCreator, as shown in the writing clients howto)
>>  when it needs to send data
>>
>>     
>
> I'm not sure of there's a single right way to do it, but I wouldn't
> bother inheriting from both ClientFactory and ServerFactory.  I think
> you're on the write track with 2, though.
>
>   
I had taken route 1 up until now (I'm thinking about switching...)

Maybe there's something I haven't quite gotten, when ClientA initially 
connects to the server, the factory creates an instance of the protocol, 
correct? Now ClientA sends some data to the server, which processes it 
and sends something back. After that, the TCP session ends, and the 
client disconnects, and the protocols instance dies. Is this correct or 
does it live on and get reused somehow? I ask this because since 
initially the clients send data to the server (registration), the server 
will there after send data to the clients. This makes the client have to 
connect to the server initially though a port using reactor.connectTCP() 
and listen to a port (that the server now knows since the client 
registered itself) using reactor.listenTCP(). I think I have to use 
reactor.connectTCP() instead of  ClientCreator since the connection has 
to happen at the beginning and a transport needs to exist before I can 
send anything. Well...now that I think about it, I could have the 
factory register the client...... that would make me not have to inherit 
from the Client factory.... (I've now switched to solution 2, see last 
part of this email).
> In most use cases you shouldn't have to create custom factories.  
I have to since I need a non-reconnecting client xmlstream, and the 
factory used with xmlstreams is a reconnecting client.
> Just
> write the protocol to support bidirectional comm and to create the
> server:
>
> f = Factory()
> f.protocol = YourBidirectionalProtocol
>
> Regarding the client, how you implement it depends on whether or not
> the server is establishing the connection vs. reusing the existing
> connection.  
What exactly do you mean by reusing an existing connection?
> If you're establishing the connection (like in a cluster
> app with known peers), just use ClientCreator.  If you're reusing the
> existing connection, then you might not have to anything, unless you
> have some state to set up which could be done by overriding
> connectionMade on your Protocol.
>
> Finally, take everything I've stated above with a grain of salt.
>
>   
Thanks, I find it fairly hard to get used to Twisted, I wanted to buy 
the book, but it was written in 2005 and I'm not sure if it's still 
valid with today's version.

BTW, any idea why I'm getting this type of behavior (one server, 3 
distinct connections from clients) :

Daemon listening for connections...

daemon proto instance 1
Connection from 127.0.0.1:57821! <-- ok, Client1
....
daemon proto instance 2
Connection from 127.0.0.1:57821! <-- Client1 again????? why?
Connection from 127.0.0.1:57823! <-- ok, Client2
....
daemon proto instance 3
Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
Connection from 127.0.0.1:57824! <-- ok, Client3

Oh, and by the time I finished writing this email, I've switched to 
solution 2, but I still get the  behavior above.



From drew.smathers at gmail.com  Thu Feb 28 08:39:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 28 Feb 2008 10:39:52 -0500
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C6C838.4020308@evotex.ch>
References: <47C52001.2080506@evotex.ch>
	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>
	<47C6C838.4020308@evotex.ch>
Message-ID: <368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>

On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Drew Smathers wrote:
>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>  > <mailing_lists at evotex.ch> wrote:
>  >
>  >> Hello everyone,
>  >>
>  >>  I have a small question, I have a service which needs to sometimes send
>  >>  data (without having received any prior to sending) and sometimes
>  >>  receive data, which is better :
>  >>
>  >>  1) create a factory that inherits from ServerFactory and ClientFactory,
>  >>  thus it can listen and send data
>  >>
>  >>  2) create a factory that inherits from ServerFactory only and uses a
>  >>  single-use client (ClientCreator, as shown in the writing clients howto)
>  >>  when it needs to send data
>  >>
>  >>
>  >
>  > I'm not sure of there's a single right way to do it, but I wouldn't
>  > bother inheriting from both ClientFactory and ServerFactory.  I think
>  > you're on the write track with 2, though.
>  >
>  >
>  I had taken route 1 up until now (I'm thinking about switching...)
>
>  Maybe there's something I haven't quite gotten, when ClientA initially
>  connects to the server, the factory creates an instance of the protocol,
>  correct?

Yes.

> Now ClientA sends some data to the server, which processes it
>  and sends something back. After that, the TCP session ends, and the
>  client disconnects, and the protocols instance dies. Is this correct or
>  does it live on and get reused somehow?

The protocol instance does not get reused.

>  I ask this because since
>  initially the clients send data to the server (registration), the server
>  will there after send data to the clients. This makes the client have to
>  connect to the server initially though a port using reactor.connectTCP()
>  and listen to a port (that the server now knows since the client
>  registered itself) using reactor.listenTCP().

This is might be a bad idea - depending on the locality of your
servers and clients. Why not just use the established connection?  If
the *client* is listening on a port then it isn't just a client - it's
a server, or a peer in a clustered system.

>  I think I have to use
>  reactor.connectTCP() instead of  ClientCreator since the connection has
>  to happen at the beginning and a transport needs to exist before I can
>  send anything. Well...now that I think about it, I could have the
>  factory register the client...... that would make me not have to inherit
>  from the Client factory.... (I've now switched to solution 2, see last
>  part of this email).
>

Ok.

> > In most use cases you shouldn't have to create custom factories.
>  I have to since I need a non-reconnecting client xmlstream, and the
>  factory used with xmlstreams is a reconnecting client.
>
> > Just
>  > write the protocol to support bidirectional comm and to create the
>  > server:
>  >
>  > f = Factory()
>  > f.protocol = YourBidirectionalProtocol
>  >
>  > Regarding the client, how you implement it depends on whether or not
>  > the server is establishing the connection vs. reusing the existing
>  > connection.
>  What exactly do you mean by reusing an existing connection?
>
> > If you're establishing the connection (like in a cluster
>  > app with known peers), just use ClientCreator.  If you're reusing the
>  > existing connection, then you might not have to anything, unless you
>  > have some state to set up which could be done by overriding
>  > connectionMade on your Protocol.
>  >
>  > Finally, take everything I've stated above with a grain of salt.
>  >
>  >
>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>  the book, but it was written in 2005 and I'm not sure if it's still
>  valid with today's version.
>

The book it is not up to date.

>  BTW, any idea why I'm getting this type of behavior (one server, 3
>  distinct connections from clients) :
>

Without seeing your code, no.

>  Daemon listening for connections...
>
>  daemon proto instance 1
>  Connection from 127.0.0.1:57821! <-- ok, Client1
>  ....
>  daemon proto instance 2
>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>  Connection from 127.0.0.1:57823! <-- ok, Client2
>  ....
>  daemon proto instance 3
>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>  Connection from 127.0.0.1:57824! <-- ok, Client3
>
>  Oh, and by the time I finished writing this email, I've switched to
>  solution 2, but I still get the  behavior above.
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From mailing_lists at evotex.ch  Thu Feb 28 09:14:29 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 28 Feb 2008 17:14:29 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
References: <47C52001.2080506@evotex.ch>	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>	<47C6C838.4020308@evotex.ch>
	<368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
Message-ID: <47C6DDE5.7030207@evotex.ch>

Drew Smathers wrote:
> On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Drew Smathers wrote:
>>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>>  > <mailing_lists at evotex.ch> wrote:
>>  >
>>  >> Hello everyone,
>>  >>
>>  >>  I have a small question, I have a service which needs to sometimes send
>>  >>  data (without having received any prior to sending) and sometimes
>>  >>  receive data, which is better :
>>  >>
>>  >>  1) create a factory that inherits from ServerFactory and ClientFactory,
>>  >>  thus it can listen and send data
>>  >>
>>  >>  2) create a factory that inherits from ServerFactory only and uses a
>>  >>  single-use client (ClientCreator, as shown in the writing clients howto)
>>  >>  when it needs to send data
>>  >>
>>  >>
>>  >
>>  > I'm not sure of there's a single right way to do it, but I wouldn't
>>  > bother inheriting from both ClientFactory and ServerFactory.  I think
>>  > you're on the write track with 2, though.
>>  >
>>  >
>>  I had taken route 1 up until now (I'm thinking about switching...)
>>
>>  Maybe there's something I haven't quite gotten, when ClientA initially
>>  connects to the server, the factory creates an instance of the protocol,
>>  correct?
>>     
>
> Yes.
>
>   
Ok
>> Now ClientA sends some data to the server, which processes it
>>  and sends something back. After that, the TCP session ends, and the
>>  client disconnects, and the protocols instance dies. Is this correct or
>>  does it live on and get reused somehow?
>>     
>
> The protocol instance does not get reused.
>
>   
Ok, so every time there is data exchanged (new tcp/ip session) then a 
new protocol instance is created. Any persistence/state data must 
therefore be stored in the factory if I understand correctly.
>>  I ask this because since
>>  initially the clients send data to the server (registration), the server
>>  will there after send data to the clients. This makes the client have to
>>  connect to the server initially though a port using reactor.connectTCP()
>>  and listen to a port (that the server now knows since the client
>>  registered itself) using reactor.listenTCP().
>>     
>
> This is might be a bad idea - depending on the locality of your
> servers and clients. Why not just use the established connection?  
The idea is to have services register on a central server then they 
transmit messages to the daemon which routes/relays them to the correct 
service, sort of like a micro-kernel. So, sometimes the services 
initiate the communication process and sometimes they don't, the central 
server does. This makes the services be servers and clients. Imagine this :

service1 has some data that needs to be processed by service2 (which 
will in turn send it to another service), is sends it to the central 
server, which sends it to service2. Service2 does whatever it has to do, 
and then sends it to the central server to route to service_n.

So the established connection is usually useless, except for sending 
some sort of ACK maybe.

> If
> the *client* is listening on a port then it isn't just a client - it's
> a server, or a peer in a clustered system.
>
>   
I guess it's/they a sort of peer(s) in a clustered system, it/they may 
reside on the same machine as the central server or not.
>>  I think I have to use
>>  reactor.connectTCP() instead of  ClientCreator since the connection has
>>  to happen at the beginning and a transport needs to exist before I can
>>  send anything. Well...now that I think about it, I could have the
>>  factory register the client...... that would make me not have to inherit
>>  from the Client factory.... (I've now switched to solution 2, see last
>>  part of this email).
>>
>>     
>
> Ok.
>
>   
>>> In most use cases you shouldn't have to create custom factories.
>>>       
>>  I have to since I need a non-reconnecting client xmlstream, and the
>>  factory used with xmlstreams is a reconnecting client.
>>
>>     
>>> Just
>>>       
>>  > write the protocol to support bidirectional comm and to create the
>>  > server:
>>  >
>>  > f = Factory()
>>  > f.protocol = YourBidirectionalProtocol
>>  >
>>  > Regarding the client, how you implement it depends on whether or not
>>  > the server is establishing the connection vs. reusing the existing
>>  > connection.
>>  What exactly do you mean by reusing an existing connection?
>>
>>     
>>> If you're establishing the connection (like in a cluster
>>>       
>>  > app with known peers), just use ClientCreator.  If you're reusing the
>>  > existing connection, then you might not have to anything, unless you
>>  > have some state to set up which could be done by overriding
>>  > connectionMade on your Protocol.
>>  >
>>  > Finally, take everything I've stated above with a grain of salt.
>>  >
>>  >
>>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>>  the book, but it was written in 2005 and I'm not sure if it's still
>>  valid with today's version.
>>
>>     
>
> The book it is not up to date.
>
>   
>>  BTW, any idea why I'm getting this type of behavior (one server, 3
>>  distinct connections from clients) :
>>
>>     
>
> Without seeing your code, no.
>
>   
ok, it's a bit long.....

-------------------------"Central server" aka 
Daemon---------------------------------------------------------------------------

class MdfXmlStreamFactory(XmlStreamFactoryMixin):
    """
    The factory class used by the daemon and services to create
    protocol instances
    """
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        XmlStreamFactoryMixin.__init__(self)
        self.args = args
        self.kwargs = kwargs
        self.protocol = proto

    def buildProtocol(self, addr):
        """
        Builds the protocol and
       
        @param addr: The address (protocol, IP, port) of the connection
        @type addr: 
L{IPv4Address<twisted.internet.address._ServerFactoryIPv4Address>}
       
        @return: an instance of the built protocol
        """
        #self.resetDelay()
        xs = self.protocol(*self.args, **self.kwargs)
        xs.factory = self
        self.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, 
xs.connected) # stream connect event or xml start event???
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)

        return xs

class MdfXmlStreamServerFactory(MdfXmlStreamFactory, ServerFactory):
    """
    The factory class used by the daemon to create
    protocol instances
    """
   
    # The registered services
    _services = {}
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        MdfXmlStreamFactory.__init__(self, proto, *args, **kwargs)

class Daemon(xmlstream.XmlStream):
    """
    The daemon is the implementation of a microkernel type inter-service
    communication (ISC) routing daemon. Here is how it works :
   
        - Services announce their presence to the daemon by giving their 
name,
          version, ip, port and a list of message-types that they accept
        - The daemon listens for messages from the attached services, 
when one
          is received, it routes the message to the correct service
   
    @todo: add unique id generation/verification
    """
   
    # Holds the real method
    __dataReceived = xmlstream.XmlStream.dataReceived
   
    # The registered services
    #__services = {}
    cnt = 1
   
    def __init__(self, *args, **kwargs):
        """
        Constructor
       
        @param args: non-keyword args
        @type args: C{tuple}
        @param kwargs: keyword args
        @type kwargs: C{dict}
        """
        xmlstream.XmlStream.__init__(self)
        self.__routeTo = None
        self.__lastMsgType = None
        self.__lastMsgId = None
        self.inst = Daemon.cnt
        Daemon.cnt += 1
        print "daemon proto instance %d" % self.inst
       
   
    def connectionMade(self):
        xmlstream.XmlStream.connectionMade(self)
   
    def dataReceived(self, data):
        """
        Called everytime data is received
       
        @param data: the data received
        @type data: C{object} (anything)
        """
        self.__dataReceived(data)
       
    def connectionLost(self, reason):
        """
        Called when the connection is shut down, restores the
        dataReceived method
       
        @param reason: the reason why the connection was lost
        @type reason: C{str}
        """
        self.__dataReceived = xmlstream.XmlStream.dataReceived
        self.__routeTo = None
        xmlstream.XmlStream.connectionLost(self, reason)
   
    def __onHeader(self, element):
        """
        Analyse a header and set the data's recipiant
       
        @param element: the header element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
        """
        print "got header from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())
       
        self.__lastMsgId = element.getAttribute("id")
        self.__lastMsgType = element.getAttribute("type")
        if(self.__lastMsgType != constants._REG_MSG_TYPE):
            self.__routeTo = self.factory._services[type]
            self.__dataReceived = __routeDataReceived
   
    def __onReg(self, element):
        """
        Register a service
       
        @param element: the registeration element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
        """
        print "got reg from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())

        name = 
str(xpath.XPathQuery("/body/reg/name").queryForNodes(element)[0])
        version = 
str(xpath.XPathQuery("/body/reg/version").queryForNodes(element)[0])
        #address = 
str(xpath.XPathQuery("/body/reg/address").queryForNodes(element)[0])
        port = 
int(str(xpath.XPathQuery("/body/reg/port").queryForNodes(element)[0]))
        msgs = [ str(m) for m in 
xpath.XPathQuery("/body/reg/message_type").queryForNodes(element) ]
       
        address = self.transport.getPeer().host
        #port = self.transport.getPeer().port
        serv = ServiceReg(name, version, msgs, address, port)
        self.__registerService(serv)
       
    def connected(self, xs):
        """
        Called when a client connects using an XML stream
       
        @param xs: the current xml stream
        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        """
       
        print 'Connection from %s:%s!' % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port))
        xs.addObserver("/header", self.__onHeader)
        xs.addObserver("/body/reg", self.__onReg)
       
    def __routeDataReceived(self, data):
        """
        Pushes the messages to the correct service
       
        @param data: the data received
        @type data: C{object} (anything)
        """
        print "route '%s' to : %s" % (str(data), self.__routeTo)
       
        utils.sendMessage(self.__routeTo.ip, self.__routeTo.port, data)
        #self.send(data)
       
    def __registerService(self, service):
        """
        Register a service
       
        @param service: the service to register
        @type service: L{ServiceReg}
       
        @raise ServiceMessageConflictError: if another service already 
has a
                                            message registered that the 
current
                                            service is trying to register
       
        @todo: what is to be done with the exception once raised???? 
Finish status message...
        """
       
        def foundConflict(self, msgTypes):
            """
            Check if there is a conflict with message types to be registered
            by this service
           
            @param service: the service messages to check for conflicts
            @type service: C{str}
           
            @return: the conflicting service type or None if no
                    conflict is found
            """
            for mt in msgTypes:
                if(self.factory._services.has_key(mt)):
                    return mt
            return None
       
        print "Registering service : ", str(service)
       
        try:
            #
            # Check if another service already registered a message type 
that
            # the current service is trying to register
            #
            conflict = foundConflict(self, service.acceptedMsgs)
            if(conflict != None):
                raise ServiceMessageConflictError(conflict)
           
            #
            # Regrister the message types and this service
            #
            for msgType in service.acceptedMsgs:
                self.factory._services[msgType] = service
               
        except ServiceMessageConflictError, reason:
            status = 
utils.createConfirmationMsgBody(constants._MSG_FAILURE_TYPE,
                                                     self.__lastMsgId, 
str(reason))
        else:
            status = 
utils.createConfirmationMsgBody(constants._MSG_SUCCESS_TYPE,
                                                     self.__lastMsgId)
           
        #
        # Send registeration confirmation (succeeded or failed)
        #
        msgRoot = utils.createMessage(constants._REG_MSG_CONFIRM_TYPE,
                                      constants._CONF_MSG_ID,
                                      constants._DAEMON_SERVICE_NAME,
                                      constants._MSG_SPEC_VERSION,
                                      constants._STATUS_DATA_TYPE, status)
       
        print "Sending confirmation message to %s : %s" % 
(self.transport.getPeer().host, msgRoot.toXml())
       
        #self.send(msgRoot)
        utils.sendMessage(self.transport.getPeer().host, service.port, 
msgRoot)
   
if(__name__ == "__main__"):

    reactor.listenTCP(4321, MdfXmlStreamServerFactory(Daemon))
    print "Listening for connections..."
    reactor.run()

----------------------------------------"Service"-----------------------------------------------------------------------------------------------------

class MdfXmlStreamClientFactory(MdfXmlStreamServerFactory):
    """
    The factory class used by the services to create
    protocol instances
   
    @attention: this class might dissapear, I have to see if it's useful 
to keep it or not
    """
   
    __daemonAddrs = None
    __daemonPort = None
   
    def __init__(self, proto, *args, **kwargs):
        """
        Constructor
       
        @param proto: the protocol to use
        @type proto: a subclass of 
L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
        @param args: misc args
        @type args: C{tuple}
        @param kwargs: misc keyword args
        @type kwargs: C{dict}
        """
        MdfXmlStreamServerFactory.__init__(self, proto, *args, **kwargs)
        self._serviceInfo = ServiceReg(kwargs["name"], 
kwargs["version"], list(kwargs.get("messageTypes", [])))
        MdfXmlStreamClientFactory.__daemonAddrs = kwargs["address"]
        MdfXmlStreamClientFactory.__daemonPort = kwargs["port"]
       
    def register(self, port):
        """
        Register the service
       
        @param port: the service's port
        @type port: C{int}
        """
        self._serviceInfo.port = port
        msgBodyData = utils.createRegMsgBody(self._serviceInfo.name,
                                             self._serviceInfo.version,
                                             str(self._serviceInfo.port),
                                             self._serviceInfo.acceptedMsgs)
       
        msgRoot = utils.createMessage(constants._REG_MSG_TYPE,
                                      constants._REG_MSG_ID,
                                      self._serviceInfo.name,
                                      constants._MSG_SPEC_VERSION,
                                      constants._REG_DATA_TYPE, msgBodyData)
       
        utils.sendMessage(MdfXmlStreamClientFactory.__daemonAddrs,
                          MdfXmlStreamClientFactory.__daemonPort,
                          msgRoot)

class BaseService(xmlstream.XmlStream):
    """
    The service is the implementation of a microkernel type inter-service
    communication (ISC) endpoint. Here is how it works :
   
        - Services announce their presence to the daemon by giving their 
name,
          version, ip, port and a list of message-types that they accept
        - The daemon listens for messages from the attached services, 
when one
          is received, it routes the message to the correct service
         
    @todo: add unique id generation/verification
    """
   
    def __init__(self, *args, **kwargs):
        """
        Constructor
       
        @param args: non-keyword args
        @type args: C{tuple}
        @param kwargs: keyword args
        @type kwargs: C{dict}
        """
        xmlstream.XmlStream.__init__(self)
        self._msgSrc = None
        self._msgDest = None
        self._msgBodyData = None
        self._registered = False
   
    def _onHeader(self, element):
        """
        Analyse a header and save the source and destination
       
        @param element: the header element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add msg spec version verification
        @todo: add id verification???
        """
        print "got header from %s:%s : %s" % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port), 
element.toXml())
       
        self._msgSrc = 
xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("source")
        self._msgDest = 
xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("destination")
       
    def _onBody(self, element):
        """
        Get the body act accordingly
       
        @param element: the body element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add data type verification
        @todo: call data action callbacks
        """
        self._msgBodyData = 
xpath.XPathQuery("/body").queryForNodes(element)[0].toXml()
        print "_onbody : ", self._msgBodyData
       
    def _onConfirm(self, element):
        """
        Get the confirmation message and act accordingly
       
        @param element: the confirmation element (XML)
        @type element: L{Element<twisted.words.xish.domish.Element>}
       
        @todo: add data type verification
        @todo: call data action callbacks
        """
        status = 
str(xpath.XPathQuery("/body/conf/status").queryForNodes(element)[0])
        id = 
int(str(xpath.XPathQuery("/body/conf/id").queryForNodes(element)[0]))
        msg = 
str(xpath.XPathQuery("/body/conf/msg").queryForNodes(element)[0])
        if(id == constants._REG_MSG_ID):
            if(status == constants._MSG_SUCCESS_TYPE):
                self._registered = True
       
    def connected(self, xs):
        """
        Called when a client connects using an XML stream
       
        @param xs: the current xml stream
        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
       
        @todo: add data action callbacks
        """
        print 'Connection from %s:%s!' % 
(str(self.transport.getPeer().host), str(self.transport.getPeer().port))
        xs.addObserver("/header", self._onHeader)
        xs.addObserver("/body/conf", self._onConfirm)
        xs.addObserver("/body", self._onBody)
       

def start(daemonAddrs, daemonPort, serviceRef, serviceName, 
serviceVersion, serviceMessageTypes):
    """
    Start the daemon
   
    @param daemonPort: the port the daemon listens on
    @type daemonPort: C{int}
    @param serviceRef: a reference to the service's class
    @type serviceRef: a subclass of L{BaseService<service.BaseService>}
    @param serviceName: the service's name
    @type serviceName: C{str}
    @param serviceVersion: the service's version
    @type serviceVersion: C{str}
    @param serviceMessageTypes: the list of messages the service registers
    @type serviceMessageTypes: C{str list}
    """
    f = MdfXmlStreamClientFactory(serviceRef, address=daemonAddrs, 
port=daemonPort, name=serviceName, version=serviceVersion, 
messageTypes=serviceMessageTypes)
    port = reactor.listenTCP(0, f).getHost().port
    f.register(port)
    print port
   
    reactor.run()

if(__name__ == "__main__"):

    start("localhost", 4321, BaseService, "service_base", "1.0", ["all"])
>>  Daemon listening for connections...
>>
>>  daemon proto instance 1
>>  Connection from 127.0.0.1:57821! <-- ok, Client1
>>  ....
>>  daemon proto instance 2
>>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>>  Connection from 127.0.0.1:57823! <-- ok, Client2
>>  ....
>>  daemon proto instance 3
>>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>>  Connection from 127.0.0.1:57824! <-- ok, Client3
>>
>>  Oh, and by the time I finished writing this email, I've switched to
>>  solution 2, but I still get the  behavior above.
>>
>>
>>
>>  _______________________________________________
>>  Twisted-Python mailing list
>>  Twisted-Python at twistedmatrix.com
>>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>   
Thank you,
Gabriel



From camrdale at gmail.com  Thu Feb 28 13:34:34 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 28 Feb 2008 12:34:34 -0800
Subject: [Twisted-Python] Throttling a web2 server
In-Reply-To: <20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>
References: <f4438a6a0802261212k304adfc2gac2738985d2c3de6@mail.gmail.com>
	<20080226211703.6859.1386486097.divmod.quotient.13619@ohm>
	<f4438a6a0802262320m680cd5ebk373d3cd3b7b1209a@mail.gmail.com>
	<20080227111959.4hppx6x0v4ogoos8@wasabox.wasabout.net>
Message-ID: <f4438a6a0802281234v3377e269jf3a4463e69d84e01@mail.gmail.com>

On 2/27/08, Thomas Hervé <therve at free.fr> wrote:
> Thanks. Some maintenance on this would be great.

I'm not sure what you mean, is there some current maintenance (e.g.
more comments) you think should be added now? or do you refer to
future maintenance in case things break?

> I haven't very closely at your patch, but there is definitely
>  something missing: tests. It's a requirement for anything going into
>  Twisted, and generally a requirement for making something works.

Attached is a patch to twisted.test.test_policies.py to work with the
modified policies.py. In preparing it, I did fix one bug in my
previous policies.py which caused the write limiter to always be
active, so I attach an updated (fixed) patch of policies.py.

One thing I found in the tests is that the resumeProducing() calls
that my modified policies.py schedules via reactor.callLater() are
never called. This is (I believe) an artifact of the test, as the test
uses the twisted.internet.task.Clock's advance function, which only
runs scheduled calls added to it and not the reactor. Being unfamiliar
with twisted's testing framework, and having spent FAR too much time
on this already, I was not able to modify the test to work properly
with the reactor.callLater's, so I commented out those parts of the
test.

>  The discussion should probably continue in the tracker. You can open a
>  ticket, or maybe attach your patch at
>  http://twistedmatrix.com/trac/ticket/1460 (which doesn't exactly
>  describe the same goal).

Noted, though I prefer email.

Thanks,
Cameron
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_policies.py.patch
Type: text/x-diff
Size: 1551 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080228/dd4955f5/attachment-0004.patch>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: policies.py.patch
Type: text/x-diff
Size: 7652 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080228/dd4955f5/attachment-0005.patch>

From nathan.stocks at gmail.com  Thu Feb 28 13:48:55 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 28 Feb 2008 13:48:55 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
Message-ID: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>

My project teammate has a nearly identical MacBook Pro as mine (we're
both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
source (sudo python setup.py install) succeeds on my machine, while on
his machine it complains about a missing Python.h file.  Does anyone
know what package provides that Python.h file?  Is it one of the
packages on the Leopard DVD?

~ Nathan



From dreid at dreid.org  Thu Feb 28 15:07:58 2008
From: dreid at dreid.org (David Reid)
Date: Thu, 28 Feb 2008 14:07:58 -0800
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
Message-ID: <CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>


On Feb 28, 2008, at 12:48 PM, Nathan wrote:

> My project teammate has a nearly identical MacBook Pro as mine (we're
> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
> source (sudo python setup.py install) succeeds on my machine, while on
> his machine it complains about a missing Python.h file.  Does anyone
> know what package provides that Python.h file?  Is it one of the
> packages on the Leopard DVD?

Developer Tools.

There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard

-David

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz









From nathan.stocks at gmail.com  Thu Feb 28 16:19:25 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 28 Feb 2008 16:19:25 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
Message-ID: <96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>

On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
>
>
>  On Feb 28, 2008, at 12:48 PM, Nathan wrote:
>
>  > My project teammate has a nearly identical MacBook Pro as mine (we're
>  > both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
>  > source (sudo python setup.py install) succeeds on my machine, while on
>  > his machine it complains about a missing Python.h file.  Does anyone
>  > know what package provides that Python.h file?  Is it one of the
>  > packages on the Leopard DVD?
>
>  Developer Tools.
>
>  There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard

Yes, I should have mentioned that I found a binary package for him and
installed it.  Nevertheless, I really would like to know why it didn't
work, as I don't want to depend on someone else to package it for me.
Sometimes it's nice to be able to use the latest version in the
trunk...

~ Nathan



From dreid at dreid.org  Thu Feb 28 17:11:30 2008
From: dreid at dreid.org (David Reid)
Date: Thu, 28 Feb 2008 16:11:30 -0800
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
Message-ID: <A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>


On Feb 28, 2008, at 3:19 PM, Nathan wrote:

> On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
>>
>>
>> On Feb 28, 2008, at 12:48 PM, Nathan wrote:
>>
>>> My project teammate has a nearly identical MacBook Pro as mine  
>>> (we're
>>> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
>>> source (sudo python setup.py install) succeeds on my machine,  
>>> while on
>>> his machine it complains about a missing Python.h file.  Does anyone
>>> know what package provides that Python.h file?  Is it one of the
>>> packages on the Leopard DVD?
>>
>> Developer Tools.

Sorry I thought I made this clear, Python.h is shipped with the Apple  
Developer Tools.  (i.e. Install XCode)

>>
>>
>> There are binary packages available: http://twistedmatrix.com/trac/wiki/Packages#Leopard
>
> Yes, I should have mentioned that I found a binary package for him and
> installed it.  Nevertheless, I really would like to know why it didn't
> work, as I don't want to depend on someone else to package it for me.
> Sometimes it's nice to be able to use the latest version in the
> trunk...
>
> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz









From natester at gmail.com  Thu Feb 28 22:37:55 2008
From: natester at gmail.com (Nathaniel Haggard)
Date: Thu, 28 Feb 2008 22:37:55 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
	<A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
Message-ID: <4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>

On osx install from source puts twisted in 2 different places.  There
are args you can pass to setup to make it work.


On 2/28/08, David Reid <dreid at dreid.org> wrote:
>
> On Feb 28, 2008, at 3:19 PM, Nathan wrote:
>
> > On Thu, Feb 28, 2008 at 3:07 PM, David Reid <dreid at dreid.org> wrote:
> >>
> >>
> >> On Feb 28, 2008, at 12:48 PM, Nathan wrote:
> >>
> >>> My project teammate has a nearly identical MacBook Pro as mine
> >>> (we're
> >>> both running Leopard 10.5.2), but installing from Twisted 2.5.0 from
> >>> source (sudo python setup.py install) succeeds on my machine,
> >>> while on
> >>> his machine it complains about a missing Python.h file.  Does anyone
> >>> know what package provides that Python.h file?  Is it one of the
> >>> packages on the Leopard DVD?
> >>
> >> Developer Tools.
>
> Sorry I thought I made this clear, Python.h is shipped with the Apple
> Developer Tools.  (i.e. Install XCode)
>
> >>
> >>
> >> There are binary packages available:
> http://twistedmatrix.com/trac/wiki/Packages#Leopard
> >
> > Yes, I should have mentioned that I found a binary package for him and
> > installed it.  Nevertheless, I really would like to know why it didn't
> > work, as I don't want to depend on someone else to package it for me.
> > Sometimes it's nice to be able to use the latest version in the
> > trunk...
> >
> > ~ Nathan
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> "Usually the protocol is this: I appoint someone for a task,
> which they are not qualified to do.  Then, they have to fight
> a bear if they don't want to do it." -- Glyph Lefkowitz
>
>
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mailing_lists at evotex.ch  Fri Feb 29 03:34:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 29 Feb 2008 11:34:46 +0100
Subject: [Twisted-Python] Factory question
In-Reply-To: <47C6DDE5.7030207@evotex.ch>
References: <47C52001.2080506@evotex.ch>	<368574aa0802270812n55e53e35q3797207729c8f6e7@mail.gmail.com>	<47C6C838.4020308@evotex.ch>	<368574aa0802280739o10b4213dw5674a6c4ac9108a6@mail.gmail.com>
	<47C6DDE5.7030207@evotex.ch>
Message-ID: <47C7DFC6.3040107@evotex.ch>

Gabriel Rossetti wrote:
> Drew Smathers wrote:
>> On Thu, Feb 28, 2008 at 9:42 AM, Gabriel Rossetti
>> <mailing_lists at evotex.ch> wrote:
>>  
>>> Drew Smathers wrote:
>>>  > On Wed, Feb 27, 2008 at 3:32 AM, Gabriel Rossetti
>>>  > <mailing_lists at evotex.ch> wrote:
>>>  >
>>>  >> Hello everyone,
>>>  >>
>>>  >>  I have a small question, I have a service which needs to 
>>> sometimes send
>>>  >>  data (without having received any prior to sending) and sometimes
>>>  >>  receive data, which is better :
>>>  >>
>>>  >>  1) create a factory that inherits from ServerFactory and 
>>> ClientFactory,
>>>  >>  thus it can listen and send data
>>>  >>
>>>  >>  2) create a factory that inherits from ServerFactory only and 
>>> uses a
>>>  >>  single-use client (ClientCreator, as shown in the writing 
>>> clients howto)
>>>  >>  when it needs to send data
>>>  >>
>>>  >>
>>>  >
>>>  > I'm not sure of there's a single right way to do it, but I wouldn't
>>>  > bother inheriting from both ClientFactory and ServerFactory.  I 
>>> think
>>>  > you're on the write track with 2, though.
>>>  >
>>>  >
>>>  I had taken route 1 up until now (I'm thinking about switching...)
>>>
>>>  Maybe there's something I haven't quite gotten, when ClientA initially
>>>  connects to the server, the factory creates an instance of the 
>>> protocol,
>>>  correct?
>>>     
>>
>> Yes.
>>
>>   
> Ok
>>> Now ClientA sends some data to the server, which processes it
>>>  and sends something back. After that, the TCP session ends, and the
>>>  client disconnects, and the protocols instance dies. Is this 
>>> correct or
>>>  does it live on and get reused somehow?
>>>     
>>
>> The protocol instance does not get reused.
>>
>>   
> Ok, so every time there is data exchanged (new tcp/ip session) then a 
> new protocol instance is created. Any persistence/state data must 
> therefore be stored in the factory if I understand correctly.
>>>  I ask this because since
>>>  initially the clients send data to the server (registration), the 
>>> server
>>>  will there after send data to the clients. This makes the client 
>>> have to
>>>  connect to the server initially though a port using 
>>> reactor.connectTCP()
>>>  and listen to a port (that the server now knows since the client
>>>  registered itself) using reactor.listenTCP().
>>>     
>>
>> This is might be a bad idea - depending on the locality of your
>> servers and clients. Why not just use the established connection?  
> The idea is to have services register on a central server then they 
> transmit messages to the daemon which routes/relays them to the 
> correct service, sort of like a micro-kernel. So, sometimes the 
> services initiate the communication process and sometimes they don't, 
> the central server does. This makes the services be servers and 
> clients. Imagine this :
>
> service1 has some data that needs to be processed by service2 (which 
> will in turn send it to another service), is sends it to the central 
> server, which sends it to service2. Service2 does whatever it has to 
> do, and then sends it to the central server to route to service_n.
>
> So the established connection is usually useless, except for sending 
> some sort of ACK maybe.
>
>> If
>> the *client* is listening on a port then it isn't just a client - it's
>> a server, or a peer in a clustered system.
>>
>>   
> I guess it's/they a sort of peer(s) in a clustered system, it/they may 
> reside on the same machine as the central server or not.
>>>  I think I have to use
>>>  reactor.connectTCP() instead of  ClientCreator since the connection 
>>> has
>>>  to happen at the beginning and a transport needs to exist before I can
>>>  send anything. Well...now that I think about it, I could have the
>>>  factory register the client...... that would make me not have to 
>>> inherit
>>>  from the Client factory.... (I've now switched to solution 2, see last
>>>  part of this email).
>>>
>>>     
>>
>> Ok.
>>
>>  
>>>> In most use cases you shouldn't have to create custom factories.
>>>>       
>>>  I have to since I need a non-reconnecting client xmlstream, and the
>>>  factory used with xmlstreams is a reconnecting client.
>>>
>>>    
>>>> Just
>>>>       
>>>  > write the protocol to support bidirectional comm and to create the
>>>  > server:
>>>  >
>>>  > f = Factory()
>>>  > f.protocol = YourBidirectionalProtocol
>>>  >
>>>  > Regarding the client, how you implement it depends on whether or not
>>>  > the server is establishing the connection vs. reusing the existing
>>>  > connection.
>>>  What exactly do you mean by reusing an existing connection?
>>>
>>>    
>>>> If you're establishing the connection (like in a cluster
>>>>       
>>>  > app with known peers), just use ClientCreator.  If you're reusing 
>>> the
>>>  > existing connection, then you might not have to anything, unless you
>>>  > have some state to set up which could be done by overriding
>>>  > connectionMade on your Protocol.
>>>  >
>>>  > Finally, take everything I've stated above with a grain of salt.
>>>  >
>>>  >
>>>  Thanks, I find it fairly hard to get used to Twisted, I wanted to buy
>>>  the book, but it was written in 2005 and I'm not sure if it's still
>>>  valid with today's version.
>>>
>>>     
>>
>> The book it is not up to date.
>>
>>  
>>>  BTW, any idea why I'm getting this type of behavior (one server, 3
>>>  distinct connections from clients) :
>>>
>>>     
>>
>> Without seeing your code, no.
>>
>>   
Ok, I figured out what is wrong, when the factories are created, I add a 
bootstrap to an event that will call a callback when that event is 
received. In the central server, when a client/service connects, the 
callback is called and xml event observers are added (and now I added a 
method that removes them when the client disconnects). What happens is 
when a second client connects, the event calls the callback for every 
instance of the protocol, not just the one for the current connection. I 
traced it down to the following code in   :

        self.addBootstrap(xmlstream.STREAM_START_EVENT, xs._connected)
        self.addBootstrap(xmlstream.STREAM_END_EVENT, xs._disconnected)
       
        for event, fn in self.bootstraps:
            xs.addObserver(event, fn)

since the original XmlStreamFactory/XmlStreamFactoryMixin was designed 
to be a XML client and not a server, it has no notion of differentiating 
protocol instances (since there is only one)

Gabriel
> ok, it's a bit long.....
>
> -------------------------"Central server" aka 
> Daemon--------------------------------------------------------------------------- 
>
>
> class MdfXmlStreamFactory(XmlStreamFactoryMixin):
>    """
>    The factory class used by the daemon and services to create
>    protocol instances
>    """
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        XmlStreamFactoryMixin.__init__(self)
>        self.args = args
>        self.kwargs = kwargs
>        self.protocol = proto
>
>    def buildProtocol(self, addr):
>        """
>        Builds the protocol and
>              @param addr: The address (protocol, IP, port) of the 
> connection
>        @type addr: 
> L{IPv4Address<twisted.internet.address._ServerFactoryIPv4Address>}
>              @return: an instance of the built protocol
>        """
>        #self.resetDelay()
>        xs = self.protocol(*self.args, **self.kwargs)
>        xs.factory = self
>        self.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, 
> xs.connected) # stream connect event or xml start event???
>        for event, fn in self.bootstraps:
>            xs.addObserver(event, fn)
>
>        return xs
>
> class MdfXmlStreamServerFactory(MdfXmlStreamFactory, ServerFactory):
>    """
>    The factory class used by the daemon to create
>    protocol instances
>    """
>      # The registered services
>    _services = {}
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        MdfXmlStreamFactory.__init__(self, proto, *args, **kwargs)
>
> class Daemon(xmlstream.XmlStream):
>    """
>    The daemon is the implementation of a microkernel type inter-service
>    communication (ISC) routing daemon. Here is how it works :
>          - Services announce their presence to the daemon by giving 
> their name,
>          version, ip, port and a list of message-types that they accept
>        - The daemon listens for messages from the attached services, 
> when one
>          is received, it routes the message to the correct service
>      @todo: add unique id generation/verification
>    """
>      # Holds the real method
>    __dataReceived = xmlstream.XmlStream.dataReceived
>      # The registered services
>    #__services = {}
>    cnt = 1
>      def __init__(self, *args, **kwargs):
>        """
>        Constructor
>              @param args: non-keyword args
>        @type args: C{tuple}
>        @param kwargs: keyword args
>        @type kwargs: C{dict}
>        """
>        xmlstream.XmlStream.__init__(self)
>        self.__routeTo = None
>        self.__lastMsgType = None
>        self.__lastMsgId = None
>        self.inst = Daemon.cnt
>        Daemon.cnt += 1
>        print "daemon proto instance %d" % self.inst
>            def connectionMade(self):
>        xmlstream.XmlStream.connectionMade(self)
>      def dataReceived(self, data):
>        """
>        Called everytime data is received
>              @param data: the data received
>        @type data: C{object} (anything)
>        """
>        self.__dataReceived(data)
>          def connectionLost(self, reason):
>        """
>        Called when the connection is shut down, restores the
>        dataReceived method
>              @param reason: the reason why the connection was lost
>        @type reason: C{str}
>        """
>        self.__dataReceived = xmlstream.XmlStream.dataReceived
>        self.__routeTo = None
>        xmlstream.XmlStream.connectionLost(self, reason)
>      def __onHeader(self, element):
>        """
>        Analyse a header and set the data's recipiant
>              @param element: the header element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>        """
>        print "got header from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>              self.__lastMsgId = element.getAttribute("id")
>        self.__lastMsgType = element.getAttribute("type")
>        if(self.__lastMsgType != constants._REG_MSG_TYPE):
>            self.__routeTo = self.factory._services[type]
>            self.__dataReceived = __routeDataReceived
>      def __onReg(self, element):
>        """
>        Register a service
>              @param element: the registeration element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>        """
>        print "got reg from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>
>        name = 
> str(xpath.XPathQuery("/body/reg/name").queryForNodes(element)[0])
>        version = 
> str(xpath.XPathQuery("/body/reg/version").queryForNodes(element)[0])
>        #address = 
> str(xpath.XPathQuery("/body/reg/address").queryForNodes(element)[0])
>        port = 
> int(str(xpath.XPathQuery("/body/reg/port").queryForNodes(element)[0]))
>        msgs = [ str(m) for m in 
> xpath.XPathQuery("/body/reg/message_type").queryForNodes(element) ]
>              address = self.transport.getPeer().host
>        #port = self.transport.getPeer().port
>        serv = ServiceReg(name, version, msgs, address, port)
>        self.__registerService(serv)
>          def connected(self, xs):
>        """
>        Called when a client connects using an XML stream
>              @param xs: the current xml stream
>        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        """
>              print 'Connection from %s:%s!' % 
> (str(self.transport.getPeer().host), str(self.transport.getPeer().port))
>        xs.addObserver("/header", self.__onHeader)
>        xs.addObserver("/body/reg", self.__onReg)
>          def __routeDataReceived(self, data):
>        """
>        Pushes the messages to the correct service
>              @param data: the data received
>        @type data: C{object} (anything)
>        """
>        print "route '%s' to : %s" % (str(data), self.__routeTo)
>              utils.sendMessage(self.__routeTo.ip, self.__routeTo.port, 
> data)
>        #self.send(data)
>          def __registerService(self, service):
>        """
>        Register a service
>              @param service: the service to register
>        @type service: L{ServiceReg}
>              @raise ServiceMessageConflictError: if another service 
> already has a
>                                            message registered that the 
> current
>                                            service is trying to register
>              @todo: what is to be done with the exception once 
> raised???? Finish status message...
>        """
>              def foundConflict(self, msgTypes):
>            """
>            Check if there is a conflict with message types to be 
> registered
>            by this service
>                      @param service: the service messages to check for 
> conflicts
>            @type service: C{str}
>                      @return: the conflicting service type or None if no
>                    conflict is found
>            """
>            for mt in msgTypes:
>                if(self.factory._services.has_key(mt)):
>                    return mt
>            return None
>              print "Registering service : ", str(service)
>              try:
>            #
>            # Check if another service already registered a message 
> type that
>            # the current service is trying to register
>            #
>            conflict = foundConflict(self, service.acceptedMsgs)
>            if(conflict != None):
>                raise ServiceMessageConflictError(conflict)
>                      #
>            # Regrister the message types and this service
>            #
>            for msgType in service.acceptedMsgs:
>                self.factory._services[msgType] = service
>                      except ServiceMessageConflictError, reason:
>            status = 
> utils.createConfirmationMsgBody(constants._MSG_FAILURE_TYPE,
>                                                     self.__lastMsgId, 
> str(reason))
>        else:
>            status = 
> utils.createConfirmationMsgBody(constants._MSG_SUCCESS_TYPE,
>                                                     self.__lastMsgId)
>                  #
>        # Send registeration confirmation (succeeded or failed)
>        #
>        msgRoot = utils.createMessage(constants._REG_MSG_CONFIRM_TYPE,
>                                      constants._CONF_MSG_ID,
>                                      constants._DAEMON_SERVICE_NAME,
>                                      constants._MSG_SPEC_VERSION,
>                                      constants._STATUS_DATA_TYPE, status)
>              print "Sending confirmation message to %s : %s" % 
> (self.transport.getPeer().host, msgRoot.toXml())
>              #self.send(msgRoot)
>        utils.sendMessage(self.transport.getPeer().host, service.port, 
> msgRoot)
>   if(__name__ == "__main__"):
>
>    reactor.listenTCP(4321, MdfXmlStreamServerFactory(Daemon))
>    print "Listening for connections..."
>    reactor.run()
>
> ----------------------------------------"Service"----------------------------------------------------------------------------------------------------- 
>
>
> class MdfXmlStreamClientFactory(MdfXmlStreamServerFactory):
>    """
>    The factory class used by the services to create
>    protocol instances
>      @attention: this class might dissapear, I have to see if it's 
> useful to keep it or not
>    """
>      __daemonAddrs = None
>    __daemonPort = None
>      def __init__(self, proto, *args, **kwargs):
>        """
>        Constructor
>              @param proto: the protocol to use
>        @type proto: a subclass of 
> L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>        @param args: misc args
>        @type args: C{tuple}
>        @param kwargs: misc keyword args
>        @type kwargs: C{dict}
>        """
>        MdfXmlStreamServerFactory.__init__(self, proto, *args, **kwargs)
>        self._serviceInfo = ServiceReg(kwargs["name"], 
> kwargs["version"], list(kwargs.get("messageTypes", [])))
>        MdfXmlStreamClientFactory.__daemonAddrs = kwargs["address"]
>        MdfXmlStreamClientFactory.__daemonPort = kwargs["port"]
>          def register(self, port):
>        """
>        Register the service
>              @param port: the service's port
>        @type port: C{int}
>        """
>        self._serviceInfo.port = port
>        msgBodyData = utils.createRegMsgBody(self._serviceInfo.name,
>                                             self._serviceInfo.version,
>                                             str(self._serviceInfo.port),
>                                             
> self._serviceInfo.acceptedMsgs)
>              msgRoot = utils.createMessage(constants._REG_MSG_TYPE,
>                                      constants._REG_MSG_ID,
>                                      self._serviceInfo.name,
>                                      constants._MSG_SPEC_VERSION,
>                                      constants._REG_DATA_TYPE, 
> msgBodyData)
>              utils.sendMessage(MdfXmlStreamClientFactory.__daemonAddrs,
>                          MdfXmlStreamClientFactory.__daemonPort,
>                          msgRoot)
>
> class BaseService(xmlstream.XmlStream):
>    """
>    The service is the implementation of a microkernel type inter-service
>    communication (ISC) endpoint. Here is how it works :
>          - Services announce their presence to the daemon by giving 
> their name,
>          version, ip, port and a list of message-types that they accept
>        - The daemon listens for messages from the attached services, 
> when one
>          is received, it routes the message to the correct service
>            @todo: add unique id generation/verification
>    """
>      def __init__(self, *args, **kwargs):
>        """
>        Constructor
>              @param args: non-keyword args
>        @type args: C{tuple}
>        @param kwargs: keyword args
>        @type kwargs: C{dict}
>        """
>        xmlstream.XmlStream.__init__(self)
>        self._msgSrc = None
>        self._msgDest = None
>        self._msgBodyData = None
>        self._registered = False
>      def _onHeader(self, element):
>        """
>        Analyse a header and save the source and destination
>              @param element: the header element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add msg spec version verification
>        @todo: add id verification???
>        """
>        print "got header from %s:%s : %s" % 
> (str(self.transport.getPeer().host), 
> str(self.transport.getPeer().port), element.toXml())
>              self._msgSrc = 
> xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("source") 
>
>        self._msgDest = 
> xpath.XPathQuery("/header").queryForNodes(element)[0].getAttribute("destination") 
>
>          def _onBody(self, element):
>        """
>        Get the body act accordingly
>              @param element: the body element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add data type verification
>        @todo: call data action callbacks
>        """
>        self._msgBodyData = 
> xpath.XPathQuery("/body").queryForNodes(element)[0].toXml()
>        print "_onbody : ", self._msgBodyData
>          def _onConfirm(self, element):
>        """
>        Get the confirmation message and act accordingly
>              @param element: the confirmation element (XML)
>        @type element: L{Element<twisted.words.xish.domish.Element>}
>              @todo: add data type verification
>        @todo: call data action callbacks
>        """
>        status = 
> str(xpath.XPathQuery("/body/conf/status").queryForNodes(element)[0])
>        id = 
> int(str(xpath.XPathQuery("/body/conf/id").queryForNodes(element)[0]))
>        msg = 
> str(xpath.XPathQuery("/body/conf/msg").queryForNodes(element)[0])
>        if(id == constants._REG_MSG_ID):
>            if(status == constants._MSG_SUCCESS_TYPE):
>                self._registered = True
>          def connected(self, xs):
>        """
>        Called when a client connects using an XML stream
>              @param xs: the current xml stream
>        @type xs: L{XmlStream<twisted.words.xish.xmlstream.XmlStream>}
>              @todo: add data action callbacks
>        """
>        print 'Connection from %s:%s!' % 
> (str(self.transport.getPeer().host), str(self.transport.getPeer().port))
>        xs.addObserver("/header", self._onHeader)
>        xs.addObserver("/body/conf", self._onConfirm)
>        xs.addObserver("/body", self._onBody)
>      
> def start(daemonAddrs, daemonPort, serviceRef, serviceName, 
> serviceVersion, serviceMessageTypes):
>    """
>    Start the daemon
>      @param daemonPort: the port the daemon listens on
>    @type daemonPort: C{int}
>    @param serviceRef: a reference to the service's class
>    @type serviceRef: a subclass of L{BaseService<service.BaseService>}
>    @param serviceName: the service's name
>    @type serviceName: C{str}
>    @param serviceVersion: the service's version
>    @type serviceVersion: C{str}
>    @param serviceMessageTypes: the list of messages the service registers
>    @type serviceMessageTypes: C{str list}
>    """
>    f = MdfXmlStreamClientFactory(serviceRef, address=daemonAddrs, 
> port=daemonPort, name=serviceName, version=serviceVersion, 
> messageTypes=serviceMessageTypes)
>    port = reactor.listenTCP(0, f).getHost().port
>    f.register(port)
>    print port
>      reactor.run()
>
> if(__name__ == "__main__"):
>
>    start("localhost", 4321, BaseService, "service_base", "1.0", ["all"])
>>>  Daemon listening for connections...
>>>
>>>  daemon proto instance 1
>>>  Connection from 127.0.0.1:57821! <-- ok, Client1
>>>  ....
>>>  daemon proto instance 2
>>>  Connection from 127.0.0.1:57821! <-- Client1 again????? why?
>>>  Connection from 127.0.0.1:57823! <-- ok, Client2
>>>  ....
>>>  daemon proto instance 3
>>>  Connection from 127.0.0.1:57821! <-- ok, Client1 again????? why?
>>>  Connection from 127.0.0.1:57823! <-- ok, Client2 again????? why?
>>>  Connection from 127.0.0.1:57824! <-- ok, Client3
>>>
>>>  Oh, and by the time I finished writing this email, I've switched to
>>>  solution 2, but I still get the  behavior above.
>>>
>>>
>>>
>>>  _______________________________________________
>>>  Twisted-Python mailing list
>>>  Twisted-Python at twistedmatrix.com
>>>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>     
>>
>>
>>
>>   
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From steve at holdenweb.com  Fri Feb 29 08:47:02 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 29 Feb 2008 10:47:02 -0500
Subject: [Twisted-Python] Re: Open Spaces Revisited
In-Reply-To: <11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>
References: <287172.43129.qm@web34204.mail.mud.yahoo.com>
	<11623.192.55.12.36.1204129725.squirrel@mail2.webfaction.com>
Message-ID: <fq99dq$kos$1@ger.gmane.org>

Steven H. Rogers wrote:
> On Wed, February 27, 2008 08:48, Andrew Francis wrote:
>> Also I am not sure how the "open spaces" works. Is it
>> another talk. Or is it a bunch of one on ones, or one
>> to a few?
>>
> 
> Last year there was a board in a high traffic area for reserving open
> space rooms and posting information about meetings in them.  It was pretty
> dynamic.  Some open space meetings were prepared talks, while others were
> just groups getting together to talk about a topic of interest, and I
> think some may have turned into coding sessions.
> 
> # Steve

Yes, despite higher numbers this year (887 registrants so far!) there is 
plenty of Open Space accommodation, and I believe the principle is to 
leave most stuff open until the conference actually begins. Checking on

   http://us.pycon.org/2008/conference/openspace/

I do see the phrase "Open Space scheduling happens at PyCon". I am 
giving a tutorial, so I should will be there to book the space in plenty 
of time, and the larger rooms will handle up to 50 people comfortably.

We could probably register a BoF in advance, but I don't want to hijack 
what will really be a Twisted community event, and I don't know what 
people's schedules are (as I understand there may be other Twisted 
events). It would be really nice to get an idea of numbers to make sure 
that we have an appropriately-sized room.

I was hoping we could do it after dinner on Friday or Saturday, in a 
fairly leisurely style - perhaps starting at 7:00 or 7:30 and repairing 
to the bar for liquid refreshments about 9:30? To encourage 
participation I will happily buy a drink for anyone who significantly 
advances my understanding of Twisted; on the other hand, lead me down a 
blind alley and you owe me a drink (unless I judge you are doing it just 
to get me hammered).

Would that make it more fun? I should really be the only one on the spot 
here. I'll be wearing brown trousers ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Fri Feb 29 09:04:49 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 29 Feb 2008 11:04:49 -0500
Subject: [Twisted-Python] Re: Is AMP a bidirectional protocol?
In-Reply-To: <96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>
References: <96c9d6a80802270957h67cd33dcscbdc5e2c2377c4e@mail.gmail.com>	<20080227191019.GA22717@vidar.dreamhost.com>
	<96c9d6a80802271320n1555c1e7x2934b1c2d5cf913e@mail.gmail.com>
Message-ID: <fq9af4$oia$1@ger.gmane.org>

Nathan wrote:
> On Wed, Feb 27, 2008 at 12:10 PM, David Ripton <dripton at ripton.net> wrote:
[...]
>>  I have a little demonstration PyGTK / AMP chat program at
>>  http://ripton.net/hg/ampchat/
> 
> Oh, wow.  I was looking at your example program, and thought "I should
> look at the amp api", so I googled "twisted amp" and the top link was:
> 
> http://www.ripton.net/blog/?p=16
> 
> Which is your blog post about this thread, because of this thread.  I
> don't know if I should be awed that Google's so dang quick, or that by
> my multitude of questions I'm causing the universe to change...  :-)
> 
Keep changing the universe. Inquiring minds want to know, and 
information wants to be free ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nathan.stocks at gmail.com  Fri Feb 29 09:28:01 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 29 Feb 2008 09:28:01 -0700
Subject: [Twisted-Python] Installing 2.5 from source on OS X fails...
In-Reply-To: <4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>
References: <96c9d6a80802281248i65c3f088y7362292ed908b109@mail.gmail.com>
	<CBC4E5E3-83B8-430B-AB25-BBD8722284B6@dreid.org>
	<96c9d6a80802281519s4ed4cc5fxc7e2938d6d6ee77c@mail.gmail.com>
	<A780C7DD-DBEC-43FE-8D91-CECE883C29E9@dreid.org>
	<4adac7a30802282137t6603fb03tb7028bc725c752c6@mail.gmail.com>
Message-ID: <96c9d6a80802290828k434c081cw7a268851d771081d@mail.gmail.com>

On Thu, Feb 28, 2008 at 10:37 PM, Nathaniel Haggard <natester at gmail.com> wrote:
> On osx install from source puts twisted in 2 different places.  There
>  are args you can pass to setup to make it work.

It's failing because Python.h wasn't present on the system.

~ Nathan



From dr.marc.byrd at gmail.com  Fri Feb 29 11:19:32 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Fri, 29 Feb 2008 10:19:32 -0800
Subject: [Twisted-Python] Fwd: Seeking Validation - search web service using
	memcached
In-Reply-To: <a33934630802291017t3b39cdc9i77b5b2361afa706a@mail.gmail.com>
References: <a33934630802291017t3b39cdc9i77b5b2361afa706a@mail.gmail.com>
Message-ID: <a33934630802291019n4a4614cdh3291f38fdafd2a5f@mail.gmail.com>

I would also be very grateful for feedback from the twisted point of view.

Thanks,


Marc


---------- Forwarded message ----------
From: Marc Byrd <dr.marc.byrd at gmail.com>
Date: Fri, Feb 29, 2008 at 10:17 AM
Subject: Seeking Validation - search web service using memcached
To: rubyonrails-talk at googlegroups.com


Hi,

I'm looking for some validation for some work I've done for a client, and
I'm open to criticism ("mock me" ? ;^), relevant awareness of similar
projects, and alternatives.

When I looked around in about September 2007 for a good scalable search
solution for Ruby on Rails, I found the choices lacking.  Firstly, none of
the solutions seemed to have an option for keeping the reverse indices
in-memory across any number of machines I might like to store them.
Secondly, many of the solutions seemed too general purpose and heavy weight
for my client's needs (which are basically to search for items from the db,
based on tags).  But without addressing the first concern, I felt that
anything I implemented would not scale to the customer's needs and
aspirations, and that for such an investment, virtually unlimited scale
would be mandatory.

Therefore I looked at memcached - well-proven on many large-scale sites for
caching, but to my knowledge not used in search.  Note that memcached uses
an approach wherein the clients all calculate a server based on a given key,
such that no central (scale-limiting) controller is required.  Having chosen
memcached, I next attempted to use various memcached connectors into RoR.  I
found them at the time (Oct 2007 or so) to be slow and buggy; it didn't take
more than a couple of times of totally corrupting the entire cache to avert
my attention from a Ruby approach to using memcached.  Meanwhile, I knew
from prior experience that the python client for memcached was both fast and
reliable.  The python memcached client was routinely 3x faster for the tests
I ran.  Python also seems to be quite fast at set operations.

Getting to the punchline, I used python and memcached, wrapped in twisted,
to provide a ReSTful web service api, which is called from RoR to get ALL of
the information needed to render search results.  The API has been extended
to allow the Ruby code to "fire and forget" new indexing info onto a deque
(fifo queue), which is processed by a loosely-coupled daemon - overhead to
Ruby is about 20ms.

Prior to this approach, the client was using MyISAM full text search.
Search results were 10s for smaller search terms (5000 uses), and 20+s for
larger search terms (100k+ uses).

With the web service, the search results are routinely returned in 1-2
seconds, and the web service itself returns results to RoR within
100-200ms.  Indexing is a challenge - the rank score needs to be updated
upon each viewing, but I've now gotten that to be almost real-time (5
minutes max).  Plus I can re-index the entire database of 1M+ items in about
8 hours.  The index is backed up nightly in case of a memcached server
failure (we're using 3).  In addition to search, the search web service is
used for relatedness and for something like bookmarks.

So, is there anything out there that can touch these results and provide for
virtually unlimited scale (no central controller)?

Thanks in advance,


Marc

PS:  Because of leaks in rmagick and its inferior performance compared to
the Python Image Library, I'm also considering a similar approach for
generating many different sizes of fairly large (10MB) images.  A similar
fire and forget web service approach could be used to minimize the impact on
the RoR side.  Early tests show a 10x speed improvement (even without the
fire and forget).  Any thoughts there?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080229/784986af/attachment.html>

From jml at mumak.net  Fri Feb 29 15:17:39 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 1 Mar 2008 09:17:39 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear() method
	to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
References: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
Message-ID: <d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>

On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
<therve at wolfwood.twistedmatrix.com> wrote:
>  @@ -1241,6 +1242,13 @@
>          return result
>
>
>  +    def clear(self):
>  +        """
>  +        Remove all previously added tests.
>  +        """
>  +        self._tests = []
>  +
>  +
>


>   class TestDecorator(components.proxyForInterface(itrial.ITestCase,
>                                                   "_originalTest")):
>  @@ -1293,8 +1301,8 @@
>      # Originally, we recreated the suite by calling test.__class__. The problem
>      # was that the old suite kept references to test instances, which turns out
>      # to never be free. Now we remove the original references by emptying the
>  -    # _tests list.
>  -    test._tests = []
>  +    # list of tests.
>  +    test.clear()

What's your plan for making sure this works with stdlib TestSuite?

jml



