From therve at free.fr  Sat Mar  1 04:39:49 2008
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Sat, 01 Mar 2008 10:39:49 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear() method
	to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>
References: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
	<d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>
Message-ID: <47C92465.7040103@free.fr>

Jonathan Lange a ?crit :
> On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
> <therve at wolfwood.twistedmatrix.com> wrote:
>   
>>  @@ -1241,6 +1242,13 @@
>>          return result
>>
>>
>>  +    def clear(self):
>>  +        """
>>  +        Remove all previously added tests.
>>  +        """
>>  +        self._tests = []
>>  +
> What's your plan for making sure this works with stdlib TestSuite?
>
> jml
>   

I haven't think about it much. The tests aren't broken, so the behavior 
is not really defined. I could just check if the method exists, but that 
doesn't seem very nice. Maybe we could have a ITestSuite interface to 
add specific behavior to the twisted TestSuite object (and then check 
the interface). Or maybe I could just let the old self._tests = [], but 
exarkun wasn't very happy about that.

What do you think?

-- 
Thomas




From exarkun at divmod.com  Sat Mar  1 10:26:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 1 Mar 2008 10:26:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear()
	method to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <47C92465.7040103@free.fr>
Message-ID: <20080301152625.6859.1387019705.divmod.quotient.14525@ohm>

On Sat, 01 Mar 2008 10:39:49 +0100, Thomas Herv? <therve at free.fr> wrote:
>Jonathan Lange a ?crit :
>>On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
>><therve at wolfwood.twistedmatrix.com> wrote:
>>
>>>  @@ -1241,6 +1242,13 @@
>>>          return result
>>>
>>>
>>>  +    def clear(self):
>>>  +        """
>>>  +        Remove all previously added tests.
>>>  +        """
>>>  +        self._tests = []
>>>  +
>>What's your plan for making sure this works with stdlib TestSuite?
>>
>>jml
>>
>
>I haven't think about it much. The tests aren't broken, so the behavior is 
>not really defined. I could just check if the method exists, but that 
>doesn't seem very nice. Maybe we could have a ITestSuite interface to add 
>specific behavior to the twisted TestSuite object (and then check the 
>interface). Or maybe I could just let the old self._tests = [], but exarkun 
>wasn't very happy about that.
>
>What do you think?

We're already adapting everything we come across to ITestCase.  It seems
that clear should be a method of that interface.  If necessary, we can
provide an adapter from the stdlib TestSuite which defines that method.
Testing should be a simple matter then.

Jean-Paul



From glenn at tarbox.org  Sat Mar  1 23:12:39 2008
From: glenn at tarbox.org (Glenn Tarbox, PhD)
Date: Sat, 1 Mar 2008 20:12:39 -0800
Subject: [Twisted-Python] Qt4 Reactor
Message-ID: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>

I've got a somewhat functional Qt4 reactor working.  Its maintained and
available at:

http://code.tarbox.org/qtreactor

There is git-daemon and git-instaweb access.  git-instaweb will
auto-generate tarballs for download if you're still waiting to be
assimilated.

-glenn

-- 
Glenn H. Tarbox, PhD
glenn at tarbox.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080301/85b3a461/attachment.htm 

From exarkun at twistedmatrix.com  Sun Mar  2 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Mar 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1204434307.8.1042443163@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080302/b3301468/attachment.htm 

From mailing_lists at evotex.ch  Mon Mar  3 08:44:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 03 Mar 2008 14:44:12 +0100
Subject: [Twisted-Python] twisted plugins
Message-ID: <47CC00AC.50407@evotex.ch>

Hello,

I tried creating some test plugins using the plugin howto on the twisted 
website. I did as shown, I added the plugins dir to the PYTHONPATH and 
tested it. The problem is I get nothing back when calling 
getPlugins(IMyInterface).  Here is some code :

----------------------------------------------------------------------------------------------

    from zope.interface import Interface

    class IHelloWorld(Interface):
        """
        A simple test plugin that displays "Hello world"
        """
       
        def display():
            """
            Displays on stdout "Hello world" in a language chosen by the
    programmer
            """

----------------------------------------------------------------------------------------------

    from twisted.plugin import IPlugin
    from zope.interface import implements
    from interfaces import ihelloworld

    class EnglishHelloWorld(object):
       
        implements(IPlugin, ihelloworld.IHelloWorld)

        def display(self):
            """
            Displays on stdout "Hello world" in English
            """
            print "Hello world!"

---------------------------------------------------------------------------------------------- 


    from twisted.plugin import getPlugins
    from twisted.plugin import IPlugin
    from interfaces import ihelloworld

    def displayHelloWorld():
       
        for h in getPlugins(ihelloworld.IHelloWorld):
            h().display()
           
    if(__name__ == "__main__"):
        displayHelloWorld()

----------------------------------------------------------------------------------------------

I tried running in debug mode to see what happens, but I don't get it, 
in the getPlugins() code, it does this :

    allDropins = getCache(package)

and in this dict I see my plugins, but their inner "plugin" member is an 
empty list. I looked at the code of some of the examples, they used 
"classProvides()" and not "implements()", so I tried that :

----------------------------------------------------------------------------------------------

    from twisted.plugin import IPlugin
    from zope.interface import implements
    from zope.interface import classProvides
    from interfaces import ihelloworld

    class EnglishHelloWorld(object):
       
        classProvides(IPlugin, ihelloworld.IHelloWorld)

        def display(self):
            """
            Displays on stdout "Hello world" in English
            """
            print "Hello world!"

----------------------------------------------------------------------------------------------

which works, is the doc out of sync with the current code or did I do 
something wrong? Another question, it's not really very practical to 
have to iterate all the plugins and I guess test to see which one is 
which, is there a better way of doing it?

Thank you,
Gabriel




From exarkun at divmod.com  Mon Mar  3 08:52:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Mar 2008 08:52:42 -0500
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <47CC00AC.50407@evotex.ch>
Message-ID: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>

On Mon, 03 Mar 2008 14:44:12 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I tried creating some test plugins using the plugin howto on the twisted 
>website. I did as shown, I added the plugins dir to the PYTHONPATH and 
>tested it. The problem is I get nothing back when calling 
>getPlugins(IMyInterface).  Here is some code :
>
>----------------------------------------------------------------------------------------------
>
>    from zope.interface import Interface
>
>    class IHelloWorld(Interface):
>        """
>        A simple test plugin that displays "Hello world"
>        """
>              def display():
>            """
>            Displays on stdout "Hello world" in a language chosen by the
>    programmer
>            """
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import IPlugin
>    from zope.interface import implements
>    from interfaces import ihelloworld
>
>    class EnglishHelloWorld(object):
>              implements(IPlugin, ihelloworld.IHelloWorld)
>
>        def display(self):
>            """
>            Displays on stdout "Hello world" in English
>            """
>            print "Hello world!"
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import getPlugins
>    from twisted.plugin import IPlugin
>    from interfaces import ihelloworld
>
>    def displayHelloWorld():
>              for h in getPlugins(ihelloworld.IHelloWorld):
>            h().display()
>              if(__name__ == "__main__"):
>        displayHelloWorld()
>
>----------------------------------------------------------------------------------------------
>
>I tried running in debug mode to see what happens, but I don't get it, in 
>the getPlugins() code, it does this :
>
>    allDropins = getCache(package)
>
>and in this dict I see my plugins, but their inner "plugin" member is an 
>empty list. I looked at the code of some of the examples, they used 
>"classProvides()" and not "implements()", so I tried that :
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import IPlugin
>    from zope.interface import implements
>    from zope.interface import classProvides
>    from interfaces import ihelloworld
>
>    class EnglishHelloWorld(object):
>              classProvides(IPlugin, ihelloworld.IHelloWorld)
>
>        def display(self):
>            """
>            Displays on stdout "Hello world" in English
>            """
>            print "Hello world!"
>
>----------------------------------------------------------------------------------------------
>
>which works, is the doc out of sync with the current code or did I do 
>something wrong? Another question, it's not really very practical to have to 
>iterate all the plugins and I guess test to see which one is which, is there 
>a better way of doing it?

Using classProvides can be correct, although it's not quite in your example
code because EnglishHelloWorld must be instantiated in order to use it, and
that isn't reflected in your IHelloWorld interface.  You could make display
a static or class method.  Or you continue using implements and instantiate
EnglishHelloWorld, binding a name to the result (as the documentation shows
with steelPlate/brassPlate).

In the example, when the plugin system finds objects, it finds steelPlate
and brassPlate, not SimpleMaterial.

Jean-Paul



From o.fournier at perigord.com  Mon Mar  3 14:50:41 2008
From: o.fournier at perigord.com (Olivier Fournier)
Date: Mon, 03 Mar 2008 20:50:41 +0100
Subject: [Twisted-Python] Qt4 Reactor
In-Reply-To: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>
References: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>
Message-ID: <47CC5691.4040607@perigord.com>

thank you

olivier fournier

Glenn Tarbox, PhD wrote:
> I've got a somewhat functional Qt4 reactor working.  Its maintained 
> and available at:
>
> http://code.tarbox.org/qtreactor
>
> There is git-daemon and git-instaweb access.  git-instaweb will 
> auto-generate tarballs for download if you're still waiting to be 
> assimilated.
>
> -glenn
>
> -- 
> Glenn H. Tarbox, PhD
> glenn at tarbox.org <mailto:glenn at tarbox.org>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   





From nathan.stocks at gmail.com  Mon Mar  3 23:11:34 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 3 Mar 2008 21:11:34 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
Message-ID: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>

I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
the "easy" method in the py2app install docs.  I'm trying to package a
little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
working on, and it _mostly_ works, except it keeps giving me the
following error when I try to run the resulting app:

ImportError: No module named amp

Help!?

I've done the following steps to try to debug the problem, with no success:

* Noticed that the following imports DO work:
      from twisted.internet import reactor, task
      from twisted.internet.protocol import ClientCreator

* Verified that I get the same error when running the app with the
following import lines:
      import twisted.protocols.amp
      or
      from twisted.protocols import amp

* Tried the following command-line variations without any variation in
the error (although app sizes varied):

      python setup.py py2app --includes twisted.protocols
      python setup.py py2app --includes twisted.protocols.amp
      python setup.py py2app --use-pythonpath
      python setup.py py2app --use-pythonpath --include twisted.protocols.amp
      python setup.py py2app --use-pythonpath --include
twisted.protocols.amp --graph
      python setup.py py2app --use-pythonpath --include
twisted.protocols.amp -p twisted.protocols
      python setup.py py2app --use-pythonpath -p twisted.protocols
      python setup.py py2app --use-pythonpath -p twisted

* Used the following py2applet-generated setup.py the whole time:

      """
      This is a setup.py script generated by py2applet

      Usage:
          python setup.py py2app
      """

      from setuptools import setup

      APP = ['running-man.py']
      DATA_FILES = ['images']
      OPTIONS = {'argv_emulation': True}

      setup(
          app=APP,
          data_files=DATA_FILES,
          options={'py2app': OPTIONS},
          setup_requires=['py2app'],
      )

~ Nathan



From mailing_lists at evotex.ch  Tue Mar  4 03:29:00 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 04 Mar 2008 09:29:00 +0100
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>
References: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>
Message-ID: <47CD084C.90103@evotex.ch>

Jean-Paul Calderone wrote:
> On Mon, 03 Mar 2008 14:44:12 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello,
>>
>> I tried creating some test plugins using the plugin howto on the 
>> twisted website. I did as shown, I added the plugins dir to the 
>> PYTHONPATH and tested it. The problem is I get nothing back when 
>> calling getPlugins(IMyInterface).  Here is some code :
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from zope.interface import Interface
>>
>>    class IHelloWorld(Interface):
>>        """
>>        A simple test plugin that displays "Hello world"
>>        """
>>              def display():
>>            """
>>            Displays on stdout "Hello world" in a language chosen by the
>>    programmer
>>            """
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import IPlugin
>>    from zope.interface import implements
>>    from interfaces import ihelloworld
>>
>>    class EnglishHelloWorld(object):
>>              implements(IPlugin, ihelloworld.IHelloWorld)
>>
>>        def display(self):
>>            """
>>            Displays on stdout "Hello world" in English
>>            """
>>            print "Hello world!"
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import getPlugins
>>    from twisted.plugin import IPlugin
>>    from interfaces import ihelloworld
>>
>>    def displayHelloWorld():
>>              for h in getPlugins(ihelloworld.IHelloWorld):
>>            h().display()
>>              if(__name__ == "__main__"):
>>        displayHelloWorld()
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>> I tried running in debug mode to see what happens, but I don't get 
>> it, in the getPlugins() code, it does this :
>>
>>    allDropins = getCache(package)
>>
>> and in this dict I see my plugins, but their inner "plugin" member is 
>> an empty list. I looked at the code of some of the examples, they 
>> used "classProvides()" and not "implements()", so I tried that :
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import IPlugin
>>    from zope.interface import implements
>>    from zope.interface import classProvides
>>    from interfaces import ihelloworld
>>
>>    class EnglishHelloWorld(object):
>>              classProvides(IPlugin, ihelloworld.IHelloWorld)
>>
>>        def display(self):
>>            """
>>            Displays on stdout "Hello world" in English
>>            """
>>            print "Hello world!"
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>> which works, is the doc out of sync with the current code or did I do 
>> something wrong? Another question, it's not really very practical to 
>> have to iterate all the plugins and I guess test to see which one is 
>> which, is there a better way of doing it?
>
> Using classProvides can be correct, although it's not quite in your 
> example
> code because EnglishHelloWorld must be instantiated in order to use 
> it, and
> that isn't reflected in your IHelloWorld interface.  You could make 
> display
> a static or class method.  Or you continue using implements and 
> instantiate
> EnglishHelloWorld, binding a name to the result (as the documentation 
> shows
> with steelPlate/brassPlate).
>
> In the example, when the plugin system finds objects, it finds steelPlate
> and brassPlate, not SimpleMaterial.
>
> Jean-Paul
>
Thank you Jean-Paul, I understand better now. I had been trying to 
create instances in the main. There's one thing I don't get though with 
those 2 lines, if I put them in the main, before the for loop, I get en 
error that states that it can't be instantiated, but it works in the 
class, how come?

Gabriel



From glyph at divmod.com  Tue Mar  4 04:13:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 04 Mar 2008 09:13:17 -0000
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
Message-ID: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>


On 04:11 am, nathan.stocks at gmail.com wrote:
>I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>the "easy" method in the py2app install docs.  I'm trying to package a
>little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>working on, and it _mostly_ works, except it keeps giving me the
>following error when I try to run the resulting app:
>
>ImportError: No module named amp

AMP itself isn't doing anything clever that I can see would confuse 
py2app.  It's just a regular Python module with regular imports; no 
dynamic module loading; in fact, it's much less interesting than the 
core parts of Twisted which load various plugins.

I don't have any experience with py2app, but I can guess at the problem 
- I know that OS X 10.5 ships with an incomplete installation of Twisted 
in some system location.  Perhaps you've installed a complete version of 
Twisted elsewhere, but py2app is confused about the ordering of sys.path 
that you want, and is including the system location first.  I am not 
aware of how this installation is incomplete - maybe it doesn't include 
AMP?

However, this is only a vague understanding, I don't have a MacOS Python 
environment readily available to test with.  Twisted might actually be 
packaged inside one of Apple's application, not on the system path, so 
this could be a red herring.  Good luck investigating though, and please 
let us know your results when you discover what's going on!



From pm-twisted-python at anapol.cz  Tue Mar  4 07:08:58 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Tue, 04 Mar 2008 13:08:58 +0100
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work
	with	py2app...
In-Reply-To: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
Message-ID: <47CD3BDA.3030204@anapol.cz>

Hi,

took a quick look into the OS X 10.5 default twisted installation and 
indeed, there doesn't seem to be the amp.py module included in

/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols

Try http://twistedmatrix.com/trac/wiki/Packages#Leopard

-p

glyph at divmod.com napsal(a):
> 
> On 04:11 am, nathan.stocks at gmail.com wrote:
>> I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>> the "easy" method in the py2app install docs.  I'm trying to package a
>> little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>> working on, and it _mostly_ works, except it keeps giving me the
>> following error when I try to run the resulting app:
>>
>> ImportError: No module named amp
> 
> AMP itself isn't doing anything clever that I can see would confuse 
> py2app.  It's just a regular Python module with regular imports; no 
> dynamic module loading; in fact, it's much less interesting than the 
> core parts of Twisted which load various plugins.
> 
> I don't have any experience with py2app, but I can guess at the problem 
> - I know that OS X 10.5 ships with an incomplete installation of Twisted 
> in some system location.  Perhaps you've installed a complete version of 
> Twisted elsewhere, but py2app is confused about the ordering of sys.path 
> that you want, and is including the system location first.  I am not 
> aware of how this installation is incomplete - maybe it doesn't include 
> AMP?
> 
> However, this is only a vague understanding, I don't have a MacOS Python 
> environment readily available to test with.  Twisted might actually be 
> packaged inside one of Apple's application, not on the system path, so 
> this could be a red herring.  Good luck investigating though, and please 
> let us know your results when you discover what's going on!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Tue Mar  4 08:58:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Mar 2008 08:58:42 -0500
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <47CD084C.90103@evotex.ch>
Message-ID: <20080304135842.6859.1532696181.divmod.quotient.15534@ohm>

On Tue, 04 Mar 2008 09:29:00 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Thank you Jean-Paul, I understand better now. I had been trying to create 
>instances in the main. There's one thing I don't get though with those 2 
>lines, if I put them in the main, before the for loop, I get en error that 
>states that it can't be instantiated, but it works in the class, how come?
>

I don't really understand the question.  Maybe you could give an example?

Jean-Paul



From k_r_a_j_kumar at yahoo.co.in  Tue Mar  4 09:17:17 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 4 Mar 2008 19:47:17 +0530 (IST)
Subject: [Twisted-Python] xml library in twisted
Message-ID: <315768.27988.qm@web8701.mail.in.yahoo.com>

Hi all,
I'm dealing with xml files in a twisted application,
can any one suggest me the best xml library in twisted?
Previously i used  twisted.web.microdom and twisted.web.minidom but they don't have much of the functionalities....
Is there any other xml library in twisted which makes it easy with lot of options?
I wanted to create a xml file like this...

<game>
    <player1>
            <stuff>
            </stuff>
    </player1>
    <player2>
            <stuff>
            </stuff>
    </player2>
</game>

and want to access that player stuff directly..(like a tree structure)

Thank you in advance.




      Now you can chat without downloading messenger. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080304/e7aa2496/attachment.htm 

From bharathv6.project at gmail.com  Tue Mar  4 09:41:08 2008
From: bharathv6.project at gmail.com (bharath venkatesh)
Date: Tue, 4 Mar 2008 20:11:08 +0530
Subject: [Twisted-Python] http server performance
Message-ID: <2613171a0803040641u1b48dfcai96c9172fd093c4d7@mail.gmail.com>

hi,
       my project involves lot of  I/O  over the network.. one part of my
project involves a server(http) which is listening on the port for many
client . this sever fetches an image from the web and  and send it to
clients ....  and many clients will request the server concurrently .. to
implement concurrent serving to clients i used threaded http server
like this

class HTTPServer(SocketServer.ThreadingMixIn,BaseHTTPServer.HTTPServer):
     pass

class RequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):
      def do_GET(self):
         print "received connection from: ",self.client_address
         image=image_retreive()   #where image retreive is a function that
retrieves image from the web and works fine
         self.send_response(200)
         self.send_header("Content-type",format)
         self.send_header("Content-Length",len(image_data))
         self.end_headers()
         self.request.sendall(image_data)

httpd = HTTPServer(('',port_number), RequestHandler)
httpd.serve_forever()


this code worked fine but this performance was very bad ... it workes fine
if the clients requested for small n medium size images as the server sends
the response immediately and also workes fine if one client is requesting a
large image (obviously server takes time to send response  as  it takes time
to fetch the image from the web ) and other clients concurrently request for
small and medium images  these  clients will  be served immediately even if
the other client is waiting but problem crops up when 2 clients concurrently
request for an large image .. while these  two clients are waiting for the
response fromthe server . The server doesn't accept any other client request
... i can see this as i am printing the  address of the client that connects
with server   in the 1st line of get method  of the request handler if two
clients concurrently request for an large image and only two clients address
gets printed  that means only 2 clients receives connection to the server
even if  other clients  are requesting  the server at the same time and
other servers are served only after the  those 2 server releases the
connection or get the response . that means server servers only 2 clients at
a time .this is very undesirable as even if 3rd client is requesting for
very small image and 2 clients are waiting for large image .. 3rd client
won't receive the response until those 2 clients are  served . to make thing
worst my server should serve 10 to 15 clients concurrently

to solve this i did some searching and found about cherrypy and twisted also
implemented my server in cherrypy
like this

from cherrypy import wsgiserver
def image_httpserver_app(environ, start_response):
    print >>sys.stdout,"received connection from: (%s : %s ) \nthe image url
is: %s " %
(environ["REMOTE_ADDR"],environ["REMOTE_PORT"],environ["QUERY_STRING"])
    status = '200 OK'
    response_headers = [('Content-type',format)]
     image=image_retreive()
     response_headers = [("Content-Length",`len(image_data)`)]
     start_response(status, response_headers)
     return [image_data]

mappings=[('/', image_httpserver_app)]
wsgi_apps = mappings
server = wsgiserver.CherryPyWSGIServer(('localhost', 8888), wsgi_apps,

server_name='localhost',numthreads=20)

if __name__ == '__main__':
      try:
          server.start()
      except KeyboardInterrupt:
          server.stop()

this didn't solve the problem at all .. same thing is happening only 2
clients is served at a time ..even if no of threads is assigned  to 20 ..
i have did lot of searching and reading .. and hoping to find a solution
..can anyone make it easier for me
i have heard of twisted deffered object .. will it solved the problem ? if
not pls suggest me alternative..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080304/41ecc3be/attachment.htm 

From exarkun at divmod.com  Tue Mar  4 10:41:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Mar 2008 10:41:43 -0500
Subject: [Twisted-Python] http server performance
In-Reply-To: <2613171a0803040641u1b48dfcai96c9172fd093c4d7@mail.gmail.com>
Message-ID: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>

On Tue, 4 Mar 2008 20:11:08 +0530, bharath venkatesh <bharathv6.project at gmail.com> wrote:
>hi,
>       my project involves lot of  I/O  over the network.. one part of my
>project involves a server(http) which is listening on the port for many
>client . this sever fetches an image from the web and  and send it to
>clients ....  and many clients will request the server concurrently .. to
>implement concurrent serving to clients i used threaded http server
>like this
>
> [snip]
>
>this didn't solve the problem at all .. same thing is happening only 2
>clients is served at a time ..even if no of threads is assigned  to 20 ..
>i have did lot of searching and reading .. and hoping to find a solution
>..can anyone make it easier for me
>i have heard of twisted deffered object .. will it solved the problem ? if
>not pls suggest me alternative..
>

Deferreds won't directly solve your problem, but using Twisted as your
HTTP server (and client) should.  It is generally the case that Twisted applications continue to perform well under increasing load  - more so
than thread-per-connection based systems.

Jean-Paul



From matt at madebykite.com  Tue Mar  4 11:07:20 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 16:07:20 +0000
Subject: [Twisted-Python] http server performance
In-Reply-To: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
Message-ID: <2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>

I am not aware of the scope of your project, or on your experience  
with C but if you are looking for high performance based on an  
ascynchronous events you might do well to take a look at the lighttpd  
web server. In the past I have had a lot of success, hacking lighttpd  
modules (such as the proxy module) for my own particular needs. The  
code base is small and easy to comprehend when compared to the  
monolith that is apache.

I'm not saying that twisted won't be able to cater for your needs (it  
caters for most of mine). Just pointing you to possible alternatives...

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 15:41, Jean-Paul Calderone wrote:

> On Tue, 4 Mar 2008 20:11:08 +0530, bharath venkatesh  
> <bharathv6.project at gmail.com> wrote:
>> hi,
>>       my project involves lot of  I/O  over the network.. one part  
>> of my
>> project involves a server(http) which is listening on the port for  
>> many
>> client . this sever fetches an image from the web and  and send it to
>> clients ....  and many clients will request the server  
>> concurrently .. to
>> implement concurrent serving to clients i used threaded http server
>> like this
>>
>> [snip]
>>
>> this didn't solve the problem at all .. same thing is happening  
>> only 2
>> clients is served at a time ..even if no of threads is assigned   
>> to 20 ..
>> i have did lot of searching and reading .. and hoping to find a  
>> solution
>> ..can anyone make it easier for me
>> i have heard of twisted deffered object .. will it solved the  
>> problem ? if
>> not pls suggest me alternative..
>>
>
> Deferreds won't directly solve your problem, but using Twisted as your
> HTTP server (and client) should.  It is generally the case that  
> Twisted applications continue to perform well under increasing  
> load  - more so
> than thread-per-connection based systems.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dwelch at umail.ucsb.edu  Tue Mar  4 14:15:27 2008
From: dwelch at umail.ucsb.edu (David Welch)
Date: Tue, 4 Mar 2008 11:15:27 -0800
Subject: [Twisted-Python] writing back through open connections
Message-ID: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>

Hi,

I'm new to twisted and I am having trouble writing back through open  
tcp connections. In my setup I have many clients (lets say 10 for this  
example) connecting to a server running twisted. Each time a new  
client connects I maintain that connection indefinitely and it  
populates a list of available clients the server can talk to. I want a  
user to select from that list and send data to that client using the  
open connection. In this case a client won't cause an event (so I  
can't just write back to it in say the receivedData function because  
the client is just sitting idle waiting for data to be pushed to it).  
The transport.write() works in the protocol that handles events from  
the clients, but like I said the client will be waiting idle until  
some data is sent to it (it just makes the initial connection to the  
serve). Is there any way to see a list of the open connections so I  
can selectively write to it? Or is there another way to do this?  
Thanks for the help.

Dave



From matt at madebykite.com  Tue Mar  4 14:45:54 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 19:45:54 +0000
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>
References: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>
Message-ID: <89E63C88-55B6-4773-815B-80EB005D35CB@madebykite.com>

Hi David,

This is not the twisted way to do it. You should take a look at:

<http://twistedmatrix.com/projects/core/documentation/howto/ 
servers.html#auto5>

It talks about Factory classes. Essentially, your service is a Server  
Protocol Factory. When a client connects to that service, the Factory  
instance does not deal with responses to the client. Instead, the  
buildProtocol method of the Factory instance is invoked. This  
instantiates a completely new instance of your Server Protocol class.  
It is this instance (commonly, a state machine) that handles the  
logic of reacting to incoming messages from the client and responding  
to them.

You should treat your Protocol class as a completely self contained  
way of communicating solely with the client that it was instantiated  
for.

Hope that helps,

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 19:15, David Welch wrote:

> Hi,
>
> I'm new to twisted and I am having trouble writing back through  
> open tcp connections. In my setup I have many clients (lets say 10  
> for this example) connecting to a server running twisted. Each time  
> a new client connects I maintain that connection indefinitely and  
> it populates a list of available clients the server can talk to. I  
> want a user to select from that list and send data to that client  
> using the open connection. In this case a client won't cause an  
> event (so I can't just write back to it in say the receivedData  
> function because the client is just sitting idle waiting for data  
> to be pushed to it). The transport.write() works in the protocol  
> that handles events from the clients, but like I said the client  
> will be waiting idle until some data is sent to it (it just makes  
> the initial connection to the serve). Is there any way to see a  
> list of the open connections so I can selectively write to it? Or  
> is there another way to do this? Thanks for the help.
>
> Dave
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at teknico.net  Tue Mar  4 14:47:26 2008
From: nico at teknico.net (Nicola Larosa)
Date: Tue, 04 Mar 2008 20:47:26 +0100
Subject: [Twisted-Python] Re: http server performance
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
Message-ID: <20080304194736.F421C124116@slice.teknico.net>

Matthew Glubb wrote:
> if you are looking for high performance based on an asynchronous events
> you might do well to take a look at the lighttpd web server.

And to nginx, also asynchronous, and without a history of leaking memory.

Notice how I actually said nothing about Lighttpd: you may have imagined
it. ;-)

-- 
Nicola Larosa - http://www.tekNico.net/

The [European] Parliamentary Assembly therefore urges the member states,
and especially their education authorities: [...] to firmly oppose the
teaching of creationism as a scientific discipline on an equal footing
with the theory of evolution and in general resist presentation of
creationist ideas in any discipline other than religion.
 -- European Parliament, resolution 1580 (2007)






From dr.marc.byrd at gmail.com  Tue Mar  4 15:22:54 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Tue, 4 Mar 2008 12:22:54 -0800
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080304194736.F421C124116@slice.teknico.net>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
Message-ID: <a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>

Clearly image_retrieve should also be async.  All the beauty of twisted is
destroy by locking it for such a retrieve.  Almost anything that goes
offboard (incl. filesystem) should be a deferred.  The only exception i've
found is memcached, because it's so dang fast ;^)

I presume your needs are slightly beyond your code sample, which may have
been modified for clarity, but if not, other web servers and proxys
suggested may be a good way to go.

m


On Tue, Mar 4, 2008 at 11:47 AM, Nicola Larosa <nico at teknico.net> wrote:

> Matthew Glubb wrote:
> > if you are looking for high performance based on an asynchronous events
> > you might do well to take a look at the lighttpd web server.
>
> And to nginx, also asynchronous, and without a history of leaking memory.
>
> Notice how I actually said nothing about Lighttpd: you may have imagined
> it. ;-)
>
> --
> Nicola Larosa - http://www.tekNico.net/
>
> The [European] Parliamentary Assembly therefore urges the member states,
> and especially their education authorities: [...] to firmly oppose the
> teaching of creationism as a scientific discipline on an equal footing
> with the theory of evolution and in general resist presentation of
> creationist ideas in any discipline other than religion.
>  -- European Parliament, resolution 1580 (2007)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080304/4fb3a3e4/attachment.htm 

From nathan.stocks at gmail.com  Tue Mar  4 15:49:49 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 13:49:49 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
Message-ID: <96c9d6a80803041249x173048e5v5ec616045cda7f65@mail.gmail.com>

On Tue, Mar 4, 2008 at 2:13 AM,  <glyph at divmod.com> wrote:
>
>  On 04:11 am, nathan.stocks at gmail.com wrote:
>  >I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>  >the "easy" method in the py2app install docs.  I'm trying to package a
>  >little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>  >working on, and it _mostly_ works, except it keeps giving me the
>  >following error when I try to run the resulting app:
>  >
>  >ImportError: No module named amp
>
>  AMP itself isn't doing anything clever that I can see would confuse
>  py2app.  It's just a regular Python module with regular imports; no
>  dynamic module loading; in fact, it's much less interesting than the
>  core parts of Twisted which load various plugins.

I agree, which is yet another reason why it's so weird that amp
doesn't work but the more complicated stuff does.

>  I don't have any experience with py2app, but I can guess at the problem
>  - I know that OS X 10.5 ships with an incomplete installation of Twisted
>  in some system location.  Perhaps you've installed a complete version of
>  Twisted elsewhere, but py2app is confused about the ordering of sys.path
>  that you want, and is including the system location first.  I am not
>  aware of how this installation is incomplete - maybe it doesn't include
>  AMP?

I installed Twisted 2.5 from source into
/Library/Python/2.5/site-packages.  I set PYTHONPATH to
/Library/Python/2.5/site-packages as mentioned in the wiki.  Had I not
done that, AMP would have not been accessible period.  As I mentioned
above, I've done "python setup.py py2app --use-pythonpath" which is
supposed to make py2app aware of the PYTHONPATH env variable.  I've
also tried adding
"sys.path.insert(0,'/Library/Python/2.5/site-packages')" to the top of
my script.  I've also tried instructing py2app to include
twisted.protocols.amp with "python setup.py py2app --use-pythonpath
--include twisted.protocols.amp".

In ALL cases (if I remember correctly), there exists a file
twisted/protocols/amp.py INSIDE the .app bundle each time.  Yet the
import still fails when launching the .app.  Weird!

~ Nathan



From matt at madebykite.com  Tue Mar  4 15:52:33 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 20:52:33 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
Message-ID: <61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>

I loooooove memcache, but I still defer it to a thread :/
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 20:22, Marc Byrd wrote:

> Clearly image_retrieve should also be async.  All the beauty of  
> twisted is destroy by locking it for such a retrieve.  Almost  
> anything that goes offboard (incl. filesystem) should be a  
> deferred.  The only exception i've found is memcached, because it's  
> so dang fast ;^)
>
> I presume your needs are slightly beyond your code sample, which  
> may have been modified for clarity, but if not, other web servers  
> and proxys suggested may be a good way to go.
>
> m
>
>
> On Tue, Mar 4, 2008 at 11:47 AM, Nicola Larosa <nico at teknico.net>  
> wrote:
> Matthew Glubb wrote:
> > if you are looking for high performance based on an asynchronous  
> events
> > you might do well to take a look at the lighttpd web server.
>
> And to nginx, also asynchronous, and without a history of leaking  
> memory.
>
> Notice how I actually said nothing about Lighttpd: you may have  
> imagined
> it. ;-)
>
> --
> Nicola Larosa - http://www.tekNico.net/
>
> The [European] Parliamentary Assembly therefore urges the member  
> states,
> and especially their education authorities: [...] to firmly oppose the
> teaching of creationism as a scientific discipline on an equal footing
> with the theory of evolution and in general resist presentation of
> creationist ideas in any discipline other than religion.
>  -- European Parliament, resolution 1580 (2007)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nathan.stocks at gmail.com  Tue Mar  4 15:53:02 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 13:53:02 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <47CD3BDA.3030204@anapol.cz>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
Message-ID: <96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:08 AM, Petr Mifek <pm-twisted-python at anapol.cz> wrote:
>  took a quick look into the OS X 10.5 default twisted installation and
>  indeed, there doesn't seem to be the amp.py module included in
>
>  /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols
>
>  Try http://twistedmatrix.com/trac/wiki/Packages#Leopard

Yes, I've taken all that into consideration from the start.  As
mentioned in my last post, I have a fully working version of Twisted
2.5.  I followed that very FAQ back when I first installed it.  I've
explicitly told py2app to use my PYTHONPATH variable, and it actually
copies twisted/protocols/amp.py into the app bundle.  Yet the .app
still fails with that import error about amp.  Weird!

~ Nathan



From radix at twistedmatrix.com  Tue Mar  4 16:26:13 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 4 Mar 2008 16:26:13 -0500
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
Message-ID: <60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>

On Tue, Mar 4, 2008 at 3:53 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  Yes, I've taken all that into consideration from the start.  As
>  mentioned in my last post, I have a fully working version of Twisted
>  2.5.  I followed that very FAQ back when I first installed it.  I've
>  explicitly told py2app to use my PYTHONPATH variable, and it actually
>  copies twisted/protocols/amp.py into the app bundle.  Yet the .app
>  still fails with that import error about amp.  Weird!

Maybe when you actually run the .app it's finding the system-installed
version of Twisted?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andreas at kostyrka.org  Tue Mar  4 16:37:37 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 04 Mar 2008 22:37:37 +0100
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
Message-ID: <1204666657.14387.3.camel@localhost>

And the canonical way to locate that problem would be to add something
like:

import twisted.protocols
print twisted.protocols.__file__

to your app, to see from where the twisted package is coming.

Andreas
Am Dienstag, den 04.03.2008, 16:26 -0500 schrieb Christopher Armstrong:
> On Tue, Mar 4, 2008 at 3:53 PM, Nathan <nathan.stocks at gmail.com> wrote:
> >  Yes, I've taken all that into consideration from the start.  As
> >  mentioned in my last post, I have a fully working version of Twisted
> >  2.5.  I followed that very FAQ back when I first installed it.  I've
> >  explicitly told py2app to use my PYTHONPATH variable, and it actually
> >  copies twisted/protocols/amp.py into the app bundle.  Yet the .app
> >  still fails with that import error about amp.  Weird!
> 
> Maybe when you actually run the .app it's finding the system-installed
> version of Twisted?
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080304/93805545/attachment.pgp 

From nathan.stocks at gmail.com  Tue Mar  4 18:50:50 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 16:50:50 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <1204666657.14387.3.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
Message-ID: <96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>

>  > Maybe when you actually run the .app it's finding the system-installed
>  > version of Twisted?
>  >
> And the canonical way to locate that problem would be to add something
>  like:
>
>  import twisted.protocols
>  print twisted.protocols.__file__
>
>  to your app, to see from where the twisted package is coming.
>

Now we're getting somewhere!  Yes, even though py2app seems to be
pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
the app is built, when the app is actually run it's finding the
Leopard-default-installed Twisted 2.4 instead:

/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols/__init__.pyc

So, the next logical question would be:  How do I get my script inside
my .app to consider the libraries inside the .app first?  You'd think
that py2app would already be taking care of that...

~ Nathan



From phil at bubblehouse.org  Tue Mar  4 19:39:22 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 04 Mar 2008 19:39:22 -0500
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
Message-ID: <991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>

On Mar 4, 2008, at 6:50 PM, Nathan wrote:

>>> Maybe when you actually run the .app it's finding the system- 
>>> installed
>>> version of Twisted?
>>>
>> And the canonical way to locate that problem would be to add  
>> something
>>  like:
>>
>>  import twisted.protocols
>>  print twisted.protocols.__file__
>>
>>  to your app, to see from where the twisted package is coming.
>>
>
> Now we're getting somewhere!  Yes, even though py2app seems to be
> pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
> the app is built, when the app is actually run it's finding the
> Leopard-default-installed Twisted 2.4 instead:
>
> /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/ 
> python/twisted/protocols/__init__.pyc
>
> So, the next logical question would be:  How do I get my script inside
> my .app to consider the libraries inside the .app first?  You'd think
> that py2app would already be taking care of that...

This is a little inelegant (maybe even a lot inelegant), but when  
i've had issues with the system path that I couldn't fix (because I  
didn't have root, or was just in a hurry), I've just manipulated  
sys.path at the start of my code before I've imported any modules.

-phil



From dwelch at umail.ucsb.edu  Tue Mar  4 23:42:10 2008
From: dwelch at umail.ucsb.edu (David Welch)
Date: Tue, 4 Mar 2008 20:42:10 -0800
Subject: [Twisted-Python] writing back through open connections
Message-ID: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>

Matt,

I read that howto/servers documentation and I have set up my code into  
a Factory and Protocol that handles incoming connections. I don't  
think I explained myself well enough though. When a client connects,  
the server may or may not being send data back right away so I need to  
be able to send data to that connected client on the servers terms.  
For example:

Client 1 connects -- Factory instantiates Protocol class to handle  
communication (connection doesn't close)
Client 2 connects -- Factory instantiates Protocol class to handle  
communication (connection doesn't close)
<time has passed until server decides it needs to send a plugin to one  
of the clients>
Server sends plugin to Client 1

So how can that server send data to client 1 if client 1 hasn't caused  
an event (The server side causes a certain event it should send data  
to a selected client). I understand that if a client sends data to the  
server I can than write back to the client using the dataReceived  
function within the Protocol instantiation. In this case once N number  
of agents have connected I want the server to push data to the clients  
without the Client writing to the server. Thanks again for the help.





From glyph at divmod.com  Tue Mar  4 23:53:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 04:53:37 -0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
Message-ID: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>

On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>I loooooove memcache, but I still defer it to a thread :/

Why?

http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/memcache.py



From drew.smathers at gmail.com  Wed Mar  5 00:29:39 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 5 Mar 2008 00:29:39 -0500
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
Message-ID: <368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>

On Tue, Mar 4, 2008 at 11:42 PM, David Welch <dwelch at umail.ucsb.edu> wrote:
> Matt,
>
>  I read that howto/servers documentation and I have set up my code into
>  a Factory and Protocol that handles incoming connections.

Honestly, I don't think we're dealing with a design pattern issue now.

> I don't
>  think I explained myself well enough though. When a client connects,
>  the server may or may not being send data back right away so I need to
>  be able to send data to that connected client on the servers terms.
>  For example:
>
>  Client 1 connects -- Factory instantiates Protocol class to handle
>  communication (connection doesn't close)
>  Client 2 connects -- Factory instantiates Protocol class to handle
>  communication (connection doesn't close)
>  <time has passed until server decides it needs to send a plugin to one
>  of the clients>
>  Server sends plugin to Client 1
>
>  So how can that server send data to client 1 if client 1 hasn't caused
>  an event (The server side causes a certain event it should send data
>  to a selected client).

Define `event'.  Is the initial connection not an event?  If you have
an open connection, the client doesn't have fart back through it every
5 seconds (by the semantics of most protocols) to keep it open or
anything.

>  I understand that if a client sends data to the
>  server I can than write back to the client using the dataReceived
>  function within the Protocol instantiation.

Are you sure you understand?  You're calling dataReceive to send data?
 If you're calling a method (that's what you meant by "function within
the Protocol instantiation", I guess) with "receive" in the name, then
you can only be very confused.

> In this case once N number
>  of agents have connected I want the server to push data to the clients
>  without the Client writing to the server. Thanks again for the help.
>

So write back data to the client.  That's all I can say until you
describe what you've tried (w/ code) and why it failed (w/ a
stacktrace) - vs. in pretty vague terms on essay on what you want to
do and haven't even attempted.


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From chris at sidwells.com  Wed Mar  5 03:23:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Wed, 5 Mar 2008 08:23:24 +0000
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
	<368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>
Message-ID: <e6a690760803050023n392d648cm63f73c5999255046@mail.gmail.com>

Forgive any newbie errors, as I'm new to Twisted.

The pattern discussed *seems* to be the same as the 'comet' pattern in web
development: a client contacts the server, but rather than responding
quickly, the server 'files away' the connection in case there is something
to send later.  (Filing away, in my case is done by adding a reference to
the stream as a member of a 'Connection' class withing my server.
'Connections' can either be 'open' [able to send immediately] or 'buffering'
[waiting for the client to reconnect].)

I have implemented this pattern using twisted.web2 as follows:

A render method creates a stream, but 'files it away', rather than calling
stream.finish().  The render method *does* complete and return, but the
connection is thereby held open and no data is immediately sent.

Sometime later, or perhaps never, something happens on the server which
causes it to send data on the previously 'filed away' stream and calls
stream.finish().  (In my case, because this is comet, the client immediately
makes another connection to the server, which is again 'filed away'.)

I hope this doesn't muddy the issue.

Regards,

Chris,

P.S. I have heard of Nevow Athena, but I wanted something very simple.

On 05/03/2008, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Tue, Mar 4, 2008 at 11:42 PM, David Welch <dwelch at umail.ucsb.edu>
> wrote:
> > Matt,
> >
> >  I read that howto/servers documentation and I have set up my code into
> >  a Factory and Protocol that handles incoming connections.
>
>
> Honestly, I don't think we're dealing with a design pattern issue now.
>
>
> > I don't
> >  think I explained myself well enough though. When a client connects,
> >  the server may or may not being send data back right away so I need to
> >  be able to send data to that connected client on the servers terms.
> >  For example:
> >
> >  Client 1 connects -- Factory instantiates Protocol class to handle
> >  communication (connection doesn't close)
> >  Client 2 connects -- Factory instantiates Protocol class to handle
> >  communication (connection doesn't close)
> >  <time has passed until server decides it needs to send a plugin to one
> >  of the clients>
> >  Server sends plugin to Client 1
> >
> >  So how can that server send data to client 1 if client 1 hasn't caused
> >  an event (The server side causes a certain event it should send data
> >  to a selected client).
>
>
> Define `event'.  Is the initial connection not an event?  If you have
> an open connection, the client doesn't have fart back through it every
> 5 seconds (by the semantics of most protocols) to keep it open or
> anything.
>
>
> >  I understand that if a client sends data to the
> >  server I can than write back to the client using the dataReceived
> >  function within the Protocol instantiation.
>
>
> Are you sure you understand?  You're calling dataReceive to send data?
>   If you're calling a method (that's what you meant by "function within
> the Protocol instantiation", I guess) with "receive" in the name, then
> you can only be very confused.
>
>
> > In this case once N number
> >  of agents have connected I want the server to push data to the clients
> >  without the Client writing to the server. Thanks again for the help.
> >
>
>
> So write back data to the client.  That's all I can say until you
> describe what you've tried (w/ code) and why it failed (w/ a
> stacktrace) - vs. in pretty vague terms on essay on what you want to
> do and haven't even attempted.
>
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080305/7a8de9a8/attachment.htm 

From matt at madebykite.com  Wed Mar  5 03:35:54 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 5 Mar 2008 08:35:54 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
	<20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
Message-ID: <6FB796ED-D372-4665-A641-6EC7580F6F32@madebykite.com>

On 5 Mar 2008, at 04:53, glyph at divmod.com wrote:

> On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>> I loooooove memcache, but I still defer it to a thread :/
>
> Why?
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/ 
> memcache.py

Aha! There's still so much to learn, isn't there?

The answer is because I've been using a non twisted memcache  
implementation.

No I know, thanks :)




From matt at madebykite.com  Wed Mar  5 03:47:51 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 5 Mar 2008 08:47:51 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
	<20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
Message-ID: <FBC3A3F0-120A-47B1-822B-549A6652114E@madebykite.com>

On 5 Mar 2008, at 04:53, glyph at divmod.com wrote:

> On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>> I loooooove memcache, but I still defer it to a thread :/
>
> Why?
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/ 
> memcache.py

Or more importantly, because this didn't exist in trunk until 4  
months ago!




From nathan.stocks at gmail.com  Wed Mar  5 11:41:17 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 09:41:17 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
Message-ID: <96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:39 PM, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Mar 4, 2008, at 6:50 PM, Nathan wrote:
>
>  >>> Maybe when you actually run the .app it's finding the system-
>  >>> installed
>  >>> version of Twisted?
>  >>>
>  >> And the canonical way to locate that problem would be to add
>  >> something
>  >>  like:
>  >>
>  >>  import twisted.protocols
>  >>  print twisted.protocols.__file__
>  >>
>  >>  to your app, to see from where the twisted package is coming.
>  >>
>  >
>  > Now we're getting somewhere!  Yes, even though py2app seems to be
>  > pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
>  > the app is built, when the app is actually run it's finding the
>  > Leopard-default-installed Twisted 2.4 instead:
>  >
>  > /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/
>  > python/twisted/protocols/__init__.pyc
>  >
>  > So, the next logical question would be:  How do I get my script inside
>  > my .app to consider the libraries inside the .app first?  You'd think
>  > that py2app would already be taking care of that...
>
>  This is a little inelegant (maybe even a lot inelegant), but when
>  i've had issues with the system path that I couldn't fix (because I
>  didn't have root, or was just in a hurry), I've just manipulated
>  sys.path at the start of my code before I've imported any modules.

I'm fine with doing that, but how do you find the path you need to
insert into sys.path?  The amp.py that it includes is inside
MyApp.app/Contents/Resources/lib/python2.5/site-packages.zip -- a ZIP
file!  Does sys.path support zip files??
sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
??

~ Nathan



From steve at holdenweb.com  Wed Mar  5 11:59:48 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 11:59:48 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
Message-ID: <fqmjim$vee$1@ger.gmane.org>

Nathan wrote:
[...]
 > Does sys.path support zip files??
> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> ??
Yes. Just add the zip file to sys.path and you can import modules 
contained in the files inside the zip.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andreas at kostyrka.org  Wed Mar  5 12:41:32 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Wed, 05 Mar 2008 18:41:32 +0100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <fqmjim$vee$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
Message-ID: <1204738892.13045.0.camel@localhost>


Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
> Nathan wrote:
> [...]
>  > Does sys.path support zip files??
> > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> > ??
> Yes. Just add the zip file to sys.path and you can import modules 
> contained in the files inside the zip.

Although gentlemen call such files eggs :-P

Andreas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080305/0d56773c/attachment.pgp 

From steve at holdenweb.com  Wed Mar  5 14:31:21 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 14:31:21 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <1204738892.13045.0.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost>
Message-ID: <fqmsea$6c1$1@ger.gmane.org>

Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>> Nathan wrote:
>> [...]
>>  > Does sys.path support zip files??
>>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>>> ??
>> Yes. Just add the zip file to sys.path and you can import modules 
>> contained in the files inside the zip.
> 
> Although gentlemen call such files eggs :-P
> 
How would I be supposed to know what gentlemen do? ;-)

regards
  Sreve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Wed Mar  5 14:35:32 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 14:35:32 -0500
Subject: [Twisted-Python] Teach Me Twisted
Message-ID: <fqmsm6$7j8$1@ger.gmane.org>

OK, with no reference to anyone else I have scheduled an Open Space 
session for 8pm to 10pm on the Saturday evening:

   http://wiki.python.org/moin/Open_Space

I have written a few notes about my intentions in a separate Wiki page 
linked from the Open Space page:

   http://wiki.python.org/moin/PyCon2008/TeachMeTwisted

Since we want to make sure we get a room of the right size I ask on that 
page for those intending to be there to sign up in advance. Please do 
so. Please also feel free to add whatever notes you think will help to 
that page.

hoping-i-won't-be-by-myself-ly y'rs  - steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From radix at twistedmatrix.com  Wed Mar  5 14:54:59 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 14:54:59 -0500
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <fqmsm6$7j8$1@ger.gmane.org>
References: <fqmsm6$7j8$1@ger.gmane.org>
Message-ID: <60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:35 PM, Steve Holden <steve at holdenweb.com> wrote:
> OK, with no reference to anyone else I have scheduled an Open Space
>  session for 8pm to 10pm on the Saturday evening:

>  hoping-i-won't-be-by-myself-ly y'rs  - steve

I think I'll probably show up. :-)


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From drew.smathers at gmail.com  Wed Mar  5 14:57:11 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 5 Mar 2008 14:57:11 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
Message-ID: <368574aa0803051157n524fb744x3819620119228d17@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:31 PM, Steve Holden <steve at holdenweb.com> wrote:
>
> Andreas Kostyrka wrote:
>  > Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>  >> Nathan wrote:
>  >> [...]
>  >>  > Does sys.path support zip files??
>  >>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>  >>> ??
>  >> Yes. Just add the zip file to sys.path and you can import modules
>  >> contained in the files inside the zip.
>  >
>  > Although gentlemen call such files eggs :-P
>  >
>  How would I be supposed to know what gentlemen do? ;-)
>

Well ... for one, distinguished gentlemen don't use eggs ;-)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From clemesha at gmail.com  Wed Mar  5 15:05:23 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 5 Mar 2008 12:05:23 -0800
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <fqmsm6$7j8$1@ger.gmane.org>
References: <fqmsm6$7j8$1@ger.gmane.org>
Message-ID: <d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>

On Wed, Mar 5, 2008 at 11:35 AM, Steve Holden <steve at holdenweb.com> wrote:

> OK, with no reference to anyone else I have scheduled an Open Space
> session for 8pm to 10pm on the Saturday evening:
>
>   http://wiki.python.org/moin/Open_Space
>
> I have written a few notes about my intentions in a separate Wiki page
> linked from the Open Space page:
>
>   http://wiki.python.org/moin/PyCon2008/TeachMeTwisted
>
> Since we want to make sure we get a room of the right size I ask on that
> page for those intending to be there to sign up in advance. Please do
> so. Please also feel free to add whatever notes you think will help to
> that page.


Not sure is this has been discussed already,
but it would be really great if someone could make
audio recordings (or video) of all the Twisted goings-on
at PyCon for those of us who can't go.

For example, I found the recent interview with the
Chesspark guys to be very interesting and informative:

http://twistedmatrix.com/trac/wiki/InterviewChesspark200802
 ... thanks for putting that on.

So anyways, please record everything you can at PyCon, thanks!

-Alex


>
>
> hoping-i-won't-be-by-myself-ly y'rs  - steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080305/9f854a6f/attachment.htm 

From ldanielburr at mac.com  Wed Mar  5 15:10:23 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 05 Mar 2008 14:10:23 -0600
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>
Message-ID: <op.t7j7nldr3oj628@dchen-laptop.texturallc.net>

On Wed, 05 Mar 2008 13:54:59 -0600, Christopher Armstrong  
<radix at twistedmatrix.com> wrote:

> On Wed, Mar 5, 2008 at 2:35 PM, Steve Holden <steve at holdenweb.com> wrote:
>> OK, with no reference to anyone else I have scheduled an Open Space
>>  session for 8pm to 10pm on the Saturday evening:
>
>>  hoping-i-won't-be-by-myself-ly y'rs  - steve
>
> I think I'll probably show up. :-)
>

I've added myself to the list on the Wiki.  Be warned: I am likely to  
spread more idiocy than enlightenment ;)


L. Daniel Burr



From nathan.stocks at gmail.com  Wed Mar  5 12:32:11 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 10:32:11 -0700
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmjim$vee$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
Message-ID: <96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>

On Wed, Mar 5, 2008 at 9:59 AM, Steve Holden <steve at holdenweb.com> wrote:
> Nathan wrote:
>  [...]
>
>  > Does sys.path support zip files??
>  > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>  > ??
>  Yes. Just add the zip file to sys.path and you can import modules
>  contained in the files inside the zip.

Perfect!

1) sys.path allows zip files (so that's how that works!)
2) sys.path allows relative paths
3) sys.path has the site-packages.zip entry near the end of sys.path

Adding the following line to the top of my script WORKED!

sys.path.insert(0,'../Resources/lib/python2.5/site-packages.zip')

Thanks for all the help, everyone!

~ Nathan



From phil at bubblehouse.org  Wed Mar  5 15:01:57 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 5 Mar 2008 15:01:57 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost> <fqmsea$6c1$1@ger.gmane.org>
Message-ID: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>

On Mar 5, 2008, at 2:31 PM, Steve Holden wrote:
> Andreas Kostyrka wrote:
>> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>>> Nathan wrote:
>>> [...]
>>> > Does sys.path support zip files??
>>>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/ 
>>>> twisted')
>>>> ??
>>> Yes. Just add the zip file to sys.path and you can import modules  
>>> contained in the files inside the zip.
>> Although gentlemen call such files eggs :-P
> How would I be supposed to know what gentlemen do? ;-)

It's easy. "Gentlemen", when used in this context, means "someone who  
designs a packaging system without broad community input, and creates  
a buggy implementation that is somehow accepted into the language  
distribution, thus forcing developers all around the world to stick to  
their ill-defined standard."

I remember it by using the mnemonic device  
SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...

-phil



From radix at twistedmatrix.com  Wed Mar  5 15:37:33 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 15:37:33 -0500
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
Message-ID: <60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>

On Wed, Mar 5, 2008 at 3:05 PM, alex clemesha <clemesha at gmail.com> wrote:
> Not sure is this has been discussed already,
> but it would be really great if someone could make
> audio recordings (or video) of all the Twisted goings-on
> at PyCon for those of us who can't go.
>
> For example, I found the recent interview with the
> Chesspark guys to be very interesting and informative:
>
> http://twistedmatrix.com/trac/wiki/InterviewChesspark200802
>   ... thanks for putting that on.
>
> So anyways, please record everything you can at PyCon, thanks!

It would be cool to get an episode or two recorded at PyCon. Does
anyone who is going have a portable audio recording setup that they
can bring?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Wed Mar  5 15:39:20 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 15:39:20 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
Message-ID: <60ed19d40803051239y4b814a1cuaf557f82741a94f7@mail.gmail.com>

On Wed, Mar 5, 2008 at 3:01 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Mar 5, 2008, at 2:31 PM, Steve Holden wrote:
>  > Andreas Kostyrka wrote:
>  >> Although gentlemen call such files eggs :-P
>  > How would I be supposed to know what gentlemen do? ;-)
>
>  It's easy. "Gentlemen", when used in this context, means "someone who
>  designs a packaging system without broad community input, and creates
>  a buggy implementation that is somehow accepted into the language
>  distribution, thus forcing developers all around the world to stick to
>  their ill-defined standard."
>
>  I remember it by using the mnemonic device
>  SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...

Please, let's not start a huge flamewar about eggs.




-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Mar  5 16:00:51 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 21:00:51 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
Message-ID: <20080305210051.21558.1398841746.divmod.xquotient.7397@joule.divmod.com>




On 07:31 pm, steve at holdenweb.com wrote:
>Andreas Kostyrka wrote:
>>Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>>>Nathan wrote:
>>>[...]
>>>  > Does sys.path support zip files??
>>>>sys.path.insert(0,'../Resources/lib/python/2.5/site- 
>>>>packages.zip/twisted')
>>>>??
>>>Yes. Just add the zip file to sys.path and you can import modules 
>>>contained in the files inside the zip.
>>
>>Although gentlemen call such files eggs :-P
>How would I be supposed to know what gentlemen do? ;-)

Eggs are something different; eggs can, in fact, be directories, as well 
as zip files.  Zip files that you can import Python out of are just that 
- zip files :).



From glyph at divmod.com  Wed Mar  5 16:12:25 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 21:12:25 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
Message-ID: <20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>


On 05:32 pm, nathan.stocks at gmail.com wrote:
>Adding the following line to the top of my script WORKED!
>
>sys.path.insert(0,'../Resources/lib/python2.5/site-packages.zip')

I'd recommend reporting a bug against py2app for it to do this (or its 
equivalent) automatically; I'm glad you got this to work, but it would 
be a shame for every subsequent user of AMP (or other similarly 
mispackaged dependencies) on OS X to discover this bug and have to work 
around it in the same way.

(By the way, what's the .app that you are p2app'ing actually do?)



From sam at SpinwardStars.com  Wed Mar  5 16:52:13 2008
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Wed, 05 Mar 2008 14:52:13 -0700
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.co
 m>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>
Message-ID: <E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>

At 01:37 PM 3/5/2008, you wrote:
>It would be cool to get an episode or two recorded at PyCon. Does
>anyone who is going have a portable audio recording setup that they
>can bring?

If not, I recommend the Zoom H2.

- Sam

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/                cell 303-501-4414 





From steve at holdenweb.com  Wed Mar  5 17:22:52 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 17:22:52 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted
In-Reply-To: <E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>
References: <fqmsm6$7j8$1@ger.gmane.org>	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>
	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.co m>
	<E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>
Message-ID: <fqn6fu$dct$1@ger.gmane.org>

Samuel Reynolds wrote:
> At 01:37 PM 3/5/2008, you wrote:
>> It would be cool to get an episode or two recorded at PyCon. Does
>> anyone who is going have a portable audio recording setup that they
>> can bring?
> 
> If not, I recommend the Zoom H2.
> 
If we get one of the ballrooms I understand that recordings are going to 
be made of the main sessions, but I don't know what it would take to 
extend it to a BoF (this session is really a BoF, isn't it? Maybe we 
should list it as such).

regards
  Steve

-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nathan.stocks at gmail.com  Thu Mar  6 00:22:51 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 22:22:51 -0700
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
	<20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
Message-ID: <96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:12 PM,  <glyph at divmod.com> wrote:
>  (By the way, what's the .app that you are p2app'ing actually do?)

It's the client portion of a 2D game I'm making with my brother for
fun.  My coworkers help me test it out, but they don't have the whole
environment (twisted, pyglet, etc.) setup, so I need to package it for
them.  I attached a screenshot if you're curious.  Any resemblance to
a popular 3D game is purely coincidental.

~ Nathan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Picture 1.png
Type: image/png
Size: 39777 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080305/22452ffa/attachment.png 

From glyph at divmod.com  Thu Mar  6 01:38:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 06 Mar 2008 06:38:23 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
	<20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
	<96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>
Message-ID: <20080306063823.21558.1297336184.divmod.xquotient.7515@joule.divmod.com>




On 05:22 am, nathan.stocks at gmail.com wrote:
>On Wed, Mar 5, 2008 at 2:12 PM,  <glyph at divmod.com> wrote:
>>  (By the way, what's the .app that you are p2app'ing actually do?)
>
>It's the client portion of a 2D game I'm making with my brother for
>fun.  My coworkers help me test it out, but they don't have the whole
>environment (twisted, pyglet, etc.) setup, so I need to package it for
>them.  I attached a screenshot if you're curious.  Any resemblance to
>a popular 3D game is purely coincidental.

Awesome!!  I love it when indie games use Twisted ;).



From big_tyo at inf.its-sby.edu  Thu Mar  6 01:54:11 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Thu, 6 Mar 2008 13:54:11 +0700 (ICT)
Subject: [Twisted-Python] thread created from tcp connection
Message-ID: <1197.10.126.11.159.1204786451.squirrel@202.46.129.82>

> Date: Thu, 28 Feb 2008 06:11:58 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] thread created from tcp connection

> On 05:59 am, big_tyo at inf.its-sby.edu wrote:
>>The Problem is i still haven't figure out how to send some parameters
>>to a
>>thread that created from established tcp connection.
>
> The real problem is probably that Twisted is not thread safe; you
> probably should not be using threads at all.
>>ps : sorry for the bad english
>
> No problem!  I'm sure my indonesian is much worse :).  Thanks for using
> Twisted.
>
> Since your english is not very good, it would be best if you could
> include Python code with your next message, so we can know exactly what
> you are talking about.
>
>
>

okay here is my source code for server and client for addition, someone
here told me that i shouldn't use twisted to manage tcp connection , well
i still want to swim deeper in twisted tough.

and i add some command for my problem there

thanks for your big help ^^



-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: TCPServer2.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080306/6497306a/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: TCPClient2.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080306/6497306a/attachment-0001.txt 

From andreas at kostyrka.org  Thu Mar  6 09:49:52 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 06 Mar 2008 15:49:52 +0100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
Message-ID: <1204814992.13045.61.camel@localhost>


Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:

Well, how buggy it is, is open to discussion. Clearly distutils becames
quite nicer when upgraded to setuptools. But having no packaging format
is not a solution either. I have no idea how long you've been doing
Python but I do remember the times when most C language modules came
without any build support (figure out the compiler call yourself, and
enjoy), or Makefile fragements at best.

So despite all potentially problematic aspects of
distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to the
Vault of Parnassus and tell me that it is not an improvement)

Andreas

> It's easy. "Gentlemen", when used in this context, means "someone who  
> designs a packaging system without broad community input, and creates  
> a buggy implementation that is somehow accepted into the language  
> distribution, thus forcing developers all around the world to stick to  
> their ill-defined standard."
> 
> I remember it by using the mnemonic device  
> SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...
> 
> -phil
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080306/bc48c229/attachment.pgp 

From steve at holdenweb.com  Thu Mar  6 10:01:14 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 06 Mar 2008 10:01:14 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <1204814992.13045.61.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost>	<fqmsea$6c1$1@ger.gmane.org>	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
	<1204814992.13045.61.camel@localhost>
Message-ID: <fqp0vv$v3c$1@ger.gmane.org>

Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:
> 
> Well, how buggy it is, is open to discussion. Clearly distutils becames
> quite nicer when upgraded to setuptools. But having no packaging format
> is not a solution either. I have no idea how long you've been doing
> Python but I do remember the times when most C language modules came
> without any build support (figure out the compiler call yourself, and
> enjoy), or Makefile fragements at best.
> 
> So despite all potentially problematic aspects of
> distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to the
> Vault of Parnassus and tell me that it is not an improvement)
> 
It's not an improvement.

See how easy lying is? ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From stephen.c.waterbury at nasa.gov  Thu Mar  6 10:25:59 2008
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 06 Mar 2008 10:25:59 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
Message-ID: <1204817159.25727.2.camel@beeblebrox.gsfc.nasa.gov>

Steve Holden wrote:
> Andreas Kostyrka wrote:
>> Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:
>>
>> Well, how buggy it is, is open to discussion. Clearly distutils
becames
>> quite nicer when upgraded to setuptools. But having no packaging
format
>> is not a solution either. I have no idea how long you've been doing
>> Python but I do remember the times when most C language modules came
>> without any build support (figure out the compiler call yourself, and
>> enjoy), or Makefile fragements at best.
>>
>> So despite all potentially problematic aspects of
>> distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to
the
>> Vault of Parnassus and tell me that it is not an improvement)
>>
> It's not an improvement.
> 
> See how easy lying is? ;-)

PLEASE, folks, let this (sub)thread die -- it's about as OT as it gets!

Steve W.




From ddwiggins at advpubtech.com  Thu Mar  6 12:35:38 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 06 Mar 2008 09:35:38 -0800
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
Message-ID: <fqpa1b$5dp$1@ger.gmane.org>

glyph at divmod.com wrote:
> The other reason is that adbapi is old.  If we were going to implement 
> something like ADBAPI today, we'd probably write a process pool first, 
> but adbapi was written as a quick hack to get some database integration 
> a long time ago.
> 
> The only caveat is that additional Python interpreters take up more RAM 
> than additional threads.  If the database processes are doing any heavy 
> CPU lifting though, this cost could well be worth it.

I'm just getting started with an XMLRPC server that uses adbapi.  This 
satisfies my curiosity as to why it was threaded.  Now assuming that, 
for my application, the "heavy lifting" is done by the DB engine itself, 
is there any good reason to dig into implementing a process pool?  (I'm 
thinking of the future here, as the server begins to grow more 
functionality.  Right now, my main concern is not to block multiple 
simultaneous requests from clients.)

-- 
Don Dwiggins
Advanced Publishing Technology




From nathan.stocks at gmail.com  Thu Mar  6 17:12:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 6 Mar 2008 15:12:35 -0700
Subject: [Twisted-Python] AMP + SSH?
Message-ID: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>

Is there a "twisted" way to run AMP over an SSH connection (with conch?)

The manual way of doing what I want is to connect two machines with a
TCP port tunneled over ssh, and have my AMP client/server talk over
the manually tunneled port.

~ Nathan



From exarkun at divmod.com  Thu Mar  6 17:19:50 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 6 Mar 2008 17:19:50 -0500
Subject: [Twisted-Python] AMP + SSH?
In-Reply-To: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>
Message-ID: <20080306221950.6859.117217107.divmod.quotient.16387@ohm>

On Thu, 6 Mar 2008 15:12:35 -0700, Nathan <nathan.stocks at gmail.com> wrote:
>Is there a "twisted" way to run AMP over an SSH connection (with conch?)
>
>The manual way of doing what I want is to connect two machines with a
>TCP port tunneled over ssh, and have my AMP client/server talk over
>the manually tunneled port.

You can run any IProtocol over conch.  It's just not very easy or well
documented.  Take a look at doc/conch/examples/sshsimpleclient.py for
the first part of what's necessary (setting up a client connection and
opening some channels).  sshsimpleserver.py in the same directory will
show you how to run a custom protocol on the server in a /shell/.  You
may not want to use a shell, though.

There are plans to make a much simpler API for setting up SSH connections
intended for programmatic (as opposed to interactive shell) use, but it
will likely be some time before they come to fruition.

Jean-Paul



From nathan.stocks at gmail.com  Thu Mar  6 18:05:38 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 6 Mar 2008 16:05:38 -0700
Subject: [Twisted-Python] AMP + SSH?
In-Reply-To: <20080306221950.6859.117217107.divmod.quotient.16387@ohm>
References: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>
	<20080306221950.6859.117217107.divmod.quotient.16387@ohm>
Message-ID: <96c9d6a80803061505h24f6d950k9f96c38475a3261e@mail.gmail.com>

On Thu, Mar 6, 2008 at 3:19 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>  You can run any IProtocol over conch.  It's just not very easy or well
>  documented.  Take a look at doc/conch/examples/sshsimpleclient.py for
>  the first part of what's necessary (setting up a client connection and
>  opening some channels).  sshsimpleserver.py in the same directory will
>  show you how to run a custom protocol on the server in a /shell/.  You
>  may not want to use a shell, though.
>
>  There are plans to make a much simpler API for setting up SSH connections
>  intended for programmatic (as opposed to interactive shell) use, but it
>  will likely be some time before they come to fruition.

Ok, thanks for the info.  It looks like the "manual" method will be a
lot easier for me at the moment, then.

~ Nathan



From duncan.mcgreggor at gmail.com  Thu Mar  6 23:21:07 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 6 Mar 2008 21:21:07 -0700
Subject: [Twisted-Python] Twisted at PyCon 2008
Message-ID: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>

Hey everyone,

A conference group has been set up at crowdvine:
  http://pycon2008.crowdvine.com/

I just signed up and started some twisted tagging -- I encourage
everyone to do the same and give the project a nice presence on the
conference social site :-)

d



From steve at holdenweb.com  Fri Mar  7 00:01:00 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 07 Mar 2008 00:01:00 -0500
Subject: [Twisted-Python] Re: Twisted at PyCon 2008
In-Reply-To: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>
References: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>
Message-ID: <47D0CC0C.5060303@holdenweb.com>

Duncan McGreggor wrote:
> Hey everyone,
> 
> A conference group has been set up at crowdvine:
>   http://pycon2008.crowdvine.com/
> 
> I just signed up and started some twisted tagging -- I encourage
> everyone to do the same and give the project a nice presence on the
> conference social site :-)
> 
I put a comment about this on

    https://pycon.coderanger.net/wiki/PyCon08/SocialNetworks

which you may wish to peruse for synergistic opportunities. I have an 
idea PyCon is going to be incoherently scattered over several channels 
this year :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From daedalus at eigenmagic.com  Fri Mar  7 00:01:35 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 07 Mar 2008 16:01:35 +1100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <1204738892.13045.0.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>  <1204738892.13045.0.camel@localhost>
Message-ID: <1204866095.6711.9.camel@localhost>

On Wed, 2008-03-05 at 18:41 +0100, Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
> > Nathan wrote:
> > [...]
> >  > Does sys.path support zip files??
> > > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> > > ??
> > Yes. Just add the zip file to sys.path and you can import modules 
> > contained in the files inside the zip.
> 
> Although gentlemen call such files eggs :-P

Oh so *that's* what eggs are.

The sound you just heard was that of a lightbulb going on.

-- 
Justin Warren <daedalus at eigenmagic.com>



From andreas at kostyrka.org  Fri Mar  7 07:44:02 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Fri, 07 Mar 2008 13:44:02 +0100
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <fqpa1b$5dp$1@ger.gmane.org>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org>
Message-ID: <1204893842.7994.48.camel@localhost>

Actually, on a modern system like Linux, if you fork, the process share
memory as long it's not written too (Copy-on-Write).

This means, that if you'd fork off your process pool from your
application, forking should have minimal impact. Even writing it as a
standalone process means memory usage of one Python interpreter, plus
minimal usage in the forked processes.

Andreas

Am Donnerstag, den 06.03.2008, 09:35 -0800 schrieb Don Dwiggins:
> glyph at divmod.com wrote:
> > The other reason is that adbapi is old.  If we were going to implement 
> > something like ADBAPI today, we'd probably write a process pool first, 
> > but adbapi was written as a quick hack to get some database integration 
> > a long time ago.
> > 
> > The only caveat is that additional Python interpreters take up more RAM 
> > than additional threads.  If the database processes are doing any heavy 
> > CPU lifting though, this cost could well be worth it.
> 
> I'm just getting started with an XMLRPC server that uses adbapi.  This 
> satisfies my curiosity as to why it was threaded.  Now assuming that, 
> for my application, the "heavy lifting" is done by the DB engine itself, 
> is there any good reason to dig into implementing a process pool?  (I'm 
> thinking of the future here, as the server begins to grow more 
> functionality.  Right now, my main concern is not to block multiple 
> simultaneous requests from clients.)
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080307/fed01e1f/attachment.pgp 

From mithrandi at mithrandi.net  Fri Mar  7 07:55:20 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 7 Mar 2008 14:55:20 +0200
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <1204893842.7994.48.camel@localhost>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org> <1204893842.7994.48.camel@localhost>
Message-ID: <20080307125520.GD9899@mithrandi.net>

* Andreas Kostyrka <andreas at kostyrka.org> [2008-03-07 13:44:02 +0100]:

> Actually, on a modern system like Linux, if you fork, the process share
> memory as long it's not written too (Copy-on-Write).

Except that it's basically impossible to read a Python object without
writing to it, as the reference count changes.

> This means, that if you'd fork off your process pool from your
> application, forking should have minimal impact. Even writing it as a
> standalone process means memory usage of one Python interpreter, plus
> minimal usage in the forked processes.

This would only be true for a Python implementation that does not use
reference counting.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080307/c1fc56b3/attachment.pgp 

From big_tyo at inf.its-sby.edu  Fri Mar  7 08:05:25 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Fri, 7 Mar 2008 20:05:25 +0700 (ICT)
Subject: [Twisted-Python] deferred classes
Message-ID: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>

hi can anyone explain to me how
defer.deferredlist,defer.deferredqueue,defer.deferredlock,and
defer.deferredsemaphore works?

an explanation with example will be very much help to me learning twisted

best regard,
raditya


-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------




From p.mayers at imperial.ac.uk  Fri Mar  7 08:36:45 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 13:36:45 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <1204893842.7994.48.camel@localhost>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>
Message-ID: <47D144ED.1000306@imperial.ac.uk>

Andreas Kostyrka wrote:
> Actually, on a modern system like Linux, if you fork, the process share
> memory as long it's not written too (Copy-on-Write).
> 
> This means, that if you'd fork off your process pool from your
> application, forking should have minimal impact. Even writing it as a
> standalone process means memory usage of one Python interpreter, plus
> minimal usage in the forked processes.

If you fork a python interpreter, you should very quickly replace the 
process with exec.

The reason is that if you de-reference something, Python might 
deallocate it in a way that causes the parent process to lose it too 
e.g. send a shut down message on SQL connections.



From mailing_lists at evotex.ch  Fri Mar  7 08:44:54 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 07 Mar 2008 14:44:54 +0100
Subject: [Twisted-Python] trial (unit test) naming convention or obligation?
Message-ID: <47D146D6.8060105@evotex.ch>

Hello,

I am starting to use the trial package and while looking at some 
examples I saw that some methods start with "test_" and some don't, so I 
thought the test cases must start with that, then I noticed in another 
file that camelCase was used, so what would have been "test_basic_op" in 
one file would be "testBasicOp" in another. I just want to be sure as I 
couldn't find any documentation other than "look at the code" (which I 
have), and since I never actually found the parser : if a method starts 
(contains it at the beginning) with the word "test", then the test suite 
will execute it, if not, then it won't, correct?

Thanks,
Gabriel



From jml at mumak.net  Fri Mar  7 08:51:12 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 7 Mar 2008 13:51:12 +0000
Subject: [Twisted-Python] trial (unit test) naming convention or
	obligation?
In-Reply-To: <47D146D6.8060105@evotex.ch>
References: <47D146D6.8060105@evotex.ch>
Message-ID: <d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>

On Fri, Mar 7, 2008 at 1:44 PM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello,
>
>  I am starting to use the trial package and while looking at some
>  examples I saw that some methods start with "test_" and some don't, so I
>  thought the test cases must start with that, then I noticed in another
>  file that camelCase was used, so what would have been "test_basic_op" in
>  one file would be "testBasicOp" in another. I just want to be sure as I
>  couldn't find any documentation other than "look at the code" (which I
>  have), and since I never actually found the parser : if a method starts
>  (contains it at the beginning) with the word "test", then the test suite
>  will execute it, if not, then it won't, correct?
>

The method must begin with 'test' in order to be found as a test by
Trial's test loader. This is the same as what unittest.TestLoader
does.

Twisted's internal convention is that methods intended to be found
dynamically should have the form '<prefix>_<camelCase>'. Sometimes we
are not so good at following our conventions.

jml



From mailing_lists at evotex.ch  Fri Mar  7 09:11:27 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 07 Mar 2008 15:11:27 +0100
Subject: [Twisted-Python] trial (unit test) naming convention
	or	obligation?
In-Reply-To: <d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>
References: <47D146D6.8060105@evotex.ch>
	<d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>
Message-ID: <47D14D0F.1060105@evotex.ch>

Jonathan Lange wrote:
> On Fri, Mar 7, 2008 at 1:44 PM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello,
>>
>>  I am starting to use the trial package and while looking at some
>>  examples I saw that some methods start with "test_" and some don't, so I
>>  thought the test cases must start with that, then I noticed in another
>>  file that camelCase was used, so what would have been "test_basic_op" in
>>  one file would be "testBasicOp" in another. I just want to be sure as I
>>  couldn't find any documentation other than "look at the code" (which I
>>  have), and since I never actually found the parser : if a method starts
>>  (contains it at the beginning) with the word "test", then the test suite
>>  will execute it, if not, then it won't, correct?
>>
>>     
>
> The method must begin with 'test' in order to be found as a test by
> Trial's test loader. This is the same as what unittest.TestLoader
> does.
>
> Twisted's internal convention is that methods intended to be found
> dynamically should have the form '<prefix>_<camelCase>'. Sometimes we
> are not so good at following our conventions.
>
> jml
>
>   
Ok, thank you for the info Jonathan, I'll follow the convention then :-)

Gabriel



From amauryfa at gmail.com  Fri Mar  7 10:10:38 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Fri, 7 Mar 2008 16:10:38 +0100
Subject: [Twisted-Python] deferred classes
In-Reply-To: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>
References: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>
Message-ID: <e27efe130803070710t56232ed5nff9d873bd6b7334a@mail.gmail.com>

Hello,

On Fri, Mar 7, 2008 at 2:05 PM,  <big_tyo at inf.its-sby.edu> wrote:
> hi can anyone explain to me how
>  defer.deferredlist,defer.deferredqueue,defer.deferredlock,and
>  defer.deferredsemaphore works?
>
>  an explanation with example will be very much help to me learning twisted

Deferreds are indeed a key feature in twisted.
First, did you read these two pages?
http://twistedmatrix.com/projects/core/documentation/howto/async.html
http://twistedmatrix.com/projects/core/documentation/howto/defer.html

(In summary: a Deferred is a promise that some result will come. To
get the result, you attach functions to the deferred; they will be
called when the result is available.)

Then the objects you list are easy to explain:
- defer.DeferredList is a deferred, which fires when all embedded
Deferreds have been fired.
- defer.DeferredQueue is a queue whose "get" method returns a Deferred
which fires when data is available.
- Similarly, defer.DeferredLock and defer.DeferredSemaphore are the
usual concurrency primitives, whose "acquire" method returns a
Deferred which fires when the acquisition is done.

Here is an example with DeferredSemaphore and DeferredList.
IMO the beauty of twisted is that the processing of one file is
described in a linear fashion: fetchOneFile() seems to run in
parallel.

===================================================

from twisted.internet import defer, reactor
from twisted.web.client import downloadPage
import os

# list of urls to retrieve
urls = [
    'http://xxx',
    'http://yyy',
    'http://zzz',
    'http://ttt',
]

# Only 2 simultaneous downloads
semaphore = defer.DeferredSemaphore(2)

def fetchOneFile(url):
    # Process one file:
    # - wait to get a a semaphore slot
    # - fetch the url
    # - release the semaphore

    d = semaphore.acquire()

    def fetchData(_):
        print "fetch", url
        return downloadPage(url, os.path.basename(url))
    d.addCallback(fetchData)

    def fetched(result):
        print "fetched", url, result
    d.addBoth(fetched)

    d.addBoth(lambda _:semaphore.release())

    return d


downloads = defer.DeferredList([fetchOneFile(url) for url in urls])
def end(result):
    reactor.stop()
downloads.addBoth(end)
reactor.run()


-- 
Amaury Forgeot d'Arc



From mike at mkp.ca  Fri Mar  7 10:49:40 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Fri, 7 Mar 2008 10:49:40 -0500
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D144ED.1000306@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org> <1204893842.7994.48.camel@localhost>
	<47D144ED.1000306@imperial.ac.uk>
Message-ID: <273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>

On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>  If you fork a python interpreter, you should very quickly replace the
>  process with exec.

Does fork+exec have any advantages over spawn?

Mike.



From ilochab at gmail.com  Fri Mar  7 11:13:41 2008
From: ilochab at gmail.com (IloChab)
Date: Fri, 7 Mar 2008 17:13:41 +0100
Subject: [Twisted-Python] Choosing a logging system.
Message-ID: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>

I'm almost new with twisted and I'm going to implement a new application
that will use Perspective Broker.

I'll need logging facilities like python's logging module, in particular
filtering functions and one logging server per node.
I thought I could use twisted log-observers, but I saw i can't use socket
into them.

So my questions are:
> can I use python logging module into a twisted application?
> can I use socket that I handle by my self into a twisted application?

Thak you in advnce for any answer.

Ciao
Licia.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080307/ecf495e6/attachment.htm 

From therve at free.fr  Fri Mar  7 11:38:20 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 07 Mar 2008 17:38:20 +0100
Subject: [Twisted-Python] Choosing a logging system.
In-Reply-To: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>
References: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>
Message-ID: <20080307173820.xyfz73vycksg8gcg@wasabox.wasabout.net>

Quoting IloChab <ilochab at gmail.com>:

> I'm almost new with twisted and I'm going to implement a new application
> that will use Perspective Broker.
>
> I'll need logging facilities like python's logging module, in particular
> filtering functions and one logging server per node.
> I thought I could use twisted log-observers, but I saw i can't use socket
> into them.

Why? It may be a bit tricky, and it currently doesn't exist, but  
there's no immediate problem with doing that (without thinking about  
it much, though).

> So my questions are:
> can I use python logging module into a twisted application?

Yes, there's a PythonLoggingObserver (only in trunk) to do that.

> can I use socket that I handle by my self into a twisted application?

If you mean using the logging socket handler, no you can't do that,  
because it's blocking.

-- 
Thomas





From p.mayers at imperial.ac.uk  Fri Mar  7 13:30:46 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 18:30:46 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>
	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
Message-ID: <47D189D6.6040206@imperial.ac.uk>

Mike Pelletier wrote:
> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>  If you fork a python interpreter, you should very quickly replace the
>>  process with exec.
> 
> Does fork+exec have any advantages over spawn?

If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
exec, so no - they're identical.

I don't think there's a native unix syscall "spawn".

Seems I recall there is something in the MS VC runtime named similar.

Anyway - if we're talking about Twisted, you want to use the Twisted 
support - reactor.spawnProcess and a subclass of t.i.p.ProcessProtocol 
to talk to the child worker.

reactor.spawnProcess does the right thing(tm)



From p.mayers at imperial.ac.uk  Fri Mar  7 13:35:06 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 18:35:06 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D189D6.6040206@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>
	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
	<47D189D6.6040206@imperial.ac.uk>
Message-ID: <47D18ADA.7050904@imperial.ac.uk>

Phil Mayers wrote:
> Mike Pelletier wrote:
>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>> wrote:
>>>  If you fork a python interpreter, you should very quickly replace the
>>>  process with exec.
>>
>> Does fork+exec have any advantages over spawn?
> 
> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
> exec, so no - they're identical.

Sorry - to reply to myself and try to be more clear:

In almost all circumstances, regardless of whether you're using Twisted 
or not, fork'ing a python interpreter and leaving both parent and child 
running off the same memory image for any length of time is unwise.

In that respect, os.spawnXX == fork/exec and is thus fine. However...

> 
> I don't think there's a native unix syscall "spawn".
> 
> Seems I recall there is something in the MS VC runtime named similar.
> 
> Anyway - if we're talking about Twisted, you want to use the Twisted 
> support - reactor.spawnProcess and a subclass of t.i.p.ProcessProtocol 
> to talk to the child worker.
> 
> reactor.spawnProcess does the right thing(tm)

In almost all circumstances when using Twisted, you should use 
reactor.spawnProcess or one of the util functions t.i.utils.getProcess*



From manlio_perillo at libero.it  Sat Mar  8 04:36:49 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 08 Mar 2008 10:36:49 +0100
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D189D6.6040206@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
	<47D189D6.6040206@imperial.ac.uk>
Message-ID: <47D25E31.7020609@libero.it>

Phil Mayers ha scritto:
> Mike Pelletier wrote:
>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>> wrote:
>>>  If you fork a python interpreter, you should very quickly replace the
>>>  process with exec.
>>
>> Does fork+exec have any advantages over spawn?
> 
> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
> exec, so no - they're identical.
> 
> I don't think there's a native unix syscall "spawn".
> 

http://www.opengroup.org/onlinepubs/009695399/functions/posix_spawn.html

Note that the page may require registration to be viewed.


 > [...]


Manlio Perillo



From p.mayers at imperial.ac.uk  Sat Mar  8 06:04:34 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 08 Mar 2008 11:04:34 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D25E31.7020609@libero.it>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>	<47D189D6.6040206@imperial.ac.uk>
	<47D25E31.7020609@libero.it>
Message-ID: <47D272C2.7070904@imperial.ac.uk>

Manlio Perillo wrote:
> Phil Mayers ha scritto:
>> Mike Pelletier wrote:
>>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>>> wrote:
>>>>  If you fork a python interpreter, you should very quickly replace the
>>>>  process with exec.
>>>
>>> Does fork+exec have any advantages over spawn?
>>
>> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
>> exec, so no - they're identical.
>>
>> I don't think there's a native unix syscall "spawn".
>>
> 
> http://www.opengroup.org/onlinepubs/009695399/functions/posix_spawn.html

I said "unix" not "posix extenisions for MMU-less realtime/embedded 
systems"



From therve at free.fr  Sat Mar  8 15:26:14 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Sat, 08 Mar 2008 21:26:14 +0100
Subject: [Twisted-Python] Announcing twotp 0.1,
	the Twisted implementation of the Erlang node protocol
Message-ID: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>

Hello all,

Some weeks ago [1], I announced a project of mine that was  
implementing the Erlang node protocol with Twisted. After a little bit  
of feedback and motivation (thanks  Anders Rune Jensen!), I've decided  
to create a project on its own called Twotp.

For now, it's hosted on launchpad: https://launchpad.net/twotp, and  
I've made a quick 0.1 release, also available on the cheeseshop (so  
'easy_install twotp' should to the right thing).

I have already some features in the pipe (set and dict support, a  
simple twistd plugin), so I'll probably make another release real soon  
now. I also wanted to announce it before Pycon, so that people can  
talk to me about it there :).

Again, every feedback, questions, bugs, are more than welcome. Using  
this list is probably OK for now, until we talk too much and get  
kicked out :).

Thanks for your attention,

-- 
Thomas

[1]:  
http://twistedmatrix.com/pipermail/twisted-python/2007-December/016504.html




From exarkun at twistedmatrix.com  Sun Mar  9 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Mar 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1205039107.23.995150851@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080309/22a41cad/attachment.htm 

From stefan.arentz at gmail.com  Sun Mar  9 06:46:34 2008
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sun, 9 Mar 2008 11:46:34 +0100
Subject: [Twisted-Python] Twisted Amazon Web Service module?
In-Reply-To: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
References: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
Message-ID: <adf34c300803090346k4b4c1949neb0dc3937c23edb7@mail.gmail.com>

I just released by SimpleDB code ...

  http://stefan.arentz.nl/2008/03/08/twisted-amazon-simpledb/

It also contains code for S3 and SQS but that is work in progress.

Feedback appreciated!

 S.

On Wed, Feb 27, 2008 at 7:32 AM, Don Smith <donwsmith at gmail.com> wrote:
> Has anyone built a Twisted module for use with any of Amazon's web service
> components? Specifically SimpleDB and SQS?
>
> I've looked at boto, which is really cool, but not Twisted...
>
> Regards,
>
> Don
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From roland.hedberg at adm.umu.se  Sun Mar  9 11:10:24 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sun, 09 Mar 2008 16:10:24 +0100
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
Message-ID: <47D3FDE0.6060000@adm.umu.se>

Hi!

It seems like the HTTP client in Twisted handles HTTPS and easily as
HTTP connections.

But, I can not find any place where I can specify a client certificate
to use in the HTTPS connection.

Is there something I have overlooked or is there another solution I can
 use, because I need to have certificates on both the server and the
client side.

-- Roland



From drew.smathers at gmail.com  Sun Mar  9 11:47:09 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sun, 9 Mar 2008 11:47:09 -0400
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
In-Reply-To: <47D3FDE0.6060000@adm.umu.se>
References: <47D3FDE0.6060000@adm.umu.se>
Message-ID: <368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>

On Sun, Mar 9, 2008 at 11:10 AM, Roland Hedberg
<roland.hedberg at adm.umu.se> wrote:
> Hi!
>
>  It seems like the HTTP client in Twisted handles HTTPS and easily as
>  HTTP connections.
>
>  But, I can not find any place where I can specify a client certificate
>  to use in the HTTPS connection.
>
>  Is there something I have overlooked or is there another solution I can
>   use, because I need to have certificates on both the server and the
>  client side.
>
>  -- Roland
>

You need to pass a ContextFactory which provides the client certificate:

  reactor.connectSSL(host, port, factory, contextFactory)

web.client.getPage, for example, takes a contextFactory as a keyword argument.
One way to create the context factory, with the key and certificate
stored in files:

   clientCtxFactory = ssl.DefaultOpenSSLContextFactory(keyPath, certPath)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From roland.hedberg at adm.umu.se  Sun Mar  9 14:06:16 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sun, 09 Mar 2008 19:06:16 +0100
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
In-Reply-To: <368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>
References: <47D3FDE0.6060000@adm.umu.se>
	<368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>
Message-ID: <47D42718.7080404@adm.umu.se>

Drew Smathers wrote:
> On Sun, Mar 9, 2008 at 11:10 AM, Roland Hedberg
> <roland.hedberg at adm.umu.se> wrote:
>> Hi!
>>
>>  It seems like the HTTP client in Twisted handles HTTPS and easily as
>>  HTTP connections.
>>
>>  But, I can not find any place where I can specify a client certificate
>>  to use in the HTTPS connection.
>>
>>  Is there something I have overlooked or is there another solution I can
>>   use, because I need to have certificates on both the server and the
>>  client side.
>>
>>  -- Roland
>>
> 
> You need to pass a ContextFactory which provides the client certificate:
> 
>   reactor.connectSSL(host, port, factory, contextFactory)
> 
> web.client.getPage, for example, takes a contextFactory as a keyword argument.

OK, that was simple :-)
Thanks !

-- Roland



From glenn at tarbox.org  Sun Mar  9 20:57:34 2008
From: glenn at tarbox.org (Glenn Tarbox, PhD)
Date: Sun, 9 Mar 2008 17:57:34 -0700
Subject: [Twisted-Python] Shiny new Qt4 Reactor
Message-ID: <f049b35c0803091757p2c048ecfka057b83f2b33bf14@mail.gmail.com>

A very much refactored version of the Qt4 reactor is available.  Not up to
100% just yet but very usable and more aligned with the Qt design approach.

http://code.tarbox.org/qtreactor

-glenn

-- 
Glenn H. Tarbox, PhD
glenn at tarbox.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080309/e86a8faf/attachment.htm 

From theatilla at gmail.com  Mon Mar 10 08:17:00 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 10 Mar 2008 13:17:00 +0100
Subject: [Twisted-Python] xml library in twisted
In-Reply-To: <315768.27988.qm@web8701.mail.in.yahoo.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
Message-ID: <b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>

On 04/03/2008, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
> Hi all,
> I'm dealing with xml files in a twisted application,
> can any one suggest me the best xml library in twisted?
> Previously i used  twisted.web.microdom and twisted.web.minidom but they
> don't have much of the functionalities....
> Is there any other xml library in twisted which makes it easy with lot of
> options?
> I wanted to create a xml file like this...
>
> <game>
>     <player1>
>            <stuff>
>            </stuff>
>     </player1>
>     <player2>
>            <stuff>
>            </stuff>
>     </player2>
> </game>
>
> and want to access that player stuff directly..(like a tree structure)
>
> Thank you in advance.


If you need powerful interfaces you could take a look at libxml, with
the lxml python bindings. Check http://codespeak.net/lxml/ .



From theatilla at gmail.com  Mon Mar 10 08:31:06 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 10 Mar 2008 13:31:06 +0100
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
Message-ID: <b53c932d0803100531u2b91453bx1bff82f3abee112f@mail.gmail.com>

>  <time has passed until server decides it needs to send a plugin to one
>  of the clients>
>  Server sends plugin to Client 1

"until server decides" is your 'event' here, not anything initiated by
the client.

The way I see your issue here is that you seem to believe that only
client actions raise events in your application, which is not really
the case. Any part of your application might be responsible for an
event on which you have to act by sending data to the client. In that
case, when a client connects and your factory instantiates an instance
of the protocol ( a new client connection), you should keep a
reference to that instance in a way depending on your application
needs. Through this reference you can send data to your clients at any
point in time, corresponding to events raised from another part of
your application.

For example - I've a simple notification service on which a number of
clients connect and subscribe for events for specific users. I keep a
mapping of every connected client and its subscriptions in my
application code. In my case, the events are raised through a second
protocol that informs my server for every user action, then I send
packets to the connected clients, based on the mappings. But the
actual cause of your events can be anything you like - other network
sources, database, anything you need to code.

Basically - your protocol class is responsible only for how data is
transferred to and from the client. Your application logic should be
defined at a higher level, through your factory and service classes. A
single service might be communicating with clients trough different
protocols.

I hope that clear is up somewhat.  The examples for the finger server
in twisted's documentation might give you a good idea of how things
work - they're structured nicely over a few chapters to evolve a dumb
server into a useful full-fledged application. Also - the IRC
server/client examples can give you a good idea of how you send data
to a connected client, based on an event created from another source.



From vvangelovski at gmail.com  Mon Mar 10 11:14:54 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 10 Mar 2008 16:14:54 +0100
Subject: [Twisted-Python] parsing url query parameters and values
Message-ID: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>

Is there any method in the Twisted or Twisted web api I can use to
parse url query parameters and values. This isn't a very naive
algorithm since there are more complicated query strings that can be
constructed, for example:
http://www.example.com/path?param1=val1&param2=val2&&param3=val3
http://www.example.com/path?param1=val1&param2=val2&som=|=val&param3=val3
Ideally I could use something that bulds a dictionary of parameters and values



From exarkun at divmod.com  Mon Mar 10 11:33:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 10 Mar 2008 10:33:17 -0500
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
Message-ID: <20080310153317.6859.237087890.divmod.quotient.17738@ohm>

On Mon, 10 Mar 2008 16:14:54 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>Is there any method in the Twisted or Twisted web api I can use to
>parse url query parameters and values. This isn't a very naive
>algorithm since there are more complicated query strings that can be
>constructed, for example:
>http://www.example.com/path?param1=val1&param2=val2&&param3=val3
>http://www.example.com/path?param1=val1&param2=val2&som=|=val&param3=val3
>Ideally I could use something that bulds a dictionary of parameters and values

See the stdlib APIs urlparse.urlparse and cgi.parse_qs.

Jean-Paul



From ellisonbg.net at gmail.com  Mon Mar 10 16:17:18 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 10 Mar 2008 14:17:18 -0600
Subject: [Twisted-Python] Announcing twotp 0.1,
	the Twisted implementation of the Erlang node protocol
In-Reply-To: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>
References: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>
Message-ID: <6ce0ac130803101317w3caf9318nfde5f27ef3558496@mail.gmail.com>

Thomas,

I played around with the code in your sandbox a few weeks ago.  This
is _truly fantastic_ that you are pushing this forward.  We have been
considering using Erlang for parts of ipython (optionally) and this
will really help.

Brian

On Sat, Mar 8, 2008 at 2:26 PM, Thomas Herv? <therve at free.fr> wrote:
> Hello all,
>
>  Some weeks ago [1], I announced a project of mine that was
>  implementing the Erlang node protocol with Twisted. After a little bit
>  of feedback and motivation (thanks  Anders Rune Jensen!), I've decided
>  to create a project on its own called Twotp.
>
>  For now, it's hosted on launchpad: https://launchpad.net/twotp, and
>  I've made a quick 0.1 release, also available on the cheeseshop (so
>  'easy_install twotp' should to the right thing).
>
>  I have already some features in the pipe (set and dict support, a
>  simple twistd plugin), so I'll probably make another release real soon
>  now. I also wanted to announce it before Pycon, so that people can
>  talk to me about it there :).
>
>  Again, every feedback, questions, bugs, are more than welcome. Using
>  this list is probably OK for now, until we talk too much and get
>  kicked out :).
>
>  Thanks for your attention,
>
>  --
>  Thomas
>
>  [1]:
>  http://twistedmatrix.com/pipermail/twisted-python/2007-December/016504.html
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From daedalus at eigenmagic.com  Mon Mar 10 21:26:50 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 11 Mar 2008 12:26:50 +1100
Subject: [Twisted-Python] xml library in twisted
In-Reply-To: <b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
	<b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>
Message-ID: <1205198810.8924.20.camel@localhost>

On Mon, 2008-03-10 at 13:17 +0100, Atilla wrote:
> On 04/03/2008, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
> >
> > Hi all,
> > I'm dealing with xml files in a twisted application,
> > can any one suggest me the best xml library in twisted?
> > Previously i used  twisted.web.microdom and twisted.web.minidom but they
> > don't have much of the functionalities....
> > Is there any other xml library in twisted which makes it easy with lot of
> > options?
> > I wanted to create a xml file like this...
> >
> > <game>
> >     <player1>
> >            <stuff>
> >            </stuff>
> >     </player1>
> >     <player2>
> >            <stuff>
> >            </stuff>
> >     </player2>
> > </game>
> >
> > and want to access that player stuff directly..(like a tree structure)
> >
> > Thank you in advance.
> 
> 
> If you need powerful interfaces you could take a look at libxml, with
> the lxml python bindings. Check http://codespeak.net/lxml/ .

I second the use of lxml. The ability to mix Pythonic object handling
with a fairly complete XPATH implementation is powerful indeed.

-- 
Justin Warren <daedalus at eigenmagic.com>



From mailing_lists at evotex.ch  Tue Mar 11 07:24:23 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 12:24:23 +0100
Subject: [Twisted-Python] mutex in twisted?
Message-ID: <47D66BE7.4050603@evotex.ch>

Hello,

Is there some sort of mutex/semaphore code that can be used in twisted? 
I need to run an external subprocess from twisted when I get some data 
from a client and I'd like to make sure that while one client's data 
spawned the process to run, some other client will not do the same at 
the same time, thus my need for a mutex. Maybe there is another way to 
do this in a more twisted sort of way (pun not intended)? If so I'd love 
to hear how!

Thanks,
Gabriel



From mailing_lists at evotex.ch  Tue Mar 11 07:31:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 12:31:46 +0100
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D66BE7.4050603@evotex.ch>
References: <47D66BE7.4050603@evotex.ch>
Message-ID: <47D66DA2.2050209@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> Is there some sort of mutex/semaphore code that can be used in 
> twisted? I need to run an external subprocess from twisted when I get 
> some data from a client and I'd like to make sure that while one 
> client's data spawned the process to run, some other client will not 
> do the same at the same time, thus my need for a mutex. Maybe there is 
> another way to do this in a more twisted sort of way (pun not 
> intended)? If so I'd love to hear how!
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Oh, I forgot to say, I use this for the process :

subprocess.call(["festival", "--tts", filename])

I'm not sure if it is useful for anyone, but I just saw that Twisted has 
some sort of process code too, though it looks a bit complicated for my 
needs.

Gabriel



From p.mayers at imperial.ac.uk  Tue Mar 11 07:49:03 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 11 Mar 2008 11:49:03 +0000
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D66DA2.2050209@evotex.ch>
References: <47D66BE7.4050603@evotex.ch> <47D66DA2.2050209@evotex.ch>
Message-ID: <47D671AF.1010604@imperial.ac.uk>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> Is there some sort of mutex/semaphore code that can be used in 
>> twisted? I need to run an external subprocess from twisted when I get 
>> some data from a client and I'd like to make sure that while one 
>> client's data spawned the process to run, some other client will not 
>> do the same at the same time, thus my need for a mutex. Maybe there is 
>> another way to do this in a more twisted sort of way (pun not 
>> intended)? If so I'd love to hear how!
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Oh, I forgot to say, I use this for the process :
> 
> subprocess.call(["festival", "--tts", filename])

You can't do that. The python "subprocess" module is blocking, and yuo 
will block the reactor and stop Twisted running.

> 
> I'm not sure if it is useful for anyone, but I just saw that Twisted has 
> some sort of process code too, though it looks a bit complicated for my 
> needs.

You need to use it.

You can use:

twisted.internet.utils.getProcessOutputAndValue

...if you want to just run a simple command

As for mutex - since Twisted isn't multithreaded, you can just use a 
flag variable.



From maarten at treewalker.org  Tue Mar 11 08:26:27 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 11 Mar 2008 13:26:27 +0100
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
References: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
Message-ID: <200803111326.32695.maarten@treewalker.org>

On Monday 10 March 2008, Vasil Vangelovski wrote:
> Is there any method in the Twisted or Twisted web api I can use to
> parse url query parameters and values.

If the query is part of a request being handled by twisted.web, you can 
simply use "Request.args".

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080311/0579b7a4/attachment.pgp 

From vvangelovski at gmail.com  Tue Mar 11 08:45:43 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 11 Mar 2008 13:45:43 +0100
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <200803111326.32695.maarten@treewalker.org>
References: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
	<200803111326.32695.maarten@treewalker.org>
Message-ID: <406b9fda0803110545m12a53d4eo4544350b61a7edbd@mail.gmail.com>

Thanx alot.
What I was looking for was cgi.parse_qs.
I need that processing for a layer that is not connected to twisted.

On Tue, Mar 11, 2008 at 1:26 PM, Maarten ter Huurne
<maarten at treewalker.org> wrote:
> On Monday 10 March 2008, Vasil Vangelovski wrote:
>  > Is there any method in the Twisted or Twisted web api I can use to
>  > parse url query parameters and values.
>
>  If the query is part of a request being handled by twisted.web, you can
>  simply use "Request.args".
>
>  Bye,
>                 Maarten
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From mailing_lists at evotex.ch  Tue Mar 11 09:15:47 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 14:15:47 +0100
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D671AF.1010604@imperial.ac.uk>
References: <47D66BE7.4050603@evotex.ch> <47D66DA2.2050209@evotex.ch>
	<47D671AF.1010604@imperial.ac.uk>
Message-ID: <47D68603.4070905@evotex.ch>

Phil Mayers wrote:
> Gabriel Rossetti wrote:
>> Gabriel Rossetti wrote:
>>> Hello,
>>>
>>> Is there some sort of mutex/semaphore code that can be used in 
>>> twisted? I need to run an external subprocess from twisted when I 
>>> get some data from a client and I'd like to make sure that while one 
>>> client's data spawned the process to run, some other client will not 
>>> do the same at the same time, thus my need for a mutex. Maybe there 
>>> is another way to do this in a more twisted sort of way (pun not 
>>> intended)? If so I'd love to hear how!
>>>
>>> Thanks,
>>> Gabriel
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> Oh, I forgot to say, I use this for the process :
>>
>> subprocess.call(["festival", "--tts", filename])
>
> You can't do that. The python "subprocess" module is blocking, and yuo 
> will block the reactor and stop Twisted running.
>
Ok
>>
>> I'm not sure if it is useful for anyone, but I just saw that Twisted 
>> has some sort of process code too, though it looks a bit complicated 
>> for my needs.
>
> You need to use it.
>
> You can use:
>
> twisted.internet.utils.getProcessOutputAndValue
>
> ...if you want to just run a simple command
>
Ok, yes, that is all I need to do, run a simple command.
> As for mutex - since Twisted isn't multithreaded, you can just use a 
> flag variable.
>
Ok, cool, thanks a lot for your help,
Gabriel



From josef.robert.novak at gmail.com  Tue Mar 11 21:04:52 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Wed, 12 Mar 2008 10:04:52 +0900
Subject: [Twisted-Python] question about deferred lists tutorial description
Message-ID: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>

Hi,
 I have been using twisted intermittently for a couple of months, but
still don't feel like I have a good intuitive understanding of how to
get things done quickly, and efficiently with the framework.  Thus
I've been revisiting the tutorial documents and resolved to go through
them with a fine-toothed comb in an effort to really get my noggin
around things.
 In the deffered discussion:
http://twistedmatrix.com/projects/core/documentation/howto/defer.html

 there is a section about defer.DeferredList, which contains code
examples and a subsequent note which -seems- to contradict the code
above it:

------------begin code from tutorial----------
The callback will be called with a list of the results of the
Deferreds it contains, like so:

def printResult(result):
    print result
deferred1 = defer.Deferred()
deferred2 = defer.Deferred()
deferred3 = defer.Deferred()
dl = defer.DeferredList([deferred1, deferred2, deferred3])
dl.addCallback(printResult)
deferred1.callback('one')
deferred2.errback('bang!')
deferred3.callback('three')
# At this point, dl will fire its callback, printing:
#     [(1, 'one'), (0, 'bang!'), (1, 'three')]
# (note that defer.SUCCESS == 1, and defer.FAILURE == 0)
------------end code from tutorial----------

Ok, so far, so good.  You can build a series of deferreds, stick them
in a DeferredList, add a callback to the list, *subsequently* add some
callbacks/errbacks to the individual deferreds in the DeferredList,
fire things up, and have the results of the *subsequently added*
callbacks/errbacks sent to the DeferredList callback and printed out.

However, the following Note regarding callbacks for DeferredList
objects seems to contradict the promised results of the above
codeblock, stating that:

"""If you want to apply callbacks to the individual Deferreds that go
into the DeferredList, you should be careful about when those
callbacks are added. The act of adding a Deferred to a DeferredList
inserts a callback into that Deferred (when that callback is run, it
checks to see if the DeferredList has been completed yet). The
important thing to remember is that it is this callback which records
the value that goes into the result list handed to the DeferredList's
callback.

Therefore, if you add a callback to the Deferred after adding the
Deferred to the DeferredList, the value returned by that callback will
not be given to the DeferredList's callback. To avoid confusion, we
recommend not adding callbacks to a Deferred once it has been used in
a DeferredList."""

Ok, so in fact, any callbacks/errbacks I need to add to deferreds
which will be added to a DeferredList object, need to be added Prior
to my adding the individual deferreds to the DeferredList object.  Or
so it would appear to my limited understanding.

I would greatly appreciate it if someone could resolve this apparent
contradiction for me, or if it is a mistake in the documentation,
please point out which one of the code block or the note is actually
correct.

Cheers!



From josef.robert.novak at gmail.com  Tue Mar 11 21:11:28 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Wed, 12 Mar 2008 10:11:28 +0900
Subject: [Twisted-Python] Re: question about deferred lists tutorial
	description
In-Reply-To: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
References: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
Message-ID: <710ff8630803111811w4b42577fw3dfcdc6e11abaa94@mail.gmail.com>

Apologies for the previous premature email; it seems I cannot read.
The apparent contradiction I mentioned was the result of my conflating
'callback' with 'addCallback'.  However, I guess I'd still appreciate
some discussion on the nuances of these two functions.

Cheers

2008/3/12, Josef Novak <josef.robert.novak at gmail.com>:
> Hi,
>   I have been using twisted intermittently for a couple of months, but
>  still don't feel like I have a good intuitive understanding of how to
>  get things done quickly, and efficiently with the framework.  Thus
>  I've been revisiting the tutorial documents and resolved to go through
>  them with a fine-toothed comb in an effort to really get my noggin
>  around things.
>   In the deffered discussion:
>  http://twistedmatrix.com/projects/core/documentation/howto/defer.html
>
>   there is a section about defer.DeferredList, which contains code
>  examples and a subsequent note which -seems- to contradict the code
>  above it:
>
>  ------------begin code from tutorial----------
>  The callback will be called with a list of the results of the
>  Deferreds it contains, like so:
>
>  def printResult(result):
>     print result
>  deferred1 = defer.Deferred()
>  deferred2 = defer.Deferred()
>  deferred3 = defer.Deferred()
>  dl = defer.DeferredList([deferred1, deferred2, deferred3])
>  dl.addCallback(printResult)
>  deferred1.callback('one')
>  deferred2.errback('bang!')
>  deferred3.callback('three')
>  # At this point, dl will fire its callback, printing:
>  #     [(1, 'one'), (0, 'bang!'), (1, 'three')]
>  # (note that defer.SUCCESS == 1, and defer.FAILURE == 0)
>  ------------end code from tutorial----------
>
>  Ok, so far, so good.  You can build a series of deferreds, stick them
>  in a DeferredList, add a callback to the list, *subsequently* add some
>  callbacks/errbacks to the individual deferreds in the DeferredList,
>  fire things up, and have the results of the *subsequently added*
>  callbacks/errbacks sent to the DeferredList callback and printed out.
>
>  However, the following Note regarding callbacks for DeferredList
>  objects seems to contradict the promised results of the above
>  codeblock, stating that:
>
>  """If you want to apply callbacks to the individual Deferreds that go
>  into the DeferredList, you should be careful about when those
>  callbacks are added. The act of adding a Deferred to a DeferredList
>  inserts a callback into that Deferred (when that callback is run, it
>  checks to see if the DeferredList has been completed yet). The
>  important thing to remember is that it is this callback which records
>  the value that goes into the result list handed to the DeferredList's
>  callback.
>
>  Therefore, if you add a callback to the Deferred after adding the
>  Deferred to the DeferredList, the value returned by that callback will
>  not be given to the DeferredList's callback. To avoid confusion, we
>  recommend not adding callbacks to a Deferred once it has been used in
>  a DeferredList."""
>
>  Ok, so in fact, any callbacks/errbacks I need to add to deferreds
>  which will be added to a DeferredList object, need to be added Prior
>  to my adding the individual deferreds to the DeferredList object.  Or
>  so it would appear to my limited understanding.
>
>  I would greatly appreciate it if someone could resolve this apparent
>  contradiction for me, or if it is a mistake in the documentation,
>  please point out which one of the code block or the note is actually
>  correct.
>
>  Cheers!
>



From terry at jon.es  Tue Mar 11 21:31:57 2008
From: terry at jon.es (Terry Jones)
Date: Wed, 12 Mar 2008 02:31:57 +0100
Subject: [Twisted-Python] Re: question about deferred lists tutorial
	description
In-Reply-To: Your message at 10:11:28 on Wednesday, 12 March 2008
References: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
	<710ff8630803111811w4b42577fw3dfcdc6e11abaa94@mail.gmail.com>
Message-ID: <18391.12941.304078.275591@terry.local>

Hi Josef

> Apologies for the previous premature email; it seems I cannot read. 

:-)

> The apparent contradiction I mentioned was the result of my conflating
> 'callback' with 'addCallback'.

Right.

> However, I guess I'd still appreciate some discussion on the nuances of
> these two functions.

It's just a trivial non-real-world example. The use of callback is to
supply a return value, which is passed to the function added with
addCallback (and similarly with errback).  In a non-trivial example, some
other code (associated with the function that returned the deferred) would
be what called callback (or errback). The example just shows all the code
in one place.  Does that make sense?

Terry



From chris at sidwells.com  Wed Mar 12 04:04:21 2008
From: chris at sidwells.com (Chris Dew)
Date: Wed, 12 Mar 2008 08:04:21 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
Message-ID: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>

I have a small script which answers dns queries by returning the original
message.  I have spent a couple of hours RTFMing, but I still cannot find
out how to correctly add answers to the message, before returning it.

I want to add an answer, either a Record_CNAME or Record_A, so as to produce
a trivial authoritative-only DNS server.

Adding a Record_XXX object to message.answers using the Array's 'append'
method produces a MalformedPacket (according to wireshark), though the
server does not throw any exceptions.   (In this situation, the answer
count, as shown by dig, does rise to 1, even though no answer is displayed
[due to malformed packet?].)

Perhaps there is a completely different way to do this?  Could I craft a
message with answers from scratch?

Any help appreciated,

Chris.


#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # tried all sorts of things here
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080312/dd0c9a82/attachment.htm 

From exarkun at divmod.com  Wed Mar 12 09:30:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Mar 2008 08:30:00 -0500
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>
Message-ID: <20080312133000.6859.1007360226.divmod.quotient.18377@ohm>

On Wed, 12 Mar 2008 08:04:21 +0000, Chris Dew <chris at sidwells.com> wrote:
>I have a small script which answers dns queries by returning the original
>message.  I have spent a couple of hours RTFMing, but I still cannot find
>out how to correctly add answers to the message, before returning it.
>
>I want to add an answer, either a Record_CNAME or Record_A, so as to produce
>a trivial authoritative-only DNS server.
>
>Adding a Record_XXX object to message.answers using the Array's 'append'
>method produces a MalformedPacket (according to wireshark), though the
>server does not throw any exceptions.   (In this situation, the answer
>count, as shown by dig, does rise to 1, even though no answer is displayed
>[due to malformed packet?].)
>
>Perhaps there is a completely different way to do this?  Could I craft a
>message with answers from scratch?

Did you set `m.answer? to 1?

Jean-Paul



From chris at sidwells.com  Thu Mar 13 03:52:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Thu, 13 Mar 2008 07:52:24 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <20080312133000.6859.1007360226.divmod.quotient.18377@ohm>
References: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>
	<20080312133000.6859.1007360226.divmod.quotient.18377@ohm>
Message-ID: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>

Thanks for your reply.  I have tried setting answer to 1.  I have included
an amended version of my programme at the end of this email.

When I run this, the server reports no error.  When I  'dig @localhost
foo.bar' I get the response:

"""
;; Warning: Message parser reports malformed message packet.

; <<>> DiG 9.4.1 <<>> @localhost foo.bar
; (1 server found)
;; global options:  printcmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 18948
;; flags: qr rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available
;; WARNING: Messages has 4 extra bytes at end

;; QUESTION SECTION:
;foo.bar.                       IN      A

;; Query time: 1 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Mar 13 07:37:50 2008
;; MSG SIZE  rcvd: 29
"""

Wireshark also shows the reply packet to be malformed:

0000  00 00 00 00 00 00 00 00  00 00 00 00 08 00 45 00   ........ ......E.
0010  00 39 00 00 40 00 40 11  3c b2 7f 00 00 01 7f 00   .9.. at .@. <.......
0020  00 01 00 35 82 43 00 25  fe 38 51 cf 81 00 00 01   ...5.C.% .8Q.....
0030  00 01 00 00 00 00 03 66  6f 6f 03 62 61 72 00 00   .......f oo.bar..
0040  01 00 01 0a 0b 0c 0d

You  can see the 10.11.12.13 at the end (hex), but something about the
packet is wrong.

Could you point out my mistake?  If it's a bug in twisted.names, I'm happy
to look at fixing it (I've worked with the dns protocol at packet level
before), but I first want to make sure that I am using the API correctly.

Thanks,

Chris.





#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # this should always answer 10.11.12.13, regardless of the query
        m.answer = 1
        m.answers.append(Record_A(address="10.11.12.13"))
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()








On 12/03/2008, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Wed, 12 Mar 2008 08:04:21 +0000, Chris Dew <chris at sidwells.com> wrote:
> >I have a small script which answers dns queries by returning the original
> >message.  I have spent a couple of hours RTFMing, but I still cannot find
> >out how to correctly add answers to the message, before returning it.
> >
> >I want to add an answer, either a Record_CNAME or Record_A, so as to
> produce
> >a trivial authoritative-only DNS server.
> >
> >Adding a Record_XXX object to message.answers using the Array's 'append'
> >method produces a MalformedPacket (according to wireshark), though the
> >server does not throw any exceptions.   (In this situation, the answer
> >count, as shown by dig, does rise to 1, even though no answer is
> displayed
> >[due to malformed packet?].)
> >
> >Perhaps there is a completely different way to do this?  Could I craft a
> >message with answers from scratch?
>
>
> Did you set `m.answer? to 1?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080313/84fc4c67/attachment.htm 

From exarkun at divmod.com  Thu Mar 13 10:48:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 13 Mar 2008 09:48:05 -0500
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>
Message-ID: <20080313144805.6859.1998745914.divmod.quotient.18749@ohm>

On Thu, 13 Mar 2008 07:52:24 +0000, Chris Dew <chris at sidwells.com> wrote:
>Thanks for your reply.  I have tried setting answer to 1.  I have included
>an amended version of my programme at the end of this email.
>
>When I run this, the server reports no error.  When I  'dig @localhost
>foo.bar' I get the response:
>
> [snip]
>
>Could you point out my mistake?  If it's a bug in twisted.names, I'm happy
>to look at fixing it (I've worked with the dns protocol at packet level
>before), but I first want to make sure that I am using the API correctly.

See below.  I think it's a documentation deficiency, but probably not a
bug in the code.

> [snip]
>
>#!/usr/bin/python
>
>from twisted.internet.protocol import Protocol, Factory
>from twisted.internet import reactor
>from twisted.names.server import DNSServerFactory
>from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
>Record_CNAME, Record_A, Message
>from twisted.names import dns
>from twisted.internet.interfaces import IAddress
>
>class Controller(object):
>    def messageReceived(self, m, protocol, addr):
>        print m, dir(m), m.queries, m.answers
>        # this should always answer 10.11.12.13, regardless of the query
>        m.answer = 1
>        m.answers.append(Record_A(address="10.11.12.13"))
>        protocol.transport.write(m.toStr(), addr)

Answers should be a list of RRHeaders, not bare Record_As.

>
>controller = Controller()
>
>if __name__ == "__main__":
>    reactor.listenUDP(53, DNSDatagramProtocol(controller))
>    reactor.run()
>

Jean-Paul



From itoral at igalia.com  Thu Mar 13 14:24:49 2008
From: itoral at igalia.com (Iago Toral)
Date: Thu, 13 Mar 2008 19:24:49 +0100
Subject: [Twisted-Python] Help with BananaError
Message-ID: <1205432689.16886.52.camel@localhost>

Hi all,

I'm working on the gnome build brigade (http://build.gnome.org/) using
Buildbot, which is a continuous integration tool based on Twisted.

I have several Twisted services (buildbot masters) running behind a
firewall (say ports 8001, 8002, mand 8003) and only one opened port for
external connections (say 9000). 

I'm writting a small Twisted tool to allow me to use these services
which port is not open directly for external connections through that
opened port to other external Twisted clients (buildbot slaves):

+----------------+                 
|server-1:8001<->|                 
|server-2:8002<->|<->:9000<--->Internet<-->clients
|server-3:8003<->|                 
+----------------+                 

This tool has two parts, the client side (Mux) wraps the application
protocol by adding a header that identifies the client and also the
server it wants to connect. The server side (Demux) listens on the
opened port (9000) for incomming messages, extracts the client header
with information identifying the client and uses that information to
properly redirect the wrapped message to the appropriate internal port.

This tool works mostly ok, except that after some minutes working
properly redirecting several dozens of messages correctly, the Demux
breaks (on reception of a normal incoming message) with the following
error message:

exception:
  File "/home/master/devel/lib/python/twisted/spread/banana.py", line
176, in
dataReceived                                                      
    raise BananaError("Security precaution: List too long.")    

The messages do not exceed the maximum size defined in banana.py,
actually these messages are rather small, usually less than 1KB.

Does anyone know what that error message means and when it happens? What
might an application be doing wrong for that to happen?

Attached is the code of this tool, both the Mux and the Demux, it is a
very small file (~100 lines of code). Also, take into account that this
was written as a protoype and it is my first TWisted program so it might
be very badly designed.

Thanks in advance for any feedback you can give!!

Iago
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tunnel.py
Type: text/x-python
Size: 4021 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080313/612ceb77/attachment.py 

From zooko at zooko.com  Thu Mar 13 15:52:13 2008
From: zooko at zooko.com (zooko)
Date: Thu, 13 Mar 2008 13:52:13 -0600
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
Message-ID: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>

ANNOUNCING: Allmydata.org "Tahoe" version 0.9

We are pleased to announce the release of version 0.9 of allmydata.org
"Tahoe".

Allmydata.org "Tahoe" is a secure, decentralized, fault-tolerant
filesystem.  All of the source code is available under a Free
Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

A one-page explanation of the novel properties of this filesystem is
visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


This is the successor to Allmydata.org "Tahoe" v0.8, which was
released February 15, 2008 [1].  This release is backwards-compatible
with v0.8.

This is a major release of allmydata.org "Tahoe" -- the first release
which is considered stable and functional enough to serve as a
permanent store of valuable data.  New versions of Tahoe are expected
to maintain backwards compatibility with this version for the
forseeable future.

This release of allmydata.org "Tahoe" will form the basis of the next
consumer backup product from Allmydata, Inc. -- http://allmydata.com .

This release adds extensive "visibility into the grid" -- the web user
interface now shows detailed information about the nodes comprising
the grid and fine-grained statistics about the time and space used for
the storage and retrieval operations.


Since v0.8 we've made the following changes:

  * Added user-friendly Windows application and package, thanks
    especially to Rob Kinninmont and Mike Booker (tickets #195, 242,
    243, 321, 335).

  * Display information about uploads and downloads (ticket #39).

  * Improve performance (including tickets #304, 321).

  * Improve packaging and testing (including ticket #145).

  * Add even more extensive automated tests (including ticket #207).

  * Updated documentation.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is the product of less than a year and a half of
active development, we do not categorically recommend it for the
storage of data which is extremely confidential or precious.  However,
we believe that the combination of erasure coding and careful
engineering makes the use of this software a much safer alternative
than common alternatives, such as RAID or traditional backup onto a
remote hard drive, removable drive, or tape.

This software comes with extensive unit tests [2], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known security issues please see the
Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
March 13, 2008
Boulder, Colorado, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2183
[2] http://allmydata.org/tahoe-figleaf/current/
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2307
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com

P.S.  Someday, people might search for some of the earliest  
occurrences of the
name "LAUGFS", which stands for "Least AUthority Grid FileSystem".   
Hello,
searchers from the future!




From pahan at xzrq.net  Thu Mar 13 21:14:47 2008
From: pahan at xzrq.net (Pavel Pergamenshchik)
Date: Thu, 13 Mar 2008 18:14:47 -0700
Subject: [Twisted-Python] Help with BananaError
In-Reply-To: <1205432689.16886.52.camel@localhost>
References: <1205432689.16886.52.camel@localhost>
Message-ID: <7447a0ac0803131814y3fb980d3r5056d6da3961a458@mail.gmail.com>

On 3/13/08, Iago Toral <itoral at igalia.com> wrote:
>  This tool works mostly ok, except that after some minutes working
>  properly redirecting several dozens of messages correctly, the Demux
>  breaks (on reception of a normal incoming message) with the following
>  error message:

TCP is not a message oriented protocol. It will not preserve message
borders. dataReceived may get called with any amount of bytes from the
incoming stream, not just the amount you expect.

You probably want something like
twisted.protocols.basic.NetstringReceiver to delimit messages for you.



From chris at sidwells.com  Fri Mar 14 04:02:18 2008
From: chris at sidwells.com (Chris Dew)
Date: Fri, 14 Mar 2008 08:02:18 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <20080313144805.6859.1998745914.divmod.quotient.18749@ohm>
References: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>
	<20080313144805.6859.1998745914.divmod.quotient.18749@ohm>
Message-ID: <e6a690760803140102y6531d4a9wd6b834c1b4e6798f@mail.gmail.com>

I have it working now.  I have attached a working programme below.  (Note:
the RRHeader's name should be gathered from one of the queries, rather than
being hard-coded, as in my example below.  I did it this way, as it more
obviously illustrates RRHeader's constructor.)

Thanks for your help,

Chris.


#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # this should always answer 10.11.12.13, regardless of the query
        m.answer = 1
        m.answers.append(RRHeader(name="foo.bar", payload=Record_A(address="
10.11.12.13")))
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()


On 13/03/2008, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Thu, 13 Mar 2008 07:52:24 +0000, Chris Dew <chris at sidwells.com> wrote:
> >Thanks for your reply.  I have tried setting answer to 1.  I have
> included
> >an amended version of my programme at the end of this email.
> >
> >When I run this, the server reports no error.  When I  'dig @localhost
> >foo.bar' I get the response:
> >
>
> > [snip]
>
> >
> >Could you point out my mistake?  If it's a bug in twisted.names, I'm
> happy
> >to look at fixing it (I've worked with the dns protocol at packet level
> >before), but I first want to make sure that I am using the API correctly.
>
>
> See below.  I think it's a documentation deficiency, but probably not a
> bug in the code.
>
> > [snip]
>
> >
> >#!/usr/bin/python
> >
> >from twisted.internet.protocol import Protocol, Factory
> >from twisted.internet import reactor
> >from twisted.names.server import DNSServerFactory
> >from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
> >Record_CNAME, Record_A, Message
> >from twisted.names import dns
> >from twisted.internet.interfaces import IAddress
> >
> >class Controller(object):
> >    def messageReceived(self, m, protocol, addr):
> >        print m, dir(m), m.queries, m.answers
> >        # this should always answer 10.11.12.13, regardless of the query
> >        m.answer = 1
> >        m.answers.append(Record_A(address="10.11.12.13"))
> >        protocol.transport.write(m.toStr(), addr)
>
>
> Answers should be a list of RRHeaders, not bare Record_As.
>
>
> >
> >controller = Controller()
> >
> >if __name__ == "__main__":
> >    reactor.listenUDP(53, DNSDatagramProtocol(controller))
> >    reactor.run()
> >
>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080314/12ffbcd5/attachment.htm 

From radix at twistedmatrix.com  Sat Mar 15 13:02:10 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 15 Mar 2008 13:02:10 -0400
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
Message-ID: <60ed19d40803151002t2b4d4eacj10668d1c4e505d09@mail.gmail.com>

On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>
>  We are pleased to announce the release of version 0.9 of allmydata.org
>  "Tahoe".

Congratulations!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sun Mar 16 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Mar 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1205640307.41.1888648499@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080316/44686380/attachment.htm 

From eric+twisted at trueblade.com  Sun Mar 16 09:35:27 2008
From: eric+twisted at trueblade.com (Eric Smith)
Date: Sun, 16 Mar 2008 08:35:27 -0500
Subject: [Twisted-Python] Bug in options howto?
Message-ID: <47DD221F.2090404@trueblade.com>

I might be mistaken, but I think there's a bug in:

http://twistedmatrix.com/projects/core/documentation/howto/options.html

In the section "Inheritance, Or: How I Learned to Stop Worrying and Love 
the Superclass", it shows two classes, one which inherits from the 
other.  It then shows the same thing, but as a single class.  In the 
single class example, I think the base class should be usage.Options, 
not BaseOptions.

I'll open a ticket if this is a bug, otherwise sorry for wasting your time.



From lists at sourceillustrated.com  Sun Mar 16 14:00:33 2008
From: lists at sourceillustrated.com (John Wells)
Date: Sun, 16 Mar 2008 14:00:33 -0400
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
Message-ID: <44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>

On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>
>  We are pleased to announce the release of version 0.9 of allmydata.org
>  "Tahoe".

Very impressive looking project.

I'm curious...it appears that the focus is security and reliability,
but how well does it perform?

Thanks,
John



From steve at holdenweb.com  Sun Mar 16 15:33:26 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sun, 16 Mar 2008 15:33:26 -0400
Subject: [Twisted-Python] Teach Me Twisted Redux
Message-ID: <frjsm6$ekf$1@ger.gmane.org>

I'd just like to thank the Twisted community for their support in 
yesterday's "Teach Me Twisted" Open Space session. To see the room still 
half-full of people talking animatedly about Python twenty minutes after 
the session ended was a great tribute to how interested people are in 
making Twisted work for them, and a reminder of what PyCon is all about. 
I haven't ever enjoyed any PyCon activity so much.

Couldn't have done it without you,guys, thanks a million.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From duncan.mcgreggor at gmail.com  Sun Mar 16 16:18:27 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 16 Mar 2008 15:18:27 -0500
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <4327dfbd0803161318j5cc8ce11r438acaa56cd8f5ce@mail.gmail.com>

On Sun, Mar 16, 2008 at 2:33 PM, Steve Holden <steve at holdenweb.com> wrote:
> I'd just like to thank the Twisted community for their support in
>  yesterday's "Teach Me Twisted" Open Space session. To see the room still
>  half-full of people talking animatedly about Python twenty minutes after
>  the session ended was a great tribute to how interested people are in
>  making Twisted work for them, and a reminder of what PyCon is all about.
>  I haven't ever enjoyed any PyCon activity so much.
>
>  Couldn't have done it without you,guys, thanks a million.

It was great fun for us too, Steve -- thanks for coming up with such a
great idea/format for an open space session/tutorial!

d



From ldanielburr at mac.com  Sun Mar 16 20:48:15 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sun, 16 Mar 2008 19:48:15 -0500
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <op.t74xup1z3oj628@l-daniel-burrs-computer.local>

On Sun, 16 Mar 2008 14:33:26 -0500, Steve Holden <steve at holdenweb.com>  
wrote:

> I'd just like to thank the Twisted community for their support in  
> yesterday's "Teach Me Twisted" Open Space session. To see the room still  
> half-full of people talking animatedly about Python twenty minutes after  
> the session ended was a great tribute to how interested people are in  
> making Twisted work for them, and a reminder of what PyCon is all about.  
> I haven't ever enjoyed any PyCon activity so much.
>

I heartily concur, it was a lot of fun, and if anything, even more fun
once we all retired to the bar.

> Couldn't have done it without you,guys, thanks a million.
>

My thanks to you for being such a good sport.


L. Daniel Burr



From zooko at zooko.com  Sun Mar 16 23:18:20 2008
From: zooko at zooko.com (zooko)
Date: Sun, 16 Mar 2008 22:18:20 -0500
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
	<44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>
Message-ID: <7B35B371-1233-46B4-BAE4-C510960C69DC@zooko.com>

Adding Cc: the tahoe-dev list, which is probably the most logical  
place for follow-ups.


On Mar 16, 2008, at 1:00 PM, John Wells wrote:

> On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
>> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>>
>>  We are pleased to announce the release of version 0.9 of  
>> allmydata.org
>>  "Tahoe".
>
> Very impressive looking project.

Thank you!  We're doing our best to make it possible for other people  
to use allmydata.org "Tahoe", re-use its source code, or at least  
learn from our mistakes.  Please feel free to post to tahoe-dev or  
open a ticket at http://allmydata.org if you try to do one of these  
things and fail.

> I'm curious...it appears that the focus is security and reliability,
> but how well does it perform?


What sort of performance are you interested in?  There are several  
measures of performance (storage efficiency, transfer speed, network  
efficiency, conserving CPU cycles, memory usage, etc.) and many use  
cases.  Tahoe performs very well at a few things and terribly at many  
things.  Below, I'll assume that the kind of performance you were  
interested in is a pleasurable experience downloading movies, since  
that is one of the things that Tahoe is best at.

There are some basic automated performance measurements on The  
Performance Page [1], linked from The Dev Page [2] of the wiki.

Those measurements say that if you are downloading a file over a home  
DSL connection, it might take one quarter of a second to begin a  
download, followed by 500 KB/s sustained transfer speed.

Tahoe performance actually compares favorably with BitTorrent for  
this use.  Our file encoding allows streaming download, so you can  
click to begin downloading a movie, and then you can go ahead and  
start watching the movie while it is still downloading.

Also, Tahoe can transfer data faster than BitTorrent does, because it  
assumes that all clients are deserving of the best possible service  
-- it doesn't use throttling as a way to incentivize cooperation.   
That's good for performance, but by the same token it means you can't  
expect cooperation from arbitrary Tahoe nodes.  If you want this kind  
of service from the storage servers, you have to persuade them to  
serve you, either because you are a friend in their friendnet, or  
because you are a customer.  (In the future other, more general,  
kinds of service relationship will be supported -- we have a detailed  
plan about that which you are welcome to ask about on tahoe-dev.)

As far as I know, Tahoe has not been scaled up to more than a couple  
of dozen storage servers or clients or more than a few hundred GB of  
storage.  This is going to be changing rapidly in the near future as  
allmydata.com is moving our customers' data onto a Tahoe grid.

Regards,

Zooko

[1] http://allmydata.org/trac/tahoe/wiki/Performance
[2] http://allmydata.org/trac/tahoe/wiki/Dev

P.S.  In the future, some people might refer to the allmydata.org  
Tahoe secure, decentralized filesystem design as "LAUGFS", which  
stands for "Least AUthority Grid FileSystem".




From etherealmachine at gmail.com  Mon Mar 17 02:48:12 2008
From: etherealmachine at gmail.com (James Pettit)
Date: Sun, 16 Mar 2008 23:48:12 -0700
Subject: [Twisted-Python] xmpp_client X-GOOGLE-TOKEN and mechanism
Message-ID: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>

 I'm trying to use the xmpp_client example in twisted.words, and it looks
like google is requesting the X-GOOGLE-TOKEN auth mechanism... anyone know
how I can specify/force it to use PLAIN?
Specifically, the command '> python xmpp_client.py
myname at gmail.commypassword' gives this output (
http://pastebin.com/m47f6002a).
- James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080316/95253e7e/attachment.htm 

From radix at twistedmatrix.com  Tue Mar 18 00:38:28 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 17 Mar 2008 23:38:28 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
Message-ID: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>

There is a pre-release of Twisted 8.0 available at
http://twistedmatrix.com/users/radix/DIST/

Please test and provide feedback.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From twisted at ralphm.ik.nu  Tue Mar 18 04:28:29 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 18 Mar 2008 09:28:29 +0100
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <20080318082829.GA19592@ik.nu>

On Mon, Mar 17, 2008 at 11:38:28PM -0500, Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
> 
> Please test and provide feedback.

When are you planning to do a final release from this, and is there
still time to get some odd little bugs fixed in trunk that could end up
in this release still?

-- 
Groetjes,

ralphm



From twisted at ralphm.ik.nu  Tue Mar 18 04:32:14 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 18 Mar 2008 09:32:14 +0100
Subject: [Twisted-Python] xmpp_client X-GOOGLE-TOKEN and mechanism
In-Reply-To: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>
References: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>
Message-ID: <20080318083214.GB19592@ik.nu>

On Sun, Mar 16, 2008 at 11:48:12PM -0700, James Pettit wrote:
> I'm trying to use the xmpp_client example in twisted.words, and it looks like
> google is requesting the X-GOOGLE-TOKEN auth mechanism... anyone know how I can
> specify/force it to use PLAIN?
> Specifically, the command '> python xmpp_client.py myname at gmail.com mypassword'
> gives this output (http://pastebin.com/m47f6002a).

Google Talk will only give you PLAIN if TLS is established first. The
twisted.words example does this by default, but could it be that you
don't have the OpenSSL python bindings installed?

-- 
Groetjes,

ralphm



From mg at daimi.au.dk  Tue Mar 18 04:46:48 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 09:46:48 +0100
Subject: [Twisted-Python] Re: Twisted 8.0.0pre1
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <w1b1w68berr.fsf@thyra03.daimi.au.dk>

"Christopher Armstrong" <radix at twistedmatrix.com> writes:

> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
>
> Please test and provide feedback.

I tried deleting my Twisted 2.5.0 install and installed the
prerelease, and it works fine with the unit tests for my VIFF project.

They use the twisted.protocols.loopback.loopbackAsync function for
testing the interaction of several (3 or 4) peers in a network. I have
modified it a bit to ensure that things really are run asynchronously.
What I mean with this is the I want the server and client to be run
interleaved so that an execution trace is not just

  [C, C, C, C, S, S, S, S]

but more like this:

  [C, S, C, C, S, S, S, C]

with some random interleavings.

You can find the file here:

  http://hg.viff.dk/viff/raw-file/tip/viff/test/loopback.py

with the relevant diff here:

  http://hg.viff.dk/viff/rev/21fbfaae93e2

My test case of the asynchronous tests is here:

  http://hg.viff.dk/viff/raw-file/tip/viff/test/test_async.py

I hope this can be of interest for someone...

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From adelagon at gmail.com  Tue Mar 18 05:31:17 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Mar 2008 17:31:17 +0800
Subject: [Twisted-Python] transport.loseConnection problems
Message-ID: <7a01f6c00803180231x5c4e995bxeca9fd2f5224a9a0@mail.gmail.com>

I have a server application that do forced disconnects to clients on certain
conditions by using self.transport.loseConnection() method. On random cases
the method that I'm using fails to disconnect the client on the fly. The
socket connection that is supposed to be disconnected immediately get
disconnected at random times (10-30mins) with an error of:

*Connection closed: [Failure instance: Traceback (failure with no frames):
twisted.internet.error.ConnectionLost: Connection to the other side was lost
in a non-clean fashion.
*
Can anyone explain why is this happening? I checked the API docs of the
loseConnection() and it says there that:

*"**Note that if there is a registered producer on a transport it will not
be closed until the producer has been unregistered."*

I have no idea what is a producer. By the way I'm using
twisted.words.xmlstream that implements Protocol and epoll as my reactor.
Thanks in advance. :)

----
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080318/38a2aeb4/attachment.htm 

From mg at daimi.au.dk  Tue Mar 18 05:57:46 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 10:57:46 +0100
Subject: [Twisted-Python] My project is using Twisted
Message-ID: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>

Hi,

I would like to ask if a link could be added to my VIFF project on the
Projects Using Twisted page:

  http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted

It could be listed under research projects:

  [http://viff.dk/ VIFF @ University of Aarhus, Denmark] is an open
  source Python library for implementing secure multi-party
  computation.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From brianbaquiran at gmail.com  Tue Mar 18 08:04:28 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Tue, 18 Mar 2008 20:04:28 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
Message-ID: <47DFAFCC.30106@gmail.com>

Hi,
I'm writing what seems to me to be a trivial Twisted client application 
using a proprietary protocol, and I'm having problems with integrating 
it to ActiveMQ using pyactivemq (which is a Boost.Python wrapper around 
the ActiveMQ-CPP library).

What I'm observing is that calling my client protocol's 
transport.write() doesn't seem to send data to the server. The server, 
also implemented using Twisted but without using pyactivemq, does not 
seem to have this problem.

Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
consumption of messages be interfering somehow with Twisted's event loop 
and causing this problem?

Brian



From itamar at itamarst.org  Tue Mar 18 09:14:40 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 09:14:40 -0400
Subject: [Twisted-Python] My project is using Twisted
In-Reply-To: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
Message-ID: <1205846080.21090.0.camel@localhost.localdomain>


On Tue, 2008-03-18 at 10:57 +0100, Martin Geisler wrote:
> Hi,
> 
> I would like to ask if a link could be added to my VIFF project on the
> Projects Using Twisted page:

Done.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From itamar at itamarst.org  Tue Mar 18 09:16:11 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 09:16:11 -0400
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <47DFAFCC.30106@gmail.com>
References: <47DFAFCC.30106@gmail.com>
Message-ID: <1205846171.21090.2.camel@localhost.localdomain>


On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:

> Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
> consumption of messages be interfering somehow with Twisted's event loop 
> and causing this problem?

Quite possibly; if the API you're calling is blocking then Twisted's
event loop won't be able to run. If that is the case, either figure out
if you can integrate the library with Twisted's event loop, or use
twisted.internet.threads.deferToThread or something similar to call the
blocking API.




From eburus at gmail.com  Tue Mar 18 10:01:41 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 18 Mar 2008 17:01:41 +0300
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <47DFCB45.6080005@gmail.com>

Hm... Why 8.0 ? It's special edition =)?
In the official resource i find only this
http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
Where i can read more about new features or in the Twisted-8.0 you
modify release auto tools,
make test coverage better and stabilize code?


Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
>
> Please test and provide feedback.
>
>   

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080318/3245a014/attachment.htm 

From mg at daimi.au.dk  Tue Mar 18 10:11:55 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 15:11:55 +0100
Subject: [Twisted-Python] Re: My project is using Twisted
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
	<1205846080.21090.0.camel@localhost.localdomain>
Message-ID: <w1b7ig09l5g.fsf@thyra03.daimi.au.dk>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2008-03-18 at 10:57 +0100, Martin Geisler wrote:
>> Hi,
>> 
>> I would like to ask if a link could be added to my VIFF project on
>> the Projects Using Twisted page:
>
> Done.

Thank you!

And thank you all for Twisted, I have been very happy with it,
especially the asynchronous style of programming offered by Deferreds
which fits the needs of my project perfectly.

We basically need to evaluate arithmetic circuits as fast as possible,
and so we want to execute a gate as soon as the operands are ready. It
turned out that Deferreds lets us define the execution tree
implicitly, something like this:

  def add(a, b):
    result = gatherResults([a, b])
    result.addCallback(lambda (a, b): a + b)
    return result

  def mul(a, b):
    result = gatherResults([a, b])
    result.addCallback(lambda (a, b): a * b)
    return result

  x = Deferred()
  y = Deferred()
  z = Deferred()
  w = mul(add(x, y), mul(x, add(x, z)))

Here w is calculated as fast as possible, namely when x, y, and z are
available.

I would not even know how to program something like this in a sane way
in, say, Java, but with Twisted (and thanks to lambda expressions) it
is very easy to get the fine-grained execution we want.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From dripton at ripton.net  Tue Mar 18 10:14:05 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 18 Mar 2008 07:14:05 -0700
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <20080318141404.GA19253@vidar.dreamhost.com>

On 2008.03.17 23:38:28 -0500, Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/

Cool.

Why the big version number bump?

"Twisted 8.0, with over 3x as much version number as Twisted 2.5."

> Please test and provide feedback.

My tests still pass, FWIW.

-- 
David Ripton    dripton at ripton.net



From itamar at itamarst.org  Tue Mar 18 10:37:12 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 10:37:12 -0400
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <47DFCB45.6080005@gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<47DFCB45.6080005@gmail.com>
Message-ID: <1205851032.21090.4.camel@localhost.localdomain>


On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
> Hm... Why 8.0 ? It's special edition =)?

The new versioning scheme uses the current year (2008) as the basis for
overall releases. Twisted Core will be version 2.6.

> In the official resource i find only this
> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
> Where i can read more about new features

There should be a NEWS file in the tarball.




From eburus at gmail.com  Tue Mar 18 10:46:38 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 18 Mar 2008 17:46:38 +0300
Subject: [Twisted-Python] My project is using Twisted
In-Reply-To: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
Message-ID: <47DFD5CE.6040605@gmail.com>

Could be added link for my project too?

http://fats.burus.org/ - only russian version at now (

sourceforge resource http://sourceforge.net/projects/fats/

May be in the future it will be added to the official twisted subprojects.


Martin Geisler wrote:
> Hi,
>
> I would like to ask if a link could be added to my VIFF project on the
> Projects Using Twisted page:
>
>   http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>
> It could be listed under research projects:
>
>   [http://viff.dk/ VIFF @ University of Aarhus, Denmark] is an open
>   source Python library for implementing secure multi-party
>   computation.
>
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080318/d00ca6e0/attachment.htm 

From exarkun at divmod.com  Tue Mar 18 11:01:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 18 Mar 2008 10:01:37 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <1205851032.21090.4.camel@localhost.localdomain>
Message-ID: <20080318150137.6859.1869730862.divmod.quotient.20565@ohm>

On Tue, 18 Mar 2008 10:37:12 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
>On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
>> Hm... Why 8.0 ? It's special edition =)?
>
>The new versioning scheme uses the current year (2008) as the basis for
>overall releases. Twisted Core will be version 2.6.

Actually we decided that this was confusing and didn't provide much benefit,
so everything is going to be 8.0.  As a consequence, it will be easier to tell
when a Twisted installation is bogus, because the version number of the sub-
projects won't match up with each other or with the overall Twisted version
number.

>
>> In the official resource i find only this
>> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
>> Where i can read more about new features
>
>There should be a NEWS file in the tarball.
>

Yep, a really big one that David Reid and Christopher Armstrong spent a lot
of time writing up.

Jean-Paul



From andrewfr_ice at yahoo.com  Tue Mar 18 11:36:43 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 18 Mar 2008 08:36:43 -0700 (PDT)
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>
Message-ID: <650656.69998.qm@web34201.mail.mud.yahoo.com>

Hi Steve and Folks:

>I'd just like to thank the Twisted community for
their >support in yesterday's "Teach Me Twisted" Open
Space >session. To see the room still half-full of
people >talking animatedly about Python twenty minutes
>after the session ended was a great tribute to how
>interested people are in making Twisted work for
them, >and a reminder of what PyCon is all
>about. I haven't ever enjoyed any PyCon activity so
>much.

>Couldn't have done it without you,guys, thanks a
>million.

Here, here. I thought the "Teach Me Twisted" talk was
a scream. I never touched building a protocol so that
was ultra-useful. Twisted is a truly wonderful product
and  I think, as corny as it sounds, all that is
needed is to lead newbies by the hand for a little
while before they get the swing of it. But when people
get the swing of Twisted, watch out!

Cheers,
Andrew

P.S: The only downside was I realised I didn't get a
t-shirt!!!






      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From lists at sourceillustrated.com  Tue Mar 18 11:40:30 2008
From: lists at sourceillustrated.com (John Wells)
Date: Tue, 18 Mar 2008 11:40:30 -0400
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <650656.69998.qm@web34201.mail.mud.yahoo.com>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>
	<650656.69998.qm@web34201.mail.mud.yahoo.com>
Message-ID: <44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>

Are the slides for the presentation available anywhere? Also, any
chance a video was captured?

Thanks,
John



From arkanes at gmail.com  Tue Mar 18 11:50:53 2008
From: arkanes at gmail.com (Chris Mellon)
Date: Tue, 18 Mar 2008 10:50:53 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
References: <1205851032.21090.4.camel@localhost.localdomain>
	<20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
Message-ID: <4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>

On Tue, Mar 18, 2008 at 10:01 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Tue, 18 Mar 2008 10:37:12 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>  >
>  >On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
>  >> Hm... Why 8.0 ? It's special edition =)?
>  >
>  >The new versioning scheme uses the current year (2008) as the basis for
>  >overall releases. Twisted Core will be version 2.6.
>
>  Actually we decided that this was confusing and didn't provide much benefit,
>  so everything is going to be 8.0.  As a consequence, it will be easier to tell
>  when a Twisted installation is bogus, because the version number of the sub-
>  projects won't match up with each other or with the overall Twisted version
>  number.
>
>
>  >
>  >> In the official resource i find only this
>  >> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
>  >> Where i can read more about new features
>  >
>  >There should be a NEWS file in the tarball.
>  >
>
>  Yep, a really big one that David Reid and Christopher Armstrong spent a lot
>  of time writing up.
>


The tarball at http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre1.tar.bz2
only has the LICENSE and README files (which incidentally is still for
2.5).



From dripton at ripton.net  Tue Mar 18 13:39:13 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 18 Mar 2008 10:39:13 -0700
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>
References: <1205851032.21090.4.camel@localhost.localdomain>
	<20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
	<4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>
Message-ID: <20080318173913.GA11070@vidar.dreamhost.com>

On 2008.03.18 10:50:53 -0500, Chris Mellon wrote:
> On Tue, Mar 18, 2008 at 10:01 AM, Jean-Paul Calderone
> <exarkun at divmod.com> wrote:
> >  >There should be a NEWS file in the tarball.
> >
> >  Yep, a really big one that David Reid and Christopher Armstrong spent a lot
> >  of time writing up.
> 
> The tarball at http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre1.tar.bz2
> only has the LICENSE and README files (which incidentally is still for
> 2.5).

/var/tmp/Twisted-8.0.0pre1$ find . -name NEWS
./twisted/words/topfiles/NEWS
./twisted/mail/topfiles/NEWS
./twisted/news/topfiles/NEWS
./twisted/runner/topfiles/NEWS
./twisted/web/topfiles/NEWS
./twisted/lore/topfiles/NEWS
./twisted/conch/topfiles/NEWS
./twisted/names/topfiles/NEWS
./twisted/topfiles/NEWS

You want the last one.

Agreed this is not really the most obvious place to put it.

-- 
David Ripton    dripton at ripton.net



From steve at holdenweb.com  Tue Mar 18 14:30:11 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 18 Mar 2008 14:30:11 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>	<650656.69998.qm@web34201.mail.mud.yahoo.com>
	<44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
Message-ID: <frp1nl$uqc$1@ger.gmane.org>

John Wells wrote:
> Are the slides for the presentation available anywhere? Also, any
> chance a video was captured?
> 
> Thanks,
> John

There were no slides (since the whole point of the "presentation" was to 
receive information from the audience I had nothing to "present"). 
Unfortunately the session wasn't recorded.

Guess you just had to be there, sorry.

regards
  Steve




From nathan.stocks at gmail.com  Tue Mar 18 18:34:06 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 18 Mar 2008 16:34:06 -0600
Subject: [Twisted-Python] SSL + AMP
Message-ID: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>

Can someone help me fill in the blanks here?  I've got an AMP
connection up and running, I just want to:

1) Make it so that AMP uses an SSL connection (which appears to be
supported by AMP with StartTLS) -- I'm confident that it's only a
matter of a little bit more time and experimentation for me to get
this part working.

2) Make it so that both the client and the server only connect to each
other and no one else.  I'm fairly certain this has something to do
with making my own certificate authority and certificates.  I (with
Google's help) am capable of figuring out all the OpenSSL commands to
do the creating, signing, etc. of certificates, but I'm not sure what
exactly needs to be done.

Any pointers would be appreciated...

* Here's the docs I've found so far for twisted+ssl+amp:
(There's a StartTLS in AMP, )
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.StartTLS.html
(There's an ssl in twisted.internet)
http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
(The SSL examples use a ClientContextFactory...which is undocumented)
http://twistedmatrix.com/projects/core/documentation/examples/echoserv_ssl.py
http://twistedmatrix.com/projects/core/documentation/examples/echoclient_ssl.py
http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.ClientContextFactory.html#getContext



From brianbaquiran at gmail.com  Tue Mar 18 21:49:17 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 09:49:17 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <1205846171.21090.2.camel@localhost.localdomain>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
Message-ID: <87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>

On Tue, Mar 18, 2008 at 9:16 PM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:
> > Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous
> > consumption of messages be interfering somehow with Twisted's event loop
> > and causing this problem?
>
> Quite possibly; if the API you're calling is blocking then Twisted's
> event loop won't be able to run. If that is the case, either figure out
> if you can integrate the library with Twisted's event loop, or use
> twisted.internet.threads.deferToThread or something similar to call the
> blocking API.
>

The API does not block when using an async message listener as I'm doing.
Here's some example pyactivemq code that shows how an asynchronous message
listener is registered:
http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py

In my code, I'm calling the protocol's transport.write(data) from within the
onMessage() callback.

In my testing, I've also seen cases wherein I consume a whole lot of
messages from ActiveMQ and call transport.write() for each of them but
nothing appears on the server (both client and server twisted apps are on
the same machine) I wait a while -- couple of seconds to a minute -- then
suddenly the data arrives on the server in a single dataReceived().

Would it work if I didn't call transport.write() from within the onMessage()
callback? Perhaps having some intermediate buffer to avoid having twisted
methods called from inside the message listener?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080319/a16f34a6/attachment.htm 

From dialtone at gmail.com  Tue Mar 18 23:35:42 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 19 Mar 2008 04:35:42 +0100
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
	<87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
Message-ID: <c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>

On Wed, Mar 19, 2008 at 2:49 AM, Brian Baquiran <brianbaquiran at gmail.com> wrote:
> The API does not block when using an async message listener as I'm doing.
> Here's some example pyactivemq code that shows how an asynchronous message
> listener is registered:
>  http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py

This API actually blocks.

Just by looking at:
   conn = f.createConnection()

Which means that you can create a connection and immediately get the result.
This is blocking by any relevant definition of blocking.

Judging by the API the only difference between sync and async seems to
be related
to the type of producer involved. A Push producer is generally
considered async and
a pull producer is sync.

Looking further in the API of ActiveMQ-CPP, even though I'm not too
good with C++,
I can easily spot lines like the following:

Response* response = transport->request( &cmd );

which to me appears as totally synchronous and thus blocking,
a non blocking API would have been more like:

transport->request(&cmd, &onMessage);

The transport itself is implemented in the following way:

        // Start the polling thread.
        thread = new Thread( this );
        thread->start();

and its run method contains:

    try{

        while( !closed ){

            // Read the next command from the input stream.
            Command* command = reader->readCommand();

            // Notify the listener.
            fire( command );
        }

    }

Considering all of this you should probably use this from deferToThread.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From dave at krondo.com  Wed Mar 19 00:11:02 2008
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 18 Mar 2008 21:11:02 -0700
Subject: [Twisted-Python] helping out
Message-ID: <47E09256.4020302@krondo.com>

Hello all, it was great to meet so many of you in person at Pycon,
I only wish I had come to an earlier one!

I'm glad I was able to plug Twisted at Pycon. I do need to set the
record straight, as I only realized today that I got a bit confused
in my numbers. During my plug, I mentioned one of our twisted servers
had served 100 billion queries. I'm afraid it was actually 1 billion,
not one hundred. I think I was conflating it with another metric we
were touting from our booth for recruiting purposes. Either that, or
I'm just a nitwit :) Sorry for the mistake, once they get past a
certain number of zeroes, I kind of lose track.

The bottom line was, we were really impressed with Twisted's ability
to make making robust servers easy.

I'm going to try to help out with twisted.enterprise some more.
I think the most pressing issue there is the need to deprecate most
everything outside of adbapi? Anyway, I'll start reading up on the
new development model and hop on irc pretty soon.

later,
dave



From brianbaquiran at gmail.com  Wed Mar 19 00:23:57 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 12:23:57 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>
References: <47DFAFCC.30106@gmail.com>	<1205846171.21090.2.camel@localhost.localdomain>	<87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
	<c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>
Message-ID: <47E0955D.3080506@gmail.com>

Valentino Volonghi wrote:
> On Wed, Mar 19, 2008 at 2:49 AM, Brian Baquiran <brianbaquiran at gmail.com> wrote:
>> The API does not block when using an async message listener as I'm doing.
>> Here's some example pyactivemq code that shows how an asynchronous message
>> listener is registered:
>>  http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py
> 
> This API actually blocks.
> 
> Just by looking at:
>    conn = f.createConnection()
> 
> Which means that you can create a connection and immediately get the result.
> This is blocking by any relevant definition of blocking.
> 
> Considering all of this you should probably use this from deferToThread.

I was able to fix my original problem by using reactor.callFromThread() 
from the onMessage callback, so it does look like there is some 
threading going on. I'll look where deferToThread should be applied.

Thanks Valentino. I really appreciate your looking at the code.

Brian



From brianbaquiran at gmail.com  Wed Mar 19 00:25:02 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 12:25:02 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <1205846171.21090.2.camel@localhost.localdomain>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
Message-ID: <47E0959E.1050705@gmail.com>

Itamar Shtull-Trauring wrote:
> On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:
> 
>> Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
>> consumption of messages be interfering somehow with Twisted's event loop 
>> and causing this problem?
> 
> Quite possibly; if the API you're calling is blocking then Twisted's
> event loop won't be able to run. If that is the case, either figure out
> if you can integrate the library with Twisted's event loop, or use
> twisted.internet.threads.deferToThread or something similar to call the
> blocking API.

Hi Itamar,
Thanks a lot for the tip. I just used reactor.callFromThread() from 
inside the onMessage() callaback to execute the twisted code in the 
Twisted event loop instead of in the pyactivemq event loop and it seems 
to have solved the problem.

Regards,
Brian



From glyph at divmod.com  Wed Mar 19 04:22:56 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:22:56 -0000
Subject: [Twisted-Python] Re: Twisted 8.0.0pre1
In-Reply-To: <w1b1w68berr.fsf@thyra03.daimi.au.dk>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<w1b1w68berr.fsf@thyra03.daimi.au.dk>
Message-ID: <20080319082256.21558.1801099190.divmod.xquotient.8147@joule.divmod.com>


On 18 Mar, 08:46 am, mg at daimi.au.dk wrote:
>"Christopher Armstrong" <radix at twistedmatrix.com> writes:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>>
>>Please test and provide feedback.
>
>I tried deleting my Twisted 2.5.0 install and installed the
>prerelease, and it works fine with the unit tests for my VIFF project.

Thank you for this very specific report of a test! :).



From eburus at gmail.com  Wed Mar 19 04:24:59 2008
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 19 Mar 2008 11:24:59 +0300
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <frp1nl$uqc$1@ger.gmane.org>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>	<650656.69998.qm@web34201.mail.mud.yahoo.com>	<44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
	<frp1nl$uqc$1@ger.gmane.org>
Message-ID: <47E0CDDB.10309@gmail.com>

I have slides and "teach" material. Overview of twisted  engine and two
projects for the theoretical examples.
But it's russian version only =).  It was presented on the Exception #07
conference in Kiev 15.03.2008.

http://exception.org.ua/events/exception-conference-07/ ( where are
technical problems =( )

All materials will be shared on my web page http://burus.org as soon as
possible.

Steve Holden wrote:
> John Wells wrote:
>> Are the slides for the presentation available anywhere? Also, any
>> chance a video was captured?
>>
>> Thanks,
>> John
>
> There were no slides (since the whole point of the "presentation" was
> to receive information from the audience I had nothing to "present").
> Unfortunately the session wasn't recorded.
>
> Guess you just had to be there, sorry.
>
> regards
>  Steve
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080319/c9807f4e/attachment.htm 

From glyph at divmod.com  Wed Mar 19 04:34:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:34:11 -0000
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318141404.GA19253@vidar.dreamhost.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<20080318141404.GA19253@vidar.dreamhost.com>
Message-ID: <20080319083411.21558.1726373712.divmod.xquotient.8152@joule.divmod.com>


On 18 Mar, 02:14 pm, dripton at ripton.net wrote:
>On 2008.03.17 23:38:28 -0500, Christopher Armstrong wrote:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>
>Cool.
>
>Why the big version number bump?

We're switching over to a year-based version number: it's 2008, hence 
Twisted 8.  Each release in 2008 will have a version related to the 
number of releases in the year; i.e. the next release, if we get it out 
in 2008, will be 8.1.
>"Twisted 8.0, with over 3x as much version number as Twisted 2.5."

Well, yes.  The other reason is that it's been a very long time since 
the last release, and a lot has been done.
>>Please test and provide feedback.
>
>My tests still pass, FWIW.

Thank you very much!  I hope that lots of Twisted users will do this :-D



From glyph at divmod.com  Wed Mar 19 04:56:57 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:56:57 -0000
Subject: [Twisted-Python] helping out
In-Reply-To: <47E09256.4020302@krondo.com>
References: <47E09256.4020302@krondo.com>
Message-ID: <20080319085657.21558.1842737354.divmod.xquotient.8174@joule.divmod.com>


On 04:11 am, dave at krondo.com wrote:
>Hello all, it was great to meet so many of you in person at Pycon,
>I only wish I had come to an earlier one!
>
>I'm glad I was able to plug Twisted at Pycon. I do need to set the
>record straight, as I only realized today that I got a bit confused
>in my numbers. During my plug, I mentioned one of our twisted servers
>had served 100 billion queries. I'm afraid it was actually 1 billion,

Aw man, *only* a billion? ;-)
>not one hundred. I think I was conflating it with another metric we
>were touting from our booth for recruiting purposes. Either that, or
>I'm just a nitwit :) Sorry for the mistake, once they get past a
>certain number of zeroes, I kind of lose track.

It was, nevertheless, a dramatic mistake.  The point still holds.
>The bottom line was, we were really impressed with Twisted's ability
>to make making robust servers easy.

Thanks.
>I'm going to try to help out with twisted.enterprise some more.
>I think the most pressing issue there is the need to deprecate most
>everything outside of adbapi? Anyway, I'll start reading up on the
>new development model and hop on irc pretty soon.

I'm pretty sure there are also some edge-cases that aren't handled 
completely correctly in adbapi, although clearly they don't affect 
production systems terribly much :).  Just have a look through the 
bugtracker for enterprise issues.

And, thanks a _lot_.  Even with the resources the foundation will be 
providing us, we're still going to have a shortage of qualified helpers 
:).



From glyph at divmod.com  Wed Mar 19 06:02:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 10:02:17 -0000
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318082829.GA19592@ik.nu>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<20080318082829.GA19592@ik.nu>
Message-ID: <20080319100217.21558.1638418164.divmod.xquotient.8178@joule.divmod.com>


On 18 Mar, 08:28 am, twisted at ralphm.ik.nu wrote:
>On Mon, Mar 17, 2008 at 11:38:28PM -0500, Christopher Armstrong wrote:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>>
>>Please test and provide feedback.
>
>When are you planning to do a final release from this, and is there
>still time to get some odd little bugs fixed in trunk that could end up
>in this release still?

One of the major objectives Chris talked about for this release was 
making releases much easier to do.  If there are more odds and ends 
you'd like to see in a release, let's do another release soon :).  (It 
won't be another year and a half.)



From andrewfr_ice at yahoo.com  Wed Mar 19 10:58:46 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 19 Mar 2008 07:58:46 -0700 (PDT)
Subject: [Twisted-Python] Stackless / Twisted Integration Paper
Message-ID: <621510.44829.qm@web34208.mail.mud.yahoo.com>

Hi Folks:

I have uploaded a copy of "Adventures in Stackless
Python/Twisted Integration."

http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures.pdf

In the days and weeks to come I will make minor
corrections.

Although most of the arguments and code actually
appear peppered throughout the Stackless and Twisted
mailing list (too many people to thank for their
help), I will be re-writing some of the examples to
make them clearer.

I also plan to expand the slides to cover stuff like
pickling which I touch on but didn't have time to
cover.

If anyone attended the talks, I would love to hear,
for better or worse, feedback.

And once again, I thank everyone that helped me.

Thank you,
Andrew Francis



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From coder_gus at lavabit.com  Wed Mar 19 11:03:31 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Wed, 19 Mar 2008 17:03:31 +0200
Subject: [Twisted-Python] writing back to the connection is blocking my code
Message-ID: <47E12B43.1060105@lavabit.com>

Hi,
I have a server that tries to write back to several clients after it 
processed some that. I keep a hash with the currently connected clients 
(protocol instances) and write back to those as soon as the workers 
finish their job. The thing is I don't know where to call that 
instance.writeDataToClient() to not block my code. (I have tried in 
buildProtocol, but of course, it waits that another connection to be 
made until it writes back).

Thanks for All your help.




From andrewfr_ice at yahoo.com  Wed Mar 19 13:37:43 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 19 Mar 2008 10:37:43 -0700 (PDT)
Subject: [Twisted-Python] Re: [Stackless] Stackless / Twisted Integration
	Paper
In-Reply-To: <1205939743.13341.18.camel@localhost.localdomain>
Message-ID: <175069.96763.qm@web34204.mail.mud.yahoo.com>

Hello Guy:

--- Guy Hulbert <gwhulbert at eol.ca> wrote:

> Some of the fonts don't render in gpdf on a bare
> sarge workstation (just
> gnome and basic fonts -- debian release 3.1r7) ...
> in case you care.  I
> will probably try to find the right fonts and
> install them.

Yes I do care! I have to admit I am a dunce when it
comes to preparing slides - I would rather design and
write code.

Unfortunately I did the slides in Power Point but a
colleague did the diagrammes in Illustrator - worse
the colleague wasn't around when I detected problems -
all this caused immense headaches. I apologize.

> In some slides it is just the caps in the titles. 
> Any hint about the font would be useful ;-) 

If you have Acrobat, look at Document properties. On
mine I get:

The fonts are TrueType Arial, Calibri, and Courier New
(Embeded subset). 

When I have time, I will download OpenOffice and take
a look.

That said, thanks for looking at my paper.

Cheers,
Andrew







      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From glyph at divmod.com  Wed Mar 19 17:09:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 21:09:11 -0000
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
Message-ID: <20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>




On 18 Mar, 10:34 pm, nathan.stocks at gmail.com wrote:
>Can someone help me fill in the blanks here?  I've got an AMP
>connection up and running, I just want to:
>
>1) Make it so that AMP uses an SSL connection (which appears to be
>supported by AMP with StartTLS) -- I'm confident that it's only a
>matter of a little bit more time and experimentation for me to get
>this part working.

AMP already supports this, so you don't have anything to do...
>2) Make it so that both the client and the server only connect to each
>other and no one else.  I'm fairly certain this has something to do
>with making my own certificate authority and certificates.  I (with
>Google's help) am capable of figuring out all the OpenSSL commands to
>do the creating, signing, etc. of certificates, but I'm not sure what
>exactly needs to be done.

And this is really just learning about the OpenSSL APIs.
>Any pointers would be appreciated...

I would definitely look at the API docs for twisted.internet.ssl.  You 
don't even need to use openssl to generate and sign certificates 
(although currently some functionality is missing).

If you could give some explanation of the security properties you expect 
(how do you intend for the client and server to exchange information 
about who they "really" are?) then we might be able to offer more direct 
guidance.
>* Here's the docs I've found so far for twisted+ssl+amp:
>(There's a StartTLS in AMP, )
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.StartTLS.html
>(There's an ssl in twisted.internet)
>http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
>(The SSL examples use a ClientContextFactory...which is undocumented)
>http://twistedmatrix.com/projects/core/documentation/examples/echoserv_ssl.py
>http://twistedmatrix.com/projects/core/documentation/examples/echoclient_ssl.py
>http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.ClientContextFactory.html#getContext
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Wed Mar 19 17:20:02 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 21:20:02 -0000
Subject: [Twisted-Python] writing back to the connection is blocking my
	code
In-Reply-To: <47E12B43.1060105@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
Message-ID: <20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>


On 03:03 pm, coder_gus at lavabit.com wrote:
>Hi,
>I have a server that tries to write back to several clients after it 
>processed some that. I keep a hash with the currently connected clients 
>(protocol instances) and write back to those as soon as the workers 
>finish their job. The thing is I don't know where to call that 
>instance.writeDataToClient() to not block my code. (I have tried in 
>buildProtocol, but of course, it waits that another connection to be 
>made until it writes back).

It sounds like you might be having a problem answered by this FAQ 
question:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTwistedtalktomultipleclientsconnecttomultipleservers
or perhaps the following one.
>
>Thanks for All your help.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From nathan.stocks at gmail.com  Wed Mar 19 22:14:09 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 19 Mar 2008 20:14:09 -0600
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
Message-ID: <96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>

On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>  If you could give some explanation of the security properties you expect
>  (how do you intend for the client and server to exchange information
>  about who they "really" are?) then we might be able to offer more direct
>  guidance.

The security properties that I want are:

1) My client and my server refuse to establish SSL (or any other type
of) connections with anybody but each other.
2) My client and server do establish SSL connections with each other.

Pretty simple in concept, really.  I'll go read the API docs like you
suggested...

~ Nathan



From glyph at divmod.com  Wed Mar 19 22:44:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 20 Mar 2008 02:44:58 -0000
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>


This session was really fabulous, and it's unfortunate that Steve will 
be a Twisted expert in short order, making it a once-in-a-lifetime 
opportunity.

It was probably the high point of PyCon for me this year as well. 
Thanks a lot for doing it.  I really felt like having a presenter who 
wasn't afraid to admit that they didn't know what they were doing either 
really reduced the impression that Twisted is this impossibly hard thing 
to learn quite a bit.  And we really covered a fair amount of material.

Next year, we should definitely have more regular Twisted talks; I'd say 
that someone else should do another "teach me twisted" session, but I 
don't know if anyone else has the raw charisma and pedagogical expertise 
that Mr. Holden combined with Twisted ignorance to make this session so 
great :).

On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
>I'd just like to thank the Twisted community for their support in 
>yesterday's "Teach Me Twisted" Open Space session. To see the room 
>still half-full of people talking animatedly about Python twenty 
>minutes after the session ended was a great tribute to how interested 
>people are in making Twisted work for them, and a reminder of what 
>PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
>
>Couldn't have done it without you,guys, thanks a million.
>
>regards
>  Steve
>--
>Steve Holden        +1 571 484 6266   +1 800 494 3119
>Holden Web LLC              http://www.holdenweb.com/
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From coder_gus at lavabit.com  Thu Mar 20 04:23:16 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Thu, 20 Mar 2008 10:23:16 +0200
Subject: [Twisted-Python] writing back to the connection is blocking my
	code
In-Reply-To: <20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
Message-ID: <47E21EF4.2060408@lavabit.com>

Ok, this link answered a few of my questions (stupid of me that I 
haven't looked on that before I posted), but my question still stands: 
how do I send data to a client whenever I want from wherever I want and 
that data to be send as fast as possible, without the code waiting for 
the reactor to answer to some events? Sorry for being too pushy but I am 
not getting the picture right and I really want to get what's going on 
with this.

Thanks.

glyph at divmod.com wrote:
>
> On 03:03 pm, coder_gus at lavabit.com wrote:
>> Hi,
>> I have a server that tries to write back to several clients after it 
>> processed some that. I keep a hash with the currently connected 
>> clients (protocol instances) and write back to those as soon as the 
>> workers finish their job. The thing is I don't know where to call 
>> that instance.writeDataToClient() to not block my code. (I have tried 
>> in buildProtocol, but of course, it waits that another connection to 
>> be made until it writes back).
>
> It sounds like you might be having a problem answered by this FAQ 
> question:
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTwistedtalktomultipleclientsconnecttomultipleservers 
>
> or perhaps the following one.
>>
>> Thanks for All your help.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________ 
>
> Click for quotes on adjustable mortgages.
> http://ads.lavabit.com/fc/REAK6bkMOiFnNX2sGS485h9324PbTgrM9xKyt0ZhxqimEnvQxvSm9X/ 
>
> ____________________________________________________________________________________ 
>




From steve at holdenweb.com  Thu Mar 20 07:33:40 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 07:33:40 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
Message-ID: <47E24B94.7090400@holdenweb.com>

glyph at divmod.com wrote:
> 
> This session was really fabulous, and it's unfortunate that Steve will 
> be a Twisted expert in short order, making it a once-in-a-lifetime 
> opportunity.
> 
> It was probably the high point of PyCon for me this year as well. Thanks 
> a lot for doing it.  I really felt like having a presenter who wasn't 
> afraid to admit that they didn't know what they were doing either really 
> reduced the impression that Twisted is this impossibly hard thing to 
> learn quite a bit.  And we really covered a fair amount of material.
> 
As I believe I mentioned early on, one of the issues is that the Twisted 
core developers are so smart (I believe I may have used the phrase 
"brains the size of planets"), and so knowledgeable about Twisted, that 
it's difficult sometimes to get a 90% answer out of them. This was 
particularly the case with Itamar, whom I lambasted quite mercilessly 
(and whom I therefore owe a public apology: sorry, Itamar) when he tried 
to complete all the corner cases after a slightly inaccurate statement 
on my part that was perfectly good enough for a learner.

Think about driving a car: "never use the brake and the accelerator 
together" is a good rule for learners, and it isn't helpful to then have 
someone say "except if you want to put the car in a 180% power slide" -- 
not because it isn't true, but because you definitely need more than a 
couple of days' experience before undertaking that maneuver (God, 
American really mangles that word), and most drivers will never need it 
in a lifetime.

I left the session feeling we had accomplished hardly anything, but was 
persuaded afterwards that wasn't the case.

One of the tragedies of the session was due to the blue screen crash of 
my own computer I have absolutely nothing left of the code we developed. 
I had hopes that one or two blog entries might appear to allow me to 
lift it from those attending, but so far the success of the session is a 
closely guarded secret among PyCon attendees (thought it's been 
gratifying to have people saying "I wished I'd gone to that").

If someone can provide me with the code I will undertake to produce some 
sort of blog entry, and this might further publicize Twisted. Never 
underestimate the value of marketing: the Twisted community is a subset 
of the Python community, and it's my particular vanity that PyCon has 
helped to increase the Python community. It's important to keep feeding 
introductory material into the process as growth continues, because 
typically 50% of those present are likely to be newbies.

In point of fact this type of session *might* work with pretended 
ignorance, but it wouldn't have the same honesty, and I think that 
honesty *could* make the learning experience more powerful. Anyway the 
PyCon organizers list seems to have got fired up about it, so there's a 
good chance that there'll be more "Teach Me ..." sessions next year.

> Next year, we should definitely have more regular Twisted talks; I'd say 
> that someone else should do another "teach me twisted" session, but I 
> don't know if anyone else has the raw charisma and pedagogical expertise 
> that Mr. Holden combined with Twisted ignorance to make this session so 
> great :).
> 
Don't forget the whisky ...

I hope this actually marks my entrance proper into the Twisted 
community, to whom I owe a great debt for the success of PyCon. Your 
initial energy and enthusiasm (as I remember it, PyCon represented the 
first major opportunity for the Twisted team to have a more or less 
all-hands meeting) was responsible in large part for shaping the PyCon 
experience, to the extent that the spirit lived on even after the 
Twisted contingent departed due to ... well, I guess you guys just got 
busy with DivMod and the like. I missed you. It goes to show, we often 
don't appreciate the positive influence we have on events. But you are 
more than welcome, consider it payback and pass it on.

What we possibly need first of all is for someone to do a "Teach Me 
Teach Me" in the tutorial track, with myself and a number of the more 
experienced trainer types as the "subject matter experts". These things 
are always one-off in nature and it's unrealistic to expect that they 
will all have the same charm as "Teach Me Twisted" did this year for all 
the reasons I mention above, but if it gets information out more 
effectively about "difficult" topics it's probably worth a try if we can 
find someone to facilitate them.

regards
  Steve


> On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
>> I'd just like to thank the Twisted community for their support in 
>> yesterday's "Teach Me Twisted" Open Space session. To see the room 
>> still half-full of people talking animatedly about Python twenty 
>> minutes after the session ended was a great tribute to how interested 
>> people are in making Twisted work for them, and a reminder of what 
>> PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
>>
>> Couldn't have done it without you,guys, thanks a million.
>>
>> regards
>>  Steve




From faraz.khan at emergen.biz  Thu Mar 20 07:36:23 2008
From: faraz.khan at emergen.biz (Faraz Khan)
Date: Thu, 20 Mar 2008 16:36:23 +0500
Subject: [Twisted-Python] SetUID per XML RPC client
Message-ID: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>

Dear all,
What Im trying to do is the following. Please suggest whether this  
makes sense or not (I dont think it does- so am asking for  
suggestions!):

1. I have a XML RPC Server using xmlrpc.XMLRPC
2. Clients connect to it using SSL (am using reactor.listenSSL with a  
custom context factory)

3. This server (or agent) is being used for sys admin tasks. I want to  
connect, auth and then be able to do various sys admin tasks which the  
XMLRPC server lets them do.

4. What i wish to be able to do is that a UID/GID is set (based on  
their auth credentials) for that particular request.

I personally think this is impossible to do with threads. I have done  
something simliar using Fork & C though.

Doing os.setuid works but (obviously) changes the main process's UID  
which is not what I want.

Any advice would be highly appreciated.


-- 
Faraz R Khan
Chief Architect
Emergen Consulting Pvt Ltd
www.emergen.biz




From tdickenson at geminidataloggers.com  Thu Mar 20 11:32:02 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 20 Mar 2008 15:32:02 +0000
Subject: [Twisted-Python] Re: writing back to the connection is blocking my
	code
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com>
Message-ID: <fru01j$tb$1@ger.gmane.org>

coder_gus wrote:

> Ok, this link answered a few of my questions (stupid of me that I
> haven't looked on that before I posted), but my question still stands:
> how do I send data to a client whenever I want from wherever I want and
> that data to be send as fast as possible,

The code in the faq that glyph pointed you to will do what you want, if I
understand your requirements correctly. Heres the link again:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

> without the code waiting for 
> the reactor to answer to some events?

Your transmission *might* have to wait if the operating system transmit
buffers are already full, and, if so, the reactor is the mechanism which
means your new data can wait without blocking the whole process.






From glenn at tarbox.org  Thu Mar 20 11:36:57 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Thu, 20 Mar 2008 08:36:57 -0700
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E24B94.7090400@holdenweb.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
Message-ID: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>



On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
> glyph at divmod.com wrote:
> As I believe I mentioned early on, one of the issues is that the Twisted 
> core developers are so smart (I believe I may have used the phrase 
> "brains the size of planets"), and so knowledgeable about Twisted, that 
> it's difficult sometimes to get a 90% answer out of them. This was 
> particularly the case with Itamar, whom I lambasted quite mercilessly 
> (and whom I therefore owe a public apology: sorry, Itamar) when he tried 
> to complete all the corner cases after a slightly inaccurate statement 
> on my part that was perfectly good enough for a learner.

There is a great deal of anecdotal evidence that great players make poor
coaches.  

One of the biggest (glaring?) issues with Twisted is the abysmal state
of the documentation (none) making the code the best source... and
history is replete with the massive successes that approach has borne...

What documentation there is includes: "If you need to call a method that
returns a deferred within your callback chain, just return that
deferred, and the result of the secondary deferred's processing chain
will become the result that gets passed to the next callback of the
primary deferreds processing chain"

Now, the above is true and clear to those of us who know twisted... but
I've used that quote for levity... its simply incomprehensible... but
absolutely critical to understanding the power of twisted.  I'd say that
the current state of twisted documentation is in part represented by
that quote... and much of the reason twisted gets thrown out early as an
option.

(yet this same group complains that Git is too complex to be used for
source code control... even though its core architecture eclipses the
alternatives being used and considered...)

Clearly, the issues Twisted addresses are non-trivial requiring an
appreciation of the problem space before considering Twisted as a
solution (you gotta know there's a question before someone tells you the
answer)... unfortunately, the barrier to Twisted entry at that point
makes most walk away.  I've seen lots of threads concluding, simply,
that twisted looked interesting but was simply too dense to even get
started with... so, they go ahead and roll their own solution,
inevitably identifying the issues which form heart of the twisted
architecture, but being too far along to refactor.  And away we go.

Exacerbating the problem is the state of the twisted code base.  The
core itself is clean, high performance and great.  But, there's a large
percentage of the code base in various states of decay.  Some clearly
marked as no longer supported... but most simply marked "undocumented"
and much of the rest necessitating querying #twisted, hopefully at a
time when someone is available to answer questions... twisted-web
appears to be worse from a documentation perspective and I'm one of
those who chose to "just walk away" when a web framework was necessary.

For example, I've been playing with Twisted for a while now and only
recently stumbled upon AMP... perhaps thats a personal issue and I do
have fundamental intelligence limitations... but perhaps its
illustrative.

> What we possibly need first of all is for someone to do a "Teach Me 
> Teach Me" in the tutorial track, with myself and a number of the more 
> experienced trainer types as the "subject matter experts". These things 
> are always one-off in nature and it's unrealistic to expect that they 
> will all have the same charm as "Teach Me Twisted" did this year for all 
> the reasons I mention above, but if it gets information out more 
> effectively about "difficult" topics it's probably worth a try if we can 
> find someone to facilitate them.

What we need is a core documentation / presentation / communication
strategy to communicate what twisted is and a vehicle to support
education.  Handling conferences is a degenerate case which requires
extension with malt beverages.

> 
> regards
>   Steve
> 
> 
> > On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
> >> I'd just like to thank the Twisted community for their support in 
> >> yesterday's "Teach Me Twisted" Open Space session. To see the room 
> >> still half-full of people talking animatedly about Python twenty 
> >> minutes after the session ended was a great tribute to how interested 
> >> people are in making Twisted work for them, and a reminder of what 
> >> PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
> >>
> >> Couldn't have done it without you,guys, thanks a million.
> >>
> >> regards
> >>  Steve
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Glenn H. Tarbox, PhD
206-494-0819
glenn at tarbox.org




From lists at sourceillustrated.com  Thu Mar 20 14:08:24 2008
From: lists at sourceillustrated.com (John Wells)
Date: Thu, 20 Mar 2008 14:08:24 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>

On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
> One of the biggest (glaring?) issues with Twisted is the abysmal state
> of the documentation (none) making the code the best source... and
> history is replete with the massive successes that approach has borne...
>
>  Clearly, the issues Twisted addresses are non-trivial requiring an
>  appreciation of the problem space before considering Twisted as a
>  solution (you gotta know there's a question before someone tells you the
>  answer)... unfortunately, the barrier to Twisted entry at that point
>  makes most walk away.  I've seen lots of threads concluding, simply,
>  that twisted looked interesting but was simply too dense to even get
>  started with... so, they go ahead and roll their own solution,
>  inevitably identifying the issues which form heart of the twisted
>  architecture, but being too far along to refactor.  And away we go.
>
>  Exacerbating the problem is the state of the twisted code base.  The
>  core itself is clean, high performance and great.  But, there's a large
>  percentage of the code base in various states of decay.  Some clearly
>  marked as no longer supported... but most simply marked "undocumented"
>  and much of the rest necessitating querying #twisted, hopefully at a
>  time when someone is available to answer questions... twisted-web
>  appears to be worse from a documentation perspective and I'm one of
>  those who chose to "just walk away" when a web framework was necessary.
>
>  For example, I've been playing with Twisted for a while now and only
>  recently stumbled upon AMP... perhaps thats a personal issue and I do
>  have fundamental intelligence limitations... but perhaps its
>  illustrative.

This is indeed a shame. I come to Twisted an experienced Ruby and Java
developer in need for a event-driven networking framework. I had taken
a close look at ruby's EventMachine, which is modeled after Twisted,
but was strongly leaning towards Twisted *for* the documentation (and
the apparent stability and age of the project). At the very least,
Twisted has an Oreilly book and docs on the website (EM only provides
rdoc).

So, I bought the Oreilly book and Python in a Nutshell. I've made it
through the Nutshell book (I spent 3 months doing python back in 2003,
so it's not completely new to me). My next steps include the book
first and online docs second...but now am I to understand that both
are useless? Should I just dive into the code instead?

Here's to hoping at least the concepts are introduced effectively...

John



From drew.smathers at gmail.com  Thu Mar 20 14:21:00 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 14:21:00 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>

On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>
>
>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>
> > glyph at divmod.com wrote:
>  > As I believe I mentioned early on, one of the issues is that the Twisted
>  > core developers are so smart (I believe I may have used the phrase
>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>  > it's difficult sometimes to get a 90% answer out of them. This was
>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>  > to complete all the corner cases after a slightly inaccurate statement
>  > on my part that was perfectly good enough for a learner.
>
>  There is a great deal of anecdotal evidence that great players make poor
>  coaches.
>
>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>  of the documentation (none) making the code the best source... and
>  history is replete with the massive successes that approach has borne...
>

I think "abysmal" is really an overstatement. A lot of external
documentation for Twisted exists
(http://twistedmatrix.com/projects/core/documentation/howto/index.html)
- though some of it is indeed too esoteric for the casual beginner.
The twisted team realizes this and they are improving the
documentation and setting high standards for documenting new additions
to the library - take the initial doc string for amp as an example.

>  (yet this same group complains that Git is too complex to be used for
>  source code control... even though its core architecture eclipses the
>  alternatives being used and considered...)

Tangential, but I know of at least two Twisted developers who are
using Git.  The evaluation of version control tools usually includes
whether or not the tool works across platforms well - Git does not
eclipse the alternatives in this category.

>  For example, I've been playing with Twisted for a while now and only
>  recently stumbled upon AMP... perhaps thats a personal issue and I do
>  have fundamental intelligence limitations... but perhaps its
>  illustrative.

Agreed, AMP needs some external documentation alongside PB in the main
documentation page.  Maybe I'll contribute a document myself - unless
someone else is already working on such? -, since I find myself using
amp a lot these days.  There are instances when you want access to
remote objects where PB (or the newer foolscap) are great for - but
for functional command-dispatch based RPC, amp really shines.

>  What we need is a core documentation / presentation / communication
>  strategy to communicate what twisted is and a vehicle to support
>  education.  Handling conferences is a degenerate case which requires
>  extension with malt beverages.

Which takes time (writing good documentation is arguably harder than
writing good code) - and community support.  And time is money ... so
contribute to Twisted so they can hire more documentation experts :-)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From phil at bubblehouse.org  Thu Mar 20 14:27:19 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 20 Mar 2008 14:27:19 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>

On Mar 20, 2008, at 11:36 AM, Glenn H Tarbox, PhD wrote:
> One of the biggest (glaring?) issues with Twisted is the abysmal state
> of the documentation (none) making the code the best source... and
> history is replete with the massive successes that approach has  
> borne...
>
> What documentation there is includes: "If you need to call a method  
> that
> returns a deferred within your callback chain, just return that
> deferred, and the result of the secondary deferred's processing chain
> will become the result that gets passed to the next callback of the
> primary deferreds processing chain"
>
> Now, the above is true and clear to those of us who know twisted...  
> but
> I've used that quote for levity... its simply incomprehensible... but
> absolutely critical to understanding the power of twisted.  I'd say  
> that
> the current state of twisted documentation is in part represented by
> that quote... and much of the reason twisted gets thrown out early  
> as an
> option.

I think there's a lot of truth to this, but you can say the same thing  
about a vast number of open source projects. Not that it's an excuse,  
of course, but in most of the projects I can think of that have  
sufficient documentation, such a thing didn't occur until the software  
reached a critical mass of users.

The Twisted community is growing all the time, but it's still just a  
part of the Python community, which despite a number of high-profile  
Python projects, is still eclipsed by Java, Perl and (*shudder*) PHP.

As for the complexity of docstrings, I don't think anyone should be  
considering source code documentation equivalent to a formal tutorial,  
so I think the brevity (and assumption of existing knowledge) is  
pretty much warranted in that case.

> Clearly, the issues Twisted addresses are non-trivial requiring an
> appreciation of the problem space before considering Twisted as a
> solution (you gotta know there's a question before someone tells you  
> the
> answer)... unfortunately, the barrier to Twisted entry at that point
> makes most walk away.  I've seen lots of threads concluding, simply,
> that twisted looked interesting but was simply too dense to even get
> started with... so, they go ahead and roll their own solution,
> inevitably identifying the issues which form heart of the twisted
> architecture, but being too far along to refactor.  And away we go.

I completely agree with the first half of this paragraph, but I have a  
different perspective on the second.

I've been lurking on this mailing list for years, and what I see most  
often is people who do not even begin to understand the concept of  
asynchronous networking. *This* is the barrier to entry, and it's  
almost always the culprit when a potential user walks away from Twisted.

IIRC, at the time Twisted Python was created, thread support in Python  
was simply awful. Threads were absolutely not a solution for dealing  
with multiple client connections to a server application, and the only  
alternative was asyncore.

As many of you may remember, asyncore was not great, but it *was*  
simple. Writing an asyncore application required knowledge of maybe  
three different classes, so while you were working on understanding  
asynchronous networking, you didn't have to deal with learning a vast  
new API.

The problem I've seen with various responses from seasoned Twisted  
devs to unexperienced developers is that one can only explain why you  
don't want to use any kind of long-blocking call so many times. After  
that, answers start becoming glib and/or overly terse, but I can't  
really blame anyone for that.

There are a few introductory tutorials on asynchronous programming,  
but we could always use more. I almost wonder if it would be  
worthwhile to have an asyncore tutorial as the first step, so that  
users can be exposed to asynchronous programming through a simpler  
model, run into some problems, and then see how Twisted makes them all  
go away.

> Exacerbating the problem is the state of the twisted code base.  The
> core itself is clean, high performance and great.  But, there's a  
> large
> percentage of the code base in various states of decay.  Some clearly
> marked as no longer supported... but most simply marked "undocumented"
> and much of the rest necessitating querying #twisted, hopefully at a
> time when someone is available to answer questions... twisted-web
> appears to be worse from a documentation perspective and I'm one of
> those who chose to "just walk away" when a web framework was  
> necessary.

I definitely agree with you about the state of Twisted.Web. I think  
the culprit here is not entirely a shortage of documentation. The real  
problem is Web2.

Now, I am the last person to discourage total or near-total rewrites  
of stable codebases. I know I personally have made the choice to  
rewrite projects instead of fixing the things that are broken on a  
number of occasions, but the creation of the Web2 initiative has  
caused endless problems when explaining Twisted's web features to new  
users.

There's lots of good stuff in Web2, but its existence as a half- 
supported, half-unreleased project causes much confusion to new users,  
probably because they always assume that it's a choice between  
Twisted.Web 1.0 and Twisted.Web 2.0, which is obviously not the case.

The web situation is also exacerbated in some ways by Nevow being a  
separate project under the Divmod banner. Much of the greatness of a  
Twisted web stack (IMO) comes from using it with Nevow, and in this  
AJAX-crazed world we live in, Nevow.Athena could easily sell the whole  
web layer to anyone working on a heavily AJAX-oriented project.

Finally, now imagine yourself as a web developer who has never had to  
deal with asynchronous programming, or Twisted, or Twisted.Web; you  
don't know whether you should use web2 or not, and you've never heard  
of Athena.

Obviously, there's good reasons why these various things have happened  
over the years, but I really think documentation isn't enough to fix  
organizational issues. And, given the state of flux (apparent or  
actual) in the Twisted.Web arena, who wants to write extensive  
documentation that will be completely broken in a year?

(We all know why that line of thought is wrong, but it doesn't make it  
any less common...)

> For example, I've been playing with Twisted for a while now and only
> recently stumbled upon AMP... perhaps thats a personal issue and I do
> have fundamental intelligence limitations... but perhaps its
> illustrative.

I have to say, I still don't really know what AMP is, and I've asked a  
bunch of times. Maybe I actually do know, by now, but I've certainly  
forgotten.

> What we need is a core documentation / presentation / communication
> strategy to communicate what twisted is and a vehicle to support
> education.  Handling conferences is a degenerate case which requires
> extension with malt beverages.

I really think that doing this properly requires a core team of people  
at least as large as the core Twisted dev group. They would need to  
have both a knack for documentation and an understanding of somewhat  
low-level networking concepts, *and* an ability to read source code  
effectively.

Now, I don't mean to point out obstacles and say it's hopeless, but I  
think this relates to the critical mass I was talking about earlier. I  
think Twisted just needs to reach that level where there's enough  
people who want to write documentation that it gets done.

Other attempts to force the issue haven't really met with much  
success; I know there used to be (perhaps still are) a few bounties  
out there on documentation, but not much has happened in that arena  
since then. (Personally, I am anti-bounty, as I feel -- perhaps  
irrationally so -- that it cheapens the hours and hours of work that  
people have done for free.)

I think the best way for us to address this in the short term is to  
really try to focus on group documentation. The current Trac wiki can  
barely be called collaborative; as a start why not transfer the  
Twisted docs into the wiki, and allow Trac users to modify and update  
this information?

Furthermore, considering the length some of the posts I see here, I'd  
like to suggest that if you're going to spend 30 minutes writing an  
email explaining some concept, why not write a mini tutorial about it  
instead?

Even if you just copy and paste the email you were going to send into  
the wiki, it's still a start, and others can work on it from there.

You know what they say about documentation being like sex; when it's  
good it's great, but when it's bad it's still better than nothing ;-)...

-phil



From steve at holdenweb.com  Thu Mar 20 14:31:53 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 14:31:53 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
Message-ID: <fruaj0$b8c$1@ger.gmane.org>

Drew Smathers wrote:
> On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>>
>>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>>
>>> glyph at divmod.com wrote:
>>  > As I believe I mentioned early on, one of the issues is that the Twisted
>>  > core developers are so smart (I believe I may have used the phrase
>>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>>  > it's difficult sometimes to get a 90% answer out of them. This was
>>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>>  > to complete all the corner cases after a slightly inaccurate statement
>>  > on my part that was perfectly good enough for a learner.
>>
>>  There is a great deal of anecdotal evidence that great players make poor
>>  coaches.
>>
>>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>>  of the documentation (none) making the code the best source... and
>>  history is replete with the massive successes that approach has borne...
>>
Just let me interject here that I believe the attributions above make it 
look like *I* wrote the above. It doesn't align with my understanding of 
Twisted's documentation, which in my assessment has improved immensely 
over five years.

Sure enough, Glenn H Tarbox was the perpetrator: throw your rotten fruit 
at him, not me. I'm a *friend* of Twisted, for Pete's sake.

regards
  Steve





From steve at holdenweb.com  Thu Mar 20 15:19:51 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 15:19:51 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
Message-ID: <frudcv$mcs$1@ger.gmane.org>

Phil Christensen wrote:
> On Mar 20, 2008, at 11:36 AM, Glenn H Tarbox, PhD wrote:
>> One of the biggest (glaring?) issues with Twisted is the abysmal state
>> of the documentation (none) making the code the best source... and
>> history is replete with the massive successes that approach has borne...
>>
>> What documentation there is includes: "If you need to call a method that
>> returns a deferred within your callback chain, just return that
>> deferred, and the result of the secondary deferred's processing chain
>> will become the result that gets passed to the next callback of the
>> primary deferreds processing chain"
>>
Well, perhaps we can extend the conference session a little. [Drinks 
whisky].

So what you are saying is that a callback can find itself needing to 
return a result that is not yet immediately available. So it will return 
a deferred, whose callbacks and errbacks will be triggered in the 
standard way when the result becomes available ...

[Drinks more whisky]. Did Itamar write this? HELP!

>> Now, the above is true and clear to those of us who know twisted... but
>> I've used that quote for levity... its simply incomprehensible... but
>> absolutely critical to understanding the power of twisted.  I'd say that
>> the current state of twisted documentation is in part represented by
>> that quote... and much of the reason twisted gets thrown out early as an
>> option.
> 
I believe you've made your point, and one of the reasons I chose Twisted 
as the topic for the session was because the document doesn't show, if I 
may briefly channel Zed Shaw, how truly fucking amazing Twisted is.

The good news: this is a remediable deficiency.

The bad news: it has neither the glamor nor the appeal of hacking at the 
codeface.

Now you have a Foundation, consider having it sponsor (through the PSF 
is you aren't registered as a mentoring organization) someone to work on 
the docs in Summer of Code. Even trawling the mailing lists for useful 
material would yield some gems that could be used to improve things.

> I think there's a lot of truth to this, but you can say the same thing 
> about a vast number of open source projects. Not that it's an excuse, of 
> course, but in most of the projects I can think of that have sufficient 
> documentation, such a thing didn't occur until the software reached a 
> critical mass of users.
> 
> The Twisted community is growing all the time, but it's still just a 
> part of the Python community, which despite a number of high-profile 
> Python projects, is still eclipsed by Java, Perl and (*shudder*) PHP.
> 
Some things are simply better not documented.

> As for the complexity of docstrings, I don't think anyone should be 
> considering source code documentation equivalent to a formal tutorial, 
> so I think the brevity (and assumption of existing knowledge) is pretty 
> much warranted in that case.
> 
>> Clearly, the issues Twisted addresses are non-trivial requiring an
>> appreciation of the problem space before considering Twisted as a
>> solution (you gotta know there's a question before someone tells you the
>> answer)... unfortunately, the barrier to Twisted entry at that point
>> makes most walk away.  I've seen lots of threads concluding, simply,
>> that twisted looked interesting but was simply too dense to even get
>> started with... so, they go ahead and roll their own solution,
>> inevitably identifying the issues which form heart of the twisted
>> architecture, but being too far along to refactor.  And away we go.
> 
> I completely agree with the first half of this paragraph, but I have a 
> different perspective on the second.
> 
> I've been lurking on this mailing list for years, and what I see most 
> often is people who do not even begin to understand the concept of 
> asynchronous networking. *This* is the barrier to entry, and it's almost 
> always the culprit when a potential user walks away from Twisted.
> 
That's true, and I tried to get this across using the analogy of a GUI 
interface to explain the event-driven nature of Twisted. This was fine 
for people who had done GUI programming, but Glyph later gave me an 
email analogy which would work far better for those who hadn't.

One of the distinguishing features of *great* documentation is that it 
provides the same information in ways that make it accessible to 
different audiences.

> IIRC, at the time Twisted Python was created, thread support in Python 
> was simply awful. Threads were absolutely not a solution for dealing 
> with multiple client connections to a server application, and the only 
> alternative was asyncore.
> 
And Twisted is still a way better solution even now.

> As many of you may remember, asyncore was not great, but it *was* 
> simple. Writing an asyncore application required knowledge of maybe 
> three different classes, so while you were working on understanding 
> asynchronous networking, you didn't have to deal with learning a vast 
> new API.
> 
> The problem I've seen with various responses from seasoned Twisted devs 
> to unexperienced developers is that one can only explain why you don't 
> want to use any kind of long-blocking call so many times. After that, 
> answers start becoming glib and/or overly terse, but I can't really 
> blame anyone for that.
> 
Except those who failed to extract the kernel of these three thousand 
answers and incorporate it into the documentation. If it's a failure 
it's a common one, and it's distributed throughout the community.

> There are a few introductory tutorials on asynchronous programming, but 
> we could always use more. I almost wonder if it would be worthwhile to 
> have an asyncore tutorial as the first step, so that users can be 
> exposed to asynchronous programming through a simpler model, run into 
> some problems, and then see how Twisted makes them all go away.
> 
>> Exacerbating the problem is the state of the twisted code base.  The
>> core itself is clean, high performance and great.  But, there's a large
>> percentage of the code base in various states of decay.  Some clearly
>> marked as no longer supported... but most simply marked "undocumented"
>> and much of the rest necessitating querying #twisted, hopefully at a
>> time when someone is available to answer questions... twisted-web
>> appears to be worse from a documentation perspective and I'm one of
>> those who chose to "just walk away" when a web framework was necessary.
> 
> I definitely agree with you about the state of Twisted.Web. I think the 
> culprit here is not entirely a shortage of documentation. The real 
> problem is Web2.
> 
> Now, I am the last person to discourage total or near-total rewrites of 
> stable codebases. I know I personally have made the choice to rewrite 
> projects instead of fixing the things that are broken on a number of 
> occasions, but the creation of the Web2 initiative has caused endless 
> problems when explaining Twisted's web features to new users.
> 
> There's lots of good stuff in Web2, but its existence as a 
> half-supported, half-unreleased project causes much confusion to new 
> users, probably because they always assume that it's a choice between 
> Twisted.Web 1.0 and Twisted.Web 2.0, which is obviously not the case.
> 
> The web situation is also exacerbated in some ways by Nevow being a 
> separate project under the Divmod banner. Much of the greatness of a 
> Twisted web stack (IMO) comes from using it with Nevow, and in this 
> AJAX-crazed world we live in, Nevow.Athena could easily sell the whole 
> web layer to anyone working on a heavily AJAX-oriented project.
> 
> Finally, now imagine yourself as a web developer who has never had to 
> deal with asynchronous programming, or Twisted, or Twisted.Web; you 
> don't know whether you should use web2 or not, and you've never heard of 
> Athena.
> 
> Obviously, there's good reasons why these various things have happened 
> over the years, but I really think documentation isn't enough to fix 
> organizational issues. And, given the state of flux (apparent or actual) 
> in the Twisted.Web arena, who wants to write extensive documentation 
> that will be completely broken in a year?
> 
Nobody. If anyone offers, back away, smiling.

> (We all know why that line of thought is wrong, but it doesn't make it 
> any less common...)
> 
>> For example, I've been playing with Twisted for a while now and only
>> recently stumbled upon AMP... perhaps thats a personal issue and I do
>> have fundamental intelligence limitations... but perhaps its
>> illustrative.
> 
> I have to say, I still don't really know what AMP is, and I've asked a 
> bunch of times. Maybe I actually do know, by now, but I've certainly 
> forgotten.
> 
>> What we need is a core documentation / presentation / communication
>> strategy to communicate what twisted is and a vehicle to support
>> education.  Handling conferences is a degenerate case which requires
>> extension with malt beverages.
> 
> I really think that doing this properly requires a core team of people 
> at least as large as the core Twisted dev group. They would need to have 
> both a knack for documentation and an understanding of somewhat 
> low-level networking concepts, *and* an ability to read source code 
> effectively.
> 
> Now, I don't mean to point out obstacles and say it's hopeless, but I 
> think this relates to the critical mass I was talking about earlier. I 
> think Twisted just needs to reach that level where there's enough people 
> who want to write documentation that it gets done.
> 
> Other attempts to force the issue haven't really met with much success; 
> I know there used to be (perhaps still are) a few bounties out there on 
> documentation, but not much has happened in that arena since then. 
> (Personally, I am anti-bounty, as I feel -- perhaps irrationally so -- 
> that it cheapens the hours and hours of work that people have done for 
> free.)
> 
> I think the best way for us to address this in the short term is to 
> really try to focus on group documentation. The current Trac wiki can 
> barely be called collaborative; as a start why not transfer the Twisted 
> docs into the wiki, and allow Trac users to modify and update this 
> information?
> 
> Furthermore, considering the length some of the posts I see here, I'd 
> like to suggest that if you're going to spend 30 minutes writing an 
> email explaining some concept, why not write a mini tutorial about it 
> instead?
> 
[Is that the sun starting to brighten the night sky over the horizon?]

> Even if you just copy and paste the email you were going to send into 
> the wiki, it's still a start, and others can work on it from there.
> 
> You know what they say about documentation being like sex; when it's 
> good it's great, but when it's bad it's still better than nothing ;-)...
> 
And when you haven't had any for years you will even read the Twisted 
documentation ;-)

regards
  Steve




From warner at lothar.com  Thu Mar 20 15:45:45 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 20 Mar 2008 12:45:45 -0700
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
Message-ID: <20080320124545.7c2c9961@fluxx.allmydata.com>

On Wed, 19 Mar 2008 20:14:09 -0600
Nathan <nathan.stocks at gmail.com> wrote:

> The security properties that I want are:
> 
> 1) My client and my server refuse to establish SSL (or any other type
> of) connections with anybody but each other.
> 2) My client and server do establish SSL connections with each other.

For reference, this is almost exactly what Foolscap does. The server
registers an object and gets back a "FURL" which contains two cryptographic
values: the hash of the SSL certificate, and the per-object secret. You give
this FURL to the client by some out-of-band means (paste it into a config
file, perhaps). Then the client connects to the server over SSL, verifies the
certificate hash, sends the secret, and gets back a reference to the object.

The client will refuse to use any connection that has a different SSL
certificate. It will also refuse to use a non-SSL connection.

The part where the capability-oriented Foolscap model differs from your
stated properties is that the server makes no attempt to distinguish between
various clients. Any client which knows the FURL will be granted access to
the object that you've registered. To accomplish both of your goals, simply
don't reveal the FURL to anyone but your desired client. Unauthorized clients
will be able to make an SSL connection to the server but they won't know the
object secret and will be unable to access the object.

If you use Foolscap, you'll be working with objects and remote method calls,
rather than the single-endpoint model that AMP uses. This may be more
flexibility than you really need, but if you only publish one object and
always call a single method (perhaps called 'dispatch'), then you can program
in the same style. Of course, when you want to use multiple objects, pass
arbitrary reference graphs in arguments and responses, or allow third-party
introductions, Foolscap will be ready for you :).

http://foolscap.lothar.com/trac


cheers,
 -Brian



From nico at teknico.net  Thu Mar 20 16:56:33 2008
From: nico at teknico.net (Nicola Larosa)
Date: Thu, 20 Mar 2008 21:56:33 +0100
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <20080320205637.38A7112401B@slice.teknico.net>

Glenn H Tarbox wrote:
> (yet this same group complains that Git is too complex to be used for
> source code control... even though its core architecture eclipses the
> alternatives being used and considered...)

Seeing Pythonistas using git saddens me a little.

Mercurial is git done right.

-- 
Nicola Larosa - http://www.tekNico.net/

Not only is Vista + Office the most bloated desktop software stack
ever to emerge from Redmond, its system requirements are so out of
proportion with recent hardware trends that only the latest and
greatest from Intel or AMD can support its epically porcine girth.
 -- exo.blog research staff, November 2007





From drew.smathers at gmail.com  Thu Mar 20 16:39:36 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 16:39:36 -0400
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
Message-ID: <368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>

On Thu, Mar 20, 2008 at 4:38 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Thu, Mar 20, 2008 at 3:45 PM, Brian Warner <warner at lothar.com> wrote:
>  > On Wed, 19 Mar 2008 20:14:09 -0600
>  >  Nathan <nathan.stocks at gmail.com> wrote:
>  >
>  >  > The security properties that I want are:
>  >  >
>  >  > 1) My client and my server refuse to establish SSL (or any other type
>  >  > of) connections with anybody but each other.
>  >  > 2) My client and server do establish SSL connections with each other.
>  >
>  >  For reference, this is almost exactly what Foolscap does. The server
>  >  registers an object and gets back a "FURL" which contains two cryptographic
>  >  values: the hash of the SSL certificate, and the per-object secret. You give
>  >  this FURL to the client by some out-of-band means (paste it into a config
>  >  file, perhaps). Then the client connects to the server over SSL, verifies the
>  >  certificate hash, sends the secret, and gets back a reference to the object.
>  >
>  >  The client will refuse to use any connection that has a different SSL
>  >  certificate. It will also refuse to use a non-SSL connection.
>  >
>  >  The part where the capability-oriented Foolscap model differs from your
>  >  stated properties is that the server makes no attempt to distinguish between
>  >  various clients. Any client which knows the FURL will be granted access to
>  >  the object that you've registered. To accomplish both of your goals, simply
>  >  don't reveal the FURL to anyone but your desired client. Unauthorized clients
>  >  will be able to make an SSL connection to the server but they won't know the
>  >  object secret and will be unable to access the object.
>  >
>  >  If you use Foolscap, you'll be working with objects and remote method calls,
>  >  rather than the single-endpoint model that AMP uses. This may be more
>  >  flexibility than you really need, but if you only publish one object and
>  >  always call a single method (perhaps called 'dispatch'), then you can program
>  >  in the same style. Of course, when you want to use multiple objects, pass
>  >  arbitrary reference graphs in arguments and responses, or allow third-party
>  >  introductions, Foolscap will be ready for you :).
>  >
>
>  Now that foolscap has been brought up  ... since foolscap doesn't try
>  to poke through firewalls, there seems to be some deployment issues
>  when using this in say an MMO where you can't guarantee that
>  participants in the system will be able talk to each other directly
>  without tunneling through a central server.  The way foolscap works
>  (if I understand correctly), a server A can introduce a client B to C
>  by passing B the FURL to some object hosted in B's tub.  Is it sane
>  the best way to handle the scenario when B and C can't establish a
>  connection to each other (one or both are behind a NAT), but both
>  trust A to make a  proxy reference  to the other on the server and
>  simply route the conversation.  Does foolscap already support such
>  fall-back behavior for coping with firewalls?  Or does that break the
>  security model?
>

Woops, correction:

"server A can introduce a client B to C by passing B the FURL to some
object hosted in C's tub"

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From drew.smathers at gmail.com  Thu Mar 20 16:38:30 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 16:38:30 -0400
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <20080320124545.7c2c9961@fluxx.allmydata.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
Message-ID: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>

On Thu, Mar 20, 2008 at 3:45 PM, Brian Warner <warner at lothar.com> wrote:
> On Wed, 19 Mar 2008 20:14:09 -0600
>  Nathan <nathan.stocks at gmail.com> wrote:
>
>  > The security properties that I want are:
>  >
>  > 1) My client and my server refuse to establish SSL (or any other type
>  > of) connections with anybody but each other.
>  > 2) My client and server do establish SSL connections with each other.
>
>  For reference, this is almost exactly what Foolscap does. The server
>  registers an object and gets back a "FURL" which contains two cryptographic
>  values: the hash of the SSL certificate, and the per-object secret. You give
>  this FURL to the client by some out-of-band means (paste it into a config
>  file, perhaps). Then the client connects to the server over SSL, verifies the
>  certificate hash, sends the secret, and gets back a reference to the object.
>
>  The client will refuse to use any connection that has a different SSL
>  certificate. It will also refuse to use a non-SSL connection.
>
>  The part where the capability-oriented Foolscap model differs from your
>  stated properties is that the server makes no attempt to distinguish between
>  various clients. Any client which knows the FURL will be granted access to
>  the object that you've registered. To accomplish both of your goals, simply
>  don't reveal the FURL to anyone but your desired client. Unauthorized clients
>  will be able to make an SSL connection to the server but they won't know the
>  object secret and will be unable to access the object.
>
>  If you use Foolscap, you'll be working with objects and remote method calls,
>  rather than the single-endpoint model that AMP uses. This may be more
>  flexibility than you really need, but if you only publish one object and
>  always call a single method (perhaps called 'dispatch'), then you can program
>  in the same style. Of course, when you want to use multiple objects, pass
>  arbitrary reference graphs in arguments and responses, or allow third-party
>  introductions, Foolscap will be ready for you :).
>

Now that foolscap has been brought up  ... since foolscap doesn't try
to poke through firewalls, there seems to be some deployment issues
when using this in say an MMO where you can't guarantee that
participants in the system will be able talk to each other directly
without tunneling through a central server.  The way foolscap works
(if I understand correctly), a server A can introduce a client B to C
by passing B the FURL to some object hosted in B's tub.  Is it sane
the best way to handle the scenario when B and C can't establish a
connection to each other (one or both are behind a NAT), but both
trust A to make a  proxy reference  to the other on the server and
simply route the conversation.  Does foolscap already support such
fall-back behavior for coping with firewalls?  Or does that break the
security model?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From pahan at xzrq.net  Thu Mar 20 17:19:46 2008
From: pahan at xzrq.net (Pavel Pergamenshchik)
Date: Thu, 20 Mar 2008 16:19:46 -0500
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
Message-ID: <7447a0ac0803201419k3921a26bhfedf555136b25297@mail.gmail.com>

On 3/20/08, Drew Smathers <drew.smathers at gmail.com> wrote:
> Now that foolscap has been brought up  ... since foolscap doesn't try
>  to poke through firewalls, there seems to be some deployment issues
>  when using this in say an MMO where you can't guarantee that
>  participants in the system will be able talk to each other directly
>  without tunneling through a central server.

As far as I know, there is no MMO that requires clients to talk
directly to each other. Are you writing such a thing? What benefit is
client-to-client communication is going to give you?



From andrewfr_ice at yahoo.com  Thu Mar 20 17:24:21 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 20 Mar 2008 14:24:21 -0700 (PDT)
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <E1JcQJI-0006BJ-Mt@cube.twistedmatrix.com>
Message-ID: <399189.25669.qm@web34203.mail.mud.yahoo.com>

Hi Folks:

>  Clearly, the issues Twisted addresses are
non->trivial requiring an appreciation of the problem
>space before considering Twisted as a solution (you
>gotta know there's a question before someone tells
you
> the  answer)... unfortunately, the barrier to
>Twisted entry at that point makes most walk away.
>I've seen lots of threads concluding, simply,
>that twisted looked interesting but was simply too
>dense to even get started with... so, they go ahead
>and roll their own solution,  inevitably identifying
>the issues which form heart of the twisted  
>architecture, but being too far along to refactor. 
>And away we go.

I have barely scratched the surface of Twisted - some
of my experiences and suggestions:

1) I found that Abe Fettig's book was a set of good
training wheels. Not as good as say, Richard Steven's
"UNIX Network Programming" that really saved my bacon
when I was first learning socket programming. However
Fettig's book is good in the sense that I can find a
concrete example (HTTP RequestHandler), modify it a
bit and it does something useful. Gets me going while
I learn. Newbies need to build confidence with quick
successes.

Now I go to Twisted documentation that makes far more
sense as I need much more technical detail about what
Twisted is doing.

If I had to alter Twisted documentation, I would make
much of the stuff do concrete things, like get a web
page. 

Perhaps I would, through surveys, pick the ten most
common things new developers want to do, and show
examples.

2) Pictures. Both Twisted documentation and Fettig's
book lack pictures. 

When I was looking for a bug involving a Twisted call
that never fired the callback, I took notes, peppered
Twisted with logging statements, used a debugger and
asked questions, lots of questions. The resulting
control flow picture was sufficiently different from
what I had in mind.

That said, I would be tempted to do a simple client
example and server example and illustrate the control
flow, carefully matching the drawings with the
illustrations. I know this is tough. 

Idioms:

Perhaps this is closely related with common examples,
but show common idioms. For example, how to call a
database or a web server from a request handler. Or
scheduling work with reactor.callLater or Tasks.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From ellisonbg.net at gmail.com  Thu Mar 20 17:28:27 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 20 Mar 2008 15:28:27 -0600
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>

On Thu, Mar 20, 2008 at 9:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>
>
>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>
> > glyph at divmod.com wrote:
>  > As I believe I mentioned early on, one of the issues is that the Twisted
>  > core developers are so smart (I believe I may have used the phrase
>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>  > it's difficult sometimes to get a 90% answer out of them. This was
>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>  > to complete all the corner cases after a slightly inaccurate statement
>  > on my part that was perfectly good enough for a learner.
>
>  There is a great deal of anecdotal evidence that great players make poor
>  coaches.
>
>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>  of the documentation (none) making the code the best source... and
>  history is replete with the massive successes that approach has borne...

I disagree with this evaluation.  While parts of Twisted could be
better documented, overall, it is pretty darn good for an open source
project that addresses a problem as difficult as asynchronous
networking.  How many open source projects have a book?

>  What documentation there is includes: "If you need to call a method that
>  returns a deferred within your callback chain, just return that
>  deferred, and the result of the secondary deferred's processing chain
>  will become the result that gets passed to the next callback of the
>  primary deferreds processing chain"
>
>  Now, the above is true and clear to those of us who know twisted... but
>  I've used that quote for levity... its simply incomprehensible... but
>  absolutely critical to understanding the power of twisted.  I'd say that
>  the current state of twisted documentation is in part represented by
>  that quote... and much of the reason twisted gets thrown out early as an
>  option.

Asynchronous networking is simply hard.  And Twisted has a very
sophisticated take on it.  Saying the problem is the documentation is
like someone saying "quantum mechanics is poorly documented...all that
talk about Hilbert spaces, eigenstates and superposition..."  It is
not poorly documented, it is simply hard and conceptually challenging.

Also, I think the proof is in the pudding.  Most people who really
need Twisted for their projects _are_ in fact able to learn it (for
the most part without reading the source code).  The documentation
can't be that bad.  Doesn't mean there is not room for improvement
though.


Brian



From coder_gus at lavabit.com  Thu Mar 20 18:50:27 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 00:50:27 +0200
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <fru01j$tb$1@ger.gmane.org>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>
Message-ID: <47E2EA33.9030400@lavabit.com>

Well, by default the Nagle algorithm is turned off so it should transmit 
the data asap. I don't think it's OS dependent.

Toby Dickenson wrote:
> coder_gus wrote:
>
>   
>> Ok, this link answered a few of my questions (stupid of me that I
>> haven't looked on that before I posted), but my question still stands:
>> how do I send data to a client whenever I want from wherever I want and
>> that data to be send as fast as possible,
>>     
>
> The code in the faq that glyph pointed you to will do what you want, if I
> understand your requirements correctly. Heres the link again:
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
>
>   
>> without the code waiting for 
>> the reactor to answer to some events?
>>     
>
> Your transmission *might* have to wait if the operating system transmit
> buffers are already full, and, if so, the reactor is the mechanism which
> means your new data can wait without blocking the whole process.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________
> Save hundreds on an Unsecured Loan - Click here.
> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/
> ____________________________________________________________________________________
>   




From warner at lothar.com  Thu Mar 20 18:59:17 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 20 Mar 2008 15:59:17 -0700
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
	<368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>
Message-ID: <20080320155917.676e87e8@fluxx.allmydata.com>


> >  Does foolscap already support such fall-back behavior for coping with
> >  firewalls? Or does that break the security model?

Not yet, and yes.

> "server A can introduce a client B to C by passing B the FURL to some
> object hosted in C's tub"

A motivating use case would be a chat system, in which the central server was
used to introduce clients to each other, and all messages were sent directly
from one client to another. B and C might be two separate clients, and the
point of introduction is when B wants to connect to C.

The server can stash a reference to an object in C's tub, or a FURL to that
object that was generated by C. It can then send one of these to B (perhaps
as an argument to publish message, or a response to a "get all connected
clients" request message). The gift/introduction code in Foolscap lets you
send live references (i.e. RemoteReference instances) to third parties, and
in the current release this causes the FURL of the target to be delivered and
automatically connected to.

But of course this requires that the recipient of the gift be able to connect
to the target, and if that target is behind a firewall then the introduction
will fail.

We don't have any sort of relay or hole-punching code in place yet. As a
result, in Tahoe (http://allmydata.org), the few places that use Introduction
are careful to arrange for the target of the introduction (the "gift") to be
on the publically-visible server, rather than on the probably-behind-NAT
client.

Possible solutions:

1: non-Membrane plaintext Forwarder

   It is pretty easy to build a server-side proxy (called a Forwarder) that
   has a doRemoteCall() method that just echoes the request on to another
   object. Each time B sends a message to that-which-they-think-is-C, really
   they're sending it to a Forwarder on A, and the Forwarder sends the
   request on to C, gets the response, and forwards the response back to B.

   This takes about 5 lines of code:

     class Forwarder(Referenceable):
       def __init__(self, target):
         self.target = target
       def doRemoteCall(self, methname, args, kwargs):
         return self.target.callRemote(methname, *args, **kwargs)

   The first disadvantage is that the Forwarder gets to see (and control) all
   messages, so you're vulnerable to it for confidentiality and integrity.
   The second disadvantage is that if there are other object references in
   the arguments or the responses, those need to be wrapped in Forwarders
   too. This is a job for the "Membrane" pattern.

2: yes-Membrane plaintext Forwarder

   Eventually Foolscap will have utility functions for building easy
   membranes, but not yet. (foolscap ticket #44). Having this would remove
   the prohibitions on putting object references in your arguments and return
   values, but doesn't remove the vulnerability to the forwarder.

3: per-message ciphertext proxy

   Like the Forwarder, but you change the client to encrypt all its messages
   first, and the server to decrypt them. This keeps the proxy from seeing
   the contents of the messages. Encrypt the responses too. Add more crypto
   goo to make sure the proxy can't corrupt either.

   Foolscap has some support for serializing arbitrary object graphs, which
   would help. The "Sealer/Unsealer" code (foolscap ticket #20) that is under
   development will handle both the serialization and the encryption. You'd
   need some extra layer to figure out what keys to use.

4: server-side per-Tub ciphertext proxy

   The Foolscap negotiation protocol is specifically designed to provide for
   multiple Tubs listening on the same port. We build a Relay process to
   which the NAT-bound Tubs can attach, registering themselves with a (tubid,
   listener_rref) tuple. This listener_rref object has a single accept()
   method, which returns a handler_rref object. When B wants to connect to C,
   the FURL it uses will contain C's tubid but will have connection hints
   that point to the relay's listening socket. When B connects to the relay
   and says it wants to talk to tubidC, the relay (during the negotiation
   process) tells the listener_rref that it wants a new connection, gets the
   handler_rref, then switches into a simple proxy mode where it copies data
   from the B-side connection into remote_write() messages sent to the
   handler_rref. On C, the contents of these messages are written into a
   loopback TCP socket that mimics the data being exchanged between B and the
   relay. Responses generated by C get proxied backwards to the relay over
   the same connection.

   This requires more code, but it's the "right way to do it" for relay. The
   intermediate relay doesn't get to see or corrupt the traffic that it is
   carrying, and the remote objects on B and C don't need to be aware that
   anything unusual is going on. C needs to register with the relay, and the
   FURL needs to be created with the right connection hints, but that can be
   done once at startup (instead of requiring that every single message be
   specially encrypted).

   This one is tracked with foolscap ticket #46, copied directly from this
   note.


cheers,
 -Brian



From maarten at treewalker.org  Thu Mar 20 20:36:14 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 21 Mar 2008 01:36:14 +0100
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
Message-ID: <200803210136.21046.maarten@treewalker.org>

On Thursday 20 March 2008, John Wells wrote:

> So, I bought the Oreilly book and Python in a Nutshell. I've made it
> through the Nutshell book (I spent 3 months doing python back in 2003,
> so it's not completely new to me). My next steps include the book
> first and online docs second...but now am I to understand that both
> are useless? Should I just dive into the code instead?

Although they are not perfect, they are certainly not useless.

The snake ball book gives a lot of examples of things you can do with 
Twisted. It doesn't go very deep into the fundamentals: deferreds, 
transports, protocols and Zope interfaces are all important building blocks 
in Twisteed and of these, only deferreds are explained in some detail. It 
doesn't go very deep into web servers either, but that's not really the 
book's fault (page 54 explains the problem). The book is from 2005, so 
recent developments like inlineCallbacks and AMP are not in it.

All in all, the book is quite useful in my opinion if you want to get a 
quick start implementing some kind of server or client using Twisted. Just 
don't expect that this book is all you'll need.

As for the online docs, the "finger" tutorial was very effective for me in 
demonstrating the power of Twisted: how you can get a lot of functionality 
in only a few lines of code. And it also shows that this power comes from 
modular design with good interfaces, not from having "skinnable" 
implementations that become useless as soon as you want to do something 
slightly different.

The explanation of deferreds is also decent in my opinion. It took me a 
while to really grasp it, but that's probably more of a lack of experience 
in asynchronous programming than a deficiency of the documentation.

The API docs are better than many other open source projects have them. 
However, because Twisted is a large collection of small modules and highly 
abstract in places, the API docs are only useful if you know what you are 
looking for.

As for reading the source code, for most projects that translates to "you're 
out of luck", but the Twisted source code is actually surprisingly easy to 
read. It has the same problem as the API docs though: if you don't know 
what you are looking for exactly, it's unlikely you'll find it.


Some documentation I would like to read:

- what is the point of the Zope interfaces? is it mainly for documentation 
purposes? I read some things about being able to automatically adapt from 
one interface to another, but where is that used in practice? the only 
thing I used it for so far is to attach information to an HTTP session 
object

- the design behind "cred", especially the authorization part: what exactly 
is an avatar, how do you implement one and how do you use one?

- the design behind taps: what is a tap exactly? why all the different 
types? does it require serialization or could I write one by hand? how 
should my program be written to be "tappable"?

- what is AMP and in what way is it different from PB, foolscap, xmlrpc?

If this already exists, please point me to it. Otherwise, if you know 
something about the subject and would like to write about it, I would 
really appreciate it.


If there is any documentation I can proof read or edit, please let me know. 
I've been using Twisted for a couple of years, but I have only seen very 
small parts of its API, so writing a document from scratch would take too 
much time, but I'm willing to take on smaller tasks.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080321/e027ac3d/attachment.pgp 

From glyph at divmod.com  Thu Mar 20 21:06:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:06:23 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
Message-ID: <20080321010623.21558.999660194.divmod.xquotient.8509@joule.divmod.com>

On 20 Mar, 06:08 pm, lists at sourceillustrated.com wrote:
>So, I bought the Oreilly book and Python in a Nutshell. I've made it
>through the Nutshell book (I spent 3 months doing python back in 2003,
>so it's not completely new to me). My next steps include the book
>first and online docs second...but now am I to understand that both
>are useless? Should I just dive into the code instead?

No, absolutely not.

We have a useful FAQ and some useful tutorial documents.  For example, 
Moshe Zadka's "finger" tutorial (while not perfect) is an excellent 
example of how to use Twisted, and its multi-layered approach:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

This is the first google hit for "twisted tutorial".

The first google hit for "writing servers", by the way:

  http://twistedmatrix.com/projects/core/documentation/howto/servers.html

is a great low-level introduction to Twisted's core concepts.

Of course, like any large project, the documentation for different parts 
of Twisted is going to vary a lot.  But it would be a gross 
overstatement to say there's no documentation or that it's completely 
useless.



From glyph at divmod.com  Thu Mar 20 21:12:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:12:43 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <fruaj0$b8c$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
	<fruaj0$b8c$1@ger.gmane.org>
Message-ID: <20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>


On 20 Mar, 06:31 pm, steve at holdenweb.com wrote:
>Sure enough, Glenn H Tarbox was the perpetrator: throw your rotten 
>fruit at him, not me. I'm a *friend* of Twisted, for Pete's sake.

I believe the honorable Dr. Tarbox actually qualifies as a Bronze 
founding sponsor of the TSF, so at this point I don't think he's yet 
overstepped the amount of crap he's allowed to give us.  Although 
perhaps future vitriol could be saved for the sponsors list we are in 
the process of setting up, and in the more productive form of feature 
requests :).

(Thanks, Glenn!  Do you want to send us a logo, perhaps a signature, to 
put on the front page?)



From glyph at divmod.com  Thu Mar 20 21:29:57 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:29:57 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
Message-ID: <20080321012957.21558.1045077775.divmod.xquotient.8551@joule.divmod.com>


On 20 Mar, 06:27 pm, phil at bubblehouse.org wrote:
>I've been lurking on this mailing list for years, and what I see most 
>often is people who do not even begin to understand the concept of 
>asynchronous networking. *This* is the barrier to entry, and it's 
>almost always the culprit when a potential user walks away from 
>Twisted.

Yes.  We need more intermediate users to help the beginners.  The 
problem with the Twisted dev team is that we now have a collection of 
amazing, unbelievably gifted, genius Master-level developers, honed by 
the continual mutual improvement of the review process.  However, people 
with such exospheric skills (a layer of the atmosphere named, I believe, 
after exarkun's brain) get tired of answering simple, repetitive 
questions from impatient and confused novices.

This is a good problem to have, but it's still a problem.

If you know some things about Twisted but you're not really an expert 
yet, you should really help others learn by answering questions on this 
list and on IRC.   It would decrease the pressure on people whose time 
would be better spent answering the really, really hard questions, or 
better yet fixing bugs so that the hard questions won't even come up.
>IIRC, at the time Twisted Python was created, thread support in Python 
>was simply awful. Threads were absolutely not a solution for dealing 
>with multiple client connections to a server application, and the only 
>alternative was asyncore.

I don't think that Python's thread support was that awful, nor that it 
has changed that much since then.  Are you referring to the GIL? 
Anyway, if you are, let's not talk about this any more.
>As many of you may remember, asyncore was not great, but it *was* 
>simple. Writing an asyncore application required knowledge of maybe 
>three different classes, so while you were working on understanding 
>asynchronous networking, you didn't have to deal with learning a vast 
>new API.

Twisted is actually simpler than asyncore by a fair margin.  Compare a 
Twisted echo server to an asyncore echoserver.  Twisted has _more stuff 
in it_ than Asyncore does, but it is a lot easier to use, as well as 
more portable, for the application programmer.  (You still need to know 
about WSA errors on Windows if you want to use asyncore, for example.)
>The problem I've seen with various responses from seasoned Twisted 
>devs to unexperienced developers is that one can only explain why you 
>don't want to use any kind of long-blocking call so many times. After 
>that, answers start becoming glib and/or overly terse, but I can't 
>really blame anyone for that.

This is the problem I mentioned above.
>I definitely agree with you about the state of Twisted.Web. I think 
>the culprit here is not entirely a shortage of documentation. The real 
>problem is Web2.
><snip blah blah blah web web2 confusion etc>

We talked a lot about this at PyCon.  I don't want to bury the 
resolution here, in the middle of a thread that a lot of people have 
probably already killfiled, but this problem _is_ recognized as a 
priority and _is_ getting solved, thanks in large part to the renewed 
efforts of David Reid, James Knight, and Wilfredo Sanchez.

I'll try to scream it from the rooftops as soon as I can.
>I have to say, I still don't really know what AMP is, and I've asked a 
>bunch of times. Maybe I actually do know, by now, but I've certainly 
>forgotten.

First google hit for "twisted amp":

http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

Perhaps there should be more documentation, but I think that's a good 
introductory explanation.
>I really think that doing this properly requires a core team of people 
>at least as large as the core Twisted dev group. They would need to 
>have both a knack for documentation and an understanding of somewhat 
>low-level networking concepts, *and* an ability to read source code 
>effectively.

Absolutely.  But - an important note - these people DO NOT need to be 
deep Twisted wizards on the level of JP, me, Chris Armstrong or whoever; 
they can just have a passing familiarity with the concepts and the 
capacity to ask and answer questions when necessary.
>Now, I don't mean to point out obstacles and say it's hopeless, but I 
>think this relates to the critical mass I was talking about earlier. I 
>think Twisted just needs to reach that level where there's enough 
>people who want to write documentation that it gets done.

One of the things I did at PyCon was to reach out to the Django 
community and ask them to start considering what it would take for 
Twisted to be the preferred container and deployment platform for 
Django.  They're thinking about it.  I hope we can keep that dialogue 
going.

Supporting other Python frameworks (especially web frameworks) would 
provide us with a much broader audience of people with a different skill 
set.  Unfortunately 99% of those people will have zero interest in 
asynchronous networking, but, for example, "twistd" as a command line 
tool is kind of neat.  There are lots of ways we can suck them in and 
interest them in the wider Twisted universe outside of just web.  Bottom 
line, though: those are the people who can make our website look great, 
who can organize our documentation, etc.  It's no secret that I'm not a 
fan of Django's technological architecture but I think their 
documentation is _fantastic_; easily twice as good as ours, probably 
more like ten times as good in certain areas.
>Other attempts to force the issue haven't really met with much 
>success; I know there used to be (perhaps still are) a few bounties 
>out there on documentation, but not much has happened in that arena 
>since then. (Personally, I am anti-bounty, as I feel -- perhaps 
>irrationally so -- that it cheapens the hours and hours of work that 
>people have done for free.)

Whatever the reason, you're right: bounties never really worked.  Divmod 
is going to be doing a bunch of consulting for the TSF, but that paid 
development isn't going to be on the basis of a ticket-by-ticket basis, 
and bounties are not a good way to recognize or compensate contributors.
>I think the best way for us to address this in the short term is to 
>really try to focus on group documentation. The current Trac wiki can 
>barely be called collaborative; as a start why not transfer the 
>Twisted docs into the wiki, and allow Trac users to modify and update 
>this information?

Because the version control system used by trac is broken.  Because 
trac's wiki syntax is a custom hack which we have no other tools to work 
with.  Because users who know even the tiniest smattering of HTML can 
submit patches against the existing documentation.  Because dealing with 
spam in trac is a huge hassle.  Because trac's wiki isn't included in 
the release.  Because the tools don't exist *to* include trac's wiki in 
the release.  Because it's a huge project which would take many man- 
months to do nothing but put our documentation into an inferior format.

I could go on.

Maybe you could write a tool which would automatically allow users to 
edit the lore documentation and generate patches / file tickets for 
reviewing those patches?  That would be pretty awesome.
>Furthermore, considering the length some of the posts I see here, I'd 
>like to suggest that if you're going to spend 30 minutes writing an 
>email explaining some concept, why not write a mini tutorial about it 
>instead?

Writing a tutorial is a lot harder than writing an email.
>Even if you just copy and paste the email you were going to send into 
>the wiki, it's still a start, and others can work on it from there.

*this* kind of ad-hoc stuff is what should be on a wiki.  But it should 
be moving in the direction of the real docs, not away from them.

I hope this was illustrative, if not quite worthy of being a tutorial 
:).



From lists at sourceillustrated.com  Thu Mar 20 21:52:16 2008
From: lists at sourceillustrated.com (John Wells)
Date: Thu, 20 Mar 2008 21:52:16 -0400
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
In-Reply-To: <20080320205637.38A7112401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
Message-ID: <44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>

On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
> Glenn H Tarbox wrote:
>  > (yet this same group complains that Git is too complex to be used for
>  > source code control... even though its core architecture eclipses the
>  > alternatives being used and considered...)
>
>  Seeing Pythonistas using git saddens me a little.
>
>  Mercurial is git done right.

Really? I've heard the same about Canonical's Bazaar...also written in python...



From jml at mumak.net  Thu Mar 20 22:10:33 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 21 Mar 2008 13:10:33 +1100
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
In-Reply-To: <44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
Message-ID: <d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>

On Fri, Mar 21, 2008 at 12:52 PM, John Wells
<lists at sourceillustrated.com> wrote:
> On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
>  > Glenn H Tarbox wrote:
>  >  > (yet this same group complains that Git is too complex to be used for
>  >  > source code control... even though its core architecture eclipses the
>  >  > alternatives being used and considered...)
>  >
>  >  Seeing Pythonistas using git saddens me a little.
>  >
>  >  Mercurial is git done right.
>
>  Really? I've heard the same about Canonical's Bazaar...also written in python...
>

Except Bazaar isn't git done right, it's distributed version control done right.

jml



From waterbug at pangalactic.us  Thu Mar 20 22:15:06 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 20 Mar 2008 22:15:06 -0400
Subject: [Twisted-Python] Mercurial,	not git
In-Reply-To: <d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<20080320205637.38A7112401B@slice.teknico.net>	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
Message-ID: <47E31A2A.6020002@pangalactic.us>

Jonathan Lange wrote:
> On Fri, Mar 21, 2008 at 12:52 PM, John Wells
> <lists at sourceillustrated.com> wrote:
>> On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
>>  > Glenn H Tarbox wrote:
>>  >  > (yet this same group complains that Git is too complex to be used for
>>  >  > source code control... even though its core architecture eclipses the
>>  >  > alternatives being used and considered...)
>>  >
>>  >  Seeing Pythonistas using git saddens me a little.
>>  >
>>  >  Mercurial is git done right.
>>
>>  Really? I've heard the same about Canonical's Bazaar...also written in python...
>>
> 
> Except Bazaar isn't git done right, it's distributed version control done right.

OT!  Please keep VCS wars/opinionating off the twisted list.

Steve



From waterbug at pangalactic.us  Thu Mar 20 22:34:38 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 20 Mar 2008 22:34:38 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>	<fruaj0$b8c$1@ger.gmane.org>
	<20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
Message-ID: <47E31EBE.2030302@pangalactic.us>

glyph at divmod.com wrote:
> I believe the honorable Dr. Tarbox actually qualifies as a Bronze 
> founding sponsor of the TSF, so at this point I don't think he's yet 
> overstepped the amount of crap he's allowed to give us.  Although 
> perhaps future vitriol could be saved for the sponsors list we are in 
> the process of setting up, and in the more productive form of feature 
> requests :).
> 
> (Thanks, Glenn!  Do you want to send us a logo, perhaps a signature, to 
> put on the front page?)

I notice that the TSF has no Gold sponsors yet ... perhaps,
judging from an aside made at the Teach-Me-Twisted session by a
certain Google fellow (who happens to be a venerated, well-known
Python roshi ;), perhaps Google should be Twisted's first
Gold sponsor ... anyone from Google listening?  :)

Cheers,
Steve



From nico at teknico.net  Fri Mar 21 02:35:17 2008
From: nico at teknico.net (Nicola Larosa)
Date: Fri, 21 Mar 2008 07:35:17 +0100
Subject: [Twisted-Python] Re: Mercurial,	not git
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<20080320205637.38A7112401B@slice.teknico.net>	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
Message-ID: <20080321063519.E367A12401B@slice.teknico.net>

> Nicola Larosa wrote:
>> Mercurial is git done right.

> Really? I've heard the same about Canonical's Bazaar...also written in
> python...

If you mean that Mercurial is BazaarNG done right, yes, definitely. ;-)

BazaarNG has better integration with Subversion than Mercurial (currently).
On the other hand, it's not as fast as Mercurial, but mainly, it's not as
*simple* as Mercurial.

Canonical deciding to rewrite bzr, instead of backing Mercurial, has been a
loss for the Python community.

-- 
Nicola Larosa - http://www.tekNico.net/

It hurts a bit to hear someone you really love relating or demonstrating
delight received from another lover. But when you get past this, it's
utterly liberating, as if you have finally ridded yourself of the worst
vestige of our current society's terrible scarcity of love.
 -- Dave Pollard, November 2007





From glyph at divmod.com  Fri Mar 21 04:18:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:18:36 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
Message-ID: <20080321081836.21558.1091776909.divmod.xquotient.8558@joule.divmod.com>

On 20 Mar, 09:28 pm, ellisonbg.net at gmail.com wrote:
>Also, I think the proof is in the pudding.  Most people who really
>need Twisted for their projects _are_ in fact able to learn it (for
>the most part without reading the source code).  The documentation
>can't be that bad.  Doesn't mean there is not room for improvement
>though.

Although I believe we have a long way to go, I appreciate the fact that 
in this round, it's not the authors of the documentation, but members of 
the community who have actually read it who are coming to its defense.

Thanks.  It's useful to hear the criticism, but it's energizing to hear 
the praise :).



From glyph at divmod.com  Fri Mar 21 04:30:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:30:37 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E31EBE.2030302@pangalactic.us>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
	<fruaj0$b8c$1@ger.gmane.org>
	<20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
	<47E31EBE.2030302@pangalactic.us>
Message-ID: <20080321083037.21558.385469995.divmod.xquotient.8574@joule.divmod.com>

On 02:34 am, waterbug at pangalactic.us wrote:
>I notice that the TSF has no Gold sponsors yet ... perhaps,
>judging from an aside made at the Teach-Me-Twisted session by a
>certain Google fellow (who happens to be a venerated, well-known
>Python roshi ;), perhaps Google should be Twisted's first
>Gold sponsor ... anyone from Google listening?  :)

Zenoss will be our first Gold sponsor.  We're still figuring out payment 
details with them right now, we're new to this whole "accepting money" 
thing.

Also, Gold isn't the highest level.  If you want to find out what the 
highest level is, just contribute geometrically increasing amounts of 
money and see if we put you into a new category.

We are working on talking to Google, among other folks.  I can only send 
so many emails in one day.  And in fact I'm in the process of precisely 
discovering that limit ;-).



From glyph at divmod.com  Fri Mar 21 04:38:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:38:43 -0000
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321063519.E367A12401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
Message-ID: <20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>


Please stop.

On 06:35 am, nico at teknico.net wrote:
>>Nicola Larosa wrote:
>>>It is allowed on all hands, that the primitive way of breaking eggs, 
>>>before we eat them, was upon the larger end; but his present 
>>>majesty 19s grandfather, while he was a boy, going to eat an egg, and 
>>>breaking it according to the ancient practice, happened to cut one of 
>>>his fingers.
>
>>his present majesty 19s grandfather, while he was a boy, going to eat an 
>>egg, and breaking it according to the ancient practice, happened to 
>>cut one of his fingers.
>
>
>Long live the most puissant king of Lilliput!
>all true believers break their eggs at the convenient end.
>--
>Nicola Larosa - http://www.tekNico.net/
>
>It hurts a bit to hear someone you really love relating or 
>demonstrating
>delight received from another lover. But when you get past this, it's
>utterly liberating, as if you have finally ridded yourself of the worst
>vestige of our current society's terrible scarcity of love.
>-- Dave Pollard, November 2007
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From nico at teknico.net  Fri Mar 21 05:05:53 2008
From: nico at teknico.net (Nicola Larosa)
Date: Fri, 21 Mar 2008 10:05:53 +0100
Subject: [Twisted-Python] Re: Mercurial, not git
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
Message-ID: <20080321090555.E734E12401B@slice.teknico.net>

glyph at divmod.com wrote:
> Please stop.

Ok, I will, but...

> On 06:35 am, nico at teknico.net wrote:
>>>Nicola Larosa wrote:

..no, I didn't! Whose is this stuff? Not mine.

Glyph, if this is your frolicsome way of implying that what I said was
irrelevant, well, point taken. :-) Otherwise, I'm puzzled.

>>>>It is allowed on all hands, that the primitive way of breaking eggs,
>>>>before we eat them, was upon the larger end; but his present
>>>>majesty 19s grandfather, while he was a boy, going to eat an egg, and
>>>>breaking it according to the ancient practice, happened to cut one of
>>>>his fingers.
>>
>>>his present majesty 19s grandfather, while he was a boy, going to eat an
>>>egg, and breaking it according to the ancient practice, happened to
>>>cut one of his fingers.
>>
>>Long live the most puissant king of Lilliput!
>>all true believers break their eggs at the convenient end.

-- 
Nicola Larosa - http://www.tekNico.net/





From glyph at divmod.com  Fri Mar 21 05:17:05 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 09:17:05 -0000
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321090555.E734E12401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
	<20080321090555.E734E12401B@slice.teknico.net>
Message-ID: <20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>


On 09:05 am, nico at teknico.net wrote:
>Glyph, if this is your frolicsome way of implying that what I said was
>irrelevant, well, point taken. :-) Otherwise, I'm puzzled.

I guess if you didn't get the joke, others might not either...

Those were passages taken from Gulliver's Travels related to the big- 
endian vs. little-endian debate, a meaningless conflict between 
essentially identical societies that lead to decades of war.



From p.mayers at imperial.ac.uk  Fri Mar 21 07:33:30 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:33:30 +0000
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
Message-ID: <47E39D0A.8080707@imperial.ac.uk>

Faraz Khan wrote:
> Dear all,
> What Im trying to do is the following. Please suggest whether this makes 
> sense or not (I dont think it does- so am asking for suggestions!):
> 
> 1. I have a XML RPC Server using xmlrpc.XMLRPC
> 2. Clients connect to it using SSL (am using reactor.listenSSL with a 
> custom context factory)
> 
> 3. This server (or agent) is being used for sys admin tasks. I want to 
> connect, auth and then be able to do various sys admin tasks which the 
> XMLRPC server lets them do.
> 
> 4. What i wish to be able to do is that a UID/GID is set (based on their 
> auth credentials) for that particular request.
> 
> I personally think this is impossible to do with threads. I have done 
> something simliar using Fork & C though.

It may or may not be possible with threads, but it doesn't matter 
because Twisted doesn't use threads. It's single-process, single-thread 
async/event driven.

You will not be able to setuid effectively in the main Twisted program.

> 
> Doing os.setuid works but (obviously) changes the main process's UID 
> which is not what I want.
> 
> Any advice would be highly appreciated.
> 
> 

Run child processes doing the actual admin tasks.



From p.mayers at imperial.ac.uk  Fri Mar 21 07:36:16 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:36:16 +0000
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <47E2EA33.9030400@lavabit.com>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>	<fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com>
Message-ID: <47E39DB0.90908@imperial.ac.uk>

coder_gus wrote:
> Well, by default the Nagle algorithm is turned off so it should transmit 
> the data asap. I don't think it's OS dependent.

It's only off if you've turned it off. It's on by default AFAIK on most 
OSes.

Anyway, Nagle is irrelevant - if the TCP window is closed i.e. you've 
sent N bytes and the far end has not acked, and N == window, your TCP 
stack WILL NOT (MUST NOT) send any more.

> 
> Toby Dickenson wrote:
>> coder_gus wrote:
>>
>>  
>>> Ok, this link answered a few of my questions (stupid of me that I
>>> haven't looked on that before I posted), but my question still stands:
>>> how do I send data to a client whenever I want from wherever I want and
>>> that data to be send as fast as possible,
>>>     
>>
>> The code in the faq that glyph pointed you to will do what you want, if I
>> understand your requirements correctly. Heres the link again:
>>
>> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>>
>>
>>  
>>> without the code waiting for the reactor to answer to some events?
>>>     
>>
>> Your transmission *might* have to wait if the operating system transmit
>> buffers are already full, and, if so, the reactor is the mechanism which
>> means your new data can wait without blocking the whole process.
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> ____________________________________________________________________________________ 
>>
>> Save hundreds on an Unsecured Loan - Click here.
>> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/ 
>>
>> ____________________________________________________________________________________ 
>>
>>   
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Fri Mar 21 07:47:22 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:47:22 +0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
Message-ID: <47E3A04A.6030502@imperial.ac.uk>

>>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>>  of the documentation (none) making the code the best source... and
>>  history is replete with the massive successes that approach has borne...
> 
> I disagree with this evaluation. ...

Likewise.

> Asynchronous networking is simply hard.  And Twisted has a very
> sophisticated take on it.  Saying the problem is the documentation is
> like someone saying "quantum mechanics is poorly documented...all that
> talk about Hilbert spaces, eigenstates and superposition..."  It is
> not poorly documented, it is simply hard and conceptually challenging.
> 
> Also, I think the proof is in the pudding.  Most people who really
> need Twisted for their projects _are_ in fact able to learn it (for
> the most part without reading the source code).  The documentation
> can't be that bad.  Doesn't mean there is not room for improvement
> though.

I totally agree with that. I'm a reasonably bright chap, but I'm not 
Einstein. I get Twisted, and I got it quickly enough and well enough to 
(I think) do some pretty damn sophisticated things.

(I did have the benefit of having already tried a threaded approach and 
seen how disastrous it was...)

> 
> 
> Brian
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From steve at holdenweb.com  Fri Mar 21 08:05:43 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 21 Mar 2008 08:05:43 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E3A04A.6030502@imperial.ac.uk>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
	<47E3A04A.6030502@imperial.ac.uk>
Message-ID: <fs08b0$m11$1@ger.gmane.org>

Phil Mayers wrote:
[...]
>> Also, I think the proof is in the pudding.  Most people who really
>> need Twisted for their projects _are_ in fact able to learn it (for
>> the most part without reading the source code).  The documentation
>> can't be that bad.  Doesn't mean there is not room for improvement
>> though.
> 
> I totally agree with that. I'm a reasonably bright chap, but I'm not 
> Einstein. I get Twisted, and I got it quickly enough and well enough to 
> (I think) do some pretty damn sophisticated things.
> 
It *has& improved a lot.

> (I did have the benefit of having already tried a threaded approach and 
> seen how disastrous it was...)
> 
I've actually used threads to send emails in parallel (200-500 at a 
time), but if I'd known how to use Twisted it would almost certainly 
have been easier to get running and debug.

I'm probably one of those people who will shy away from something that 
isn't immediately approachable. Perhaps all that's really needed is a 
ring of newbie-friendly stuff to make sense of the existing documentation?

That, and a re-write of certain head-twisting paragraphs ...

regards
  Steve




From coder_gus at lavabit.com  Fri Mar 21 08:50:04 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 14:50:04 +0200
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <47E39DB0.90908@imperial.ac.uk>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>
Message-ID: <47E3AEFC.4040706@lavabit.com>

Agreed, I was talking about transport.tcpKeepAlive(). The thing I am 
asking (and call me stupid, but I am trying to figure it out for days 
now and no one seems to answer my question or is it me too stupid that 
can see the answer in front of my eyes) is how do I send data to clients 
that are connected to the twisted server waiting for data to be 
processed, without sending to the server any data or causing any event 
to the server? In the link you guys showed me it's true that the data 
gets back to the clients, but only when the server receives other data, 
that is in the dataReceived method. How can I send it back to them 
(having a reference to each client's protocol class) without receiving 
data, client connecting etc. ?


Phil Mayers wrote:
> coder_gus wrote:
>> Well, by default the Nagle algorithm is turned off so it should 
>> transmit the data asap. I don't think it's OS dependent.
>
> It's only off if you've turned it off. It's on by default AFAIK on 
> most OSes.
>
> Anyway, Nagle is irrelevant - if the TCP window is closed i.e. you've 
> sent N bytes and the far end has not acked, and N == window, your TCP 
> stack WILL NOT (MUST NOT) send any more.
>
>>
>> Toby Dickenson wrote:
>>> coder_gus wrote:
>>>
>>>  
>>>> Ok, this link answered a few of my questions (stupid of me that I
>>>> haven't looked on that before I posted), but my question still stands:
>>>> how do I send data to a client whenever I want from wherever I want 
>>>> and
>>>> that data to be send as fast as possible,
>>>>     
>>>
>>> The code in the faq that glyph pointed you to will do what you want, 
>>> if I
>>> understand your requirements correctly. Heres the link again:
>>>
>>> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>>>
>>>
>>>  
>>>> without the code waiting for the reactor to answer to some events?
>>>>     
>>>
>>> Your transmission *might* have to wait if the operating system transmit
>>> buffers are already full, and, if so, the reactor is the mechanism 
>>> which
>>> means your new data can wait without blocking the whole process.
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>> ____________________________________________________________________________________ 
>>>
>>> Save hundreds on an Unsecured Loan - Click here.
>>> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/ 
>>>
>>> ____________________________________________________________________________________ 
>>>
>>>   
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________ 
>
> Handyman Franchises. Click Here.
> http://ads.lavabit.com/fc/REAK6bkONUs9yhym0lTTSbxUFXmZYqNkZwLDRJhQY0xBalLSyOwtqs/ 
>
> ____________________________________________________________________________________ 
>




From therve at free.fr  Fri Mar 21 09:25:16 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 21 Mar 2008 14:25:16 +0100
Subject: [Twisted-Python] Re: writing back to the connection is
	blocking my code
In-Reply-To: <47E3AEFC.4040706@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
Message-ID: <20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>

Quoting coder_gus <coder_gus at lavabit.com>:

> Agreed, I was talking about transport.tcpKeepAlive(). The thing I am
> asking (and call me stupid, but I am trying to figure it out for days
> now and no one seems to answer my question or is it me too stupid that
> can see the answer in front of my eyes) is how do I send data to
> clients that are connected to the twisted server waiting for data to be
> processed, without sending to the server any data or causing any event
> to the server?

This is where you are confused I think. There is no way to send data  
to clients if you don't have *any* events on the server. Because how  
would you now to send data if you don't have something telling you to  
do so? You should have a time event, or a network event from another  
client, or a GUI input, or whatever.

> In the link you guys showed me it's true that the data
> gets back to the clients, but only when the server receives other data,
> that is in the dataReceived method. How can I send it back to them
> (having a reference to each client's protocol class) without receiving
> data, client connecting etc. ?

It's not totally clear to understand what you're trying to achieve, so  
maybe you want to explain more clearly your problem. I suspect you  
want to use reactor.callLater, to generate a time event.


-- 
Thomas






From drew.smathers at gmail.com  Fri Mar 21 09:51:17 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 21 Mar 2008 09:51:17 -0400
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
	<20080321090555.E734E12401B@slice.teknico.net>
	<20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>
Message-ID: <368574aa0803210651n19d24978s218c6e6e5d42a745@mail.gmail.com>

On Fri, Mar 21, 2008 at 5:17 AM,  <glyph at divmod.com> wrote:
>
>  On 09:05 am, nico at teknico.net wrote:
>  >Glyph, if this is your frolicsome way of implying that what I said was
>  >irrelevant, well, point taken. :-) Otherwise, I'm puzzled.
>
>  I guess if you didn't get the joke, others might not either...
>
>  Those were passages taken from Gulliver's Travels related to the big-
>  endian vs. little-endian debate, a meaningless conflict between
>  essentially identical societies that lead to decades of war.
>

Is there a python-flamewars mailing list? That would be really great,
so everyone could argue about setuptools, web frameworks, concurrency
models, revision control ...  I think it might help extend our
lifespans as well.

>Long live the most puissant king of Lilliput!
>all true believers break their eggs at the convenient end.

Now that you mention eggs ...

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From jcd at sdf.lonestar.org  Fri Mar 21 09:52:55 2008
From: jcd at sdf.lonestar.org (J. Clifford Dyer)
Date: Fri, 21 Mar 2008 09:52:55 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E24B94.7090400@holdenweb.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
Message-ID: <1206107575.6164.17.camel@jcd-desktop>


On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
> glyph at divmod.com wrote:

> I left the session feeling we had accomplished hardly anything, but was 
> persuaded afterwards that wasn't the case.
> 
> One of the tragedies of the session was due to the blue screen crash of 
> my own computer I have absolutely nothing left of the code we developed. 
> I had hopes that one or two blog entries might appear to allow me to 
> lift it from those attending, but so far the success of the session is a 
> closely guarded secret among PyCon attendees (thought it's been 
> gratifying to have people saying "I wished I'd gone to that").
> 
> If someone can provide me with the code I will undertake to produce some 
> sort of blog entry, and this might further publicize Twisted. Never 
> underestimate the value of marketing: the Twisted community is a subset 
> of the Python community, and it's my particular vanity that PyCon has 
> helped to increase the Python community. It's important to keep feeding 
> introductory material into the process as growth continues, because 
> typically 50% of those present are likely to be newbies.
> 

Having contributed the replacement laptop, I've got the "official"
working code from Teach Me Twisted.  I'd be happy to send it to you,
Steve, or anyone else who wants to blog on the session.  One caveat: the
laptop I had with me at python belongs to my employer, so it's sitting
in my office right now, and I won't be able to get to it until Monday.

> 
> > Next year, we should definitely have more regular Twisted talks; I'd say 
> > that someone else should do another "teach me twisted" session, but I 
> > don't know if anyone else has the raw charisma and pedagogical expertise 
> > that Mr. Holden combined with Twisted ignorance to make this session so 
> > great :).
> > 
> Don't forget the whisky ...
> 

Believe me, I won't. ;) Actually I think the whisky was a minor but
essential ingredient in making the event as fantastic as it was.  Just
having the bottle sitting up front was a good reminder to people that we
were there because we think this stuff is fun.  It took a lot of the
formality off of the learning process, and that informality helped
people get excited about the endeavor.


> What we possibly need first of all is for someone to do a "Teach Me 
> Teach Me" in the tutorial track, with myself and a number of the more 
> experienced trainer types as the "subject matter experts". These things 
> are always one-off in nature and it's unrealistic to expect that they 
> will all have the same charm as "Teach Me Twisted" did this year for all 
> the reasons I mention above, but if it gets information out more 
> effectively about "difficult" topics it's probably worth a try if we can 
> find someone to facilitate them.
> 

I'd love to try my hand at "teach me" style teaching, for what it's
worth, and would be interested in a Teach Me Teach Me session.

> regards
>   Steve





From coder_gus at lavabit.com  Fri Mar 21 10:07:36 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 16:07:36 +0200
Subject: [Twisted-Python] Re: writing back to the connection is	blocking
	my code
In-Reply-To: <20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>	<47E3AEFC.4040706@lavabit.com>
	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
Message-ID: <47E3C128.5000202@lavabit.com>

Hi, thanks for answering and clarifying this - until now you where the 
only one that told me there no way of sending data if there is no event 
on the server. So what I am trying to achieve, I have asked a couple of 
weeks ago too about this matter (actually about the architecure): I want 
to write an application server that receives data from clients (client 
app written in delphi), data is in xml format (I want to write it using 
a bare-bone protocol and not an xml-rpc server). The data the client 
sends are some requests for some specific data hold in a database. So, 
the client makes a request, request that is hold in a synchronized queue 
together with an instance of the client's connection. A coordinator 
takes the data from that queue and gives it to some xml threads to parse 
it and the same coordinator take the parsed data from the xml threads 
and give some workers to do the bussiness work. This workers place the 
result in a queue from where the coordinator takes care of sending it 
back to the clients. I will be using sqlalchemy for database communication.
I know the architecture is pretty weird from the twisted perspective, 
but when the dev-manager wants to do it that way, what can you do? So 
that is the thing I want to achieve and from this started my question; 
when the workers finish their work, they have the result, place it in a 
queue and from there I have to send it to the clients asap, without 
waiting the server for events.

Not sure if I made myself clear as I am not a native-English speaker.

Thanks for you patience. :)

Thomas Herv? wrote:
> Quoting coder_gus <coder_gus at lavabit.com>:
>
>> Agreed, I was talking about transport.tcpKeepAlive(). The thing I am
>> asking (and call me stupid, but I am trying to figure it out for days
>> now and no one seems to answer my question or is it me too stupid that
>> can see the answer in front of my eyes) is how do I send data to
>> clients that are connected to the twisted server waiting for data to be
>> processed, without sending to the server any data or causing any event
>> to the server?
>
> This is where you are confused I think. There is no way to send data 
> to clients if you don't have *any* events on the server. Because how 
> would you now to send data if you don't have something telling you to 
> do so? You should have a time event, or a network event from another 
> client, or a GUI input, or whatever.
>
>> In the link you guys showed me it's true that the data
>> gets back to the clients, but only when the server receives other data,
>> that is in the dataReceived method. How can I send it back to them
>> (having a reference to each client's protocol class) without receiving
>> data, client connecting etc. ?
>
> It's not totally clear to understand what you're trying to achieve, so 
> maybe you want to explain more clearly your problem. I suspect you 
> want to use reactor.callLater, to generate a time event.
>
>




From drew.smathers at gmail.com  Fri Mar 21 10:15:21 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 21 Mar 2008 10:15:21 -0400
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my code
In-Reply-To: <47E3AEFC.4040706@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
Message-ID: <368574aa0803210715g18c236ebm32fa8f59ebf1e143@mail.gmail.com>

On Fri, Mar 21, 2008 at 8:50 AM, coder_gus <coder_gus at lavabit.com> wrote:
>  How can I send it back to them
>  (having a reference to each client's protocol class) without receiving
>  data, client connecting etc. ?

1. Without receiving data

This is simple.   When a client connects, your protocol can capture
the connection event with connectionMade method on the protocol.
That's when you'll likely store a reference to the protocol instance
on the factory.  If you need to write back to the connection at a
later time, simply call write on the protocol's transport. For
example, a chat server might do something like this:

for c in self.chatters:
   c.transport.write(msg)

I'm guessing that your concern is that write is going to block.  It's not.

2. Client connecting

The client has to connect first - unless you are writing an
application where each participant in the system is known up front -
and you can establish connections with them (no firewalls).

I would suggest rereading these documents carefully - they should
really cover your questions:

http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html

Otherwise, you should provide a more detailed explanation of your use case.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From therve at free.fr  Fri Mar 21 11:26:44 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 21 Mar 2008 16:26:44 +0100
Subject: [Twisted-Python] Re: writing back to the connection is
	blocking my code
In-Reply-To: <47E3C128.5000202@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
	<47E3C128.5000202@lavabit.com>
Message-ID: <20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>

Quoting coder_gus <coder_gus at lavabit.com>:

> Hi, thanks for answering and clarifying this - until now you where the
> only one that told me there no way of sending data if there is no event
> on the server. So what I am trying to achieve, I have asked a couple of
> weeks ago too about this matter (actually about the architecure): I
> want to write an application server that receives data from clients
> (client app written in delphi), data is in xml format (I want to write
> it using a bare-bone protocol and not an xml-rpc server). The data the
> client sends are some requests for some specific data hold in a
> database. So, the client makes a request, request that is hold in a
> synchronized queue together with an instance of the client's
> connection. A coordinator takes the data from that queue and gives it
> to some xml threads to parse it and the same coordinator take the
> parsed data from the xml threads and give some workers to do the
> bussiness work. This workers place the result in a queue from where the
> coordinator takes care of sending it back to the clients. I will be
> using sqlalchemy for database communication.
> I know the architecture is pretty weird from the twisted perspective,
> but when the dev-manager wants to do it that way, what can you do? So
> that is the thing I want to achieve and from this started my question;
> when the workers finish their work, they have the result, place it in a
> queue and from there I have to send it to the clients asap, without
> waiting the server for events.

This is were you're wrong: pushing the result is an event! So to the  
event 'I got some result in a thread', you'll fire a connection write.  
Let me try to write some pseudo code to solve your problem:


def blockingTask(content):
     import sqlalchemy
     # sqlalchemy stuff
     query = session.query("bla")
     ....
     return result


class CommandProtocol(Protocol):
     def __init__(self):
         self.buf = ''

     def dataReceived(self, data):
         self.buf += data
         # This is stupid, don't do that
         while '</end_command>' in self.buf:
              content, self.buf = self.buf.split('</end_command>', 1)
              content += '</end_command>'
              deferToThread(blockingTask, content).addCallback(self.response)

     def response(self, result):
         # I got the response event!
         self.sendLine.write("response %s" % (result,))


See? deferToThread generates an event, which is used the pass the  
result of the command to a callback.


I hope it clarifies some things.

-- 
Thomas






From coder_gus at lavabit.com  Fri Mar 21 13:11:58 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 19:11:58 +0200
Subject: [Twisted-Python] Re: writing back to the connection is	blocking
	my code
In-Reply-To: <20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>	<47E3AEFC.4040706@lavabit.com>	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>	<47E3C128.5000202@lavabit.com>
	<20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
Message-ID: <47E3EC5E.9000501@lavabit.com>

Yup, that made it alot clear and thanks so much for it :)

But now another question comes up: what if for a special client I want 
to inject some data ... let's say that while he is processing some 
tasks, the backend observes that some data in the database has altered 
and wants to notify the client that he can't use that data anymore - if 
I am using deferToThread I don't think sending data back trough that is 
pretty easy ... or am I wrong?

Thanks for all.


Thomas Herv? wrote:
> Quoting coder_gus <coder_gus at lavabit.com>:
>
>> Hi, thanks for answering and clarifying this - until now you where the
>> only one that told me there no way of sending data if there is no event
>> on the server. So what I am trying to achieve, I have asked a couple of
>> weeks ago too about this matter (actually about the architecure): I
>> want to write an application server that receives data from clients
>> (client app written in delphi), data is in xml format (I want to write
>> it using a bare-bone protocol and not an xml-rpc server). The data the
>> client sends are some requests for some specific data hold in a
>> database. So, the client makes a request, request that is hold in a
>> synchronized queue together with an instance of the client's
>> connection. A coordinator takes the data from that queue and gives it
>> to some xml threads to parse it and the same coordinator take the
>> parsed data from the xml threads and give some workers to do the
>> bussiness work. This workers place the result in a queue from where the
>> coordinator takes care of sending it back to the clients. I will be
>> using sqlalchemy for database communication.
>> I know the architecture is pretty weird from the twisted perspective,
>> but when the dev-manager wants to do it that way, what can you do? So
>> that is the thing I want to achieve and from this started my question;
>> when the workers finish their work, they have the result, place it in a
>> queue and from there I have to send it to the clients asap, without
>> waiting the server for events.
>
> This is were you're wrong: pushing the result is an event! So to the 
> event 'I got some result in a thread', you'll fire a connection write. 
> Let me try to write some pseudo code to solve your problem:
>
>
> def blockingTask(content):
>     import sqlalchemy
>     # sqlalchemy stuff
>     query = session.query("bla")
>     ....
>     return result
>
>
> class CommandProtocol(Protocol):
>     def __init__(self):
>         self.buf = ''
>
>     def dataReceived(self, data):
>         self.buf += data
>         # This is stupid, don't do that
>         while '</end_command>' in self.buf:
>              content, self.buf = self.buf.split('</end_command>', 1)
>              content += '</end_command>'
>              deferToThread(blockingTask, 
> content).addCallback(self.response)
>
>     def response(self, result):
>         # I got the response event!
>         self.sendLine.write("response %s" % (result,))
>
>
> See? deferToThread generates an event, which is used the pass the 
> result of the command to a callback.
>
>
> I hope it clarifies some things.
>




From ddwiggins at advpubtech.com  Fri Mar 21 15:23:08 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 21 Mar 2008 12:23:08 -0700
Subject: [Twisted-Python] Advice sought on application evolution
Message-ID: <fs11ut$rgp$1@ger.gmane.org>

glyph at divmod.com wrote in the "Teach Me Twisted Redux" thread:
 > One of the things I did at PyCon was to reach out to the Django
 > community and ask them to start considering what it would take for
 > Twisted to be the preferred container and deployment platform for
 > Django.  They're thinking about it.

I've started thinking about something vaguely similar.  Currently, I 
have a small xml-rpc server in twisted, which provides a few operations 
on a large, complex database for a remote client.  (The bulk of the 
database operations are carried out by a desktop app.)  This was my 
first serious exposure to Twisted, and I found it reasonably easy to get 
going, once I got the hang of the concepts.  (It was probably eased by 
my having previous experience with asynchronous I/O, back in Paleolithic 
times when that was _the_ way it was done.)

My intention is to evolve this server toward a true "middle-tier" layer 
containing the business logic that's now scattered helter-skelter among 
various desktop apps and database stored procedures.  This layer, then, 
will be accessed both by remote clients and "local" (on the same LAN) 
desktop apps.

I'm leaning toward evolving the current xml-rpc server in this
direction, but I'm uncertain whether it's a good idea to implement a 
large amount of business logic directly in an asynchronous paradigm, and 
specifically directly in the Twisted framework.  Twisted looks to be an 
excellent base for a node (loosely speaking) in a communication network, 
but what are the implications of using it for what I have in mind?

A small example of something that bothers me is the necessity to break 
up otherwise "unitary" functions because some parts of them involve 
communications or heavy computation.  More concretely, consider the 
following sketch of a method:

def frobulate(...):
    step_1()
    step_2()
    step_3()
    step_4()
    step_5()
    return result5

Where the steps are logically coherent parts of the frobulation (in 
Beck's terms, the method "smells good").  Now assume that step_3 
involves a database access.  To avoid blocking, I might twist it like this:

def frobulate():
    step_1()
    step_2()
    deferred = step_3_async()
    deferred.addCallback(frobulate_4_and_5)
    return deferred

def frobulate_4_and_5(...):
    step_4()
    step_5()
    return result5

(Where step_3 has been changed to start the access and return a
deferred.)  In this simple sketch, the "visual noise" introduced isn't
too bad, but I'm afraid that as the functions multiply and become more 
complex, it'll make the application considerably harder to understand 
and manage, and possibly more prone to errors and/or unintended 
blocking, where twisting a synchronous operation would require serious 
re-architecting.

Another twist, using generators, might be:

@defer.deferredGenerator
def frobulate():
    step_1()
    step_2()
    step3InProgress = defer.waitForDeferred(step_3_async())
    yield step3InProgress
    step3Rslt = step3InProgress.getResult()
    step_4()
    step_5()
    yield result5
    return

(I've introduced a bit more detail, in that the result of step 3 might
be used in subsequent steps.)

In Python 2.5, I can say this more cleanly:

@defer.inlineCallbacks
def frobulate():
    step_1()
    step_2()
    step3Rslt = yield step_3_async()
    step_4()
    step_5()
    returnValue(result5)

This is looking a lot better, but still the asynchrony of step_3 "shows 
through".  (Again, I'm taking the viewpoint of someone trying to 
understand, maintain, and extend the functionality of the application, 
without having the asynchronous aspects "thrust in his face" more than 
absolutely necessary.)

Of course, I can avoid all this by going to a threading or separate 
process solution, but I'd like to find out if I'm missing something 
before I make such a commitment.

Thanks for any good words,

-- 
Don Dwiggins
Advanced Publishing Technology




From steve at holdenweb.com  Fri Mar 21 16:05:15 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 21 Mar 2008 16:05:15 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206107575.6164.17.camel@jcd-desktop>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>
	<1206107575.6164.17.camel@jcd-desktop>
Message-ID: <fs14e2$3rm$1@ger.gmane.org>

J. Clifford Dyer wrote:
> On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
[...]
>> If someone can provide me with the code I will undertake to produce some 
>> sort of blog entry, and this might further publicize Twisted. Never 
>> underestimate the value of marketing: the Twisted community is a subset 
>> of the Python community, and it's my particular vanity that PyCon has 
>> helped to increase the Python community. It's important to keep feeding 
>> introductory material into the process as growth continues, because 
>> typically 50% of those present are likely to be newbies.
>>
> 
> Having contributed the replacement laptop, I've got the "official"
> working code from Teach Me Twisted.  I'd be happy to send it to you,
> Steve, or anyone else who wants to blog on the session.  One caveat: the
> laptop I had with me at python belongs to my employer, so it's sitting
> in my office right now, and I won't be able to get to it until Monday.
> 
The authentic source would be very welcome, Cliff, and thanks.

Hope the new laptop is behaving itself ...

>>> Next year, we should definitely have more regular Twisted talks; I'd say 
>>> that someone else should do another "teach me twisted" session, but I 
>>> don't know if anyone else has the raw charisma and pedagogical expertise 
>>> that Mr. Holden combined with Twisted ignorance to make this session so 
>>> great :).
>>>
>> Don't forget the whisky ...
>>
> 
> Believe me, I won't. ;) Actually I think the whisky was a minor but
> essential ingredient in making the event as fantastic as it was.  Just
> having the bottle sitting up front was a good reminder to people that we
> were there because we think this stuff is fun.  It took a lot of the
> formality off of the learning process, and that informality helped
> people get excited about the endeavor.
> 
> 
>> What we possibly need first of all is for someone to do a "Teach Me 
>> Teach Me" in the tutorial track, with myself and a number of the more 
>> experienced trainer types as the "subject matter experts". These things 
>> are always one-off in nature and it's unrealistic to expect that they 
>> will all have the same charm as "Teach Me Twisted" did this year for all 
>> the reasons I mention above, but if it gets information out more 
>> effectively about "difficult" topics it's probably worth a try if we can 
>> find someone to facilitate them.
>>
> 
> I'd love to try my hand at "teach me" style teaching, for what it's
> worth, and would be interested in a Teach Me Teach Me session.
> 
Maybe you could facilitate it?

regards
  Steve




From db3l.net at gmail.com  Fri Mar 21 16:56:26 2008
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 21 Mar 2008 16:56:26 -0400
Subject: [Twisted-Python] Re: SSL + AMP
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
Message-ID: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>

Nathan <nathan.stocks at gmail.com> writes:

> On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>>  If you could give some explanation of the security properties you expect
>>  (how do you intend for the client and server to exchange information
>>  about who they "really" are?) then we might be able to offer more direct
>>  guidance.
>
> The security properties that I want are:
>
> 1) My client and my server refuse to establish SSL (or any other type
> of) connections with anybody but each other.
> 2) My client and server do establish SSL connections with each other.
>
> Pretty simple in concept, really.  I'll go read the API docs like you
> suggested...

I posted a while back a small sample of how to handle that for a
general Twisted protocol that might be of some help, or point you in
the right direction as well.

http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html

(Note the followup messages that clarify an erroneous "False" left in
the original posted code)

This works fine with just normal CA/server/client certificates created
through the standard OpenSSL process and tools.

-- David




From jcd at sdf.lonestar.org  Fri Mar 21 18:03:05 2008
From: jcd at sdf.lonestar.org (J. Clifford Dyer)
Date: Fri, 21 Mar 2008 18:03:05 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <fs14e2$3rm$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com> <1206107575.6164.17.camel@jcd-desktop>
	<fs14e2$3rm$1@ger.gmane.org>
Message-ID: <1206136985.8836.3.camel@jcd-desktop>


On Fri, 2008-03-21 at 16:05 -0400, Steve Holden wrote:

> > 
> >> What we possibly need first of all is for someone to do a "Teach Me 
> >> Teach Me" in the tutorial track, with myself and a number of the more 
> >> experienced trainer types as the "subject matter experts". These things 
> >> are always one-off in nature and it's unrealistic to expect that they 
> >> will all have the same charm as "Teach Me Twisted" did this year for all 
> >> the reasons I mention above, but if it gets information out more 
> >> effectively about "difficult" topics it's probably worth a try if we can 
> >> find someone to facilitate them.
> >>
> > 
> > I'd love to try my hand at "teach me" style teaching, for what it's
> > worth, and would be interested in a Teach Me Teach Me session.
> > 
> Maybe you could facilitate it?
> 
> regards
>   Steve
> 
> 

Sounds like fun.  I'll think about it.


> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From washort at twistedmatrix.com  Fri Mar 21 18:07:02 2008
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Fri, 21 Mar 2008 18:07:02 -0400
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <20080321220702.GB13036@localhost.localdomain>

On Fri, Mar 21, 2008 at 12:23:08PM -0700, Don Dwiggins wrote:
> A small example of something that bothers me is the necessity to break 
> up otherwise "unitary" functions because some parts of them involve 
> communications or heavy computation.  More concretely, consider the 
> following sketch of a method:
> def frobulate(...):
>    step_1()
>    step_2()
>    step_3()
>    step_4()
>    step_5()
>    return result5
> 
> Where the steps are logically coherent parts of the frobulation (in 
> Beck's terms, the method "smells good").  Now assume that step_3 
> involves a database access.  To avoid blocking, I might twist it like this:
> 
> def frobulate():
>    step_1()
>    step_2()
>    deferred = step_3_async()
>    deferred.addCallback(frobulate_4_and_5)
>    return deferred
> 
> def frobulate_4_and_5(...):
>    step_4()
>    step_5()
>    return result5
> 
> (Where step_3 has been changed to start the access and return a
> deferred.)  In this simple sketch, the "visual noise" introduced isn't
> too bad, but I'm afraid that as the functions multiply and become more 
> complex, it'll make the application considerably harder to understand 
> and manage, and possibly more prone to errors and/or unintended 
> blocking, where twisting a synchronous operation would require serious 
> re-architecting.

There's a significant advantage to this approach you may not have
considered: When reading frobulate(), you can be assured that no other
code is being executed between step_1(), step_2(), and step_3_async().
Between step_3_async and step_4, anything may happen and arbitrary
amounts of time can pass. Having this explicitly represented in the code
makes certain things /much/ easier to reason about. I agree that the
syntax can be a little unwieldy, but the basic idea is sound: if you are
going to stop executing a multi-step operation and continue it later, it
should be clear that the flow of execution doesn't directly pass between
the two parts of the operation. There are other languages that make this
easier to express, but Python has enough advantages that I find this
problem worth putting up with. :)

><snip code example with generators>
> This is looking a lot better, but still the asynchrony of step_3 "shows 
> through".  (Again, I'm taking the viewpoint of someone trying to 
> understand, maintain, and extend the functionality of the application, 
> without having the asynchronous aspects "thrust in his face" more than 
> absolutely necessary.)

It does show through, and it has to, to make the program comprehensible.
I have a mild dislike for inlineCallbacks because it _does_ minimize the
changes between 'sequential' and 'twisted' code. :)

Basically, there are two choices in this regard for concurrency:

1) Preserve the property that only code you can see locally referenced
   can be executed (i.e., that in "step1(); step2()" only code called
   by those two functions can be executed before the statement is
   finished) and complicate the syntax in places where other code needs
   to be allowed to execute.

2) Preserve the syntax of statements being executed in order but give up
   the guarantee that nothing will be changed by 'outside' code in
   between them.

Twisted's design is centered entirely around #1. Multithreaded
concurrency chooses #2, which is why there's much need for locks and
mutexes and monitors and what have you. The result is slightly more
verbose code, but much more _understandable_ code.
 
> Of course, I can avoid all this by going to a threading or separate 
> process solution, but I'd like to find out if I'm missing something 
> before I make such a commitment.

Separate processes can be the best of both worlds -- things can run in
sequence and not affect each other in surprising ways. The downside is
that it's more difficult for them to affect each other at all. :)

I hope this helps explain some of Twisted's design choices.





From maarten at treewalker.org  Fri Mar 21 19:51:30 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 22 Mar 2008 00:51:30 +0100
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <200803220051.36054.maarten@treewalker.org>

On Friday 21 March 2008, Don Dwiggins wrote:

> @defer.inlineCallbacks
> def frobulate():
>     step_1()
>     step_2()
>     step3Rslt = yield step_3_async()
>     step_4()
>     step_5()
>     returnValue(result5)
>
> This is looking a lot better, but still the asynchrony of step_3 "shows
> through".  (Again, I'm taking the viewpoint of someone trying to
> understand, maintain, and extend the functionality of the application,
> without having the asynchronous aspects "thrust in his face" more than
> absolutely necessary.)
>
> Of course, I can avoid all this by going to a threading or separate
> process solution, but I'd like to find out if I'm missing something
> before I make such a commitment.

If you're going to put the business logic in a separate process, you can use 
Twisted in the central dispatch process and the programmer of a business 
logic module does not even have to know.

If you're going to use a single process, then you will need some mechanism 
to run business logic concurrently. No matter whether you choose threaded 
or asynchronous, you will not be able to hide your choice from the business 
logic programmer.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080322/96f81dc4/attachment.pgp 

From matt at madebykite.com  Sat Mar 22 05:47:09 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 22 Mar 2008 09:47:09 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080321220702.GB13036@localhost.localdomain>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
Message-ID: <87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>

I'd like to elaborate, for my own benefit as much as anyone else ;)

On 21 Mar 2008, at 22:07, washort at twistedmatrix.com wrote:
> 1) Preserve the property that only code you can see locally referenced
>    can be executed (i.e., that in "step1(); step2()" only code called
>    by those two functions can be executed before the statement is
>    finished) and complicate the syntax in places where other code  
> needs
>    to be allowed to execute.

Or another way of saying it is that what is slightly dangerous about  
inlineCallbacks is you lose any benefits of parallelism you may have  
been enjoying because you want to make your code slightly more  
readable / writeable.

Consider the following:

@defer.deferredGenerator
def foo(self, d):
     for x in self.somelist:
         w = defer.waitForDeferred(x.bar())
         yield w
     d.callback(True)

Each successive call of x.bar must wait for the previous one to  
complete. Whereas in the following example x.bar() is called in  
parallel for each item in self.someList:

def foo(self):
     d = defer.Deferred()
     self._done_count = 0
     for x in self.somelist:
         x.bar().addCallback(self._done_bar, d)
     return d

def _done_bar(self, result, d):
     self._done_count = self._done_count + 1
     if self._done_count == len(self.somelist):
         d.callback(result)

IMHO, inline callbacks should only be employed when you can guarantee  
that sequential executions of each statement is exactly what you want  
to do. Readability / writeability comes second.


Matt







From faraz.khan at emergen.biz  Sat Mar 22 06:36:34 2008
From: faraz.khan at emergen.biz (Faraz Khan)
Date: Sat, 22 Mar 2008 15:36:34 +0500
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <47E39D0A.8080707@imperial.ac.uk>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
	<47E39D0A.8080707@imperial.ac.uk>
Message-ID: <20080322153634.1263149rijyxmiqs@maggie.wswhost.net>

>>
>> Any advice would be highly appreciated.
>>
>>
>
> Run child processes doing the actual admin tasks.

You mean respawn a different process altogether using os.respawn or  
the likes? Thats what I would think- was just hoping for a less  
wasteful approach but I guess there is none.

Thanks!

-- 
Faraz R Khan
Chief Architect
Emergen Consulting Pvt Ltd
www.emergen.biz




From p.mayers at imperial.ac.uk  Sat Mar 22 06:51:57 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 22 Mar 2008 10:51:57 +0000
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <20080322153634.1263149rijyxmiqs@maggie.wswhost.net>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>	<47E39D0A.8080707@imperial.ac.uk>
	<20080322153634.1263149rijyxmiqs@maggie.wswhost.net>
Message-ID: <47E4E4CD.9000805@imperial.ac.uk>

Faraz Khan wrote:
>>>
>>> Any advice would be highly appreciated.
>>>
>>>
>>
>> Run child processes doing the actual admin tasks.
> 
> You mean respawn a different process altogether using os.respawn or the 

Yes, but you'll need to use the Twisted process support e.g. see 
twisted.internet.utils.getProcess*

> likes? Thats what I would think- was just hoping for a less wasteful 
> approach but I guess there is none.



From p.mayers at imperial.ac.uk  Sat Mar 22 08:21:57 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 22 Mar 2008 12:21:57 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <47E4F9E5.7030002@imperial.ac.uk>

> 
> In Python 2.5, I can say this more cleanly:
> 
> @defer.inlineCallbacks
> def frobulate():
>    step_1()
>    step_2()
>    step3Rslt = yield step_3_async()
>    step_4()
>    step_5()
>    returnValue(result5)
> 
> This is looking a lot better, but still the asynchrony of step_3 "shows 
> through".  (Again, I'm taking the viewpoint of someone trying to 
> understand, maintain, and extend the functionality of the application, 
> without having the asynchronous aspects "thrust in his face" more than 
> absolutely necessary.)
> 

The feeling amongst a lot of people, myself included, is that it's a 
*good* thing that the asynchronous nature shows. If you attempt to hide 
it, you forget the actual nature of the problem and start forgetting 
some fundamental problems that might occur.

A related example is Twisted's Perspective Broker - it explicitly has 
remoteref.callRemote('name', *args) semantics, so that callers are aware 
the errors returned could be any one of the network-related ones, as 
well as errors from the call itself.

> Of course, I can avoid all this by going to a threading or separate 
> process solution, but I'd like to find out if I'm missing something 
> before I make such a commitment.
> 
> Thanks for any good words,
> 




From mithrandi at mithrandi.net  Sat Mar 22 09:54:44 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 22 Mar 2008 15:54:44 +0200
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
Message-ID: <20080322135444.GA9572@mithrandi.net>

* Matthew Glubb <matt at madebykite.com> [2008-03-22 09:47:09 +0000]:

> Each successive call of x.bar must wait for the previous one to  
> complete. Whereas in the following example x.bar() is called in parallel 
> for each item in self.someList:
>
> def foo(self):
>     d = defer.Deferred()
>     self._done_count = 0
>     for x in self.somelist:
>         x.bar().addCallback(self._done_bar, d)
>     return d
>
> def _done_bar(self, result, d):
>     self._done_count = self._done_count + 1
>     if self._done_count == len(self.somelist):
>         d.callback(result)

Of course, you can also write this something like this (using
inlineCallbacks style just to save me some typing):

def foo(self):
    ds = []
    for x in self.somelist:
        ds.append(x.bar())
    for d in ds:
        yield d
    # Even better would probably be:
    # yield gatherResults(ds)

But yes, the danger of accidentally serializing operations that don't
need to be serialized, and not even realising it, is one of the problems
with this coding style.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080322/5777f2b5/attachment.pgp 

From waterbug at pangalactic.us  Sat Mar 22 11:58:30 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 22 Mar 2008 11:58:30 -0400
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12: 'safe'
	imported but unused"
In-Reply-To: <E1Jd3Qt-0003qs-HI@cube.twistedmatrix.com>
References: <E1Jd3Qt-0003qs-HI@cube.twistedmatrix.com>
Message-ID: <47E52CA6.60602@pangalactic.us>

trac at twistedmatrix.com wrote:
> Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun <exarkun at divmod.com>:
> 
> #3022 deprecated `twisted.enterprise.util` and everything in it, including `safe`.
> Once that's been out for a while, we'll get rid of this stuff.

Okay, but the problem is that "safe" is not even *used* in adbapi,
nor in my code, but every time adbapi is imported, the deprecation
warning *incorrectly* spews out -- it's rather deceptive, not to
mention annoying.

(The "imported but not used" warning came from pyflakes -- the
import should have been removed even before the deprecation.)

Steve



From exarkun at divmod.com  Sat Mar 22 15:08:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 22 Mar 2008 14:08:57 -0500
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12: 'safe'
	imported but unused"
In-Reply-To: <47E52CA6.60602@pangalactic.us>
Message-ID: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>

On Sat, 22 Mar 2008 11:58:30 -0400, Stephen Waterbury <waterbug at pangalactic.us> wrote:
>trac at twistedmatrix.com wrote:
>>Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun 
>><exarkun at divmod.com>:
>>
>>#3022 deprecated `twisted.enterprise.util` and everything in it, including 
>>`safe`.
>>Once that's been out for a while, we'll get rid of this stuff.
>
>Okay, but the problem is that "safe" is not even *used* in adbapi,
>nor in my code, but every time adbapi is imported, the deprecation
>warning *incorrectly* spews out -- it's rather deceptive, not to
>mention annoying.

Aha!  Sorry, I didn't get this from the ticket.  I've adjusted it
slightly so that, I hope, it is a bit more clear. :)

Jean-Paul



From waterbug at pangalactic.us  Sat Mar 22 17:43:17 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 22 Mar 2008 17:43:17 -0400
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12:
	'safe'	imported but unused"
In-Reply-To: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>
References: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>
Message-ID: <47E57D75.4040708@pangalactic.us>

Jean-Paul Calderone wrote:
> On Sat, 22 Mar 2008 11:58:30 -0400, Stephen Waterbury 
> <waterbug at pangalactic.us> wrote:
>> trac at twistedmatrix.com wrote:
>>> Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun 
>>> <exarkun at divmod.com>:
>>>
>>> #3022 deprecated `twisted.enterprise.util` and everything in it, 
>>> including `safe`.
>>> Once that's been out for a while, we'll get rid of this stuff.
>>
>> Okay, but the problem is that "safe" is not even *used* in adbapi,
>> nor in my code, but every time adbapi is imported, the deprecation
>> warning *incorrectly* spews out -- it's rather deceptive, not to
>> mention annoying.
> 
> Aha!  Sorry, I didn't get this from the ticket.  I've adjusted it
> slightly so that, I hope, it is a bit more clear. :)

No problem:  I understand, you thought I was just complaining about
the deprecation ... I don't mind deprecation warnings, as long as
I'm actually *using* the thing that I'm getting warned about.  ;)

Thanks!
Steve




From radix at twistedmatrix.com  Sat Mar 22 22:00:09 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 22 Mar 2008 22:00:09 -0400
Subject: [Twisted-Python] 8.0.0pre2
Message-ID: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>

Hi all. I just put out another pre-release of Twisted 8. Compared to
the last pre-release, this one comes with greatly improved IOCP
reactor and easy_installability. It's not registered on PyPI yet, but
you can test it by easy_installing the tarball directly. Only the main
Twisted tarball is easy_installable, not the subprojects.

http://twistedmatrix.com/users/radix/DIST/


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Sat Mar 22 22:33:40 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 22 Mar 2008 22:33:40 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>

On Sat, Mar 22, 2008 at 10:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hi all. I just put out another pre-release of Twisted 8. Compared to
>  the last pre-release, this one comes with greatly improved IOCP
>  reactor and easy_installability. It's not registered on PyPI yet, but
>  you can test it by easy_installing the tarball directly. Only the main
>  Twisted tarball is easy_installable, not the subprojects.
>
>  http://twistedmatrix.com/users/radix/DIST/

By the way, for those of you who were unhappy with the fact that the
NEWS files were split up and hard to find, the new release includes a
top-level NEWS that aggregates the NEWS files from all the
subprojects.

It's available here, if you just want to browse:

http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Sat Mar 22 23:48:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 03:48:23 -0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080322135444.GA9572@mithrandi.net>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
Message-ID: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>

On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
>But yes, the danger of accidentally serializing operations that don't
>need to be serialized, and not even realising it, is one of the 
>problems
>with this coding style.

As time goes on, I'm becoming a bigger fan of inlineCallbacks.

Too much serialization, even accidental serialization, trades 
comprehensibility for performance.  I think that's a reasonable place to 
start: make your system easy to understand, then make it fast once you 
know what's going on.

It's not a good place to end up, though.  So it's important to use 
inlineCallbacks for the right thing.

It's great as a high-level prototyping tool and an orchestration 
language for distributed conversations with large numbers of steps and 
coarse-grained error handling.  It's bad as a way of representing state 
machines or continuous processes.

In other words, don't implement protocols or frameworks with 
inlineCallbacks.  You should be working with higher level things that 
already return Deferreds.  A key hint that you're trying to brute-force 
a state machine: the entire body of your inlineCallbacks function is a 
loop.



From glyph at divmod.com  Sat Mar 22 23:56:24 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 03:56:24 -0000
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
Message-ID: <20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>


On 02:33 am, radix at twistedmatrix.com wrote:
>It's available here, if you just want to browse:
>
>http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt

The description of #2180 is incorrect; DeferredFilesystemLock is in 
twisted.internet.defer, not twisted.python.lockfile.



From mithrandi at mithrandi.net  Sat Mar 22 23:57:16 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 23 Mar 2008 05:57:16 +0200
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <20080323035716.GA20787@mithrandi.net>

* glyph at divmod.com <glyph at divmod.com> [2008-03-23 03:48:23 -0000]:

> It's great as a high-level prototyping tool and an orchestration  
> language for distributed conversations with large numbers of steps and  
> coarse-grained error handling.  It's bad as a way of representing state  
> machines or continuous processes.

That's a pretty nice description, I think I'll file that one away; I
haven't actually used inlineCallbacks (or defgen) in any real code, but
back before I discovered Twisted, I wrote an application where I was
using Stackless in a fashion similar to inlineCallbacks to sequence
operations that had to be performed in a fairly complex and sequential
order. Each step was broken down into its own code, and then it was all
put together in a "master" function, which I would have written with
inlineCallbacks in Twisted code.

> In other words, don't implement protocols or frameworks with  
> inlineCallbacks.  You should be working with higher level things that  
> already return Deferreds.  A key hint that you're trying to brute-force  
> a state machine: the entire body of your inlineCallbacks function is a  
> loop.

The corollary(?) to this is that if your normal deferred/callback-code
feels too awkward, perhaps you need to break it down into
better-contained logical units, rather than trying to smush it all
together inlineCallbacks-style.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080323/d8e80488/attachment.pgp 

From exarkun at twistedmatrix.com  Sun Mar 23 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Mar 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1206245107.62.1047160022@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080323/57bddbb5/attachment.htm 

From p.mayers at imperial.ac.uk  Sun Mar 23 07:06:23 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 23 Mar 2008 11:06:23 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <47E639AF.2020200@imperial.ac.uk>

> 
> It's great as a high-level prototyping tool and an orchestration 
> language for distributed conversations with large numbers of steps and 
> coarse-grained error handling.  It's bad as a way of representing state 
> machines or continuous processes.

Why?



From manlio_perillo at libero.it  Sun Mar 23 07:17:18 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 23 Mar 2008 12:17:18 +0100
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <47E63C3E.5050509@libero.it>

Christopher Armstrong ha scritto:
> Hi all. I just put out another pre-release of Twisted 8. 

I personally dislike this new versioning scheme.



Manlio Perillo



From lists at collab.nl  Sun Mar 23 11:03:04 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Sun, 23 Mar 2008 16:03:04 +0100
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <47E63C3E.5050509@libero.it>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
Message-ID: <9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>

I also dislike the idea. One major version nr per year sounds ok but  
why not use Twisted 3.x for 2008, Twisted 4.x for 2009 etc.

Thijs

On Mar 23, 2008, at 12:17 PM, Manlio Perillo wrote:

> Christopher Armstrong ha scritto:
>> Hi all. I just put out another pre-release of Twisted 8.
>
> I personally dislike this new versioning scheme.
>
>
>
> Manlio Perillo
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From phil at bubblehouse.org  Sun Mar 23 11:13:28 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 23 Mar 2008 11:13:28 -0400
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
Message-ID: <141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>

On Mar 23, 2008, at 12:17 PM, Manlio Perillo wrote:
> Christopher Armstrong ha scritto:
>> Hi all. I just put out another pre-release of Twisted 8.
>
> I personally dislike this new versioning scheme.
>
> On Mar 23, 2008, at 11:03 AM, Thijs Triemstra | Collab wrote:
>> I also dislike the idea. One major version nr per year sounds ok  
>> but why not use Twisted 3.x for 2008, Twisted 4.x for 2009 etc.
>>
>> Thijs

I've got to defend the new scheme, because I like big version numbers,  
and Twisted is awesome enough that I think it deserves them, like  
Ubuntu (which I admit is the only other project I know of that uses  
the yearly version scheme....well, besides the windows 9x  
series... ;-) ).

But one thing that I think is nice about Ubuntu's scheme is that point  
releases are based on the month of the year.

I wonder if the Twisted approach of mixing the year-style and the  
fractional-version style might be too confusing.

-phil



From radix at twistedmatrix.com  Sun Mar 23 11:49:37 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 11:49:37 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
	<20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>
Message-ID: <60ed19d40803230849g422bb7eby9eaf461760f0f664@mail.gmail.com>

On Sat, Mar 22, 2008 at 11:56 PM,  <glyph at divmod.com> wrote:
>
>  On 02:33 am, radix at twistedmatrix.com wrote:
>  >It's available here, if you just want to browse:
>  >
>  >http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt
>
>  The description of #2180 is incorrect; DeferredFilesystemLock is in
>  twisted.internet.defer, not twisted.python.lockfile.

Thanks for pointing this out. I'm glad someone's reading that
changelog. :-) I'll fix it.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From zooko at zooko.com  Sun Mar 23 11:55:17 2008
From: zooko at zooko.com (zooko)
Date: Sun, 23 Mar 2008 09:55:17 -0600
Subject: [Twisted-Python] Hack Fest 4!  San Francisco, Thursday, March 27,
	2008
Message-ID: <67F5F606-02CB-4FEA-BC97-C5C7B7ACD93E@zooko.com>

Folks:

Allmydata.com will host our Fourth Hack Fest this coming Thursday  
evening, starting at 17:00, at Allmydata HQ in San Francisco.

We will provide pizza, pop, pilsners [*], projectors, packets [**],  
pillows and pre-recorded music [***].  You will provide code, which  
will sing and dance on the projector screens.  Anyone who changes  
their source code and runs the result live gets double bonus points!   
We like Open Source Software (and Free Software), and peer-to-peer,  
and many other things (at Hack Fest 3, Second Life was lots of fun).

You are also welcome to come and sit quietly and stare into your  
laptop all night while chatting on IRC, like some people always do.   
Also you are welcome to drink lots of beer and excitedly tell stories  
and argue.

Please e-mail zooko at zooko.com and secorp at allmydata.com .

Regards,

Zooko

[*] or possibly other beers, as determined by Peter at time of purchase
[**] IPv4 only; ethernet and 802.11g available
[***] produced by Justin Boreta, mild-mannered QA guy by day, famous  
DJ by night



From therve at free.fr  Sun Mar 23 08:29:11 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Sun, 23 Mar 2008 13:29:11 +0100
Subject: [Twisted-Python] Re: writing back to the connection
	=?iso-8859-1?q?is=09blocking_my?= code
In-Reply-To: <47E3EC5E.9000501@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
	<47E3EC5E.9000501@lavabit.com>
Message-ID: <200803231329.11754.therve@free.fr>

Le Friday 21 March 2008 18:11:58 coder_gus, vous avez ?crit?:
> Yup, that made it alot clear and thanks so much for it :)
>
> But now another question comes up: what if for a special client I want
> to inject some data ... let's say that while he is processing some
> tasks, the backend observes that some data in the database has altered
> and wants to notify the client that he can't use that data anymore - if
> I am using deferToThread I don't think sending data back trough that is
> pretty easy ... or am I wrong?

Indeed, that's not a problem. You just have to pass something to your task 
that will allow it to send data back, and remember that Twisted is not 
threadsafe so that you must use reactor.callFromThread. Let's get back to our 
example:

def blockingTask(content, safeWrite):
     import sqlalchemy
     # sqlalchemy stuff
     query = session.query("bla")
     data  = query.getresult()
     if data == "unexpected":
         safeWrite("Not expected!")
         # But I continue my task
     ....
     return result


class CommandProtocol(Protocol):
     def __init__(self):
         self.buf = ''

     def safeWrite(self, data):
         reactor.callFromThread(self.transport.write, data)

     def dataReceived(self, data):
         self.buf += data
         # This is stupid, don't do that
         while '</end_command>' in self.buf:
              content, self.buf = self.buf.split('</end_command>', 1)
              content += '</end_command>'
              deferToThread(blockingTask, content,     
                      self.safeWrite).addCallback(self.response)

     def response(self, result):
         # I got the response event!
         self.sendLine.write("response %s" % (result,))


See? We're passing a method to the task, so that you can send notification 
whenever you want. In practice, you'll have to check if the connection is 
still alive, but the main thing to remind is to use reactor.callFromThread.

-- 
Thomas



From radix at twistedmatrix.com  Sun Mar 23 15:26:54 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 15:26:54 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <60ed19d40803231226m12e53a24j1369dd09d7ddf0a2@mail.gmail.com>

On Sat, Mar 22, 2008 at 10:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hi all. I just put out another pre-release of Twisted 8. Compared to
>  the last pre-release, this one comes with greatly improved IOCP
>  reactor and easy_installability. It's not registered on PyPI yet, but
>  you can test it by easy_installing the tarball directly. Only the main
>  Twisted tarball is easy_installable, not the subprojects.
>
>  http://twistedmatrix.com/users/radix/DIST/


We've found a bug which prevents easy_installing from the main
Twisted-8.0.0pre2.tar.bz2 file if you're using Python 2.4. This is
because of a bug in the tarfile module, which easy_install uses to
extract tar files. It seems to be related to long paths inside the tar
file. Any time the toplevel directory entry is 17 bytes long, this
behavior is invoked, and that's how long "Twisted-8.0.0pre2" is. It's
probably related to this bug: http://bugs.python.org/issue1484695,
especially the comment 50215.

I know, it's like a sick joke. But anyway, you should be able to
easy_install with python 2.5. By accident, when we actually release
the final version, it will be possible to install because the paths in
the tar file will be realigned to avoid the bug (I've tested this, but
obviously we can't keep guaranteeing this in the future; hopefully
python2.4 will have a new release with this bugfix backported).

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From nico at teknico.net  Sun Mar 23 16:46:24 2008
From: nico at teknico.net (Nicola Larosa)
Date: Sun, 23 Mar 2008 21:46:24 +0100
Subject: [Twisted-Python] Re: 8.0.0pre2
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
Message-ID: <20080323204627.19B7A124021@slice.teknico.net>

Phil Christensen wrote:
> I've got to defend the new scheme, because I like big version numbers,
> and Twisted is awesome enough that I think it deserves them, like
> Ubuntu (which I admit is the only other project I know of that uses
> the yearly version scheme....well, besides the windows 9x
> series... ;-) ).
> 
> But one thing that I think is nice about Ubuntu's scheme is that point
> releases are based on the month of the year.
> 
> I wonder if the Twisted approach of mixing the year-style and the
> fractional-version style might be too confusing.

I have to second this. Using the year is fine, but:

1) mixing the year for major and arbitrary minor and bugfix is ugly;

2) doing something like Ubuntu, but not quite, does not help.

-- 
Nicola Larosa - http://www.tekNico.net/

Sometimes you don't want things that work like the real world, sometimes
you want things that work like computers. -- Damien Katz, April 2006





From radix at twistedmatrix.com  Sun Mar 23 17:09:48 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 17:09:48 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323204627.19B7A124021@slice.teknico.net>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
Message-ID: <60ed19d40803231409q43991082l5a0800cfda285e56@mail.gmail.com>

On Sun, Mar 23, 2008 at 4:46 PM, Nicola Larosa <nico at teknico.net> wrote:
> Phil Christensen wrote:
>  > I've got to defend the new scheme, because I like big version numbers,
>  > and Twisted is awesome enough that I think it deserves them, like
>  > Ubuntu (which I admit is the only other project I know of that uses
>  > the yearly version scheme....well, besides the windows 9x
>  > series... ;-) ).
>  >
>  > But one thing that I think is nice about Ubuntu's scheme is that point
>  > releases are based on the month of the year.
>  >
>  > I wonder if the Twisted approach of mixing the year-style and the
>  > fractional-version style might be too confusing.
>
>  I have to second this. Using the year is fine, but:
>
>  1) mixing the year for major and arbitrary minor and bugfix is ugly;
>
>  2) doing something like Ubuntu, but not quite, does not help.

Using months for the secondary number is confusing. See how many
people talk about imaginary releases like "Ubuntu 7.0" and "Ubuntu
7.1". This scheme makes it look enough like a version number that
those kinds of things are unlikely.

Anyway, the version number is fairly irrelevant. I'd suggest not
worrying about it too much, because it's really unlikely to affect
anyone.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From therve at free.fr  Sun Mar 23 09:47:04 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Sun, 23 Mar 2008 14:47:04 +0100
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323204627.19B7A124021@slice.teknico.net>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
Message-ID: <200803231447.04145.therve@free.fr>

Le Sunday 23 March 2008 21:46:24 Nicola Larosa, vous avez ?crit?:
> Phil Christensen wrote:
> > I've got to defend the new scheme, because I like big version numbers,
> > and Twisted is awesome enough that I think it deserves them, like
> > Ubuntu (which I admit is the only other project I know of that uses
> > the yearly version scheme....well, besides the windows 9x
> > series... ;-) ).
> >
> > But one thing that I think is nice about Ubuntu's scheme is that point
> > releases are based on the month of the year.
> >
> > I wonder if the Twisted approach of mixing the year-style and the
> > fractional-version style might be too confusing.
>
> I have to second this. Using the year is fine, but:
>
> 1) mixing the year for major and arbitrary minor and bugfix is ugly;
>
> 2) doing something like Ubuntu, but not quite, does not help.

There is a ticket opened in the tracker: 
http://twistedmatrix.com/trac/ticket/2353. This is probably the best place to 
discuss this.

-- 
Thomas



From glyph at divmod.com  Sun Mar 23 19:14:55 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 23:14:55 -0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <47E639AF.2020200@imperial.ac.uk>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
	<47E639AF.2020200@imperial.ac.uk>
Message-ID: <20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>

On 11:06 am, p.mayers at imperial.ac.uk wrote:
>>
>>It's great as a high-level prototyping tool and an orchestration 
>>language for distributed conversations with large numbers of steps and 
>>coarse- grained error handling.  It's bad as a way of representing 
>>state machines or continuous processes.
>
>Why?

Here's something which we probably should have done with a state 
machine, but instead did with deferredGenerator (the predecessor to 
inlineCallbacks).

http://divmod.org/trac/browser/trunk/Quotient/xquotient/grabber.py#L438

The function's really long, and there's a ton of duplication between all 
of the "except" clauses, and there needs to be a try/except around every 
single deferred call.  This probably would have been better implemented 
as a regular state-machine, because that would have allowed decomposing 
the problem further.

Granted, you could blame the factoring here on any number of things.  It 
could have been broken into different steps even with deferredGenerator, 
it could have been documented better, it could have stored more state on 
the instance so that you could inspect its state rather than hiding it 
as local variables... but given that this is general stylistic advice I 
think that the point holds.



From adelagon at gmail.com  Mon Mar 24 04:54:33 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 24 Mar 2008 16:54:33 +0800
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <200803231447.04145.therve@free.fr>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
	<200803231447.04145.therve@free.fr>
Message-ID: <7a01f6c00803240154r2410e017ie46808772b97fe7f@mail.gmail.com>

A little bit off-topic. Anyone tried replacing
twisted.internet.epollreactor.py from this branch to their twisted
2.50installations to fix the
99.9% CPU load issue? I tried this on one of my dev servers so far it's
fine.

----
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080324/4453d20e/attachment.htm 

From vvangelovski at gmail.com  Mon Mar 24 09:48:22 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 24 Mar 2008 14:48:22 +0100
Subject: [Twisted-Python] URL encoding
Message-ID: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>

Is there any method in twisted that does proper url encoding? For
example 'http://www.example.com/part1 part2.html' ->
'http://www.example.com/part1%20part2.html'



From exarkun at divmod.com  Mon Mar 24 10:33:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 09:33:37 -0500
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
Message-ID: <20080324143337.6859.681364631.divmod.quotient.22374@ohm>

On Mon, 24 Mar 2008 14:48:22 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>Is there any method in twisted that does proper url encoding? For
>example 'http://www.example.com/part1 part2.html' ->
>'http://www.example.com/part1%20part2.html'
>

See the stdlib urllib module for APIs for manipulating URLs.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 10:34:00 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 09:34:00 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: 0
Message-ID: <20080324143400.6859.1218997852.divmod.quotient.22375@ohm>

I've been trying to put a few patches into twisted.python.filepath lately to support symlinks.  This is because I'm trying to implement a conch SFTP server using FilePath.

I know FilePath is supposed to be cross-platform, so I am wondering how to go about it.  For instance, it would be really easy to add a flag to restat that specifies whether to use os.stat o os.lstat.

But how should I handle the getAccessTime/etc. functions?  Should I add a FilePath.symlink() function (that creates a symlink to said FilePath)?

Should I just implement my own subclass of FilePath that handles symlinks and not try to change FilePath?

Thanks for the help,
Ying



From nathan.stocks at gmail.com  Mon Mar 24 10:40:23 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 08:40:23 -0600
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
Message-ID: <96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>

On Mon, Mar 24, 2008 at 7:48 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> Is there any method in twisted that does proper url encoding? For
>  example 'http://www.example.com/part1 part2.html' ->
>  'http://www.example.com/part1%20part2.html'

What about urllib.quote or urllib.urlencode?

http://docs.python.org/lib/module-urllib.html

~ Nathan



From vvangelovski at gmail.com  Mon Mar 24 11:20:05 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 24 Mar 2008 16:20:05 +0100
Subject: [Twisted-Python] URL encoding
In-Reply-To: <96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
Message-ID: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>

urllib.quote is useless as is

>>> urllib.quote('http://www.example.com/part1 part2.html')
'http%3A//www.example.com/part1%20part2.html

and from what I understand urllib.urlencode is for encoding query parameters.

On Mon, Mar 24, 2008 at 3:40 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Mon, Mar 24, 2008 at 7:48 AM, Vasil Vangelovski
>  <vvangelovski at gmail.com> wrote:
>  > Is there any method in twisted that does proper url encoding? For
>  >  example 'http://www.example.com/part1 part2.html' ->
>  >  'http://www.example.com/part1%20part2.html'
>
>  What about urllib.quote or urllib.urlencode?
>
>  http://docs.python.org/lib/module-urllib.html
>
>  ~ Nathan
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Mar 24 11:33:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 10:33:11 -0500
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <20080324153311.6859.1221002954.divmod.quotient.22397@ohm>

On Mon, 24 Mar 2008 16:20:05 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>urllib.quote is useless as is
>
>>>> urllib.quote('http://www.example.com/part1 part2.html')
>'http%3A//www.example.com/part1%20part2.html
>
>and from what I understand urllib.urlencode is for encoding query parameters.

It's not useless, it just doesn't make any sense to use it that way.  Use
urllib.quote on each segment value _before_ you build the larger URL out
of it.

    'http://www.example.com/' + urllib.quote('part1 part2.html')

Since this isn't really Twisted related, please follow up on the subject
on comp.lang.python.

Jean-Paul



From nathan.stocks at gmail.com  Mon Mar 24 11:39:20 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 09:39:20 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80803240839r21ddeb37qcdcb0aaa65916615@mail.gmail.com>

On Fri, Mar 21, 2008 at 2:56 PM, David Bolen <db3l.net at gmail.com> wrote:
>
> Nathan <nathan.stocks at gmail.com> writes:
>
>  > On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>  >>  If you could give some explanation of the security properties you expect
>  >>  (how do you intend for the client and server to exchange information
>  >>  about who they "really" are?) then we might be able to offer more direct
>  >>  guidance.
>  >
>  > The security properties that I want are:
>  >
>  > 1) My client and my server refuse to establish SSL (or any other type
>  > of) connections with anybody but each other.
>  > 2) My client and server do establish SSL connections with each other.
>  >
>  > Pretty simple in concept, really.  I'll go read the API docs like you
>  > suggested...
>
>  I posted a while back a small sample of how to handle that for a
>  general Twisted protocol that might be of some help, or point you in
>  the right direction as well.
>
>  http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html
>
>  (Note the followup messages that clarify an erroneous "False" left in
>  the original posted code)
>
>  This works fine with just normal CA/server/client certificates created
>  through the standard OpenSSL process and tools.
>
>  -- David

That's just what I was looking for!

I'm going to see if I can use that example to add SSL to my AMP stuff
by the end of today.  First, I've got to finish figuring out the
certificate authority stuff.  I'm working through the following page
to set up my own local CA:

http://sial.org/howto/openssl/ca/

If anyone knows a better guide to follow, please let me know!

~ Nathan



~ Nathan



From drew.smathers at gmail.com  Mon Mar 24 11:42:13 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 24 Mar 2008 11:42:13 -0400
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>

On Mon, Mar 24, 2008 at 11:20 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> urllib.quote is useless as is
>
>  >>> urllib.quote('http://www.example.com/part1 part2.html')
>  'http%3A//www.example.com/part1%20part2.html
>
>  and from what I understand urllib.urlencode is for encoding query parameters.
>

You want to quote only everything after "http://".  ':' is valid only
to delimit the schema from the URI - so the quoting is correct.

-Drew



From nathan.stocks at gmail.com  Mon Mar 24 11:45:47 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 09:45:47 -0600
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <96c9d6a80803240845t7567dee3x3e93c490bb046826@mail.gmail.com>

On Mon, Mar 24, 2008 at 9:20 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> urllib.quote is useless as is
>
>  >>> urllib.quote('http://www.example.com/part1 part2.html')
>  'http%3A//www.example.com/part1%20part2.html

So don't give it the 'http://www.example.com/' part.

~ Nathan



From ddwiggins at advpubtech.com  Mon Mar 24 12:57:12 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 24 Mar 2008 09:57:12 -0700
Subject: [Twisted-Python] Re: Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <fs8mh9$f00$1@ger.gmane.org>

Thanks to all the good folks who replied to this; good stuff to chew on. 
  I particularly liked glyph's advice on when and where to use the 
inline callback style, and when/where to avoid it.  I think I'll 
continue along the path I described, at least for a while.  I may be 
back with more on this topic.

Best to all,
-- 
Don Dwiggins
Advanced Publishing Technology




From exarkun at divmod.com  Mon Mar 24 13:37:07 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 12:37:07 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324143400.6859.1218997852.divmod.quotient.22375@ohm>
Message-ID: <20080324173707.6859.1585951735.divmod.quotient.22439@ohm>

On Mon, 24 Mar 2008 09:34:00 -0500, Ying Li <cyli at alum.mit.edu> wrote:
>I've been trying to put a few patches into twisted.python.filepath lately to 
>support symlinks.  This is because I'm trying to implement a conch SFTP 
>server using FilePath.

Hooray!  Thanks for working on FilePath. :)

>
>I know FilePath is supposed to be cross-platform, so I am wondering how to 
>go about it.

Hmm.  I guess FilePath _is_ supposed to be cross-platform.  Maybe it would
be useful to list the other things it is supposed to be:

  * easier to use than os.path.*
  * more efficient in naive usage (hence `restat?)
  * sufficiently self-contained so that things like ZipPath are possible
  * safe against common security-related mistakes (hence `child?)

Whether or not it succeeds at any of these goals is probably an open
question, and work could probably be done to improve it in all these
areas, _and_ the approach taken to accomplish some of these goals may
be questionable.

>  For instance, it would be really easy to add a flag to restat 
>that specifies whether to use os.stat o os.lstat.

It sounds like this change would increase the (already slightly too high)
level of weirdness in FilePath stat caching.  On the other hand, I'm not
really sure how link handling should sensibly be done in FilePath at all.

>
>But how should I handle the getAccessTime/etc. functions?  Should I add a 
>FilePath.symlink() function (that creates a symlink to said FilePath)?

`FilePath.symlink? (or maybe better, something like `FilePath.linkTo?)
seems like a good addition to the API.  `get*Time? is a bit trickier.  An
option might be to expose an `lstat? method and let applications worry
about getting the necessary information out of that when they know they
care about the link, not its target.

>
>Should I just implement my own subclass of FilePath that handles symlinks 
>and not try to change FilePath?

It'd be great to have anything that's generally useful incorporated into
Twisted.  It might make sense to have a FilePath subclass for a while to
see what is an isn't useful for your SFTP server - or you might be happy
enough to briefly have a local copy of Twisted with your modifications
and only submit them once you're happy with them.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 14:15:46 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 13:15:46 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324173707.6859.1585951735.divmod.quotient.22439@ohm>
Message-ID: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>

>>Should I just implement my own subclass of FilePath that handles symlinks 
>>and not try to change FilePath?
>
>It'd be great to have anything that's generally useful incorporated into
>Twisted.  It might make sense to have a FilePath subclass for a while to
>see what is an isn't useful for your SFTP server - or you might be happy
>enough to briefly have a local copy of Twisted with your modifications
>and only submit them once you're happy with them.

Well, I did write one, and that's when I was told to start submitting my changes into FilePath.  :)  Basically I need to be able to handle symlinks as links - hence the restat.

There are other things I need, such as an openWithFlags method (basically, the ISFPTServer interface specifies that I need to be able to open a file with a bunch of flags (read, write, append, create, truncate, exclusive), and I'd like to simply pass that through to a method.  I've tried to come up with a fairly elaborate mapping of said flags onto (r, w, r+, w+, etc.), but there are some things (like the exclusive flag) I don't know what to do with.

I'm not sure if this would be useful in FilePath.  

Another thing I need is to be able to change permissions.  My applications ignores requests to change ownership and such, but being able to change permissions I think would be good.  And I know that FilePath.copyTo and FilePath.moveTo right now do not preserve permissions or ownership - I'm not sure if this is desired behavior, but if it isn't, then FilePath needs some mechanism for changing the attributes of a file or directory.  But then we get into platform problems, and FilePath may get overly complicated.



From jcd at sdf.lonestar.org  Mon Mar 24 14:26:24 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Mon, 24 Mar 2008 14:26:24 -0400
Subject: [Twisted-Python] URL encoding
In-Reply-To: <368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
	<368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>
Message-ID: <1206383184.25468.5.camel@aalcdl07.lib.unc.edu>

On Mon, 2008-03-24 at 11:42 -0400, Drew Smathers wrote:
>
> You want to quote only everything after "http://".  ':' is valid only
> to delimit the schema from the URI - so the quoting is correct.
> 

And to delimit port number.  So as others are saying, start after the
host name altogether.





From exarkun at divmod.com  Mon Mar 24 14:30:18 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 13:30:18 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>
Message-ID: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>

On Mon, 24 Mar 2008 13:15:46 -0500, Ying Li <cyli at alum.mit.edu> wrote:
>>>Should I just implement my own subclass of FilePath that handles symlinks 
>>>and not try to change FilePath?
>>
>>It'd be great to have anything that's generally useful incorporated into
>>Twisted.  It might make sense to have a FilePath subclass for a while to
>>see what is an isn't useful for your SFTP server - or you might be happy
>>enough to briefly have a local copy of Twisted with your modifications
>>and only submit them once you're happy with them.
>
>Well, I did write one, and that's when I was told to start submitting my 
>changes into FilePath.  :)

Aha. :)

>Basically I need to be able to handle symlinks as links - hence the restat.

So are you looking for something like this?

    fp = FilePath(...)
    fp.restat(lstat=True)
    fp.getModificationTime() # link's modification time

I'm not sure about that.  Aside from the freaky action at a distance, it
probably is prone to failures when certain FilePath methods internally
decide to restat, thus replacing the link data with data about the target.

The cop-out API would be one like this:

    fp = FilePath(...)
    fp.lstat().st_mtime # link's modification time

I can't think of anything strictly better at the moment, though.  What does
usage in your application suggest is a good approach?

>
>There are other things I need, such as an openWithFlags method (basically, 
>the ISFPTServer interface specifies that I need to be able to open a file 
>with a bunch of flags (read, write, append, create, truncate, exclusive), 
>and I'd like to simply pass that through to a method.  I've tried to come up 
>with a fairly elaborate mapping of said flags onto (r, w, r+, w+, etc.), but 
>there are some things (like the exclusive flag) I don't know what to do 
>with.

It seems like FilePath.open has some issues currently.  It would be a good
thing if it had an API which allowed explicit, precise control over how the
open happened.

>
>I'm not sure if this would be useful in FilePath.
>Another thing I need is to be able to change permissions.  My applications 
>ignores requests to change ownership and such, but being able to change 
>permissions I think would be good.  And I know that FilePath.copyTo and 
>FilePath.moveTo right now do not preserve permissions or ownership - I'm not 
>sure if this is desired behavior, but if it isn't, then FilePath needs some 
>mechanism for changing the attributes of a file or directory.  But then we 
>get into platform problems, and FilePath may get overly complicated.
>

FilePath.chmod would be a great addition.  `copyTo? and `moveTo? should try
to preserve permission (at least optionally).  I'm not sure if this would
have scary consequences (handling failures, for example, complicates the
matter), but at least the idea is nice.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 16:48:25 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 15:48:25 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
Message-ID: <20080324204825.6859.231245952.divmod.quotient.22510@ohm>

>So are you looking for something like this?
>
>    fp = FilePath(...)
>    fp.restat(lstat=True)
>    fp.getModificationTime() # link's modification time
>
>I'm not sure about that.  Aside from the freaky action at a distance, it
>probably is prone to failures when certain FilePath methods internally
>decide to restat, thus replacing the link data with data about the target.
>
>The cop-out API would be one like this:
>
>    fp = FilePath(...)
>    fp.lstat().st_mtime # link's modification time
>
>I can't think of anything strictly better at the moment, though.  What does
>usage in your application suggest is a good approach?

Well I had fp.restat(lstat=True) and fp.getModificationTime(lstat=True), and I'd just pass the lstat variable through.  Mostly I did this to make it compatible with the existing FilePath.  I actually only need the second approach - I sort of need to get all the attributes at once, so convenience attribute-getting methods are kind of useless for me.  So the "cop-out" API you suggest actually works better for me.



From nathan.stocks at gmail.com  Mon Mar 24 16:53:05 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 14:53:05 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>

On Fri, Mar 21, 2008 at 2:56 PM, David Bolen <db3l.net at gmail.com> wrote:
>  I posted a while back a small sample of how to handle that for a
>  general Twisted protocol that might be of some help, or point you in
>  the right direction as well.
>
>  http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html
>
>  (Note the followup messages that clarify an erroneous "False" left in
>  the original posted code)
>
>  This works fine with just normal CA/server/client certificates created
>  through the standard OpenSSL process and tools.

I've generated a CA file, some private keys (and their corresponding
CSR's and certificates), and incorporated chunks of code from the post
you linked to above (and fixed the "returning ok" bit), but I'm
running into the following error:

[('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
failure')]

So close!  I wonder if this has something to do with the fact that my
two endpoints are both on localhost, and not on some domain name?
Just a stab in the dark.

Anyway, here's the debugging print statement info from the client side
(I scrubbed out personal info):

_verify (ok=1):
  subject: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  issuer: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  errnum 0, errdepth 1

_verify (ok=1):
  subject: <X509Name object
'/C=US/ST=Utah/O=mycompany.com/CN=controller/emailAddress=operations at mycompany.com'>
  issuer: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  errnum 0, errdepth 0

And here's the ssl code from the client (the only significant change I
made was the filenames):

class ClientContextFactory(ssl.ClientContextFactory):

   def _verify(self, connection, x509, errnum, errdepth, ok):
      print '_verify (ok=%d):' % ok
      print '  subject:', x509.get_subject()
      print '  issuer:', x509.get_issuer()
      print '  errnum %s, errdepth %d' % (errnum, errdepth)
      return ok

   def getContext(self):
      ctx = ssl.ClientContextFactory.getContext(self)
      ctx.use_certificate_file('ssl/private/nathanmonitor.cert')
      ctx.use_privatekey_file('ssl/private/nathanmonitor.key')
      ctx.load_verify_locations('ssl/ca-cert.pem')
      ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT,
                     self._verify)
      return ctx

ClientCreator(reactor, MonitorClientProtocol).connectSSL(
  'localhost', MONITOR_PORT, ClientContextFactory()).addCallback(
                        monitor_window.install_amp_client)


nathanmonitor.key is the private ssl key of my "monitor" client

ca-cert.pem is the custom CA certificate I made by following
http://sial.org/howto/openssl/ca/

nathanmonitor.cert is the ssl certificate of my "monitor" client
generated with my custom CA and a .csr of nathanmonitor.key


On the server side, the error output is pretty quiet:

_verify (ok=1):
subject:<X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>

...here's my server code (again, pretty much the same except for cert files)

class ServerContextFactory:
   def _verify(self, connection, x509, errnum, errdepth, ok):
      logging.info('_verify (ok=%d):' % ok)
      logging.info('  subject:%s' % x509.get_subject())
      logging.info('  issuer:', x509.get_issuer())
      logging.info('  errnum %s, errdepth %d' % (errnum, errdepth))
      return ok

   def getContext(self):
      """Create an SSL context."""
      ctx = SSL.Context(SSL.SSLv23_METHOD)
      ctx.use_certificate_file('ssl/private/controller.cert')
      ctx.use_privatekey_file('ssl/private/controller.key')
      ctx.load_client_ca('ssl/ca-cert.pem')
      ctx.load_verify_locations('ssl/ca-cert.pem')
      ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT,
                     self._verify)
      ctx.set_verify_depth(10)
      return ctx

reactor.listenSSL(MONITOR_PORT, monitor_factory, ServerContextFactory())


controller.key is the private ssl key of the "server"

ca-cert.pem is the same custom CA certificate file as used in the client.

controller.cert is the ssl certificate of the "server" generated with
my custom CA and a .csr of controller.key



From nathan.stocks at gmail.com  Mon Mar 24 16:57:43 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 14:57:43 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
Message-ID: <96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>

I'm not concious of changing anything, but the error has changed to simply:

[('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]

...and none of the _verify() debugging output is being printed out on
either side anymore.  Weird!

~ Nathan



From glyph at divmod.com  Mon Mar 24 16:58:45 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 24 Mar 2008 20:58:45 -0000
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
References: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>
	<20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
Message-ID: <20080324205845.21558.1364408822.divmod.xquotient.8789@joule.divmod.com>


On 06:30 pm, exarkun at divmod.com wrote:
>On Mon, 24 Mar 2008 13:15:46 -0500, Ying Li <cyli at alum.mit.edu> wrote:

>So are you looking for something like this?
>
>    fp = FilePath(...)
>    fp.restat(lstat=True)
>    fp.getModificationTime() # link's modification time
>
>I'm not sure about that.  Aside from the freaky action at a distance, 
>it
>probably is prone to failures when certain FilePath methods internally
>decide to restat, thus replacing the link data with data about the 
>target.
>
>The cop-out API would be one like this:
>
>    fp = FilePath(...)
>    fp.lstat().st_mtime # link's modification time
>
>I can't think of anything strictly better at the moment, though.  What 
>does
>usage in your application suggest is a good approach?

I am not working on this application, but I have some ideas of my own...

It occurs to me that isfile and isdir both use cached stat results, but 
islink re-lstat()s each time.  This could of course give a potentially 
inconsistent view of the filesystem without restat()'ing.

Without regard to backwards compatibility, I would probably suggest that 
we do something like this:

    fp = FilePath(...)
    fp.getModificationTime() # link time
    fp.followLink().getModificationTime() # destination time (even if 
dest is a link!)

This would allow finer-grained control of what exactly you were asking 
for.  (It would also work more nicely by default with broken symlinks.) 
However, keeping compatibility in mind (given that this is easily API- 
compatible,  but behavior would change very slightly and ostensibly be 
less buggy, I'm not sure whether to do this or not):

    fp = FilePath(...)
    fp.getModificationTime() # destination time
    fp.asLink().getModificationTime() # link time
    fp.asLink().followLink() #... etc

This is basically the same as your cop-out example, except we don't 
introduce yet another interface for other filepath implementations to 
emulate.



From nathan.stocks at gmail.com  Mon Mar 24 17:07:02 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 15:07:02 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
	<96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
Message-ID: <96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>

On Mon, Mar 24, 2008 at 2:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
> I'm not concious of changing anything, but the error has changed to simply:
>
>  [('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>
>  ...and none of the _verify() debugging output is being printed out on
>  either side anymore.  Weird!

Ooops, ignore this last email.  I found that I had routed stderr away,
and wasn't seeing a crash caused by a typo I introduced after (almost)
getting the ssl to work.

So it's back to the first error now:

[('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
failure')]

 ~ Nathan



From nathan.stocks at gmail.com  Mon Mar 24 17:14:10 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 15:14:10 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
	<96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
	<96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>
Message-ID: <96c9d6a80803241414g7fab168bn31d96708a442e43f@mail.gmail.com>

On Mon, Mar 24, 2008 at 3:07 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Mon, Mar 24, 2008 at 2:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > I'm not concious of changing anything, but the error has changed to simply:
>  >
>  >  [('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>  >
>  >  ...and none of the _verify() debugging output is being printed out on
>  >  either side anymore.  Weird!
>
>  Ooops, ignore this last email.  I found that I had routed stderr away,
>  and wasn't seeing a crash caused by a typo I introduced after (almost)
>  getting the ssl to work.
>
>  So it's back to the first error now:
>
>  [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
>  unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
>  failure')]

It works!  After finding that I had lost track of stderr, I found that
the ssl error had an error on this line:

 logging.info('  issuer:', x509.get_issuer())

which ought to be:

 logging.info('  issuer:%s' % x509.get_issuer())

Thanks for all the help!  It looks like my AMP+SSL connection is up and running!

~ Nathan



From andrewfr_ice at yahoo.com  Mon Mar 24 18:33:12 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 24 Mar 2008 15:33:12 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
Message-ID: <644763.42660.qm@web34203.mail.mud.yahoo.com>

Hi Don:

[Don quote]
Thanks to all the good folks who replied to this; good
stuff to chew on. I particularly liked glyph's advice
on when and where to use the inline callback style,
and when/where to avoid it.  I think I'll continue
along the path I described, at least for a while.  I
may be back with more on this topic.

~

I saw your post but didn't have time to respond
earlier.... I second Glyph's advice concerning
inlineCallbacks....

I am building a WS-BPEL processor. WS-BPEL is about
business logic and exotic message exchange patterns. I
gave a talk at PyCon 2008 called "Adventures in
Stackless Python Twisted Integration."

My strategy is to separate the business logic as much
as possible from the underlying networking. At the
lower levels, I use Stackless Python in conjunction
with Twisted. A side-effect of this approach is that I
can block waiting for a Twisted call to finish.

Right now, I am simplifying one of my prototypes so I
can post it as a full-blown example of all the
techniques I use. Give me a few days.

To add to what others have said, the main problem I
have encountered boil down to identifying classic
concurrency problems. Unfortunately APIs and
transitivity obscure bugs. I know this sounds obvious 
but no matter which concurrency model you use: event,
pre-emptive threads, cooperate, you really have to
understand how problems like say, deadlock and race
conditions manifest themselves and take precautions.

In the narrow field of Stackless and Twisted, I am
trying to map out what those precautions are.

Cheers,
Andrew

 





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Mon Mar 24 18:34:39 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 24 Mar 2008 15:34:39 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
Message-ID: <478763.3209.qm@web34204.mail.mud.yahoo.com>

Hi Don:

[Don quote]
Thanks to all the good folks who replied to this; good
stuff to chew on. I particularly liked glyph's advice
on when and where to use the inline callback style,
and when/where to avoid it.  I think I'll continue
along the path I described, at least for a while.  I
may be back with more on this topic.

~

I saw your post but didn't have time to respond
earlier.... I second Glyph's advice concerning
inlineCallbacks....

I am building a WS-BPEL processor. WS-BPEL is about
business logic and exotic message exchange patterns. I
gave a talk at PyCon 2008 called "Adventures in
Stackless Python Twisted Integration."

My strategy is to separate the business logic as much
as possible from the underlying networking. At the
lower levels, I use Stackless Python in conjunction
with Twisted. A side-effect of this approach is that I
can block waiting for a Twisted call to finish.

Right now, I am simplifying one of my prototypes so I
can post it as a full-blown example of all the
techniques I use. Give me a few days.

To add to what others have said, the main problem I
have encountered boil down to identifying classic
concurrency problems. Unfortunately APIs and
transitivity obscure bugs. I know this sounds obvious 
but no matter which concurrency model you use: event,
pre-emptive threads, cooperate, you really have to
understand how problems like say, deadlock and race
conditions manifest themselves and take precautions.

In the narrow field of Stackless and Twisted, I am
trying to map out what those precautions are.

Cheers,
Andrew

 





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From brianbaquiran at gmail.com  Mon Mar 24 23:27:00 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Tue, 25 Mar 2008 11:27:00 +0800
Subject: [Twisted-Python] Controlling twisted via stdin
Message-ID: <47E87104.7090606@gmail.com>

How do I use the reactor.addReader/Writer methods?

I would like to control a twisted server using stdin. Does data on stdin 
get passed to a protocol's dataReceived?

Thanks.

Brian



From radix at twistedmatrix.com  Mon Mar 24 23:52:26 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Mar 2008 23:52:26 -0400
Subject: [Twisted-Python] Controlling twisted via stdin
In-Reply-To: <47E87104.7090606@gmail.com>
References: <47E87104.7090606@gmail.com>
Message-ID: <60ed19d40803242052scb9079cqb03ff9522decf7a5@mail.gmail.com>

On Mon, Mar 24, 2008 at 11:27 PM, Brian Baquiran
<brianbaquiran at gmail.com> wrote:
> How do I use the reactor.addReader/Writer methods?
>
>  I would like to control a twisted server using stdin. Does data on stdin
>  get passed to a protocol's dataReceived?


The simplest way to get a protocol running on stdio has nothing to do
with addReader and addWriter, and you likely want to stay away from
them.

Try using twisted.internet.stdio.StandardIO(protocolInstance).

(that's a protocol *instance*, not a factory or class)

There's an example in doc/core/examples/stdin.py, and a more complex
demo at doc/core/examples/stdiodemo.py.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From daedalus at eigenmagic.com  Tue Mar 25 03:39:16 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 25 Mar 2008 18:39:16 +1100
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <1206430756.9271.43.camel@localhost>

On Sun, 2008-03-23 at 03:48 +0000, glyph at divmod.com wrote:
> On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
> >But yes, the danger of accidentally serializing operations that don't
> >need to be serialized, and not even realising it, is one of the 
> >problems
> >with this coding style.
> 
> As time goes on, I'm becoming a bigger fan of inlineCallbacks.
> 
> Too much serialization, even accidental serialization, trades 
> comprehensibility for performance.  I think that's a reasonable place to 
> start: make your system easy to understand, then make it fast once you 
> know what's going on.

How does the saying go? "Premature optimisation is the root of all
evil"?

As an intermediate novice, I find inlineCallbacks to be a great way to
make code look more like sequential code, but with many of the benefits
of asynchrony. You can then refactor the code to make pieces even more
asynchronous where it's useful, but keep the sequential parts where that
makes sense. This is great from a 'learning twisted' point of view. 

The easiest place to start learning is with code that looks like all the
other code you've written before. The familiar is comforting. You then
learn that some extra statements are required to 'turn on this
asynchronous stuff', which you need to explicitly refer to using
'yield'. This introduces you to the idea that a Deferred-returning
function is special. You may not really know *why* it's special, but
it's a start.

Once your understanding deepens, you can then see that certain bits of
your code need a more complex form of Deferred handling. Even better,
you're now learning what a Deferred does in a concrete way with your own
code, and can more easily understand the effects of .addCallback()
compared to .addErrback().

I wonder if a tutorial along these lines would help in introducing
twisted concepts to a novice?

> It's not a good place to end up, though.  So it's important to use 
> inlineCallbacks for the right thing.

Certainly. Learning what that is can take a while, though.

-- 
Justin Warren <daedalus at eigenmagic.com>



From warner at lothar.com  Tue Mar 25 04:48:18 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 25 Mar 2008 01:48:18 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.2.5 released
Message-ID: <20080325.014818.208943259.warner@lothar.com>


I'm pleased to announce the release of Foolscap-0.2.5. Foolscap is the
successor to Perspective Broker, offering cryptographically-secure remote
method invocation, flexible object-graph serialization, a capability-based
object model, and more. Foolscap, for all your remote-object needs.

Source distributions are available from the Foolscap home page, PyPI, and
wherever fine remote-object products are sold:

 http://foolscap.lothar.com/trac
 http://foolscap.lothar.com/releases/foolscap-0.2.5.tar.gz
 http://foolscap.lothar.com/releases/foolscap-0.2.5.zip

As always, Foolscap releases are signed by my GPG key (1514A7BD).

In case you're wondering what happened to 0.2.4, or 0.2.3, you're right:
there have been several unannounced releases. A lot of the recent work has
gone into improvements in the logging subsystem (know as the "flog" system).
It is easy for Foolscap-using programs to publish a 'logport', to which the
'flogtool tail' command can connect and watch log events scroll by. Log
events can be gathered and inspected with command-line tools or a web-based
browser. Future work is planned to enable cross-application causality tracing
using the Causeway viewer.

In addition to logging changes, several other improvements have been made.
Duplication connection handling should be working better now. A number of
sample programs have been added to the distribution. Default size limits have
been removed from all Constraints.

A complete set of release notes for the last six months of releases is
attached below. All versions since 0.1.3 (released in May 2007) are
wire-compatible.

Foolscap is currently being deployed in the allmydata.org "Tahoe"
least-authority grid filesystem, which improves the chances that
wire-compatibility will be retained in the future. I am grateful to
allmydata.com (my employer) for supporting Foolscap development.

Please direct any questions to this, the twisted-devel mailing list. Bugs,
patches, and feature requests should be placed on the Foolscap Trac, at
http://foolscap.lothar.com/ .

cheers,
 -Brian



* Release 0.2.5 (25 Mar 2008)

** Compatibility

All releases between 0.1.3 and 0.2.5 (inclusive) are fully wire-compatible.

The new 'flogtool tail --catch-up' command requires a log publisher running
0.2.5 or later. 'flogtool tail' without the --catch-up option will work with
earlier publishers.

** Licensing clarification

Foolscap is distributed under the (very liberal) terms of the MIT license,
which is the same license that Twisted uses. It's been like this since the
beginning, but this is the first release to make this obvious by including a
LICENSE file.

** foolscap.logging Changes

'flogtool tail' now has a --catch-up option, which prompts the remote
publisher to deliver stored historical events to the subscribe, in proper
sequential order. This allows you to connect to a process that has just done
something interesting and grab a copy of the log events relevant to that
event.

'flogtool tail' also has a --save-to option, which specifies a filename to
which all captured events should be saved. This file can be processed further
with 'flogtool dump', 'flogtool filter', or 'flogtool web-viewer'. This
behaves much like the unix 'tee' utility, except that the saved data is
recorded in a lossless binary format (whereas the text emitted to stdout is
not particularly machine-readable).

'flogtool tail' and 'flogtool dump' both emit human-readable log messages by
default. The --verbose option will emit raw event dictionaries, which contain
slightly more information but are harder to read.

'flogtool create-gatherer' will create a log gatherer .tac file in a new
working directory. This .tac file can be launched with 'twistd', the standard
Twisted daemon-launching program. This is significantly easier to work with
than the previous 'flogtool gather' command (which has been removed). The new
--rotate option will cause the log-gatherer to switch to a new output file
every N seconds. The --bzip option will make it compress the logfiles after
rotating them. For example, a log gatherer that rotates and compresses log
files once per day could be created and launched with:

 flogtool create-gatherer --rotate 86400 --bzip ./workdir
 (cd workdir && twistd -y gatherer.tac)

** New sample programs

doc/listings/command-server.py and command-client.py are a pair of programs
that let you safely grant access to a specific command. The server is
configured with a command line to run, and a directory to run it from. The
client gets a FURL: when the client is executed, the server will run its
preconfigured command. The client gets to see stdout and stderr (and the exit
status), but does not get to influence the command being run in any way.
This is much like setting up an ssh server with a restricted command, but
somewhat easier to configure.

doc/listings/xfer-server.py and xfer-client.py are similar, but provide file
transfer services instead of command execution.

** New Features

Tub.setLocationAutomatically() will try to determine an externally-visible IP
address and feed it to Tub.setLocation(). It does this by preparing to send a
packet to a well-known public IP address (one of the root DNS servers) and
seeing which network interface would be used. This will tend to find the
outbound default route, which of course is only externally-visible if the
host is externally-visible. Applications should not depend upon this giving a
useful value, and should give the user a way to configure a list of
hostname+portnumbers so that manually-configured firewalls, port forwarders,
and NAT boxes can be dealt with.


* Release 0.2.4 (28 Jan 2008)

** Compatibility

All releases between 0.1.3 and 0.2.4 (inclusive) are fully wire-compatible.

** foolscap.logging Changes

*** 'flogtool filter' command added

This mode is used to take one event-log file and produce another with a
subset of the events. There are several options to control the filtering:
"--strip-facility=foolscap" would remove all the foolscap-related messages,
and "--after=start --before=end" will retain events that occur within the
given period. The syntax is still in flux, expect these options to change in
the next few releases. The main idea is to take a very large logfile and turn
it into a smaller, more manageable one.

*** error logging

Applications should avoid recording application-specific instances in log
events. Doing so will forces the log viewer to access the original source
code. The current release of foolscap uses pickle, so such instances will be
loadable if the viewer can import the same code, but future versions will
probably switch to using Banana, at which point trying to log such instances
will cause an error.

In this release, foolscap stringifies the type of an exception/Failure passed
in through the failure= kwarg, to avoid inducing this import dependency in
serialized Failures. It also uses the CopiedFailure code to improve
portability of Failure instances, and CopiedFailures have been made
pickleable.

The preferred way to log a Failure instance is to pass it like so:

 def _oops(f):
   log.msg("Oh no, it failed", failure=f, level=log.BAD)
 d.addErrback(_oops)

Finally, a 'log.err()' method was added, which behaves just like Twisted's
normal log.err(): it can be used in a Deferred errback, or inside an
exception handler.

*** 'flogtool web-viewer'

Adding a "sort=time" query argument to the all-events viewing page URL will
turn off the default nested view, and instead will sort all events strictly
by time of generation (note that unsynchronized clocks may confuse the
relative ordering of events on different machines). "sort=number" sorts all
events by their event number, which is of dubious utility (since these
numbers are only scoped to the Tub). "sort=nested" is the default mode.

The web-viewer now provides "summary views", which show just the events that
occurred at a given severity level. Each event is a hyperlink to the line in
the all-events page (using anchor/fragment tags), which may make them more
convenient to bookmark or reference externally.


* Release 0.2.3 (24 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.3 (inclusive) are fully wire-compatible.

** Bug Fixes

RemoteReference.getSturdyRef() didn't work (due to bitrot). It has been
fixed.

** foolscap.logging Changes

This release is mostly about flogging improvements: some bugs and misfeatures
were fixed:

*** tolerate '%' in log message format strings

Dictionary-style kwarg formatting is now done with a twisted-style style
format= argument instead of happening implicitly. That means the acceptable
ways to call foolscap.logging.log.msg are:

 log.msg("plain string")
 log.msg("no args means use 0% interpolation")
 log.msg("pre-interpolated: %d apples" % apples)
 log.msg("posargs: %d apples and %d oranges", apples, oranges)
 log.msg(format="kwargs: %(numapples)d apples", numapples=numapples)

The benefit of the latter two forms are that the arguments are recorded
separately in the event dictionary, so viewing tools can filter on the
structured data, think of something like:

  [e for e in allEvents if e.get("numapples",0) > 4]

*** log facility names are now dot-separated, to match stdlib logging
*** log levels are derived from numerical stdlib logging levels
*** $FLOGFILE to capture flog events during 'trial' runs

One challenge of the flogging system is that, once an application was changed
to write events to flogging instead of twisted's log, those events do not
show up in the normal places where twisted writes its logfiles. For full
applications this will be less of an issue, because application startup will
tell flogging where events should go (flogging is intended to supplant
twisted logging for these applications). But for events emitted during unit
tests, such as those driven by Trial, these events would get lost.

To address this problem, the 0.2.3 flogging code looks for the "FLOGFILE"
environment variable at import time. This specifies a filename where flog
events (a series of pickled event dictionaries) should be written. The file
is opened at import time, events are written during the lifetime of the
process, then the file is closed at shutdown using a Twisted "system event
trigger" (which happens to be enough to work properly under Trial: other
environments may not work so well). If the FLOGFILE filename ends in .bz2,
the event pickles will be compressed, which is highly recommended because it
can result in a 30x space savings (and e.g. the Tahoe unit test run results
in 90MB of uncompressed events). All 'flogtool' modes know how to handle a
.bz2 compressed flogfile as well as an uncompressed one.

The "FLOGTWISTED" environment variable, if set, will cause this same code to
bridge twisted log messages into the flogfile. This makes it easier to see
the relative ordering of Twisted actions and foolscap/application events.
(without this it becomes very hard to correlate the two sources of events).

The "FLOGLEVEL" variable specifies a minimum severity level that will be put
into the flogfile. This defaults to "1", which puts pretty much everything
into the file. The idea is that, for tests, you might as well record
everything, and use the filtering tools to control the display and isolate
the important events. Real applications will use more sophisticated tradeoffs
between disk space and interpretation effort.

The recommended way to run Trial on a unit test suite for an application that
uses Foolscap is:

 FLOGFILE=flog.out FLOGTWISTED=1 trial PACKAGENAME

Note that the logfile cannot be placed in _trial_temp/, because trial deletes
that directory after flogging creates the logfile, so the logfile would get
deleted too. Also note that the file created by $FLOGFILE is truncated on
each run of the program.


* Release 0.2.2 (12 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.2 (inclusive) are fully wire-compatible.
New (optional) negotiation parameters were added in 0.2.1 (really in 0.2.0).

** Bug Fixes

The new duplicate-connection handling code in 0.2.1 was broken. This release
probably fixes it.

There were other bugs in 0.2.1 which were triggered when a duplicate
connection was shut down, causing remote calls to never be retired, which
would also prevent the Reconnector from doing its job. These should be fixed
now.

** Other Changes

Foolscap's connection-negotiation mechanism has been modified to use foolscap
logging ("flog") instead of twisted.log .

Setting the FLOGFILE= environment variable will cause a Foolscap-using
program to write pickled log events to a file of that name. This is
particularly useful when you want to record log events during 'trial' unit
test run. The normal API for setting this file will be added later. The
FLOGTWISTED= environment variable will cause the creation of a twisted.log
bridge, to copy all events from the twisted log into the foolscap log.

The 'flogtool web-view' mode has been enhanced to color-code events according
to their severity, and to format Failure tracebacks in a more-readable way.


* Release 0.2.1 (10 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.1 (inclusive) are fully wire-compatible.
0.2.1 introduces some new negotiation parameters (to handle duplicate
connections better), but these are ignored by older versions, and their lack
is tolerated by 0.2.1 .

** New Features

*** new logging support

Foolscap is slowly acquiring advanced diagnostic event-logging features. See
doc/logging.xhtml for the philosophy and design of this logging system. 0.2.1
contains the first few pieces, including a tool named bin/flogtool that can
be used to watch events on a running system, or gather events from multiple
applications into a single place for later analysis. This support is still
preliminary, and many of the controls and interfaces described in that
document are not yet implemented.

*** better handling of duplicate connections / NAT problems

The connection-management code in 0.1.7 and earlier interacted badly with
programs that run behind NAT boxes (especially those with aggressive
connection timeouts) or on laptops which get unplugged from the network
abruptly. Foolscap seeks to avoid duplicate connections, and various
situtations could cause the two ends to disagree about the viability of any
given connection. The net result (no pun intended) was that a client might
have to wait up to 35 minutes (depending upon various timeout values) before
being able to reestablish a connection, and the Reconnector's exponential
backoff strategy could easily push this into 90 minutes of downtime.

0.2.1 uses a different approach to accomplish duplicate-suppression, and
should provide much faster reconnection after netquakes. To benefit from
this, both ends must be running foolscap-0.2.1 or newer, however there is an
additional setting (not enabled by default) to improve the behavior of
pre-0.2.1 clients: tub.setOption("handle-old-duplicate-connections", True).

*** new Reconnector methods

The Reconnector object (as returned by Tub.connectTo) now has three utility
methods that may be useful during debugging. reset() drops the backoff timer
down to one second, causing the Reconnector to reconnect quickly: you could
use this to avoid an hour-long delay if you've just restarted the server or
re-enabled a network connection that was the cause of the earlier connection
failures. getDelayUntilNextAttempt() returns the number of seconds remaining
until the next connection attempt. And getLastFailure() returns a Failure
object explaining why the last connection attempt failed, which may be a
useful diagnostic in trying to resolve the connection problems.

** Bug Fixes

There were other minor changes: an OS-X unit test failure was resolved,
CopiedFailures are serialized in a way that doesn't cause constraint
violations, and the figleaf code-coverage tools (used by foolscap developers
to measure how well the unit tests exercise the code base) have been improved
(including an emacs code-used/unused annotation tool).



From dmarfil at citic.es  Tue Mar 25 07:45:25 2008
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 25 Mar 2008 12:45:25 +0100
Subject: [Twisted-Python] Serial port communication
Message-ID: <47E8E5D5.1010100@citic.es>

Hi, I'm trying to send some commands to a modem connected to the serial 
port, in a sequential way.
I can send the first command to the modem but I must wait for the whole 
response before sending the next command. I haven't got much experience 
with Twisted so I'm not sure about the best protocol I can use for this.
At this moment I'm trying with SerialPort (from 
twisted.internet.serialport) as my factory, and LineReceiver (from 
twisted.protocols.basic) as its protocol.
I can write to the serial port with the SerialPort's method 
writeSomeData and it works fine, but the modem returns the response byte 
to byte, so the dataReceived method (in the LineReceiver protocol) is 
launched with every byte received, so I have to store the bytes in a 
string so I can find the end of the response and then I can see the 
whole response.
So I can get the whole response from the modem, but in that moment I 
don't know how to tell the factory that it can send another 
writeSomeData (remember that it must be done in a sequential way).
So the question is: how can I tell the factory that it can run another 
writeSomeData once I got the right response from the modem?

I know that the main problem is my inexperience with Twisted, so I'm 
sure there's a better way to implement this. Maybe a more appropiate 
protocol?

Any clue will be very welcome ;-)

Thanks in advance,

Daniel Marfil



From itamar at itamarst.org  Tue Mar 25 09:00:13 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Mar 2008 09:00:13 -0400
Subject: [Twisted-Python] Serial port communication
In-Reply-To: <47E8E5D5.1010100@citic.es>
References: <47E8E5D5.1010100@citic.es>
Message-ID: <1206450013.21090.41.camel@localhost.localdomain>


> I can write to the serial port with the SerialPort's method 
> writeSomeData and it works fine,

You probably want the the write() method, not the writeSomeData method.




From andrewfr_ice at yahoo.com  Tue Mar 25 13:20:07 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 25 Mar 2008 10:20:07 -0700 (PDT)
Subject: [Twisted-Python] Re: Advice sought on application evolution
In-Reply-To: <E1Je5m2-0001Mu-2H@cube.twistedmatrix.com>
Message-ID: <986025.1887.qm@web34207.mail.mud.yahoo.com>

Hi Justin:

> Too much serialization, even accidental
>serialization, trades comprehensibility for
>performance.  I think that's a reasonable place
>to  start: make your system easy to understand, then
>make it fast once you know what's going on.

JW>How does the saying go? "Premature optimisation is
JW>the root of all evil"?

Butler Lampson in the paper "Hints for Computer System
Design" saids "Get it right! Neither abstraction nor
simplicity is a substitute for getting it right." 

I think if there is a tao of Twisted, its tenets would
be performance and getting it right.

A part of getting things right, is knowing what wrong
looks like. Both Twisted and (Stackless - what I work
with), don't dedicate much time to showing what is
definitely wrong.

>The easiest place to start learning is with code that
>looks like all the other code you've written before. 

I am not sure about this approach although there is
much to be said about having a programming style that
makes you feel confident to tackle problems. 

I find a good way to learn is looking at good but
simple examples that do something useful, then tinker
with them. This is the way some of my favourite
computer books work - the various
Kernighan/Richie/Plauger books, Steven's "Unix Network
Programming"

In the case of Twisted, I found the Abe Fettig book
good - I looked at webcat.py and requesthandler.py and
that gave me a start. From time to time, I also posted
on this mailing list to get little examples - very
helpful. 

I also like the design patterns approach to learning:
this is the name, the situation/context, the problem,
the solution, references. 

I think Twisted would benefit from this approach when
one is dealing with common situations like say "call
database from request handler" or "separate business
logic from network logic."


Cheers,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From ddwiggins at advpubtech.com  Tue Mar 25 13:27:56 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 25 Mar 2008 10:27:56 -0700
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <644763.42660.qm@web34203.mail.mud.yahoo.com>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
	<644763.42660.qm@web34203.mail.mud.yahoo.com>
Message-ID: <fsbcmt$p5n$1@ger.gmane.org>

Andrew Francis wrote:
> I am building a WS-BPEL processor. WS-BPEL is about
> business logic and exotic message exchange patterns. I
> gave a talk at PyCon 2008 called "Adventures in
> Stackless Python Twisted Integration."

Andrew, thanks for the reply.  I saw a message about your work, and have 
bookmarked your "Adventures" blog.

> My strategy is to separate the business logic as much
> as possible from the underlying networking.

My goal exactly, and my concern is with how to do that while still 
respecting the needs of the underlying networking (and in my case, a 
large amount of interaction with a database).

> At the lower levels, I use Stackless Python in conjunction
> with Twisted. A side-effect of this approach is that I
> can block waiting for a Twisted call to finish.

I'll be very interested to learn more about the melding of the two 
paradigms.

One question: I had the impression that Stackless is mostly an academic 
exercise, sort of a proof of concept.  Is this wrong?  How stable, 
portable, etc. is Stackless at this point?  Is it a reasonable choice 
for a commercial application?

> 
> Right now, I am simplifying one of my prototypes so I
> can post it as a full-blown example of all the
> techniques I use. Give me a few days.

I'll try to be patient.  8^)

Regards,
-- 
Don Dwiggins
Advanced Publishing Technology




From steve at holdenweb.com  Tue Mar 25 15:20:41 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 25 Mar 2008 15:20:41 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <fsbcmt$p5n$1@ger.gmane.org>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>	<644763.42660.qm@web34203.mail.mud.yahoo.com>
	<fsbcmt$p5n$1@ger.gmane.org>
Message-ID: <fsbjag$j63$1@ger.gmane.org>

Don Dwiggins wrote:
> Andrew Francis wrote:
>> I am building a WS-BPEL processor. WS-BPEL is about
>> business logic and exotic message exchange patterns. I
>> gave a talk at PyCon 2008 called "Adventures in
>> Stackless Python Twisted Integration."
> 
> Andrew, thanks for the reply.  I saw a message about your work, and have 
> bookmarked your "Adventures" blog.
> 
>> My strategy is to separate the business logic as much
>> as possible from the underlying networking.
> 
> My goal exactly, and my concern is with how to do that while still 
> respecting the needs of the underlying networking (and in my case, a 
> large amount of interaction with a database).
> 
>> At the lower levels, I use Stackless Python in conjunction
>> with Twisted. A side-effect of this approach is that I
>> can block waiting for a Twisted call to finish.
> 
> I'll be very interested to learn more about the melding of the two 
> paradigms.
> 
> One question: I had the impression that Stackless is mostly an academic 
> exercise, sort of a proof of concept.  Is this wrong?  How stable, 
> portable, etc. is Stackless at this point?  Is it a reasonable choice 
> for a commercial application?
> 
Well, CCP are running 40,000+ simultaneous (paying) users on a 250-CPU 
cluster. If you'd call that a commercial application then I guess the 
answer is "yes".

>>
>> Right now, I am simplifying one of my prototypes so I
>> can post it as a full-blown example of all the
>> techniques I use. Give me a few days.
> 
> I'll try to be patient.  8^)
> 
regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From ddwiggins at advpubtech.com  Tue Mar 25 17:56:09 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 25 Mar 2008 14:56:09 -0700
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <fsbjag$j63$1@ger.gmane.org>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>	<644763.42660.qm@web34203.mail.mud.yahoo.com>	<fsbcmt$p5n$1@ger.gmane.org>
	<fsbjag$j63$1@ger.gmane.org>
Message-ID: <fsbsdq$n3d$1@ger.gmane.org>

Steve Holden wrote:
>> One question: I had the impression that Stackless is mostly an 
>> academic exercise, sort of a proof of concept.  Is this wrong?  How 
>> stable, portable, etc. is Stackless at this point?  Is it a reasonable 
>> choice for a commercial application?
>>
> Well, CCP are running 40,000+ simultaneous (paying) users on a 250-CPU 
> cluster. If you'd call that a commercial application then I guess the 
> answer is "yes".

Wellll, I guess that sounds fairly reasonable. 8^)

Thanks,
Don




From zooko at zooko.com  Tue Mar 25 22:12:47 2008
From: zooko at zooko.com (zooko)
Date: Tue, 25 Mar 2008 19:12:47 -0700
Subject: [Twisted-Python] announcing allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.0
Message-ID: <D14AA58A-9417-4598-81E8-9D1FAA145675@zooko.com>

Folks:

This is it!  We're committing to backwards compatibility and active  
support for the v1.0 branch of Tahoe for the forseeable future.

Tomorrow, http://allmydata.com will open its doors to new customers,  
relying on Tahoe for its backend.

Regards,

Zooko


ANNOUNCING Allmydata.org "Tahoe", the Least-Authority Filesystem, v1.0

We are pleased to announce the release of version 1.0 of the "Tahoe"
Least Authority Filesystem.

The "Tahoe" Least Authority Filesystem is a secure, decentralized,
fault-tolerant filesystem.  All of the source code is available under
a Free Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

A one-page explanation of the security and fault-tolerance properties
that it offers is visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


We believe that this version of Tahoe is stable enough to rely on as a
permanent store of valuable data.  The version 1 branch of Tahoe will
be actively supported and maintained for the forseeable future, and
future versions of Tahoe will retain the ability to read files and
directories produced by Tahoe v1.0 for the forseeable future.

This release of Tahoe will form the basis of the new consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


This is the successor to Allmydata.org "Tahoe" Least Authority
Filesystem v0.9, which was released March 13, 2008 [1].  Since v0.9
we've made the following changes:

  * Use an added secret for convergent encryption to better protect the
    confidentiality of immutable files, and remove the publically
    readable hash of the plaintext (ticket #365).

  * Add a "mkdir-p" feature to the WAPI (ticket #357).

  * Many updates to the Windows installer and Windows filesystem
    integration.


Tahoe v1.0 produces files which can't be read by older versions of
Tahoe, although files produced by Tahoe >= 0.8 can be read by Tahoe
1.0.  The reason that older versions of Tahoe can't read files
produced by Tahoe 1.0 is that those older versions require the file to
come with a publically-readable hash of the plaintext, but exposing
such a hash is a confidentiality leak, so Tahoe 1.0 does not do it.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

Because this software is the product of less than a year and a half of
active development, we do not categorically recommend it for the
storage of data which is extremely confidential or precious.  However,
we believe that the combination of erasure coding, strong encryption,
and careful engineering makes the use of this software a much safer
alternative than common alternatives, such as RAID, or traditional
backup onto a remote server, removable drive, or tape.

This software comes with extensive unit tests [2], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known security issues please see the
Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and instructing them to spend part of
their work time on this free-software project).  We are eternally
grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
March 25, 2008
San Francisco, California, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2315
[2] http://allmydata.org/trac/tahoe/wiki/Dev
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2345
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com




From zmola at acm.org  Wed Mar 26 09:30:09 2008
From: zmola at acm.org (Carl Zmola)
Date: Wed, 26 Mar 2008 09:30:09 -0400
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <1206430756.9271.43.camel@localhost>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
	<1206430756.9271.43.camel@localhost>
Message-ID: <47EA4FE1.2040307@acm.org>

Justin Warren wrote:
> On Sun, 2008-03-23 at 03:48 +0000, glyph at divmod.com wrote:
>   
>> On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
>>     
>>> But yes, the danger of accidentally serializing operations that don't
>>> need to be serialized, and not even realising it, is one of the 
>>> problems
>>> with this coding style.
>>>       
>> As time goes on, I'm becoming a bigger fan of inlineCallbacks.
>>
>> Too much serialization, even accidental serialization, trades 
>> comprehensibility for performance.  I think that's a reasonable place to 
>> start: make your system easy to understand, then make it fast once you 
>> know what's going on.
>>     
>
> How does the saying go? "Premature optimisation is the root of all
> evil"?
>
> As an intermediate novice, I find inlineCallbacks to be a great way to
> make code look more like sequential code, but with many of the benefits
> of asynchrony. You can then refactor the code to make pieces even more
> asynchronous where it's useful, but keep the sequential parts where that
> makes sense. This is great from a 'learning twisted' point of view.
My biggest reason for using frameworks like Twisted, is that they make 
it easier to implement network applications.

Serial programming works well when the tasks are simple, and errors are 
not considered.
As soon as error/timeouts/corner cases are considered, your nice simple 
serial code is more complex and much slower than the "more complex" 
Twisted code.

This is why people do not always see the immediate need for asynchronous 
programming.  If inline callbacks offer a way to ease yourself in to 
Twisted, or make your program more understandable to others, then it is 
worth using.

BTW,  maybe this workflow could be used for a Twisted presentation.  
Take an existing program and turn it into a Twisted program.

Carl
zmola at acm.org

Carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080326/494a63c4/attachment.htm 

From pbastov at gmail.com  Wed Mar 26 09:30:41 2008
From: pbastov at gmail.com (Pavel)
Date: Wed, 26 Mar 2008 19:30:41 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
Message-ID: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>

Hi all,

I decided to benchmark my web server written in twisted against apache.

I added just one resource to my twisted web server that reads a file and
returns it to client.

Then, I created a virtual host in Apache and put the same (html) file
to the web root.

I issued the following command for both servers:

# http_load -parallel 100 seconds 5 url

First time the url contained the path to Apache document, second time
-- to twisted web.

Here is the result of the benchmark. My web server is more than 3
times slower than apache,
primarily due to response time as you can see below:

RESULT FOR APACHE
==================
8619 fetches, 13 max parallel, 2.43918e+07 bytes, in 5.00155 seconds
2830 mean bytes/connection
1723.27 fetches/sec, 4.87684e+06 bytes/sec
msecs/connect: 0.557627 mean, 2.159 max, 0.123 min
msecs/first-response: 2.81528 mean, 7.367 max, 0.413 min
HTTP response codes:
  code 200 -- 8619

RESULT FOR MY TWISTED WEB SERVER
=================================
2437 fetches, 100 max parallel, 6.86601e+06 bytes, in 5.00001 seconds
2817.4 mean bytes/connection
487.399 fetches/sec, 1.3732e+06 bytes/sec
msecs/connect: 0.159532 mean, 9.453 max, 0.077 min
msecs/first-response: 197.407 mean, 230.882 max, 5.978 min
HTTP response codes:
  code 200 -- 2437

It's not that I want to outperform Apache, I'm just curious is there any way
to improve the response time in twisted?

Thanks in advance.

-- 

Regards,

Pavel



From mithrandi at mithrandi.net  Wed Mar 26 09:47:29 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Mar 2008 15:47:29 +0200
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
Message-ID: <20080326134729.GD21342@mithrandi.net>

* Pavel <pbastov at gmail.com> [2008-03-26 19:30:41 +0600]:

> I added just one resource to my twisted web server that reads a file and
> returns it to client.

Did you write your own resource to do this, or did you use
twisted.web.static? If you wrote your own resource, it might be helpful
if you posted the source code for this as well.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080326/fb5994d7/attachment.pgp 

From daedalus at eigenmagic.com  Wed Mar 26 19:40:53 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Thu, 27 Mar 2008 10:40:53 +1100
Subject: [Twisted-Python] Twisted for Novices [Was: Advice sought on
	application evolution]
In-Reply-To: <986025.1887.qm@web34207.mail.mud.yahoo.com>
References: <986025.1887.qm@web34207.mail.mud.yahoo.com>
Message-ID: <1206574853.6786.15.camel@localhost>

On Tue, 2008-03-25 at 10:20 -0700, Andrew Francis wrote:

> A part of getting things right, is knowing what wrong
> looks like. Both Twisted and (Stackless - what I work
> with), don't dedicate much time to showing what is
> definitely wrong.

Indeed. Also important is understanding *why* something is wrong.
Sometimes this is non-obvious, or counter-intuitive, which can be
confusing to the novice.

> >The easiest place to start learning is with code that
> >looks like all the other code you've written before. 
> 
> I am not sure about this approach although there is
> much to be said about having a programming style that
> makes you feel confident to tackle problems. 
> 
> I find a good way to learn is looking at good but
> simple examples that do something useful, then tinker
> with them. This is the way some of my favourite
> computer books work - the various
> Kernighan/Richie/Plauger books, Steven's "Unix Network
> Programming"

I completely agree. I guess I was trying to say that when I start to
learn something new, it's easier if I can start with a bit of newness
that isn't completely alien to me.

> In the case of Twisted, I found the Abe Fettig book
> good - I looked at webcat.py and requesthandler.py and
> that gave me a start. From time to time, I also posted
> on this mailing list to get little examples - very
> helpful. 
> 
> I also like the design patterns approach to learning:
> this is the name, the situation/context, the problem,
> the solution, references. 

Definitely, particularly when it's something that comes up a lot. The
canonical echo server/client example is ok, but it's a toy problem, not
a real world thing. It might be nice to have a real world example of
something (simple!) most people are likely to want to do, and how
Twisted makes it easy/great.

It'd be great if there was a sequence of tutorials designed to get
people to the 'Aha!' moment of twisted where it all suddenly makes
sense. Maybe there already is, and I'm simply ignorant.

-- 
Justin Warren <daedalus at eigenmagic.com>




From radix at twistedmatrix.com  Wed Mar 26 21:26:11 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 26 Mar 2008 21:26:11 -0400
Subject: [Twisted-Python] [ANN] Twisted 8.0
Message-ID: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>

http://twistedmatrix.com/

MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
has been released, Twisted Matrix Laboratories announced Wednesday.

Enslaved by his new robotic overloads, Master of the Release
Christopher Armstrong presented the new package to the Internet on
March 26th. Armstrong was unable to comment, because of a device worn
around his neck preventing him from doing so, scientists say.

Secretary of Defense Jean-Paul Calderone was asked about concerns that
French interference may have played a role in the delay of this
release. "I find such speculation preposterous. Thomas Herv? is an
upstanding member of the Labs and his loyalties lie with us. He is a
fine addition to our team."  Rumors in the community allege that
Secretary Calderone is holding Herv?'s cat ransom until the release is
successfully distributed. Herv? was unavailable for comment.

This release comes shortly after the announcement by Chief of Public
Affairs Duncan McGreggor that Twisted had joined the Software Freedom
Conservancy. "We're happy to join the SFC, and we are now accepting
sponsorship. The fact that we are now ruled by a cabal of robots
should not put off potential donors. Our robotic overlords are running
us at peak efficiency, so we can most effectively distribute The
Love."

Asked about the version number jump in this release,
Commander-in-Chief Glyph Lefkowitz had the following to say: "Our
benefactors have found our previous dice-rolling version number scheme
to be inadequate, and have deigned to propose to us a more... logical
system of versioning."

=====

Twisted is an event-based framework for Internet applications which
works on Python 2.3, 2.4, and 2.5. It can be downloaded from

http://twistedmatrix.com/

Twisted 8.0 is a major feature release, with several new features and
a great number of bug fixes. Some of the highlights follow.

 - The IOCP reactor is now much improved and many bugs have been resolved.
 - Twisted is now easy_installable.
 - Many improvements were made to Trial, Twisted's unit testing system.
 - A new memcache client protocol implementation was added.
 - So much more[1]!

To see the full list of changes in its fifteen kilobytes of glory, see
the release notes[1]. We welcome you to download and enjoy, and please
file any bugs you find[2] and send comments to the mailing list[3].

Why the large version number bump? We've decided to switch to a
time-based versioning scheme. "8.0" means the first release in 2008.

[1] http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/NEWS?format=raw
[2] Register: http://twistedmatrix.com/trac/register New ticket:
http://twistedmatrix.com/trac/newticket
[3] http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Thanks!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From pbastov at gmail.com  Wed Mar 26 22:53:40 2008
From: pbastov at gmail.com (Pavel)
Date: Thu, 27 Mar 2008 08:53:40 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <20080326134729.GD21342@mithrandi.net>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
Message-ID: <eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>

Yes, I wrote my own resource. Looks like this:

class MyRoot(Resource):
	def getChild(self, name, request):
		if "" == name:
			return self
		return Resource

	def render_GET(self, request):
		path = "/path/to/file"
		f = open(path)
		content = f.read()
		f.close()
                return content

On Wed, Mar 26, 2008 at 7:47 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> * Pavel <pbastov at gmail.com> [2008-03-26 19:30:41 +0600]:
>
>
>  > I added just one resource to my twisted web server that reads a file and
>  > returns it to client.
>
>  Did you write your own resource to do this, or did you use
>  twisted.web.static? If you wrote your own resource, it might be helpful
>  if you posted the source code for this as well.
>  --
>  mithrandi, i Ainil en-Balandor, a faer Ambar
>
> -----BEGIN PGP SIGNATURE-----
>  Version: GnuPG v2.0.8 (GNU/Linux)
>
>  iEYEARECAAYFAkfqU/EACgkQpNuXDQIV94oTCQCfd5Se70QCW+/XYvWFOY5UOGr8
>  A4QAmwbAVWa2HCyRumq5zJdnF78tFXvi
>  =Gd/m
>  -----END PGP SIGNATURE-----
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From duncan.mcgreggor at gmail.com  Thu Mar 27 04:09:25 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 27 Mar 2008 03:09:25 -0500
Subject: [Twisted-Python] Re: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
Message-ID: <4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>

On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> http://twistedmatrix.com/
>
>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>  has been released, Twisted Matrix Laboratories announced Wednesday.
>
>  Enslaved by his new robotic overloads, Master of the Release
>  Christopher Armstrong presented the new package to the Internet on
>  March 26th. Armstrong was unable to comment, because of a device worn
>  around his neck preventing him from doing so, scientists say.

A reader (who fears the robotic overlords, and thus wishes to remain
anonymous) has suggested that we do a full press release with this
picture:
  http://chrisbishop.com/fineart/art-happycity.html

d



From steve at holdenweb.com  Thu Mar 27 07:18:24 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 27 Mar 2008 07:18:24 -0400
Subject: [Twisted-Python] Re: [ANN] Twisted 8.0
In-Reply-To: <47EB6743.7070804@karnaugh.za.net>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>	<4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
	<47EB6743.7070804@karnaugh.za.net>
Message-ID: <fsfvqf$19f$1@ger.gmane.org>

Colin Alston wrote:
> On 27/03/2008 10:09 Duncan McGreggor wrote:
>> On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
>> <radix at twistedmatrix.com> wrote:
>>> http://twistedmatrix.com/
>>>
>>>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>>>  has been released, Twisted Matrix Laboratories announced Wednesday.
>>>
>>>  Enslaved by his new robotic overloads, Master of the Release
>>>  Christopher Armstrong presented the new package to the Internet on
>>>  March 26th. Armstrong was unable to comment, because of a device worn
>>>  around his neck preventing him from doing so, scientists say.
>>
>> A reader (who fears the robotic overlords, and thus wishes to remain
>> anonymous) has suggested that we do a full press release with this
>> picture:
>>   http://chrisbishop.com/fineart/art-happycity.html
> 
> I'm pleased to see Twisted is still one of the few Open Source projects 
> out there which still has a genuine sense of humour - and delivers 
> staggeringly high quality code in spite of it.
> 
> Well done all involved - and thank you :)
> 
Not in spite of it, because of it. A sense of humor is essential in 
retaining perspective as one continually fails to communicate one's 
meaning to the stupid machine.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From drew.smathers at gmail.com  Thu Mar 27 12:26:10 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 27 Mar 2008 12:26:10 -0400
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
Message-ID: <368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>

On Wed, Mar 26, 2008 at 10:53 PM, Pavel <pbastov at gmail.com> wrote:
> Yes, I wrote my own resource. Looks like this:
>
>  class MyRoot(Resource):
>         def getChild(self, name, request):
>                 if "" == name:
>                         return self
>                 return Resource
>
>         def render_GET(self, request):
>                 path = "/path/to/file"
>                 f = open(path)
>                 content = f.read()
>                 f.close()
>                 return content
>
>

You should probably be using twisted.web.static.File for a better
comparison of static file serving performance. In fact, you could do
this without writing any code at all:

$ twistd web --path=<dir>


Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From mailing_lists at evotex.ch  Thu Mar 27 12:30:11 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 17:30:11 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
Message-ID: <47EBCB93.2080007@evotex.ch>

Hello,

I coded a program that uses Twisted's plugin system. I have noticed that 
if I interrupt the application using Ctrl+C (SIGINT) that when I run it 
next time I get this :

  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
in getCache
    provider = namedAny(module.__name__ + '.' + moduleName)
  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
line 375, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'SendFile'

Could this mean that the plugin cache is corrupt? If so, How can I keep 
it from getting corrupted (is there a safe way of closing it)?

Thanks,
Gabriel



From ddwiggins at advpubtech.com  Thu Mar 27 12:39:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Mar 2008 09:39:26 -0700
Subject: [Twisted-Python] Re: Twisted for Novices [Was: Advice sought on
	application evolution]
In-Reply-To: <1206574853.6786.15.camel@localhost>
References: <986025.1887.qm@web34207.mail.mud.yahoo.com>
	<1206574853.6786.15.camel@localhost>
Message-ID: <fsgijv$g0m$1@ger.gmane.org>

Justin Warren wrote:
> Definitely, particularly when it's something that comes up a lot. The
> canonical echo server/client example is ok, but it's a toy problem, not
> a real world thing. It might be nice to have a real world example of
> something (simple!) most people are likely to want to do, and how
> Twisted makes it easy/great.

Just a sudden synaptic spark: how about a time server that periodically 
connects to several user-specified time hosts, and logs the average and 
standard deviation of their values.  Not too generally useful, but 
real-world and exploits asynchrony well.

This idea was inspired by a nice little Windows time server called 
AboutTime that logs entries like this:

> Connecting to NIST using SNTP.
> Resolved address for NIST (192.43.244.18).
> Received time (ping 62 ms), error 2 ms.
> New time: Thursday, March 27, 2008 09:37:34.

FWIW,

-- 
Don Dwiggins
Advanced Publishing Technology




From mailing_lists at evotex.ch  Thu Mar 27 12:46:59 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 17:46:59 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <47EBCB93.2080007@evotex.ch>
References: <47EBCB93.2080007@evotex.ch>
Message-ID: <47EBCF83.2070806@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I coded a program that uses Twisted's plugin system. I have noticed 
> that if I interrupt the application using Ctrl+C (SIGINT) that when I 
> run it next time I get this :
>
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
> in getPlugins
>    allDropins = getCache(package)
> --- <exception caught here> ---
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
> in getCache
>    provider = namedAny(module.__name__ + '.' + moduleName)
>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
> line 375, in namedAny
>    obj = getattr(obj, n)
> exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>
> Could this mean that the plugin cache is corrupt? If so, How can I 
> keep it from getting corrupted (is there a safe way of closing it)?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
BTW, this only happens sometimes, not every time I kill the app.

Gabriel



From glyph at divmod.com  Thu Mar 27 14:30:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 27 Mar 2008 18:30:59 -0000
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <47EBCB93.2080007@evotex.ch>
References: <47EBCB93.2080007@evotex.ch>
Message-ID: <20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>


This traceback is tantalizingly interesting, but I don't know what might 
have caused the error.

It might not mean that your plugin cache is "corrupt", per se, but that 
you've changed the names of some things in your code.  I'm not sure why 
it hasn't gotten regenerated in the meanwhile.

Can you come up with an example program which will even semi-reliably 
reproduce this error in a clean environment?  If not, is your code 
publicly available?

On 04:30 pm, mailing_lists at evotex.ch wrote:
>Hello,
>
>I coded a program that uses Twisted's plugin system. I have noticed 
>that if I interrupt the application using Ctrl+C (SIGINT) that when I 
>run it next time I get this :
>
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
>in getPlugins
>    allDropins = getCache(package)
>--- <exception caught here> ---
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
>in getCache
>    provider = namedAny(module.__name__ + '.' + moduleName)
>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
>line 375, in namedAny
>    obj = getattr(obj, n)
>exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>
>Could this mean that the plugin cache is corrupt? If so, How can I keep 
>it from getting corrupted (is there a safe way of closing it)?
>
>Thanks,
>Gabriel
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mailing_lists at evotex.ch  Thu Mar 27 14:50:34 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 19:50:34 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>
References: <47EBCB93.2080007@evotex.ch>
	<20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>
Message-ID: <47EBEC7A.4000101@evotex.ch>

On 04:30 pm, mailing_lists at evotex.ch wrote:
>> Hello,
>>
>> I coded a program that uses Twisted's plugin system. I have noticed 
>> that if I interrupt the application using Ctrl+C (SIGINT) that when I 
>> run it next time I get this :
>>
>>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
>> in getPlugins
>>    allDropins = getCache(package)
>> --- <exception caught here> ---
>>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
>> in getCache
>>    provider = namedAny(module.__name__ + '.' + moduleName)
>>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
>> line 375, in namedAny
>>    obj = getattr(obj, n)
>> exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>>
>> Could this mean that the plugin cache is corrupt? If so, How can I 
>> keep it from getting corrupted (is there a safe way of closing it)?
>>
>> Thanks,
>> Gabriel
>>
glyph at divmod.com wrote:
>
> This traceback is tantalizingly interesting, but I don't know what 
> might have caused the error.
>
> It might not mean that your plugin cache is "corrupt", per se, but 
> that you've changed the names of some things in your code.  I'm not 
> sure why it hasn't gotten regenerated in the meanwhile.
>
> Can you come up with an example program which will even semi-reliably 
> reproduce this error in a clean environment?  If not, is your code 
> publicly available? 

I thought it gets corrupt because I didn't change or move any of the 
plugin code. I've had this error happen 3 or 4 times today, out of maybe 
20 runs, so it's hard to reproduce. I'll try to come up with an example 
that reproduces this, as I can't give out the code yet.

Gabriel



From pbastov at gmail.com  Thu Mar 27 23:57:01 2008
From: pbastov at gmail.com (Pavel)
Date: Fri, 28 Mar 2008 09:57:01 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
Message-ID: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>

Thanks for the replies.

In fact, I just tried to compare it against the static files -- almost
the same result --
a little bit faster, but far from Apache :(

On Thu, Mar 27, 2008 at 10:26 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Wed, Mar 26, 2008 at 10:53 PM, Pavel <pbastov at gmail.com> wrote:
>  > Yes, I wrote my own resource. Looks like this:
>  >
>  >  class MyRoot(Resource):
>  >         def getChild(self, name, request):
>  >                 if "" == name:
>  >                         return self
>  >                 return Resource
>  >
>  >         def render_GET(self, request):
>  >                 path = "/path/to/file"
>  >                 f = open(path)
>  >                 content = f.read()
>  >                 f.close()
>  >                 return content
>  >
>  >
>
>  You should probably be using twisted.web.static.File for a better
>  comparison of static file serving performance. In fact, you could do
>  this without writing any code at all:
>
>  $ twistd web --path=<dir>
>
>
>  Cheers,
>  --
>  \\\\\/\"/\\\\\\\\\\\
>  \\\\/ // //\/\\\\\\\
>  \\\/ \\// /\ \/\\\\
>  \\/ /\/ / /\/ /\ \\\
>  \/ / /\/ /\ /\\\ \\
>  / /\\\ /\\\ \\\\\/\
>  \/\\\\\/\\\\\/\\\\\\
>   d.p.s
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From james at mansionfamily.plus.com  Fri Mar 28 02:23:08 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Fri, 28 Mar 2008 06:23:08 +0000
Subject: [Twisted-Python] win32 reactors
Message-ID: <47EC8ECC.9020606@mansionfamily.plus.com>

I'm just starting to evaluate Twisted, so apologies if these questions
seem naive.

It seems to me that the Twisted model for 'reactor' is actually not
what you'd expect from the name (at least, if you have a background
in other reactor implementations including ACE, basic select etc and
Java NIO) since it
 a) handles queueing outgoing data for you and
 b) presents incoming data after completion of the IO

So its a model that maps well to an AIO implementation so long
as inputs from non-blocking sources complete as soon as "some" data
is ready, rather than buffer full.

This high level approachh should work well on Windows - which is
really pleasing.  (Albeit there may be buffer starvation issues on
all platforms I guess, but that's probably scaled beyond Python
ambitions)

A quick look at the open bug list shows a lot of noise on the Win32 side
though.

Is there any reason to have any framework that calls the Win32 select
function?

And why is the event reactor broken at 64 handles? From what I can
see, that's not how to use WaitForMultipleEvents - rather one should
regard it as a way to hash completion events from standard overlapped
IO requests against 61 of the handles and keep a list of the IOs in
progress against each handle. Scales admirably, unlike any attempt to
treat the handle array like a select fd_set.

Shouldn't broken Win32 implementations be 'retired'?

Also - is there any way to determine how much data is queued for write
against an ITransport?

It appears not, though I would have thought it useful (and, a way to
get an event callback when the queued amount falls below a
specified threshold) - then in cases where data can be generated
on demand we can limit the outgoing buffer usage.

James




From glyph at divmod.com  Fri Mar 28 02:27:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 06:27:36 -0000
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
Message-ID: <20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>


On 03:57 am, pbastov at gmail.com wrote:
>Thanks for the replies.
>
>In fact, I just tried to compare it against the static files -- almost
>the same result --
>a little bit faster, but far from Apache :(

Twisted is not, and has never been, as fast as Apache in this kind of 
naive raw-speed comparison on static files.  It's probably not as fast 
for most other things either.

If you would like to make it faster, there's no trick or configuration 
option or tweak.  The solution is simple: optimize the code.  This may 
just involve using a profiler and submitting patches, this may involve 
using some tool like cython or rpython to put the really critical parts 
into an extension module.  Nobody else has volunteered to do this so far 
because Twisted is, in fact, fast enough for most things :).



From pbastov at gmail.com  Fri Mar 28 03:12:16 2008
From: pbastov at gmail.com (Pavel)
Date: Fri, 28 Mar 2008 13:12:16 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
Message-ID: <eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>

Yes, I see what you mean.

I really love Twisted, and will never switch to Apache or the like, since I like
its simplicity and the ability to have all my code in one place.

On Fri, Mar 28, 2008 at 12:27 PM,  <glyph at divmod.com> wrote:
>
>  On 03:57 am, pbastov at gmail.com wrote:
>  >Thanks for the replies.
>  >
>  >In fact, I just tried to compare it against the static files -- almost
>  >the same result --
>  >a little bit faster, but far from Apache :(
>
>  Twisted is not, and has never been, as fast as Apache in this kind of
>  naive raw-speed comparison on static files.  It's probably not as fast
>  for most other things either.
>
>  If you would like to make it faster, there's no trick or configuration
>  option or tweak.  The solution is simple: optimize the code.  This may
>  just involve using a profiler and submitting patches, this may involve
>  using some tool like cython or rpython to put the really critical parts
>  into an extension module.  Nobody else has volunteered to do this so far
>  because Twisted is, in fact, fast enough for most things :).
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From therve at free.fr  Fri Mar 28 05:31:03 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 28 Mar 2008 10:31:03 +0100
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
Message-ID: <20080328103103.3jwax28q5iwwggok@wasabox.wasabout.net>

Quoting Pavel <pbastov at gmail.com>:

> Thanks for the replies.
>
> In fact, I just tried to compare it against the static files -- almost
> the same result --
> a little bit faster, but far from Apache :(

There are 2 things I'll try if speed is a problem:

  * test with sendfile support. Look at  
http://twistedmatrix.com/trac/ticket/585, there is the branch  
sendfile-585-2, which should work with Linux and FreeBSD. If someone  
could provide some benchmark numbers, if it would be great.

  * if you have a multicore server, you'll probably want to make use  
of it. There's nothing in Twisted currently to easily do that, but I  
have tested some months ago the possibility to add prefork facility to  
Twisted. See  
http://twistedmatrix.com/trac/browser/sandbox/therve/prefork_ex1.py  
for an example. It's highly experimental, and there's currently no  
ticket talking about that, but some feedback would be welcome.

-- 
Thomas




From p.mayers at imperial.ac.uk  Fri Mar 28 07:22:21 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 28 Mar 2008 11:22:21 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>	<47E639AF.2020200@imperial.ac.uk>
	<20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>
Message-ID: <47ECD4ED.8070100@imperial.ac.uk>

glyph at divmod.com wrote:
> On 11:06 am, p.mayers at imperial.ac.uk wrote:
>>>
>>> It's great as a high-level prototyping tool and an orchestration 
>>> language for distributed conversations with large numbers of steps 
>>> and coarse- grained error handling.  It's bad as a way of 
>>> representing state machines or continuous processes.
>>
>> Why?
> 
> Here's something which we probably should have done with a state 
> machine, but instead did with deferredGenerator (the predecessor to 
> inlineCallbacks).
> 
> http://divmod.org/trac/browser/trunk/Quotient/xquotient/grabber.py#L438

Ok.

I would have written it more like this, dump the error handling and let 
it propagate upwards to someone who is interested, and obviously clean 
it up with inlineCallbacks:

@inlineCallbacks
def grabber(self):
   yield self.login(self._username, self._password)

   uids = []
   yield self.listUID(uids.append)

   for idx in range(0, len(uids), batchsize):
       uidset = uids[idx:idx+batchsize]
       L = self.shouldRetrieve(uidset).sorted()

...etc. and I guess what I'm getting at is why is the above worse than:

def grab(self):
   return self.login.addCallbacks(self.login_done, self.login_err)

def login_done(self, loginResult):
   uids = []
   d = self.listUID(uids.append)
   d.addCallback(self.uids_done, uids)
   d.addErrback(self.uids_err)

def uids_done(self, unk, uids):
   dlist = []
   for idx in range(0, len(uids), batchsize):
     uid_slice = uids[idx:idx+batchsize]
     d = self.sometinymethod(uid_slice)
     d.addErrback(self.tinymethod_err)
     dlist.append(d)
   dlist = defer.DeferredList(dlist)
   dlist.addCallback(self.next_method)

...etc.

I'm not disputing the point - I'm trying to figure out why 
inlineCallbacks might be inappropriate because I'm using it for just 
such an application and I'm finding it greatly superior to the previous 
multi-callback chain solution, which frankly was incomprehensible and 
error-prone (oops I forgot to return the deferred. again).

On the other hand, I *removed* inlineCallbacks from some lower-level 
calls in my SNMP libs as it was clearly cleaner, so another way of 
asking the question is "how do I detect that inlineCallbacks is bad code 
smell?"

> 
> The function's really long, and there's a ton of duplication between all 
> of the "except" clauses, and there needs to be a try/except around every 
> single deferred call.  This probably would have been better implemented 
> as a regular state-machine, because that would have allowed decomposing 
> the problem further.
> 
> Granted, you could blame the factoring here on any number of things.  It 
> could have been broken into different steps even with deferredGenerator, 
> it could have been documented better, it could have stored more state on 
> the instance so that you could inspect its state rather than hiding it 
> as local variables... but given that this is general stylistic advice I 
> think that the point holds.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From k_r_a_j_kumar at yahoo.co.in  Fri Mar 28 07:44:57 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Fri, 28 Mar 2008 17:14:57 +0530 (IST)
Subject: [Twisted-Python] regarding xml elements
Message-ID: <66657.48471.qm@web8713.mail.in.yahoo.com>

Hi,
I have an xml file in my application,
I have created an element using 
Example goes like this.........

document.createElement("abc")
and i appeneded it by using append() method.
But how i can reflect this change to my xml file?
 and one more thing is i want to create element with some other parameters....
like.............

  <abc   m=" "  n=" ">
    </abc>
and i have m and n values as strings with me.
can anybody help me to create this element and write it to the existing xml file 
as a child of an existing element?

Thanks in advance..

Raj..




      Forgot the famous last words? Access your message archive online at http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080328/29418eaa/attachment.htm 

From george at ringdevelopment.com  Fri Mar 28 08:33:03 2008
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 28 Mar 2008 08:33:03 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <66657.48471.qm@web8713.mail.in.yahoo.com>
References: <66657.48471.qm@web8713.mail.in.yahoo.com>
Message-ID: <1206707583.5205.140.camel@localhost.localdomain>

Raj,

I think you are on the wrong list.  

I'm going out on a limb here, but I think you want to communicate from a
Javascript application to a server.  I might suggest using Dojo for this
(http://dojotoolkit.org), which should work if you are trying to write
the entire XML string back to the server, and might should (I live in
the south) work to mirror the xml manipulations to equivalent functions
on the server.

Did you consider JSON instead of XML?

I have not used Dojo outside of the US and there are potential
performance issues elsewhere due to the large libraries cached by AOL.

My apologies if I am off track.

George

On Fri, 2008-03-28 at 17:14 +0530, Raj kumar wrote:
> Hi,
> I have an xml file in my application,
> I have created an element using 
> Example goes like this.........
> 
> document.createElement("abc")
> and i appeneded it by using append() method.
> But how i can reflect this change to my xml file?
>  and one more thing is i want to create element with some other
> parameters....
> like..............
> 
>   <abc   m=" "  n=" ">
>     </abc>
> and i have m and n values as strings with me..
> can anybody help me to create this element and write it to the
> existing xml file 
> as a child of an existing element?
> 
> Thanks in advance...
> 
> Raj..
> 
> 
> 
> ______________________________________________________________________
> Meet people who discuss and share your passions. Join them now.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From sipickles at hotmail.com  Fri Mar 28 09:18:31 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 28 Mar 2008 13:18:31 +0000
Subject: [Twisted-Python] Server Components
Message-ID: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>

Midway thru my server dev, I am seeing the light... well, a light anyway.

Its a stackless python server and not too bad, running on Ubuntu Linux. 
Stackless Python is great, but single threaded (I DO do my DB lookups 
and network comms in other threads).

I figure its GOT to be more concurrent, if I'm looking to use future 
architecture.

So I planned to rewrite the server into modules, each a separate app. I 
guess this is a virtualisation process. Labour could be subdivided 
spatially, or by task (db access/playermanager/AI), or both

The modules plug in to each other, communicating thru the network (twisted).

This means the prototype server would run all the module apps on a 
single machine, then spreading to other machines to allow scalability. 
Being async networked (hinged on twisted.deferred), these modules run 
concurrently, using all the cores available.

SO - Am I reinventing the wheel? Does Twisted do this, or other 
Frameworks? In my limited experience, I need to create a server hub then 
have all the component modules connect to that as clients.

Is there a better way?


Thanks for your thoughts

-- 
Linux Counter: User# 424693 






From projects at reedflute.com  Fri Mar 28 09:28:30 2008
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 28 Mar 2008 15:28:30 +0200
Subject: [Twisted-Python] Serial port communication
In-Reply-To: <47E8E5D5.1010100@citic.es>
References: <47E8E5D5.1010100@citic.es>
Message-ID: <47ECF27E.1040301@reedflute.com>

Daniel Marfil wrote:

> So I can get the whole response from the modem, but in that moment I 
> don't know how to tell the factory that it can send another 
> writeSomeData (remember that it must be done in a sequential way).
> So the question is: how can I tell the factory that it can run another 
> writeSomeData once I got the right response from the modem?
>
> I know that the main problem is my inexperience with Twisted, so I'm 
> sure there's a better way to implement this. Maybe a more appropiate 
> protocol?
>
> Any clue will be very welcome ;-)
>
You will have to have some knowledge of the protocol used by the modem - 
typically Hayes AT (http://www-dcg.fnal.gov/Net/HYSTRM20.TXT) and then 
look out for the termination characters (; <CR>) before you call write() 
again. You will probably want to implement a time out using 
reactor.callLater()  together with a state machine.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From itamar at itamarst.org  Fri Mar 28 09:39:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 28 Mar 2008 09:39:58 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47EC8ECC.9020606@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
Message-ID: <1206711598.21090.90.camel@localhost.localdomain>


On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:

> Shouldn't broken Win32 implementations be 'retired'?

The old I/O Completion Ports reactor (which should be most scalable
Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
a complete rewrite that hopefully is a lot better.

> Also - is there any way to determine how much data is queued for write
> against an ITransport?

You might want to look at the producer/consumer APIs (there's a howto),
they let you know at least when the buffer becomes full or becomes
empty. The APIs could be improved to provide more info or configurable
thresholds, but that hasn't been done yet.




From mithrandi at mithrandi.net  Fri Mar 28 10:28:07 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 28 Mar 2008 16:28:07 +0200
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47EC8ECC.9020606@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
Message-ID: <20080328142807.GB29554@mithrandi.net>

* James Mansion <james at mansionfamily.plus.com> [2008-03-28 06:23:08 +0000]:

> It seems to me that the Twisted model for 'reactor' is actually not
> what you'd expect from the name (at least, if you have a background
> in other reactor implementations including ACE, basic select etc and
> Java NIO) since it
> a) handles queueing outgoing data for you and
> b) presents incoming data after completion of the IO

I believe what Twisted calls the "reactor" would be better called a
"proactor".
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080328/dd94bde4/attachment.pgp 

From phil at bubblehouse.org  Fri Mar 28 10:32:44 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:32:44 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <66657.48471.qm@web8713.mail.in.yahoo.com>
References: <66657.48471.qm@web8713.mail.in.yahoo.com>
Message-ID: <1FB21159-4D52-4A58-837A-2F5733A44B01@bubblehouse.org>

On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
> Hi,
> I have an xml file in my application,
> I have created an element using
> Example goes like this.........
>
> document.createElement("abc")
> and i appeneded it by using append() method.
> But how i can reflect this change to my xml file?
>  and one more thing is i want to create element with some other  
> parameters....
> like..............
>
>   <abc   m=" "  n=" ">
>     </abc>
> and i have m and n values as strings with me..
> can anybody help me to create this element and write it to the  
> existing xml file
> as a child of an existing element?

It sounds like you're working with t.w.microdom. I believe you'll want  
to use Document.writexml(). It's not documented in the code, and I  
haven't looked anywhere else, but you should be able to use it like  
this:

     def writexml(self, stream, indent='', addindent='', newl='',  
strip=0,
                  nsprefixes={}, namespace=''):

You'll probably want to ignore most of the parameters. I'm fairly sure  
indent, addindent,newl, and strip are related to pretty-printing. I've  
never used the namespace-related vars either, so I can't really tell  
you what they do ;-)...

Also, in case it's not obvious, 'stream' should be a file object of  
some kind.

To add attributes to your element, you can invoke createElement like  
this:

     document.createElement('abc', attributes={'m':'mvalue',  
'n':'nvalue'})

Then just append() it normally as you've already done.

-phil



From exarkun at divmod.com  Fri Mar 28 10:45:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 09:45:06 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <1FB21159-4D52-4A58-837A-2F5733A44B01@bubblehouse.org>
Message-ID: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>

On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org> wrote:
>On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>Hi,
>>I have an xml file in my application,
>>I have created an element using
>>Example goes like this.........
>>
>>document.createElement("abc")
>>and i appeneded it by using append() method.
>>But how i can reflect this change to my xml file?
>>  and one more thing is i want to create element with some other 
>>parameters....
>>like..............
>>
>>   <abc   m=" "  n=" ">
>>     </abc>
>>and i have m and n values as strings with me..
>>can anybody help me to create this element and write it to the  existing 
>>xml file
>>as a child of an existing element?
>
>It sounds like you're working with t.w.microdom.

If so, stop.

Don't use twisted.web.microdom.  There are plenty of better XML libraries
for Python.

Jean-Paul



From phil at bubblehouse.org  Fri Mar 28 10:51:10 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:51:10 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>
References: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>
Message-ID: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>


On Mar 28, 2008, at 10:45 AM, Jean-Paul Calderone wrote:
> On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>> Hi,
>>> I have an xml file in my application,
>>> I have created an element using
>>> Example goes like this.........
>>>
>>> document.createElement("abc")
>>>
>> It sounds like you're working with t.w.microdom.
>
> If so, stop.
>
> Don't use twisted.web.microdom.  There are plenty of better XML  
> libraries
> for Python.

What's wrong with it? It's got a familiar API, and it's easier to work  
with than the built-in expat parser. If you've already got a  
dependency on Twisted, it seems like a good choice unless you need a  
high level of performance.

If it's so bad that you'd tell someone not to use it, why isn't it  
deprecated?

-phil



From phil at bubblehouse.org  Fri Mar 28 10:52:37 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:52:37 -0400
Subject: [Twisted-Python] Server Components
In-Reply-To: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
Message-ID: <C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>

On Mar 28, 2008, at 9:18 AM, Simon Pickles wrote:
> Midway thru my server dev, I am seeing the light... well, a light  
> anyway.
>
> Its a stackless python server and not too bad, running on Ubuntu  
> Linux. Stackless Python is great, but single threaded (I DO do my DB  
> lookups and network comms in other threads).
>
> I figure its GOT to be more concurrent, if I'm looking to use future  
> architecture.
>
> So I planned to rewrite the server into modules, each a separate  
> app. I guess this is a virtualisation process. Labour could be  
> subdivided spatially, or by task (db access/playermanager/AI), or both

I'm going to go ahead assuming you know where your load problems are  
(or will be), and which things are most in need of being separated  
into components. Of course, this is pretty much the hardest part.

>
> The modules plug in to each other, communicating thru the network  
> (twisted).
>
> This means the prototype server would run all the module apps on a  
> single machine, then spreading to other machines to allow  
> scalability. Being async networked (hinged on twisted.deferred),  
> these modules run concurrently, using all the cores available.
>
> SO - Am I reinventing the wheel? Does Twisted do this, or other  
> Frameworks? In my limited experience, I need to create a server hub  
> then have all the component modules connect to that as clients.
>
> Is there a better way?

I don't believe there's nothing in Twisted that implicitly provides  
the functionality you're talking about, but you have a wide array of  
options on how to implement this yourself. It all depends on what kind  
of information you'll need to pass between modules, and how much  
refactoring you're willing to do to the existing application.

The biggest issue will probably be making a uniform and maintainable  
way for modules to discover each other and make connections without  
introducing security holes. If you are sure to have complete control  
over the network they're running on (say, in a private IP space) this  
may be a non-issue, so it's really just about logistics.

My initial reaction was to suggest Perspective Broker, but someone  
else might recommend AMP, which I'm just starting to learn the ins and  
outs of....

-phil



From exarkun at divmod.com  Fri Mar 28 10:55:39 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 09:55:39 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>
Message-ID: <20080328145539.6859.1410984628.divmod.quotient.23921@ohm>

On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen <phil at bubblehouse.org> wrote:
>
>On Mar 28, 2008, at 10:45 AM, Jean-Paul Calderone wrote:
>>On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org 
>> > wrote:
>>>On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>>>Hi,
>>>>I have an xml file in my application,
>>>>I have created an element using
>>>>Example goes like this.........
>>>>
>>>>document.createElement("abc")
>>>It sounds like you're working with t.w.microdom.
>>
>>If so, stop.
>>
>>Don't use twisted.web.microdom.  There are plenty of better XML  libraries
>>for Python.
>
>What's wrong with it? It's got a familiar API, and it's easier to work  with 
>than the built-in expat parser. If you've already got a  dependency on 
>Twisted, it seems like a good choice unless you need a  high level of 
>performance.

It's full of bugs that we probably won't fix, even if you tell us about
them.

>If it's so bad that you'd tell someone not to use it, why isn't it 
>deprecated?

Because it would take a lot of work to deprecate, and there are a lot of
other things people are working on that are deemed more important.

Jean-Paul



From mailing_lists at evotex.ch  Fri Mar 28 11:33:48 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 28 Mar 2008 16:33:48 +0100
Subject: [Twisted-Python] How can I run code when the protocol is done being
	built?
Message-ID: <47ED0FDC.1050404@evotex.ch>

Hello,

I need to use the factory ref in a protocol instance at the begining of 
the protocol instance's life. Normally I do my initializing code in 
__init__(), but I can't access self.factory from inside __init__(), 
since it's only assigned after the protocol has ben built by the 
factory. A hack is to use reactor.callLater(), but I don't like hacks, 
and it's messing up my unit tests (using trial), I get REACTOR UNCLEAN 
errors. Is there a cleaner way to run initialization code, in a 
protocol, but after it has been built (and factory has been assigned)?

Thanks,
Gabriel



From exarkun at divmod.com  Fri Mar 28 11:39:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 10:39:44 -0500
Subject: [Twisted-Python] How can I run code when the protocol is done
	being built?
In-Reply-To: <47ED0FDC.1050404@evotex.ch>
Message-ID: <20080328153944.6859.1007005439.divmod.quotient.23938@ohm>

On Fri, 28 Mar 2008 16:33:48 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I need to use the factory ref in a protocol instance at the begining of the 
>protocol instance's life. Normally I do my initializing code in __init__(), 
>but I can't access self.factory from inside __init__(), since it's only 
>assigned after the protocol has ben built by the factory. A hack is to use 
>reactor.callLater(), but I don't like hacks, and it's messing up my unit 
>tests (using trial), I get REACTOR UNCLEAN errors. Is there a cleaner way to 
>run initialization code, in a protocol, but after it has been built (and 
>factory has been assigned)?

Do the initialization in connectionMade (or makeConnection) instead of in
__init__.

Jean-Paul



From ms at cerenity.org  Fri Mar 28 11:51:58 2008
From: ms at cerenity.org (Michael)
Date: Fri, 28 Mar 2008 15:51:58 +0000
Subject: [Twisted-Python] Twisted/Kamaelia integration in GSOC ?
Message-ID: <200803281551.59084.ms@cerenity.org>

Hi,


This is just a note to say that it would be really interesting to see someone 
making it easier to use Kamaelia from Twisted and/or vice versa as part of 
summer of code.

Whilst we can use Twisted by putting in a seperate process or thread, that's
rather more coarse grained than I'd like it to be. Similarly, if people want
to use Kamaelia from Twisted you can put kamaelia a thread and access it
using the likefile[1] interface, but it'd be nice to make this sort of thing
more idiomatic for both sides.

Anyway, I wanted to keep this short, so here's a couple of links:
   * http://kamaelia.sourceforge.net/SummerOfCode2008
   * http://kamaelia.sourceforge.net/MiniAxon/
   * http://kamaelia.sourceforge.net/Components

I think it's clear why we'd like to be able to work nicely with Twisted :-)

Have fun,


Michael.
--
http://yeoldeclue.com/blog
[1] cf http://kamaelia.sourceforge.net/Docs/Axon/Axon.LikeFile)



From clemesha at gmail.com  Fri Mar 28 14:11:43 2008
From: clemesha at gmail.com (alex clemesha)
Date: Fri, 28 Mar 2008 11:11:43 -0700
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
	<eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
Message-ID: <d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>

On Fri, Mar 28, 2008 at 12:12 AM, Pavel <pbastov at gmail.com> wrote:

> Yes, I see what you mean.
>
> I really love Twisted, and will never switch to Apache or the like, since
> I like
> its simplicity and the ability to have all my code in one place.


Forgive me if the following is not what you are looking
for but, I would recommend a setup like this:

Use a fast and light server/reverse proxy
like nginx ( http://wiki.codemongers.com/Main ) to

1) handle all static files (img,js,css, static html)
2) reverse proxy all your dynamic twisted.web part

I use this setup, and it works great with Twisted.

-Alex




>
> On Fri, Mar 28, 2008 at 12:27 PM,  <glyph at divmod.com> wrote:
> >
> >  On 03:57 am, pbastov at gmail.com wrote:
> >  >Thanks for the replies.
> >  >
> >  >In fact, I just tried to compare it against the static files -- almost
> >  >the same result --
> >  >a little bit faster, but far from Apache :(
> >
> >  Twisted is not, and has never been, as fast as Apache in this kind of
> >  naive raw-speed comparison on static files.  It's probably not as fast
> >  for most other things either.
> >
> >  If you would like to make it faster, there's no trick or configuration
> >  option or tweak.  The solution is simple: optimize the code.  This may
> >  just involve using a profiler and submitting patches, this may involve
> >  using some tool like cython or rpython to put the really critical parts
> >  into an extension module.  Nobody else has volunteered to do this so
> far
> >  because Twisted is, in fact, fast enough for most things :).
> >
> >
> >
> >  _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Good luck,
>
> Pavel Bastov
> xooChat Team Leader
> http://www.xoochat.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080328/c90c63c7/attachment.htm 

From glyph at divmod.com  Fri Mar 28 18:49:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 22:49:11 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <1206711598.21090.90.camel@localhost.localdomain>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
Message-ID: <20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>

On 01:39 pm, itamar at itamarst.org wrote:
>
>On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:
>>Shouldn't broken Win32 implementations be 'retired'?

These implementations aren't "broken", so much as "limited".

Please feel free to contribute patches which reduce these limitations.
>The old I/O Completion Ports reactor (which should be most scalable
>Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
>a complete rewrite that hopefully is a lot better.

It still doesn't support SSL, though:

    http://twistedmatrix.com/trac/ticket/593

and maybe some other features too (I don't have a Windows handy or the 
time required to read the code to check - this really ought to be 
better-documented).

The select reactor is also convenient for testing on Windows, because 
it's the basis of at least one GUI reactor (GTK+) which should also 
support Win32.

Your suggestion for handle buckets in the win32eventreactor is one which 
has been suggested before and sounds good to me.  Nobody has bothered to 
implement it yet :).  However, even in its absence, I don't believe 
we'll be completely dropping win32eventreactor because it is useful for 
integrating with programs that do win32 drawing, even if iocpreactor has 
higher performance and is more scalable.



From glyph at divmod.com  Fri Mar 28 18:59:21 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 22:59:21 -0000
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328145539.6859.1410984628.divmod.quotient.23921@ohm>
References: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>
	<20080328145539.6859.1410984628.divmod.quotient.23921@ohm>
Message-ID: <20080328225921.21558.1606403117.divmod.xquotient.9099@joule.divmod.com>

On 02:55 pm, exarkun at divmod.com wrote:
>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen 
><phil at bubblehouse.org> wrote:

>>If it's so bad that you'd tell someone not to use it, why isn't it 
>>deprecated?

>Because it would take a lot of work to deprecate, and there are a lot 
>of
>other things people are working on that are deemed more important.

Also because there isn't a complete consensus on how terrible it is.  If 
you are doing advanced XML processing, it definitely isn't the best 
choice, because it's missing a bunch of features and it has some 
idiosyncratic behavior.  However, it is conveniently available without 
adding another dependency and it supports simple use-cases OK; this is 
still a problem with other XML libraries in Python, especially DOM 
libraries.  (For example, incompatibilities between the various lxml 
implementations.)

I, personally, don't think it should be deprecated, even if it shouldn't 
be particularly strongly recommended, either.



From exarkun at divmod.com  Fri Mar 28 19:33:50 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 18:33:50 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328225921.21558.1606403117.divmod.xquotient.9099@joule.divmod.com>
Message-ID: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>

On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>On 02:55 pm, exarkun at divmod.com wrote:
>>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen <phil at bubblehouse.org> 
>>wrote:
>
>>>If it's so bad that you'd tell someone not to use it, why isn't it 
>>>deprecated?
>
>>Because it would take a lot of work to deprecate, and there are a lot of
>>other things people are working on that are deemed more important.
>
>Also because there isn't a complete consensus on how terrible it is.  If you 
>are doing advanced XML processing, it definitely isn't the best choice, 
>because it's missing a bunch of features and it has some idiosyncratic 
>behavior.  However, it is conveniently available without adding another 
>dependency and it supports simple use-cases OK; this is still a problem with 
>other XML libraries in Python, especially DOM libraries.  (For example, 
>incompatibilities between the various lxml implementations.)

Here's an example of a behavior it has which probably isn't going to change
any time soon:

    >>> from twisted.web.microdom import parseString
    >>> s = '<div><span>hello</span> <span>world</span></div>'
    >>> parseString(s).toxml()
    '<?xml version="1.0"?><div><span>hello</span><span>world</span></div>'
    >>> 

So if you need such advanced XML features as correct whitespace handling,
steer clear. ;)

Jean-Paul



From pbastov at gmail.com  Fri Mar 28 23:43:08 2008
From: pbastov at gmail.com (Pavel)
Date: Sat, 29 Mar 2008 09:43:08 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
	<eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
	<d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>
Message-ID: <eaf39e680803282043h27905e81u1dcc115608dad600@mail.gmail.com>

> Forgive me if the following is not what you are looking
> for but, I would recommend a setup like this:
>
> Use a fast and light server/reverse proxy
>  like nginx ( http://wiki.codemongers.com/Main ) to
>
> 1) handle all static files (img,js,css, static html)
> 2) reverse proxy all your dynamic twisted.web part
>
> I use this setup, and it works great with Twisted.
>
> -Alex

Greetings Alex, thanks for your advice.

I'm aware of this configuration, and it seems to be a pretty
reasonable one.



From pbastov at gmail.com  Sat Mar 29 01:39:56 2008
From: pbastov at gmail.com (Pavel)
Date: Sat, 29 Mar 2008 11:39:56 +0600
Subject: [Twisted-Python] disable twisted.web logging
Message-ID: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>

Hi all,

is there any way to disable twisted.web logging? Or at least
control it somehow, e.g. filter and log only necessary entries.

Also, is there any way to make http requests be logged into separate file?

Thanks in advance.

-- 
Good luck,

Pavel Bastov



From glyph at divmod.com  Sat Mar 29 03:46:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 29 Mar 2008 07:46:58 -0000
Subject: [Twisted-Python] A reminder of a useful report
Message-ID: <20080329074658.21558.89626718.divmod.xquotient.9180@joule.divmod.com>


Just a reminder for those of you who might have some free time this 
weekend. (I probably don't, so this reminder is entirely 
hypocritical...)

There's a report in Trac which provides a list of tickets to review in 
the order that reviewers should consider them in:

    http://twistedmatrix.com/trac/report/15

A few of these haven't been looked at in 3 months.  If you're not 
familiar with the review process but you'd like to contribute to Twisted 
by reviewing tickets - well, this is a great opportunity to ask how :).



From sipickles at hotmail.com  Sat Mar 29 08:51:29 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 29 Mar 2008 12:51:29 +0000
Subject: [Twisted-Python] Deferred Network requests
Message-ID: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>

Hi,

I've been using twisted in a low-level way for some time and am now 
interested in the higher level aspects.

Particularly I hope to be able to make deferred requests across a 
network. I'd like to have a hub server, with many small apps (modules) 
which are all clients of the hub server.

I'd like the modules to be able to request information from each other, 
via the hub, in a deferred way, so the callback will be triggered when 
the requested information arrives.

So I need a chain like this:

ModuleA.RequestName(id).addCallback(modACallback) -> Hub
Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
ModuleB.SendNameToHub() -> Hub
Hub.hubCallback triggered: SendNameToModA() -> ModuleA
ModuleA.modACallback triggered - request is complete.

Perhaps one issue is that I have a client->server->client sequence.

Although it looks slow, I am designing my system to be as concurrent as 
possible. Also, the hub can make decisions about sharing requests with 
several modules on a round-robin, or sending requests (and events, 
particularly) to more than one module.

I know I can do this through TCP or similar, but hoped someone might 
suggest which elements of twisted (a very large framework) I should look 
at more closely.

Many thanks!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sat Mar 29 12:53:10 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 29 Mar 2008 16:53:10 +0000
Subject: [Twisted-Python] Server Components
In-Reply-To: <C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
Message-ID: <BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>


Linux user #458601 - http://counter.li.org.



Phil Christensen wrote:
> If you are sure to have complete control over the network they're 
> running on (say, in a private IP space) this may be a non-issue, so 
> it's really just about logistics.
>
Yes, This system would be in Private IP space.
> My initial reaction was to suggest Perspective Broker, but someone 
> else might recommend AMP, which I'm just starting to learn the ins and 
> outs of....
>
I'll look at PB, but have not found twisted doc very accessible. As for 
AMP, what is that?

Thanks

Si

ps: sorry for repeating myself in later post :)





From phil at bubblehouse.org  Sat Mar 29 20:56:56 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 20:56:56 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
References: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
Message-ID: <BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>


On Mar 28, 2008, at 7:33 PM, Jean-Paul Calderone wrote:
> On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>> On 02:55 pm, exarkun at divmod.com wrote:
>>> On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen  
>>> <phil at bubblehouse.org> wrote:
>>
>>>> If it's so bad that you'd tell someone not to use it, why isn't  
>>>> it deprecated?
>>
>>> Because it would take a lot of work to deprecate, and there are a  
>>> lot of
>>> other things people are working on that are deemed more important.
>>
>> Also because there isn't a complete consensus on how terrible it  
>> is.  If you are doing advanced XML processing, it definitely isn't  
>> the best choice, because it's missing a bunch of features and it  
>> has some idiosyncratic behavior.  However, it is conveniently  
>> available without adding another dependency and it supports simple  
>> use-cases OK; this is still a problem with other XML libraries in  
>> Python, especially DOM libraries.  (For example, incompatibilities  
>> between the various lxml implementations.)
>
> Here's an example of a behavior it has which probably isn't going  
> to change
> any time soon:
>
>    >>> from twisted.web.microdom import parseString
>    >>> s = '<div><span>hello</span> <span>world</span></div>'
>    >>> parseString(s).toxml()
>    '<?xml version="1.0"?><div><span>hello</span><span>world</span></ 
> div>'
>    >>>
> So if you need such advanced XML features as correct whitespace  
> handling,
> steer clear. ;)

I have to say, I don't find this to be that big an issue. I think if  
you're using XML as a data interchange format (as I know the original  
poster was), whitespace is generally syntactically meaningless.

In fact, in my particular usage, I'm dealing with SAML responses  
which need to have a signature verified using xmlsec, and any  
whitespace like that would break the signature.

I know there's a tendency among developers to immediately disregard  
something that is less than perfect, but I like microdom too much to  
give up on it yet ;-)...

-phil



From phil at bubblehouse.org  Sat Mar 29 21:03:41 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 21:03:41 -0400
Subject: [Twisted-Python] disable twisted.web logging
In-Reply-To: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
References: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
Message-ID: <EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>

On Mar 29, 2008, at 1:39 AM, Pavel wrote:
> Hi all,
>
> is there any way to disable twisted.web logging? Or at least
> control it somehow, e.g. filter and log only necessary entries.
>
> Also, is there any way to make http requests be logged into  
> separate file?

FYI, posts like this should probably go to the twisted-web mailing list.

I'm not sure what level of control you'd like over the access log,  
but for simple redirection, it's straightforward. Here's how I build  
the Site object:

     myresource = MyResource()
     if(config['logfile'] != '-'):
         site = server.Site(myresource, logPath=config['logfile'])
     else:
         site = server.Site(myresource)

This will let you pass either a log filename or /dev/null as a  
parameter.

If you'd like more control (like logging different kinds of requests  
to different files), you'll need to get into the LogObserver stuff in  
twisted.python.log... I've only used t.p.log to create custom  
loggers, though, I'm not sure what's involved in filtering t.web's  
log messages....

Hope this helps,

-phil



From phil at bubblehouse.org  Sat Mar 29 21:23:19 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 21:23:19 -0400
Subject: [Twisted-Python] Server Components
In-Reply-To: <BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
	<BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>
Message-ID: <42DD51A4-18C5-44DA-B641-0EEFB68D1645@bubblehouse.org>


On Mar 29, 2008, at 12:53 PM, Simon Pickles wrote:
>
> Linux user #458601 - http://counter.li.org.
>
> Phil Christensen wrote:
>> If you are sure to have complete control over the network they're  
>> running on (say, in a private IP space) this may be a non-issue,  
>> so it's really just about logistics.
>>
> Yes, This system would be in Private IP space.
>> My initial reaction was to suggest Perspective Broker, but someone  
>> else might recommend AMP, which I'm just starting to learn the ins  
>> and outs of....
>>
> I'll look at PB, but have not found twisted doc very accessible. As  
> for AMP, what is that?

I found the PB docs pretty reasonable, but I was already fairly  
comfortable with asynchronous network programming, which is really a  
required step before Twisted starts making sense. This one was the  
most help:

	http://twistedmatrix.com/projects/core/documentation/howto/pb- 
usage.html

I'm pretty fond of PB, but I don't really use a lot of the more  
advanced features. Its applicability is definitely dependent on what  
kind of data you need to send between your various nodes...

As for amp, I was recently passed this link:

	http://twistedmatrix.com/documents/current/api/ 
twisted.protocols.amp.html

But I'm still processing it ;-)...

On Mar 29, 2008, at 8:51 AM, Simon Pickles wrote:
>
> Particularly I hope to be able to make deferred requests across a  
> network. I'd like to have a hub server, with many small apps  
> (modules) which are all clients of the hub server.
>
> I'd like the modules to be able to request information from each  
> other, via the hub, in a deferred way, so the callback will be  
> triggered when the requested information arrives.

This is definitely the standard behavior of PB, and in fact, much of  
Twisted. Network requests always happen asynchronously, and trigger  
their Deferred's callback function like any other deferred event.

> So I need a chain like this:
>
> ModuleA.RequestName(id).addCallback(modACallback) -> Hub
> Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
> ModuleB.SendNameToHub() -> Hub
> Hub.hubCallback triggered: SendNameToModA() -> ModuleA
> ModuleA.modACallback triggered - request is complete.
>
> Perhaps one issue is that I have a client->server->client sequence.

That shouldn't be an issue. This is a very reasonable command flow,  
and dealing with it elegantly in your app is more a matter of design  
choices than protocol.

> Although it looks slow, I am designing my system to be as  
> concurrent as possible. Also, the hub can make decisions about  
> sharing requests with several modules on a round-robin, or sending  
> requests (and events, particularly) to more than one module.
>
> I know I can do this through TCP or similar, but hoped someone  
> might suggest which elements of twisted (a very large framework) I  
> should look at more closely.

I think you'll find that PB is easier to pick up initially than AMP,  
but if you require a more advanced protocol (e.g., something that  
can't be expressed in terms of python method calls and responses, or  
that needs very robust exception handling), AMP will probably work  
better in the long run.

I do have to emphasize though that this is my opinion based on  
limited exposure to AMP, perhaps someone else can chime in with  
better info...

-phil




From exarkun at twistedmatrix.com  Sun Mar 30 00:05:23 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Mar 2008 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1206849923.83.265199727@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080330/6476a56d/attachment.htm 

From glyph at divmod.com  Sun Mar 30 01:08:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 30 Mar 2008 05:08:15 -0000
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>
References: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
	<BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>
Message-ID: <20080330050815.21558.1706581895.divmod.xquotient.9228@joule.divmod.com>


On 12:56 am, phil at bubblehouse.org wrote:
>On Mar 28, 2008, at 7:33 PM, Jean-Paul Calderone wrote:
>>On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>>>On 02:55 pm, exarkun at divmod.com wrote:
>>>>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen 
>>>><phil at bubblehouse.org> wrote:

>>    >>> from twisted.web.microdom import parseString
>>    >>> s = '<div><span>hello</span> <span>world</span></div>'
>>    >>> parseString(s).toxml()
>>    '<?xml version="1.0"?><div><span>hello</span><span>world</span></ 
>>div>'
>>    >>>
>>So if you need such advanced XML features as correct whitespace 
>>handling,
>>steer clear. ;)

>I have to say, I don't find this to be that big an issue. I think if 
>you're using XML as a data interchange format (as I know the original 
>poster was), whitespace is generally syntactically meaningless.

Like many things in Microdom, whitespace handling does not strive to be 
particularly spec-compliant (the spec does say "An XML processor  MUST 
always pass all characters in a document that are not markup through to 
the application."), but to be useful for simple cases and stable enough 
that your code won't break.  If you want whitespace you can probably 
cram it in there.  For example, it has a creative misinterpretation of 
the "xml:space" attribute:
>>>from twisted.web.microdom import parseString
>>>s = '<div xml:space="preserve"><span>hello</span> 
>>><span>world</span></div>'
>>>parseString(s).toxml()
'<?xml version="1.0"?><div xml:space="preserve"><span>hello</span> 
<span>world</span></div>'

It is also hard-coded to preserve space in <pre> tags, which is also 
broken because it doesn't really honor namespaces, and therefore has no 
idea if your document is HTML or not, and it can't read DTDs so it 
doesn't know if your elements have this attribute set implicitly (and so 
on and so on).

This could be made into *slightly* less of a hack with a preserveSpace 
argument to parse*(), of course; the implementation would probably be 
very straightforward (c.f. MicroDOMParser.shouldPreserveSpace).  Maybe 
someone who actually likes Microdom, such as Phil, will add one, since 
all I'm committing to here is not totally hating it ;).



From pbastov at gmail.com  Sun Mar 30 07:12:37 2008
From: pbastov at gmail.com (Pavel)
Date: Sun, 30 Mar 2008 17:12:37 +0600
Subject: [Twisted-Python] disable twisted.web logging
In-Reply-To: <EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>
References: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
	<EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>
Message-ID: <eaf39e680803300412w2966e6dg8474deb011736acd@mail.gmail.com>

Phil, your reply is very helpful. Thanks a lot.

P.S.

I will take your advice into account and next time will post to twisted-web.

On Sun, Mar 30, 2008 at 7:03 AM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Mar 29, 2008, at 1:39 AM, Pavel wrote:
>  > Hi all,
>  >
>  > is there any way to disable twisted.web logging? Or at least
>  > control it somehow, e.g. filter and log only necessary entries.
>  >
>  > Also, is there any way to make http requests be logged into
>  > separate file?
>
>  FYI, posts like this should probably go to the twisted-web mailing list.
>
>  I'm not sure what level of control you'd like over the access log,
>  but for simple redirection, it's straightforward. Here's how I build
>  the Site object:
>
>      myresource = MyResource()
>      if(config['logfile'] != '-'):
>          site = server.Site(myresource, logPath=config['logfile'])
>      else:
>          site = server.Site(myresource)
>
>  This will let you pass either a log filename or /dev/null as a
>  parameter.
>
>  If you'd like more control (like logging different kinds of requests
>  to different files), you'll need to get into the LogObserver stuff in
>  twisted.python.log... I've only used t.p.log to create custom
>  loggers, though, I'm not sure what's involved in filtering t.web's
>  log messages....
>
>  Hope this helps,
>
>  -phil
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From sipickles at hotmail.com  Mon Mar 31 04:00:40 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 09:00:40 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
Message-ID: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>

Hi,

You may have seen my recent posts about data comms across nodes of 
server network.

Phil kindly pointed me towards PB and AMP which, after some fiddling 
both look viable. However, I do have one question: If clients can 
request remote data from the server, is the reverse possible?

As I understand PB, a client can get the root object of a 
PBServerFactory, thru which it can call methods with the 'remote_' 
prefix. I'm not clear how this can work in the other direction. As for 
AMP, this seems similar - the client uses callRemote() to execute remote 
methods on the amp server.

Since I have node clients all talking through a server, I need the 
client to make requests to the server, which in turn requests the 
appropriate data from the corresponding client.

Thanks for any advice on this

Regards

Simon

-- 
Linux Counter: User# 424693 






From andreas at kostyrka.org  Mon Mar 31 06:19:27 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 31 Mar 2008 12:19:27 +0200
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F09A28.6000503@hotmail.com>
References: <47F09A28.6000503@hotmail.com>
Message-ID: <1206958767.8299.2.camel@localhost>

Well, the client nodes can also be servers.

Alternativly, it's Twisted, so you let your node call in for "work", and
wait till you have work for the node before returning from the method
call. (Hint return a defered, store it in a dictionary (nodeid =>
defered), and when you need node X to do work for you,
nodeid_defered_dict[nodeX].callback("do this work please", id))

Andreas


Am Montag, den 31.03.2008, 09:00 +0100 schrieb Simon Pickles:
> Hi,
> 
> You may have seen my recent posts about data comms across nodes of 
> server network.
> 
> Phil kindly pointed me towards PB and AMP which, after some fiddling 
> both look viable. However, I do have one question: If clients can 
> request remote data from the server, is the reverse possible?
> 
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. As for 
> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.
> 
> Since I have node clients all talking through a server, I need the 
> client to make requests to the server, which in turn requests the 
> appropriate data from the corresponding client.
> 
> Thanks for any advice on this
> 
> Regards
> 
> Simon
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080331/46b89528/attachment.pgp 

From p.mayers at imperial.ac.uk  Mon Mar 31 06:55:39 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 31 Mar 2008 11:55:39 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
References: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
Message-ID: <47F0C32B.80903@imperial.ac.uk>

Simon Pickles wrote:
> Hi,
> 
> You may have seen my recent posts about data comms across nodes of 
> server network.
> 
> Phil kindly pointed me towards PB and AMP which, after some fiddling 
> both look viable. However, I do have one question: If clients can 
> request remote data from the server, is the reverse possible?
> 
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. As for 

Well, this is a contrived example (since you could just return the 
deferred) but:

class Server(pb.Referenceable):
   def remote_foo(self, client):
     d = doThing().addCallback(self.thing_result, client)

   def thing_result(self, result, client):
     client.callRemote('thing', result)



class Client(pb.Referenceable):
   def remote_thing(self, thing):
     # do something

   def callServer(self):
     d = self.server.getRootObject().addCallback(self.callServer2)
   def callServer2(self, server):
     server.callRemote('foo', self)

That is - when you callRemote() you can pass pb.Referenceable as 
arguments, and the other end call callRemote on those objects.


> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.

No idea about AMP

> 
> Since I have node clients all talking through a server, I need the 
> client to make requests to the server, which in turn requests the 
> appropriate data from the corresponding client.
> 
> Thanks for any advice on this
> 
> Regards
> 
> Simon
> 




From p.mayers at imperial.ac.uk  Mon Mar 31 07:31:27 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 31 Mar 2008 12:31:27 +0100
Subject: [Twisted-Python] Deferred Network requests
In-Reply-To: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
References: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
Message-ID: <47F0CB8F.9090209@imperial.ac.uk>

Simon Pickles wrote:
> Hi,
> 
> I've been using twisted in a low-level way for some time and am now 
> interested in the higher level aspects.
> 
> Particularly I hope to be able to make deferred requests across a 
> network. I'd like to have a hub server, with many small apps (modules) 
> which are all clients of the hub server.
> 
> I'd like the modules to be able to request information from each other, 
> via the hub, in a deferred way, so the callback will be triggered when 
> the requested information arrives.
> 
> So I need a chain like this:
> 
> ModuleA.RequestName(id).addCallback(modACallback) -> Hub
> Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
> ModuleB.SendNameToHub() -> Hub
> Hub.hubCallback triggered: SendNameToModA() -> ModuleA
> ModuleA.modACallback triggered - request is complete.
> 
> Perhaps one issue is that I have a client->server->client sequence.
> 
> Although it looks slow, I am designing my system to be as concurrent as 
> possible. Also, the hub can make decisions about sharing requests with 
> several modules on a round-robin, or sending requests (and events, 
> particularly) to more than one module.
> 
> I know I can do this through TCP or similar, but hoped someone might 
> suggest which elements of twisted (a very large framework) I should look 
> at more closely.

Perspective broker (pb) would work, provided the values you are passing 
round are plain python types e.g. int, str, list, dict, tuple.

You'd have something like:

from twisted.spread import pb
from twisted.internet import reactor

class Module(pb.Referenceable):
   def __init__(self, name, server, port=1234):
     self.f = pb.PBClientFactory()
     reactor.connectTCP(server, port, f)
     self.f.getRootObject().addCallback(self.signon, name)

   def signon(self, root, name):
     self.root = root
     self.root.callRemote('signon', name, self)

   # methods for use by remote
   def remote_doThing(self):
     return aDeferredThing()

   # methods for use by local process
   def requestName(self, id):
     return self.root.addCallback(requestName2, id)
   def requestName2(self, root, id):
     return root.callRemote('requestName', id)

ModuleA = Module('ModuleA', server)
reactor.run()

...and on the server site:

from twisted.spread import pb

class Server(pb.Root):
   modules = {}

   # function a module registers with
   def remote_signon(self, name, module):
     if name in self.modules:
         self.modules[name].append(module)
     else:
         self.modules[name] = [module]

   # proxy to a copy of ModuleA, with load-balancing
   def remote_modulea_doThing(self, arg):
     modulea_list = self.modules['ModuleA']
     mod = random.choice(modulea_list)
     return mod.callRemote('doThing', arg)

   # proxy wherever...
   def remote_requestName(self, id):
     mod = ...
     return mod.requestName(id)

The above is very hacky - the class-global dict() is wrong, and there is 
no handling of PB disconnection errors and so forth, but the basic idea 
is sound.

> 
> Many thanks!
> 
> Simon
> 




From drew.smathers at gmail.com  Mon Mar 31 07:40:44 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 31 Mar 2008 07:40:44 -0400
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F0C32B.80903@imperial.ac.uk>
References: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
	<47F0C32B.80903@imperial.ac.uk>
Message-ID: <368574aa0803310440y77f50f19i98a61c856d9373d7@mail.gmail.com>

On Mon, Mar 31, 2008 at 6:55 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Simon Pickles wrote:
>  > Hi,
>  >
>  > You may have seen my recent posts about data comms across nodes of
>  > server network.
>  >
>  > Phil kindly pointed me towards PB and AMP which, after some fiddling
>  > both look viable. However, I do have one question: If clients can
>  > request remote data from the server, is the reverse possible?
>  >
>  > As I understand PB, a client can get the root object of a
>  > PBServerFactory, thru which it can call methods with the 'remote_'
>  > prefix. I'm not clear how this can work in the other direction. As for
>
>  Well, this is a contrived example (since you could just return the
>  deferred) but:
>
>  class Server(pb.Referenceable):
>    def remote_foo(self, client):
>      d = doThing().addCallback(self.thing_result, client)
>
>    def thing_result(self, result, client):
>      client.callRemote('thing', result)
>
>
>
>  class Client(pb.Referenceable):
>    def remote_thing(self, thing):
>      # do something
>
>    def callServer(self):
>      d = self.server.getRootObject().addCallback(self.callServer2)
>    def callServer2(self, server):
>      server.callRemote('foo', self)
>
>  That is - when you callRemote() you can pass pb.Referenceable as
>  arguments, and the other end call callRemote on those objects.
>
>
>
>  > AMP, this seems similar - the client uses callRemote() to execute remote
>  > methods on the amp server.
>
>  No idea about AMP
>

AMP is bidirectional as well.  The server uses callRemote to
communicate with the connected client(s):

http://djfroofy.livejournal.com/3509.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From exarkun at divmod.com  Mon Mar 31 07:46:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 06:46:44 -0500
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
Message-ID: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>

On Mon, 31 Mar 2008 09:00:40 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>You may have seen my recent posts about data comms across nodes of server 
>network.
>
>Phil kindly pointed me towards PB and AMP which, after some fiddling both 
>look viable. However, I do have one question: If clients can request remote 
>data from the server, is the reverse possible?
>
>As I understand PB, a client can get the root object of a PBServerFactory, 
>thru which it can call methods with the 'remote_' prefix. I'm not clear how 
>this can work in the other direction. As for AMP, this seems similar - the 
>client uses callRemote() to execute remote methods on the amp server.
>
>Since I have node clients all talking through a server, I need the client to 
>make requests to the server, which in turn requests the appropriate data 
>from the corresponding client.
>
>Thanks for any advice on this
>

In addition to the other suggestions that have been made in this thread,
notice that PBClientFactory.login takes two arguments: the credentials
object used for authentication and an optional "client" object which
defaults to None.  The value of this parameter is made available to your
realm in the `mind? parameter.  This means you can pass a reference to
login for this parameter and the server can use it to make calls onto the
client whenever it wants, rather than having to wait for a subsequent
call made by the client.

Jean-Paul



From sipickles at hotmail.com  Mon Mar 31 08:18:44 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 13:18:44 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>
References: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>
Message-ID: <BAY114-DAV7F26982293AA3E64861E6BEFA0@phx.gbl>



Jean-Paul Calderone wrote:
> On Mon, 31 Mar 2008 09:00:40 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> You may have seen my recent posts about data comms across nodes of 
>> server network.
>>
>> Phil kindly pointed me towards PB and AMP which, after some fiddling 
>> both look viable. However, I do have one question: If clients can 
>> request remote data from the server, is the reverse possible?
>>
>> As I understand PB, a client can get the root object of a 
>> PBServerFactory, thru which it can call methods with the 'remote_' 
>> prefix. I'm not clear how this can work in the other direction. As 
>> for AMP, this seems similar - the client uses callRemote() to execute 
>> remote methods on the amp server.
>>
>> Since I have node clients all talking through a server, I need the 
>> client to make requests to the server, which in turn requests the 
>> appropriate data from the corresponding client.
>>
>> Thanks for any advice on this
>>
>
> In addition to the other suggestions that have been made in this thread,
> notice that PBClientFactory.login takes two arguments: the credentials
> object used for authentication and an optional "client" object which
> defaults to None.  

This looks very interesting.

> The value of this parameter is made available to your
> realm in the `mind? parameter.  

Er, I'm sorry but I don't understand realm and mind. I'm new to this area.

> This means you can pass a reference to
> login for this parameter and the server can use it to make calls onto the
> client whenever it wants, rather than having to wait for a subsequent
> call made by the client.

This is exactly what I would like to do.

Simon


-- 
Linux Counter: User# 424693 






From exarkun at divmod.com  Mon Mar 31 08:44:41 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 07:44:41 -0500
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV7F26982293AA3E64861E6BEFA0@phx.gbl>
Message-ID: <20080331124441.6859.1390157848.divmod.quotient.24741@ohm>

On Mon, 31 Mar 2008 13:18:44 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>
>Jean-Paul Calderone wrote:
> [snip]
>>
>>In addition to the other suggestions that have been made in this thread,
>>notice that PBClientFactory.login takes two arguments: the credentials
>>object used for authentication and an optional "client" object which
>>defaults to None.
>
>This looks very interesting.
>>The value of this parameter is made available to your
>>realm in the `mind? parameter.
>
>Er, I'm sorry but I don't understand realm and mind. I'm new to this area.
>>This means you can pass a reference to
>>login for this parameter and the server can use it to make calls onto the
>>client whenever it wants, rather than having to wait for a subsequent
>>call made by the client.
>
>This is exactly what I would like to do.

Have you read the cred howto?  There is a section on realms and one on minds
(although the mind section is quite abstract and may not make any sense).

  http://twistedmatrix.com/projects/core/documentation/howto/cred.html

Basically, the mind is just an argument which will be available in your
realm to use however you like.  The realm is the object which creates your
avatars.  Avatars are the objects which are returned by the login method
of PBClientFactory.

Jean-Paul



From dripton at ripton.net  Mon Mar 31 09:23:57 2008
From: dripton at ripton.net (David Ripton)
Date: Mon, 31 Mar 2008 06:23:57 -0700
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F09A28.6000503@hotmail.com>
References: <47F09A28.6000503@hotmail.com>
Message-ID: <20080331132357.GA7187@vidar.dreamhost.com>

On 2008.03.31 09:00:40 +0100, Simon Pickles wrote:
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. 

The mind argument to Realm.requestAvatar holds a reference to the client
object that the client passed to PBClientFactory.login  You can stash
that reference somewhere on the server side, and call callRemote on it
later.

http://twistedmatrix.com/projects/core/documentation/howto/cred.html

> As for 
> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.

And the server can use callRemote on a client's protocol object. 

I have a simple AMP chat example that demonstrates this:
http://ripton.net/hg/ampchat

-- 
David Ripton    dripton at ripton.net



From mailing_lists at evotex.ch  Mon Mar 31 12:28:09 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 31 Mar 2008 18:28:09 +0200
Subject: [Twisted-Python] win 32 reactor
Message-ID: <47F11119.3040501@evotex.ch>

Hello,

I need to use PyHook, a win32 lib allowing global input monitoring 
(mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
win32com's PumpMessages() function. This is an event loop defined like so :

// @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
thread until a WM_QUIT message.
static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
{
    MSG msg;
    int rc;
    Py_BEGIN_ALLOW_THREADS
    while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
        TranslateMessage(&msg); // needed?
        DispatchMessage(&msg);
    }
    Py_END_ALLOW_THREADS
    if (rc==-1)
        return PyWin_SetAPIError("GetMessage");
    Py_INCREF(Py_None);
    return Py_None;
}

my question is ho can I make this work with twisted? Is there a way to 
use the supplied win32 reactors (there are three I think) or do I have 
to write one myself? Could someone please point me in the right direction?

Thanks,
Gabriel



From nathan.stocks at gmail.com  Mon Mar 31 12:32:25 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 31 Mar 2008 10:32:25 -0600
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
Message-ID: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>

Is there any noticeable difference between psycopg (version 2) or
pygresql (version 3.8.1) when used with twisted.enterprise to connect
to postgresql?

Pygresql hasn't been updated since June 2006, but maybe that's just
because it's stable (?) -- I haven't used it at all, ever.

Psycopg2 has had more recent releases, but I've experience some bugs
with it in (non-twisted) threaded code and the web site has been down
for weeks (months?), so I thought it wise to explore alternatives...

Or is there a better third alternative???

Also, we're considering turning on SSL client-certificate verification
on our postgresql installation -- does anyone know whether either of
the above support SSL client certificates?

Opinions?

~ Nathan



From andreas at kostyrka.org  Mon Mar 31 12:39:43 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 31 Mar 2008 18:39:43 +0200
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <47F11119.3040501@evotex.ch>
References: <47F11119.3040501@evotex.ch>
Message-ID: <1206981583.8299.21.camel@localhost>

This releases the GIL, so I guess it should be ok to call it in a
background thread from Python. Should be all that is needed.

Andreas

Am Montag, den 31.03.2008, 18:28 +0200 schrieb Gabriel Rossetti:
> Hello,
> 
> I need to use PyHook, a win32 lib allowing global input monitoring 
> (mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
> win32com's PumpMessages() function. This is an event loop defined like so :
> 
> // @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
> thread until a WM_QUIT message.
> static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
> {
>     MSG msg;
>     int rc;
>     Py_BEGIN_ALLOW_THREADS
>     while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>         TranslateMessage(&msg); // needed?
>         DispatchMessage(&msg);
>     }
>     Py_END_ALLOW_THREADS
>     if (rc==-1)
>         return PyWin_SetAPIError("GetMessage");
>     Py_INCREF(Py_None);
>     return Py_None;
> }
> 
> my question is ho can I make this work with twisted? Is there a way to 
> use the supplied win32 reactors (there are three I think) or do I have 
> to write one myself? Could someone please point me in the right direction?
> 
> Thanks,
> Gabriel
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080331/a761b60a/attachment.pgp 

From exarkun at divmod.com  Mon Mar 31 12:55:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 11:55:42 -0500
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <47F11119.3040501@evotex.ch>
Message-ID: <20080331165542.6859.849658278.divmod.quotient.24782@ohm>

On Mon, 31 Mar 2008 18:28:09 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I need to use PyHook, a win32 lib allowing global input monitoring (mouse, 
>keyboard, etc). It uses the PyWin32 extentions, in particular win32com's 
>PumpMessages() function. This is an event loop defined like so :
>
>// @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
>thread until a WM_QUIT message.
>static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
>{
>    MSG msg;
>    int rc;
>    Py_BEGIN_ALLOW_THREADS
>    while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>        TranslateMessage(&msg); // needed?
>        DispatchMessage(&msg);
>    }
>    Py_END_ALLOW_THREADS
>    if (rc==-1)
>        return PyWin_SetAPIError("GetMessage");
>    Py_INCREF(Py_None);
>    return Py_None;
>}
>
>my question is ho can I make this work with twisted? Is there a way to use 
>the supplied win32 reactors (there are three I think) or do I have to write 
>one myself? Could someone please point me in the right direction?

The three reactors you're probably referring to are selectreactor, win32er,
and IOCP reactor.  Of these, only the latter two do anything particular to
Windows (the first just uses select(2), which Windows sort of has).

win32er is basically a loop around MsgWaitForMultipleObjects.  IOCP reactor
is basically a loop around GetQueuedCompletionStatus.  One way to look at
your question is to consider how GetMessage/TranslateMessage/DispatchMessage
interact with MWFMO and GQCS.  This is basically a Windows API question, so
I can't answer it, since I know very little about Windows APIs.

Jean-Paul



From db3l.net at gmail.com  Mon Mar 31 12:57:05 2008
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 31 Mar 2008 12:57:05 -0400
Subject: [Twisted-Python] Re: Deferred Network requests
References: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
	<47F0CB8F.9090209@imperial.ac.uk>
Message-ID: <m2k5jiomqm.fsf@valheru.db3l.homeip.net>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

> Perspective broker (pb) would work, provided the values you are
> passing round are plain python types e.g. int, str, list, dict, tuple.

Lest anyone think this is a hard limitation, PB also works fine with
custom class instances, as long as you appropriately register them for
the jelly/unjelly operation.

-- David




From mailing_lists at evotex.ch  Mon Mar 31 13:02:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 31 Mar 2008 19:02:12 +0200
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <1206981583.8299.21.camel@localhost>
References: <47F11119.3040501@evotex.ch> <1206981583.8299.21.camel@localhost>
Message-ID: <47F11914.8050106@evotex.ch>

Andreas Kostyrka wrote:
> This releases the GIL, so I guess it should be ok to call it in a
> background thread from Python. Should be all that is needed.
>
> Andreas
>   
Ok, thanks Andreas, I'll try that.
Gabriel
> Am Montag, den 31.03.2008, 18:28 +0200 schrieb Gabriel Rossetti:
>   
>> Hello,
>>
>> I need to use PyHook, a win32 lib allowing global input monitoring 
>> (mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
>> win32com's PumpMessages() function. This is an event loop defined like so :
>>
>> // @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
>> thread until a WM_QUIT message.
>> static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
>> {
>>     MSG msg;
>>     int rc;
>>     Py_BEGIN_ALLOW_THREADS
>>     while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>>         TranslateMessage(&msg); // needed?
>>         DispatchMessage(&msg);
>>     }
>>     Py_END_ALLOW_THREADS
>>     if (rc==-1)
>>         return PyWin_SetAPIError("GetMessage");
>>     Py_INCREF(Py_None);
>>     return Py_None;
>> }
>>
>> my question is ho can I make this work with twisted? Is there a way to 
>> use the supplied win32 reactors (there are three I think) or do I have 
>> to write one myself? Could someone please point me in the right direction?
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     




From phil at bubblehouse.org  Mon Mar 31 14:11:20 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Mar 2008 14:11:20 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
Message-ID: <31548118-BB5F-4CD4-8921-077D26DD5F6D@bubblehouse.org>

On Mar 31, 2008, at 12:32 PM, Nathan wrote:
> Is there any noticeable difference between psycopg (version 2) or
> pygresql (version 3.8.1) when used with twisted.enterprise to connect
> to postgresql?
>
> Pygresql hasn't been updated since June 2006, but maybe that's just
> because it's stable (?) -- I haven't used it at all, ever.
>
> Psycopg2 has had more recent releases, but I've experience some bugs
> with it in (non-twisted) threaded code and the web site has been down
> for weeks (months?), so I thought it wise to explore alternatives...
>
> Or is there a better third alternative???

I used both recently with adbapi, and everything seemed fine. I  
remember both of them missing some features that I was used to with  
MySQLdb, like customizable cursor classes and so forth, but nothing  
that was a deal-breaker.

I never ran this in production, but I did run stress tests with both  
these drivers against a copy of a production database. There were no  
driver-related issues, just syntax errors (the web app was originally  
written for MySQL, and there was a small amount of non-standard SQL).

I have run into threading issues with pretty much every driver, so I  
wouldn't discount psycopg2 because of that...

> Also, we're considering turning on SSL client-certificate verification
> on our postgresql installation -- does anyone know whether either of
> the above support SSL client certificates?

I know pygresql doesn't support this, but I'm not sure about psycopg2.

-phil



From sipickles at hotmail.com  Mon Mar 31 14:59:46 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 19:59:46 +0100
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
Message-ID: <BAY114-DAV3606616A45867CF0DD32ABEFA0@phx.gbl>

Hi,

I expected reactor.connectTCP to return a deferred. That would have been 
nice, since callbacks would have handled the outcome.

So how to I handle failure with it?

I tried:

from twisted.internet.error import ConnectionRefusedError


        print "Connecting..."
        try:
            reactor.connectTCP(self.server, self.port, self.f)
        except ConnectionRefusedError(reason):
            self.Connect_Failure()
            return
        self.Connect_Success()

No good. What am I missing?

Thank you!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Mon Mar 31 15:14:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 14:14:06 -0500
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
In-Reply-To: <BAY114-DAV3606616A45867CF0DD32ABEFA0@phx.gbl>
Message-ID: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>

On Mon, 31 Mar 2008 19:59:46 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I expected reactor.connectTCP to return a deferred. That would have been 
>nice, since callbacks would have handled the outcome.
>
>So how to I handle failure with it?

ClientFactory.clientConnectionFailed will be called if the connection
attempt fails for some reason.

Jean-Paul



From james at mansionfamily.plus.com  Mon Mar 31 18:15:46 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Mon, 31 Mar 2008 23:15:46 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
Message-ID: <47F16292.8060705@mansionfamily.plus.com>

glyph at divmod.com wrote:
> On 01:39 pm, itamar at itamarst.org wrote:
>>
>> On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:
>>> Shouldn't broken Win32 implementations be 'retired'?
>
> These implementations aren't "broken", so much as "limited".
>
Well, if they don't honour what the documentation says, then they seem 
broken
to me, and the documentation doesn't say you might get an unexpected
64 connection limit. No matter.
> Please feel free to contribute patches which reduce these limitations.
>> The old I/O Completion Ports reactor (which should be most scalable
>> Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
>> a complete rewrite that hopefully is a lot better.
>
> It still doesn't support SSL, though:
>
>    http://twistedmatrix.com/trac/ticket/593
>
Need something patterned very much like Len's stuff
here http://www.lenholgate.com/archives/000456.html I guess.
> and maybe some other features too (I don't have a Windows handy or the 
> time required to read the code to check - this really ought to be 
> better-documented).
>
> The select reactor is also convenient for testing on Windows, because 
> it's the basis of at least one GUI reactor (GTK+) which should also 
> support Win32.
>
> Your suggestion for handle buckets in the win32eventreactor is one 
> which has been suggested before and sounds good to me.  Nobody has 
> bothered to implement it yet :).  However, even in its absence, I 
> don't believe we'll be completely dropping win32eventreactor because 
> it is useful for integrating with programs that do win32 drawing, even 
> if iocpreactor has higher performance and is more scalable.
Well, you need a daemon worker thread to call GetQueuedCompletionStatus(Ex)
and enqueue the results to the main thread, but that daemon worker doesn't
even need to have the full support of the C library multithreading so 
long as it just
swizzles pointers and calls raw API routines. Its normally more of a 
gotcha that
you might try to submit IO from a pool thread that might reasonably be 
terminated
before the IO completes. Why do you need an event reactor to support win32
applications, except to call MsgWait... rather than 
GetQueuedCompletionStatus?

On a similar sort of topic - is there a reason to have lots of 
implementations
for POSIX, rather than use libevent or libev?

James




From nathan.stocks at gmail.com  Mon Mar 31 18:45:04 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 31 Mar 2008 16:45:04 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
Message-ID: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>

Is there a way to do the opposite of task.coiterate?  I'm using pyglet
for my UI, which was working great until I upgraded from pyglet 1.0 to
1.1.  Now for some reason, the pyglet performance tanked.  Since I'm
only using twisted to send AMP messages very rarely (on the order of
one every few seconds), it seems like I could try to work around the
problem by giving pyglet back control of the main loop and
occasionally giving twisted some time to breath (occasionally like
every 50ms or something).  Can that be done?

Here's what I'm doing _now_ that technically works, but pyglet 1.1 is
really choking on:

> class MyWindow(pyglet.window.Window):
>  def run(self):
>     while not self.has_exit:
>        do_some_stuff_like_dispatching_updating_and_drawing()
>        yield 1
>
> my_window = MyWindow()
> task.coiterate(my_window.run())
> reactor.run()

By the way, the preferred method for the runloop on pyglet 1.1 is to
use a builtin one like so:

> window = pyglet.window.Window()
>
> @window.event
> def on_draw():
>    window.clear()
>    do_drawing_stuff()
>
> pyglet.app.run()

So if twisted can stand giving up it's run loop, I could periodically
call it from that "on_draw()" method.

~ Nathan



From glyph at divmod.com  Mon Mar 31 21:21:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 01:21:37 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F16292.8060705@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
Message-ID: <20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>

On 31 Mar, 10:15 pm, james at mansionfamily.plus.com wrote:
>glyph at divmod.com wrote:

>>These implementations aren't "broken", so much as "limited".
>Well, if they don't honour what the documentation says, then they seem 
>broken
>to me, and the documentation doesn't say you might get an unexpected
>64 connection limit. No matter.

This is actually a problem for every reactor; handling of the connection 
limit (and there is a connection limit everywhere, even if it's 65535) 
is poorly documented and poorly handled.

Patches which rectify this situation for any reactor, either from the 
perspective of docs or code, would of course be appreciated.
>>It still doesn't support SSL, though:
>>
>>    http://twistedmatrix.com/trac/ticket/593
>Need something patterned very much like Len's stuff
>here http://www.lenholgate.com/archives/000456.html I guess.

The real solution to this problem is really:

  * Add an SSH IProtocol implementation that provides ITransport, rather 
than building it into the reactor
  * Add an API to ITransport to switch protocols, so that the protocol 
doesn't need to support protocol switching

The BIO stuff mentioned on that URL is vaguely correct, but the 
interesting stuff is exposing it to Python.  Now that JP Calderone has 
taken over maintenance of PyOpenSSL, we might actually have a chance to 
get that done :).

Once you've got an SSL connection that is getting bytes from and 
delivering bytes to a transport, you don't need to care about any of the 
win32-specific aspects of that post; you just do the I/O using whatever 
platform I/O facility you want and the crypto happens completely 
disconnected from this socket.  iocpreactor already implements enough of 
this to work.

Again, if you want to see this happen: write code which does these 
things and contribute it.
>>Your suggestion for handle buckets in the win32eventreactor is one 
>>which has been suggested before and sounds good to me.  Nobody has 
>>bothered to implement it yet :).  However, even in its absence, I 
>>don't believe we'll be completely dropping win32eventreactor because 
>>it is useful for integrating with programs that do win32 drawing, even 
>>if iocpreactor has higher performance and is more scalable.
>Well, you need a daemon worker thread to call 
>GetQueuedCompletionStatus(Ex)

(... blah blah win32 API stuff that I don't understand ...)
>Why do you need an event reactor to support win32 applications, except 
>to call MsgWait... rather than GetQueuedCompletionStatus?

My answer here, if I even have one, would be horribly vague: something 
about GDI+, or DirectX, or something.  Maybe there's no good reason, I 
don't know.  This level of specificity is probably best served by the 
issue tracker; file a ticket.  And, if you're going to file a ticket, be 
prepared to actually follow up with an implementation.  While we want to 
maintain support for Windows, the level of energy for doing really 
interesting Windows-specific stuff in Twisted is, in a word, "low".

One thing you might want to know before you file that ticket is that 
*if* there's a reason for the way things are now, it's because in the 
Twisted idiom we always make sure GUI stuff and network stuff is 
happening in the same thread.  If one of the approaches that you 
mentioned requires a dedicated "network" application thread, then that's 
probably why we aren't doing it.
>On a similar sort of topic - is there a reason to have lots of 
>implementations for POSIX, rather than use libevent or libev?

There is more than one answer to this question.  Maybe someone will be 
helpful and turn some of these answers into a FAQ on the wiki:

1) Twisted predates libevent by a few years and libev by many years. 
One might instead ask why libevent didn't help us develop a C reactor, 
rather than writing a whole new library.

2) There's a libevent reactor in a branch.  Contribute patches to deal 
with the outstanding review comments: 
http://twistedmatrix.com/trac/ticket/1930

3) Twisted runs on many platforms, so it supports the lowest common 
denominator; that is not libevent, it is Python's "select" module.

4) Neither libevent nor libev (to my knowledge) integrates with any GUI 
event loops.

5) Despite many valid rationalizations for its existence, the code in 
Twisted was developed organically over many years.  The stuff you'll 
find here is the stuff that people thought was interesting and had time 
to work on.  Strategically standardizing on a single low-level 
multiplexing mechanism is not something that is particularly fun or 
rewarding, especially when getting rid of the old code removes value for 
some users.  (Not everyone already has libevent installed.)



From glyph at divmod.com  Mon Mar 31 22:17:42 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 02:17:42 -0000
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
Message-ID: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>


On 31 Mar, 10:45 pm, nathan.stocks at gmail.com wrote:
>Is there a way to do the opposite of task.coiterate?  I'm using pyglet
>for my UI, which was working great until I upgraded from pyglet 1.0 to
>1.1.  Now for some reason, the pyglet performance tanked.

Twisted's job is to run the main loop; it's best just to let it do that. 
If Pyglet slowed down, it would be best to examine what's gone wrong 
with Pyglet and simply submit a fix for that.

We spoke to Richard Jones about Pyglet/Twisted integration at Chris 
Armstrong's excellent gaming+twisted openspace at PyCon, and I believe 
that some future version of Pyglet will include Twisted integration.  Of 
course, this is just a plan right now, not code, so perhaps your time 
would be better spent contributing this feature to Pyglet, rather than 
turning Twisted inside-out :).



From sergey at optimaltec.com  Mon Mar 31 23:03:18 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Mon, 31 Mar 2008 23:03:18 -0400
Subject: [Twisted-Python] Twisted 8.0.1 for Python 2.5 for Windows is
	missing Zope
Message-ID: <fss8lj$uvs$1@ger.gmane.org>

Hi,

I'm sorry if I'm posting to the wrong list. I tried upgrading Twisted
from 2.5.0 to 8.0.1 on Windows with Python 2.5.2, but it doesn't work
due to missing dependency: zope.interface (I'm trying to run Buildbot on
it, if that matters). Upon checking into this 2.5.0 installer for
Windows had Zope modules included, but 8.0.1 doesn't. I also can't find
relatively recent pre-built zope.interface for Windows, and don't have
Visual Studio 2003 installed to build from source, to check if
installing zope.interface would fix the problem.
Is it possible to include relevant Zope modules back into Windows installer?
Thank you!

Sergey.




From therve at free.fr  Sat Mar  1 02:39:49 2008
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Sat, 01 Mar 2008 10:39:49 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear() method
	to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>
References: <E1JVDIn-00015T-00@wolfwood.twistedmatrix.com>
	<d06a5cd30802291417mda59ed0mf3335565e3821f80@mail.gmail.com>
Message-ID: <47C92465.7040103@free.fr>

Jonathan Lange a écrit :
> On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
> <therve at wolfwood.twistedmatrix.com> wrote:
>   
>>  @@ -1241,6 +1242,13 @@
>>          return result
>>
>>
>>  +    def clear(self):
>>  +        """
>>  +        Remove all previously added tests.
>>  +        """
>>  +        self._tests = []
>>  +
> What's your plan for making sure this works with stdlib TestSuite?
>
> jml
>   

I haven't think about it much. The tests aren't broken, so the behavior 
is not really defined. I could just check if the method exists, but that 
doesn't seem very nice. Maybe we could have a ITestSuite interface to 
add specific behavior to the twisted TestSuite object (and then check 
the interface). Or maybe I could just let the old self._tests = [], but 
exarkun wasn't very happy about that.

What do you think?

-- 
Thomas




From exarkun at divmod.com  Sat Mar  1 08:26:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 1 Mar 2008 10:26:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22733 - Add clear()
	method to TestSuite, play with DocTestSuite (ahah some much fun).
In-Reply-To: <47C92465.7040103@free.fr>
Message-ID: <20080301152625.6859.1387019705.divmod.quotient.14525@ohm>

On Sat, 01 Mar 2008 10:39:49 +0100, Thomas Hervé <therve at free.fr> wrote:
>Jonathan Lange a écrit :
>>On Sat, Mar 1, 2008 at 9:02 AM, Thomas Herve
>><therve at wolfwood.twistedmatrix.com> wrote:
>>
>>>  @@ -1241,6 +1242,13 @@
>>>          return result
>>>
>>>
>>>  +    def clear(self):
>>>  +        """
>>>  +        Remove all previously added tests.
>>>  +        """
>>>  +        self._tests = []
>>>  +
>>What's your plan for making sure this works with stdlib TestSuite?
>>
>>jml
>>
>
>I haven't think about it much. The tests aren't broken, so the behavior is 
>not really defined. I could just check if the method exists, but that 
>doesn't seem very nice. Maybe we could have a ITestSuite interface to add 
>specific behavior to the twisted TestSuite object (and then check the 
>interface). Or maybe I could just let the old self._tests = [], but exarkun 
>wasn't very happy about that.
>
>What do you think?

We're already adapting everything we come across to ITestCase.  It seems
that clear should be a method of that interface.  If necessary, we can
provide an adapter from the stdlib TestSuite which defines that method.
Testing should be a simple matter then.

Jean-Paul



From glenn at tarbox.org  Sat Mar  1 21:12:39 2008
From: glenn at tarbox.org (Glenn Tarbox, PhD)
Date: Sat, 1 Mar 2008 20:12:39 -0800
Subject: [Twisted-Python] Qt4 Reactor
Message-ID: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>

I've got a somewhat functional Qt4 reactor working.  Its maintained and
available at:

http://code.tarbox.org/qtreactor

There is git-daemon and git-instaweb access.  git-instaweb will
auto-generate tarballs for download if you're still waiting to be
assimilated.

-glenn

-- 
Glenn H. Tarbox, PhD
glenn at tarbox.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080301/85b3a461/attachment.html>

From exarkun at twistedmatrix.com  Sat Mar  1 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Mar 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1204434307.8.1042443163@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080302/b3301468/attachment.html>

From mailing_lists at evotex.ch  Mon Mar  3 06:44:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 03 Mar 2008 14:44:12 +0100
Subject: [Twisted-Python] twisted plugins
Message-ID: <47CC00AC.50407@evotex.ch>

Hello,

I tried creating some test plugins using the plugin howto on the twisted 
website. I did as shown, I added the plugins dir to the PYTHONPATH and 
tested it. The problem is I get nothing back when calling 
getPlugins(IMyInterface).  Here is some code :

----------------------------------------------------------------------------------------------

    from zope.interface import Interface

    class IHelloWorld(Interface):
        """
        A simple test plugin that displays "Hello world"
        """
       
        def display():
            """
            Displays on stdout "Hello world" in a language chosen by the
    programmer
            """

----------------------------------------------------------------------------------------------

    from twisted.plugin import IPlugin
    from zope.interface import implements
    from interfaces import ihelloworld

    class EnglishHelloWorld(object):
       
        implements(IPlugin, ihelloworld.IHelloWorld)

        def display(self):
            """
            Displays on stdout "Hello world" in English
            """
            print "Hello world!"

---------------------------------------------------------------------------------------------- 


    from twisted.plugin import getPlugins
    from twisted.plugin import IPlugin
    from interfaces import ihelloworld

    def displayHelloWorld():
       
        for h in getPlugins(ihelloworld.IHelloWorld):
            h().display()
           
    if(__name__ == "__main__"):
        displayHelloWorld()

----------------------------------------------------------------------------------------------

I tried running in debug mode to see what happens, but I don't get it, 
in the getPlugins() code, it does this :

    allDropins = getCache(package)

and in this dict I see my plugins, but their inner "plugin" member is an 
empty list. I looked at the code of some of the examples, they used 
"classProvides()" and not "implements()", so I tried that :

----------------------------------------------------------------------------------------------

    from twisted.plugin import IPlugin
    from zope.interface import implements
    from zope.interface import classProvides
    from interfaces import ihelloworld

    class EnglishHelloWorld(object):
       
        classProvides(IPlugin, ihelloworld.IHelloWorld)

        def display(self):
            """
            Displays on stdout "Hello world" in English
            """
            print "Hello world!"

----------------------------------------------------------------------------------------------

which works, is the doc out of sync with the current code or did I do 
something wrong? Another question, it's not really very practical to 
have to iterate all the plugins and I guess test to see which one is 
which, is there a better way of doing it?

Thank you,
Gabriel




From exarkun at divmod.com  Mon Mar  3 06:52:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Mar 2008 08:52:42 -0500
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <47CC00AC.50407@evotex.ch>
Message-ID: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>

On Mon, 03 Mar 2008 14:44:12 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I tried creating some test plugins using the plugin howto on the twisted 
>website. I did as shown, I added the plugins dir to the PYTHONPATH and 
>tested it. The problem is I get nothing back when calling 
>getPlugins(IMyInterface).  Here is some code :
>
>----------------------------------------------------------------------------------------------
>
>    from zope.interface import Interface
>
>    class IHelloWorld(Interface):
>        """
>        A simple test plugin that displays "Hello world"
>        """
>              def display():
>            """
>            Displays on stdout "Hello world" in a language chosen by the
>    programmer
>            """
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import IPlugin
>    from zope.interface import implements
>    from interfaces import ihelloworld
>
>    class EnglishHelloWorld(object):
>              implements(IPlugin, ihelloworld.IHelloWorld)
>
>        def display(self):
>            """
>            Displays on stdout "Hello world" in English
>            """
>            print "Hello world!"
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import getPlugins
>    from twisted.plugin import IPlugin
>    from interfaces import ihelloworld
>
>    def displayHelloWorld():
>              for h in getPlugins(ihelloworld.IHelloWorld):
>            h().display()
>              if(__name__ == "__main__"):
>        displayHelloWorld()
>
>----------------------------------------------------------------------------------------------
>
>I tried running in debug mode to see what happens, but I don't get it, in 
>the getPlugins() code, it does this :
>
>    allDropins = getCache(package)
>
>and in this dict I see my plugins, but their inner "plugin" member is an 
>empty list. I looked at the code of some of the examples, they used 
>"classProvides()" and not "implements()", so I tried that :
>
>----------------------------------------------------------------------------------------------
>
>    from twisted.plugin import IPlugin
>    from zope.interface import implements
>    from zope.interface import classProvides
>    from interfaces import ihelloworld
>
>    class EnglishHelloWorld(object):
>              classProvides(IPlugin, ihelloworld.IHelloWorld)
>
>        def display(self):
>            """
>            Displays on stdout "Hello world" in English
>            """
>            print "Hello world!"
>
>----------------------------------------------------------------------------------------------
>
>which works, is the doc out of sync with the current code or did I do 
>something wrong? Another question, it's not really very practical to have to 
>iterate all the plugins and I guess test to see which one is which, is there 
>a better way of doing it?

Using classProvides can be correct, although it's not quite in your example
code because EnglishHelloWorld must be instantiated in order to use it, and
that isn't reflected in your IHelloWorld interface.  You could make display
a static or class method.  Or you continue using implements and instantiate
EnglishHelloWorld, binding a name to the result (as the documentation shows
with steelPlate/brassPlate).

In the example, when the plugin system finds objects, it finds steelPlate
and brassPlate, not SimpleMaterial.

Jean-Paul



From o.fournier at perigord.com  Mon Mar  3 12:50:41 2008
From: o.fournier at perigord.com (Olivier Fournier)
Date: Mon, 03 Mar 2008 20:50:41 +0100
Subject: [Twisted-Python] Qt4 Reactor
In-Reply-To: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>
References: <f049b35c0803012012m741eeff8xc6fae56dc2c1b956@mail.gmail.com>
Message-ID: <47CC5691.4040607@perigord.com>

thank you

olivier fournier

Glenn Tarbox, PhD wrote:
> I've got a somewhat functional Qt4 reactor working.  Its maintained 
> and available at:
>
> http://code.tarbox.org/qtreactor
>
> There is git-daemon and git-instaweb access.  git-instaweb will 
> auto-generate tarballs for download if you're still waiting to be 
> assimilated.
>
> -glenn
>
> -- 
> Glenn H. Tarbox, PhD
> glenn at tarbox.org <mailto:glenn at tarbox.org>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   





From nathan.stocks at gmail.com  Mon Mar  3 21:11:34 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 3 Mar 2008 21:11:34 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
Message-ID: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>

I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
the "easy" method in the py2app install docs.  I'm trying to package a
little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
working on, and it _mostly_ works, except it keeps giving me the
following error when I try to run the resulting app:

ImportError: No module named amp

Help!?

I've done the following steps to try to debug the problem, with no success:

* Noticed that the following imports DO work:
      from twisted.internet import reactor, task
      from twisted.internet.protocol import ClientCreator

* Verified that I get the same error when running the app with the
following import lines:
      import twisted.protocols.amp
      or
      from twisted.protocols import amp

* Tried the following command-line variations without any variation in
the error (although app sizes varied):

      python setup.py py2app --includes twisted.protocols
      python setup.py py2app --includes twisted.protocols.amp
      python setup.py py2app --use-pythonpath
      python setup.py py2app --use-pythonpath --include twisted.protocols.amp
      python setup.py py2app --use-pythonpath --include
twisted.protocols.amp --graph
      python setup.py py2app --use-pythonpath --include
twisted.protocols.amp -p twisted.protocols
      python setup.py py2app --use-pythonpath -p twisted.protocols
      python setup.py py2app --use-pythonpath -p twisted

* Used the following py2applet-generated setup.py the whole time:

      """
      This is a setup.py script generated by py2applet

      Usage:
          python setup.py py2app
      """

      from setuptools import setup

      APP = ['running-man.py']
      DATA_FILES = ['images']
      OPTIONS = {'argv_emulation': True}

      setup(
          app=APP,
          data_files=DATA_FILES,
          options={'py2app': OPTIONS},
          setup_requires=['py2app'],
      )

~ Nathan



From mailing_lists at evotex.ch  Tue Mar  4 01:29:00 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 04 Mar 2008 09:29:00 +0100
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>
References: <20080303135242.6859.4124078.divmod.quotient.15107@ohm>
Message-ID: <47CD084C.90103@evotex.ch>

Jean-Paul Calderone wrote:
> On Mon, 03 Mar 2008 14:44:12 +0100, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello,
>>
>> I tried creating some test plugins using the plugin howto on the 
>> twisted website. I did as shown, I added the plugins dir to the 
>> PYTHONPATH and tested it. The problem is I get nothing back when 
>> calling getPlugins(IMyInterface).  Here is some code :
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from zope.interface import Interface
>>
>>    class IHelloWorld(Interface):
>>        """
>>        A simple test plugin that displays "Hello world"
>>        """
>>              def display():
>>            """
>>            Displays on stdout "Hello world" in a language chosen by the
>>    programmer
>>            """
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import IPlugin
>>    from zope.interface import implements
>>    from interfaces import ihelloworld
>>
>>    class EnglishHelloWorld(object):
>>              implements(IPlugin, ihelloworld.IHelloWorld)
>>
>>        def display(self):
>>            """
>>            Displays on stdout "Hello world" in English
>>            """
>>            print "Hello world!"
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import getPlugins
>>    from twisted.plugin import IPlugin
>>    from interfaces import ihelloworld
>>
>>    def displayHelloWorld():
>>              for h in getPlugins(ihelloworld.IHelloWorld):
>>            h().display()
>>              if(__name__ == "__main__"):
>>        displayHelloWorld()
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>> I tried running in debug mode to see what happens, but I don't get 
>> it, in the getPlugins() code, it does this :
>>
>>    allDropins = getCache(package)
>>
>> and in this dict I see my plugins, but their inner "plugin" member is 
>> an empty list. I looked at the code of some of the examples, they 
>> used "classProvides()" and not "implements()", so I tried that :
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>>    from twisted.plugin import IPlugin
>>    from zope.interface import implements
>>    from zope.interface import classProvides
>>    from interfaces import ihelloworld
>>
>>    class EnglishHelloWorld(object):
>>              classProvides(IPlugin, ihelloworld.IHelloWorld)
>>
>>        def display(self):
>>            """
>>            Displays on stdout "Hello world" in English
>>            """
>>            print "Hello world!"
>>
>> ---------------------------------------------------------------------------------------------- 
>>
>>
>> which works, is the doc out of sync with the current code or did I do 
>> something wrong? Another question, it's not really very practical to 
>> have to iterate all the plugins and I guess test to see which one is 
>> which, is there a better way of doing it?
>
> Using classProvides can be correct, although it's not quite in your 
> example
> code because EnglishHelloWorld must be instantiated in order to use 
> it, and
> that isn't reflected in your IHelloWorld interface.  You could make 
> display
> a static or class method.  Or you continue using implements and 
> instantiate
> EnglishHelloWorld, binding a name to the result (as the documentation 
> shows
> with steelPlate/brassPlate).
>
> In the example, when the plugin system finds objects, it finds steelPlate
> and brassPlate, not SimpleMaterial.
>
> Jean-Paul
>
Thank you Jean-Paul, I understand better now. I had been trying to 
create instances in the main. There's one thing I don't get though with 
those 2 lines, if I put them in the main, before the for loop, I get en 
error that states that it can't be instantiated, but it works in the 
class, how come?

Gabriel



From glyph at divmod.com  Tue Mar  4 02:13:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 04 Mar 2008 09:13:17 -0000
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
Message-ID: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>


On 04:11 am, nathan.stocks at gmail.com wrote:
>I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>the "easy" method in the py2app install docs.  I'm trying to package a
>little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>working on, and it _mostly_ works, except it keeps giving me the
>following error when I try to run the resulting app:
>
>ImportError: No module named amp

AMP itself isn't doing anything clever that I can see would confuse 
py2app.  It's just a regular Python module with regular imports; no 
dynamic module loading; in fact, it's much less interesting than the 
core parts of Twisted which load various plugins.

I don't have any experience with py2app, but I can guess at the problem 
- I know that OS X 10.5 ships with an incomplete installation of Twisted 
in some system location.  Perhaps you've installed a complete version of 
Twisted elsewhere, but py2app is confused about the ordering of sys.path 
that you want, and is including the system location first.  I am not 
aware of how this installation is incomplete - maybe it doesn't include 
AMP?

However, this is only a vague understanding, I don't have a MacOS Python 
environment readily available to test with.  Twisted might actually be 
packaged inside one of Apple's application, not on the system path, so 
this could be a red herring.  Good luck investigating though, and please 
let us know your results when you discover what's going on!



From pm-twisted-python at anapol.cz  Tue Mar  4 05:08:58 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Tue, 04 Mar 2008 13:08:58 +0100
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work
	with	py2app...
In-Reply-To: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
Message-ID: <47CD3BDA.3030204@anapol.cz>

Hi,

took a quick look into the OS X 10.5 default twisted installation and 
indeed, there doesn't seem to be the amp.py module included in

/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols

Try http://twistedmatrix.com/trac/wiki/Packages#Leopard

-p

glyph at divmod.com napsal(a):
> 
> On 04:11 am, nathan.stocks at gmail.com wrote:
>> I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>> the "easy" method in the py2app install docs.  I'm trying to package a
>> little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>> working on, and it _mostly_ works, except it keeps giving me the
>> following error when I try to run the resulting app:
>>
>> ImportError: No module named amp
> 
> AMP itself isn't doing anything clever that I can see would confuse 
> py2app.  It's just a regular Python module with regular imports; no 
> dynamic module loading; in fact, it's much less interesting than the 
> core parts of Twisted which load various plugins.
> 
> I don't have any experience with py2app, but I can guess at the problem 
> - I know that OS X 10.5 ships with an incomplete installation of Twisted 
> in some system location.  Perhaps you've installed a complete version of 
> Twisted elsewhere, but py2app is confused about the ordering of sys.path 
> that you want, and is including the system location first.  I am not 
> aware of how this installation is incomplete - maybe it doesn't include 
> AMP?
> 
> However, this is only a vague understanding, I don't have a MacOS Python 
> environment readily available to test with.  Twisted might actually be 
> packaged inside one of Apple's application, not on the system path, so 
> this could be a red herring.  Good luck investigating though, and please 
> let us know your results when you discover what's going on!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Tue Mar  4 06:58:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Mar 2008 08:58:42 -0500
Subject: [Twisted-Python] twisted plugins
In-Reply-To: <47CD084C.90103@evotex.ch>
Message-ID: <20080304135842.6859.1532696181.divmod.quotient.15534@ohm>

On Tue, 04 Mar 2008 09:29:00 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Thank you Jean-Paul, I understand better now. I had been trying to create 
>instances in the main. There's one thing I don't get though with those 2 
>lines, if I put them in the main, before the for loop, I get en error that 
>states that it can't be instantiated, but it works in the class, how come?
>

I don't really understand the question.  Maybe you could give an example?

Jean-Paul



From k_r_a_j_kumar at yahoo.co.in  Tue Mar  4 07:17:17 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 4 Mar 2008 19:47:17 +0530 (IST)
Subject: [Twisted-Python] xml library in twisted
Message-ID: <315768.27988.qm@web8701.mail.in.yahoo.com>

Hi all,
I'm dealing with xml files in a twisted application,
can any one suggest me the best xml library in twisted?
Previously i used  twisted.web.microdom and twisted.web.minidom but they don't have much of the functionalities....
Is there any other xml library in twisted which makes it easy with lot of options?
I wanted to create a xml file like this...

<game>
    <player1>
            <stuff>
            </stuff>
    </player1>
    <player2>
            <stuff>
            </stuff>
    </player2>
</game>

and want to access that player stuff directly..(like a tree structure)

Thank you in advance.




      Now you can chat without downloading messenger. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080304/e7aa2496/attachment.html>

From bharathv6.project at gmail.com  Tue Mar  4 07:41:08 2008
From: bharathv6.project at gmail.com (bharath venkatesh)
Date: Tue, 4 Mar 2008 20:11:08 +0530
Subject: [Twisted-Python] http server performance
Message-ID: <2613171a0803040641u1b48dfcai96c9172fd093c4d7@mail.gmail.com>

hi,
       my project involves lot of  I/O  over the network.. one part of my
project involves a server(http) which is listening on the port for many
client . this sever fetches an image from the web and  and send it to
clients ....  and many clients will request the server concurrently .. to
implement concurrent serving to clients i used threaded http server
like this

class HTTPServer(SocketServer.ThreadingMixIn,BaseHTTPServer.HTTPServer):
     pass

class RequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):
      def do_GET(self):
         print "received connection from: ",self.client_address
         image=image_retreive()   #where image retreive is a function that
retrieves image from the web and works fine
         self.send_response(200)
         self.send_header("Content-type",format)
         self.send_header("Content-Length",len(image_data))
         self.end_headers()
         self.request.sendall(image_data)

httpd = HTTPServer(('',port_number), RequestHandler)
httpd.serve_forever()


this code worked fine but this performance was very bad ... it workes fine
if the clients requested for small n medium size images as the server sends
the response immediately and also workes fine if one client is requesting a
large image (obviously server takes time to send response  as  it takes time
to fetch the image from the web ) and other clients concurrently request for
small and medium images  these  clients will  be served immediately even if
the other client is waiting but problem crops up when 2 clients concurrently
request for an large image .. while these  two clients are waiting for the
response fromthe server . The server doesn't accept any other client request
... i can see this as i am printing the  address of the client that connects
with server   in the 1st line of get method  of the request handler if two
clients concurrently request for an large image and only two clients address
gets printed  that means only 2 clients receives connection to the server
even if  other clients  are requesting  the server at the same time and
other servers are served only after the  those 2 server releases the
connection or get the response . that means server servers only 2 clients at
a time .this is very undesirable as even if 3rd client is requesting for
very small image and 2 clients are waiting for large image .. 3rd client
won't receive the response until those 2 clients are  served . to make thing
worst my server should serve 10 to 15 clients concurrently

to solve this i did some searching and found about cherrypy and twisted also
implemented my server in cherrypy
like this

from cherrypy import wsgiserver
def image_httpserver_app(environ, start_response):
    print >>sys.stdout,"received connection from: (%s : %s ) \nthe image url
is: %s " %
(environ["REMOTE_ADDR"],environ["REMOTE_PORT"],environ["QUERY_STRING"])
    status = '200 OK'
    response_headers = [('Content-type',format)]
     image=image_retreive()
     response_headers = [("Content-Length",`len(image_data)`)]
     start_response(status, response_headers)
     return [image_data]

mappings=[('/', image_httpserver_app)]
wsgi_apps = mappings
server = wsgiserver.CherryPyWSGIServer(('localhost', 8888), wsgi_apps,

server_name='localhost',numthreads=20)

if __name__ == '__main__':
      try:
          server.start()
      except KeyboardInterrupt:
          server.stop()

this didn't solve the problem at all .. same thing is happening only 2
clients is served at a time ..even if no of threads is assigned  to 20 ..
i have did lot of searching and reading .. and hoping to find a solution
..can anyone make it easier for me
i have heard of twisted deffered object .. will it solved the problem ? if
not pls suggest me alternative..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080304/41ecc3be/attachment.html>

From exarkun at divmod.com  Tue Mar  4 08:41:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Mar 2008 10:41:43 -0500
Subject: [Twisted-Python] http server performance
In-Reply-To: <2613171a0803040641u1b48dfcai96c9172fd093c4d7@mail.gmail.com>
Message-ID: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>

On Tue, 4 Mar 2008 20:11:08 +0530, bharath venkatesh <bharathv6.project at gmail.com> wrote:
>hi,
>       my project involves lot of  I/O  over the network.. one part of my
>project involves a server(http) which is listening on the port for many
>client . this sever fetches an image from the web and  and send it to
>clients ....  and many clients will request the server concurrently .. to
>implement concurrent serving to clients i used threaded http server
>like this
>
> [snip]
>
>this didn't solve the problem at all .. same thing is happening only 2
>clients is served at a time ..even if no of threads is assigned  to 20 ..
>i have did lot of searching and reading .. and hoping to find a solution
>..can anyone make it easier for me
>i have heard of twisted deffered object .. will it solved the problem ? if
>not pls suggest me alternative..
>

Deferreds won't directly solve your problem, but using Twisted as your
HTTP server (and client) should.  It is generally the case that Twisted applications continue to perform well under increasing load  - more so
than thread-per-connection based systems.

Jean-Paul



From matt at madebykite.com  Tue Mar  4 09:07:20 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 16:07:20 +0000
Subject: [Twisted-Python] http server performance
In-Reply-To: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
Message-ID: <2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>

I am not aware of the scope of your project, or on your experience  
with C but if you are looking for high performance based on an  
ascynchronous events you might do well to take a look at the lighttpd  
web server. In the past I have had a lot of success, hacking lighttpd  
modules (such as the proxy module) for my own particular needs. The  
code base is small and easy to comprehend when compared to the  
monolith that is apache.

I'm not saying that twisted won't be able to cater for your needs (it  
caters for most of mine). Just pointing you to possible alternatives...

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 15:41, Jean-Paul Calderone wrote:

> On Tue, 4 Mar 2008 20:11:08 +0530, bharath venkatesh  
> <bharathv6.project at gmail.com> wrote:
>> hi,
>>       my project involves lot of  I/O  over the network.. one part  
>> of my
>> project involves a server(http) which is listening on the port for  
>> many
>> client . this sever fetches an image from the web and  and send it to
>> clients ....  and many clients will request the server  
>> concurrently .. to
>> implement concurrent serving to clients i used threaded http server
>> like this
>>
>> [snip]
>>
>> this didn't solve the problem at all .. same thing is happening  
>> only 2
>> clients is served at a time ..even if no of threads is assigned   
>> to 20 ..
>> i have did lot of searching and reading .. and hoping to find a  
>> solution
>> ..can anyone make it easier for me
>> i have heard of twisted deffered object .. will it solved the  
>> problem ? if
>> not pls suggest me alternative..
>>
>
> Deferreds won't directly solve your problem, but using Twisted as your
> HTTP server (and client) should.  It is generally the case that  
> Twisted applications continue to perform well under increasing  
> load  - more so
> than thread-per-connection based systems.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dwelch at umail.ucsb.edu  Tue Mar  4 12:15:27 2008
From: dwelch at umail.ucsb.edu (David Welch)
Date: Tue, 4 Mar 2008 11:15:27 -0800
Subject: [Twisted-Python] writing back through open connections
Message-ID: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>

Hi,

I'm new to twisted and I am having trouble writing back through open  
tcp connections. In my setup I have many clients (lets say 10 for this  
example) connecting to a server running twisted. Each time a new  
client connects I maintain that connection indefinitely and it  
populates a list of available clients the server can talk to. I want a  
user to select from that list and send data to that client using the  
open connection. In this case a client won't cause an event (so I  
can't just write back to it in say the receivedData function because  
the client is just sitting idle waiting for data to be pushed to it).  
The transport.write() works in the protocol that handles events from  
the clients, but like I said the client will be waiting idle until  
some data is sent to it (it just makes the initial connection to the  
serve). Is there any way to see a list of the open connections so I  
can selectively write to it? Or is there another way to do this?  
Thanks for the help.

Dave



From matt at madebykite.com  Tue Mar  4 12:45:54 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 19:45:54 +0000
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>
References: <BC6D2226-3B28-47AE-BEF0-B9720C2B5D31@umail.ucsb.edu>
Message-ID: <89E63C88-55B6-4773-815B-80EB005D35CB@madebykite.com>

Hi David,

This is not the twisted way to do it. You should take a look at:

<http://twistedmatrix.com/projects/core/documentation/howto/ 
servers.html#auto5>

It talks about Factory classes. Essentially, your service is a Server  
Protocol Factory. When a client connects to that service, the Factory  
instance does not deal with responses to the client. Instead, the  
buildProtocol method of the Factory instance is invoked. This  
instantiates a completely new instance of your Server Protocol class.  
It is this instance (commonly, a state machine) that handles the  
logic of reacting to incoming messages from the client and responding  
to them.

You should treat your Protocol class as a completely self contained  
way of communicating solely with the client that it was instantiated  
for.

Hope that helps,

Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 19:15, David Welch wrote:

> Hi,
>
> I'm new to twisted and I am having trouble writing back through  
> open tcp connections. In my setup I have many clients (lets say 10  
> for this example) connecting to a server running twisted. Each time  
> a new client connects I maintain that connection indefinitely and  
> it populates a list of available clients the server can talk to. I  
> want a user to select from that list and send data to that client  
> using the open connection. In this case a client won't cause an  
> event (so I can't just write back to it in say the receivedData  
> function because the client is just sitting idle waiting for data  
> to be pushed to it). The transport.write() works in the protocol  
> that handles events from the clients, but like I said the client  
> will be waiting idle until some data is sent to it (it just makes  
> the initial connection to the serve). Is there any way to see a  
> list of the open connections so I can selectively write to it? Or  
> is there another way to do this? Thanks for the help.
>
> Dave
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at teknico.net  Tue Mar  4 12:47:26 2008
From: nico at teknico.net (Nicola Larosa)
Date: Tue, 04 Mar 2008 20:47:26 +0100
Subject: [Twisted-Python] Re: http server performance
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
Message-ID: <20080304194736.F421C124116@slice.teknico.net>

Matthew Glubb wrote:
> if you are looking for high performance based on an asynchronous events
> you might do well to take a look at the lighttpd web server.

And to nginx, also asynchronous, and without a history of leaking memory.

Notice how I actually said nothing about Lighttpd: you may have imagined
it. ;-)

-- 
Nicola Larosa - http://www.tekNico.net/

The [European] Parliamentary Assembly therefore urges the member states,
and especially their education authorities: [...] to firmly oppose the
teaching of creationism as a scientific discipline on an equal footing
with the theory of evolution and in general resist presentation of
creationist ideas in any discipline other than religion.
 -- European Parliament, resolution 1580 (2007)






From dr.marc.byrd at gmail.com  Tue Mar  4 13:22:54 2008
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Tue, 4 Mar 2008 12:22:54 -0800
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080304194736.F421C124116@slice.teknico.net>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
Message-ID: <a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>

Clearly image_retrieve should also be async.  All the beauty of twisted is
destroy by locking it for such a retrieve.  Almost anything that goes
offboard (incl. filesystem) should be a deferred.  The only exception i've
found is memcached, because it's so dang fast ;^)

I presume your needs are slightly beyond your code sample, which may have
been modified for clarity, but if not, other web servers and proxys
suggested may be a good way to go.

m


On Tue, Mar 4, 2008 at 11:47 AM, Nicola Larosa <nico at teknico.net> wrote:

> Matthew Glubb wrote:
> > if you are looking for high performance based on an asynchronous events
> > you might do well to take a look at the lighttpd web server.
>
> And to nginx, also asynchronous, and without a history of leaking memory.
>
> Notice how I actually said nothing about Lighttpd: you may have imagined
> it. ;-)
>
> --
> Nicola Larosa - http://www.tekNico.net/
>
> The [European] Parliamentary Assembly therefore urges the member states,
> and especially their education authorities: [...] to firmly oppose the
> teaching of creationism as a scientific discipline on an equal footing
> with the theory of evolution and in general resist presentation of
> creationist ideas in any discipline other than religion.
>  -- European Parliament, resolution 1580 (2007)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080304/4fb3a3e4/attachment.html>

From nathan.stocks at gmail.com  Tue Mar  4 13:49:49 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 13:49:49 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
Message-ID: <96c9d6a80803041249x173048e5v5ec616045cda7f65@mail.gmail.com>

On Tue, Mar 4, 2008 at 2:13 AM,  <glyph at divmod.com> wrote:
>
>  On 04:11 am, nathan.stocks at gmail.com wrote:
>  >I'm on a MacBook Pro running OS X 10.5.2 using py2app installed with
>  >the "easy" method in the py2app install docs.  I'm trying to package a
>  >little pyglet+twisted (pyglet.org, twistedmatrix.com) project that I'm
>  >working on, and it _mostly_ works, except it keeps giving me the
>  >following error when I try to run the resulting app:
>  >
>  >ImportError: No module named amp
>
>  AMP itself isn't doing anything clever that I can see would confuse
>  py2app.  It's just a regular Python module with regular imports; no
>  dynamic module loading; in fact, it's much less interesting than the
>  core parts of Twisted which load various plugins.

I agree, which is yet another reason why it's so weird that amp
doesn't work but the more complicated stuff does.

>  I don't have any experience with py2app, but I can guess at the problem
>  - I know that OS X 10.5 ships with an incomplete installation of Twisted
>  in some system location.  Perhaps you've installed a complete version of
>  Twisted elsewhere, but py2app is confused about the ordering of sys.path
>  that you want, and is including the system location first.  I am not
>  aware of how this installation is incomplete - maybe it doesn't include
>  AMP?

I installed Twisted 2.5 from source into
/Library/Python/2.5/site-packages.  I set PYTHONPATH to
/Library/Python/2.5/site-packages as mentioned in the wiki.  Had I not
done that, AMP would have not been accessible period.  As I mentioned
above, I've done "python setup.py py2app --use-pythonpath" which is
supposed to make py2app aware of the PYTHONPATH env variable.  I've
also tried adding
"sys.path.insert(0,'/Library/Python/2.5/site-packages')" to the top of
my script.  I've also tried instructing py2app to include
twisted.protocols.amp with "python setup.py py2app --use-pythonpath
--include twisted.protocols.amp".

In ALL cases (if I remember correctly), there exists a file
twisted/protocols/amp.py INSIDE the .app bundle each time.  Yet the
import still fails when launching the .app.  Weird!

~ Nathan



From matt at madebykite.com  Tue Mar  4 13:52:33 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 4 Mar 2008 20:52:33 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
Message-ID: <61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>

I loooooove memcache, but I still defer it to a thread :/
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244

On 4 Mar 2008, at 20:22, Marc Byrd wrote:

> Clearly image_retrieve should also be async.  All the beauty of  
> twisted is destroy by locking it for such a retrieve.  Almost  
> anything that goes offboard (incl. filesystem) should be a  
> deferred.  The only exception i've found is memcached, because it's  
> so dang fast ;^)
>
> I presume your needs are slightly beyond your code sample, which  
> may have been modified for clarity, but if not, other web servers  
> and proxys suggested may be a good way to go.
>
> m
>
>
> On Tue, Mar 4, 2008 at 11:47 AM, Nicola Larosa <nico at teknico.net>  
> wrote:
> Matthew Glubb wrote:
> > if you are looking for high performance based on an asynchronous  
> events
> > you might do well to take a look at the lighttpd web server.
>
> And to nginx, also asynchronous, and without a history of leaking  
> memory.
>
> Notice how I actually said nothing about Lighttpd: you may have  
> imagined
> it. ;-)
>
> --
> Nicola Larosa - http://www.tekNico.net/
>
> The [European] Parliamentary Assembly therefore urges the member  
> states,
> and especially their education authorities: [...] to firmly oppose the
> teaching of creationism as a scientific discipline on an equal footing
> with the theory of evolution and in general resist presentation of
> creationist ideas in any discipline other than religion.
>  -- European Parliament, resolution 1580 (2007)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nathan.stocks at gmail.com  Tue Mar  4 13:53:02 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 13:53:02 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <47CD3BDA.3030204@anapol.cz>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
Message-ID: <96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:08 AM, Petr Mifek <pm-twisted-python at anapol.cz> wrote:
>  took a quick look into the OS X 10.5 default twisted installation and
>  indeed, there doesn't seem to be the amp.py module included in
>
>  /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols
>
>  Try http://twistedmatrix.com/trac/wiki/Packages#Leopard

Yes, I've taken all that into consideration from the start.  As
mentioned in my last post, I have a fully working version of Twisted
2.5.  I followed that very FAQ back when I first installed it.  I've
explicitly told py2app to use my PYTHONPATH variable, and it actually
copies twisted/protocols/amp.py into the app bundle.  Yet the .app
still fails with that import error about amp.  Weird!

~ Nathan



From radix at twistedmatrix.com  Tue Mar  4 14:26:13 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 4 Mar 2008 16:26:13 -0500
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
Message-ID: <60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>

On Tue, Mar 4, 2008 at 3:53 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  Yes, I've taken all that into consideration from the start.  As
>  mentioned in my last post, I have a fully working version of Twisted
>  2.5.  I followed that very FAQ back when I first installed it.  I've
>  explicitly told py2app to use my PYTHONPATH variable, and it actually
>  copies twisted/protocols/amp.py into the app bundle.  Yet the .app
>  still fails with that import error about amp.  Weird!

Maybe when you actually run the .app it's finding the system-installed
version of Twisted?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andreas at kostyrka.org  Tue Mar  4 14:37:37 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 04 Mar 2008 22:37:37 +0100
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
Message-ID: <1204666657.14387.3.camel@localhost>

And the canonical way to locate that problem would be to add something
like:

import twisted.protocols
print twisted.protocols.__file__

to your app, to see from where the twisted package is coming.

Andreas
Am Dienstag, den 04.03.2008, 16:26 -0500 schrieb Christopher Armstrong:
> On Tue, Mar 4, 2008 at 3:53 PM, Nathan <nathan.stocks at gmail.com> wrote:
> >  Yes, I've taken all that into consideration from the start.  As
> >  mentioned in my last post, I have a fully working version of Twisted
> >  2.5.  I followed that very FAQ back when I first installed it.  I've
> >  explicitly told py2app to use my PYTHONPATH variable, and it actually
> >  copies twisted/protocols/amp.py into the app bundle.  Yet the .app
> >  still fails with that import error about amp.  Weird!
> 
> Maybe when you actually run the .app it's finding the system-installed
> version of Twisted?
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080304/93805545/attachment.sig>

From nathan.stocks at gmail.com  Tue Mar  4 16:50:50 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 4 Mar 2008 16:50:50 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <1204666657.14387.3.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
Message-ID: <96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>

>  > Maybe when you actually run the .app it's finding the system-installed
>  > version of Twisted?
>  >
> And the canonical way to locate that problem would be to add something
>  like:
>
>  import twisted.protocols
>  print twisted.protocols.__file__
>
>  to your app, to see from where the twisted package is coming.
>

Now we're getting somewhere!  Yes, even though py2app seems to be
pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
the app is built, when the app is actually run it's finding the
Leopard-default-installed Twisted 2.4 instead:

/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/twisted/protocols/__init__.pyc

So, the next logical question would be:  How do I get my script inside
my .app to consider the libraries inside the .app first?  You'd think
that py2app would already be taking care of that...

~ Nathan



From phil at bubblehouse.org  Tue Mar  4 17:39:22 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 04 Mar 2008 19:39:22 -0500
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
Message-ID: <991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>

On Mar 4, 2008, at 6:50 PM, Nathan wrote:

>>> Maybe when you actually run the .app it's finding the system- 
>>> installed
>>> version of Twisted?
>>>
>> And the canonical way to locate that problem would be to add  
>> something
>>  like:
>>
>>  import twisted.protocols
>>  print twisted.protocols.__file__
>>
>>  to your app, to see from where the twisted package is coming.
>>
>
> Now we're getting somewhere!  Yes, even though py2app seems to be
> pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
> the app is built, when the app is actually run it's finding the
> Leopard-default-installed Twisted 2.4 instead:
>
> /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/ 
> python/twisted/protocols/__init__.pyc
>
> So, the next logical question would be:  How do I get my script inside
> my .app to consider the libraries inside the .app first?  You'd think
> that py2app would already be taking care of that...

This is a little inelegant (maybe even a lot inelegant), but when  
i've had issues with the system path that I couldn't fix (because I  
didn't have root, or was just in a hurry), I've just manipulated  
sys.path at the start of my code before I've imported any modules.

-phil



From dwelch at umail.ucsb.edu  Tue Mar  4 21:42:10 2008
From: dwelch at umail.ucsb.edu (David Welch)
Date: Tue, 4 Mar 2008 20:42:10 -0800
Subject: [Twisted-Python] writing back through open connections
Message-ID: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>

Matt,

I read that howto/servers documentation and I have set up my code into  
a Factory and Protocol that handles incoming connections. I don't  
think I explained myself well enough though. When a client connects,  
the server may or may not being send data back right away so I need to  
be able to send data to that connected client on the servers terms.  
For example:

Client 1 connects -- Factory instantiates Protocol class to handle  
communication (connection doesn't close)
Client 2 connects -- Factory instantiates Protocol class to handle  
communication (connection doesn't close)
<time has passed until server decides it needs to send a plugin to one  
of the clients>
Server sends plugin to Client 1

So how can that server send data to client 1 if client 1 hasn't caused  
an event (The server side causes a certain event it should send data  
to a selected client). I understand that if a client sends data to the  
server I can than write back to the client using the dataReceived  
function within the Protocol instantiation. In this case once N number  
of agents have connected I want the server to push data to the clients  
without the Client writing to the server. Thanks again for the help.





From glyph at divmod.com  Tue Mar  4 21:53:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 04:53:37 -0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
Message-ID: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>

On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>I loooooove memcache, but I still defer it to a thread :/

Why?

http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/memcache.py



From drew.smathers at gmail.com  Tue Mar  4 22:29:39 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 5 Mar 2008 00:29:39 -0500
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
Message-ID: <368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>

On Tue, Mar 4, 2008 at 11:42 PM, David Welch <dwelch at umail.ucsb.edu> wrote:
> Matt,
>
>  I read that howto/servers documentation and I have set up my code into
>  a Factory and Protocol that handles incoming connections.

Honestly, I don't think we're dealing with a design pattern issue now.

> I don't
>  think I explained myself well enough though. When a client connects,
>  the server may or may not being send data back right away so I need to
>  be able to send data to that connected client on the servers terms.
>  For example:
>
>  Client 1 connects -- Factory instantiates Protocol class to handle
>  communication (connection doesn't close)
>  Client 2 connects -- Factory instantiates Protocol class to handle
>  communication (connection doesn't close)
>  <time has passed until server decides it needs to send a plugin to one
>  of the clients>
>  Server sends plugin to Client 1
>
>  So how can that server send data to client 1 if client 1 hasn't caused
>  an event (The server side causes a certain event it should send data
>  to a selected client).

Define `event'.  Is the initial connection not an event?  If you have
an open connection, the client doesn't have fart back through it every
5 seconds (by the semantics of most protocols) to keep it open or
anything.

>  I understand that if a client sends data to the
>  server I can than write back to the client using the dataReceived
>  function within the Protocol instantiation.

Are you sure you understand?  You're calling dataReceive to send data?
 If you're calling a method (that's what you meant by "function within
the Protocol instantiation", I guess) with "receive" in the name, then
you can only be very confused.

> In this case once N number
>  of agents have connected I want the server to push data to the clients
>  without the Client writing to the server. Thanks again for the help.
>

So write back data to the client.  That's all I can say until you
describe what you've tried (w/ code) and why it failed (w/ a
stacktrace) - vs. in pretty vague terms on essay on what you want to
do and haven't even attempted.


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From chris at sidwells.com  Wed Mar  5 01:23:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Wed, 5 Mar 2008 08:23:24 +0000
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
	<368574aa0803042129r5e19970fv6579a4655334e3@mail.gmail.com>
Message-ID: <e6a690760803050023n392d648cm63f73c5999255046@mail.gmail.com>

Forgive any newbie errors, as I'm new to Twisted.

The pattern discussed *seems* to be the same as the 'comet' pattern in web
development: a client contacts the server, but rather than responding
quickly, the server 'files away' the connection in case there is something
to send later.  (Filing away, in my case is done by adding a reference to
the stream as a member of a 'Connection' class withing my server.
'Connections' can either be 'open' [able to send immediately] or 'buffering'
[waiting for the client to reconnect].)

I have implemented this pattern using twisted.web2 as follows:

A render method creates a stream, but 'files it away', rather than calling
stream.finish().  The render method *does* complete and return, but the
connection is thereby held open and no data is immediately sent.

Sometime later, or perhaps never, something happens on the server which
causes it to send data on the previously 'filed away' stream and calls
stream.finish().  (In my case, because this is comet, the client immediately
makes another connection to the server, which is again 'filed away'.)

I hope this doesn't muddy the issue.

Regards,

Chris,

P.S. I have heard of Nevow Athena, but I wanted something very simple.

On 05/03/2008, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Tue, Mar 4, 2008 at 11:42 PM, David Welch <dwelch at umail.ucsb.edu>
> wrote:
> > Matt,
> >
> >  I read that howto/servers documentation and I have set up my code into
> >  a Factory and Protocol that handles incoming connections.
>
>
> Honestly, I don't think we're dealing with a design pattern issue now.
>
>
> > I don't
> >  think I explained myself well enough though. When a client connects,
> >  the server may or may not being send data back right away so I need to
> >  be able to send data to that connected client on the servers terms.
> >  For example:
> >
> >  Client 1 connects -- Factory instantiates Protocol class to handle
> >  communication (connection doesn't close)
> >  Client 2 connects -- Factory instantiates Protocol class to handle
> >  communication (connection doesn't close)
> >  <time has passed until server decides it needs to send a plugin to one
> >  of the clients>
> >  Server sends plugin to Client 1
> >
> >  So how can that server send data to client 1 if client 1 hasn't caused
> >  an event (The server side causes a certain event it should send data
> >  to a selected client).
>
>
> Define `event'.  Is the initial connection not an event?  If you have
> an open connection, the client doesn't have fart back through it every
> 5 seconds (by the semantics of most protocols) to keep it open or
> anything.
>
>
> >  I understand that if a client sends data to the
> >  server I can than write back to the client using the dataReceived
> >  function within the Protocol instantiation.
>
>
> Are you sure you understand?  You're calling dataReceive to send data?
>   If you're calling a method (that's what you meant by "function within
> the Protocol instantiation", I guess) with "receive" in the name, then
> you can only be very confused.
>
>
> > In this case once N number
> >  of agents have connected I want the server to push data to the clients
> >  without the Client writing to the server. Thanks again for the help.
> >
>
>
> So write back data to the client.  That's all I can say until you
> describe what you've tried (w/ code) and why it failed (w/ a
> stacktrace) - vs. in pretty vague terms on essay on what you want to
> do and haven't even attempted.
>
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080305/7a8de9a8/attachment.html>

From matt at madebykite.com  Wed Mar  5 01:35:54 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 5 Mar 2008 08:35:54 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
	<20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
Message-ID: <6FB796ED-D372-4665-A641-6EC7580F6F32@madebykite.com>

On 5 Mar 2008, at 04:53, glyph at divmod.com wrote:

> On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>> I loooooove memcache, but I still defer it to a thread :/
>
> Why?
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/ 
> memcache.py

Aha! There's still so much to learn, isn't there?

The answer is because I've been using a non twisted memcache  
implementation.

No I know, thanks :)




From matt at madebykite.com  Wed Mar  5 01:47:51 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Wed, 5 Mar 2008 08:47:51 +0000
Subject: [Twisted-Python] Re: http server performance
In-Reply-To: <20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
References: <20080304154143.6859.1118022668.divmod.quotient.15549@ohm>
	<2EF71342-E638-4189-BDF2-AD8CEEAD2747@madebykite.com>
	<20080304194736.F421C124116@slice.teknico.net>
	<a33934630803041222v43079b6bx84ca37d224c1970c@mail.gmail.com>
	<61DC69AD-0E5E-479F-BA3A-CE2B8B7D000A@madebykite.com>
	<20080305045337.21558.1281076247.divmod.xquotient.7347@joule.divmod.com>
Message-ID: <FBC3A3F0-120A-47B1-822B-549A6652114E@madebykite.com>

On 5 Mar 2008, at 04:53, glyph at divmod.com wrote:

> On 4 Mar, 08:52 pm, matt at madebykite.com wrote:
>> I loooooove memcache, but I still defer it to a thread :/
>
> Why?
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/ 
> memcache.py

Or more importantly, because this didn't exist in trunk until 4  
months ago!




From nathan.stocks at gmail.com  Wed Mar  5 09:41:17 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 09:41:17 -0700
Subject: [Twisted-Python] Trying to get twisted.protocols.amp to work with
	py2app...
In-Reply-To: <991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
Message-ID: <96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:39 PM, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Mar 4, 2008, at 6:50 PM, Nathan wrote:
>
>  >>> Maybe when you actually run the .app it's finding the system-
>  >>> installed
>  >>> version of Twisted?
>  >>>
>  >> And the canonical way to locate that problem would be to add
>  >> something
>  >>  like:
>  >>
>  >>  import twisted.protocols
>  >>  print twisted.protocols.__file__
>  >>
>  >>  to your app, to see from where the twisted package is coming.
>  >>
>  >
>  > Now we're getting somewhere!  Yes, even though py2app seems to be
>  > pulling in my Twisted 2.5 from /Library/Python/2.5/site-packages when
>  > the app is built, when the app is actually run it's finding the
>  > Leopard-default-installed Twisted 2.4 instead:
>  >
>  > /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/
>  > python/twisted/protocols/__init__.pyc
>  >
>  > So, the next logical question would be:  How do I get my script inside
>  > my .app to consider the libraries inside the .app first?  You'd think
>  > that py2app would already be taking care of that...
>
>  This is a little inelegant (maybe even a lot inelegant), but when
>  i've had issues with the system path that I couldn't fix (because I
>  didn't have root, or was just in a hurry), I've just manipulated
>  sys.path at the start of my code before I've imported any modules.

I'm fine with doing that, but how do you find the path you need to
insert into sys.path?  The amp.py that it includes is inside
MyApp.app/Contents/Resources/lib/python2.5/site-packages.zip -- a ZIP
file!  Does sys.path support zip files??
sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
??

~ Nathan



From steve at holdenweb.com  Wed Mar  5 09:59:48 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 11:59:48 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
Message-ID: <fqmjim$vee$1@ger.gmane.org>

Nathan wrote:
[...]
 > Does sys.path support zip files??
> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> ??
Yes. Just add the zip file to sys.path and you can import modules 
contained in the files inside the zip.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andreas at kostyrka.org  Wed Mar  5 10:41:32 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Wed, 05 Mar 2008 18:41:32 +0100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <fqmjim$vee$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
Message-ID: <1204738892.13045.0.camel@localhost>


Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
> Nathan wrote:
> [...]
>  > Does sys.path support zip files??
> > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> > ??
> Yes. Just add the zip file to sys.path and you can import modules 
> contained in the files inside the zip.

Although gentlemen call such files eggs :-P

Andreas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080305/0d56773c/attachment.sig>

From steve at holdenweb.com  Wed Mar  5 12:31:21 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 14:31:21 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <1204738892.13045.0.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost>
Message-ID: <fqmsea$6c1$1@ger.gmane.org>

Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>> Nathan wrote:
>> [...]
>>  > Does sys.path support zip files??
>>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>>> ??
>> Yes. Just add the zip file to sys.path and you can import modules 
>> contained in the files inside the zip.
> 
> Although gentlemen call such files eggs :-P
> 
How would I be supposed to know what gentlemen do? ;-)

regards
  Sreve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From steve at holdenweb.com  Wed Mar  5 12:35:32 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 14:35:32 -0500
Subject: [Twisted-Python] Teach Me Twisted
Message-ID: <fqmsm6$7j8$1@ger.gmane.org>

OK, with no reference to anyone else I have scheduled an Open Space 
session for 8pm to 10pm on the Saturday evening:

   http://wiki.python.org/moin/Open_Space

I have written a few notes about my intentions in a separate Wiki page 
linked from the Open Space page:

   http://wiki.python.org/moin/PyCon2008/TeachMeTwisted

Since we want to make sure we get a room of the right size I ask on that 
page for those intending to be there to sign up in advance. Please do 
so. Please also feel free to add whatever notes you think will help to 
that page.

hoping-i-won't-be-by-myself-ly y'rs  - steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From radix at twistedmatrix.com  Wed Mar  5 12:54:59 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 14:54:59 -0500
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <fqmsm6$7j8$1@ger.gmane.org>
References: <fqmsm6$7j8$1@ger.gmane.org>
Message-ID: <60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:35 PM, Steve Holden <steve at holdenweb.com> wrote:
> OK, with no reference to anyone else I have scheduled an Open Space
>  session for 8pm to 10pm on the Saturday evening:

>  hoping-i-won't-be-by-myself-ly y'rs  - steve

I think I'll probably show up. :-)


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From drew.smathers at gmail.com  Wed Mar  5 12:57:11 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 5 Mar 2008 14:57:11 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
Message-ID: <368574aa0803051157n524fb744x3819620119228d17@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:31 PM, Steve Holden <steve at holdenweb.com> wrote:
>
> Andreas Kostyrka wrote:
>  > Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>  >> Nathan wrote:
>  >> [...]
>  >>  > Does sys.path support zip files??
>  >>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>  >>> ??
>  >> Yes. Just add the zip file to sys.path and you can import modules
>  >> contained in the files inside the zip.
>  >
>  > Although gentlemen call such files eggs :-P
>  >
>  How would I be supposed to know what gentlemen do? ;-)
>

Well ... for one, distinguished gentlemen don't use eggs ;-)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From clemesha at gmail.com  Wed Mar  5 13:05:23 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 5 Mar 2008 12:05:23 -0800
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <fqmsm6$7j8$1@ger.gmane.org>
References: <fqmsm6$7j8$1@ger.gmane.org>
Message-ID: <d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>

On Wed, Mar 5, 2008 at 11:35 AM, Steve Holden <steve at holdenweb.com> wrote:

> OK, with no reference to anyone else I have scheduled an Open Space
> session for 8pm to 10pm on the Saturday evening:
>
>   http://wiki.python.org/moin/Open_Space
>
> I have written a few notes about my intentions in a separate Wiki page
> linked from the Open Space page:
>
>   http://wiki.python.org/moin/PyCon2008/TeachMeTwisted
>
> Since we want to make sure we get a room of the right size I ask on that
> page for those intending to be there to sign up in advance. Please do
> so. Please also feel free to add whatever notes you think will help to
> that page.


Not sure is this has been discussed already,
but it would be really great if someone could make
audio recordings (or video) of all the Twisted goings-on
at PyCon for those of us who can't go.

For example, I found the recent interview with the
Chesspark guys to be very interesting and informative:

http://twistedmatrix.com/trac/wiki/InterviewChesspark200802
 ... thanks for putting that on.

So anyways, please record everything you can at PyCon, thanks!

-Alex


>
>
> hoping-i-won't-be-by-myself-ly y'rs  - steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080305/9f854a6f/attachment.html>

From ldanielburr at mac.com  Wed Mar  5 13:10:23 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 05 Mar 2008 14:10:23 -0600
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<60ed19d40803051154p28ab74dfmfc5d29820945b3ec@mail.gmail.com>
Message-ID: <op.t7j7nldr3oj628@dchen-laptop.texturallc.net>

On Wed, 05 Mar 2008 13:54:59 -0600, Christopher Armstrong  
<radix at twistedmatrix.com> wrote:

> On Wed, Mar 5, 2008 at 2:35 PM, Steve Holden <steve at holdenweb.com> wrote:
>> OK, with no reference to anyone else I have scheduled an Open Space
>>  session for 8pm to 10pm on the Saturday evening:
>
>>  hoping-i-won't-be-by-myself-ly y'rs  - steve
>
> I think I'll probably show up. :-)
>

I've added myself to the list on the Wiki.  Be warned: I am likely to  
spread more idiocy than enlightenment ;)


L. Daniel Burr



From nathan.stocks at gmail.com  Wed Mar  5 10:32:11 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 10:32:11 -0700
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmjim$vee$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
Message-ID: <96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>

On Wed, Mar 5, 2008 at 9:59 AM, Steve Holden <steve at holdenweb.com> wrote:
> Nathan wrote:
>  [...]
>
>  > Does sys.path support zip files??
>  > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
>  > ??
>  Yes. Just add the zip file to sys.path and you can import modules
>  contained in the files inside the zip.

Perfect!

1) sys.path allows zip files (so that's how that works!)
2) sys.path allows relative paths
3) sys.path has the site-packages.zip entry near the end of sys.path

Adding the following line to the top of my script WORKED!

sys.path.insert(0,'../Resources/lib/python2.5/site-packages.zip')

Thanks for all the help, everyone!

~ Nathan



From phil at bubblehouse.org  Wed Mar  5 13:01:57 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 5 Mar 2008 15:01:57 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost> <fqmsea$6c1$1@ger.gmane.org>
Message-ID: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>

On Mar 5, 2008, at 2:31 PM, Steve Holden wrote:
> Andreas Kostyrka wrote:
>> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>>> Nathan wrote:
>>> [...]
>>> > Does sys.path support zip files??
>>>> sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/ 
>>>> twisted')
>>>> ??
>>> Yes. Just add the zip file to sys.path and you can import modules  
>>> contained in the files inside the zip.
>> Although gentlemen call such files eggs :-P
> How would I be supposed to know what gentlemen do? ;-)

It's easy. "Gentlemen", when used in this context, means "someone who  
designs a packaging system without broad community input, and creates  
a buggy implementation that is somehow accepted into the language  
distribution, thus forcing developers all around the world to stick to  
their ill-defined standard."

I remember it by using the mnemonic device  
SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...

-phil



From radix at twistedmatrix.com  Wed Mar  5 13:37:33 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 15:37:33 -0500
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
Message-ID: <60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>

On Wed, Mar 5, 2008 at 3:05 PM, alex clemesha <clemesha at gmail.com> wrote:
> Not sure is this has been discussed already,
> but it would be really great if someone could make
> audio recordings (or video) of all the Twisted goings-on
> at PyCon for those of us who can't go.
>
> For example, I found the recent interview with the
> Chesspark guys to be very interesting and informative:
>
> http://twistedmatrix.com/trac/wiki/InterviewChesspark200802
>   ... thanks for putting that on.
>
> So anyways, please record everything you can at PyCon, thanks!

It would be cool to get an episode or two recorded at PyCon. Does
anyone who is going have a portable audio recording setup that they
can bring?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Wed Mar  5 13:39:20 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 5 Mar 2008 15:39:20 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
Message-ID: <60ed19d40803051239y4b814a1cuaf557f82741a94f7@mail.gmail.com>

On Wed, Mar 5, 2008 at 3:01 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Mar 5, 2008, at 2:31 PM, Steve Holden wrote:
>  > Andreas Kostyrka wrote:
>  >> Although gentlemen call such files eggs :-P
>  > How would I be supposed to know what gentlemen do? ;-)
>
>  It's easy. "Gentlemen", when used in this context, means "someone who
>  designs a packaging system without broad community input, and creates
>  a buggy implementation that is somehow accepted into the language
>  distribution, thus forcing developers all around the world to stick to
>  their ill-defined standard."
>
>  I remember it by using the mnemonic device
>  SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...

Please, let's not start a huge flamewar about eggs.




-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Mar  5 14:00:51 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 21:00:51 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <fqmsea$6c1$1@ger.gmane.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
Message-ID: <20080305210051.21558.1398841746.divmod.xquotient.7397@joule.divmod.com>




On 07:31 pm, steve at holdenweb.com wrote:
>Andreas Kostyrka wrote:
>>Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
>>>Nathan wrote:
>>>[...]
>>>  > Does sys.path support zip files??
>>>>sys.path.insert(0,'../Resources/lib/python/2.5/site- 
>>>>packages.zip/twisted')
>>>>??
>>>Yes. Just add the zip file to sys.path and you can import modules 
>>>contained in the files inside the zip.
>>
>>Although gentlemen call such files eggs :-P
>How would I be supposed to know what gentlemen do? ;-)

Eggs are something different; eggs can, in fact, be directories, as well 
as zip files.  Zip files that you can import Python out of are just that 
- zip files :).



From glyph at divmod.com  Wed Mar  5 14:12:25 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 05 Mar 2008 21:12:25 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
Message-ID: <20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>


On 05:32 pm, nathan.stocks at gmail.com wrote:
>Adding the following line to the top of my script WORKED!
>
>sys.path.insert(0,'../Resources/lib/python2.5/site-packages.zip')

I'd recommend reporting a bug against py2app for it to do this (or its 
equivalent) automatically; I'm glad you got this to work, but it would 
be a shame for every subsequent user of AMP (or other similarly 
mispackaged dependencies) on OS X to discover this bug and have to work 
around it in the same way.

(By the way, what's the .app that you are p2app'ing actually do?)



From sam at SpinwardStars.com  Wed Mar  5 14:52:13 2008
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Wed, 05 Mar 2008 14:52:13 -0700
Subject: [Twisted-Python] Teach Me Twisted
In-Reply-To: <60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.co
 m>
References: <fqmsm6$7j8$1@ger.gmane.org>
	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>
	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>
Message-ID: <E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>

At 01:37 PM 3/5/2008, you wrote:
>It would be cool to get an episode or two recorded at PyCon. Does
>anyone who is going have a portable audio recording setup that they
>can bring?

If not, I recommend the Zoom H2.

- Sam

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/                cell 303-501-4414 





From steve at holdenweb.com  Wed Mar  5 15:22:52 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 05 Mar 2008 17:22:52 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted
In-Reply-To: <E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>
References: <fqmsm6$7j8$1@ger.gmane.org>	<d272f0690803051205g1410d7d0kad360a25e3d4e80f@mail.gmail.com>	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.com>
	<60ed19d40803051237g5ef126f5o99d271f8b4dacf8d@mail.gmail.co m>
	<E1JX1cS-0007VS-Ve@xsmtp11.mail2web.com>
Message-ID: <fqn6fu$dct$1@ger.gmane.org>

Samuel Reynolds wrote:
> At 01:37 PM 3/5/2008, you wrote:
>> It would be cool to get an episode or two recorded at PyCon. Does
>> anyone who is going have a portable audio recording setup that they
>> can bring?
> 
> If not, I recommend the Zoom H2.
> 
If we get one of the ballrooms I understand that recordings are going to 
be made of the main sessions, but I don't know what it would take to 
extend it to a BoF (this session is really a BoF, isn't it? Maybe we 
should list it as such).

regards
  Steve

-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nathan.stocks at gmail.com  Wed Mar  5 22:22:51 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 5 Mar 2008 22:22:51 -0700
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
	<20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
Message-ID: <96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>

On Wed, Mar 5, 2008 at 2:12 PM,  <glyph at divmod.com> wrote:
>  (By the way, what's the .app that you are p2app'ing actually do?)

It's the client portion of a 2D game I'm making with my brother for
fun.  My coworkers help me test it out, but they don't have the whole
environment (twisted, pyglet, etc.) setup, so I need to package it for
them.  I attached a screenshot if you're curious.  Any resemblance to
a popular 3D game is purely coincidental.

~ Nathan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Picture 1.png
Type: image/png
Size: 39777 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080305/22452ffa/attachment-0002.png>

From glyph at divmod.com  Wed Mar  5 23:38:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 06 Mar 2008 06:38:23 -0000
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>
	<96c9d6a80803050932t3472313eg7778c8c0d77595d9@mail.gmail.com>
	<20080305211225.21558.297589539.divmod.xquotient.7412@joule.divmod.com>
	<96c9d6a80803052122s1660fd1brf2e2aae0d0e33422@mail.gmail.com>
Message-ID: <20080306063823.21558.1297336184.divmod.xquotient.7515@joule.divmod.com>




On 05:22 am, nathan.stocks at gmail.com wrote:
>On Wed, Mar 5, 2008 at 2:12 PM,  <glyph at divmod.com> wrote:
>>  (By the way, what's the .app that you are p2app'ing actually do?)
>
>It's the client portion of a 2D game I'm making with my brother for
>fun.  My coworkers help me test it out, but they don't have the whole
>environment (twisted, pyglet, etc.) setup, so I need to package it for
>them.  I attached a screenshot if you're curious.  Any resemblance to
>a popular 3D game is purely coincidental.

Awesome!!  I love it when indie games use Twisted ;).



From big_tyo at inf.its-sby.edu  Wed Mar  5 23:54:11 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Thu, 6 Mar 2008 13:54:11 +0700 (ICT)
Subject: [Twisted-Python] thread created from tcp connection
Message-ID: <1197.10.126.11.159.1204786451.squirrel@202.46.129.82>

> Date: Thu, 28 Feb 2008 06:11:58 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] thread created from tcp connection

> On 05:59 am, big_tyo at inf.its-sby.edu wrote:
>>The Problem is i still haven't figure out how to send some parameters
>>to a
>>thread that created from established tcp connection.
>
> The real problem is probably that Twisted is not thread safe; you
> probably should not be using threads at all.
>>ps : sorry for the bad english
>
> No problem!  I'm sure my indonesian is much worse :).  Thanks for using
> Twisted.
>
> Since your english is not very good, it would be best if you could
> include Python code with your next message, so we can know exactly what
> you are talking about.
>
>
>

okay here is my source code for server and client for addition, someone
here told me that i shouldn't use twisted to manage tcp connection , well
i still want to swim deeper in twisted tough.

and i add some command for my problem there

thanks for your big help ^^



-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: TCPServer2.py
URL: </pipermail/twisted-python/attachments/20080306/6497306a/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: TCPClient2.py
URL: </pipermail/twisted-python/attachments/20080306/6497306a/attachment-0001.ksh>

From andreas at kostyrka.org  Thu Mar  6 07:49:52 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 06 Mar 2008 15:49:52 +0100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org> <1204738892.13045.0.camel@localhost>
	<fqmsea$6c1$1@ger.gmane.org>
	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
Message-ID: <1204814992.13045.61.camel@localhost>


Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:

Well, how buggy it is, is open to discussion. Clearly distutils becames
quite nicer when upgraded to setuptools. But having no packaging format
is not a solution either. I have no idea how long you've been doing
Python but I do remember the times when most C language modules came
without any build support (figure out the compiler call yourself, and
enjoy), or Makefile fragements at best.

So despite all potentially problematic aspects of
distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to the
Vault of Parnassus and tell me that it is not an improvement)

Andreas

> It's easy. "Gentlemen", when used in this context, means "someone who  
> designs a packaging system without broad community input, and creates  
> a buggy implementation that is somehow accepted into the language  
> distribution, thus forcing developers all around the world to stick to  
> their ill-defined standard."
> 
> I remember it by using the mnemonic device  
> SWDAPSWBCIACABITISAITLDTFDAAWTSTTIDS...
> 
> -phil
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080306/bc48c229/attachment.sig>

From steve at holdenweb.com  Thu Mar  6 08:01:14 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 06 Mar 2008 10:01:14 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to work
	with py2app...
In-Reply-To: <1204814992.13045.61.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>	<47CD3BDA.3030204@anapol.cz>	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>	<1204666657.14387.3.camel@localhost>	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>	<fqmjim$vee$1@ger.gmane.org>
	<1204738892.13045.0.camel@localhost>	<fqmsea$6c1$1@ger.gmane.org>	<4BED50B2-0DF3-4BDC-80F9-C37DF3790994@bubblehouse.org>
	<1204814992.13045.61.camel@localhost>
Message-ID: <fqp0vv$v3c$1@ger.gmane.org>

Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:
> 
> Well, how buggy it is, is open to discussion. Clearly distutils becames
> quite nicer when upgraded to setuptools. But having no packaging format
> is not a solution either. I have no idea how long you've been doing
> Python but I do remember the times when most C language modules came
> without any build support (figure out the compiler call yourself, and
> enjoy), or Makefile fragements at best.
> 
> So despite all potentially problematic aspects of
> distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to the
> Vault of Parnassus and tell me that it is not an improvement)
> 
It's not an improvement.

See how easy lying is? ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From stephen.c.waterbury at nasa.gov  Thu Mar  6 08:25:59 2008
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 06 Mar 2008 10:25:59 -0500
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
Message-ID: <1204817159.25727.2.camel@beeblebrox.gsfc.nasa.gov>

Steve Holden wrote:
> Andreas Kostyrka wrote:
>> Am Mittwoch, den 05.03.2008, 15:01 -0500 schrieb Phil Christensen:
>>
>> Well, how buggy it is, is open to discussion. Clearly distutils
becames
>> quite nicer when upgraded to setuptools. But having no packaging
format
>> is not a solution either. I have no idea how long you've been doing
>> Python but I do remember the times when most C language modules came
>> without any build support (figure out the compiler call yourself, and
>> enjoy), or Makefile fragements at best.
>>
>> So despite all potentially problematic aspects of
>> distutils/setuptools/pypi, it's a vast improvement. (Compare pypi to
the
>> Vault of Parnassus and tell me that it is not an improvement)
>>
> It's not an improvement.
> 
> See how easy lying is? ;-)

PLEASE, folks, let this (sub)thread die -- it's about as OT as it gets!

Steve W.




From ddwiggins at advpubtech.com  Thu Mar  6 10:35:38 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 06 Mar 2008 09:35:38 -0800
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
Message-ID: <fqpa1b$5dp$1@ger.gmane.org>

glyph at divmod.com wrote:
> The other reason is that adbapi is old.  If we were going to implement 
> something like ADBAPI today, we'd probably write a process pool first, 
> but adbapi was written as a quick hack to get some database integration 
> a long time ago.
> 
> The only caveat is that additional Python interpreters take up more RAM 
> than additional threads.  If the database processes are doing any heavy 
> CPU lifting though, this cost could well be worth it.

I'm just getting started with an XMLRPC server that uses adbapi.  This 
satisfies my curiosity as to why it was threaded.  Now assuming that, 
for my application, the "heavy lifting" is done by the DB engine itself, 
is there any good reason to dig into implementing a process pool?  (I'm 
thinking of the future here, as the server begins to grow more 
functionality.  Right now, my main concern is not to block multiple 
simultaneous requests from clients.)

-- 
Don Dwiggins
Advanced Publishing Technology




From nathan.stocks at gmail.com  Thu Mar  6 15:12:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 6 Mar 2008 15:12:35 -0700
Subject: [Twisted-Python] AMP + SSH?
Message-ID: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>

Is there a "twisted" way to run AMP over an SSH connection (with conch?)

The manual way of doing what I want is to connect two machines with a
TCP port tunneled over ssh, and have my AMP client/server talk over
the manually tunneled port.

~ Nathan



From exarkun at divmod.com  Thu Mar  6 15:19:50 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 6 Mar 2008 17:19:50 -0500
Subject: [Twisted-Python] AMP + SSH?
In-Reply-To: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>
Message-ID: <20080306221950.6859.117217107.divmod.quotient.16387@ohm>

On Thu, 6 Mar 2008 15:12:35 -0700, Nathan <nathan.stocks at gmail.com> wrote:
>Is there a "twisted" way to run AMP over an SSH connection (with conch?)
>
>The manual way of doing what I want is to connect two machines with a
>TCP port tunneled over ssh, and have my AMP client/server talk over
>the manually tunneled port.

You can run any IProtocol over conch.  It's just not very easy or well
documented.  Take a look at doc/conch/examples/sshsimpleclient.py for
the first part of what's necessary (setting up a client connection and
opening some channels).  sshsimpleserver.py in the same directory will
show you how to run a custom protocol on the server in a /shell/.  You
may not want to use a shell, though.

There are plans to make a much simpler API for setting up SSH connections
intended for programmatic (as opposed to interactive shell) use, but it
will likely be some time before they come to fruition.

Jean-Paul



From nathan.stocks at gmail.com  Thu Mar  6 16:05:38 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 6 Mar 2008 16:05:38 -0700
Subject: [Twisted-Python] AMP + SSH?
In-Reply-To: <20080306221950.6859.117217107.divmod.quotient.16387@ohm>
References: <96c9d6a80803061412h873bfe9y953f3fe83d9ef106@mail.gmail.com>
	<20080306221950.6859.117217107.divmod.quotient.16387@ohm>
Message-ID: <96c9d6a80803061505h24f6d950k9f96c38475a3261e@mail.gmail.com>

On Thu, Mar 6, 2008 at 3:19 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>  You can run any IProtocol over conch.  It's just not very easy or well
>  documented.  Take a look at doc/conch/examples/sshsimpleclient.py for
>  the first part of what's necessary (setting up a client connection and
>  opening some channels).  sshsimpleserver.py in the same directory will
>  show you how to run a custom protocol on the server in a /shell/.  You
>  may not want to use a shell, though.
>
>  There are plans to make a much simpler API for setting up SSH connections
>  intended for programmatic (as opposed to interactive shell) use, but it
>  will likely be some time before they come to fruition.

Ok, thanks for the info.  It looks like the "manual" method will be a
lot easier for me at the moment, then.

~ Nathan



From duncan.mcgreggor at gmail.com  Thu Mar  6 21:21:07 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 6 Mar 2008 21:21:07 -0700
Subject: [Twisted-Python] Twisted at PyCon 2008
Message-ID: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>

Hey everyone,

A conference group has been set up at crowdvine:
  http://pycon2008.crowdvine.com/

I just signed up and started some twisted tagging -- I encourage
everyone to do the same and give the project a nice presence on the
conference social site :-)

d



From steve at holdenweb.com  Thu Mar  6 22:01:00 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 07 Mar 2008 00:01:00 -0500
Subject: [Twisted-Python] Re: Twisted at PyCon 2008
In-Reply-To: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>
References: <4327dfbd0803062021l7264368by1b939b0fab9163dc@mail.gmail.com>
Message-ID: <47D0CC0C.5060303@holdenweb.com>

Duncan McGreggor wrote:
> Hey everyone,
> 
> A conference group has been set up at crowdvine:
>   http://pycon2008.crowdvine.com/
> 
> I just signed up and started some twisted tagging -- I encourage
> everyone to do the same and give the project a nice presence on the
> conference social site :-)
> 
I put a comment about this on

    https://pycon.coderanger.net/wiki/PyCon08/SocialNetworks

which you may wish to peruse for synergistic opportunities. I have an 
idea PyCon is going to be incoherently scattered over several channels 
this year :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From daedalus at eigenmagic.com  Thu Mar  6 22:01:35 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 07 Mar 2008 16:01:35 +1100
Subject: [Twisted-Python] Re: Trying to get twisted.protocols.amp to
	work with py2app...
In-Reply-To: <1204738892.13045.0.camel@localhost>
References: <96c9d6a80803032011g28470fe1ie79b7ce1a8b84b7b@mail.gmail.com>
	<20080304091317.21558.493757510.divmod.xquotient.7325@joule.divmod.com>
	<47CD3BDA.3030204@anapol.cz>
	<96c9d6a80803041253v719a3e56ya24cb1ef64ae0f68@mail.gmail.com>
	<60ed19d40803041326x3bc6800ey72c8ac3db642c66f@mail.gmail.com>
	<1204666657.14387.3.camel@localhost>
	<96c9d6a80803041550h4065ea7cs601def691487250b@mail.gmail.com>
	<991B7FDD-3714-4988-AE31-14CCFBC39EF8@bubblehouse.org>
	<96c9d6a80803050841y1abd8773r184c48ca9ae468a9@mail.gmail.com>
	<fqmjim$vee$1@ger.gmane.org>  <1204738892.13045.0.camel@localhost>
Message-ID: <1204866095.6711.9.camel@localhost>

On Wed, 2008-03-05 at 18:41 +0100, Andreas Kostyrka wrote:
> Am Mittwoch, den 05.03.2008, 11:59 -0500 schrieb Steve Holden:
> > Nathan wrote:
> > [...]
> >  > Does sys.path support zip files??
> > > sys.path.insert(0,'../Resources/lib/python/2.5/site-packages.zip/twisted')
> > > ??
> > Yes. Just add the zip file to sys.path and you can import modules 
> > contained in the files inside the zip.
> 
> Although gentlemen call such files eggs :-P

Oh so *that's* what eggs are.

The sound you just heard was that of a lightbulb going on.

-- 
Justin Warren <daedalus at eigenmagic.com>



From andreas at kostyrka.org  Fri Mar  7 05:44:02 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Fri, 07 Mar 2008 13:44:02 +0100
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <fqpa1b$5dp$1@ger.gmane.org>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org>
Message-ID: <1204893842.7994.48.camel@localhost>

Actually, on a modern system like Linux, if you fork, the process share
memory as long it's not written too (Copy-on-Write).

This means, that if you'd fork off your process pool from your
application, forking should have minimal impact. Even writing it as a
standalone process means memory usage of one Python interpreter, plus
minimal usage in the forked processes.

Andreas

Am Donnerstag, den 06.03.2008, 09:35 -0800 schrieb Don Dwiggins:
> glyph at divmod.com wrote:
> > The other reason is that adbapi is old.  If we were going to implement 
> > something like ADBAPI today, we'd probably write a process pool first, 
> > but adbapi was written as a quick hack to get some database integration 
> > a long time ago.
> > 
> > The only caveat is that additional Python interpreters take up more RAM 
> > than additional threads.  If the database processes are doing any heavy 
> > CPU lifting though, this cost could well be worth it.
> 
> I'm just getting started with an XMLRPC server that uses adbapi.  This 
> satisfies my curiosity as to why it was threaded.  Now assuming that, 
> for my application, the "heavy lifting" is done by the DB engine itself, 
> is there any good reason to dig into implementing a process pool?  (I'm 
> thinking of the future here, as the server begins to grow more 
> functionality.  Right now, my main concern is not to block multiple 
> simultaneous requests from clients.)
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080307/fed01e1f/attachment.sig>

From mithrandi at mithrandi.net  Fri Mar  7 05:55:20 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 7 Mar 2008 14:55:20 +0200
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <1204893842.7994.48.camel@localhost>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org> <1204893842.7994.48.camel@localhost>
Message-ID: <20080307125520.GD9899@mithrandi.net>

* Andreas Kostyrka <andreas at kostyrka.org> [2008-03-07 13:44:02 +0100]:

> Actually, on a modern system like Linux, if you fork, the process share
> memory as long it's not written too (Copy-on-Write).

Except that it's basically impossible to read a Python object without
writing to it, as the reference count changes.

> This means, that if you'd fork off your process pool from your
> application, forking should have minimal impact. Even writing it as a
> standalone process means memory usage of one Python interpreter, plus
> minimal usage in the forked processes.

This would only be true for a Python implementation that does not use
reference counting.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080307/c1fc56b3/attachment.sig>

From big_tyo at inf.its-sby.edu  Fri Mar  7 06:05:25 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Fri, 7 Mar 2008 20:05:25 +0700 (ICT)
Subject: [Twisted-Python] deferred classes
Message-ID: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>

hi can anyone explain to me how
defer.deferredlist,defer.deferredqueue,defer.deferredlock,and
defer.deferredsemaphore works?

an explanation with example will be very much help to me learning twisted

best regard,
raditya


-----------------------------------
Fakultas Teknologi Informasi
Institut Teknologi Sepuluh Nopember
http://www.ftif.its.ac.id/
-----------------------------------




From p.mayers at imperial.ac.uk  Fri Mar  7 06:36:45 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 13:36:45 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <1204893842.7994.48.camel@localhost>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>
Message-ID: <47D144ED.1000306@imperial.ac.uk>

Andreas Kostyrka wrote:
> Actually, on a modern system like Linux, if you fork, the process share
> memory as long it's not written too (Copy-on-Write).
> 
> This means, that if you'd fork off your process pool from your
> application, forking should have minimal impact. Even writing it as a
> standalone process means memory usage of one Python interpreter, plus
> minimal usage in the forked processes.

If you fork a python interpreter, you should very quickly replace the 
process with exec.

The reason is that if you de-reference something, Python might 
deallocate it in a way that causes the parent process to lose it too 
e.g. send a shut down message on SQL connections.



From mailing_lists at evotex.ch  Fri Mar  7 06:44:54 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 07 Mar 2008 14:44:54 +0100
Subject: [Twisted-Python] trial (unit test) naming convention or obligation?
Message-ID: <47D146D6.8060105@evotex.ch>

Hello,

I am starting to use the trial package and while looking at some 
examples I saw that some methods start with "test_" and some don't, so I 
thought the test cases must start with that, then I noticed in another 
file that camelCase was used, so what would have been "test_basic_op" in 
one file would be "testBasicOp" in another. I just want to be sure as I 
couldn't find any documentation other than "look at the code" (which I 
have), and since I never actually found the parser : if a method starts 
(contains it at the beginning) with the word "test", then the test suite 
will execute it, if not, then it won't, correct?

Thanks,
Gabriel



From jml at mumak.net  Fri Mar  7 06:51:12 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 7 Mar 2008 13:51:12 +0000
Subject: [Twisted-Python] trial (unit test) naming convention or
	obligation?
In-Reply-To: <47D146D6.8060105@evotex.ch>
References: <47D146D6.8060105@evotex.ch>
Message-ID: <d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>

On Fri, Mar 7, 2008 at 1:44 PM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello,
>
>  I am starting to use the trial package and while looking at some
>  examples I saw that some methods start with "test_" and some don't, so I
>  thought the test cases must start with that, then I noticed in another
>  file that camelCase was used, so what would have been "test_basic_op" in
>  one file would be "testBasicOp" in another. I just want to be sure as I
>  couldn't find any documentation other than "look at the code" (which I
>  have), and since I never actually found the parser : if a method starts
>  (contains it at the beginning) with the word "test", then the test suite
>  will execute it, if not, then it won't, correct?
>

The method must begin with 'test' in order to be found as a test by
Trial's test loader. This is the same as what unittest.TestLoader
does.

Twisted's internal convention is that methods intended to be found
dynamically should have the form '<prefix>_<camelCase>'. Sometimes we
are not so good at following our conventions.

jml



From mailing_lists at evotex.ch  Fri Mar  7 07:11:27 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 07 Mar 2008 15:11:27 +0100
Subject: [Twisted-Python] trial (unit test) naming convention
	or	obligation?
In-Reply-To: <d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>
References: <47D146D6.8060105@evotex.ch>
	<d06a5cd30803070551k60245ef0mfabd55d9088f18ac@mail.gmail.com>
Message-ID: <47D14D0F.1060105@evotex.ch>

Jonathan Lange wrote:
> On Fri, Mar 7, 2008 at 1:44 PM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello,
>>
>>  I am starting to use the trial package and while looking at some
>>  examples I saw that some methods start with "test_" and some don't, so I
>>  thought the test cases must start with that, then I noticed in another
>>  file that camelCase was used, so what would have been "test_basic_op" in
>>  one file would be "testBasicOp" in another. I just want to be sure as I
>>  couldn't find any documentation other than "look at the code" (which I
>>  have), and since I never actually found the parser : if a method starts
>>  (contains it at the beginning) with the word "test", then the test suite
>>  will execute it, if not, then it won't, correct?
>>
>>     
>
> The method must begin with 'test' in order to be found as a test by
> Trial's test loader. This is the same as what unittest.TestLoader
> does.
>
> Twisted's internal convention is that methods intended to be found
> dynamically should have the form '<prefix>_<camelCase>'. Sometimes we
> are not so good at following our conventions.
>
> jml
>
>   
Ok, thank you for the info Jonathan, I'll follow the convention then :-)

Gabriel



From amauryfa at gmail.com  Fri Mar  7 08:10:38 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Fri, 7 Mar 2008 16:10:38 +0100
Subject: [Twisted-Python] deferred classes
In-Reply-To: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>
References: <35886.202.46.129.17.1204895125.squirrel@202.46.129.82>
Message-ID: <e27efe130803070710t56232ed5nff9d873bd6b7334a@mail.gmail.com>

Hello,

On Fri, Mar 7, 2008 at 2:05 PM,  <big_tyo at inf.its-sby.edu> wrote:
> hi can anyone explain to me how
>  defer.deferredlist,defer.deferredqueue,defer.deferredlock,and
>  defer.deferredsemaphore works?
>
>  an explanation with example will be very much help to me learning twisted

Deferreds are indeed a key feature in twisted.
First, did you read these two pages?
http://twistedmatrix.com/projects/core/documentation/howto/async.html
http://twistedmatrix.com/projects/core/documentation/howto/defer.html

(In summary: a Deferred is a promise that some result will come. To
get the result, you attach functions to the deferred; they will be
called when the result is available.)

Then the objects you list are easy to explain:
- defer.DeferredList is a deferred, which fires when all embedded
Deferreds have been fired.
- defer.DeferredQueue is a queue whose "get" method returns a Deferred
which fires when data is available.
- Similarly, defer.DeferredLock and defer.DeferredSemaphore are the
usual concurrency primitives, whose "acquire" method returns a
Deferred which fires when the acquisition is done.

Here is an example with DeferredSemaphore and DeferredList.
IMO the beauty of twisted is that the processing of one file is
described in a linear fashion: fetchOneFile() seems to run in
parallel.

===================================================

from twisted.internet import defer, reactor
from twisted.web.client import downloadPage
import os

# list of urls to retrieve
urls = [
    'http://xxx',
    'http://yyy',
    'http://zzz',
    'http://ttt',
]

# Only 2 simultaneous downloads
semaphore = defer.DeferredSemaphore(2)

def fetchOneFile(url):
    # Process one file:
    # - wait to get a a semaphore slot
    # - fetch the url
    # - release the semaphore

    d = semaphore.acquire()

    def fetchData(_):
        print "fetch", url
        return downloadPage(url, os.path.basename(url))
    d.addCallback(fetchData)

    def fetched(result):
        print "fetched", url, result
    d.addBoth(fetched)

    d.addBoth(lambda _:semaphore.release())

    return d


downloads = defer.DeferredList([fetchOneFile(url) for url in urls])
def end(result):
    reactor.stop()
downloads.addBoth(end)
reactor.run()


-- 
Amaury Forgeot d'Arc



From mike at mkp.ca  Fri Mar  7 08:49:40 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Fri, 7 Mar 2008 10:49:40 -0500
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D144ED.1000306@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>
	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>
	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>
	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>
	<fqpa1b$5dp$1@ger.gmane.org> <1204893842.7994.48.camel@localhost>
	<47D144ED.1000306@imperial.ac.uk>
Message-ID: <273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>

On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>  If you fork a python interpreter, you should very quickly replace the
>  process with exec.

Does fork+exec have any advantages over spawn?

Mike.



From ilochab at gmail.com  Fri Mar  7 09:13:41 2008
From: ilochab at gmail.com (IloChab)
Date: Fri, 7 Mar 2008 17:13:41 +0100
Subject: [Twisted-Python] Choosing a logging system.
Message-ID: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>

I'm almost new with twisted and I'm going to implement a new application
that will use Perspective Broker.

I'll need logging facilities like python's logging module, in particular
filtering functions and one logging server per node.
I thought I could use twisted log-observers, but I saw i can't use socket
into them.

So my questions are:
> can I use python logging module into a twisted application?
> can I use socket that I handle by my self into a twisted application?

Thak you in advnce for any answer.

Ciao
Licia.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080307/ecf495e6/attachment.html>

From therve at free.fr  Fri Mar  7 09:38:20 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 07 Mar 2008 17:38:20 +0100
Subject: [Twisted-Python] Choosing a logging system.
In-Reply-To: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>
References: <166b1c630803070813u9853dfev78a1370dee7c99fa@mail.gmail.com>
Message-ID: <20080307173820.xyfz73vycksg8gcg@wasabox.wasabout.net>

Quoting IloChab <ilochab at gmail.com>:

> I'm almost new with twisted and I'm going to implement a new application
> that will use Perspective Broker.
>
> I'll need logging facilities like python's logging module, in particular
> filtering functions and one logging server per node.
> I thought I could use twisted log-observers, but I saw i can't use socket
> into them.

Why? It may be a bit tricky, and it currently doesn't exist, but  
there's no immediate problem with doing that (without thinking about  
it much, though).

> So my questions are:
> can I use python logging module into a twisted application?

Yes, there's a PythonLoggingObserver (only in trunk) to do that.

> can I use socket that I handle by my self into a twisted application?

If you mean using the logging socket handler, no you can't do that,  
because it's blocking.

-- 
Thomas





From p.mayers at imperial.ac.uk  Fri Mar  7 11:30:46 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 18:30:46 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>
	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
Message-ID: <47D189D6.6040206@imperial.ac.uk>

Mike Pelletier wrote:
> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>  If you fork a python interpreter, you should very quickly replace the
>>  process with exec.
> 
> Does fork+exec have any advantages over spawn?

If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
exec, so no - they're identical.

I don't think there's a native unix syscall "spawn".

Seems I recall there is something in the MS VC runtime named similar.

Anyway - if we're talking about Twisted, you want to use the Twisted 
support - reactor.spawnProcess and a subclass of t.i.p.ProcessProtocol 
to talk to the child worker.

reactor.spawnProcess does the right thing(tm)



From p.mayers at imperial.ac.uk  Fri Mar  7 11:35:06 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Mar 2008 18:35:06 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D189D6.6040206@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>
	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>
	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
	<47D189D6.6040206@imperial.ac.uk>
Message-ID: <47D18ADA.7050904@imperial.ac.uk>

Phil Mayers wrote:
> Mike Pelletier wrote:
>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>> wrote:
>>>  If you fork a python interpreter, you should very quickly replace the
>>>  process with exec.
>>
>> Does fork+exec have any advantages over spawn?
> 
> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
> exec, so no - they're identical.

Sorry - to reply to myself and try to be more clear:

In almost all circumstances, regardless of whether you're using Twisted 
or not, fork'ing a python interpreter and leaving both parent and child 
running off the same memory image for any length of time is unwise.

In that respect, os.spawnXX == fork/exec and is thus fine. However...

> 
> I don't think there's a native unix syscall "spawn".
> 
> Seems I recall there is something in the MS VC runtime named similar.
> 
> Anyway - if we're talking about Twisted, you want to use the Twisted 
> support - reactor.spawnProcess and a subclass of t.i.p.ProcessProtocol 
> to talk to the child worker.
> 
> reactor.spawnProcess does the right thing(tm)

In almost all circumstances when using Twisted, you should use 
reactor.spawnProcess or one of the util functions t.i.utils.getProcess*



From manlio_perillo at libero.it  Sat Mar  8 02:36:49 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 08 Mar 2008 10:36:49 +0100
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D189D6.6040206@imperial.ac.uk>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>
	<47D189D6.6040206@imperial.ac.uk>
Message-ID: <47D25E31.7020609@libero.it>

Phil Mayers ha scritto:
> Mike Pelletier wrote:
>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>> wrote:
>>>  If you fork a python interpreter, you should very quickly replace the
>>>  process with exec.
>>
>> Does fork+exec have any advantages over spawn?
> 
> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
> exec, so no - they're identical.
> 
> I don't think there's a native unix syscall "spawn".
> 

http://www.opengroup.org/onlinepubs/009695399/functions/posix_spawn.html

Note that the page may require registration to be viewed.


 > [...]


Manlio Perillo



From p.mayers at imperial.ac.uk  Sat Mar  8 04:04:34 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 08 Mar 2008 11:04:34 +0000
Subject: [Twisted-Python] Re: twisted application server
In-Reply-To: <47D25E31.7020609@libero.it>
References: <47C54568.9000605@lavabit.com>	<20080227114627.21558.962160154.divmod.xquotient.7107@joule.divmod.com>	<d272f0690802271537l78d345b6s57bb490956e0f41b@mail.gmail.com>	<20080228002029.21558.578686223.divmod.xquotient.7176@joule.divmod.com>	<fqpa1b$5dp$1@ger.gmane.org>	<1204893842.7994.48.camel@localhost>	<47D144ED.1000306@imperial.ac.uk>	<273093d80803070749r25084518t15795391fbf94645@mail.gmail.com>	<47D189D6.6040206@imperial.ac.uk>
	<47D25E31.7020609@libero.it>
Message-ID: <47D272C2.7070904@imperial.ac.uk>

Manlio Perillo wrote:
> Phil Mayers ha scritto:
>> Mike Pelletier wrote:
>>> On Fri, Mar 7, 2008 at 8:36 AM, Phil Mayers <p.mayers at imperial.ac.uk> 
>>> wrote:
>>>>  If you fork a python interpreter, you should very quickly replace the
>>>>  process with exec.
>>>
>>> Does fork+exec have any advantages over spawn?
>>
>> If you mean "os.spawnXX" I think that, under Unix, those *are* fork & 
>> exec, so no - they're identical.
>>
>> I don't think there's a native unix syscall "spawn".
>>
> 
> http://www.opengroup.org/onlinepubs/009695399/functions/posix_spawn.html

I said "unix" not "posix extenisions for MMU-less realtime/embedded 
systems"



From therve at free.fr  Sat Mar  8 13:26:14 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Sat, 08 Mar 2008 21:26:14 +0100
Subject: [Twisted-Python] Announcing twotp 0.1,
	the Twisted implementation of the Erlang node protocol
Message-ID: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>

Hello all,

Some weeks ago [1], I announced a project of mine that was  
implementing the Erlang node protocol with Twisted. After a little bit  
of feedback and motivation (thanks  Anders Rune Jensen!), I've decided  
to create a project on its own called Twotp.

For now, it's hosted on launchpad: https://launchpad.net/twotp, and  
I've made a quick 0.1 release, also available on the cheeseshop (so  
'easy_install twotp' should to the right thing).

I have already some features in the pipe (set and dict support, a  
simple twistd plugin), so I'll probably make another release real soon  
now. I also wanted to announce it before Pycon, so that people can  
talk to me about it there :).

Again, every feedback, questions, bugs, are more than welcome. Using  
this list is probably OK for now, until we talk too much and get  
kicked out :).

Thanks for your attention,

-- 
Thomas

[1]:  
http://twistedmatrix.com/pipermail/twisted-python/2007-December/016504.html




From exarkun at twistedmatrix.com  Sat Mar  8 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Mar 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1205039107.23.995150851@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080309/22a41cad/attachment.html>

From stefan.arentz at gmail.com  Sun Mar  9 04:46:34 2008
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sun, 9 Mar 2008 11:46:34 +0100
Subject: [Twisted-Python] Twisted Amazon Web Service module?
In-Reply-To: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
References: <24f63c200802262232j32ddc695k9e17c3205cfae479@mail.gmail.com>
Message-ID: <adf34c300803090346k4b4c1949neb0dc3937c23edb7@mail.gmail.com>

I just released by SimpleDB code ...

  http://stefan.arentz.nl/2008/03/08/twisted-amazon-simpledb/

It also contains code for S3 and SQS but that is work in progress.

Feedback appreciated!

 S.

On Wed, Feb 27, 2008 at 7:32 AM, Don Smith <donwsmith at gmail.com> wrote:
> Has anyone built a Twisted module for use with any of Amazon's web service
> components? Specifically SimpleDB and SQS?
>
> I've looked at boto, which is really cool, but not Twisted...
>
> Regards,
>
> Don
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From roland.hedberg at adm.umu.se  Sun Mar  9 09:10:24 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sun, 09 Mar 2008 16:10:24 +0100
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
Message-ID: <47D3FDE0.6060000@adm.umu.se>

Hi!

It seems like the HTTP client in Twisted handles HTTPS and easily as
HTTP connections.

But, I can not find any place where I can specify a client certificate
to use in the HTTPS connection.

Is there something I have overlooked or is there another solution I can
 use, because I need to have certificates on both the server and the
client side.

-- Roland



From drew.smathers at gmail.com  Sun Mar  9 09:47:09 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sun, 9 Mar 2008 11:47:09 -0400
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
In-Reply-To: <47D3FDE0.6060000@adm.umu.se>
References: <47D3FDE0.6060000@adm.umu.se>
Message-ID: <368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>

On Sun, Mar 9, 2008 at 11:10 AM, Roland Hedberg
<roland.hedberg at adm.umu.se> wrote:
> Hi!
>
>  It seems like the HTTP client in Twisted handles HTTPS and easily as
>  HTTP connections.
>
>  But, I can not find any place where I can specify a client certificate
>  to use in the HTTPS connection.
>
>  Is there something I have overlooked or is there another solution I can
>   use, because I need to have certificates on both the server and the
>  client side.
>
>  -- Roland
>

You need to pass a ContextFactory which provides the client certificate:

  reactor.connectSSL(host, port, factory, contextFactory)

web.client.getPage, for example, takes a contextFactory as a keyword argument.
One way to create the context factory, with the key and certificate
stored in files:

   clientCtxFactory = ssl.DefaultOpenSSLContextFactory(keyPath, certPath)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From roland.hedberg at adm.umu.se  Sun Mar  9 12:06:16 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sun, 09 Mar 2008 19:06:16 +0100
Subject: [Twisted-Python] Twisted HTTP client with certificate ?
In-Reply-To: <368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>
References: <47D3FDE0.6060000@adm.umu.se>
	<368574aa0803090847i2e331a5o1c4cd66718d77776@mail.gmail.com>
Message-ID: <47D42718.7080404@adm.umu.se>

Drew Smathers wrote:
> On Sun, Mar 9, 2008 at 11:10 AM, Roland Hedberg
> <roland.hedberg at adm.umu.se> wrote:
>> Hi!
>>
>>  It seems like the HTTP client in Twisted handles HTTPS and easily as
>>  HTTP connections.
>>
>>  But, I can not find any place where I can specify a client certificate
>>  to use in the HTTPS connection.
>>
>>  Is there something I have overlooked or is there another solution I can
>>   use, because I need to have certificates on both the server and the
>>  client side.
>>
>>  -- Roland
>>
> 
> You need to pass a ContextFactory which provides the client certificate:
> 
>   reactor.connectSSL(host, port, factory, contextFactory)
> 
> web.client.getPage, for example, takes a contextFactory as a keyword argument.

OK, that was simple :-)
Thanks !

-- Roland



From glenn at tarbox.org  Sun Mar  9 18:57:34 2008
From: glenn at tarbox.org (Glenn Tarbox, PhD)
Date: Sun, 9 Mar 2008 17:57:34 -0700
Subject: [Twisted-Python] Shiny new Qt4 Reactor
Message-ID: <f049b35c0803091757p2c048ecfka057b83f2b33bf14@mail.gmail.com>

A very much refactored version of the Qt4 reactor is available.  Not up to
100% just yet but very usable and more aligned with the Qt design approach.

http://code.tarbox.org/qtreactor

-glenn

-- 
Glenn H. Tarbox, PhD
glenn at tarbox.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080309/e86a8faf/attachment.html>

From theatilla at gmail.com  Mon Mar 10 06:17:00 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 10 Mar 2008 13:17:00 +0100
Subject: [Twisted-Python] xml library in twisted
In-Reply-To: <315768.27988.qm@web8701.mail.in.yahoo.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
Message-ID: <b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>

On 04/03/2008, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
> Hi all,
> I'm dealing with xml files in a twisted application,
> can any one suggest me the best xml library in twisted?
> Previously i used  twisted.web.microdom and twisted.web.minidom but they
> don't have much of the functionalities....
> Is there any other xml library in twisted which makes it easy with lot of
> options?
> I wanted to create a xml file like this...
>
> <game>
>     <player1>
>            <stuff>
>            </stuff>
>     </player1>
>     <player2>
>            <stuff>
>            </stuff>
>     </player2>
> </game>
>
> and want to access that player stuff directly..(like a tree structure)
>
> Thank you in advance.


If you need powerful interfaces you could take a look at libxml, with
the lxml python bindings. Check http://codespeak.net/lxml/ .



From theatilla at gmail.com  Mon Mar 10 06:31:06 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 10 Mar 2008 13:31:06 +0100
Subject: [Twisted-Python] writing back through open connections
In-Reply-To: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
References: <BB64A9B7-070F-4FE7-8F43-3FDEA1099B34@umail.ucsb.edu>
Message-ID: <b53c932d0803100531u2b91453bx1bff82f3abee112f@mail.gmail.com>

>  <time has passed until server decides it needs to send a plugin to one
>  of the clients>
>  Server sends plugin to Client 1

"until server decides" is your 'event' here, not anything initiated by
the client.

The way I see your issue here is that you seem to believe that only
client actions raise events in your application, which is not really
the case. Any part of your application might be responsible for an
event on which you have to act by sending data to the client. In that
case, when a client connects and your factory instantiates an instance
of the protocol ( a new client connection), you should keep a
reference to that instance in a way depending on your application
needs. Through this reference you can send data to your clients at any
point in time, corresponding to events raised from another part of
your application.

For example - I've a simple notification service on which a number of
clients connect and subscribe for events for specific users. I keep a
mapping of every connected client and its subscriptions in my
application code. In my case, the events are raised through a second
protocol that informs my server for every user action, then I send
packets to the connected clients, based on the mappings. But the
actual cause of your events can be anything you like - other network
sources, database, anything you need to code.

Basically - your protocol class is responsible only for how data is
transferred to and from the client. Your application logic should be
defined at a higher level, through your factory and service classes. A
single service might be communicating with clients trough different
protocols.

I hope that clear is up somewhat.  The examples for the finger server
in twisted's documentation might give you a good idea of how things
work - they're structured nicely over a few chapters to evolve a dumb
server into a useful full-fledged application. Also - the IRC
server/client examples can give you a good idea of how you send data
to a connected client, based on an event created from another source.



From vvangelovski at gmail.com  Mon Mar 10 09:14:54 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 10 Mar 2008 16:14:54 +0100
Subject: [Twisted-Python] parsing url query parameters and values
Message-ID: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>

Is there any method in the Twisted or Twisted web api I can use to
parse url query parameters and values. This isn't a very naive
algorithm since there are more complicated query strings that can be
constructed, for example:
http://www.example.com/path?param1=val1&param2=val2&&param3=val3
http://www.example.com/path?param1=val1&param2=val2&som=|=val&param3=val3
Ideally I could use something that bulds a dictionary of parameters and values



From exarkun at divmod.com  Mon Mar 10 09:33:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 10 Mar 2008 10:33:17 -0500
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
Message-ID: <20080310153317.6859.237087890.divmod.quotient.17738@ohm>

On Mon, 10 Mar 2008 16:14:54 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>Is there any method in the Twisted or Twisted web api I can use to
>parse url query parameters and values. This isn't a very naive
>algorithm since there are more complicated query strings that can be
>constructed, for example:
>http://www.example.com/path?param1=val1&param2=val2&&param3=val3
>http://www.example.com/path?param1=val1&param2=val2&som=|=val&param3=val3
>Ideally I could use something that bulds a dictionary of parameters and values

See the stdlib APIs urlparse.urlparse and cgi.parse_qs.

Jean-Paul



From ellisonbg.net at gmail.com  Mon Mar 10 14:17:18 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 10 Mar 2008 14:17:18 -0600
Subject: [Twisted-Python] Announcing twotp 0.1,
	the Twisted implementation of the Erlang node protocol
In-Reply-To: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>
References: <20080308212614.xgbh0c7agoc84wks@wasabox.wasabout.net>
Message-ID: <6ce0ac130803101317w3caf9318nfde5f27ef3558496@mail.gmail.com>

Thomas,

I played around with the code in your sandbox a few weeks ago.  This
is _truly fantastic_ that you are pushing this forward.  We have been
considering using Erlang for parts of ipython (optionally) and this
will really help.

Brian

On Sat, Mar 8, 2008 at 2:26 PM, Thomas Hervé <therve at free.fr> wrote:
> Hello all,
>
>  Some weeks ago [1], I announced a project of mine that was
>  implementing the Erlang node protocol with Twisted. After a little bit
>  of feedback and motivation (thanks  Anders Rune Jensen!), I've decided
>  to create a project on its own called Twotp.
>
>  For now, it's hosted on launchpad: https://launchpad.net/twotp, and
>  I've made a quick 0.1 release, also available on the cheeseshop (so
>  'easy_install twotp' should to the right thing).
>
>  I have already some features in the pipe (set and dict support, a
>  simple twistd plugin), so I'll probably make another release real soon
>  now. I also wanted to announce it before Pycon, so that people can
>  talk to me about it there :).
>
>  Again, every feedback, questions, bugs, are more than welcome. Using
>  this list is probably OK for now, until we talk too much and get
>  kicked out :).
>
>  Thanks for your attention,
>
>  --
>  Thomas
>
>  [1]:
>  http://twistedmatrix.com/pipermail/twisted-python/2007-December/016504.html
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From daedalus at eigenmagic.com  Mon Mar 10 19:26:50 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 11 Mar 2008 12:26:50 +1100
Subject: [Twisted-Python] xml library in twisted
In-Reply-To: <b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
	<b53c932d0803100517v332db800x4eef29ec15bb310@mail.gmail.com>
Message-ID: <1205198810.8924.20.camel@localhost>

On Mon, 2008-03-10 at 13:17 +0100, Atilla wrote:
> On 04/03/2008, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
> >
> > Hi all,
> > I'm dealing with xml files in a twisted application,
> > can any one suggest me the best xml library in twisted?
> > Previously i used  twisted.web.microdom and twisted.web.minidom but they
> > don't have much of the functionalities....
> > Is there any other xml library in twisted which makes it easy with lot of
> > options?
> > I wanted to create a xml file like this...
> >
> > <game>
> >     <player1>
> >            <stuff>
> >            </stuff>
> >     </player1>
> >     <player2>
> >            <stuff>
> >            </stuff>
> >     </player2>
> > </game>
> >
> > and want to access that player stuff directly..(like a tree structure)
> >
> > Thank you in advance.
> 
> 
> If you need powerful interfaces you could take a look at libxml, with
> the lxml python bindings. Check http://codespeak.net/lxml/ .

I second the use of lxml. The ability to mix Pythonic object handling
with a fairly complete XPATH implementation is powerful indeed.

-- 
Justin Warren <daedalus at eigenmagic.com>



From mailing_lists at evotex.ch  Tue Mar 11 05:24:23 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 12:24:23 +0100
Subject: [Twisted-Python] mutex in twisted?
Message-ID: <47D66BE7.4050603@evotex.ch>

Hello,

Is there some sort of mutex/semaphore code that can be used in twisted? 
I need to run an external subprocess from twisted when I get some data 
from a client and I'd like to make sure that while one client's data 
spawned the process to run, some other client will not do the same at 
the same time, thus my need for a mutex. Maybe there is another way to 
do this in a more twisted sort of way (pun not intended)? If so I'd love 
to hear how!

Thanks,
Gabriel



From mailing_lists at evotex.ch  Tue Mar 11 05:31:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 12:31:46 +0100
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D66BE7.4050603@evotex.ch>
References: <47D66BE7.4050603@evotex.ch>
Message-ID: <47D66DA2.2050209@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> Is there some sort of mutex/semaphore code that can be used in 
> twisted? I need to run an external subprocess from twisted when I get 
> some data from a client and I'd like to make sure that while one 
> client's data spawned the process to run, some other client will not 
> do the same at the same time, thus my need for a mutex. Maybe there is 
> another way to do this in a more twisted sort of way (pun not 
> intended)? If so I'd love to hear how!
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Oh, I forgot to say, I use this for the process :

subprocess.call(["festival", "--tts", filename])

I'm not sure if it is useful for anyone, but I just saw that Twisted has 
some sort of process code too, though it looks a bit complicated for my 
needs.

Gabriel



From p.mayers at imperial.ac.uk  Tue Mar 11 05:49:03 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 11 Mar 2008 11:49:03 +0000
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D66DA2.2050209@evotex.ch>
References: <47D66BE7.4050603@evotex.ch> <47D66DA2.2050209@evotex.ch>
Message-ID: <47D671AF.1010604@imperial.ac.uk>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> Is there some sort of mutex/semaphore code that can be used in 
>> twisted? I need to run an external subprocess from twisted when I get 
>> some data from a client and I'd like to make sure that while one 
>> client's data spawned the process to run, some other client will not 
>> do the same at the same time, thus my need for a mutex. Maybe there is 
>> another way to do this in a more twisted sort of way (pun not 
>> intended)? If so I'd love to hear how!
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Oh, I forgot to say, I use this for the process :
> 
> subprocess.call(["festival", "--tts", filename])

You can't do that. The python "subprocess" module is blocking, and yuo 
will block the reactor and stop Twisted running.

> 
> I'm not sure if it is useful for anyone, but I just saw that Twisted has 
> some sort of process code too, though it looks a bit complicated for my 
> needs.

You need to use it.

You can use:

twisted.internet.utils.getProcessOutputAndValue

...if you want to just run a simple command

As for mutex - since Twisted isn't multithreaded, you can just use a 
flag variable.



From maarten at treewalker.org  Tue Mar 11 06:26:27 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 11 Mar 2008 13:26:27 +0100
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
References: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
Message-ID: <200803111326.32695.maarten@treewalker.org>

On Monday 10 March 2008, Vasil Vangelovski wrote:
> Is there any method in the Twisted or Twisted web api I can use to
> parse url query parameters and values.

If the query is part of a request being handled by twisted.web, you can 
simply use "Request.args".

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080311/0579b7a4/attachment.sig>

From vvangelovski at gmail.com  Tue Mar 11 06:45:43 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 11 Mar 2008 13:45:43 +0100
Subject: [Twisted-Python] parsing url query parameters and values
In-Reply-To: <200803111326.32695.maarten@treewalker.org>
References: <406b9fda0803100814t46ab31e4j350d403387960c0b@mail.gmail.com>
	<200803111326.32695.maarten@treewalker.org>
Message-ID: <406b9fda0803110545m12a53d4eo4544350b61a7edbd@mail.gmail.com>

Thanx alot.
What I was looking for was cgi.parse_qs.
I need that processing for a layer that is not connected to twisted.

On Tue, Mar 11, 2008 at 1:26 PM, Maarten ter Huurne
<maarten at treewalker.org> wrote:
> On Monday 10 March 2008, Vasil Vangelovski wrote:
>  > Is there any method in the Twisted or Twisted web api I can use to
>  > parse url query parameters and values.
>
>  If the query is part of a request being handled by twisted.web, you can
>  simply use "Request.args".
>
>  Bye,
>                 Maarten
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From mailing_lists at evotex.ch  Tue Mar 11 07:15:47 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 11 Mar 2008 14:15:47 +0100
Subject: [Twisted-Python] mutex in twisted?
In-Reply-To: <47D671AF.1010604@imperial.ac.uk>
References: <47D66BE7.4050603@evotex.ch> <47D66DA2.2050209@evotex.ch>
	<47D671AF.1010604@imperial.ac.uk>
Message-ID: <47D68603.4070905@evotex.ch>

Phil Mayers wrote:
> Gabriel Rossetti wrote:
>> Gabriel Rossetti wrote:
>>> Hello,
>>>
>>> Is there some sort of mutex/semaphore code that can be used in 
>>> twisted? I need to run an external subprocess from twisted when I 
>>> get some data from a client and I'd like to make sure that while one 
>>> client's data spawned the process to run, some other client will not 
>>> do the same at the same time, thus my need for a mutex. Maybe there 
>>> is another way to do this in a more twisted sort of way (pun not 
>>> intended)? If so I'd love to hear how!
>>>
>>> Thanks,
>>> Gabriel
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> Oh, I forgot to say, I use this for the process :
>>
>> subprocess.call(["festival", "--tts", filename])
>
> You can't do that. The python "subprocess" module is blocking, and yuo 
> will block the reactor and stop Twisted running.
>
Ok
>>
>> I'm not sure if it is useful for anyone, but I just saw that Twisted 
>> has some sort of process code too, though it looks a bit complicated 
>> for my needs.
>
> You need to use it.
>
> You can use:
>
> twisted.internet.utils.getProcessOutputAndValue
>
> ...if you want to just run a simple command
>
Ok, yes, that is all I need to do, run a simple command.
> As for mutex - since Twisted isn't multithreaded, you can just use a 
> flag variable.
>
Ok, cool, thanks a lot for your help,
Gabriel



From josef.robert.novak at gmail.com  Tue Mar 11 19:04:52 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Wed, 12 Mar 2008 10:04:52 +0900
Subject: [Twisted-Python] question about deferred lists tutorial description
Message-ID: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>

Hi,
 I have been using twisted intermittently for a couple of months, but
still don't feel like I have a good intuitive understanding of how to
get things done quickly, and efficiently with the framework.  Thus
I've been revisiting the tutorial documents and resolved to go through
them with a fine-toothed comb in an effort to really get my noggin
around things.
 In the deffered discussion:
http://twistedmatrix.com/projects/core/documentation/howto/defer.html

 there is a section about defer.DeferredList, which contains code
examples and a subsequent note which -seems- to contradict the code
above it:

------------begin code from tutorial----------
The callback will be called with a list of the results of the
Deferreds it contains, like so:

def printResult(result):
    print result
deferred1 = defer.Deferred()
deferred2 = defer.Deferred()
deferred3 = defer.Deferred()
dl = defer.DeferredList([deferred1, deferred2, deferred3])
dl.addCallback(printResult)
deferred1.callback('one')
deferred2.errback('bang!')
deferred3.callback('three')
# At this point, dl will fire its callback, printing:
#     [(1, 'one'), (0, 'bang!'), (1, 'three')]
# (note that defer.SUCCESS == 1, and defer.FAILURE == 0)
------------end code from tutorial----------

Ok, so far, so good.  You can build a series of deferreds, stick them
in a DeferredList, add a callback to the list, *subsequently* add some
callbacks/errbacks to the individual deferreds in the DeferredList,
fire things up, and have the results of the *subsequently added*
callbacks/errbacks sent to the DeferredList callback and printed out.

However, the following Note regarding callbacks for DeferredList
objects seems to contradict the promised results of the above
codeblock, stating that:

"""If you want to apply callbacks to the individual Deferreds that go
into the DeferredList, you should be careful about when those
callbacks are added. The act of adding a Deferred to a DeferredList
inserts a callback into that Deferred (when that callback is run, it
checks to see if the DeferredList has been completed yet). The
important thing to remember is that it is this callback which records
the value that goes into the result list handed to the DeferredList's
callback.

Therefore, if you add a callback to the Deferred after adding the
Deferred to the DeferredList, the value returned by that callback will
not be given to the DeferredList's callback. To avoid confusion, we
recommend not adding callbacks to a Deferred once it has been used in
a DeferredList."""

Ok, so in fact, any callbacks/errbacks I need to add to deferreds
which will be added to a DeferredList object, need to be added Prior
to my adding the individual deferreds to the DeferredList object.  Or
so it would appear to my limited understanding.

I would greatly appreciate it if someone could resolve this apparent
contradiction for me, or if it is a mistake in the documentation,
please point out which one of the code block or the note is actually
correct.

Cheers!



From josef.robert.novak at gmail.com  Tue Mar 11 19:11:28 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Wed, 12 Mar 2008 10:11:28 +0900
Subject: [Twisted-Python] Re: question about deferred lists tutorial
	description
In-Reply-To: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
References: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
Message-ID: <710ff8630803111811w4b42577fw3dfcdc6e11abaa94@mail.gmail.com>

Apologies for the previous premature email; it seems I cannot read.
The apparent contradiction I mentioned was the result of my conflating
'callback' with 'addCallback'.  However, I guess I'd still appreciate
some discussion on the nuances of these two functions.

Cheers

2008/3/12, Josef Novak <josef.robert.novak at gmail.com>:
> Hi,
>   I have been using twisted intermittently for a couple of months, but
>  still don't feel like I have a good intuitive understanding of how to
>  get things done quickly, and efficiently with the framework.  Thus
>  I've been revisiting the tutorial documents and resolved to go through
>  them with a fine-toothed comb in an effort to really get my noggin
>  around things.
>   In the deffered discussion:
>  http://twistedmatrix.com/projects/core/documentation/howto/defer.html
>
>   there is a section about defer.DeferredList, which contains code
>  examples and a subsequent note which -seems- to contradict the code
>  above it:
>
>  ------------begin code from tutorial----------
>  The callback will be called with a list of the results of the
>  Deferreds it contains, like so:
>
>  def printResult(result):
>     print result
>  deferred1 = defer.Deferred()
>  deferred2 = defer.Deferred()
>  deferred3 = defer.Deferred()
>  dl = defer.DeferredList([deferred1, deferred2, deferred3])
>  dl.addCallback(printResult)
>  deferred1.callback('one')
>  deferred2.errback('bang!')
>  deferred3.callback('three')
>  # At this point, dl will fire its callback, printing:
>  #     [(1, 'one'), (0, 'bang!'), (1, 'three')]
>  # (note that defer.SUCCESS == 1, and defer.FAILURE == 0)
>  ------------end code from tutorial----------
>
>  Ok, so far, so good.  You can build a series of deferreds, stick them
>  in a DeferredList, add a callback to the list, *subsequently* add some
>  callbacks/errbacks to the individual deferreds in the DeferredList,
>  fire things up, and have the results of the *subsequently added*
>  callbacks/errbacks sent to the DeferredList callback and printed out.
>
>  However, the following Note regarding callbacks for DeferredList
>  objects seems to contradict the promised results of the above
>  codeblock, stating that:
>
>  """If you want to apply callbacks to the individual Deferreds that go
>  into the DeferredList, you should be careful about when those
>  callbacks are added. The act of adding a Deferred to a DeferredList
>  inserts a callback into that Deferred (when that callback is run, it
>  checks to see if the DeferredList has been completed yet). The
>  important thing to remember is that it is this callback which records
>  the value that goes into the result list handed to the DeferredList's
>  callback.
>
>  Therefore, if you add a callback to the Deferred after adding the
>  Deferred to the DeferredList, the value returned by that callback will
>  not be given to the DeferredList's callback. To avoid confusion, we
>  recommend not adding callbacks to a Deferred once it has been used in
>  a DeferredList."""
>
>  Ok, so in fact, any callbacks/errbacks I need to add to deferreds
>  which will be added to a DeferredList object, need to be added Prior
>  to my adding the individual deferreds to the DeferredList object.  Or
>  so it would appear to my limited understanding.
>
>  I would greatly appreciate it if someone could resolve this apparent
>  contradiction for me, or if it is a mistake in the documentation,
>  please point out which one of the code block or the note is actually
>  correct.
>
>  Cheers!
>



From terry at jon.es  Tue Mar 11 19:31:57 2008
From: terry at jon.es (Terry Jones)
Date: Wed, 12 Mar 2008 02:31:57 +0100
Subject: [Twisted-Python] Re: question about deferred lists tutorial
	description
In-Reply-To: Your message at 10:11:28 on Wednesday, 12 March 2008
References: <710ff8630803111804s48492be3kcd4b35a72545a894@mail.gmail.com>
	<710ff8630803111811w4b42577fw3dfcdc6e11abaa94@mail.gmail.com>
Message-ID: <18391.12941.304078.275591@terry.local>

Hi Josef

> Apologies for the previous premature email; it seems I cannot read. 

:-)

> The apparent contradiction I mentioned was the result of my conflating
> 'callback' with 'addCallback'.

Right.

> However, I guess I'd still appreciate some discussion on the nuances of
> these two functions.

It's just a trivial non-real-world example. The use of callback is to
supply a return value, which is passed to the function added with
addCallback (and similarly with errback).  In a non-trivial example, some
other code (associated with the function that returned the deferred) would
be what called callback (or errback). The example just shows all the code
in one place.  Does that make sense?

Terry



From chris at sidwells.com  Wed Mar 12 02:04:21 2008
From: chris at sidwells.com (Chris Dew)
Date: Wed, 12 Mar 2008 08:04:21 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
Message-ID: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>

I have a small script which answers dns queries by returning the original
message.  I have spent a couple of hours RTFMing, but I still cannot find
out how to correctly add answers to the message, before returning it.

I want to add an answer, either a Record_CNAME or Record_A, so as to produce
a trivial authoritative-only DNS server.

Adding a Record_XXX object to message.answers using the Array's 'append'
method produces a MalformedPacket (according to wireshark), though the
server does not throw any exceptions.   (In this situation, the answer
count, as shown by dig, does rise to 1, even though no answer is displayed
[due to malformed packet?].)

Perhaps there is a completely different way to do this?  Could I craft a
message with answers from scratch?

Any help appreciated,

Chris.


#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # tried all sorts of things here
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080312/dd0c9a82/attachment.html>

From exarkun at divmod.com  Wed Mar 12 07:30:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Mar 2008 08:30:00 -0500
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>
Message-ID: <20080312133000.6859.1007360226.divmod.quotient.18377@ohm>

On Wed, 12 Mar 2008 08:04:21 +0000, Chris Dew <chris at sidwells.com> wrote:
>I have a small script which answers dns queries by returning the original
>message.  I have spent a couple of hours RTFMing, but I still cannot find
>out how to correctly add answers to the message, before returning it.
>
>I want to add an answer, either a Record_CNAME or Record_A, so as to produce
>a trivial authoritative-only DNS server.
>
>Adding a Record_XXX object to message.answers using the Array's 'append'
>method produces a MalformedPacket (according to wireshark), though the
>server does not throw any exceptions.   (In this situation, the answer
>count, as shown by dig, does rise to 1, even though no answer is displayed
>[due to malformed packet?].)
>
>Perhaps there is a completely different way to do this?  Could I craft a
>message with answers from scratch?

Did you set `m.answer´ to 1?

Jean-Paul



From chris at sidwells.com  Thu Mar 13 01:52:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Thu, 13 Mar 2008 07:52:24 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <20080312133000.6859.1007360226.divmod.quotient.18377@ohm>
References: <e6a690760803120104g2ba6a84cpf0c1388a9a1fb820@mail.gmail.com>
	<20080312133000.6859.1007360226.divmod.quotient.18377@ohm>
Message-ID: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>

Thanks for your reply.  I have tried setting answer to 1.  I have included
an amended version of my programme at the end of this email.

When I run this, the server reports no error.  When I  'dig @localhost
foo.bar' I get the response:

"""
;; Warning: Message parser reports malformed message packet.

; <<>> DiG 9.4.1 <<>> @localhost foo.bar
; (1 server found)
;; global options:  printcmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 18948
;; flags: qr rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available
;; WARNING: Messages has 4 extra bytes at end

;; QUESTION SECTION:
;foo.bar.                       IN      A

;; Query time: 1 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Mar 13 07:37:50 2008
;; MSG SIZE  rcvd: 29
"""

Wireshark also shows the reply packet to be malformed:

0000  00 00 00 00 00 00 00 00  00 00 00 00 08 00 45 00   ........ ......E.
0010  00 39 00 00 40 00 40 11  3c b2 7f 00 00 01 7f 00   .9.. at .@. <.......
0020  00 01 00 35 82 43 00 25  fe 38 51 cf 81 00 00 01   ...5.C.% .8Q.....
0030  00 01 00 00 00 00 03 66  6f 6f 03 62 61 72 00 00   .......f oo.bar..
0040  01 00 01 0a 0b 0c 0d

You  can see the 10.11.12.13 at the end (hex), but something about the
packet is wrong.

Could you point out my mistake?  If it's a bug in twisted.names, I'm happy
to look at fixing it (I've worked with the dns protocol at packet level
before), but I first want to make sure that I am using the API correctly.

Thanks,

Chris.





#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # this should always answer 10.11.12.13, regardless of the query
        m.answer = 1
        m.answers.append(Record_A(address="10.11.12.13"))
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()








On 12/03/2008, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Wed, 12 Mar 2008 08:04:21 +0000, Chris Dew <chris at sidwells.com> wrote:
> >I have a small script which answers dns queries by returning the original
> >message.  I have spent a couple of hours RTFMing, but I still cannot find
> >out how to correctly add answers to the message, before returning it.
> >
> >I want to add an answer, either a Record_CNAME or Record_A, so as to
> produce
> >a trivial authoritative-only DNS server.
> >
> >Adding a Record_XXX object to message.answers using the Array's 'append'
> >method produces a MalformedPacket (according to wireshark), though the
> >server does not throw any exceptions.   (In this situation, the answer
> >count, as shown by dig, does rise to 1, even though no answer is
> displayed
> >[due to malformed packet?].)
> >
> >Perhaps there is a completely different way to do this?  Could I craft a
> >message with answers from scratch?
>
>
> Did you set `m.answer´ to 1?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080313/84fc4c67/attachment.html>

From exarkun at divmod.com  Thu Mar 13 08:48:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 13 Mar 2008 09:48:05 -0500
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>
Message-ID: <20080313144805.6859.1998745914.divmod.quotient.18749@ohm>

On Thu, 13 Mar 2008 07:52:24 +0000, Chris Dew <chris at sidwells.com> wrote:
>Thanks for your reply.  I have tried setting answer to 1.  I have included
>an amended version of my programme at the end of this email.
>
>When I run this, the server reports no error.  When I  'dig @localhost
>foo.bar' I get the response:
>
> [snip]
>
>Could you point out my mistake?  If it's a bug in twisted.names, I'm happy
>to look at fixing it (I've worked with the dns protocol at packet level
>before), but I first want to make sure that I am using the API correctly.

See below.  I think it's a documentation deficiency, but probably not a
bug in the code.

> [snip]
>
>#!/usr/bin/python
>
>from twisted.internet.protocol import Protocol, Factory
>from twisted.internet import reactor
>from twisted.names.server import DNSServerFactory
>from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
>Record_CNAME, Record_A, Message
>from twisted.names import dns
>from twisted.internet.interfaces import IAddress
>
>class Controller(object):
>    def messageReceived(self, m, protocol, addr):
>        print m, dir(m), m.queries, m.answers
>        # this should always answer 10.11.12.13, regardless of the query
>        m.answer = 1
>        m.answers.append(Record_A(address="10.11.12.13"))
>        protocol.transport.write(m.toStr(), addr)

Answers should be a list of RRHeaders, not bare Record_As.

>
>controller = Controller()
>
>if __name__ == "__main__":
>    reactor.listenUDP(53, DNSDatagramProtocol(controller))
>    reactor.run()
>

Jean-Paul



From itoral at igalia.com  Thu Mar 13 12:24:49 2008
From: itoral at igalia.com (Iago Toral)
Date: Thu, 13 Mar 2008 19:24:49 +0100
Subject: [Twisted-Python] Help with BananaError
Message-ID: <1205432689.16886.52.camel@localhost>

Hi all,

I'm working on the gnome build brigade (http://build.gnome.org/) using
Buildbot, which is a continuous integration tool based on Twisted.

I have several Twisted services (buildbot masters) running behind a
firewall (say ports 8001, 8002, mand 8003) and only one opened port for
external connections (say 9000). 

I'm writting a small Twisted tool to allow me to use these services
which port is not open directly for external connections through that
opened port to other external Twisted clients (buildbot slaves):

+----------------+                 
|server-1:8001<->|                 
|server-2:8002<->|<->:9000<--->Internet<-->clients
|server-3:8003<->|                 
+----------------+                 

This tool has two parts, the client side (Mux) wraps the application
protocol by adding a header that identifies the client and also the
server it wants to connect. The server side (Demux) listens on the
opened port (9000) for incomming messages, extracts the client header
with information identifying the client and uses that information to
properly redirect the wrapped message to the appropriate internal port.

This tool works mostly ok, except that after some minutes working
properly redirecting several dozens of messages correctly, the Demux
breaks (on reception of a normal incoming message) with the following
error message:

exception:
  File "/home/master/devel/lib/python/twisted/spread/banana.py", line
176, in
dataReceived                                                      
    raise BananaError("Security precaution: List too long.")    

The messages do not exceed the maximum size defined in banana.py,
actually these messages are rather small, usually less than 1KB.

Does anyone know what that error message means and when it happens? What
might an application be doing wrong for that to happen?

Attached is the code of this tool, both the Mux and the Demux, it is a
very small file (~100 lines of code). Also, take into account that this
was written as a protoype and it is my first TWisted program so it might
be very badly designed.

Thanks in advance for any feedback you can give!!

Iago
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tunnel.py
Type: text/x-python
Size: 4021 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080313/612ceb77/attachment-0002.py>

From zooko at zooko.com  Thu Mar 13 13:52:13 2008
From: zooko at zooko.com (zooko)
Date: Thu, 13 Mar 2008 13:52:13 -0600
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
Message-ID: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>

ANNOUNCING: Allmydata.org "Tahoe" version 0.9

We are pleased to announce the release of version 0.9 of allmydata.org
"Tahoe".

Allmydata.org "Tahoe" is a secure, decentralized, fault-tolerant
filesystem.  All of the source code is available under a Free
Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

A one-page explanation of the novel properties of this filesystem is
visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


This is the successor to Allmydata.org "Tahoe" v0.8, which was
released February 15, 2008 [1].  This release is backwards-compatible
with v0.8.

This is a major release of allmydata.org "Tahoe" -- the first release
which is considered stable and functional enough to serve as a
permanent store of valuable data.  New versions of Tahoe are expected
to maintain backwards compatibility with this version for the
forseeable future.

This release of allmydata.org "Tahoe" will form the basis of the next
consumer backup product from Allmydata, Inc. -- http://allmydata.com .

This release adds extensive "visibility into the grid" -- the web user
interface now shows detailed information about the nodes comprising
the grid and fine-grained statistics about the time and space used for
the storage and retrieval operations.


Since v0.8 we've made the following changes:

  * Added user-friendly Windows application and package, thanks
    especially to Rob Kinninmont and Mike Booker (tickets #195, 242,
    243, 321, 335).

  * Display information about uploads and downloads (ticket #39).

  * Improve performance (including tickets #304, 321).

  * Improve packaging and testing (including ticket #145).

  * Add even more extensive automated tests (including ticket #207).

  * Updated documentation.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is the product of less than a year and a half of
active development, we do not categorically recommend it for the
storage of data which is extremely confidential or precious.  However,
we believe that the combination of erasure coding and careful
engineering makes the use of this software a much safer alternative
than common alternatives, such as RAID or traditional backup onto a
remote hard drive, removable drive, or tape.

This software comes with extensive unit tests [2], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known security issues please see the
Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
March 13, 2008
Boulder, Colorado, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2183
[2] http://allmydata.org/tahoe-figleaf/current/
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2307
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com

P.S.  Someday, people might search for some of the earliest  
occurrences of the
name "LAUGFS", which stands for "Least AUthority Grid FileSystem".   
Hello,
searchers from the future!




From pahan at xzrq.net  Thu Mar 13 19:14:47 2008
From: pahan at xzrq.net (Pavel Pergamenshchik)
Date: Thu, 13 Mar 2008 18:14:47 -0700
Subject: [Twisted-Python] Help with BananaError
In-Reply-To: <1205432689.16886.52.camel@localhost>
References: <1205432689.16886.52.camel@localhost>
Message-ID: <7447a0ac0803131814y3fb980d3r5056d6da3961a458@mail.gmail.com>

On 3/13/08, Iago Toral <itoral at igalia.com> wrote:
>  This tool works mostly ok, except that after some minutes working
>  properly redirecting several dozens of messages correctly, the Demux
>  breaks (on reception of a normal incoming message) with the following
>  error message:

TCP is not a message oriented protocol. It will not preserve message
borders. dataReceived may get called with any amount of bytes from the
incoming stream, not just the amount you expect.

You probably want something like
twisted.protocols.basic.NetstringReceiver to delimit messages for you.



From chris at sidwells.com  Fri Mar 14 02:02:18 2008
From: chris at sidwells.com (Chris Dew)
Date: Fri, 14 Mar 2008 08:02:18 +0000
Subject: [Twisted-Python] twisted names - how to add answers to a message
	and send replies
In-Reply-To: <20080313144805.6859.1998745914.divmod.quotient.18749@ohm>
References: <e6a690760803130052y66654e7foe5e3844fda63f4a4@mail.gmail.com>
	<20080313144805.6859.1998745914.divmod.quotient.18749@ohm>
Message-ID: <e6a690760803140102y6531d4a9wd6b834c1b4e6798f@mail.gmail.com>

I have it working now.  I have attached a working programme below.  (Note:
the RRHeader's name should be gathered from one of the queries, rather than
being hard-coded, as in my example below.  I did it this way, as it more
obviously illustrates RRHeader's constructor.)

Thanks for your help,

Chris.


#!/usr/bin/python

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor
from twisted.names.server import DNSServerFactory
from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
Record_CNAME, Record_A, Message
from twisted.names import dns
from twisted.internet.interfaces import IAddress

class Controller(object):
    def messageReceived(self, m, protocol, addr):
        print m, dir(m), m.queries, m.answers
        # this should always answer 10.11.12.13, regardless of the query
        m.answer = 1
        m.answers.append(RRHeader(name="foo.bar", payload=Record_A(address="
10.11.12.13")))
        protocol.transport.write(m.toStr(), addr)

controller = Controller()

if __name__ == "__main__":
    reactor.listenUDP(53, DNSDatagramProtocol(controller))
    reactor.run()


On 13/03/2008, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Thu, 13 Mar 2008 07:52:24 +0000, Chris Dew <chris at sidwells.com> wrote:
> >Thanks for your reply.  I have tried setting answer to 1.  I have
> included
> >an amended version of my programme at the end of this email.
> >
> >When I run this, the server reports no error.  When I  'dig @localhost
> >foo.bar' I get the response:
> >
>
> > [snip]
>
> >
> >Could you point out my mistake?  If it's a bug in twisted.names, I'm
> happy
> >to look at fixing it (I've worked with the dns protocol at packet level
> >before), but I first want to make sure that I am using the API correctly.
>
>
> See below.  I think it's a documentation deficiency, but probably not a
> bug in the code.
>
> > [snip]
>
> >
> >#!/usr/bin/python
> >
> >from twisted.internet.protocol import Protocol, Factory
> >from twisted.internet import reactor
> >from twisted.names.server import DNSServerFactory
> >from twisted.names.dns import Query, DNSDatagramProtocol, RRHeader,
> >Record_CNAME, Record_A, Message
> >from twisted.names import dns
> >from twisted.internet.interfaces import IAddress
> >
> >class Controller(object):
> >    def messageReceived(self, m, protocol, addr):
> >        print m, dir(m), m.queries, m.answers
> >        # this should always answer 10.11.12.13, regardless of the query
> >        m.answer = 1
> >        m.answers.append(Record_A(address="10.11.12.13"))
> >        protocol.transport.write(m.toStr(), addr)
>
>
> Answers should be a list of RRHeaders, not bare Record_As.
>
>
> >
> >controller = Controller()
> >
> >if __name__ == "__main__":
> >    reactor.listenUDP(53, DNSDatagramProtocol(controller))
> >    reactor.run()
> >
>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080314/12ffbcd5/attachment.html>

From radix at twistedmatrix.com  Sat Mar 15 11:02:10 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 15 Mar 2008 13:02:10 -0400
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
Message-ID: <60ed19d40803151002t2b4d4eacj10668d1c4e505d09@mail.gmail.com>

On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>
>  We are pleased to announce the release of version 0.9 of allmydata.org
>  "Tahoe".

Congratulations!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sat Mar 15 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Mar 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1205640307.41.1888648499@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080316/44686380/attachment.html>

From eric+twisted at trueblade.com  Sun Mar 16 07:35:27 2008
From: eric+twisted at trueblade.com (Eric Smith)
Date: Sun, 16 Mar 2008 08:35:27 -0500
Subject: [Twisted-Python] Bug in options howto?
Message-ID: <47DD221F.2090404@trueblade.com>

I might be mistaken, but I think there's a bug in:

http://twistedmatrix.com/projects/core/documentation/howto/options.html

In the section "Inheritance, Or: How I Learned to Stop Worrying and Love 
the Superclass", it shows two classes, one which inherits from the 
other.  It then shows the same thing, but as a single class.  In the 
single class example, I think the base class should be usage.Options, 
not BaseOptions.

I'll open a ticket if this is a bug, otherwise sorry for wasting your time.



From lists at sourceillustrated.com  Sun Mar 16 12:00:33 2008
From: lists at sourceillustrated.com (John Wells)
Date: Sun, 16 Mar 2008 14:00:33 -0400
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
Message-ID: <44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>

On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>
>  We are pleased to announce the release of version 0.9 of allmydata.org
>  "Tahoe".

Very impressive looking project.

I'm curious...it appears that the focus is security and reliability,
but how well does it perform?

Thanks,
John



From steve at holdenweb.com  Sun Mar 16 13:33:26 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sun, 16 Mar 2008 15:33:26 -0400
Subject: [Twisted-Python] Teach Me Twisted Redux
Message-ID: <frjsm6$ekf$1@ger.gmane.org>

I'd just like to thank the Twisted community for their support in 
yesterday's "Teach Me Twisted" Open Space session. To see the room still 
half-full of people talking animatedly about Python twenty minutes after 
the session ended was a great tribute to how interested people are in 
making Twisted work for them, and a reminder of what PyCon is all about. 
I haven't ever enjoyed any PyCon activity so much.

Couldn't have done it without you,guys, thanks a million.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From duncan.mcgreggor at gmail.com  Sun Mar 16 14:18:27 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 16 Mar 2008 15:18:27 -0500
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <4327dfbd0803161318j5cc8ce11r438acaa56cd8f5ce@mail.gmail.com>

On Sun, Mar 16, 2008 at 2:33 PM, Steve Holden <steve at holdenweb.com> wrote:
> I'd just like to thank the Twisted community for their support in
>  yesterday's "Teach Me Twisted" Open Space session. To see the room still
>  half-full of people talking animatedly about Python twenty minutes after
>  the session ended was a great tribute to how interested people are in
>  making Twisted work for them, and a reminder of what PyCon is all about.
>  I haven't ever enjoyed any PyCon activity so much.
>
>  Couldn't have done it without you,guys, thanks a million.

It was great fun for us too, Steve -- thanks for coming up with such a
great idea/format for an open space session/tutorial!

d



From ldanielburr at mac.com  Sun Mar 16 18:48:15 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sun, 16 Mar 2008 19:48:15 -0500
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <op.t74xup1z3oj628@l-daniel-burrs-computer.local>

On Sun, 16 Mar 2008 14:33:26 -0500, Steve Holden <steve at holdenweb.com>  
wrote:

> I'd just like to thank the Twisted community for their support in  
> yesterday's "Teach Me Twisted" Open Space session. To see the room still  
> half-full of people talking animatedly about Python twenty minutes after  
> the session ended was a great tribute to how interested people are in  
> making Twisted work for them, and a reminder of what PyCon is all about.  
> I haven't ever enjoyed any PyCon activity so much.
>

I heartily concur, it was a lot of fun, and if anything, even more fun
once we all retired to the bar.

> Couldn't have done it without you,guys, thanks a million.
>

My thanks to you for being such a good sport.


L. Daniel Burr



From zooko at zooko.com  Sun Mar 16 21:18:20 2008
From: zooko at zooko.com (zooko)
Date: Sun, 16 Mar 2008 22:18:20 -0500
Subject: [Twisted-Python] announcing allmydata.org "Tahoe" v0.9
In-Reply-To: <44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>
References: <43E9F07B-9307-4286-AD6E-99997A681723@zooko.com>
	<44dddf400803161100q76e5f6bag2514d02e3146e338@mail.gmail.com>
Message-ID: <7B35B371-1233-46B4-BAE4-C510960C69DC@zooko.com>

Adding Cc: the tahoe-dev list, which is probably the most logical  
place for follow-ups.


On Mar 16, 2008, at 1:00 PM, John Wells wrote:

> On Thu, Mar 13, 2008 at 3:52 PM, zooko <zooko at zooko.com> wrote:
>> ANNOUNCING: Allmydata.org "Tahoe" version 0.9
>>
>>  We are pleased to announce the release of version 0.9 of  
>> allmydata.org
>>  "Tahoe".
>
> Very impressive looking project.

Thank you!  We're doing our best to make it possible for other people  
to use allmydata.org "Tahoe", re-use its source code, or at least  
learn from our mistakes.  Please feel free to post to tahoe-dev or  
open a ticket at http://allmydata.org if you try to do one of these  
things and fail.

> I'm curious...it appears that the focus is security and reliability,
> but how well does it perform?


What sort of performance are you interested in?  There are several  
measures of performance (storage efficiency, transfer speed, network  
efficiency, conserving CPU cycles, memory usage, etc.) and many use  
cases.  Tahoe performs very well at a few things and terribly at many  
things.  Below, I'll assume that the kind of performance you were  
interested in is a pleasurable experience downloading movies, since  
that is one of the things that Tahoe is best at.

There are some basic automated performance measurements on The  
Performance Page [1], linked from The Dev Page [2] of the wiki.

Those measurements say that if you are downloading a file over a home  
DSL connection, it might take one quarter of a second to begin a  
download, followed by 500 KB/s sustained transfer speed.

Tahoe performance actually compares favorably with BitTorrent for  
this use.  Our file encoding allows streaming download, so you can  
click to begin downloading a movie, and then you can go ahead and  
start watching the movie while it is still downloading.

Also, Tahoe can transfer data faster than BitTorrent does, because it  
assumes that all clients are deserving of the best possible service  
-- it doesn't use throttling as a way to incentivize cooperation.   
That's good for performance, but by the same token it means you can't  
expect cooperation from arbitrary Tahoe nodes.  If you want this kind  
of service from the storage servers, you have to persuade them to  
serve you, either because you are a friend in their friendnet, or  
because you are a customer.  (In the future other, more general,  
kinds of service relationship will be supported -- we have a detailed  
plan about that which you are welcome to ask about on tahoe-dev.)

As far as I know, Tahoe has not been scaled up to more than a couple  
of dozen storage servers or clients or more than a few hundred GB of  
storage.  This is going to be changing rapidly in the near future as  
allmydata.com is moving our customers' data onto a Tahoe grid.

Regards,

Zooko

[1] http://allmydata.org/trac/tahoe/wiki/Performance
[2] http://allmydata.org/trac/tahoe/wiki/Dev

P.S.  In the future, some people might refer to the allmydata.org  
Tahoe secure, decentralized filesystem design as "LAUGFS", which  
stands for "Least AUthority Grid FileSystem".




From etherealmachine at gmail.com  Mon Mar 17 00:48:12 2008
From: etherealmachine at gmail.com (James Pettit)
Date: Sun, 16 Mar 2008 23:48:12 -0700
Subject: [Twisted-Python] xmpp_client X-GOOGLE-TOKEN and mechanism
Message-ID: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>

 I'm trying to use the xmpp_client example in twisted.words, and it looks
like google is requesting the X-GOOGLE-TOKEN auth mechanism... anyone know
how I can specify/force it to use PLAIN?
Specifically, the command '> python xmpp_client.py
myname at gmail.commypassword' gives this output (
http://pastebin.com/m47f6002a).
- James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080316/95253e7e/attachment.html>

From radix at twistedmatrix.com  Mon Mar 17 22:38:28 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 17 Mar 2008 23:38:28 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
Message-ID: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>

There is a pre-release of Twisted 8.0 available at
http://twistedmatrix.com/users/radix/DIST/

Please test and provide feedback.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From twisted at ralphm.ik.nu  Tue Mar 18 02:28:29 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 18 Mar 2008 09:28:29 +0100
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <20080318082829.GA19592@ik.nu>

On Mon, Mar 17, 2008 at 11:38:28PM -0500, Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
> 
> Please test and provide feedback.

When are you planning to do a final release from this, and is there
still time to get some odd little bugs fixed in trunk that could end up
in this release still?

-- 
Groetjes,

ralphm



From twisted at ralphm.ik.nu  Tue Mar 18 02:32:14 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 18 Mar 2008 09:32:14 +0100
Subject: [Twisted-Python] xmpp_client X-GOOGLE-TOKEN and mechanism
In-Reply-To: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>
References: <54cddd2e0803162348s4f6f92dfi3b580d58d007dd7f@mail.gmail.com>
Message-ID: <20080318083214.GB19592@ik.nu>

On Sun, Mar 16, 2008 at 11:48:12PM -0700, James Pettit wrote:
> I'm trying to use the xmpp_client example in twisted.words, and it looks like
> google is requesting the X-GOOGLE-TOKEN auth mechanism... anyone know how I can
> specify/force it to use PLAIN?
> Specifically, the command '> python xmpp_client.py myname at gmail.com mypassword'
> gives this output (http://pastebin.com/m47f6002a).

Google Talk will only give you PLAIN if TLS is established first. The
twisted.words example does this by default, but could it be that you
don't have the OpenSSL python bindings installed?

-- 
Groetjes,

ralphm



From mg at daimi.au.dk  Tue Mar 18 02:46:48 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 09:46:48 +0100
Subject: [Twisted-Python] Re: Twisted 8.0.0pre1
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <w1b1w68berr.fsf@thyra03.daimi.au.dk>

"Christopher Armstrong" <radix at twistedmatrix.com> writes:

> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
>
> Please test and provide feedback.

I tried deleting my Twisted 2.5.0 install and installed the
prerelease, and it works fine with the unit tests for my VIFF project.

They use the twisted.protocols.loopback.loopbackAsync function for
testing the interaction of several (3 or 4) peers in a network. I have
modified it a bit to ensure that things really are run asynchronously.
What I mean with this is the I want the server and client to be run
interleaved so that an execution trace is not just

  [C, C, C, C, S, S, S, S]

but more like this:

  [C, S, C, C, S, S, S, C]

with some random interleavings.

You can find the file here:

  http://hg.viff.dk/viff/raw-file/tip/viff/test/loopback.py

with the relevant diff here:

  http://hg.viff.dk/viff/rev/21fbfaae93e2

My test case of the asynchronous tests is here:

  http://hg.viff.dk/viff/raw-file/tip/viff/test/test_async.py

I hope this can be of interest for someone...

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From adelagon at gmail.com  Tue Mar 18 03:31:17 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Mar 2008 17:31:17 +0800
Subject: [Twisted-Python] transport.loseConnection problems
Message-ID: <7a01f6c00803180231x5c4e995bxeca9fd2f5224a9a0@mail.gmail.com>

I have a server application that do forced disconnects to clients on certain
conditions by using self.transport.loseConnection() method. On random cases
the method that I'm using fails to disconnect the client on the fly. The
socket connection that is supposed to be disconnected immediately get
disconnected at random times (10-30mins) with an error of:

*Connection closed: [Failure instance: Traceback (failure with no frames):
twisted.internet.error.ConnectionLost: Connection to the other side was lost
in a non-clean fashion.
*
Can anyone explain why is this happening? I checked the API docs of the
loseConnection() and it says there that:

*"**Note that if there is a registered producer on a transport it will not
be closed until the producer has been unregistered."*

I have no idea what is a producer. By the way I'm using
twisted.words.xmlstream that implements Protocol and epoll as my reactor.
Thanks in advance. :)

----
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080318/38a2aeb4/attachment.html>

From mg at daimi.au.dk  Tue Mar 18 03:57:46 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 10:57:46 +0100
Subject: [Twisted-Python] My project is using Twisted
Message-ID: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>

Hi,

I would like to ask if a link could be added to my VIFF project on the
Projects Using Twisted page:

  http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted

It could be listed under research projects:

  [http://viff.dk/ VIFF @ University of Aarhus, Denmark] is an open
  source Python library for implementing secure multi-party
  computation.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From brianbaquiran at gmail.com  Tue Mar 18 06:04:28 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Tue, 18 Mar 2008 20:04:28 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
Message-ID: <47DFAFCC.30106@gmail.com>

Hi,
I'm writing what seems to me to be a trivial Twisted client application 
using a proprietary protocol, and I'm having problems with integrating 
it to ActiveMQ using pyactivemq (which is a Boost.Python wrapper around 
the ActiveMQ-CPP library).

What I'm observing is that calling my client protocol's 
transport.write() doesn't seem to send data to the server. The server, 
also implemented using Twisted but without using pyactivemq, does not 
seem to have this problem.

Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
consumption of messages be interfering somehow with Twisted's event loop 
and causing this problem?

Brian



From itamar at itamarst.org  Tue Mar 18 07:14:40 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 09:14:40 -0400
Subject: [Twisted-Python] My project is using Twisted
In-Reply-To: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
Message-ID: <1205846080.21090.0.camel@localhost.localdomain>


On Tue, 2008-03-18 at 10:57 +0100, Martin Geisler wrote:
> Hi,
> 
> I would like to ask if a link could be added to my VIFF project on the
> Projects Using Twisted page:

Done.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From itamar at itamarst.org  Tue Mar 18 07:16:11 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 09:16:11 -0400
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <47DFAFCC.30106@gmail.com>
References: <47DFAFCC.30106@gmail.com>
Message-ID: <1205846171.21090.2.camel@localhost.localdomain>


On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:

> Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
> consumption of messages be interfering somehow with Twisted's event loop 
> and causing this problem?

Quite possibly; if the API you're calling is blocking then Twisted's
event loop won't be able to run. If that is the case, either figure out
if you can integrate the library with Twisted's event loop, or use
twisted.internet.threads.deferToThread or something similar to call the
blocking API.




From eburus at gmail.com  Tue Mar 18 08:01:41 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 18 Mar 2008 17:01:41 +0300
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <47DFCB45.6080005@gmail.com>

Hm... Why 8.0 ? It's special edition =)?
In the official resource i find only this
http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
Where i can read more about new features or in the Twisted-8.0 you
modify release auto tools,
make test coverage better and stabilize code?


Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/
>
> Please test and provide feedback.
>
>   

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080318/3245a014/attachment.html>

From mg at daimi.au.dk  Tue Mar 18 08:11:55 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 18 Mar 2008 15:11:55 +0100
Subject: [Twisted-Python] Re: My project is using Twisted
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
	<1205846080.21090.0.camel@localhost.localdomain>
Message-ID: <w1b7ig09l5g.fsf@thyra03.daimi.au.dk>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2008-03-18 at 10:57 +0100, Martin Geisler wrote:
>> Hi,
>> 
>> I would like to ask if a link could be added to my VIFF project on
>> the Projects Using Twisted page:
>
> Done.

Thank you!

And thank you all for Twisted, I have been very happy with it,
especially the asynchronous style of programming offered by Deferreds
which fits the needs of my project perfectly.

We basically need to evaluate arithmetic circuits as fast as possible,
and so we want to execute a gate as soon as the operands are ready. It
turned out that Deferreds lets us define the execution tree
implicitly, something like this:

  def add(a, b):
    result = gatherResults([a, b])
    result.addCallback(lambda (a, b): a + b)
    return result

  def mul(a, b):
    result = gatherResults([a, b])
    result.addCallback(lambda (a, b): a * b)
    return result

  x = Deferred()
  y = Deferred()
  z = Deferred()
  w = mul(add(x, y), mul(x, add(x, z)))

Here w is calculated as fast as possible, namely when x, y, and z are
available.

I would not even know how to program something like this in a sane way
in, say, Java, but with Twisted (and thanks to lambda expressions) it
is very easy to get the fine-grained execution we want.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From dripton at ripton.net  Tue Mar 18 08:14:05 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 18 Mar 2008 07:14:05 -0700
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
Message-ID: <20080318141404.GA19253@vidar.dreamhost.com>

On 2008.03.17 23:38:28 -0500, Christopher Armstrong wrote:
> There is a pre-release of Twisted 8.0 available at
> http://twistedmatrix.com/users/radix/DIST/

Cool.

Why the big version number bump?

"Twisted 8.0, with over 3x as much version number as Twisted 2.5."

> Please test and provide feedback.

My tests still pass, FWIW.

-- 
David Ripton    dripton at ripton.net



From itamar at itamarst.org  Tue Mar 18 08:37:12 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Mar 2008 10:37:12 -0400
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <47DFCB45.6080005@gmail.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<47DFCB45.6080005@gmail.com>
Message-ID: <1205851032.21090.4.camel@localhost.localdomain>


On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
> Hm... Why 8.0 ? It's special edition =)?

The new versioning scheme uses the current year (2008) as the basis for
overall releases. Twisted Core will be version 2.6.

> In the official resource i find only this
> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
> Where i can read more about new features

There should be a NEWS file in the tarball.




From eburus at gmail.com  Tue Mar 18 08:46:38 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 18 Mar 2008 17:46:38 +0300
Subject: [Twisted-Python] My project is using Twisted
In-Reply-To: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
References: <w1bwso09wx1.fsf@thyra03.daimi.au.dk>
Message-ID: <47DFD5CE.6040605@gmail.com>

Could be added link for my project too?

http://fats.burus.org/ - only russian version at now (

sourceforge resource http://sourceforge.net/projects/fats/

May be in the future it will be added to the official twisted subprojects.


Martin Geisler wrote:
> Hi,
>
> I would like to ask if a link could be added to my VIFF project on the
> Projects Using Twisted page:
>
>   http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>
> It could be listed under research projects:
>
>   [http://viff.dk/ VIFF @ University of Aarhus, Denmark] is an open
>   source Python library for implementing secure multi-party
>   computation.
>
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080318/d00ca6e0/attachment.html>

From exarkun at divmod.com  Tue Mar 18 09:01:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 18 Mar 2008 10:01:37 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <1205851032.21090.4.camel@localhost.localdomain>
Message-ID: <20080318150137.6859.1869730862.divmod.quotient.20565@ohm>

On Tue, 18 Mar 2008 10:37:12 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
>On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
>> Hm... Why 8.0 ? It's special edition =)?
>
>The new versioning scheme uses the current year (2008) as the basis for
>overall releases. Twisted Core will be version 2.6.

Actually we decided that this was confusing and didn't provide much benefit,
so everything is going to be 8.0.  As a consequence, it will be easier to tell
when a Twisted installation is bogus, because the version number of the sub-
projects won't match up with each other or with the overall Twisted version
number.

>
>> In the official resource i find only this
>> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
>> Where i can read more about new features
>
>There should be a NEWS file in the tarball.
>

Yep, a really big one that David Reid and Christopher Armstrong spent a lot
of time writing up.

Jean-Paul



From andrewfr_ice at yahoo.com  Tue Mar 18 09:36:43 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 18 Mar 2008 08:36:43 -0700 (PDT)
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>
Message-ID: <650656.69998.qm@web34201.mail.mud.yahoo.com>

Hi Steve and Folks:

>I'd just like to thank the Twisted community for
their >support in yesterday's "Teach Me Twisted" Open
Space >session. To see the room still half-full of
people >talking animatedly about Python twenty minutes
>after the session ended was a great tribute to how
>interested people are in making Twisted work for
them, >and a reminder of what PyCon is all
>about. I haven't ever enjoyed any PyCon activity so
>much.

>Couldn't have done it without you,guys, thanks a
>million.

Here, here. I thought the "Teach Me Twisted" talk was
a scream. I never touched building a protocol so that
was ultra-useful. Twisted is a truly wonderful product
and  I think, as corny as it sounds, all that is
needed is to lead newbies by the hand for a little
while before they get the swing of it. But when people
get the swing of Twisted, watch out!

Cheers,
Andrew

P.S: The only downside was I realised I didn't get a
t-shirt!!!






      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From lists at sourceillustrated.com  Tue Mar 18 09:40:30 2008
From: lists at sourceillustrated.com (John Wells)
Date: Tue, 18 Mar 2008 11:40:30 -0400
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <650656.69998.qm@web34201.mail.mud.yahoo.com>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>
	<650656.69998.qm@web34201.mail.mud.yahoo.com>
Message-ID: <44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>

Are the slides for the presentation available anywhere? Also, any
chance a video was captured?

Thanks,
John



From arkanes at gmail.com  Tue Mar 18 09:50:53 2008
From: arkanes at gmail.com (Chris Mellon)
Date: Tue, 18 Mar 2008 10:50:53 -0500
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
References: <1205851032.21090.4.camel@localhost.localdomain>
	<20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
Message-ID: <4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>

On Tue, Mar 18, 2008 at 10:01 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Tue, 18 Mar 2008 10:37:12 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>  >
>  >On Tue, 2008-03-18 at 17:01 +0300, Burus Gmail wrote:
>  >> Hm... Why 8.0 ? It's special edition =)?
>  >
>  >The new versioning scheme uses the current year (2008) as the basis for
>  >overall releases. Twisted Core will be version 2.6.
>
>  Actually we decided that this was confusing and didn't provide much benefit,
>  so everything is going to be 8.0.  As a consequence, it will be easier to tell
>  when a Twisted installation is bogus, because the version number of the sub-
>  projects won't match up with each other or with the overall Twisted version
>  number.
>
>
>  >
>  >> In the official resource i find only this
>  >> http://twistedmatrix.com/trac/wiki/ReleaseAutomation.
>  >> Where i can read more about new features
>  >
>  >There should be a NEWS file in the tarball.
>  >
>
>  Yep, a really big one that David Reid and Christopher Armstrong spent a lot
>  of time writing up.
>


The tarball at http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre1.tar.bz2
only has the LICENSE and README files (which incidentally is still for
2.5).



From dripton at ripton.net  Tue Mar 18 11:39:13 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 18 Mar 2008 10:39:13 -0700
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>
References: <1205851032.21090.4.camel@localhost.localdomain>
	<20080318150137.6859.1869730862.divmod.quotient.20565@ohm>
	<4866bea60803180850s35007da0u19fe445cd5d06f56@mail.gmail.com>
Message-ID: <20080318173913.GA11070@vidar.dreamhost.com>

On 2008.03.18 10:50:53 -0500, Chris Mellon wrote:
> On Tue, Mar 18, 2008 at 10:01 AM, Jean-Paul Calderone
> <exarkun at divmod.com> wrote:
> >  >There should be a NEWS file in the tarball.
> >
> >  Yep, a really big one that David Reid and Christopher Armstrong spent a lot
> >  of time writing up.
> 
> The tarball at http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre1.tar.bz2
> only has the LICENSE and README files (which incidentally is still for
> 2.5).

/var/tmp/Twisted-8.0.0pre1$ find . -name NEWS
./twisted/words/topfiles/NEWS
./twisted/mail/topfiles/NEWS
./twisted/news/topfiles/NEWS
./twisted/runner/topfiles/NEWS
./twisted/web/topfiles/NEWS
./twisted/lore/topfiles/NEWS
./twisted/conch/topfiles/NEWS
./twisted/names/topfiles/NEWS
./twisted/topfiles/NEWS

You want the last one.

Agreed this is not really the most obvious place to put it.

-- 
David Ripton    dripton at ripton.net



From steve at holdenweb.com  Tue Mar 18 12:30:11 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 18 Mar 2008 14:30:11 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>	<650656.69998.qm@web34201.mail.mud.yahoo.com>
	<44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
Message-ID: <frp1nl$uqc$1@ger.gmane.org>

John Wells wrote:
> Are the slides for the presentation available anywhere? Also, any
> chance a video was captured?
> 
> Thanks,
> John

There were no slides (since the whole point of the "presentation" was to 
receive information from the audience I had nothing to "present"). 
Unfortunately the session wasn't recorded.

Guess you just had to be there, sorry.

regards
  Steve




From nathan.stocks at gmail.com  Tue Mar 18 16:34:06 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 18 Mar 2008 16:34:06 -0600
Subject: [Twisted-Python] SSL + AMP
Message-ID: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>

Can someone help me fill in the blanks here?  I've got an AMP
connection up and running, I just want to:

1) Make it so that AMP uses an SSL connection (which appears to be
supported by AMP with StartTLS) -- I'm confident that it's only a
matter of a little bit more time and experimentation for me to get
this part working.

2) Make it so that both the client and the server only connect to each
other and no one else.  I'm fairly certain this has something to do
with making my own certificate authority and certificates.  I (with
Google's help) am capable of figuring out all the OpenSSL commands to
do the creating, signing, etc. of certificates, but I'm not sure what
exactly needs to be done.

Any pointers would be appreciated...

* Here's the docs I've found so far for twisted+ssl+amp:
(There's a StartTLS in AMP, )
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.StartTLS.html
(There's an ssl in twisted.internet)
http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
(The SSL examples use a ClientContextFactory...which is undocumented)
http://twistedmatrix.com/projects/core/documentation/examples/echoserv_ssl.py
http://twistedmatrix.com/projects/core/documentation/examples/echoclient_ssl.py
http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.ClientContextFactory.html#getContext



From brianbaquiran at gmail.com  Tue Mar 18 19:49:17 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 09:49:17 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <1205846171.21090.2.camel@localhost.localdomain>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
Message-ID: <87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>

On Tue, Mar 18, 2008 at 9:16 PM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:
> > Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous
> > consumption of messages be interfering somehow with Twisted's event loop
> > and causing this problem?
>
> Quite possibly; if the API you're calling is blocking then Twisted's
> event loop won't be able to run. If that is the case, either figure out
> if you can integrate the library with Twisted's event loop, or use
> twisted.internet.threads.deferToThread or something similar to call the
> blocking API.
>

The API does not block when using an async message listener as I'm doing.
Here's some example pyactivemq code that shows how an asynchronous message
listener is registered:
http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py

In my code, I'm calling the protocol's transport.write(data) from within the
onMessage() callback.

In my testing, I've also seen cases wherein I consume a whole lot of
messages from ActiveMQ and call transport.write() for each of them but
nothing appears on the server (both client and server twisted apps are on
the same machine) I wait a while -- couple of seconds to a minute -- then
suddenly the data arrives on the server in a single dataReceived().

Would it work if I didn't call transport.write() from within the onMessage()
callback? Perhaps having some intermediate buffer to avoid having twisted
methods called from inside the message listener?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080319/a16f34a6/attachment.html>

From dialtone at gmail.com  Tue Mar 18 21:35:42 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 19 Mar 2008 04:35:42 +0100
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
	<87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
Message-ID: <c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>

On Wed, Mar 19, 2008 at 2:49 AM, Brian Baquiran <brianbaquiran at gmail.com> wrote:
> The API does not block when using an async message listener as I'm doing.
> Here's some example pyactivemq code that shows how an asynchronous message
> listener is registered:
>  http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py

This API actually blocks.

Just by looking at:
   conn = f.createConnection()

Which means that you can create a connection and immediately get the result.
This is blocking by any relevant definition of blocking.

Judging by the API the only difference between sync and async seems to
be related
to the type of producer involved. A Push producer is generally
considered async and
a pull producer is sync.

Looking further in the API of ActiveMQ-CPP, even though I'm not too
good with C++,
I can easily spot lines like the following:

Response* response = transport->request( &cmd );

which to me appears as totally synchronous and thus blocking,
a non blocking API would have been more like:

transport->request(&cmd, &onMessage);

The transport itself is implemented in the following way:

        // Start the polling thread.
        thread = new Thread( this );
        thread->start();

and its run method contains:

    try{

        while( !closed ){

            // Read the next command from the input stream.
            Command* command = reader->readCommand();

            // Notify the listener.
            fire( command );
        }

    }

Considering all of this you should probably use this from deferToThread.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From dave at krondo.com  Tue Mar 18 22:11:02 2008
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 18 Mar 2008 21:11:02 -0700
Subject: [Twisted-Python] helping out
Message-ID: <47E09256.4020302@krondo.com>

Hello all, it was great to meet so many of you in person at Pycon,
I only wish I had come to an earlier one!

I'm glad I was able to plug Twisted at Pycon. I do need to set the
record straight, as I only realized today that I got a bit confused
in my numbers. During my plug, I mentioned one of our twisted servers
had served 100 billion queries. I'm afraid it was actually 1 billion,
not one hundred. I think I was conflating it with another metric we
were touting from our booth for recruiting purposes. Either that, or
I'm just a nitwit :) Sorry for the mistake, once they get past a
certain number of zeroes, I kind of lose track.

The bottom line was, we were really impressed with Twisted's ability
to make making robust servers easy.

I'm going to try to help out with twisted.enterprise some more.
I think the most pressing issue there is the need to deprecate most
everything outside of adbapi? Anyway, I'll start reading up on the
new development model and hop on irc pretty soon.

later,
dave



From brianbaquiran at gmail.com  Tue Mar 18 22:23:57 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 12:23:57 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>
References: <47DFAFCC.30106@gmail.com>	<1205846171.21090.2.camel@localhost.localdomain>	<87ca9d700803181849ya42f392r11068948bf95141c@mail.gmail.com>
	<c893b8530803182035p3e6b432ar154b7670e69f6955@mail.gmail.com>
Message-ID: <47E0955D.3080506@gmail.com>

Valentino Volonghi wrote:
> On Wed, Mar 19, 2008 at 2:49 AM, Brian Baquiran <brianbaquiran at gmail.com> wrote:
>> The API does not block when using an async message listener as I'm doing.
>> Here's some example pyactivemq code that shows how an asynchronous message
>> listener is registered:
>>  http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py
> 
> This API actually blocks.
> 
> Just by looking at:
>    conn = f.createConnection()
> 
> Which means that you can create a connection and immediately get the result.
> This is blocking by any relevant definition of blocking.
> 
> Considering all of this you should probably use this from deferToThread.

I was able to fix my original problem by using reactor.callFromThread() 
from the onMessage callback, so it does look like there is some 
threading going on. I'll look where deferToThread should be applied.

Thanks Valentino. I really appreciate your looking at the code.

Brian



From brianbaquiran at gmail.com  Tue Mar 18 22:25:02 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Wed, 19 Mar 2008 12:25:02 +0800
Subject: [Twisted-Python] pyactivemq interfering with Twisted?
In-Reply-To: <1205846171.21090.2.camel@localhost.localdomain>
References: <47DFAFCC.30106@gmail.com>
	<1205846171.21090.2.camel@localhost.localdomain>
Message-ID: <47E0959E.1050705@gmail.com>

Itamar Shtull-Trauring wrote:
> On Tue, 2008-03-18 at 20:04 +0800, Brian Baquiran wrote:
> 
>> Could the part of pyactivemq (or ActiveMQ-CPP) that handles asynchronous 
>> consumption of messages be interfering somehow with Twisted's event loop 
>> and causing this problem?
> 
> Quite possibly; if the API you're calling is blocking then Twisted's
> event loop won't be able to run. If that is the case, either figure out
> if you can integrate the library with Twisted's event loop, or use
> twisted.internet.threads.deferToThread or something similar to call the
> blocking API.

Hi Itamar,
Thanks a lot for the tip. I just used reactor.callFromThread() from 
inside the onMessage() callaback to execute the twisted code in the 
Twisted event loop instead of in the pyactivemq event loop and it seems 
to have solved the problem.

Regards,
Brian



From glyph at divmod.com  Wed Mar 19 02:22:56 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:22:56 -0000
Subject: [Twisted-Python] Re: Twisted 8.0.0pre1
In-Reply-To: <w1b1w68berr.fsf@thyra03.daimi.au.dk>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<w1b1w68berr.fsf@thyra03.daimi.au.dk>
Message-ID: <20080319082256.21558.1801099190.divmod.xquotient.8147@joule.divmod.com>


On 18 Mar, 08:46 am, mg at daimi.au.dk wrote:
>"Christopher Armstrong" <radix at twistedmatrix.com> writes:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>>
>>Please test and provide feedback.
>
>I tried deleting my Twisted 2.5.0 install and installed the
>prerelease, and it works fine with the unit tests for my VIFF project.

Thank you for this very specific report of a test! :).



From eburus at gmail.com  Wed Mar 19 02:24:59 2008
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 19 Mar 2008 11:24:59 +0300
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <frp1nl$uqc$1@ger.gmane.org>
References: <E1JbHkz-0000Xo-F6@cube.twistedmatrix.com>	<650656.69998.qm@web34201.mail.mud.yahoo.com>	<44dddf400803180840u72d2f71ayc8238160bea3ef68@mail.gmail.com>
	<frp1nl$uqc$1@ger.gmane.org>
Message-ID: <47E0CDDB.10309@gmail.com>

I have slides and "teach" material. Overview of twisted  engine and two
projects for the theoretical examples.
But it's russian version only =).  It was presented on the Exception #07
conference in Kiev 15.03.2008.

http://exception.org.ua/events/exception-conference-07/ ( where are
technical problems =( )

All materials will be shared on my web page http://burus.org as soon as
possible.

Steve Holden wrote:
> John Wells wrote:
>> Are the slides for the presentation available anywhere? Also, any
>> chance a video was captured?
>>
>> Thanks,
>> John
>
> There were no slides (since the whole point of the "presentation" was
> to receive information from the audience I had nothing to "present").
> Unfortunately the session wasn't recorded.
>
> Guess you just had to be there, sorry.
>
> regards
>  Steve
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080319/c9807f4e/attachment.html>

From glyph at divmod.com  Wed Mar 19 02:34:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:34:11 -0000
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318141404.GA19253@vidar.dreamhost.com>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<20080318141404.GA19253@vidar.dreamhost.com>
Message-ID: <20080319083411.21558.1726373712.divmod.xquotient.8152@joule.divmod.com>


On 18 Mar, 02:14 pm, dripton at ripton.net wrote:
>On 2008.03.17 23:38:28 -0500, Christopher Armstrong wrote:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>
>Cool.
>
>Why the big version number bump?

We're switching over to a year-based version number: it's 2008, hence 
Twisted 8.  Each release in 2008 will have a version related to the 
number of releases in the year; i.e. the next release, if we get it out 
in 2008, will be 8.1.
>"Twisted 8.0, with over 3x as much version number as Twisted 2.5."

Well, yes.  The other reason is that it's been a very long time since 
the last release, and a lot has been done.
>>Please test and provide feedback.
>
>My tests still pass, FWIW.

Thank you very much!  I hope that lots of Twisted users will do this :-D



From glyph at divmod.com  Wed Mar 19 02:56:57 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 08:56:57 -0000
Subject: [Twisted-Python] helping out
In-Reply-To: <47E09256.4020302@krondo.com>
References: <47E09256.4020302@krondo.com>
Message-ID: <20080319085657.21558.1842737354.divmod.xquotient.8174@joule.divmod.com>


On 04:11 am, dave at krondo.com wrote:
>Hello all, it was great to meet so many of you in person at Pycon,
>I only wish I had come to an earlier one!
>
>I'm glad I was able to plug Twisted at Pycon. I do need to set the
>record straight, as I only realized today that I got a bit confused
>in my numbers. During my plug, I mentioned one of our twisted servers
>had served 100 billion queries. I'm afraid it was actually 1 billion,

Aw man, *only* a billion? ;-)
>not one hundred. I think I was conflating it with another metric we
>were touting from our booth for recruiting purposes. Either that, or
>I'm just a nitwit :) Sorry for the mistake, once they get past a
>certain number of zeroes, I kind of lose track.

It was, nevertheless, a dramatic mistake.  The point still holds.
>The bottom line was, we were really impressed with Twisted's ability
>to make making robust servers easy.

Thanks.
>I'm going to try to help out with twisted.enterprise some more.
>I think the most pressing issue there is the need to deprecate most
>everything outside of adbapi? Anyway, I'll start reading up on the
>new development model and hop on irc pretty soon.

I'm pretty sure there are also some edge-cases that aren't handled 
completely correctly in adbapi, although clearly they don't affect 
production systems terribly much :).  Just have a look through the 
bugtracker for enterprise issues.

And, thanks a _lot_.  Even with the resources the foundation will be 
providing us, we're still going to have a shortage of qualified helpers 
:).



From glyph at divmod.com  Wed Mar 19 04:02:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 10:02:17 -0000
Subject: [Twisted-Python] Twisted 8.0.0pre1
In-Reply-To: <20080318082829.GA19592@ik.nu>
References: <60ed19d40803172138y55ae67b7w9dc2a374b9f441a8@mail.gmail.com>
	<20080318082829.GA19592@ik.nu>
Message-ID: <20080319100217.21558.1638418164.divmod.xquotient.8178@joule.divmod.com>


On 18 Mar, 08:28 am, twisted at ralphm.ik.nu wrote:
>On Mon, Mar 17, 2008 at 11:38:28PM -0500, Christopher Armstrong wrote:
>>There is a pre-release of Twisted 8.0 available at
>>http://twistedmatrix.com/users/radix/DIST/
>>
>>Please test and provide feedback.
>
>When are you planning to do a final release from this, and is there
>still time to get some odd little bugs fixed in trunk that could end up
>in this release still?

One of the major objectives Chris talked about for this release was 
making releases much easier to do.  If there are more odds and ends 
you'd like to see in a release, let's do another release soon :).  (It 
won't be another year and a half.)



From andrewfr_ice at yahoo.com  Wed Mar 19 08:58:46 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 19 Mar 2008 07:58:46 -0700 (PDT)
Subject: [Twisted-Python] Stackless / Twisted Integration Paper
Message-ID: <621510.44829.qm@web34208.mail.mud.yahoo.com>

Hi Folks:

I have uploaded a copy of "Adventures in Stackless
Python/Twisted Integration."

http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures.pdf

In the days and weeks to come I will make minor
corrections.

Although most of the arguments and code actually
appear peppered throughout the Stackless and Twisted
mailing list (too many people to thank for their
help), I will be re-writing some of the examples to
make them clearer.

I also plan to expand the slides to cover stuff like
pickling which I touch on but didn't have time to
cover.

If anyone attended the talks, I would love to hear,
for better or worse, feedback.

And once again, I thank everyone that helped me.

Thank you,
Andrew Francis



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From coder_gus at lavabit.com  Wed Mar 19 09:03:31 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Wed, 19 Mar 2008 17:03:31 +0200
Subject: [Twisted-Python] writing back to the connection is blocking my code
Message-ID: <47E12B43.1060105@lavabit.com>

Hi,
I have a server that tries to write back to several clients after it 
processed some that. I keep a hash with the currently connected clients 
(protocol instances) and write back to those as soon as the workers 
finish their job. The thing is I don't know where to call that 
instance.writeDataToClient() to not block my code. (I have tried in 
buildProtocol, but of course, it waits that another connection to be 
made until it writes back).

Thanks for All your help.




From andrewfr_ice at yahoo.com  Wed Mar 19 11:37:43 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 19 Mar 2008 10:37:43 -0700 (PDT)
Subject: [Twisted-Python] Re: [Stackless] Stackless / Twisted Integration
	Paper
In-Reply-To: <1205939743.13341.18.camel@localhost.localdomain>
Message-ID: <175069.96763.qm@web34204.mail.mud.yahoo.com>

Hello Guy:

--- Guy Hulbert <gwhulbert at eol.ca> wrote:

> Some of the fonts don't render in gpdf on a bare
> sarge workstation (just
> gnome and basic fonts -- debian release 3.1r7) ...
> in case you care.  I
> will probably try to find the right fonts and
> install them.

Yes I do care! I have to admit I am a dunce when it
comes to preparing slides - I would rather design and
write code.

Unfortunately I did the slides in Power Point but a
colleague did the diagrammes in Illustrator - worse
the colleague wasn't around when I detected problems -
all this caused immense headaches. I apologize.

> In some slides it is just the caps in the titles. 
> Any hint about the font would be useful ;-) 

If you have Acrobat, look at Document properties. On
mine I get:

The fonts are TrueType Arial, Calibri, and Courier New
(Embeded subset). 

When I have time, I will download OpenOffice and take
a look.

That said, thanks for looking at my paper.

Cheers,
Andrew







      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From glyph at divmod.com  Wed Mar 19 15:09:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 21:09:11 -0000
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
Message-ID: <20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>




On 18 Mar, 10:34 pm, nathan.stocks at gmail.com wrote:
>Can someone help me fill in the blanks here?  I've got an AMP
>connection up and running, I just want to:
>
>1) Make it so that AMP uses an SSL connection (which appears to be
>supported by AMP with StartTLS) -- I'm confident that it's only a
>matter of a little bit more time and experimentation for me to get
>this part working.

AMP already supports this, so you don't have anything to do...
>2) Make it so that both the client and the server only connect to each
>other and no one else.  I'm fairly certain this has something to do
>with making my own certificate authority and certificates.  I (with
>Google's help) am capable of figuring out all the OpenSSL commands to
>do the creating, signing, etc. of certificates, but I'm not sure what
>exactly needs to be done.

And this is really just learning about the OpenSSL APIs.
>Any pointers would be appreciated...

I would definitely look at the API docs for twisted.internet.ssl.  You 
don't even need to use openssl to generate and sign certificates 
(although currently some functionality is missing).

If you could give some explanation of the security properties you expect 
(how do you intend for the client and server to exchange information 
about who they "really" are?) then we might be able to offer more direct 
guidance.
>* Here's the docs I've found so far for twisted+ssl+amp:
>(There's a StartTLS in AMP, )
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.StartTLS.html
>(There's an ssl in twisted.internet)
>http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.html
>(The SSL examples use a ClientContextFactory...which is undocumented)
>http://twistedmatrix.com/projects/core/documentation/examples/echoserv_ssl.py
>http://twistedmatrix.com/projects/core/documentation/examples/echoclient_ssl.py
>http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.ClientContextFactory.html#getContext
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Wed Mar 19 15:20:02 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 19 Mar 2008 21:20:02 -0000
Subject: [Twisted-Python] writing back to the connection is blocking my
	code
In-Reply-To: <47E12B43.1060105@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
Message-ID: <20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>


On 03:03 pm, coder_gus at lavabit.com wrote:
>Hi,
>I have a server that tries to write back to several clients after it 
>processed some that. I keep a hash with the currently connected clients 
>(protocol instances) and write back to those as soon as the workers 
>finish their job. The thing is I don't know where to call that 
>instance.writeDataToClient() to not block my code. (I have tried in 
>buildProtocol, but of course, it waits that another connection to be 
>made until it writes back).

It sounds like you might be having a problem answered by this FAQ 
question:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTwistedtalktomultipleclientsconnecttomultipleservers
or perhaps the following one.
>
>Thanks for All your help.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From nathan.stocks at gmail.com  Wed Mar 19 20:14:09 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 19 Mar 2008 20:14:09 -0600
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
Message-ID: <96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>

On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>  If you could give some explanation of the security properties you expect
>  (how do you intend for the client and server to exchange information
>  about who they "really" are?) then we might be able to offer more direct
>  guidance.

The security properties that I want are:

1) My client and my server refuse to establish SSL (or any other type
of) connections with anybody but each other.
2) My client and server do establish SSL connections with each other.

Pretty simple in concept, really.  I'll go read the API docs like you
suggested...

~ Nathan



From glyph at divmod.com  Wed Mar 19 20:44:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 20 Mar 2008 02:44:58 -0000
Subject: [Twisted-Python] Teach Me Twisted Redux
In-Reply-To: <frjsm6$ekf$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
Message-ID: <20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>


This session was really fabulous, and it's unfortunate that Steve will 
be a Twisted expert in short order, making it a once-in-a-lifetime 
opportunity.

It was probably the high point of PyCon for me this year as well. 
Thanks a lot for doing it.  I really felt like having a presenter who 
wasn't afraid to admit that they didn't know what they were doing either 
really reduced the impression that Twisted is this impossibly hard thing 
to learn quite a bit.  And we really covered a fair amount of material.

Next year, we should definitely have more regular Twisted talks; I'd say 
that someone else should do another "teach me twisted" session, but I 
don't know if anyone else has the raw charisma and pedagogical expertise 
that Mr. Holden combined with Twisted ignorance to make this session so 
great :).

On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
>I'd just like to thank the Twisted community for their support in 
>yesterday's "Teach Me Twisted" Open Space session. To see the room 
>still half-full of people talking animatedly about Python twenty 
>minutes after the session ended was a great tribute to how interested 
>people are in making Twisted work for them, and a reminder of what 
>PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
>
>Couldn't have done it without you,guys, thanks a million.
>
>regards
>  Steve
>--
>Steve Holden        +1 571 484 6266   +1 800 494 3119
>Holden Web LLC              http://www.holdenweb.com/
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From coder_gus at lavabit.com  Thu Mar 20 02:23:16 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Thu, 20 Mar 2008 10:23:16 +0200
Subject: [Twisted-Python] writing back to the connection is blocking my
	code
In-Reply-To: <20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
Message-ID: <47E21EF4.2060408@lavabit.com>

Ok, this link answered a few of my questions (stupid of me that I 
haven't looked on that before I posted), but my question still stands: 
how do I send data to a client whenever I want from wherever I want and 
that data to be send as fast as possible, without the code waiting for 
the reactor to answer to some events? Sorry for being too pushy but I am 
not getting the picture right and I really want to get what's going on 
with this.

Thanks.

glyph at divmod.com wrote:
>
> On 03:03 pm, coder_gus at lavabit.com wrote:
>> Hi,
>> I have a server that tries to write back to several clients after it 
>> processed some that. I keep a hash with the currently connected 
>> clients (protocol instances) and write back to those as soon as the 
>> workers finish their job. The thing is I don't know where to call 
>> that instance.writeDataToClient() to not block my code. (I have tried 
>> in buildProtocol, but of course, it waits that another connection to 
>> be made until it writes back).
>
> It sounds like you might be having a problem answered by this FAQ 
> question:
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTwistedtalktomultipleclientsconnecttomultipleservers 
>
> or perhaps the following one.
>>
>> Thanks for All your help.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________ 
>
> Click for quotes on adjustable mortgages.
> http://ads.lavabit.com/fc/REAK6bkMOiFnNX2sGS485h9324PbTgrM9xKyt0ZhxqimEnvQxvSm9X/ 
>
> ____________________________________________________________________________________ 
>




From steve at holdenweb.com  Thu Mar 20 05:33:40 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 07:33:40 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
Message-ID: <47E24B94.7090400@holdenweb.com>

glyph at divmod.com wrote:
> 
> This session was really fabulous, and it's unfortunate that Steve will 
> be a Twisted expert in short order, making it a once-in-a-lifetime 
> opportunity.
> 
> It was probably the high point of PyCon for me this year as well. Thanks 
> a lot for doing it.  I really felt like having a presenter who wasn't 
> afraid to admit that they didn't know what they were doing either really 
> reduced the impression that Twisted is this impossibly hard thing to 
> learn quite a bit.  And we really covered a fair amount of material.
> 
As I believe I mentioned early on, one of the issues is that the Twisted 
core developers are so smart (I believe I may have used the phrase 
"brains the size of planets"), and so knowledgeable about Twisted, that 
it's difficult sometimes to get a 90% answer out of them. This was 
particularly the case with Itamar, whom I lambasted quite mercilessly 
(and whom I therefore owe a public apology: sorry, Itamar) when he tried 
to complete all the corner cases after a slightly inaccurate statement 
on my part that was perfectly good enough for a learner.

Think about driving a car: "never use the brake and the accelerator 
together" is a good rule for learners, and it isn't helpful to then have 
someone say "except if you want to put the car in a 180% power slide" -- 
not because it isn't true, but because you definitely need more than a 
couple of days' experience before undertaking that maneuver (God, 
American really mangles that word), and most drivers will never need it 
in a lifetime.

I left the session feeling we had accomplished hardly anything, but was 
persuaded afterwards that wasn't the case.

One of the tragedies of the session was due to the blue screen crash of 
my own computer I have absolutely nothing left of the code we developed. 
I had hopes that one or two blog entries might appear to allow me to 
lift it from those attending, but so far the success of the session is a 
closely guarded secret among PyCon attendees (thought it's been 
gratifying to have people saying "I wished I'd gone to that").

If someone can provide me with the code I will undertake to produce some 
sort of blog entry, and this might further publicize Twisted. Never 
underestimate the value of marketing: the Twisted community is a subset 
of the Python community, and it's my particular vanity that PyCon has 
helped to increase the Python community. It's important to keep feeding 
introductory material into the process as growth continues, because 
typically 50% of those present are likely to be newbies.

In point of fact this type of session *might* work with pretended 
ignorance, but it wouldn't have the same honesty, and I think that 
honesty *could* make the learning experience more powerful. Anyway the 
PyCon organizers list seems to have got fired up about it, so there's a 
good chance that there'll be more "Teach Me ..." sessions next year.

> Next year, we should definitely have more regular Twisted talks; I'd say 
> that someone else should do another "teach me twisted" session, but I 
> don't know if anyone else has the raw charisma and pedagogical expertise 
> that Mr. Holden combined with Twisted ignorance to make this session so 
> great :).
> 
Don't forget the whisky ...

I hope this actually marks my entrance proper into the Twisted 
community, to whom I owe a great debt for the success of PyCon. Your 
initial energy and enthusiasm (as I remember it, PyCon represented the 
first major opportunity for the Twisted team to have a more or less 
all-hands meeting) was responsible in large part for shaping the PyCon 
experience, to the extent that the spirit lived on even after the 
Twisted contingent departed due to ... well, I guess you guys just got 
busy with DivMod and the like. I missed you. It goes to show, we often 
don't appreciate the positive influence we have on events. But you are 
more than welcome, consider it payback and pass it on.

What we possibly need first of all is for someone to do a "Teach Me 
Teach Me" in the tutorial track, with myself and a number of the more 
experienced trainer types as the "subject matter experts". These things 
are always one-off in nature and it's unrealistic to expect that they 
will all have the same charm as "Teach Me Twisted" did this year for all 
the reasons I mention above, but if it gets information out more 
effectively about "difficult" topics it's probably worth a try if we can 
find someone to facilitate them.

regards
  Steve


> On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
>> I'd just like to thank the Twisted community for their support in 
>> yesterday's "Teach Me Twisted" Open Space session. To see the room 
>> still half-full of people talking animatedly about Python twenty 
>> minutes after the session ended was a great tribute to how interested 
>> people are in making Twisted work for them, and a reminder of what 
>> PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
>>
>> Couldn't have done it without you,guys, thanks a million.
>>
>> regards
>>  Steve




From faraz.khan at emergen.biz  Thu Mar 20 05:36:23 2008
From: faraz.khan at emergen.biz (Faraz Khan)
Date: Thu, 20 Mar 2008 16:36:23 +0500
Subject: [Twisted-Python] SetUID per XML RPC client
Message-ID: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>

Dear all,
What Im trying to do is the following. Please suggest whether this  
makes sense or not (I dont think it does- so am asking for  
suggestions!):

1. I have a XML RPC Server using xmlrpc.XMLRPC
2. Clients connect to it using SSL (am using reactor.listenSSL with a  
custom context factory)

3. This server (or agent) is being used for sys admin tasks. I want to  
connect, auth and then be able to do various sys admin tasks which the  
XMLRPC server lets them do.

4. What i wish to be able to do is that a UID/GID is set (based on  
their auth credentials) for that particular request.

I personally think this is impossible to do with threads. I have done  
something simliar using Fork & C though.

Doing os.setuid works but (obviously) changes the main process's UID  
which is not what I want.

Any advice would be highly appreciated.


-- 
Faraz R Khan
Chief Architect
Emergen Consulting Pvt Ltd
www.emergen.biz




From tdickenson at geminidataloggers.com  Thu Mar 20 09:32:02 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 20 Mar 2008 15:32:02 +0000
Subject: [Twisted-Python] Re: writing back to the connection is blocking my
	code
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com>
Message-ID: <fru01j$tb$1@ger.gmane.org>

coder_gus wrote:

> Ok, this link answered a few of my questions (stupid of me that I
> haven't looked on that before I posted), but my question still stands:
> how do I send data to a client whenever I want from wherever I want and
> that data to be send as fast as possible,

The code in the faq that glyph pointed you to will do what you want, if I
understand your requirements correctly. Heres the link again:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

> without the code waiting for 
> the reactor to answer to some events?

Your transmission *might* have to wait if the operating system transmit
buffers are already full, and, if so, the reactor is the mechanism which
means your new data can wait without blocking the whole process.






From glenn at tarbox.org  Thu Mar 20 09:36:57 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Thu, 20 Mar 2008 08:36:57 -0700
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E24B94.7090400@holdenweb.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
Message-ID: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>



On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
> glyph at divmod.com wrote:
> As I believe I mentioned early on, one of the issues is that the Twisted 
> core developers are so smart (I believe I may have used the phrase 
> "brains the size of planets"), and so knowledgeable about Twisted, that 
> it's difficult sometimes to get a 90% answer out of them. This was 
> particularly the case with Itamar, whom I lambasted quite mercilessly 
> (and whom I therefore owe a public apology: sorry, Itamar) when he tried 
> to complete all the corner cases after a slightly inaccurate statement 
> on my part that was perfectly good enough for a learner.

There is a great deal of anecdotal evidence that great players make poor
coaches.  

One of the biggest (glaring?) issues with Twisted is the abysmal state
of the documentation (none) making the code the best source... and
history is replete with the massive successes that approach has borne...

What documentation there is includes: "If you need to call a method that
returns a deferred within your callback chain, just return that
deferred, and the result of the secondary deferred's processing chain
will become the result that gets passed to the next callback of the
primary deferreds processing chain"

Now, the above is true and clear to those of us who know twisted... but
I've used that quote for levity... its simply incomprehensible... but
absolutely critical to understanding the power of twisted.  I'd say that
the current state of twisted documentation is in part represented by
that quote... and much of the reason twisted gets thrown out early as an
option.

(yet this same group complains that Git is too complex to be used for
source code control... even though its core architecture eclipses the
alternatives being used and considered...)

Clearly, the issues Twisted addresses are non-trivial requiring an
appreciation of the problem space before considering Twisted as a
solution (you gotta know there's a question before someone tells you the
answer)... unfortunately, the barrier to Twisted entry at that point
makes most walk away.  I've seen lots of threads concluding, simply,
that twisted looked interesting but was simply too dense to even get
started with... so, they go ahead and roll their own solution,
inevitably identifying the issues which form heart of the twisted
architecture, but being too far along to refactor.  And away we go.

Exacerbating the problem is the state of the twisted code base.  The
core itself is clean, high performance and great.  But, there's a large
percentage of the code base in various states of decay.  Some clearly
marked as no longer supported... but most simply marked "undocumented"
and much of the rest necessitating querying #twisted, hopefully at a
time when someone is available to answer questions... twisted-web
appears to be worse from a documentation perspective and I'm one of
those who chose to "just walk away" when a web framework was necessary.

For example, I've been playing with Twisted for a while now and only
recently stumbled upon AMP... perhaps thats a personal issue and I do
have fundamental intelligence limitations... but perhaps its
illustrative.

> What we possibly need first of all is for someone to do a "Teach Me 
> Teach Me" in the tutorial track, with myself and a number of the more 
> experienced trainer types as the "subject matter experts". These things 
> are always one-off in nature and it's unrealistic to expect that they 
> will all have the same charm as "Teach Me Twisted" did this year for all 
> the reasons I mention above, but if it gets information out more 
> effectively about "difficult" topics it's probably worth a try if we can 
> find someone to facilitate them.

What we need is a core documentation / presentation / communication
strategy to communicate what twisted is and a vehicle to support
education.  Handling conferences is a degenerate case which requires
extension with malt beverages.

> 
> regards
>   Steve
> 
> 
> > On 16 Mar, 07:33 pm, steve at holdenweb.com wrote:
> >> I'd just like to thank the Twisted community for their support in 
> >> yesterday's "Teach Me Twisted" Open Space session. To see the room 
> >> still half-full of people talking animatedly about Python twenty 
> >> minutes after the session ended was a great tribute to how interested 
> >> people are in making Twisted work for them, and a reminder of what 
> >> PyCon is all about. I haven't ever enjoyed any PyCon activity so much.
> >>
> >> Couldn't have done it without you,guys, thanks a million.
> >>
> >> regards
> >>  Steve
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Glenn H. Tarbox, PhD
206-494-0819
glenn at tarbox.org




From lists at sourceillustrated.com  Thu Mar 20 12:08:24 2008
From: lists at sourceillustrated.com (John Wells)
Date: Thu, 20 Mar 2008 14:08:24 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>

On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
> One of the biggest (glaring?) issues with Twisted is the abysmal state
> of the documentation (none) making the code the best source... and
> history is replete with the massive successes that approach has borne...
>
>  Clearly, the issues Twisted addresses are non-trivial requiring an
>  appreciation of the problem space before considering Twisted as a
>  solution (you gotta know there's a question before someone tells you the
>  answer)... unfortunately, the barrier to Twisted entry at that point
>  makes most walk away.  I've seen lots of threads concluding, simply,
>  that twisted looked interesting but was simply too dense to even get
>  started with... so, they go ahead and roll their own solution,
>  inevitably identifying the issues which form heart of the twisted
>  architecture, but being too far along to refactor.  And away we go.
>
>  Exacerbating the problem is the state of the twisted code base.  The
>  core itself is clean, high performance and great.  But, there's a large
>  percentage of the code base in various states of decay.  Some clearly
>  marked as no longer supported... but most simply marked "undocumented"
>  and much of the rest necessitating querying #twisted, hopefully at a
>  time when someone is available to answer questions... twisted-web
>  appears to be worse from a documentation perspective and I'm one of
>  those who chose to "just walk away" when a web framework was necessary.
>
>  For example, I've been playing with Twisted for a while now and only
>  recently stumbled upon AMP... perhaps thats a personal issue and I do
>  have fundamental intelligence limitations... but perhaps its
>  illustrative.

This is indeed a shame. I come to Twisted an experienced Ruby and Java
developer in need for a event-driven networking framework. I had taken
a close look at ruby's EventMachine, which is modeled after Twisted,
but was strongly leaning towards Twisted *for* the documentation (and
the apparent stability and age of the project). At the very least,
Twisted has an Oreilly book and docs on the website (EM only provides
rdoc).

So, I bought the Oreilly book and Python in a Nutshell. I've made it
through the Nutshell book (I spent 3 months doing python back in 2003,
so it's not completely new to me). My next steps include the book
first and online docs second...but now am I to understand that both
are useless? Should I just dive into the code instead?

Here's to hoping at least the concepts are introduced effectively...

John



From drew.smathers at gmail.com  Thu Mar 20 12:21:00 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 14:21:00 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>

On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>
>
>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>
> > glyph at divmod.com wrote:
>  > As I believe I mentioned early on, one of the issues is that the Twisted
>  > core developers are so smart (I believe I may have used the phrase
>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>  > it's difficult sometimes to get a 90% answer out of them. This was
>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>  > to complete all the corner cases after a slightly inaccurate statement
>  > on my part that was perfectly good enough for a learner.
>
>  There is a great deal of anecdotal evidence that great players make poor
>  coaches.
>
>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>  of the documentation (none) making the code the best source... and
>  history is replete with the massive successes that approach has borne...
>

I think "abysmal" is really an overstatement. A lot of external
documentation for Twisted exists
(http://twistedmatrix.com/projects/core/documentation/howto/index.html)
- though some of it is indeed too esoteric for the casual beginner.
The twisted team realizes this and they are improving the
documentation and setting high standards for documenting new additions
to the library - take the initial doc string for amp as an example.

>  (yet this same group complains that Git is too complex to be used for
>  source code control... even though its core architecture eclipses the
>  alternatives being used and considered...)

Tangential, but I know of at least two Twisted developers who are
using Git.  The evaluation of version control tools usually includes
whether or not the tool works across platforms well - Git does not
eclipse the alternatives in this category.

>  For example, I've been playing with Twisted for a while now and only
>  recently stumbled upon AMP... perhaps thats a personal issue and I do
>  have fundamental intelligence limitations... but perhaps its
>  illustrative.

Agreed, AMP needs some external documentation alongside PB in the main
documentation page.  Maybe I'll contribute a document myself - unless
someone else is already working on such? -, since I find myself using
amp a lot these days.  There are instances when you want access to
remote objects where PB (or the newer foolscap) are great for - but
for functional command-dispatch based RPC, amp really shines.

>  What we need is a core documentation / presentation / communication
>  strategy to communicate what twisted is and a vehicle to support
>  education.  Handling conferences is a degenerate case which requires
>  extension with malt beverages.

Which takes time (writing good documentation is arguably harder than
writing good code) - and community support.  And time is money ... so
contribute to Twisted so they can hire more documentation experts :-)

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From phil at bubblehouse.org  Thu Mar 20 12:27:19 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 20 Mar 2008 14:27:19 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>

On Mar 20, 2008, at 11:36 AM, Glenn H Tarbox, PhD wrote:
> One of the biggest (glaring?) issues with Twisted is the abysmal state
> of the documentation (none) making the code the best source... and
> history is replete with the massive successes that approach has  
> borne...
>
> What documentation there is includes: "If you need to call a method  
> that
> returns a deferred within your callback chain, just return that
> deferred, and the result of the secondary deferred's processing chain
> will become the result that gets passed to the next callback of the
> primary deferreds processing chain"
>
> Now, the above is true and clear to those of us who know twisted...  
> but
> I've used that quote for levity... its simply incomprehensible... but
> absolutely critical to understanding the power of twisted.  I'd say  
> that
> the current state of twisted documentation is in part represented by
> that quote... and much of the reason twisted gets thrown out early  
> as an
> option.

I think there's a lot of truth to this, but you can say the same thing  
about a vast number of open source projects. Not that it's an excuse,  
of course, but in most of the projects I can think of that have  
sufficient documentation, such a thing didn't occur until the software  
reached a critical mass of users.

The Twisted community is growing all the time, but it's still just a  
part of the Python community, which despite a number of high-profile  
Python projects, is still eclipsed by Java, Perl and (*shudder*) PHP.

As for the complexity of docstrings, I don't think anyone should be  
considering source code documentation equivalent to a formal tutorial,  
so I think the brevity (and assumption of existing knowledge) is  
pretty much warranted in that case.

> Clearly, the issues Twisted addresses are non-trivial requiring an
> appreciation of the problem space before considering Twisted as a
> solution (you gotta know there's a question before someone tells you  
> the
> answer)... unfortunately, the barrier to Twisted entry at that point
> makes most walk away.  I've seen lots of threads concluding, simply,
> that twisted looked interesting but was simply too dense to even get
> started with... so, they go ahead and roll their own solution,
> inevitably identifying the issues which form heart of the twisted
> architecture, but being too far along to refactor.  And away we go.

I completely agree with the first half of this paragraph, but I have a  
different perspective on the second.

I've been lurking on this mailing list for years, and what I see most  
often is people who do not even begin to understand the concept of  
asynchronous networking. *This* is the barrier to entry, and it's  
almost always the culprit when a potential user walks away from Twisted.

IIRC, at the time Twisted Python was created, thread support in Python  
was simply awful. Threads were absolutely not a solution for dealing  
with multiple client connections to a server application, and the only  
alternative was asyncore.

As many of you may remember, asyncore was not great, but it *was*  
simple. Writing an asyncore application required knowledge of maybe  
three different classes, so while you were working on understanding  
asynchronous networking, you didn't have to deal with learning a vast  
new API.

The problem I've seen with various responses from seasoned Twisted  
devs to unexperienced developers is that one can only explain why you  
don't want to use any kind of long-blocking call so many times. After  
that, answers start becoming glib and/or overly terse, but I can't  
really blame anyone for that.

There are a few introductory tutorials on asynchronous programming,  
but we could always use more. I almost wonder if it would be  
worthwhile to have an asyncore tutorial as the first step, so that  
users can be exposed to asynchronous programming through a simpler  
model, run into some problems, and then see how Twisted makes them all  
go away.

> Exacerbating the problem is the state of the twisted code base.  The
> core itself is clean, high performance and great.  But, there's a  
> large
> percentage of the code base in various states of decay.  Some clearly
> marked as no longer supported... but most simply marked "undocumented"
> and much of the rest necessitating querying #twisted, hopefully at a
> time when someone is available to answer questions... twisted-web
> appears to be worse from a documentation perspective and I'm one of
> those who chose to "just walk away" when a web framework was  
> necessary.

I definitely agree with you about the state of Twisted.Web. I think  
the culprit here is not entirely a shortage of documentation. The real  
problem is Web2.

Now, I am the last person to discourage total or near-total rewrites  
of stable codebases. I know I personally have made the choice to  
rewrite projects instead of fixing the things that are broken on a  
number of occasions, but the creation of the Web2 initiative has  
caused endless problems when explaining Twisted's web features to new  
users.

There's lots of good stuff in Web2, but its existence as a half- 
supported, half-unreleased project causes much confusion to new users,  
probably because they always assume that it's a choice between  
Twisted.Web 1.0 and Twisted.Web 2.0, which is obviously not the case.

The web situation is also exacerbated in some ways by Nevow being a  
separate project under the Divmod banner. Much of the greatness of a  
Twisted web stack (IMO) comes from using it with Nevow, and in this  
AJAX-crazed world we live in, Nevow.Athena could easily sell the whole  
web layer to anyone working on a heavily AJAX-oriented project.

Finally, now imagine yourself as a web developer who has never had to  
deal with asynchronous programming, or Twisted, or Twisted.Web; you  
don't know whether you should use web2 or not, and you've never heard  
of Athena.

Obviously, there's good reasons why these various things have happened  
over the years, but I really think documentation isn't enough to fix  
organizational issues. And, given the state of flux (apparent or  
actual) in the Twisted.Web arena, who wants to write extensive  
documentation that will be completely broken in a year?

(We all know why that line of thought is wrong, but it doesn't make it  
any less common...)

> For example, I've been playing with Twisted for a while now and only
> recently stumbled upon AMP... perhaps thats a personal issue and I do
> have fundamental intelligence limitations... but perhaps its
> illustrative.

I have to say, I still don't really know what AMP is, and I've asked a  
bunch of times. Maybe I actually do know, by now, but I've certainly  
forgotten.

> What we need is a core documentation / presentation / communication
> strategy to communicate what twisted is and a vehicle to support
> education.  Handling conferences is a degenerate case which requires
> extension with malt beverages.

I really think that doing this properly requires a core team of people  
at least as large as the core Twisted dev group. They would need to  
have both a knack for documentation and an understanding of somewhat  
low-level networking concepts, *and* an ability to read source code  
effectively.

Now, I don't mean to point out obstacles and say it's hopeless, but I  
think this relates to the critical mass I was talking about earlier. I  
think Twisted just needs to reach that level where there's enough  
people who want to write documentation that it gets done.

Other attempts to force the issue haven't really met with much  
success; I know there used to be (perhaps still are) a few bounties  
out there on documentation, but not much has happened in that arena  
since then. (Personally, I am anti-bounty, as I feel -- perhaps  
irrationally so -- that it cheapens the hours and hours of work that  
people have done for free.)

I think the best way for us to address this in the short term is to  
really try to focus on group documentation. The current Trac wiki can  
barely be called collaborative; as a start why not transfer the  
Twisted docs into the wiki, and allow Trac users to modify and update  
this information?

Furthermore, considering the length some of the posts I see here, I'd  
like to suggest that if you're going to spend 30 minutes writing an  
email explaining some concept, why not write a mini tutorial about it  
instead?

Even if you just copy and paste the email you were going to send into  
the wiki, it's still a start, and others can work on it from there.

You know what they say about documentation being like sex; when it's  
good it's great, but when it's bad it's still better than nothing ;-)...

-phil



From steve at holdenweb.com  Thu Mar 20 12:31:53 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 14:31:53 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
Message-ID: <fruaj0$b8c$1@ger.gmane.org>

Drew Smathers wrote:
> On Thu, Mar 20, 2008 at 11:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>>
>>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>>
>>> glyph at divmod.com wrote:
>>  > As I believe I mentioned early on, one of the issues is that the Twisted
>>  > core developers are so smart (I believe I may have used the phrase
>>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>>  > it's difficult sometimes to get a 90% answer out of them. This was
>>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>>  > to complete all the corner cases after a slightly inaccurate statement
>>  > on my part that was perfectly good enough for a learner.
>>
>>  There is a great deal of anecdotal evidence that great players make poor
>>  coaches.
>>
>>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>>  of the documentation (none) making the code the best source... and
>>  history is replete with the massive successes that approach has borne...
>>
Just let me interject here that I believe the attributions above make it 
look like *I* wrote the above. It doesn't align with my understanding of 
Twisted's documentation, which in my assessment has improved immensely 
over five years.

Sure enough, Glenn H Tarbox was the perpetrator: throw your rotten fruit 
at him, not me. I'm a *friend* of Twisted, for Pete's sake.

regards
  Steve





From steve at holdenweb.com  Thu Mar 20 13:19:51 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 20 Mar 2008 15:19:51 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
Message-ID: <frudcv$mcs$1@ger.gmane.org>

Phil Christensen wrote:
> On Mar 20, 2008, at 11:36 AM, Glenn H Tarbox, PhD wrote:
>> One of the biggest (glaring?) issues with Twisted is the abysmal state
>> of the documentation (none) making the code the best source... and
>> history is replete with the massive successes that approach has borne...
>>
>> What documentation there is includes: "If you need to call a method that
>> returns a deferred within your callback chain, just return that
>> deferred, and the result of the secondary deferred's processing chain
>> will become the result that gets passed to the next callback of the
>> primary deferreds processing chain"
>>
Well, perhaps we can extend the conference session a little. [Drinks 
whisky].

So what you are saying is that a callback can find itself needing to 
return a result that is not yet immediately available. So it will return 
a deferred, whose callbacks and errbacks will be triggered in the 
standard way when the result becomes available ...

[Drinks more whisky]. Did Itamar write this? HELP!

>> Now, the above is true and clear to those of us who know twisted... but
>> I've used that quote for levity... its simply incomprehensible... but
>> absolutely critical to understanding the power of twisted.  I'd say that
>> the current state of twisted documentation is in part represented by
>> that quote... and much of the reason twisted gets thrown out early as an
>> option.
> 
I believe you've made your point, and one of the reasons I chose Twisted 
as the topic for the session was because the document doesn't show, if I 
may briefly channel Zed Shaw, how truly fucking amazing Twisted is.

The good news: this is a remediable deficiency.

The bad news: it has neither the glamor nor the appeal of hacking at the 
codeface.

Now you have a Foundation, consider having it sponsor (through the PSF 
is you aren't registered as a mentoring organization) someone to work on 
the docs in Summer of Code. Even trawling the mailing lists for useful 
material would yield some gems that could be used to improve things.

> I think there's a lot of truth to this, but you can say the same thing 
> about a vast number of open source projects. Not that it's an excuse, of 
> course, but in most of the projects I can think of that have sufficient 
> documentation, such a thing didn't occur until the software reached a 
> critical mass of users.
> 
> The Twisted community is growing all the time, but it's still just a 
> part of the Python community, which despite a number of high-profile 
> Python projects, is still eclipsed by Java, Perl and (*shudder*) PHP.
> 
Some things are simply better not documented.

> As for the complexity of docstrings, I don't think anyone should be 
> considering source code documentation equivalent to a formal tutorial, 
> so I think the brevity (and assumption of existing knowledge) is pretty 
> much warranted in that case.
> 
>> Clearly, the issues Twisted addresses are non-trivial requiring an
>> appreciation of the problem space before considering Twisted as a
>> solution (you gotta know there's a question before someone tells you the
>> answer)... unfortunately, the barrier to Twisted entry at that point
>> makes most walk away.  I've seen lots of threads concluding, simply,
>> that twisted looked interesting but was simply too dense to even get
>> started with... so, they go ahead and roll their own solution,
>> inevitably identifying the issues which form heart of the twisted
>> architecture, but being too far along to refactor.  And away we go.
> 
> I completely agree with the first half of this paragraph, but I have a 
> different perspective on the second.
> 
> I've been lurking on this mailing list for years, and what I see most 
> often is people who do not even begin to understand the concept of 
> asynchronous networking. *This* is the barrier to entry, and it's almost 
> always the culprit when a potential user walks away from Twisted.
> 
That's true, and I tried to get this across using the analogy of a GUI 
interface to explain the event-driven nature of Twisted. This was fine 
for people who had done GUI programming, but Glyph later gave me an 
email analogy which would work far better for those who hadn't.

One of the distinguishing features of *great* documentation is that it 
provides the same information in ways that make it accessible to 
different audiences.

> IIRC, at the time Twisted Python was created, thread support in Python 
> was simply awful. Threads were absolutely not a solution for dealing 
> with multiple client connections to a server application, and the only 
> alternative was asyncore.
> 
And Twisted is still a way better solution even now.

> As many of you may remember, asyncore was not great, but it *was* 
> simple. Writing an asyncore application required knowledge of maybe 
> three different classes, so while you were working on understanding 
> asynchronous networking, you didn't have to deal with learning a vast 
> new API.
> 
> The problem I've seen with various responses from seasoned Twisted devs 
> to unexperienced developers is that one can only explain why you don't 
> want to use any kind of long-blocking call so many times. After that, 
> answers start becoming glib and/or overly terse, but I can't really 
> blame anyone for that.
> 
Except those who failed to extract the kernel of these three thousand 
answers and incorporate it into the documentation. If it's a failure 
it's a common one, and it's distributed throughout the community.

> There are a few introductory tutorials on asynchronous programming, but 
> we could always use more. I almost wonder if it would be worthwhile to 
> have an asyncore tutorial as the first step, so that users can be 
> exposed to asynchronous programming through a simpler model, run into 
> some problems, and then see how Twisted makes them all go away.
> 
>> Exacerbating the problem is the state of the twisted code base.  The
>> core itself is clean, high performance and great.  But, there's a large
>> percentage of the code base in various states of decay.  Some clearly
>> marked as no longer supported... but most simply marked "undocumented"
>> and much of the rest necessitating querying #twisted, hopefully at a
>> time when someone is available to answer questions... twisted-web
>> appears to be worse from a documentation perspective and I'm one of
>> those who chose to "just walk away" when a web framework was necessary.
> 
> I definitely agree with you about the state of Twisted.Web. I think the 
> culprit here is not entirely a shortage of documentation. The real 
> problem is Web2.
> 
> Now, I am the last person to discourage total or near-total rewrites of 
> stable codebases. I know I personally have made the choice to rewrite 
> projects instead of fixing the things that are broken on a number of 
> occasions, but the creation of the Web2 initiative has caused endless 
> problems when explaining Twisted's web features to new users.
> 
> There's lots of good stuff in Web2, but its existence as a 
> half-supported, half-unreleased project causes much confusion to new 
> users, probably because they always assume that it's a choice between 
> Twisted.Web 1.0 and Twisted.Web 2.0, which is obviously not the case.
> 
> The web situation is also exacerbated in some ways by Nevow being a 
> separate project under the Divmod banner. Much of the greatness of a 
> Twisted web stack (IMO) comes from using it with Nevow, and in this 
> AJAX-crazed world we live in, Nevow.Athena could easily sell the whole 
> web layer to anyone working on a heavily AJAX-oriented project.
> 
> Finally, now imagine yourself as a web developer who has never had to 
> deal with asynchronous programming, or Twisted, or Twisted.Web; you 
> don't know whether you should use web2 or not, and you've never heard of 
> Athena.
> 
> Obviously, there's good reasons why these various things have happened 
> over the years, but I really think documentation isn't enough to fix 
> organizational issues. And, given the state of flux (apparent or actual) 
> in the Twisted.Web arena, who wants to write extensive documentation 
> that will be completely broken in a year?
> 
Nobody. If anyone offers, back away, smiling.

> (We all know why that line of thought is wrong, but it doesn't make it 
> any less common...)
> 
>> For example, I've been playing with Twisted for a while now and only
>> recently stumbled upon AMP... perhaps thats a personal issue and I do
>> have fundamental intelligence limitations... but perhaps its
>> illustrative.
> 
> I have to say, I still don't really know what AMP is, and I've asked a 
> bunch of times. Maybe I actually do know, by now, but I've certainly 
> forgotten.
> 
>> What we need is a core documentation / presentation / communication
>> strategy to communicate what twisted is and a vehicle to support
>> education.  Handling conferences is a degenerate case which requires
>> extension with malt beverages.
> 
> I really think that doing this properly requires a core team of people 
> at least as large as the core Twisted dev group. They would need to have 
> both a knack for documentation and an understanding of somewhat 
> low-level networking concepts, *and* an ability to read source code 
> effectively.
> 
> Now, I don't mean to point out obstacles and say it's hopeless, but I 
> think this relates to the critical mass I was talking about earlier. I 
> think Twisted just needs to reach that level where there's enough people 
> who want to write documentation that it gets done.
> 
> Other attempts to force the issue haven't really met with much success; 
> I know there used to be (perhaps still are) a few bounties out there on 
> documentation, but not much has happened in that arena since then. 
> (Personally, I am anti-bounty, as I feel -- perhaps irrationally so -- 
> that it cheapens the hours and hours of work that people have done for 
> free.)
> 
> I think the best way for us to address this in the short term is to 
> really try to focus on group documentation. The current Trac wiki can 
> barely be called collaborative; as a start why not transfer the Twisted 
> docs into the wiki, and allow Trac users to modify and update this 
> information?
> 
> Furthermore, considering the length some of the posts I see here, I'd 
> like to suggest that if you're going to spend 30 minutes writing an 
> email explaining some concept, why not write a mini tutorial about it 
> instead?
> 
[Is that the sun starting to brighten the night sky over the horizon?]

> Even if you just copy and paste the email you were going to send into 
> the wiki, it's still a start, and others can work on it from there.
> 
> You know what they say about documentation being like sex; when it's 
> good it's great, but when it's bad it's still better than nothing ;-)...
> 
And when you haven't had any for years you will even read the Twisted 
documentation ;-)

regards
  Steve




From warner at lothar.com  Thu Mar 20 13:45:45 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 20 Mar 2008 12:45:45 -0700
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
Message-ID: <20080320124545.7c2c9961@fluxx.allmydata.com>

On Wed, 19 Mar 2008 20:14:09 -0600
Nathan <nathan.stocks at gmail.com> wrote:

> The security properties that I want are:
> 
> 1) My client and my server refuse to establish SSL (or any other type
> of) connections with anybody but each other.
> 2) My client and server do establish SSL connections with each other.

For reference, this is almost exactly what Foolscap does. The server
registers an object and gets back a "FURL" which contains two cryptographic
values: the hash of the SSL certificate, and the per-object secret. You give
this FURL to the client by some out-of-band means (paste it into a config
file, perhaps). Then the client connects to the server over SSL, verifies the
certificate hash, sends the secret, and gets back a reference to the object.

The client will refuse to use any connection that has a different SSL
certificate. It will also refuse to use a non-SSL connection.

The part where the capability-oriented Foolscap model differs from your
stated properties is that the server makes no attempt to distinguish between
various clients. Any client which knows the FURL will be granted access to
the object that you've registered. To accomplish both of your goals, simply
don't reveal the FURL to anyone but your desired client. Unauthorized clients
will be able to make an SSL connection to the server but they won't know the
object secret and will be unable to access the object.

If you use Foolscap, you'll be working with objects and remote method calls,
rather than the single-endpoint model that AMP uses. This may be more
flexibility than you really need, but if you only publish one object and
always call a single method (perhaps called 'dispatch'), then you can program
in the same style. Of course, when you want to use multiple objects, pass
arbitrary reference graphs in arguments and responses, or allow third-party
introductions, Foolscap will be ready for you :).

http://foolscap.lothar.com/trac


cheers,
 -Brian



From nico at teknico.net  Thu Mar 20 14:56:33 2008
From: nico at teknico.net (Nicola Larosa)
Date: Thu, 20 Mar 2008 21:56:33 +0100
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <20080320205637.38A7112401B@slice.teknico.net>

Glenn H Tarbox wrote:
> (yet this same group complains that Git is too complex to be used for
> source code control... even though its core architecture eclipses the
> alternatives being used and considered...)

Seeing Pythonistas using git saddens me a little.

Mercurial is git done right.

-- 
Nicola Larosa - http://www.tekNico.net/

Not only is Vista + Office the most bloated desktop software stack
ever to emerge from Redmond, its system requirements are so out of
proportion with recent hardware trends that only the latest and
greatest from Intel or AMD can support its epically porcine girth.
 -- exo.blog research staff, November 2007





From drew.smathers at gmail.com  Thu Mar 20 14:39:36 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 16:39:36 -0400
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
Message-ID: <368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>

On Thu, Mar 20, 2008 at 4:38 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>
> On Thu, Mar 20, 2008 at 3:45 PM, Brian Warner <warner at lothar.com> wrote:
>  > On Wed, 19 Mar 2008 20:14:09 -0600
>  >  Nathan <nathan.stocks at gmail.com> wrote:
>  >
>  >  > The security properties that I want are:
>  >  >
>  >  > 1) My client and my server refuse to establish SSL (or any other type
>  >  > of) connections with anybody but each other.
>  >  > 2) My client and server do establish SSL connections with each other.
>  >
>  >  For reference, this is almost exactly what Foolscap does. The server
>  >  registers an object and gets back a "FURL" which contains two cryptographic
>  >  values: the hash of the SSL certificate, and the per-object secret. You give
>  >  this FURL to the client by some out-of-band means (paste it into a config
>  >  file, perhaps). Then the client connects to the server over SSL, verifies the
>  >  certificate hash, sends the secret, and gets back a reference to the object.
>  >
>  >  The client will refuse to use any connection that has a different SSL
>  >  certificate. It will also refuse to use a non-SSL connection.
>  >
>  >  The part where the capability-oriented Foolscap model differs from your
>  >  stated properties is that the server makes no attempt to distinguish between
>  >  various clients. Any client which knows the FURL will be granted access to
>  >  the object that you've registered. To accomplish both of your goals, simply
>  >  don't reveal the FURL to anyone but your desired client. Unauthorized clients
>  >  will be able to make an SSL connection to the server but they won't know the
>  >  object secret and will be unable to access the object.
>  >
>  >  If you use Foolscap, you'll be working with objects and remote method calls,
>  >  rather than the single-endpoint model that AMP uses. This may be more
>  >  flexibility than you really need, but if you only publish one object and
>  >  always call a single method (perhaps called 'dispatch'), then you can program
>  >  in the same style. Of course, when you want to use multiple objects, pass
>  >  arbitrary reference graphs in arguments and responses, or allow third-party
>  >  introductions, Foolscap will be ready for you :).
>  >
>
>  Now that foolscap has been brought up  ... since foolscap doesn't try
>  to poke through firewalls, there seems to be some deployment issues
>  when using this in say an MMO where you can't guarantee that
>  participants in the system will be able talk to each other directly
>  without tunneling through a central server.  The way foolscap works
>  (if I understand correctly), a server A can introduce a client B to C
>  by passing B the FURL to some object hosted in B's tub.  Is it sane
>  the best way to handle the scenario when B and C can't establish a
>  connection to each other (one or both are behind a NAT), but both
>  trust A to make a  proxy reference  to the other on the server and
>  simply route the conversation.  Does foolscap already support such
>  fall-back behavior for coping with firewalls?  Or does that break the
>  security model?
>

Woops, correction:

"server A can introduce a client B to C by passing B the FURL to some
object hosted in C's tub"

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From drew.smathers at gmail.com  Thu Mar 20 14:38:30 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 20 Mar 2008 16:38:30 -0400
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <20080320124545.7c2c9961@fluxx.allmydata.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
Message-ID: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>

On Thu, Mar 20, 2008 at 3:45 PM, Brian Warner <warner at lothar.com> wrote:
> On Wed, 19 Mar 2008 20:14:09 -0600
>  Nathan <nathan.stocks at gmail.com> wrote:
>
>  > The security properties that I want are:
>  >
>  > 1) My client and my server refuse to establish SSL (or any other type
>  > of) connections with anybody but each other.
>  > 2) My client and server do establish SSL connections with each other.
>
>  For reference, this is almost exactly what Foolscap does. The server
>  registers an object and gets back a "FURL" which contains two cryptographic
>  values: the hash of the SSL certificate, and the per-object secret. You give
>  this FURL to the client by some out-of-band means (paste it into a config
>  file, perhaps). Then the client connects to the server over SSL, verifies the
>  certificate hash, sends the secret, and gets back a reference to the object.
>
>  The client will refuse to use any connection that has a different SSL
>  certificate. It will also refuse to use a non-SSL connection.
>
>  The part where the capability-oriented Foolscap model differs from your
>  stated properties is that the server makes no attempt to distinguish between
>  various clients. Any client which knows the FURL will be granted access to
>  the object that you've registered. To accomplish both of your goals, simply
>  don't reveal the FURL to anyone but your desired client. Unauthorized clients
>  will be able to make an SSL connection to the server but they won't know the
>  object secret and will be unable to access the object.
>
>  If you use Foolscap, you'll be working with objects and remote method calls,
>  rather than the single-endpoint model that AMP uses. This may be more
>  flexibility than you really need, but if you only publish one object and
>  always call a single method (perhaps called 'dispatch'), then you can program
>  in the same style. Of course, when you want to use multiple objects, pass
>  arbitrary reference graphs in arguments and responses, or allow third-party
>  introductions, Foolscap will be ready for you :).
>

Now that foolscap has been brought up  ... since foolscap doesn't try
to poke through firewalls, there seems to be some deployment issues
when using this in say an MMO where you can't guarantee that
participants in the system will be able talk to each other directly
without tunneling through a central server.  The way foolscap works
(if I understand correctly), a server A can introduce a client B to C
by passing B the FURL to some object hosted in B's tub.  Is it sane
the best way to handle the scenario when B and C can't establish a
connection to each other (one or both are behind a NAT), but both
trust A to make a  proxy reference  to the other on the server and
simply route the conversation.  Does foolscap already support such
fall-back behavior for coping with firewalls?  Or does that break the
security model?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From pahan at xzrq.net  Thu Mar 20 15:19:46 2008
From: pahan at xzrq.net (Pavel Pergamenshchik)
Date: Thu, 20 Mar 2008 16:19:46 -0500
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
Message-ID: <7447a0ac0803201419k3921a26bhfedf555136b25297@mail.gmail.com>

On 3/20/08, Drew Smathers <drew.smathers at gmail.com> wrote:
> Now that foolscap has been brought up  ... since foolscap doesn't try
>  to poke through firewalls, there seems to be some deployment issues
>  when using this in say an MMO where you can't guarantee that
>  participants in the system will be able talk to each other directly
>  without tunneling through a central server.

As far as I know, there is no MMO that requires clients to talk
directly to each other. Are you writing such a thing? What benefit is
client-to-client communication is going to give you?



From andrewfr_ice at yahoo.com  Thu Mar 20 15:24:21 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 20 Mar 2008 14:24:21 -0700 (PDT)
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <E1JcQJI-0006BJ-Mt@cube.twistedmatrix.com>
Message-ID: <399189.25669.qm@web34203.mail.mud.yahoo.com>

Hi Folks:

>  Clearly, the issues Twisted addresses are
non->trivial requiring an appreciation of the problem
>space before considering Twisted as a solution (you
>gotta know there's a question before someone tells
you
> the  answer)... unfortunately, the barrier to
>Twisted entry at that point makes most walk away.
>I've seen lots of threads concluding, simply,
>that twisted looked interesting but was simply too
>dense to even get started with... so, they go ahead
>and roll their own solution,  inevitably identifying
>the issues which form heart of the twisted  
>architecture, but being too far along to refactor. 
>And away we go.

I have barely scratched the surface of Twisted - some
of my experiences and suggestions:

1) I found that Abe Fettig's book was a set of good
training wheels. Not as good as say, Richard Steven's
"UNIX Network Programming" that really saved my bacon
when I was first learning socket programming. However
Fettig's book is good in the sense that I can find a
concrete example (HTTP RequestHandler), modify it a
bit and it does something useful. Gets me going while
I learn. Newbies need to build confidence with quick
successes.

Now I go to Twisted documentation that makes far more
sense as I need much more technical detail about what
Twisted is doing.

If I had to alter Twisted documentation, I would make
much of the stuff do concrete things, like get a web
page. 

Perhaps I would, through surveys, pick the ten most
common things new developers want to do, and show
examples.

2) Pictures. Both Twisted documentation and Fettig's
book lack pictures. 

When I was looking for a bug involving a Twisted call
that never fired the callback, I took notes, peppered
Twisted with logging statements, used a debugger and
asked questions, lots of questions. The resulting
control flow picture was sufficiently different from
what I had in mind.

That said, I would be tempted to do a simple client
example and server example and illustrate the control
flow, carefully matching the drawings with the
illustrations. I know this is tough. 

Idioms:

Perhaps this is closely related with common examples,
but show common idioms. For example, how to call a
database or a web server from a request handler. Or
scheduling work with reactor.callLater or Tasks.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From ellisonbg.net at gmail.com  Thu Mar 20 15:28:27 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 20 Mar 2008 15:28:27 -0600
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
Message-ID: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>

On Thu, Mar 20, 2008 at 9:36 AM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
>
>
>  On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
>
> > glyph at divmod.com wrote:
>  > As I believe I mentioned early on, one of the issues is that the Twisted
>  > core developers are so smart (I believe I may have used the phrase
>  > "brains the size of planets"), and so knowledgeable about Twisted, that
>  > it's difficult sometimes to get a 90% answer out of them. This was
>  > particularly the case with Itamar, whom I lambasted quite mercilessly
>  > (and whom I therefore owe a public apology: sorry, Itamar) when he tried
>  > to complete all the corner cases after a slightly inaccurate statement
>  > on my part that was perfectly good enough for a learner.
>
>  There is a great deal of anecdotal evidence that great players make poor
>  coaches.
>
>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>  of the documentation (none) making the code the best source... and
>  history is replete with the massive successes that approach has borne...

I disagree with this evaluation.  While parts of Twisted could be
better documented, overall, it is pretty darn good for an open source
project that addresses a problem as difficult as asynchronous
networking.  How many open source projects have a book?

>  What documentation there is includes: "If you need to call a method that
>  returns a deferred within your callback chain, just return that
>  deferred, and the result of the secondary deferred's processing chain
>  will become the result that gets passed to the next callback of the
>  primary deferreds processing chain"
>
>  Now, the above is true and clear to those of us who know twisted... but
>  I've used that quote for levity... its simply incomprehensible... but
>  absolutely critical to understanding the power of twisted.  I'd say that
>  the current state of twisted documentation is in part represented by
>  that quote... and much of the reason twisted gets thrown out early as an
>  option.

Asynchronous networking is simply hard.  And Twisted has a very
sophisticated take on it.  Saying the problem is the documentation is
like someone saying "quantum mechanics is poorly documented...all that
talk about Hilbert spaces, eigenstates and superposition..."  It is
not poorly documented, it is simply hard and conceptually challenging.

Also, I think the proof is in the pudding.  Most people who really
need Twisted for their projects _are_ in fact able to learn it (for
the most part without reading the source code).  The documentation
can't be that bad.  Doesn't mean there is not room for improvement
though.


Brian



From coder_gus at lavabit.com  Thu Mar 20 16:50:27 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 00:50:27 +0200
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <fru01j$tb$1@ger.gmane.org>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>
Message-ID: <47E2EA33.9030400@lavabit.com>

Well, by default the Nagle algorithm is turned off so it should transmit 
the data asap. I don't think it's OS dependent.

Toby Dickenson wrote:
> coder_gus wrote:
>
>   
>> Ok, this link answered a few of my questions (stupid of me that I
>> haven't looked on that before I posted), but my question still stands:
>> how do I send data to a client whenever I want from wherever I want and
>> that data to be send as fast as possible,
>>     
>
> The code in the faq that glyph pointed you to will do what you want, if I
> understand your requirements correctly. Heres the link again:
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
>
>   
>> without the code waiting for 
>> the reactor to answer to some events?
>>     
>
> Your transmission *might* have to wait if the operating system transmit
> buffers are already full, and, if so, the reactor is the mechanism which
> means your new data can wait without blocking the whole process.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________
> Save hundreds on an Unsecured Loan - Click here.
> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/
> ____________________________________________________________________________________
>   




From warner at lothar.com  Thu Mar 20 16:59:17 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 20 Mar 2008 15:59:17 -0700
Subject: [Twisted-Python] SSL + AMP
In-Reply-To: <368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<20080320124545.7c2c9961@fluxx.allmydata.com>
	<368574aa0803201338k3972c2bax19462494c86512ae@mail.gmail.com>
	<368574aa0803201339l6ad46a9dh5401d64fdcb2bbf1@mail.gmail.com>
Message-ID: <20080320155917.676e87e8@fluxx.allmydata.com>


> >  Does foolscap already support such fall-back behavior for coping with
> >  firewalls? Or does that break the security model?

Not yet, and yes.

> "server A can introduce a client B to C by passing B the FURL to some
> object hosted in C's tub"

A motivating use case would be a chat system, in which the central server was
used to introduce clients to each other, and all messages were sent directly
from one client to another. B and C might be two separate clients, and the
point of introduction is when B wants to connect to C.

The server can stash a reference to an object in C's tub, or a FURL to that
object that was generated by C. It can then send one of these to B (perhaps
as an argument to publish message, or a response to a "get all connected
clients" request message). The gift/introduction code in Foolscap lets you
send live references (i.e. RemoteReference instances) to third parties, and
in the current release this causes the FURL of the target to be delivered and
automatically connected to.

But of course this requires that the recipient of the gift be able to connect
to the target, and if that target is behind a firewall then the introduction
will fail.

We don't have any sort of relay or hole-punching code in place yet. As a
result, in Tahoe (http://allmydata.org), the few places that use Introduction
are careful to arrange for the target of the introduction (the "gift") to be
on the publically-visible server, rather than on the probably-behind-NAT
client.

Possible solutions:

1: non-Membrane plaintext Forwarder

   It is pretty easy to build a server-side proxy (called a Forwarder) that
   has a doRemoteCall() method that just echoes the request on to another
   object. Each time B sends a message to that-which-they-think-is-C, really
   they're sending it to a Forwarder on A, and the Forwarder sends the
   request on to C, gets the response, and forwards the response back to B.

   This takes about 5 lines of code:

     class Forwarder(Referenceable):
       def __init__(self, target):
         self.target = target
       def doRemoteCall(self, methname, args, kwargs):
         return self.target.callRemote(methname, *args, **kwargs)

   The first disadvantage is that the Forwarder gets to see (and control) all
   messages, so you're vulnerable to it for confidentiality and integrity.
   The second disadvantage is that if there are other object references in
   the arguments or the responses, those need to be wrapped in Forwarders
   too. This is a job for the "Membrane" pattern.

2: yes-Membrane plaintext Forwarder

   Eventually Foolscap will have utility functions for building easy
   membranes, but not yet. (foolscap ticket #44). Having this would remove
   the prohibitions on putting object references in your arguments and return
   values, but doesn't remove the vulnerability to the forwarder.

3: per-message ciphertext proxy

   Like the Forwarder, but you change the client to encrypt all its messages
   first, and the server to decrypt them. This keeps the proxy from seeing
   the contents of the messages. Encrypt the responses too. Add more crypto
   goo to make sure the proxy can't corrupt either.

   Foolscap has some support for serializing arbitrary object graphs, which
   would help. The "Sealer/Unsealer" code (foolscap ticket #20) that is under
   development will handle both the serialization and the encryption. You'd
   need some extra layer to figure out what keys to use.

4: server-side per-Tub ciphertext proxy

   The Foolscap negotiation protocol is specifically designed to provide for
   multiple Tubs listening on the same port. We build a Relay process to
   which the NAT-bound Tubs can attach, registering themselves with a (tubid,
   listener_rref) tuple. This listener_rref object has a single accept()
   method, which returns a handler_rref object. When B wants to connect to C,
   the FURL it uses will contain C's tubid but will have connection hints
   that point to the relay's listening socket. When B connects to the relay
   and says it wants to talk to tubidC, the relay (during the negotiation
   process) tells the listener_rref that it wants a new connection, gets the
   handler_rref, then switches into a simple proxy mode where it copies data
   from the B-side connection into remote_write() messages sent to the
   handler_rref. On C, the contents of these messages are written into a
   loopback TCP socket that mimics the data being exchanged between B and the
   relay. Responses generated by C get proxied backwards to the relay over
   the same connection.

   This requires more code, but it's the "right way to do it" for relay. The
   intermediate relay doesn't get to see or corrupt the traffic that it is
   carrying, and the remote objects on B and C don't need to be aware that
   anything unusual is going on. C needs to register with the relay, and the
   FURL needs to be created with the right connection hints, but that can be
   done once at startup (instead of requiring that every single message be
   specially encrypted).

   This one is tracked with foolscap ticket #46, copied directly from this
   note.


cheers,
 -Brian



From maarten at treewalker.org  Thu Mar 20 18:36:14 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 21 Mar 2008 01:36:14 +0100
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
Message-ID: <200803210136.21046.maarten@treewalker.org>

On Thursday 20 March 2008, John Wells wrote:

> So, I bought the Oreilly book and Python in a Nutshell. I've made it
> through the Nutshell book (I spent 3 months doing python back in 2003,
> so it's not completely new to me). My next steps include the book
> first and online docs second...but now am I to understand that both
> are useless? Should I just dive into the code instead?

Although they are not perfect, they are certainly not useless.

The snake ball book gives a lot of examples of things you can do with 
Twisted. It doesn't go very deep into the fundamentals: deferreds, 
transports, protocols and Zope interfaces are all important building blocks 
in Twisteed and of these, only deferreds are explained in some detail. It 
doesn't go very deep into web servers either, but that's not really the 
book's fault (page 54 explains the problem). The book is from 2005, so 
recent developments like inlineCallbacks and AMP are not in it.

All in all, the book is quite useful in my opinion if you want to get a 
quick start implementing some kind of server or client using Twisted. Just 
don't expect that this book is all you'll need.

As for the online docs, the "finger" tutorial was very effective for me in 
demonstrating the power of Twisted: how you can get a lot of functionality 
in only a few lines of code. And it also shows that this power comes from 
modular design with good interfaces, not from having "skinnable" 
implementations that become useless as soon as you want to do something 
slightly different.

The explanation of deferreds is also decent in my opinion. It took me a 
while to really grasp it, but that's probably more of a lack of experience 
in asynchronous programming than a deficiency of the documentation.

The API docs are better than many other open source projects have them. 
However, because Twisted is a large collection of small modules and highly 
abstract in places, the API docs are only useful if you know what you are 
looking for.

As for reading the source code, for most projects that translates to "you're 
out of luck", but the Twisted source code is actually surprisingly easy to 
read. It has the same problem as the API docs though: if you don't know 
what you are looking for exactly, it's unlikely you'll find it.


Some documentation I would like to read:

- what is the point of the Zope interfaces? is it mainly for documentation 
purposes? I read some things about being able to automatically adapt from 
one interface to another, but where is that used in practice? the only 
thing I used it for so far is to attach information to an HTTP session 
object

- the design behind "cred", especially the authorization part: what exactly 
is an avatar, how do you implement one and how do you use one?

- the design behind taps: what is a tap exactly? why all the different 
types? does it require serialization or could I write one by hand? how 
should my program be written to be "tappable"?

- what is AMP and in what way is it different from PB, foolscap, xmlrpc?

If this already exists, please point me to it. Otherwise, if you know 
something about the subject and would like to write about it, I would 
really appreciate it.


If there is any documentation I can proof read or edit, please let me know. 
I've been using Twisted for a couple of years, but I have only seen very 
small parts of its API, so writing a document from scratch would take too 
much time, but I'm willing to take on smaller tasks.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080321/e027ac3d/attachment.sig>

From glyph at divmod.com  Thu Mar 20 19:06:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:06:23 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<44dddf400803201108h76d28d05h7c3ae1839b4e6dda@mail.gmail.com>
Message-ID: <20080321010623.21558.999660194.divmod.xquotient.8509@joule.divmod.com>

On 20 Mar, 06:08 pm, lists at sourceillustrated.com wrote:
>So, I bought the Oreilly book and Python in a Nutshell. I've made it
>through the Nutshell book (I spent 3 months doing python back in 2003,
>so it's not completely new to me). My next steps include the book
>first and online docs second...but now am I to understand that both
>are useless? Should I just dive into the code instead?

No, absolutely not.

We have a useful FAQ and some useful tutorial documents.  For example, 
Moshe Zadka's "finger" tutorial (while not perfect) is an excellent 
example of how to use Twisted, and its multi-layered approach:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

This is the first google hit for "twisted tutorial".

The first google hit for "writing servers", by the way:

  http://twistedmatrix.com/projects/core/documentation/howto/servers.html

is a great low-level introduction to Twisted's core concepts.

Of course, like any large project, the documentation for different parts 
of Twisted is going to vary a lot.  But it would be a gross 
overstatement to say there's no documentation or that it's completely 
useless.



From glyph at divmod.com  Thu Mar 20 19:12:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:12:43 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <fruaj0$b8c$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
	<fruaj0$b8c$1@ger.gmane.org>
Message-ID: <20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>


On 20 Mar, 06:31 pm, steve at holdenweb.com wrote:
>Sure enough, Glenn H Tarbox was the perpetrator: throw your rotten 
>fruit at him, not me. I'm a *friend* of Twisted, for Pete's sake.

I believe the honorable Dr. Tarbox actually qualifies as a Bronze 
founding sponsor of the TSF, so at this point I don't think he's yet 
overstepped the amount of crap he's allowed to give us.  Although 
perhaps future vitriol could be saved for the sponsors list we are in 
the process of setting up, and in the more productive form of feature 
requests :).

(Thanks, Glenn!  Do you want to send us a logo, perhaps a signature, to 
put on the front page?)



From glyph at divmod.com  Thu Mar 20 19:29:57 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 01:29:57 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<BEAAAA1C-1367-4283-8394-E10109826E62@bubblehouse.org>
Message-ID: <20080321012957.21558.1045077775.divmod.xquotient.8551@joule.divmod.com>


On 20 Mar, 06:27 pm, phil at bubblehouse.org wrote:
>I've been lurking on this mailing list for years, and what I see most 
>often is people who do not even begin to understand the concept of 
>asynchronous networking. *This* is the barrier to entry, and it's 
>almost always the culprit when a potential user walks away from 
>Twisted.

Yes.  We need more intermediate users to help the beginners.  The 
problem with the Twisted dev team is that we now have a collection of 
amazing, unbelievably gifted, genius Master-level developers, honed by 
the continual mutual improvement of the review process.  However, people 
with such exospheric skills (a layer of the atmosphere named, I believe, 
after exarkun's brain) get tired of answering simple, repetitive 
questions from impatient and confused novices.

This is a good problem to have, but it's still a problem.

If you know some things about Twisted but you're not really an expert 
yet, you should really help others learn by answering questions on this 
list and on IRC.   It would decrease the pressure on people whose time 
would be better spent answering the really, really hard questions, or 
better yet fixing bugs so that the hard questions won't even come up.
>IIRC, at the time Twisted Python was created, thread support in Python 
>was simply awful. Threads were absolutely not a solution for dealing 
>with multiple client connections to a server application, and the only 
>alternative was asyncore.

I don't think that Python's thread support was that awful, nor that it 
has changed that much since then.  Are you referring to the GIL? 
Anyway, if you are, let's not talk about this any more.
>As many of you may remember, asyncore was not great, but it *was* 
>simple. Writing an asyncore application required knowledge of maybe 
>three different classes, so while you were working on understanding 
>asynchronous networking, you didn't have to deal with learning a vast 
>new API.

Twisted is actually simpler than asyncore by a fair margin.  Compare a 
Twisted echo server to an asyncore echoserver.  Twisted has _more stuff 
in it_ than Asyncore does, but it is a lot easier to use, as well as 
more portable, for the application programmer.  (You still need to know 
about WSA errors on Windows if you want to use asyncore, for example.)
>The problem I've seen with various responses from seasoned Twisted 
>devs to unexperienced developers is that one can only explain why you 
>don't want to use any kind of long-blocking call so many times. After 
>that, answers start becoming glib and/or overly terse, but I can't 
>really blame anyone for that.

This is the problem I mentioned above.
>I definitely agree with you about the state of Twisted.Web. I think 
>the culprit here is not entirely a shortage of documentation. The real 
>problem is Web2.
><snip blah blah blah web web2 confusion etc>

We talked a lot about this at PyCon.  I don't want to bury the 
resolution here, in the middle of a thread that a lot of people have 
probably already killfiled, but this problem _is_ recognized as a 
priority and _is_ getting solved, thanks in large part to the renewed 
efforts of David Reid, James Knight, and Wilfredo Sanchez.

I'll try to scream it from the rooftops as soon as I can.
>I have to say, I still don't really know what AMP is, and I've asked a 
>bunch of times. Maybe I actually do know, by now, but I've certainly 
>forgotten.

First google hit for "twisted amp":

http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

Perhaps there should be more documentation, but I think that's a good 
introductory explanation.
>I really think that doing this properly requires a core team of people 
>at least as large as the core Twisted dev group. They would need to 
>have both a knack for documentation and an understanding of somewhat 
>low-level networking concepts, *and* an ability to read source code 
>effectively.

Absolutely.  But - an important note - these people DO NOT need to be 
deep Twisted wizards on the level of JP, me, Chris Armstrong or whoever; 
they can just have a passing familiarity with the concepts and the 
capacity to ask and answer questions when necessary.
>Now, I don't mean to point out obstacles and say it's hopeless, but I 
>think this relates to the critical mass I was talking about earlier. I 
>think Twisted just needs to reach that level where there's enough 
>people who want to write documentation that it gets done.

One of the things I did at PyCon was to reach out to the Django 
community and ask them to start considering what it would take for 
Twisted to be the preferred container and deployment platform for 
Django.  They're thinking about it.  I hope we can keep that dialogue 
going.

Supporting other Python frameworks (especially web frameworks) would 
provide us with a much broader audience of people with a different skill 
set.  Unfortunately 99% of those people will have zero interest in 
asynchronous networking, but, for example, "twistd" as a command line 
tool is kind of neat.  There are lots of ways we can suck them in and 
interest them in the wider Twisted universe outside of just web.  Bottom 
line, though: those are the people who can make our website look great, 
who can organize our documentation, etc.  It's no secret that I'm not a 
fan of Django's technological architecture but I think their 
documentation is _fantastic_; easily twice as good as ours, probably 
more like ten times as good in certain areas.
>Other attempts to force the issue haven't really met with much 
>success; I know there used to be (perhaps still are) a few bounties 
>out there on documentation, but not much has happened in that arena 
>since then. (Personally, I am anti-bounty, as I feel -- perhaps 
>irrationally so -- that it cheapens the hours and hours of work that 
>people have done for free.)

Whatever the reason, you're right: bounties never really worked.  Divmod 
is going to be doing a bunch of consulting for the TSF, but that paid 
development isn't going to be on the basis of a ticket-by-ticket basis, 
and bounties are not a good way to recognize or compensate contributors.
>I think the best way for us to address this in the short term is to 
>really try to focus on group documentation. The current Trac wiki can 
>barely be called collaborative; as a start why not transfer the 
>Twisted docs into the wiki, and allow Trac users to modify and update 
>this information?

Because the version control system used by trac is broken.  Because 
trac's wiki syntax is a custom hack which we have no other tools to work 
with.  Because users who know even the tiniest smattering of HTML can 
submit patches against the existing documentation.  Because dealing with 
spam in trac is a huge hassle.  Because trac's wiki isn't included in 
the release.  Because the tools don't exist *to* include trac's wiki in 
the release.  Because it's a huge project which would take many man- 
months to do nothing but put our documentation into an inferior format.

I could go on.

Maybe you could write a tool which would automatically allow users to 
edit the lore documentation and generate patches / file tickets for 
reviewing those patches?  That would be pretty awesome.
>Furthermore, considering the length some of the posts I see here, I'd 
>like to suggest that if you're going to spend 30 minutes writing an 
>email explaining some concept, why not write a mini tutorial about it 
>instead?

Writing a tutorial is a lot harder than writing an email.
>Even if you just copy and paste the email you were going to send into 
>the wiki, it's still a start, and others can work on it from there.

*this* kind of ad-hoc stuff is what should be on a wiki.  But it should 
be moving in the direction of the real docs, not away from them.

I hope this was illustrative, if not quite worthy of being a tutorial 
:).



From lists at sourceillustrated.com  Thu Mar 20 19:52:16 2008
From: lists at sourceillustrated.com (John Wells)
Date: Thu, 20 Mar 2008 21:52:16 -0400
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
In-Reply-To: <20080320205637.38A7112401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
Message-ID: <44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>

On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
> Glenn H Tarbox wrote:
>  > (yet this same group complains that Git is too complex to be used for
>  > source code control... even though its core architecture eclipses the
>  > alternatives being used and considered...)
>
>  Seeing Pythonistas using git saddens me a little.
>
>  Mercurial is git done right.

Really? I've heard the same about Canonical's Bazaar...also written in python...



From jml at mumak.net  Thu Mar 20 20:10:33 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 21 Mar 2008 13:10:33 +1100
Subject: [Twisted-Python] Mercurial,
	not git (was: Re: Teach Me Twisted Redux)
In-Reply-To: <44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
Message-ID: <d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>

On Fri, Mar 21, 2008 at 12:52 PM, John Wells
<lists at sourceillustrated.com> wrote:
> On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
>  > Glenn H Tarbox wrote:
>  >  > (yet this same group complains that Git is too complex to be used for
>  >  > source code control... even though its core architecture eclipses the
>  >  > alternatives being used and considered...)
>  >
>  >  Seeing Pythonistas using git saddens me a little.
>  >
>  >  Mercurial is git done right.
>
>  Really? I've heard the same about Canonical's Bazaar...also written in python...
>

Except Bazaar isn't git done right, it's distributed version control done right.

jml



From waterbug at pangalactic.us  Thu Mar 20 20:15:06 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 20 Mar 2008 22:15:06 -0400
Subject: [Twisted-Python] Mercurial,	not git
In-Reply-To: <d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<20080320205637.38A7112401B@slice.teknico.net>	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
Message-ID: <47E31A2A.6020002@pangalactic.us>

Jonathan Lange wrote:
> On Fri, Mar 21, 2008 at 12:52 PM, John Wells
> <lists at sourceillustrated.com> wrote:
>> On Thu, Mar 20, 2008 at 4:56 PM, Nicola Larosa <nico at teknico.net> wrote:
>>  > Glenn H Tarbox wrote:
>>  >  > (yet this same group complains that Git is too complex to be used for
>>  >  > source code control... even though its core architecture eclipses the
>>  >  > alternatives being used and considered...)
>>  >
>>  >  Seeing Pythonistas using git saddens me a little.
>>  >
>>  >  Mercurial is git done right.
>>
>>  Really? I've heard the same about Canonical's Bazaar...also written in python...
>>
> 
> Except Bazaar isn't git done right, it's distributed version control done right.

OT!  Please keep VCS wars/opinionating off the twisted list.

Steve



From waterbug at pangalactic.us  Thu Mar 20 20:34:38 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 20 Mar 2008 22:34:38 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>	<fruaj0$b8c$1@ger.gmane.org>
	<20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
Message-ID: <47E31EBE.2030302@pangalactic.us>

glyph at divmod.com wrote:
> I believe the honorable Dr. Tarbox actually qualifies as a Bronze 
> founding sponsor of the TSF, so at this point I don't think he's yet 
> overstepped the amount of crap he's allowed to give us.  Although 
> perhaps future vitriol could be saved for the sponsors list we are in 
> the process of setting up, and in the more productive form of feature 
> requests :).
> 
> (Thanks, Glenn!  Do you want to send us a logo, perhaps a signature, to 
> put on the front page?)

I notice that the TSF has no Gold sponsors yet ... perhaps,
judging from an aside made at the Teach-Me-Twisted session by a
certain Google fellow (who happens to be a venerated, well-known
Python roshi ;), perhaps Google should be Twisted's first
Gold sponsor ... anyone from Google listening?  :)

Cheers,
Steve



From nico at teknico.net  Fri Mar 21 00:35:17 2008
From: nico at teknico.net (Nicola Larosa)
Date: Fri, 21 Mar 2008 07:35:17 +0100
Subject: [Twisted-Python] Re: Mercurial,	not git
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<20080320205637.38A7112401B@slice.teknico.net>	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
Message-ID: <20080321063519.E367A12401B@slice.teknico.net>

> Nicola Larosa wrote:
>> Mercurial is git done right.

> Really? I've heard the same about Canonical's Bazaar...also written in
> python...

If you mean that Mercurial is BazaarNG done right, yes, definitely. ;-)

BazaarNG has better integration with Subversion than Mercurial (currently).
On the other hand, it's not as fast as Mercurial, but mainly, it's not as
*simple* as Mercurial.

Canonical deciding to rewrite bzr, instead of backing Mercurial, has been a
loss for the Python community.

-- 
Nicola Larosa - http://www.tekNico.net/

It hurts a bit to hear someone you really love relating or demonstrating
delight received from another lover. But when you get past this, it's
utterly liberating, as if you have finally ridded yourself of the worst
vestige of our current society's terrible scarcity of love.
 -- Dave Pollard, November 2007





From glyph at divmod.com  Fri Mar 21 02:18:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:18:36 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
Message-ID: <20080321081836.21558.1091776909.divmod.xquotient.8558@joule.divmod.com>

On 20 Mar, 09:28 pm, ellisonbg.net at gmail.com wrote:
>Also, I think the proof is in the pudding.  Most people who really
>need Twisted for their projects _are_ in fact able to learn it (for
>the most part without reading the source code).  The documentation
>can't be that bad.  Doesn't mean there is not room for improvement
>though.

Although I believe we have a long way to go, I appreciate the fact that 
in this round, it's not the authors of the documentation, but members of 
the community who have actually read it who are coming to its defense.

Thanks.  It's useful to hear the criticism, but it's energizing to hear 
the praise :).



From glyph at divmod.com  Fri Mar 21 02:30:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:30:37 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E31EBE.2030302@pangalactic.us>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<368574aa0803201121y439b4281wea0a70fa56b07140@mail.gmail.com>
	<fruaj0$b8c$1@ger.gmane.org>
	<20080321011243.21558.1966365840.divmod.xquotient.8517@joule.divmod.com>
	<47E31EBE.2030302@pangalactic.us>
Message-ID: <20080321083037.21558.385469995.divmod.xquotient.8574@joule.divmod.com>

On 02:34 am, waterbug at pangalactic.us wrote:
>I notice that the TSF has no Gold sponsors yet ... perhaps,
>judging from an aside made at the Teach-Me-Twisted session by a
>certain Google fellow (who happens to be a venerated, well-known
>Python roshi ;), perhaps Google should be Twisted's first
>Gold sponsor ... anyone from Google listening?  :)

Zenoss will be our first Gold sponsor.  We're still figuring out payment 
details with them right now, we're new to this whole "accepting money" 
thing.

Also, Gold isn't the highest level.  If you want to find out what the 
highest level is, just contribute geometrically increasing amounts of 
money and see if we put you into a new category.

We are working on talking to Google, among other folks.  I can only send 
so many emails in one day.  And in fact I'm in the process of precisely 
discovering that limit ;-).



From glyph at divmod.com  Fri Mar 21 02:38:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 08:38:43 -0000
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321063519.E367A12401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
Message-ID: <20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>


Please stop.

On 06:35 am, nico at teknico.net wrote:
>>Nicola Larosa wrote:
>>>It is allowed on all hands, that the primitive way of breaking eggs, 
>>>before we eat them, was upon the larger end; but his present 
>>>majesty 19s grandfather, while he was a boy, going to eat an egg, and 
>>>breaking it according to the ancient practice, happened to cut one of 
>>>his fingers.
>
>>his present majesty 19s grandfather, while he was a boy, going to eat an 
>>egg, and breaking it according to the ancient practice, happened to 
>>cut one of his fingers.
>
>
>Long live the most puissant king of Lilliput!
>all true believers break their eggs at the convenient end.
>--
>Nicola Larosa - http://www.tekNico.net/
>
>It hurts a bit to hear someone you really love relating or 
>demonstrating
>delight received from another lover. But when you get past this, it's
>utterly liberating, as if you have finally ridded yourself of the worst
>vestige of our current society's terrible scarcity of love.
>-- Dave Pollard, November 2007
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From nico at teknico.net  Fri Mar 21 03:05:53 2008
From: nico at teknico.net (Nicola Larosa)
Date: Fri, 21 Mar 2008 10:05:53 +0100
Subject: [Twisted-Python] Re: Mercurial, not git
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
Message-ID: <20080321090555.E734E12401B@slice.teknico.net>

glyph at divmod.com wrote:
> Please stop.

Ok, I will, but...

> On 06:35 am, nico at teknico.net wrote:
>>>Nicola Larosa wrote:

..no, I didn't! Whose is this stuff? Not mine.

Glyph, if this is your frolicsome way of implying that what I said was
irrelevant, well, point taken. :-) Otherwise, I'm puzzled.

>>>>It is allowed on all hands, that the primitive way of breaking eggs,
>>>>before we eat them, was upon the larger end; but his present
>>>>majesty 19s grandfather, while he was a boy, going to eat an egg, and
>>>>breaking it according to the ancient practice, happened to cut one of
>>>>his fingers.
>>
>>>his present majesty 19s grandfather, while he was a boy, going to eat an
>>>egg, and breaking it according to the ancient practice, happened to
>>>cut one of his fingers.
>>
>>Long live the most puissant king of Lilliput!
>>all true believers break their eggs at the convenient end.

-- 
Nicola Larosa - http://www.tekNico.net/





From glyph at divmod.com  Fri Mar 21 03:17:05 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 21 Mar 2008 09:17:05 -0000
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321090555.E734E12401B@slice.teknico.net>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
	<20080321090555.E734E12401B@slice.teknico.net>
Message-ID: <20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>


On 09:05 am, nico at teknico.net wrote:
>Glyph, if this is your frolicsome way of implying that what I said was
>irrelevant, well, point taken. :-) Otherwise, I'm puzzled.

I guess if you didn't get the joke, others might not either...

Those were passages taken from Gulliver's Travels related to the big- 
endian vs. little-endian debate, a meaningless conflict between 
essentially identical societies that lead to decades of war.



From p.mayers at imperial.ac.uk  Fri Mar 21 05:33:30 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:33:30 +0000
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
Message-ID: <47E39D0A.8080707@imperial.ac.uk>

Faraz Khan wrote:
> Dear all,
> What Im trying to do is the following. Please suggest whether this makes 
> sense or not (I dont think it does- so am asking for suggestions!):
> 
> 1. I have a XML RPC Server using xmlrpc.XMLRPC
> 2. Clients connect to it using SSL (am using reactor.listenSSL with a 
> custom context factory)
> 
> 3. This server (or agent) is being used for sys admin tasks. I want to 
> connect, auth and then be able to do various sys admin tasks which the 
> XMLRPC server lets them do.
> 
> 4. What i wish to be able to do is that a UID/GID is set (based on their 
> auth credentials) for that particular request.
> 
> I personally think this is impossible to do with threads. I have done 
> something simliar using Fork & C though.

It may or may not be possible with threads, but it doesn't matter 
because Twisted doesn't use threads. It's single-process, single-thread 
async/event driven.

You will not be able to setuid effectively in the main Twisted program.

> 
> Doing os.setuid works but (obviously) changes the main process's UID 
> which is not what I want.
> 
> Any advice would be highly appreciated.
> 
> 

Run child processes doing the actual admin tasks.



From p.mayers at imperial.ac.uk  Fri Mar 21 05:36:16 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:36:16 +0000
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <47E2EA33.9030400@lavabit.com>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>	<fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com>
Message-ID: <47E39DB0.90908@imperial.ac.uk>

coder_gus wrote:
> Well, by default the Nagle algorithm is turned off so it should transmit 
> the data asap. I don't think it's OS dependent.

It's only off if you've turned it off. It's on by default AFAIK on most 
OSes.

Anyway, Nagle is irrelevant - if the TCP window is closed i.e. you've 
sent N bytes and the far end has not acked, and N == window, your TCP 
stack WILL NOT (MUST NOT) send any more.

> 
> Toby Dickenson wrote:
>> coder_gus wrote:
>>
>>  
>>> Ok, this link answered a few of my questions (stupid of me that I
>>> haven't looked on that before I posted), but my question still stands:
>>> how do I send data to a client whenever I want from wherever I want and
>>> that data to be send as fast as possible,
>>>     
>>
>> The code in the faq that glyph pointed you to will do what you want, if I
>> understand your requirements correctly. Heres the link again:
>>
>> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>>
>>
>>  
>>> without the code waiting for the reactor to answer to some events?
>>>     
>>
>> Your transmission *might* have to wait if the operating system transmit
>> buffers are already full, and, if so, the reactor is the mechanism which
>> means your new data can wait without blocking the whole process.
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> ____________________________________________________________________________________ 
>>
>> Save hundreds on an Unsecured Loan - Click here.
>> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/ 
>>
>> ____________________________________________________________________________________ 
>>
>>   
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Fri Mar 21 05:47:22 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Mar 2008 11:47:22 +0000
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
Message-ID: <47E3A04A.6030502@imperial.ac.uk>

>>  One of the biggest (glaring?) issues with Twisted is the abysmal state
>>  of the documentation (none) making the code the best source... and
>>  history is replete with the massive successes that approach has borne...
> 
> I disagree with this evaluation. ...

Likewise.

> Asynchronous networking is simply hard.  And Twisted has a very
> sophisticated take on it.  Saying the problem is the documentation is
> like someone saying "quantum mechanics is poorly documented...all that
> talk about Hilbert spaces, eigenstates and superposition..."  It is
> not poorly documented, it is simply hard and conceptually challenging.
> 
> Also, I think the proof is in the pudding.  Most people who really
> need Twisted for their projects _are_ in fact able to learn it (for
> the most part without reading the source code).  The documentation
> can't be that bad.  Doesn't mean there is not room for improvement
> though.

I totally agree with that. I'm a reasonably bright chap, but I'm not 
Einstein. I get Twisted, and I got it quickly enough and well enough to 
(I think) do some pretty damn sophisticated things.

(I did have the benefit of having already tried a threaded approach and 
seen how disastrous it was...)

> 
> 
> Brian
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From steve at holdenweb.com  Fri Mar 21 06:05:43 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 21 Mar 2008 08:05:43 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E3A04A.6030502@imperial.ac.uk>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>	<6ce0ac130803201428tee66a01gd542c33c502b1440@mail.gmail.com>
	<47E3A04A.6030502@imperial.ac.uk>
Message-ID: <fs08b0$m11$1@ger.gmane.org>

Phil Mayers wrote:
[...]
>> Also, I think the proof is in the pudding.  Most people who really
>> need Twisted for their projects _are_ in fact able to learn it (for
>> the most part without reading the source code).  The documentation
>> can't be that bad.  Doesn't mean there is not room for improvement
>> though.
> 
> I totally agree with that. I'm a reasonably bright chap, but I'm not 
> Einstein. I get Twisted, and I got it quickly enough and well enough to 
> (I think) do some pretty damn sophisticated things.
> 
It *has& improved a lot.

> (I did have the benefit of having already tried a threaded approach and 
> seen how disastrous it was...)
> 
I've actually used threads to send emails in parallel (200-500 at a 
time), but if I'd known how to use Twisted it would almost certainly 
have been easier to get running and debug.

I'm probably one of those people who will shy away from something that 
isn't immediately approachable. Perhaps all that's really needed is a 
ring of newbie-friendly stuff to make sense of the existing documentation?

That, and a re-write of certain head-twisting paragraphs ...

regards
  Steve




From coder_gus at lavabit.com  Fri Mar 21 06:50:04 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 14:50:04 +0200
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my	code
In-Reply-To: <47E39DB0.90908@imperial.ac.uk>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>
Message-ID: <47E3AEFC.4040706@lavabit.com>

Agreed, I was talking about transport.tcpKeepAlive(). The thing I am 
asking (and call me stupid, but I am trying to figure it out for days 
now and no one seems to answer my question or is it me too stupid that 
can see the answer in front of my eyes) is how do I send data to clients 
that are connected to the twisted server waiting for data to be 
processed, without sending to the server any data or causing any event 
to the server? In the link you guys showed me it's true that the data 
gets back to the clients, but only when the server receives other data, 
that is in the dataReceived method. How can I send it back to them 
(having a reference to each client's protocol class) without receiving 
data, client connecting etc. ?


Phil Mayers wrote:
> coder_gus wrote:
>> Well, by default the Nagle algorithm is turned off so it should 
>> transmit the data asap. I don't think it's OS dependent.
>
> It's only off if you've turned it off. It's on by default AFAIK on 
> most OSes.
>
> Anyway, Nagle is irrelevant - if the TCP window is closed i.e. you've 
> sent N bytes and the far end has not acked, and N == window, your TCP 
> stack WILL NOT (MUST NOT) send any more.
>
>>
>> Toby Dickenson wrote:
>>> coder_gus wrote:
>>>
>>>  
>>>> Ok, this link answered a few of my questions (stupid of me that I
>>>> haven't looked on that before I posted), but my question still stands:
>>>> how do I send data to a client whenever I want from wherever I want 
>>>> and
>>>> that data to be send as fast as possible,
>>>>     
>>>
>>> The code in the faq that glyph pointed you to will do what you want, 
>>> if I
>>> understand your requirements correctly. Heres the link again:
>>>
>>> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>>>
>>>
>>>  
>>>> without the code waiting for the reactor to answer to some events?
>>>>     
>>>
>>> Your transmission *might* have to wait if the operating system transmit
>>> buffers are already full, and, if so, the reactor is the mechanism 
>>> which
>>> means your new data can wait without blocking the whole process.
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>> ____________________________________________________________________________________ 
>>>
>>> Save hundreds on an Unsecured Loan - Click here.
>>> http://ads.lavabit.com/fc/REAK6bkM9e5ejOJrLUP0P44A0oQrI53GoIDlgN8VVyT8BnEAxlYQBU/ 
>>>
>>> ____________________________________________________________________________________ 
>>>
>>>   
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ____________________________________________________________________________________ 
>
> Handyman Franchises. Click Here.
> http://ads.lavabit.com/fc/REAK6bkONUs9yhym0lTTSbxUFXmZYqNkZwLDRJhQY0xBalLSyOwtqs/ 
>
> ____________________________________________________________________________________ 
>




From therve at free.fr  Fri Mar 21 07:25:16 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 21 Mar 2008 14:25:16 +0100
Subject: [Twisted-Python] Re: writing back to the connection is
	blocking my code
In-Reply-To: <47E3AEFC.4040706@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
Message-ID: <20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>

Quoting coder_gus <coder_gus at lavabit.com>:

> Agreed, I was talking about transport.tcpKeepAlive(). The thing I am
> asking (and call me stupid, but I am trying to figure it out for days
> now and no one seems to answer my question or is it me too stupid that
> can see the answer in front of my eyes) is how do I send data to
> clients that are connected to the twisted server waiting for data to be
> processed, without sending to the server any data or causing any event
> to the server?

This is where you are confused I think. There is no way to send data  
to clients if you don't have *any* events on the server. Because how  
would you now to send data if you don't have something telling you to  
do so? You should have a time event, or a network event from another  
client, or a GUI input, or whatever.

> In the link you guys showed me it's true that the data
> gets back to the clients, but only when the server receives other data,
> that is in the dataReceived method. How can I send it back to them
> (having a reference to each client's protocol class) without receiving
> data, client connecting etc. ?

It's not totally clear to understand what you're trying to achieve, so  
maybe you want to explain more clearly your problem. I suspect you  
want to use reactor.callLater, to generate a time event.


-- 
Thomas






From drew.smathers at gmail.com  Fri Mar 21 07:51:17 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 21 Mar 2008 09:51:17 -0400
Subject: [Twisted-Python] Re: Mercurial, not git
In-Reply-To: <20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<1206027417.3359.123.camel@ghtmyth.hq.tarbox.org>
	<20080320205637.38A7112401B@slice.teknico.net>
	<44dddf400803201852o197611e0o70d93b2ce23fe206@mail.gmail.com>
	<d06a5cd30803201910l27e4709byc9436c0a9290eca1@mail.gmail.com>
	<47E31A2A.6020002@pangalactic.us>
	<20080321063519.E367A12401B@slice.teknico.net>
	<20080321083843.21558.8311514.divmod.xquotient.8589@joule.divmod.com>
	<20080321090555.E734E12401B@slice.teknico.net>
	<20080321091705.21558.1812499873.divmod.xquotient.8591@joule.divmod.com>
Message-ID: <368574aa0803210651n19d24978s218c6e6e5d42a745@mail.gmail.com>

On Fri, Mar 21, 2008 at 5:17 AM,  <glyph at divmod.com> wrote:
>
>  On 09:05 am, nico at teknico.net wrote:
>  >Glyph, if this is your frolicsome way of implying that what I said was
>  >irrelevant, well, point taken. :-) Otherwise, I'm puzzled.
>
>  I guess if you didn't get the joke, others might not either...
>
>  Those were passages taken from Gulliver's Travels related to the big-
>  endian vs. little-endian debate, a meaningless conflict between
>  essentially identical societies that lead to decades of war.
>

Is there a python-flamewars mailing list? That would be really great,
so everyone could argue about setuptools, web frameworks, concurrency
models, revision control ...  I think it might help extend our
lifespans as well.

>Long live the most puissant king of Lilliput!
>all true believers break their eggs at the convenient end.

Now that you mention eggs ...

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From jcd at sdf.lonestar.org  Fri Mar 21 07:52:55 2008
From: jcd at sdf.lonestar.org (J. Clifford Dyer)
Date: Fri, 21 Mar 2008 09:52:55 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <47E24B94.7090400@holdenweb.com>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com>
Message-ID: <1206107575.6164.17.camel@jcd-desktop>


On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
> glyph at divmod.com wrote:

> I left the session feeling we had accomplished hardly anything, but was 
> persuaded afterwards that wasn't the case.
> 
> One of the tragedies of the session was due to the blue screen crash of 
> my own computer I have absolutely nothing left of the code we developed. 
> I had hopes that one or two blog entries might appear to allow me to 
> lift it from those attending, but so far the success of the session is a 
> closely guarded secret among PyCon attendees (thought it's been 
> gratifying to have people saying "I wished I'd gone to that").
> 
> If someone can provide me with the code I will undertake to produce some 
> sort of blog entry, and this might further publicize Twisted. Never 
> underestimate the value of marketing: the Twisted community is a subset 
> of the Python community, and it's my particular vanity that PyCon has 
> helped to increase the Python community. It's important to keep feeding 
> introductory material into the process as growth continues, because 
> typically 50% of those present are likely to be newbies.
> 

Having contributed the replacement laptop, I've got the "official"
working code from Teach Me Twisted.  I'd be happy to send it to you,
Steve, or anyone else who wants to blog on the session.  One caveat: the
laptop I had with me at python belongs to my employer, so it's sitting
in my office right now, and I won't be able to get to it until Monday.

> 
> > Next year, we should definitely have more regular Twisted talks; I'd say 
> > that someone else should do another "teach me twisted" session, but I 
> > don't know if anyone else has the raw charisma and pedagogical expertise 
> > that Mr. Holden combined with Twisted ignorance to make this session so 
> > great :).
> > 
> Don't forget the whisky ...
> 

Believe me, I won't. ;) Actually I think the whisky was a minor but
essential ingredient in making the event as fantastic as it was.  Just
having the bottle sitting up front was a good reminder to people that we
were there because we think this stuff is fun.  It took a lot of the
formality off of the learning process, and that informality helped
people get excited about the endeavor.


> What we possibly need first of all is for someone to do a "Teach Me 
> Teach Me" in the tutorial track, with myself and a number of the more 
> experienced trainer types as the "subject matter experts". These things 
> are always one-off in nature and it's unrealistic to expect that they 
> will all have the same charm as "Teach Me Twisted" did this year for all 
> the reasons I mention above, but if it gets information out more 
> effectively about "difficult" topics it's probably worth a try if we can 
> find someone to facilitate them.
> 

I'd love to try my hand at "teach me" style teaching, for what it's
worth, and would be interested in a Teach Me Teach Me session.

> regards
>   Steve





From coder_gus at lavabit.com  Fri Mar 21 08:07:36 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 16:07:36 +0200
Subject: [Twisted-Python] Re: writing back to the connection is	blocking
	my code
In-Reply-To: <20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>	<47E3AEFC.4040706@lavabit.com>
	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
Message-ID: <47E3C128.5000202@lavabit.com>

Hi, thanks for answering and clarifying this - until now you where the 
only one that told me there no way of sending data if there is no event 
on the server. So what I am trying to achieve, I have asked a couple of 
weeks ago too about this matter (actually about the architecure): I want 
to write an application server that receives data from clients (client 
app written in delphi), data is in xml format (I want to write it using 
a bare-bone protocol and not an xml-rpc server). The data the client 
sends are some requests for some specific data hold in a database. So, 
the client makes a request, request that is hold in a synchronized queue 
together with an instance of the client's connection. A coordinator 
takes the data from that queue and gives it to some xml threads to parse 
it and the same coordinator take the parsed data from the xml threads 
and give some workers to do the bussiness work. This workers place the 
result in a queue from where the coordinator takes care of sending it 
back to the clients. I will be using sqlalchemy for database communication.
I know the architecture is pretty weird from the twisted perspective, 
but when the dev-manager wants to do it that way, what can you do? So 
that is the thing I want to achieve and from this started my question; 
when the workers finish their work, they have the result, place it in a 
queue and from there I have to send it to the clients asap, without 
waiting the server for events.

Not sure if I made myself clear as I am not a native-English speaker.

Thanks for you patience. :)

Thomas Hervé wrote:
> Quoting coder_gus <coder_gus at lavabit.com>:
>
>> Agreed, I was talking about transport.tcpKeepAlive(). The thing I am
>> asking (and call me stupid, but I am trying to figure it out for days
>> now and no one seems to answer my question or is it me too stupid that
>> can see the answer in front of my eyes) is how do I send data to
>> clients that are connected to the twisted server waiting for data to be
>> processed, without sending to the server any data or causing any event
>> to the server?
>
> This is where you are confused I think. There is no way to send data 
> to clients if you don't have *any* events on the server. Because how 
> would you now to send data if you don't have something telling you to 
> do so? You should have a time event, or a network event from another 
> client, or a GUI input, or whatever.
>
>> In the link you guys showed me it's true that the data
>> gets back to the clients, but only when the server receives other data,
>> that is in the dataReceived method. How can I send it back to them
>> (having a reference to each client's protocol class) without receiving
>> data, client connecting etc. ?
>
> It's not totally clear to understand what you're trying to achieve, so 
> maybe you want to explain more clearly your problem. I suspect you 
> want to use reactor.callLater, to generate a time event.
>
>




From drew.smathers at gmail.com  Fri Mar 21 08:15:21 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 21 Mar 2008 10:15:21 -0400
Subject: [Twisted-Python] Re: writing back to the connection is blocking
	my code
In-Reply-To: <47E3AEFC.4040706@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
Message-ID: <368574aa0803210715g18c236ebm32fa8f59ebf1e143@mail.gmail.com>

On Fri, Mar 21, 2008 at 8:50 AM, coder_gus <coder_gus at lavabit.com> wrote:
>  How can I send it back to them
>  (having a reference to each client's protocol class) without receiving
>  data, client connecting etc. ?

1. Without receiving data

This is simple.   When a client connects, your protocol can capture
the connection event with connectionMade method on the protocol.
That's when you'll likely store a reference to the protocol instance
on the factory.  If you need to write back to the connection at a
later time, simply call write on the protocol's transport. For
example, a chat server might do something like this:

for c in self.chatters:
   c.transport.write(msg)

I'm guessing that your concern is that write is going to block.  It's not.

2. Client connecting

The client has to connect first - unless you are writing an
application where each participant in the system is known up front -
and you can establish connections with them (no firewalls).

I would suggest rereading these documents carefully - they should
really cover your questions:

http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html

Otherwise, you should provide a more detailed explanation of your use case.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From therve at free.fr  Fri Mar 21 09:26:44 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 21 Mar 2008 16:26:44 +0100
Subject: [Twisted-Python] Re: writing back to the connection is
	blocking my code
In-Reply-To: <47E3C128.5000202@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>
	<47E21EF4.2060408@lavabit.com> <fru01j$tb$1@ger.gmane.org>
	<47E2EA33.9030400@lavabit.com> <47E39DB0.90908@imperial.ac.uk>
	<47E3AEFC.4040706@lavabit.com>
	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>
	<47E3C128.5000202@lavabit.com>
Message-ID: <20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>

Quoting coder_gus <coder_gus at lavabit.com>:

> Hi, thanks for answering and clarifying this - until now you where the
> only one that told me there no way of sending data if there is no event
> on the server. So what I am trying to achieve, I have asked a couple of
> weeks ago too about this matter (actually about the architecure): I
> want to write an application server that receives data from clients
> (client app written in delphi), data is in xml format (I want to write
> it using a bare-bone protocol and not an xml-rpc server). The data the
> client sends are some requests for some specific data hold in a
> database. So, the client makes a request, request that is hold in a
> synchronized queue together with an instance of the client's
> connection. A coordinator takes the data from that queue and gives it
> to some xml threads to parse it and the same coordinator take the
> parsed data from the xml threads and give some workers to do the
> bussiness work. This workers place the result in a queue from where the
> coordinator takes care of sending it back to the clients. I will be
> using sqlalchemy for database communication.
> I know the architecture is pretty weird from the twisted perspective,
> but when the dev-manager wants to do it that way, what can you do? So
> that is the thing I want to achieve and from this started my question;
> when the workers finish their work, they have the result, place it in a
> queue and from there I have to send it to the clients asap, without
> waiting the server for events.

This is were you're wrong: pushing the result is an event! So to the  
event 'I got some result in a thread', you'll fire a connection write.  
Let me try to write some pseudo code to solve your problem:


def blockingTask(content):
     import sqlalchemy
     # sqlalchemy stuff
     query = session.query("bla")
     ....
     return result


class CommandProtocol(Protocol):
     def __init__(self):
         self.buf = ''

     def dataReceived(self, data):
         self.buf += data
         # This is stupid, don't do that
         while '</end_command>' in self.buf:
              content, self.buf = self.buf.split('</end_command>', 1)
              content += '</end_command>'
              deferToThread(blockingTask, content).addCallback(self.response)

     def response(self, result):
         # I got the response event!
         self.sendLine.write("response %s" % (result,))


See? deferToThread generates an event, which is used the pass the  
result of the command to a callback.


I hope it clarifies some things.

-- 
Thomas






From coder_gus at lavabit.com  Fri Mar 21 11:11:58 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Fri, 21 Mar 2008 19:11:58 +0200
Subject: [Twisted-Python] Re: writing back to the connection is	blocking
	my code
In-Reply-To: <20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
References: <47E12B43.1060105@lavabit.com>	<20080319212002.21558.1558098654.divmod.xquotient.8218@joule.divmod.com>	<47E21EF4.2060408@lavabit.com>
	<fru01j$tb$1@ger.gmane.org>	<47E2EA33.9030400@lavabit.com>
	<47E39DB0.90908@imperial.ac.uk>	<47E3AEFC.4040706@lavabit.com>	<20080321142516.ves96zu0d4csk4gg@wasabox.wasabout.net>	<47E3C128.5000202@lavabit.com>
	<20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
Message-ID: <47E3EC5E.9000501@lavabit.com>

Yup, that made it alot clear and thanks so much for it :)

But now another question comes up: what if for a special client I want 
to inject some data ... let's say that while he is processing some 
tasks, the backend observes that some data in the database has altered 
and wants to notify the client that he can't use that data anymore - if 
I am using deferToThread I don't think sending data back trough that is 
pretty easy ... or am I wrong?

Thanks for all.


Thomas Hervé wrote:
> Quoting coder_gus <coder_gus at lavabit.com>:
>
>> Hi, thanks for answering and clarifying this - until now you where the
>> only one that told me there no way of sending data if there is no event
>> on the server. So what I am trying to achieve, I have asked a couple of
>> weeks ago too about this matter (actually about the architecure): I
>> want to write an application server that receives data from clients
>> (client app written in delphi), data is in xml format (I want to write
>> it using a bare-bone protocol and not an xml-rpc server). The data the
>> client sends are some requests for some specific data hold in a
>> database. So, the client makes a request, request that is hold in a
>> synchronized queue together with an instance of the client's
>> connection. A coordinator takes the data from that queue and gives it
>> to some xml threads to parse it and the same coordinator take the
>> parsed data from the xml threads and give some workers to do the
>> bussiness work. This workers place the result in a queue from where the
>> coordinator takes care of sending it back to the clients. I will be
>> using sqlalchemy for database communication.
>> I know the architecture is pretty weird from the twisted perspective,
>> but when the dev-manager wants to do it that way, what can you do? So
>> that is the thing I want to achieve and from this started my question;
>> when the workers finish their work, they have the result, place it in a
>> queue and from there I have to send it to the clients asap, without
>> waiting the server for events.
>
> This is were you're wrong: pushing the result is an event! So to the 
> event 'I got some result in a thread', you'll fire a connection write. 
> Let me try to write some pseudo code to solve your problem:
>
>
> def blockingTask(content):
>     import sqlalchemy
>     # sqlalchemy stuff
>     query = session.query("bla")
>     ....
>     return result
>
>
> class CommandProtocol(Protocol):
>     def __init__(self):
>         self.buf = ''
>
>     def dataReceived(self, data):
>         self.buf += data
>         # This is stupid, don't do that
>         while '</end_command>' in self.buf:
>              content, self.buf = self.buf.split('</end_command>', 1)
>              content += '</end_command>'
>              deferToThread(blockingTask, 
> content).addCallback(self.response)
>
>     def response(self, result):
>         # I got the response event!
>         self.sendLine.write("response %s" % (result,))
>
>
> See? deferToThread generates an event, which is used the pass the 
> result of the command to a callback.
>
>
> I hope it clarifies some things.
>




From ddwiggins at advpubtech.com  Fri Mar 21 13:23:08 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 21 Mar 2008 12:23:08 -0700
Subject: [Twisted-Python] Advice sought on application evolution
Message-ID: <fs11ut$rgp$1@ger.gmane.org>

glyph at divmod.com wrote in the "Teach Me Twisted Redux" thread:
 > One of the things I did at PyCon was to reach out to the Django
 > community and ask them to start considering what it would take for
 > Twisted to be the preferred container and deployment platform for
 > Django.  They're thinking about it.

I've started thinking about something vaguely similar.  Currently, I 
have a small xml-rpc server in twisted, which provides a few operations 
on a large, complex database for a remote client.  (The bulk of the 
database operations are carried out by a desktop app.)  This was my 
first serious exposure to Twisted, and I found it reasonably easy to get 
going, once I got the hang of the concepts.  (It was probably eased by 
my having previous experience with asynchronous I/O, back in Paleolithic 
times when that was _the_ way it was done.)

My intention is to evolve this server toward a true "middle-tier" layer 
containing the business logic that's now scattered helter-skelter among 
various desktop apps and database stored procedures.  This layer, then, 
will be accessed both by remote clients and "local" (on the same LAN) 
desktop apps.

I'm leaning toward evolving the current xml-rpc server in this
direction, but I'm uncertain whether it's a good idea to implement a 
large amount of business logic directly in an asynchronous paradigm, and 
specifically directly in the Twisted framework.  Twisted looks to be an 
excellent base for a node (loosely speaking) in a communication network, 
but what are the implications of using it for what I have in mind?

A small example of something that bothers me is the necessity to break 
up otherwise "unitary" functions because some parts of them involve 
communications or heavy computation.  More concretely, consider the 
following sketch of a method:

def frobulate(...):
    step_1()
    step_2()
    step_3()
    step_4()
    step_5()
    return result5

Where the steps are logically coherent parts of the frobulation (in 
Beck's terms, the method "smells good").  Now assume that step_3 
involves a database access.  To avoid blocking, I might twist it like this:

def frobulate():
    step_1()
    step_2()
    deferred = step_3_async()
    deferred.addCallback(frobulate_4_and_5)
    return deferred

def frobulate_4_and_5(...):
    step_4()
    step_5()
    return result5

(Where step_3 has been changed to start the access and return a
deferred.)  In this simple sketch, the "visual noise" introduced isn't
too bad, but I'm afraid that as the functions multiply and become more 
complex, it'll make the application considerably harder to understand 
and manage, and possibly more prone to errors and/or unintended 
blocking, where twisting a synchronous operation would require serious 
re-architecting.

Another twist, using generators, might be:

@defer.deferredGenerator
def frobulate():
    step_1()
    step_2()
    step3InProgress = defer.waitForDeferred(step_3_async())
    yield step3InProgress
    step3Rslt = step3InProgress.getResult()
    step_4()
    step_5()
    yield result5
    return

(I've introduced a bit more detail, in that the result of step 3 might
be used in subsequent steps.)

In Python 2.5, I can say this more cleanly:

@defer.inlineCallbacks
def frobulate():
    step_1()
    step_2()
    step3Rslt = yield step_3_async()
    step_4()
    step_5()
    returnValue(result5)

This is looking a lot better, but still the asynchrony of step_3 "shows 
through".  (Again, I'm taking the viewpoint of someone trying to 
understand, maintain, and extend the functionality of the application, 
without having the asynchronous aspects "thrust in his face" more than 
absolutely necessary.)

Of course, I can avoid all this by going to a threading or separate 
process solution, but I'd like to find out if I'm missing something 
before I make such a commitment.

Thanks for any good words,

-- 
Don Dwiggins
Advanced Publishing Technology




From steve at holdenweb.com  Fri Mar 21 14:05:15 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 21 Mar 2008 16:05:15 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <1206107575.6164.17.camel@jcd-desktop>
References: <frjsm6$ekf$1@ger.gmane.org>	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>	<47E24B94.7090400@holdenweb.com>
	<1206107575.6164.17.camel@jcd-desktop>
Message-ID: <fs14e2$3rm$1@ger.gmane.org>

J. Clifford Dyer wrote:
> On Thu, 2008-03-20 at 07:33 -0400, Steve Holden wrote:
[...]
>> If someone can provide me with the code I will undertake to produce some 
>> sort of blog entry, and this might further publicize Twisted. Never 
>> underestimate the value of marketing: the Twisted community is a subset 
>> of the Python community, and it's my particular vanity that PyCon has 
>> helped to increase the Python community. It's important to keep feeding 
>> introductory material into the process as growth continues, because 
>> typically 50% of those present are likely to be newbies.
>>
> 
> Having contributed the replacement laptop, I've got the "official"
> working code from Teach Me Twisted.  I'd be happy to send it to you,
> Steve, or anyone else who wants to blog on the session.  One caveat: the
> laptop I had with me at python belongs to my employer, so it's sitting
> in my office right now, and I won't be able to get to it until Monday.
> 
The authentic source would be very welcome, Cliff, and thanks.

Hope the new laptop is behaving itself ...

>>> Next year, we should definitely have more regular Twisted talks; I'd say 
>>> that someone else should do another "teach me twisted" session, but I 
>>> don't know if anyone else has the raw charisma and pedagogical expertise 
>>> that Mr. Holden combined with Twisted ignorance to make this session so 
>>> great :).
>>>
>> Don't forget the whisky ...
>>
> 
> Believe me, I won't. ;) Actually I think the whisky was a minor but
> essential ingredient in making the event as fantastic as it was.  Just
> having the bottle sitting up front was a good reminder to people that we
> were there because we think this stuff is fun.  It took a lot of the
> formality off of the learning process, and that informality helped
> people get excited about the endeavor.
> 
> 
>> What we possibly need first of all is for someone to do a "Teach Me 
>> Teach Me" in the tutorial track, with myself and a number of the more 
>> experienced trainer types as the "subject matter experts". These things 
>> are always one-off in nature and it's unrealistic to expect that they 
>> will all have the same charm as "Teach Me Twisted" did this year for all 
>> the reasons I mention above, but if it gets information out more 
>> effectively about "difficult" topics it's probably worth a try if we can 
>> find someone to facilitate them.
>>
> 
> I'd love to try my hand at "teach me" style teaching, for what it's
> worth, and would be interested in a Teach Me Teach Me session.
> 
Maybe you could facilitate it?

regards
  Steve




From db3l.net at gmail.com  Fri Mar 21 14:56:26 2008
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 21 Mar 2008 16:56:26 -0400
Subject: [Twisted-Python] Re: SSL + AMP
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
Message-ID: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>

Nathan <nathan.stocks at gmail.com> writes:

> On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>>  If you could give some explanation of the security properties you expect
>>  (how do you intend for the client and server to exchange information
>>  about who they "really" are?) then we might be able to offer more direct
>>  guidance.
>
> The security properties that I want are:
>
> 1) My client and my server refuse to establish SSL (or any other type
> of) connections with anybody but each other.
> 2) My client and server do establish SSL connections with each other.
>
> Pretty simple in concept, really.  I'll go read the API docs like you
> suggested...

I posted a while back a small sample of how to handle that for a
general Twisted protocol that might be of some help, or point you in
the right direction as well.

http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html

(Note the followup messages that clarify an erroneous "False" left in
the original posted code)

This works fine with just normal CA/server/client certificates created
through the standard OpenSSL process and tools.

-- David




From jcd at sdf.lonestar.org  Fri Mar 21 16:03:05 2008
From: jcd at sdf.lonestar.org (J. Clifford Dyer)
Date: Fri, 21 Mar 2008 18:03:05 -0400
Subject: [Twisted-Python] Re: Teach Me Twisted Redux
In-Reply-To: <fs14e2$3rm$1@ger.gmane.org>
References: <frjsm6$ekf$1@ger.gmane.org>
	<20080320024458.21558.1644109393.divmod.xquotient.8272@joule.divmod.com>
	<47E24B94.7090400@holdenweb.com> <1206107575.6164.17.camel@jcd-desktop>
	<fs14e2$3rm$1@ger.gmane.org>
Message-ID: <1206136985.8836.3.camel@jcd-desktop>


On Fri, 2008-03-21 at 16:05 -0400, Steve Holden wrote:

> > 
> >> What we possibly need first of all is for someone to do a "Teach Me 
> >> Teach Me" in the tutorial track, with myself and a number of the more 
> >> experienced trainer types as the "subject matter experts". These things 
> >> are always one-off in nature and it's unrealistic to expect that they 
> >> will all have the same charm as "Teach Me Twisted" did this year for all 
> >> the reasons I mention above, but if it gets information out more 
> >> effectively about "difficult" topics it's probably worth a try if we can 
> >> find someone to facilitate them.
> >>
> > 
> > I'd love to try my hand at "teach me" style teaching, for what it's
> > worth, and would be interested in a Teach Me Teach Me session.
> > 
> Maybe you could facilitate it?
> 
> regards
>   Steve
> 
> 

Sounds like fun.  I'll think about it.


> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From washort at twistedmatrix.com  Fri Mar 21 16:07:02 2008
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Fri, 21 Mar 2008 18:07:02 -0400
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <20080321220702.GB13036@localhost.localdomain>

On Fri, Mar 21, 2008 at 12:23:08PM -0700, Don Dwiggins wrote:
> A small example of something that bothers me is the necessity to break 
> up otherwise "unitary" functions because some parts of them involve 
> communications or heavy computation.  More concretely, consider the 
> following sketch of a method:
> def frobulate(...):
>    step_1()
>    step_2()
>    step_3()
>    step_4()
>    step_5()
>    return result5
> 
> Where the steps are logically coherent parts of the frobulation (in 
> Beck's terms, the method "smells good").  Now assume that step_3 
> involves a database access.  To avoid blocking, I might twist it like this:
> 
> def frobulate():
>    step_1()
>    step_2()
>    deferred = step_3_async()
>    deferred.addCallback(frobulate_4_and_5)
>    return deferred
> 
> def frobulate_4_and_5(...):
>    step_4()
>    step_5()
>    return result5
> 
> (Where step_3 has been changed to start the access and return a
> deferred.)  In this simple sketch, the "visual noise" introduced isn't
> too bad, but I'm afraid that as the functions multiply and become more 
> complex, it'll make the application considerably harder to understand 
> and manage, and possibly more prone to errors and/or unintended 
> blocking, where twisting a synchronous operation would require serious 
> re-architecting.

There's a significant advantage to this approach you may not have
considered: When reading frobulate(), you can be assured that no other
code is being executed between step_1(), step_2(), and step_3_async().
Between step_3_async and step_4, anything may happen and arbitrary
amounts of time can pass. Having this explicitly represented in the code
makes certain things /much/ easier to reason about. I agree that the
syntax can be a little unwieldy, but the basic idea is sound: if you are
going to stop executing a multi-step operation and continue it later, it
should be clear that the flow of execution doesn't directly pass between
the two parts of the operation. There are other languages that make this
easier to express, but Python has enough advantages that I find this
problem worth putting up with. :)

><snip code example with generators>
> This is looking a lot better, but still the asynchrony of step_3 "shows 
> through".  (Again, I'm taking the viewpoint of someone trying to 
> understand, maintain, and extend the functionality of the application, 
> without having the asynchronous aspects "thrust in his face" more than 
> absolutely necessary.)

It does show through, and it has to, to make the program comprehensible.
I have a mild dislike for inlineCallbacks because it _does_ minimize the
changes between 'sequential' and 'twisted' code. :)

Basically, there are two choices in this regard for concurrency:

1) Preserve the property that only code you can see locally referenced
   can be executed (i.e., that in "step1(); step2()" only code called
   by those two functions can be executed before the statement is
   finished) and complicate the syntax in places where other code needs
   to be allowed to execute.

2) Preserve the syntax of statements being executed in order but give up
   the guarantee that nothing will be changed by 'outside' code in
   between them.

Twisted's design is centered entirely around #1. Multithreaded
concurrency chooses #2, which is why there's much need for locks and
mutexes and monitors and what have you. The result is slightly more
verbose code, but much more _understandable_ code.
 
> Of course, I can avoid all this by going to a threading or separate 
> process solution, but I'd like to find out if I'm missing something 
> before I make such a commitment.

Separate processes can be the best of both worlds -- things can run in
sequence and not affect each other in surprising ways. The downside is
that it's more difficult for them to affect each other at all. :)

I hope this helps explain some of Twisted's design choices.





From maarten at treewalker.org  Fri Mar 21 17:51:30 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 22 Mar 2008 00:51:30 +0100
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <200803220051.36054.maarten@treewalker.org>

On Friday 21 March 2008, Don Dwiggins wrote:

> @defer.inlineCallbacks
> def frobulate():
>     step_1()
>     step_2()
>     step3Rslt = yield step_3_async()
>     step_4()
>     step_5()
>     returnValue(result5)
>
> This is looking a lot better, but still the asynchrony of step_3 "shows
> through".  (Again, I'm taking the viewpoint of someone trying to
> understand, maintain, and extend the functionality of the application,
> without having the asynchronous aspects "thrust in his face" more than
> absolutely necessary.)
>
> Of course, I can avoid all this by going to a threading or separate
> process solution, but I'd like to find out if I'm missing something
> before I make such a commitment.

If you're going to put the business logic in a separate process, you can use 
Twisted in the central dispatch process and the programmer of a business 
logic module does not even have to know.

If you're going to use a single process, then you will need some mechanism 
to run business logic concurrently. No matter whether you choose threaded 
or asynchronous, you will not be able to hide your choice from the business 
logic programmer.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080322/96f81dc4/attachment.sig>

From matt at madebykite.com  Sat Mar 22 03:47:09 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 22 Mar 2008 09:47:09 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080321220702.GB13036@localhost.localdomain>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
Message-ID: <87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>

I'd like to elaborate, for my own benefit as much as anyone else ;)

On 21 Mar 2008, at 22:07, washort at twistedmatrix.com wrote:
> 1) Preserve the property that only code you can see locally referenced
>    can be executed (i.e., that in "step1(); step2()" only code called
>    by those two functions can be executed before the statement is
>    finished) and complicate the syntax in places where other code  
> needs
>    to be allowed to execute.

Or another way of saying it is that what is slightly dangerous about  
inlineCallbacks is you lose any benefits of parallelism you may have  
been enjoying because you want to make your code slightly more  
readable / writeable.

Consider the following:

@defer.deferredGenerator
def foo(self, d):
     for x in self.somelist:
         w = defer.waitForDeferred(x.bar())
         yield w
     d.callback(True)

Each successive call of x.bar must wait for the previous one to  
complete. Whereas in the following example x.bar() is called in  
parallel for each item in self.someList:

def foo(self):
     d = defer.Deferred()
     self._done_count = 0
     for x in self.somelist:
         x.bar().addCallback(self._done_bar, d)
     return d

def _done_bar(self, result, d):
     self._done_count = self._done_count + 1
     if self._done_count == len(self.somelist):
         d.callback(result)

IMHO, inline callbacks should only be employed when you can guarantee  
that sequential executions of each statement is exactly what you want  
to do. Readability / writeability comes second.


Matt







From faraz.khan at emergen.biz  Sat Mar 22 04:36:34 2008
From: faraz.khan at emergen.biz (Faraz Khan)
Date: Sat, 22 Mar 2008 15:36:34 +0500
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <47E39D0A.8080707@imperial.ac.uk>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>
	<47E39D0A.8080707@imperial.ac.uk>
Message-ID: <20080322153634.1263149rijyxmiqs@maggie.wswhost.net>

>>
>> Any advice would be highly appreciated.
>>
>>
>
> Run child processes doing the actual admin tasks.

You mean respawn a different process altogether using os.respawn or  
the likes? Thats what I would think- was just hoping for a less  
wasteful approach but I guess there is none.

Thanks!

-- 
Faraz R Khan
Chief Architect
Emergen Consulting Pvt Ltd
www.emergen.biz




From p.mayers at imperial.ac.uk  Sat Mar 22 04:51:57 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 22 Mar 2008 10:51:57 +0000
Subject: [Twisted-Python] SetUID per XML RPC client
In-Reply-To: <20080322153634.1263149rijyxmiqs@maggie.wswhost.net>
References: <20080320163623.95643rk17jr849c0@maggie.wswhost.net>	<47E39D0A.8080707@imperial.ac.uk>
	<20080322153634.1263149rijyxmiqs@maggie.wswhost.net>
Message-ID: <47E4E4CD.9000805@imperial.ac.uk>

Faraz Khan wrote:
>>>
>>> Any advice would be highly appreciated.
>>>
>>>
>>
>> Run child processes doing the actual admin tasks.
> 
> You mean respawn a different process altogether using os.respawn or the 

Yes, but you'll need to use the Twisted process support e.g. see 
twisted.internet.utils.getProcess*

> likes? Thats what I would think- was just hoping for a less wasteful 
> approach but I guess there is none.



From p.mayers at imperial.ac.uk  Sat Mar 22 06:21:57 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 22 Mar 2008 12:21:57 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <47E4F9E5.7030002@imperial.ac.uk>

> 
> In Python 2.5, I can say this more cleanly:
> 
> @defer.inlineCallbacks
> def frobulate():
>    step_1()
>    step_2()
>    step3Rslt = yield step_3_async()
>    step_4()
>    step_5()
>    returnValue(result5)
> 
> This is looking a lot better, but still the asynchrony of step_3 "shows 
> through".  (Again, I'm taking the viewpoint of someone trying to 
> understand, maintain, and extend the functionality of the application, 
> without having the asynchronous aspects "thrust in his face" more than 
> absolutely necessary.)
> 

The feeling amongst a lot of people, myself included, is that it's a 
*good* thing that the asynchronous nature shows. If you attempt to hide 
it, you forget the actual nature of the problem and start forgetting 
some fundamental problems that might occur.

A related example is Twisted's Perspective Broker - it explicitly has 
remoteref.callRemote('name', *args) semantics, so that callers are aware 
the errors returned could be any one of the network-related ones, as 
well as errors from the call itself.

> Of course, I can avoid all this by going to a threading or separate 
> process solution, but I'd like to find out if I'm missing something 
> before I make such a commitment.
> 
> Thanks for any good words,
> 




From mithrandi at mithrandi.net  Sat Mar 22 07:54:44 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 22 Mar 2008 15:54:44 +0200
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
Message-ID: <20080322135444.GA9572@mithrandi.net>

* Matthew Glubb <matt at madebykite.com> [2008-03-22 09:47:09 +0000]:

> Each successive call of x.bar must wait for the previous one to  
> complete. Whereas in the following example x.bar() is called in parallel 
> for each item in self.someList:
>
> def foo(self):
>     d = defer.Deferred()
>     self._done_count = 0
>     for x in self.somelist:
>         x.bar().addCallback(self._done_bar, d)
>     return d
>
> def _done_bar(self, result, d):
>     self._done_count = self._done_count + 1
>     if self._done_count == len(self.somelist):
>         d.callback(result)

Of course, you can also write this something like this (using
inlineCallbacks style just to save me some typing):

def foo(self):
    ds = []
    for x in self.somelist:
        ds.append(x.bar())
    for d in ds:
        yield d
    # Even better would probably be:
    # yield gatherResults(ds)

But yes, the danger of accidentally serializing operations that don't
need to be serialized, and not even realising it, is one of the problems
with this coding style.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080322/5777f2b5/attachment.sig>

From waterbug at pangalactic.us  Sat Mar 22 09:58:30 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 22 Mar 2008 11:58:30 -0400
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12: 'safe'
	imported but unused"
In-Reply-To: <E1Jd3Qt-0003qs-HI@cube.twistedmatrix.com>
References: <E1Jd3Qt-0003qs-HI@cube.twistedmatrix.com>
Message-ID: <47E52CA6.60602@pangalactic.us>

trac at twistedmatrix.com wrote:
> Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun <exarkun at divmod.com>:
> 
> #3022 deprecated `twisted.enterprise.util` and everything in it, including `safe`.
> Once that's been out for a while, we'll get rid of this stuff.

Okay, but the problem is that "safe" is not even *used* in adbapi,
nor in my code, but every time adbapi is imported, the deprecation
warning *incorrectly* spews out -- it's rather deceptive, not to
mention annoying.

(The "imported but not used" warning came from pyflakes -- the
import should have been removed even before the deprecation.)

Steve



From exarkun at divmod.com  Sat Mar 22 13:08:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 22 Mar 2008 14:08:57 -0500
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12: 'safe'
	imported but unused"
In-Reply-To: <47E52CA6.60602@pangalactic.us>
Message-ID: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>

On Sat, 22 Mar 2008 11:58:30 -0400, Stephen Waterbury <waterbug at pangalactic.us> wrote:
>trac at twistedmatrix.com wrote:
>>Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun 
>><exarkun at divmod.com>:
>>
>>#3022 deprecated `twisted.enterprise.util` and everything in it, including 
>>`safe`.
>>Once that's been out for a while, we'll get rid of this stuff.
>
>Okay, but the problem is that "safe" is not even *used* in adbapi,
>nor in my code, but every time adbapi is imported, the deprecation
>warning *incorrectly* spews out -- it's rather deceptive, not to
>mention annoying.

Aha!  Sorry, I didn't get this from the ticket.  I've adjusted it
slightly so that, I hope, it is a bit more clear. :)

Jean-Paul



From waterbug at pangalactic.us  Sat Mar 22 15:43:17 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 22 Mar 2008 17:43:17 -0400
Subject: [Twisted-Python] Re: exarkun changed u"adbapi.py:12:
	'safe'	imported but unused"
In-Reply-To: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>
References: <20080322190857.6859.851813893.divmod.quotient.21762@ohm>
Message-ID: <47E57D75.4040708@pangalactic.us>

Jean-Paul Calderone wrote:
> On Sat, 22 Mar 2008 11:58:30 -0400, Stephen Waterbury 
> <waterbug at pangalactic.us> wrote:
>> trac at twistedmatrix.com wrote:
>>> Ticket u"adbapi.py:12: 'safe' imported but unused" changed by exarkun 
>>> <exarkun at divmod.com>:
>>>
>>> #3022 deprecated `twisted.enterprise.util` and everything in it, 
>>> including `safe`.
>>> Once that's been out for a while, we'll get rid of this stuff.
>>
>> Okay, but the problem is that "safe" is not even *used* in adbapi,
>> nor in my code, but every time adbapi is imported, the deprecation
>> warning *incorrectly* spews out -- it's rather deceptive, not to
>> mention annoying.
> 
> Aha!  Sorry, I didn't get this from the ticket.  I've adjusted it
> slightly so that, I hope, it is a bit more clear. :)

No problem:  I understand, you thought I was just complaining about
the deprecation ... I don't mind deprecation warnings, as long as
I'm actually *using* the thing that I'm getting warned about.  ;)

Thanks!
Steve




From radix at twistedmatrix.com  Sat Mar 22 20:00:09 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 22 Mar 2008 22:00:09 -0400
Subject: [Twisted-Python] 8.0.0pre2
Message-ID: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>

Hi all. I just put out another pre-release of Twisted 8. Compared to
the last pre-release, this one comes with greatly improved IOCP
reactor and easy_installability. It's not registered on PyPI yet, but
you can test it by easy_installing the tarball directly. Only the main
Twisted tarball is easy_installable, not the subprojects.

http://twistedmatrix.com/users/radix/DIST/


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Sat Mar 22 20:33:40 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 22 Mar 2008 22:33:40 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>

On Sat, Mar 22, 2008 at 10:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hi all. I just put out another pre-release of Twisted 8. Compared to
>  the last pre-release, this one comes with greatly improved IOCP
>  reactor and easy_installability. It's not registered on PyPI yet, but
>  you can test it by easy_installing the tarball directly. Only the main
>  Twisted tarball is easy_installable, not the subprojects.
>
>  http://twistedmatrix.com/users/radix/DIST/

By the way, for those of you who were unhappy with the fact that the
NEWS files were split up and hard to find, the new release includes a
top-level NEWS that aggregates the NEWS files from all the
subprojects.

It's available here, if you just want to browse:

http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Sat Mar 22 21:48:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 03:48:23 -0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080322135444.GA9572@mithrandi.net>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
Message-ID: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>

On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
>But yes, the danger of accidentally serializing operations that don't
>need to be serialized, and not even realising it, is one of the 
>problems
>with this coding style.

As time goes on, I'm becoming a bigger fan of inlineCallbacks.

Too much serialization, even accidental serialization, trades 
comprehensibility for performance.  I think that's a reasonable place to 
start: make your system easy to understand, then make it fast once you 
know what's going on.

It's not a good place to end up, though.  So it's important to use 
inlineCallbacks for the right thing.

It's great as a high-level prototyping tool and an orchestration 
language for distributed conversations with large numbers of steps and 
coarse-grained error handling.  It's bad as a way of representing state 
machines or continuous processes.

In other words, don't implement protocols or frameworks with 
inlineCallbacks.  You should be working with higher level things that 
already return Deferreds.  A key hint that you're trying to brute-force 
a state machine: the entire body of your inlineCallbacks function is a 
loop.



From glyph at divmod.com  Sat Mar 22 21:56:24 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 03:56:24 -0000
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
Message-ID: <20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>


On 02:33 am, radix at twistedmatrix.com wrote:
>It's available here, if you just want to browse:
>
>http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt

The description of #2180 is incorrect; DeferredFilesystemLock is in 
twisted.internet.defer, not twisted.python.lockfile.



From mithrandi at mithrandi.net  Sat Mar 22 21:57:16 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 23 Mar 2008 05:57:16 +0200
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <20080323035716.GA20787@mithrandi.net>

* glyph at divmod.com <glyph at divmod.com> [2008-03-23 03:48:23 -0000]:

> It's great as a high-level prototyping tool and an orchestration  
> language for distributed conversations with large numbers of steps and  
> coarse-grained error handling.  It's bad as a way of representing state  
> machines or continuous processes.

That's a pretty nice description, I think I'll file that one away; I
haven't actually used inlineCallbacks (or defgen) in any real code, but
back before I discovered Twisted, I wrote an application where I was
using Stackless in a fashion similar to inlineCallbacks to sequence
operations that had to be performed in a fairly complex and sequential
order. Each step was broken down into its own code, and then it was all
put together in a "master" function, which I would have written with
inlineCallbacks in Twisted code.

> In other words, don't implement protocols or frameworks with  
> inlineCallbacks.  You should be working with higher level things that  
> already return Deferreds.  A key hint that you're trying to brute-force  
> a state machine: the entire body of your inlineCallbacks function is a  
> loop.

The corollary(?) to this is that if your normal deferred/callback-code
feels too awkward, perhaps you need to break it down into
better-contained logical units, rather than trying to smush it all
together inlineCallbacks-style.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080323/d8e80488/attachment.sig>

From exarkun at twistedmatrix.com  Sat Mar 22 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Mar 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1206245107.62.1047160022@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080323/57bddbb5/attachment.html>

From p.mayers at imperial.ac.uk  Sun Mar 23 05:06:23 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 23 Mar 2008 11:06:23 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <47E639AF.2020200@imperial.ac.uk>

> 
> It's great as a high-level prototyping tool and an orchestration 
> language for distributed conversations with large numbers of steps and 
> coarse-grained error handling.  It's bad as a way of representing state 
> machines or continuous processes.

Why?



From manlio_perillo at libero.it  Sun Mar 23 05:17:18 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 23 Mar 2008 12:17:18 +0100
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <47E63C3E.5050509@libero.it>

Christopher Armstrong ha scritto:
> Hi all. I just put out another pre-release of Twisted 8. 

I personally dislike this new versioning scheme.



Manlio Perillo



From lists at collab.nl  Sun Mar 23 09:03:04 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Sun, 23 Mar 2008 16:03:04 +0100
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <47E63C3E.5050509@libero.it>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
Message-ID: <9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>

I also dislike the idea. One major version nr per year sounds ok but  
why not use Twisted 3.x for 2008, Twisted 4.x for 2009 etc.

Thijs

On Mar 23, 2008, at 12:17 PM, Manlio Perillo wrote:

> Christopher Armstrong ha scritto:
>> Hi all. I just put out another pre-release of Twisted 8.
>
> I personally dislike this new versioning scheme.
>
>
>
> Manlio Perillo
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From phil at bubblehouse.org  Sun Mar 23 09:13:28 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 23 Mar 2008 11:13:28 -0400
Subject: [Twisted-Python] 8.0.0pre2
In-Reply-To: <9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
Message-ID: <141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>

On Mar 23, 2008, at 12:17 PM, Manlio Perillo wrote:
> Christopher Armstrong ha scritto:
>> Hi all. I just put out another pre-release of Twisted 8.
>
> I personally dislike this new versioning scheme.
>
> On Mar 23, 2008, at 11:03 AM, Thijs Triemstra | Collab wrote:
>> I also dislike the idea. One major version nr per year sounds ok  
>> but why not use Twisted 3.x for 2008, Twisted 4.x for 2009 etc.
>>
>> Thijs

I've got to defend the new scheme, because I like big version numbers,  
and Twisted is awesome enough that I think it deserves them, like  
Ubuntu (which I admit is the only other project I know of that uses  
the yearly version scheme....well, besides the windows 9x  
series... ;-) ).

But one thing that I think is nice about Ubuntu's scheme is that point  
releases are based on the month of the year.

I wonder if the Twisted approach of mixing the year-style and the  
fractional-version style might be too confusing.

-phil



From radix at twistedmatrix.com  Sun Mar 23 09:49:37 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 11:49:37 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<60ed19d40803221933r58fa436cyff4700f91599f72a@mail.gmail.com>
	<20080323035624.21558.263173226.divmod.xquotient.8702@joule.divmod.com>
Message-ID: <60ed19d40803230849g422bb7eby9eaf461760f0f664@mail.gmail.com>

On Sat, Mar 22, 2008 at 11:56 PM,  <glyph at divmod.com> wrote:
>
>  On 02:33 am, radix at twistedmatrix.com wrote:
>  >It's available here, if you just want to browse:
>  >
>  >http://twistedmatrix.com/users/radix/DIST/Twisted-8.0.0pre2/NEWS.txt
>
>  The description of #2180 is incorrect; DeferredFilesystemLock is in
>  twisted.internet.defer, not twisted.python.lockfile.

Thanks for pointing this out. I'm glad someone's reading that
changelog. :-) I'll fix it.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From zooko at zooko.com  Sun Mar 23 09:55:17 2008
From: zooko at zooko.com (zooko)
Date: Sun, 23 Mar 2008 09:55:17 -0600
Subject: [Twisted-Python] Hack Fest 4!  San Francisco, Thursday, March 27,
	2008
Message-ID: <67F5F606-02CB-4FEA-BC97-C5C7B7ACD93E@zooko.com>

Folks:

Allmydata.com will host our Fourth Hack Fest this coming Thursday  
evening, starting at 17:00, at Allmydata HQ in San Francisco.

We will provide pizza, pop, pilsners [*], projectors, packets [**],  
pillows and pre-recorded music [***].  You will provide code, which  
will sing and dance on the projector screens.  Anyone who changes  
their source code and runs the result live gets double bonus points!   
We like Open Source Software (and Free Software), and peer-to-peer,  
and many other things (at Hack Fest 3, Second Life was lots of fun).

You are also welcome to come and sit quietly and stare into your  
laptop all night while chatting on IRC, like some people always do.   
Also you are welcome to drink lots of beer and excitedly tell stories  
and argue.

Please e-mail zooko at zooko.com and secorp at allmydata.com .

Regards,

Zooko

[*] or possibly other beers, as determined by Peter at time of purchase
[**] IPv4 only; ethernet and 802.11g available
[***] produced by Justin Boreta, mild-mannered QA guy by day, famous  
DJ by night



From therve at free.fr  Sun Mar 23 06:29:11 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Sun, 23 Mar 2008 13:29:11 +0100
Subject: [Twisted-Python] Re: writing back to the connection
	=?iso-8859-1?q?is=09blocking_my?= code
In-Reply-To: <47E3EC5E.9000501@lavabit.com>
References: <47E12B43.1060105@lavabit.com>
	<20080321162644.k7ihf3w4kk0kc0k4@wasabox.wasabout.net>
	<47E3EC5E.9000501@lavabit.com>
Message-ID: <200803231329.11754.therve@free.fr>

Le Friday 21 March 2008 18:11:58 coder_gus, vous avez écrit :
> Yup, that made it alot clear and thanks so much for it :)
>
> But now another question comes up: what if for a special client I want
> to inject some data ... let's say that while he is processing some
> tasks, the backend observes that some data in the database has altered
> and wants to notify the client that he can't use that data anymore - if
> I am using deferToThread I don't think sending data back trough that is
> pretty easy ... or am I wrong?

Indeed, that's not a problem. You just have to pass something to your task 
that will allow it to send data back, and remember that Twisted is not 
threadsafe so that you must use reactor.callFromThread. Let's get back to our 
example:

def blockingTask(content, safeWrite):
     import sqlalchemy
     # sqlalchemy stuff
     query = session.query("bla")
     data  = query.getresult()
     if data == "unexpected":
         safeWrite("Not expected!")
         # But I continue my task
     ....
     return result


class CommandProtocol(Protocol):
     def __init__(self):
         self.buf = ''

     def safeWrite(self, data):
         reactor.callFromThread(self.transport.write, data)

     def dataReceived(self, data):
         self.buf += data
         # This is stupid, don't do that
         while '</end_command>' in self.buf:
              content, self.buf = self.buf.split('</end_command>', 1)
              content += '</end_command>'
              deferToThread(blockingTask, content,     
                      self.safeWrite).addCallback(self.response)

     def response(self, result):
         # I got the response event!
         self.sendLine.write("response %s" % (result,))


See? We're passing a method to the task, so that you can send notification 
whenever you want. In practice, you'll have to check if the connection is 
still alive, but the main thing to remind is to use reactor.callFromThread.

-- 
Thomas



From radix at twistedmatrix.com  Sun Mar 23 13:26:54 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 15:26:54 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
Message-ID: <60ed19d40803231226m12e53a24j1369dd09d7ddf0a2@mail.gmail.com>

On Sat, Mar 22, 2008 at 10:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hi all. I just put out another pre-release of Twisted 8. Compared to
>  the last pre-release, this one comes with greatly improved IOCP
>  reactor and easy_installability. It's not registered on PyPI yet, but
>  you can test it by easy_installing the tarball directly. Only the main
>  Twisted tarball is easy_installable, not the subprojects.
>
>  http://twistedmatrix.com/users/radix/DIST/


We've found a bug which prevents easy_installing from the main
Twisted-8.0.0pre2.tar.bz2 file if you're using Python 2.4. This is
because of a bug in the tarfile module, which easy_install uses to
extract tar files. It seems to be related to long paths inside the tar
file. Any time the toplevel directory entry is 17 bytes long, this
behavior is invoked, and that's how long "Twisted-8.0.0pre2" is. It's
probably related to this bug: http://bugs.python.org/issue1484695,
especially the comment 50215.

I know, it's like a sick joke. But anyway, you should be able to
easy_install with python 2.5. By accident, when we actually release
the final version, it will be possible to install because the paths in
the tar file will be realigned to avoid the bug (I've tested this, but
obviously we can't keep guaranteeing this in the future; hopefully
python2.4 will have a new release with this bugfix backported).

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From nico at teknico.net  Sun Mar 23 14:46:24 2008
From: nico at teknico.net (Nicola Larosa)
Date: Sun, 23 Mar 2008 21:46:24 +0100
Subject: [Twisted-Python] Re: 8.0.0pre2
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
Message-ID: <20080323204627.19B7A124021@slice.teknico.net>

Phil Christensen wrote:
> I've got to defend the new scheme, because I like big version numbers,
> and Twisted is awesome enough that I think it deserves them, like
> Ubuntu (which I admit is the only other project I know of that uses
> the yearly version scheme....well, besides the windows 9x
> series... ;-) ).
> 
> But one thing that I think is nice about Ubuntu's scheme is that point
> releases are based on the month of the year.
> 
> I wonder if the Twisted approach of mixing the year-style and the
> fractional-version style might be too confusing.

I have to second this. Using the year is fine, but:

1) mixing the year for major and arbitrary minor and bugfix is ugly;

2) doing something like Ubuntu, but not quite, does not help.

-- 
Nicola Larosa - http://www.tekNico.net/

Sometimes you don't want things that work like the real world, sometimes
you want things that work like computers. -- Damien Katz, April 2006





From radix at twistedmatrix.com  Sun Mar 23 15:09:48 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 23 Mar 2008 17:09:48 -0400
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323204627.19B7A124021@slice.teknico.net>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<47E63C3E.5050509@libero.it>
	<9BBF9858-9F3B-4C7B-A2D7-892349CEB6AC@collab.nl>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
Message-ID: <60ed19d40803231409q43991082l5a0800cfda285e56@mail.gmail.com>

On Sun, Mar 23, 2008 at 4:46 PM, Nicola Larosa <nico at teknico.net> wrote:
> Phil Christensen wrote:
>  > I've got to defend the new scheme, because I like big version numbers,
>  > and Twisted is awesome enough that I think it deserves them, like
>  > Ubuntu (which I admit is the only other project I know of that uses
>  > the yearly version scheme....well, besides the windows 9x
>  > series... ;-) ).
>  >
>  > But one thing that I think is nice about Ubuntu's scheme is that point
>  > releases are based on the month of the year.
>  >
>  > I wonder if the Twisted approach of mixing the year-style and the
>  > fractional-version style might be too confusing.
>
>  I have to second this. Using the year is fine, but:
>
>  1) mixing the year for major and arbitrary minor and bugfix is ugly;
>
>  2) doing something like Ubuntu, but not quite, does not help.

Using months for the secondary number is confusing. See how many
people talk about imaginary releases like "Ubuntu 7.0" and "Ubuntu
7.1". This scheme makes it look enough like a version number that
those kinds of things are unlikely.

Anyway, the version number is fairly irrelevant. I'd suggest not
worrying about it too much, because it's really unlikely to affect
anyone.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From therve at free.fr  Sun Mar 23 07:47:04 2008
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Sun, 23 Mar 2008 14:47:04 +0100
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <20080323204627.19B7A124021@slice.teknico.net>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
Message-ID: <200803231447.04145.therve@free.fr>

Le Sunday 23 March 2008 21:46:24 Nicola Larosa, vous avez écrit :
> Phil Christensen wrote:
> > I've got to defend the new scheme, because I like big version numbers,
> > and Twisted is awesome enough that I think it deserves them, like
> > Ubuntu (which I admit is the only other project I know of that uses
> > the yearly version scheme....well, besides the windows 9x
> > series... ;-) ).
> >
> > But one thing that I think is nice about Ubuntu's scheme is that point
> > releases are based on the month of the year.
> >
> > I wonder if the Twisted approach of mixing the year-style and the
> > fractional-version style might be too confusing.
>
> I have to second this. Using the year is fine, but:
>
> 1) mixing the year for major and arbitrary minor and bugfix is ugly;
>
> 2) doing something like Ubuntu, but not quite, does not help.

There is a ticket opened in the tracker: 
http://twistedmatrix.com/trac/ticket/2353. This is probably the best place to 
discuss this.

-- 
Thomas



From glyph at divmod.com  Sun Mar 23 17:14:55 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 23 Mar 2008 23:14:55 -0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <47E639AF.2020200@imperial.ac.uk>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
	<47E639AF.2020200@imperial.ac.uk>
Message-ID: <20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>

On 11:06 am, p.mayers at imperial.ac.uk wrote:
>>
>>It's great as a high-level prototyping tool and an orchestration 
>>language for distributed conversations with large numbers of steps and 
>>coarse- grained error handling.  It's bad as a way of representing 
>>state machines or continuous processes.
>
>Why?

Here's something which we probably should have done with a state 
machine, but instead did with deferredGenerator (the predecessor to 
inlineCallbacks).

http://divmod.org/trac/browser/trunk/Quotient/xquotient/grabber.py#L438

The function's really long, and there's a ton of duplication between all 
of the "except" clauses, and there needs to be a try/except around every 
single deferred call.  This probably would have been better implemented 
as a regular state-machine, because that would have allowed decomposing 
the problem further.

Granted, you could blame the factoring here on any number of things.  It 
could have been broken into different steps even with deferredGenerator, 
it could have been documented better, it could have stored more state on 
the instance so that you could inspect its state rather than hiding it 
as local variables... but given that this is general stylistic advice I 
think that the point holds.



From adelagon at gmail.com  Mon Mar 24 02:54:33 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 24 Mar 2008 16:54:33 +0800
Subject: [Twisted-Python] Re: 8.0.0pre2
In-Reply-To: <200803231447.04145.therve@free.fr>
References: <60ed19d40803221900u6650dfa3w2ef767c37767c8ed@mail.gmail.com>
	<141513E0-E72A-45D0-B46E-F7F8AD744AAD@bubblehouse.org>
	<20080323204627.19B7A124021@slice.teknico.net>
	<200803231447.04145.therve@free.fr>
Message-ID: <7a01f6c00803240154r2410e017ie46808772b97fe7f@mail.gmail.com>

A little bit off-topic. Anyone tried replacing
twisted.internet.epollreactor.py from this branch to their twisted
2.50installations to fix the
99.9% CPU load issue? I tried this on one of my dev servers so far it's
fine.

----
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080324/4453d20e/attachment.html>

From vvangelovski at gmail.com  Mon Mar 24 07:48:22 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 24 Mar 2008 14:48:22 +0100
Subject: [Twisted-Python] URL encoding
Message-ID: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>

Is there any method in twisted that does proper url encoding? For
example 'http://www.example.com/part1 part2.html' ->
'http://www.example.com/part1%20part2.html'



From exarkun at divmod.com  Mon Mar 24 08:33:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 09:33:37 -0500
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
Message-ID: <20080324143337.6859.681364631.divmod.quotient.22374@ohm>

On Mon, 24 Mar 2008 14:48:22 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>Is there any method in twisted that does proper url encoding? For
>example 'http://www.example.com/part1 part2.html' ->
>'http://www.example.com/part1%20part2.html'
>

See the stdlib urllib module for APIs for manipulating URLs.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 08:34:00 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 09:34:00 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: 0
Message-ID: <20080324143400.6859.1218997852.divmod.quotient.22375@ohm>

I've been trying to put a few patches into twisted.python.filepath lately to support symlinks.  This is because I'm trying to implement a conch SFTP server using FilePath.

I know FilePath is supposed to be cross-platform, so I am wondering how to go about it.  For instance, it would be really easy to add a flag to restat that specifies whether to use os.stat o os.lstat.

But how should I handle the getAccessTime/etc. functions?  Should I add a FilePath.symlink() function (that creates a symlink to said FilePath)?

Should I just implement my own subclass of FilePath that handles symlinks and not try to change FilePath?

Thanks for the help,
Ying



From nathan.stocks at gmail.com  Mon Mar 24 08:40:23 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 08:40:23 -0600
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
Message-ID: <96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>

On Mon, Mar 24, 2008 at 7:48 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> Is there any method in twisted that does proper url encoding? For
>  example 'http://www.example.com/part1 part2.html' ->
>  'http://www.example.com/part1%20part2.html'

What about urllib.quote or urllib.urlencode?

http://docs.python.org/lib/module-urllib.html

~ Nathan



From vvangelovski at gmail.com  Mon Mar 24 09:20:05 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Mon, 24 Mar 2008 16:20:05 +0100
Subject: [Twisted-Python] URL encoding
In-Reply-To: <96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
Message-ID: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>

urllib.quote is useless as is

>>> urllib.quote('http://www.example.com/part1 part2.html')
'http%3A//www.example.com/part1%20part2.html

and from what I understand urllib.urlencode is for encoding query parameters.

On Mon, Mar 24, 2008 at 3:40 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Mon, Mar 24, 2008 at 7:48 AM, Vasil Vangelovski
>  <vvangelovski at gmail.com> wrote:
>  > Is there any method in twisted that does proper url encoding? For
>  >  example 'http://www.example.com/part1 part2.html' ->
>  >  'http://www.example.com/part1%20part2.html'
>
>  What about urllib.quote or urllib.urlencode?
>
>  http://docs.python.org/lib/module-urllib.html
>
>  ~ Nathan
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Mar 24 09:33:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 10:33:11 -0500
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <20080324153311.6859.1221002954.divmod.quotient.22397@ohm>

On Mon, 24 Mar 2008 16:20:05 +0100, Vasil Vangelovski <vvangelovski at gmail.com> wrote:
>urllib.quote is useless as is
>
>>>> urllib.quote('http://www.example.com/part1 part2.html')
>'http%3A//www.example.com/part1%20part2.html
>
>and from what I understand urllib.urlencode is for encoding query parameters.

It's not useless, it just doesn't make any sense to use it that way.  Use
urllib.quote on each segment value _before_ you build the larger URL out
of it.

    'http://www.example.com/' + urllib.quote('part1 part2.html')

Since this isn't really Twisted related, please follow up on the subject
on comp.lang.python.

Jean-Paul



From nathan.stocks at gmail.com  Mon Mar 24 09:39:20 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 09:39:20 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80803240839r21ddeb37qcdcb0aaa65916615@mail.gmail.com>

On Fri, Mar 21, 2008 at 2:56 PM, David Bolen <db3l.net at gmail.com> wrote:
>
> Nathan <nathan.stocks at gmail.com> writes:
>
>  > On Wed, Mar 19, 2008 at 3:09 PM,  <glyph at divmod.com> wrote:
>  >>  If you could give some explanation of the security properties you expect
>  >>  (how do you intend for the client and server to exchange information
>  >>  about who they "really" are?) then we might be able to offer more direct
>  >>  guidance.
>  >
>  > The security properties that I want are:
>  >
>  > 1) My client and my server refuse to establish SSL (or any other type
>  > of) connections with anybody but each other.
>  > 2) My client and server do establish SSL connections with each other.
>  >
>  > Pretty simple in concept, really.  I'll go read the API docs like you
>  > suggested...
>
>  I posted a while back a small sample of how to handle that for a
>  general Twisted protocol that might be of some help, or point you in
>  the right direction as well.
>
>  http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html
>
>  (Note the followup messages that clarify an erroneous "False" left in
>  the original posted code)
>
>  This works fine with just normal CA/server/client certificates created
>  through the standard OpenSSL process and tools.
>
>  -- David

That's just what I was looking for!

I'm going to see if I can use that example to add SSL to my AMP stuff
by the end of today.  First, I've got to finish figuring out the
certificate authority stuff.  I'm working through the following page
to set up my own local CA:

http://sial.org/howto/openssl/ca/

If anyone knows a better guide to follow, please let me know!

~ Nathan



~ Nathan



From drew.smathers at gmail.com  Mon Mar 24 09:42:13 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 24 Mar 2008 11:42:13 -0400
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>

On Mon, Mar 24, 2008 at 11:20 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> urllib.quote is useless as is
>
>  >>> urllib.quote('http://www.example.com/part1 part2.html')
>  'http%3A//www.example.com/part1%20part2.html
>
>  and from what I understand urllib.urlencode is for encoding query parameters.
>

You want to quote only everything after "http://".  ':' is valid only
to delimit the schema from the URI - so the quoting is correct.

-Drew



From nathan.stocks at gmail.com  Mon Mar 24 09:45:47 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 09:45:47 -0600
Subject: [Twisted-Python] URL encoding
In-Reply-To: <406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
Message-ID: <96c9d6a80803240845t7567dee3x3e93c490bb046826@mail.gmail.com>

On Mon, Mar 24, 2008 at 9:20 AM, Vasil Vangelovski
<vvangelovski at gmail.com> wrote:
> urllib.quote is useless as is
>
>  >>> urllib.quote('http://www.example.com/part1 part2.html')
>  'http%3A//www.example.com/part1%20part2.html

So don't give it the 'http://www.example.com/' part.

~ Nathan



From ddwiggins at advpubtech.com  Mon Mar 24 10:57:12 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 24 Mar 2008 09:57:12 -0700
Subject: [Twisted-Python] Re: Advice sought on application evolution
In-Reply-To: <fs11ut$rgp$1@ger.gmane.org>
References: <fs11ut$rgp$1@ger.gmane.org>
Message-ID: <fs8mh9$f00$1@ger.gmane.org>

Thanks to all the good folks who replied to this; good stuff to chew on. 
  I particularly liked glyph's advice on when and where to use the 
inline callback style, and when/where to avoid it.  I think I'll 
continue along the path I described, at least for a while.  I may be 
back with more on this topic.

Best to all,
-- 
Don Dwiggins
Advanced Publishing Technology




From exarkun at divmod.com  Mon Mar 24 11:37:07 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 12:37:07 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324143400.6859.1218997852.divmod.quotient.22375@ohm>
Message-ID: <20080324173707.6859.1585951735.divmod.quotient.22439@ohm>

On Mon, 24 Mar 2008 09:34:00 -0500, Ying Li <cyli at alum.mit.edu> wrote:
>I've been trying to put a few patches into twisted.python.filepath lately to 
>support symlinks.  This is because I'm trying to implement a conch SFTP 
>server using FilePath.

Hooray!  Thanks for working on FilePath. :)

>
>I know FilePath is supposed to be cross-platform, so I am wondering how to 
>go about it.

Hmm.  I guess FilePath _is_ supposed to be cross-platform.  Maybe it would
be useful to list the other things it is supposed to be:

  * easier to use than os.path.*
  * more efficient in naive usage (hence `restat´)
  * sufficiently self-contained so that things like ZipPath are possible
  * safe against common security-related mistakes (hence `child´)

Whether or not it succeeds at any of these goals is probably an open
question, and work could probably be done to improve it in all these
areas, _and_ the approach taken to accomplish some of these goals may
be questionable.

>  For instance, it would be really easy to add a flag to restat 
>that specifies whether to use os.stat o os.lstat.

It sounds like this change would increase the (already slightly too high)
level of weirdness in FilePath stat caching.  On the other hand, I'm not
really sure how link handling should sensibly be done in FilePath at all.

>
>But how should I handle the getAccessTime/etc. functions?  Should I add a 
>FilePath.symlink() function (that creates a symlink to said FilePath)?

`FilePath.symlink´ (or maybe better, something like `FilePath.linkTo´)
seems like a good addition to the API.  `get*Time´ is a bit trickier.  An
option might be to expose an `lstat´ method and let applications worry
about getting the necessary information out of that when they know they
care about the link, not its target.

>
>Should I just implement my own subclass of FilePath that handles symlinks 
>and not try to change FilePath?

It'd be great to have anything that's generally useful incorporated into
Twisted.  It might make sense to have a FilePath subclass for a while to
see what is an isn't useful for your SFTP server - or you might be happy
enough to briefly have a local copy of Twisted with your modifications
and only submit them once you're happy with them.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 12:15:46 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 13:15:46 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324173707.6859.1585951735.divmod.quotient.22439@ohm>
Message-ID: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>

>>Should I just implement my own subclass of FilePath that handles symlinks 
>>and not try to change FilePath?
>
>It'd be great to have anything that's generally useful incorporated into
>Twisted.  It might make sense to have a FilePath subclass for a while to
>see what is an isn't useful for your SFTP server - or you might be happy
>enough to briefly have a local copy of Twisted with your modifications
>and only submit them once you're happy with them.

Well, I did write one, and that's when I was told to start submitting my changes into FilePath.  :)  Basically I need to be able to handle symlinks as links - hence the restat.

There are other things I need, such as an openWithFlags method (basically, the ISFPTServer interface specifies that I need to be able to open a file with a bunch of flags (read, write, append, create, truncate, exclusive), and I'd like to simply pass that through to a method.  I've tried to come up with a fairly elaborate mapping of said flags onto (r, w, r+, w+, etc.), but there are some things (like the exclusive flag) I don't know what to do with.

I'm not sure if this would be useful in FilePath.  

Another thing I need is to be able to change permissions.  My applications ignores requests to change ownership and such, but being able to change permissions I think would be good.  And I know that FilePath.copyTo and FilePath.moveTo right now do not preserve permissions or ownership - I'm not sure if this is desired behavior, but if it isn't, then FilePath needs some mechanism for changing the attributes of a file or directory.  But then we get into platform problems, and FilePath may get overly complicated.



From jcd at sdf.lonestar.org  Mon Mar 24 12:26:24 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Mon, 24 Mar 2008 14:26:24 -0400
Subject: [Twisted-Python] URL encoding
In-Reply-To: <368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>
References: <406b9fda0803240648k54727a9ap4138c2b9db0fe5a4@mail.gmail.com>
	<96c9d6a80803240740x49bead6eh8a0dfb8b588fe1af@mail.gmail.com>
	<406b9fda0803240820q7936a8dbl599ae1c67db107b3@mail.gmail.com>
	<368574aa0803240842g4ce43022kc89f156a3aa26429@mail.gmail.com>
Message-ID: <1206383184.25468.5.camel@aalcdl07.lib.unc.edu>

On Mon, 2008-03-24 at 11:42 -0400, Drew Smathers wrote:
>
> You want to quote only everything after "http://".  ':' is valid only
> to delimit the schema from the URI - so the quoting is correct.
> 

And to delimit port number.  So as others are saying, start after the
host name altogether.





From exarkun at divmod.com  Mon Mar 24 12:30:18 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 24 Mar 2008 13:30:18 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>
Message-ID: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>

On Mon, 24 Mar 2008 13:15:46 -0500, Ying Li <cyli at alum.mit.edu> wrote:
>>>Should I just implement my own subclass of FilePath that handles symlinks 
>>>and not try to change FilePath?
>>
>>It'd be great to have anything that's generally useful incorporated into
>>Twisted.  It might make sense to have a FilePath subclass for a while to
>>see what is an isn't useful for your SFTP server - or you might be happy
>>enough to briefly have a local copy of Twisted with your modifications
>>and only submit them once you're happy with them.
>
>Well, I did write one, and that's when I was told to start submitting my 
>changes into FilePath.  :)

Aha. :)

>Basically I need to be able to handle symlinks as links - hence the restat.

So are you looking for something like this?

    fp = FilePath(...)
    fp.restat(lstat=True)
    fp.getModificationTime() # link's modification time

I'm not sure about that.  Aside from the freaky action at a distance, it
probably is prone to failures when certain FilePath methods internally
decide to restat, thus replacing the link data with data about the target.

The cop-out API would be one like this:

    fp = FilePath(...)
    fp.lstat().st_mtime # link's modification time

I can't think of anything strictly better at the moment, though.  What does
usage in your application suggest is a good approach?

>
>There are other things I need, such as an openWithFlags method (basically, 
>the ISFPTServer interface specifies that I need to be able to open a file 
>with a bunch of flags (read, write, append, create, truncate, exclusive), 
>and I'd like to simply pass that through to a method.  I've tried to come up 
>with a fairly elaborate mapping of said flags onto (r, w, r+, w+, etc.), but 
>there are some things (like the exclusive flag) I don't know what to do 
>with.

It seems like FilePath.open has some issues currently.  It would be a good
thing if it had an API which allowed explicit, precise control over how the
open happened.

>
>I'm not sure if this would be useful in FilePath.
>Another thing I need is to be able to change permissions.  My applications 
>ignores requests to change ownership and such, but being able to change 
>permissions I think would be good.  And I know that FilePath.copyTo and 
>FilePath.moveTo right now do not preserve permissions or ownership - I'm not 
>sure if this is desired behavior, but if it isn't, then FilePath needs some 
>mechanism for changing the attributes of a file or directory.  But then we 
>get into platform problems, and FilePath may get overly complicated.
>

FilePath.chmod would be a great addition.  `copyTo´ and `moveTo´ should try
to preserve permission (at least optionally).  I'm not sure if this would
have scary consequences (handling failures, for example, complicates the
matter), but at least the idea is nice.

Jean-Paul



From cyli at alum.mit.edu  Mon Mar 24 14:48:25 2008
From: cyli at alum.mit.edu (Ying Li)
Date: Mon, 24 Mar 2008 15:48:25 -0500
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
Message-ID: <20080324204825.6859.231245952.divmod.quotient.22510@ohm>

>So are you looking for something like this?
>
>    fp = FilePath(...)
>    fp.restat(lstat=True)
>    fp.getModificationTime() # link's modification time
>
>I'm not sure about that.  Aside from the freaky action at a distance, it
>probably is prone to failures when certain FilePath methods internally
>decide to restat, thus replacing the link data with data about the target.
>
>The cop-out API would be one like this:
>
>    fp = FilePath(...)
>    fp.lstat().st_mtime # link's modification time
>
>I can't think of anything strictly better at the moment, though.  What does
>usage in your application suggest is a good approach?

Well I had fp.restat(lstat=True) and fp.getModificationTime(lstat=True), and I'd just pass the lstat variable through.  Mostly I did this to make it compatible with the existing FilePath.  I actually only need the second approach - I sort of need to get all the attributes at once, so convenience attribute-getting methods are kind of useless for me.  So the "cop-out" API you suggest actually works better for me.



From nathan.stocks at gmail.com  Mon Mar 24 14:53:05 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 14:53:05 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <m2r6e3pzid.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>

On Fri, Mar 21, 2008 at 2:56 PM, David Bolen <db3l.net at gmail.com> wrote:
>  I posted a while back a small sample of how to handle that for a
>  general Twisted protocol that might be of some help, or point you in
>  the right direction as well.
>
>  http://twistedmatrix.com/pipermail/twisted-python/2007-August/015935.html
>
>  (Note the followup messages that clarify an erroneous "False" left in
>  the original posted code)
>
>  This works fine with just normal CA/server/client certificates created
>  through the standard OpenSSL process and tools.

I've generated a CA file, some private keys (and their corresponding
CSR's and certificates), and incorporated chunks of code from the post
you linked to above (and fixed the "returning ok" bit), but I'm
running into the following error:

[('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
failure')]

So close!  I wonder if this has something to do with the fact that my
two endpoints are both on localhost, and not on some domain name?
Just a stab in the dark.

Anyway, here's the debugging print statement info from the client side
(I scrubbed out personal info):

_verify (ok=1):
  subject: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  issuer: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  errnum 0, errdepth 1

_verify (ok=1):
  subject: <X509Name object
'/C=US/ST=Utah/O=mycompany.com/CN=controller/emailAddress=operations at mycompany.com'>
  issuer: <X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>
  errnum 0, errdepth 0

And here's the ssl code from the client (the only significant change I
made was the filenames):

class ClientContextFactory(ssl.ClientContextFactory):

   def _verify(self, connection, x509, errnum, errdepth, ok):
      print '_verify (ok=%d):' % ok
      print '  subject:', x509.get_subject()
      print '  issuer:', x509.get_issuer()
      print '  errnum %s, errdepth %d' % (errnum, errdepth)
      return ok

   def getContext(self):
      ctx = ssl.ClientContextFactory.getContext(self)
      ctx.use_certificate_file('ssl/private/nathanmonitor.cert')
      ctx.use_privatekey_file('ssl/private/nathanmonitor.key')
      ctx.load_verify_locations('ssl/ca-cert.pem')
      ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT,
                     self._verify)
      return ctx

ClientCreator(reactor, MonitorClientProtocol).connectSSL(
  'localhost', MONITOR_PORT, ClientContextFactory()).addCallback(
                        monitor_window.install_amp_client)


nathanmonitor.key is the private ssl key of my "monitor" client

ca-cert.pem is the custom CA certificate I made by following
http://sial.org/howto/openssl/ca/

nathanmonitor.cert is the ssl certificate of my "monitor" client
generated with my custom CA and a .csr of nathanmonitor.key


On the server side, the error output is pretty quiet:

_verify (ok=1):
subject:<X509Name object '/CN=MyCompany
CA/C=US/ST=Utah/L=MyCity/O=mycompany.com/emailAddress=operations at mycompany.com'>

...here's my server code (again, pretty much the same except for cert files)

class ServerContextFactory:
   def _verify(self, connection, x509, errnum, errdepth, ok):
      logging.info('_verify (ok=%d):' % ok)
      logging.info('  subject:%s' % x509.get_subject())
      logging.info('  issuer:', x509.get_issuer())
      logging.info('  errnum %s, errdepth %d' % (errnum, errdepth))
      return ok

   def getContext(self):
      """Create an SSL context."""
      ctx = SSL.Context(SSL.SSLv23_METHOD)
      ctx.use_certificate_file('ssl/private/controller.cert')
      ctx.use_privatekey_file('ssl/private/controller.key')
      ctx.load_client_ca('ssl/ca-cert.pem')
      ctx.load_verify_locations('ssl/ca-cert.pem')
      ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT,
                     self._verify)
      ctx.set_verify_depth(10)
      return ctx

reactor.listenSSL(MONITOR_PORT, monitor_factory, ServerContextFactory())


controller.key is the private ssl key of the "server"

ca-cert.pem is the same custom CA certificate file as used in the client.

controller.cert is the ssl certificate of the "server" generated with
my custom CA and a .csr of controller.key



From nathan.stocks at gmail.com  Mon Mar 24 14:57:43 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 14:57:43 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
Message-ID: <96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>

I'm not concious of changing anything, but the error has changed to simply:

[('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]

...and none of the _verify() debugging output is being printed out on
either side anymore.  Weird!

~ Nathan



From glyph at divmod.com  Mon Mar 24 14:58:45 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 24 Mar 2008 20:58:45 -0000
Subject: [Twisted-Python] symlink support in filepath.FilePath
In-Reply-To: <20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
References: <20080324181546.6859.222156131.divmod.quotient.22453@ohm>
	<20080324183018.6859.1007701764.divmod.quotient.22458@ohm>
Message-ID: <20080324205845.21558.1364408822.divmod.xquotient.8789@joule.divmod.com>


On 06:30 pm, exarkun at divmod.com wrote:
>On Mon, 24 Mar 2008 13:15:46 -0500, Ying Li <cyli at alum.mit.edu> wrote:

>So are you looking for something like this?
>
>    fp = FilePath(...)
>    fp.restat(lstat=True)
>    fp.getModificationTime() # link's modification time
>
>I'm not sure about that.  Aside from the freaky action at a distance, 
>it
>probably is prone to failures when certain FilePath methods internally
>decide to restat, thus replacing the link data with data about the 
>target.
>
>The cop-out API would be one like this:
>
>    fp = FilePath(...)
>    fp.lstat().st_mtime # link's modification time
>
>I can't think of anything strictly better at the moment, though.  What 
>does
>usage in your application suggest is a good approach?

I am not working on this application, but I have some ideas of my own...

It occurs to me that isfile and isdir both use cached stat results, but 
islink re-lstat()s each time.  This could of course give a potentially 
inconsistent view of the filesystem without restat()'ing.

Without regard to backwards compatibility, I would probably suggest that 
we do something like this:

    fp = FilePath(...)
    fp.getModificationTime() # link time
    fp.followLink().getModificationTime() # destination time (even if 
dest is a link!)

This would allow finer-grained control of what exactly you were asking 
for.  (It would also work more nicely by default with broken symlinks.) 
However, keeping compatibility in mind (given that this is easily API- 
compatible,  but behavior would change very slightly and ostensibly be 
less buggy, I'm not sure whether to do this or not):

    fp = FilePath(...)
    fp.getModificationTime() # destination time
    fp.asLink().getModificationTime() # link time
    fp.asLink().followLink() #... etc

This is basically the same as your cop-out example, except we don't 
introduce yet another interface for other filepath implementations to 
emulate.



From nathan.stocks at gmail.com  Mon Mar 24 15:07:02 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 15:07:02 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
	<96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
Message-ID: <96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>

On Mon, Mar 24, 2008 at 2:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
> I'm not concious of changing anything, but the error has changed to simply:
>
>  [('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>
>  ...and none of the _verify() debugging output is being printed out on
>  either side anymore.  Weird!

Ooops, ignore this last email.  I found that I had routed stderr away,
and wasn't seeing a crash caused by a typo I introduced after (almost)
getting the ssl to work.

So it's back to the first error now:

[('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
failure')]

 ~ Nathan



From nathan.stocks at gmail.com  Mon Mar 24 15:14:10 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 24 Mar 2008 15:14:10 -0600
Subject: [Twisted-Python] Re: SSL + AMP
In-Reply-To: <96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>
References: <96c9d6a80803181534s6cfa70fei78800f22f92bd87b@mail.gmail.com>
	<20080319210911.21558.267963963.divmod.xquotient.8200@joule.divmod.com>
	<96c9d6a80803191914n792ba13clc746c4eae61a4166@mail.gmail.com>
	<m2r6e3pzid.fsf@valheru.db3l.homeip.net>
	<96c9d6a80803241353i230e95bfofd1f6407688c4b72@mail.gmail.com>
	<96c9d6a80803241357k733f3ccy9424b2483aae8019@mail.gmail.com>
	<96c9d6a80803241407p4620d03r3f0f52f8868209cd@mail.gmail.com>
Message-ID: <96c9d6a80803241414g7fab168bn31d96708a442e43f@mail.gmail.com>

On Mon, Mar 24, 2008 at 3:07 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Mon, Mar 24, 2008 at 2:57 PM, Nathan <nathan.stocks at gmail.com> wrote:
>  > I'm not concious of changing anything, but the error has changed to simply:
>  >
>  >  [('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>  >
>  >  ...and none of the _verify() debugging output is being printed out on
>  >  either side anymore.  Weird!
>
>  Ooops, ignore this last email.  I found that I had routed stderr away,
>  and wasn't seeing a crash caused by a typo I introduced after (almost)
>  getting the ssl to work.
>
>  So it's back to the first error now:
>
>  [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate
>  unknown'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake
>  failure')]

It works!  After finding that I had lost track of stderr, I found that
the ssl error had an error on this line:

 logging.info('  issuer:', x509.get_issuer())

which ought to be:

 logging.info('  issuer:%s' % x509.get_issuer())

Thanks for all the help!  It looks like my AMP+SSL connection is up and running!

~ Nathan



From andrewfr_ice at yahoo.com  Mon Mar 24 16:33:12 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 24 Mar 2008 15:33:12 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
Message-ID: <644763.42660.qm@web34203.mail.mud.yahoo.com>

Hi Don:

[Don quote]
Thanks to all the good folks who replied to this; good
stuff to chew on. I particularly liked glyph's advice
on when and where to use the inline callback style,
and when/where to avoid it.  I think I'll continue
along the path I described, at least for a while.  I
may be back with more on this topic.

~

I saw your post but didn't have time to respond
earlier.... I second Glyph's advice concerning
inlineCallbacks....

I am building a WS-BPEL processor. WS-BPEL is about
business logic and exotic message exchange patterns. I
gave a talk at PyCon 2008 called "Adventures in
Stackless Python Twisted Integration."

My strategy is to separate the business logic as much
as possible from the underlying networking. At the
lower levels, I use Stackless Python in conjunction
with Twisted. A side-effect of this approach is that I
can block waiting for a Twisted call to finish.

Right now, I am simplifying one of my prototypes so I
can post it as a full-blown example of all the
techniques I use. Give me a few days.

To add to what others have said, the main problem I
have encountered boil down to identifying classic
concurrency problems. Unfortunately APIs and
transitivity obscure bugs. I know this sounds obvious 
but no matter which concurrency model you use: event,
pre-emptive threads, cooperate, you really have to
understand how problems like say, deadlock and race
conditions manifest themselves and take precautions.

In the narrow field of Stackless and Twisted, I am
trying to map out what those precautions are.

Cheers,
Andrew

 





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Mon Mar 24 16:34:39 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 24 Mar 2008 15:34:39 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
Message-ID: <478763.3209.qm@web34204.mail.mud.yahoo.com>

Hi Don:

[Don quote]
Thanks to all the good folks who replied to this; good
stuff to chew on. I particularly liked glyph's advice
on when and where to use the inline callback style,
and when/where to avoid it.  I think I'll continue
along the path I described, at least for a while.  I
may be back with more on this topic.

~

I saw your post but didn't have time to respond
earlier.... I second Glyph's advice concerning
inlineCallbacks....

I am building a WS-BPEL processor. WS-BPEL is about
business logic and exotic message exchange patterns. I
gave a talk at PyCon 2008 called "Adventures in
Stackless Python Twisted Integration."

My strategy is to separate the business logic as much
as possible from the underlying networking. At the
lower levels, I use Stackless Python in conjunction
with Twisted. A side-effect of this approach is that I
can block waiting for a Twisted call to finish.

Right now, I am simplifying one of my prototypes so I
can post it as a full-blown example of all the
techniques I use. Give me a few days.

To add to what others have said, the main problem I
have encountered boil down to identifying classic
concurrency problems. Unfortunately APIs and
transitivity obscure bugs. I know this sounds obvious 
but no matter which concurrency model you use: event,
pre-emptive threads, cooperate, you really have to
understand how problems like say, deadlock and race
conditions manifest themselves and take precautions.

In the narrow field of Stackless and Twisted, I am
trying to map out what those precautions are.

Cheers,
Andrew

 





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From brianbaquiran at gmail.com  Mon Mar 24 21:27:00 2008
From: brianbaquiran at gmail.com (Brian Baquiran)
Date: Tue, 25 Mar 2008 11:27:00 +0800
Subject: [Twisted-Python] Controlling twisted via stdin
Message-ID: <47E87104.7090606@gmail.com>

How do I use the reactor.addReader/Writer methods?

I would like to control a twisted server using stdin. Does data on stdin 
get passed to a protocol's dataReceived?

Thanks.

Brian



From radix at twistedmatrix.com  Mon Mar 24 21:52:26 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Mar 2008 23:52:26 -0400
Subject: [Twisted-Python] Controlling twisted via stdin
In-Reply-To: <47E87104.7090606@gmail.com>
References: <47E87104.7090606@gmail.com>
Message-ID: <60ed19d40803242052scb9079cqb03ff9522decf7a5@mail.gmail.com>

On Mon, Mar 24, 2008 at 11:27 PM, Brian Baquiran
<brianbaquiran at gmail.com> wrote:
> How do I use the reactor.addReader/Writer methods?
>
>  I would like to control a twisted server using stdin. Does data on stdin
>  get passed to a protocol's dataReceived?


The simplest way to get a protocol running on stdio has nothing to do
with addReader and addWriter, and you likely want to stay away from
them.

Try using twisted.internet.stdio.StandardIO(protocolInstance).

(that's a protocol *instance*, not a factory or class)

There's an example in doc/core/examples/stdin.py, and a more complex
demo at doc/core/examples/stdiodemo.py.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From daedalus at eigenmagic.com  Tue Mar 25 01:39:16 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 25 Mar 2008 18:39:16 +1100
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>
	<20080321220702.GB13036@localhost.localdomain>
	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>
	<20080322135444.GA9572@mithrandi.net>
	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
Message-ID: <1206430756.9271.43.camel@localhost>

On Sun, 2008-03-23 at 03:48 +0000, glyph at divmod.com wrote:
> On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
> >But yes, the danger of accidentally serializing operations that don't
> >need to be serialized, and not even realising it, is one of the 
> >problems
> >with this coding style.
> 
> As time goes on, I'm becoming a bigger fan of inlineCallbacks.
> 
> Too much serialization, even accidental serialization, trades 
> comprehensibility for performance.  I think that's a reasonable place to 
> start: make your system easy to understand, then make it fast once you 
> know what's going on.

How does the saying go? "Premature optimisation is the root of all
evil"?

As an intermediate novice, I find inlineCallbacks to be a great way to
make code look more like sequential code, but with many of the benefits
of asynchrony. You can then refactor the code to make pieces even more
asynchronous where it's useful, but keep the sequential parts where that
makes sense. This is great from a 'learning twisted' point of view. 

The easiest place to start learning is with code that looks like all the
other code you've written before. The familiar is comforting. You then
learn that some extra statements are required to 'turn on this
asynchronous stuff', which you need to explicitly refer to using
'yield'. This introduces you to the idea that a Deferred-returning
function is special. You may not really know *why* it's special, but
it's a start.

Once your understanding deepens, you can then see that certain bits of
your code need a more complex form of Deferred handling. Even better,
you're now learning what a Deferred does in a concrete way with your own
code, and can more easily understand the effects of .addCallback()
compared to .addErrback().

I wonder if a tutorial along these lines would help in introducing
twisted concepts to a novice?

> It's not a good place to end up, though.  So it's important to use 
> inlineCallbacks for the right thing.

Certainly. Learning what that is can take a while, though.

-- 
Justin Warren <daedalus at eigenmagic.com>



From warner at lothar.com  Tue Mar 25 02:48:18 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 25 Mar 2008 01:48:18 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.2.5 released
Message-ID: <20080325.014818.208943259.warner@lothar.com>


I'm pleased to announce the release of Foolscap-0.2.5. Foolscap is the
successor to Perspective Broker, offering cryptographically-secure remote
method invocation, flexible object-graph serialization, a capability-based
object model, and more. Foolscap, for all your remote-object needs.

Source distributions are available from the Foolscap home page, PyPI, and
wherever fine remote-object products are sold:

 http://foolscap.lothar.com/trac
 http://foolscap.lothar.com/releases/foolscap-0.2.5.tar.gz
 http://foolscap.lothar.com/releases/foolscap-0.2.5.zip

As always, Foolscap releases are signed by my GPG key (1514A7BD).

In case you're wondering what happened to 0.2.4, or 0.2.3, you're right:
there have been several unannounced releases. A lot of the recent work has
gone into improvements in the logging subsystem (know as the "flog" system).
It is easy for Foolscap-using programs to publish a 'logport', to which the
'flogtool tail' command can connect and watch log events scroll by. Log
events can be gathered and inspected with command-line tools or a web-based
browser. Future work is planned to enable cross-application causality tracing
using the Causeway viewer.

In addition to logging changes, several other improvements have been made.
Duplication connection handling should be working better now. A number of
sample programs have been added to the distribution. Default size limits have
been removed from all Constraints.

A complete set of release notes for the last six months of releases is
attached below. All versions since 0.1.3 (released in May 2007) are
wire-compatible.

Foolscap is currently being deployed in the allmydata.org "Tahoe"
least-authority grid filesystem, which improves the chances that
wire-compatibility will be retained in the future. I am grateful to
allmydata.com (my employer) for supporting Foolscap development.

Please direct any questions to this, the twisted-devel mailing list. Bugs,
patches, and feature requests should be placed on the Foolscap Trac, at
http://foolscap.lothar.com/ .

cheers,
 -Brian



* Release 0.2.5 (25 Mar 2008)

** Compatibility

All releases between 0.1.3 and 0.2.5 (inclusive) are fully wire-compatible.

The new 'flogtool tail --catch-up' command requires a log publisher running
0.2.5 or later. 'flogtool tail' without the --catch-up option will work with
earlier publishers.

** Licensing clarification

Foolscap is distributed under the (very liberal) terms of the MIT license,
which is the same license that Twisted uses. It's been like this since the
beginning, but this is the first release to make this obvious by including a
LICENSE file.

** foolscap.logging Changes

'flogtool tail' now has a --catch-up option, which prompts the remote
publisher to deliver stored historical events to the subscribe, in proper
sequential order. This allows you to connect to a process that has just done
something interesting and grab a copy of the log events relevant to that
event.

'flogtool tail' also has a --save-to option, which specifies a filename to
which all captured events should be saved. This file can be processed further
with 'flogtool dump', 'flogtool filter', or 'flogtool web-viewer'. This
behaves much like the unix 'tee' utility, except that the saved data is
recorded in a lossless binary format (whereas the text emitted to stdout is
not particularly machine-readable).

'flogtool tail' and 'flogtool dump' both emit human-readable log messages by
default. The --verbose option will emit raw event dictionaries, which contain
slightly more information but are harder to read.

'flogtool create-gatherer' will create a log gatherer .tac file in a new
working directory. This .tac file can be launched with 'twistd', the standard
Twisted daemon-launching program. This is significantly easier to work with
than the previous 'flogtool gather' command (which has been removed). The new
--rotate option will cause the log-gatherer to switch to a new output file
every N seconds. The --bzip option will make it compress the logfiles after
rotating them. For example, a log gatherer that rotates and compresses log
files once per day could be created and launched with:

 flogtool create-gatherer --rotate 86400 --bzip ./workdir
 (cd workdir && twistd -y gatherer.tac)

** New sample programs

doc/listings/command-server.py and command-client.py are a pair of programs
that let you safely grant access to a specific command. The server is
configured with a command line to run, and a directory to run it from. The
client gets a FURL: when the client is executed, the server will run its
preconfigured command. The client gets to see stdout and stderr (and the exit
status), but does not get to influence the command being run in any way.
This is much like setting up an ssh server with a restricted command, but
somewhat easier to configure.

doc/listings/xfer-server.py and xfer-client.py are similar, but provide file
transfer services instead of command execution.

** New Features

Tub.setLocationAutomatically() will try to determine an externally-visible IP
address and feed it to Tub.setLocation(). It does this by preparing to send a
packet to a well-known public IP address (one of the root DNS servers) and
seeing which network interface would be used. This will tend to find the
outbound default route, which of course is only externally-visible if the
host is externally-visible. Applications should not depend upon this giving a
useful value, and should give the user a way to configure a list of
hostname+portnumbers so that manually-configured firewalls, port forwarders,
and NAT boxes can be dealt with.


* Release 0.2.4 (28 Jan 2008)

** Compatibility

All releases between 0.1.3 and 0.2.4 (inclusive) are fully wire-compatible.

** foolscap.logging Changes

*** 'flogtool filter' command added

This mode is used to take one event-log file and produce another with a
subset of the events. There are several options to control the filtering:
"--strip-facility=foolscap" would remove all the foolscap-related messages,
and "--after=start --before=end" will retain events that occur within the
given period. The syntax is still in flux, expect these options to change in
the next few releases. The main idea is to take a very large logfile and turn
it into a smaller, more manageable one.

*** error logging

Applications should avoid recording application-specific instances in log
events. Doing so will forces the log viewer to access the original source
code. The current release of foolscap uses pickle, so such instances will be
loadable if the viewer can import the same code, but future versions will
probably switch to using Banana, at which point trying to log such instances
will cause an error.

In this release, foolscap stringifies the type of an exception/Failure passed
in through the failure= kwarg, to avoid inducing this import dependency in
serialized Failures. It also uses the CopiedFailure code to improve
portability of Failure instances, and CopiedFailures have been made
pickleable.

The preferred way to log a Failure instance is to pass it like so:

 def _oops(f):
   log.msg("Oh no, it failed", failure=f, level=log.BAD)
 d.addErrback(_oops)

Finally, a 'log.err()' method was added, which behaves just like Twisted's
normal log.err(): it can be used in a Deferred errback, or inside an
exception handler.

*** 'flogtool web-viewer'

Adding a "sort=time" query argument to the all-events viewing page URL will
turn off the default nested view, and instead will sort all events strictly
by time of generation (note that unsynchronized clocks may confuse the
relative ordering of events on different machines). "sort=number" sorts all
events by their event number, which is of dubious utility (since these
numbers are only scoped to the Tub). "sort=nested" is the default mode.

The web-viewer now provides "summary views", which show just the events that
occurred at a given severity level. Each event is a hyperlink to the line in
the all-events page (using anchor/fragment tags), which may make them more
convenient to bookmark or reference externally.


* Release 0.2.3 (24 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.3 (inclusive) are fully wire-compatible.

** Bug Fixes

RemoteReference.getSturdyRef() didn't work (due to bitrot). It has been
fixed.

** foolscap.logging Changes

This release is mostly about flogging improvements: some bugs and misfeatures
were fixed:

*** tolerate '%' in log message format strings

Dictionary-style kwarg formatting is now done with a twisted-style style
format= argument instead of happening implicitly. That means the acceptable
ways to call foolscap.logging.log.msg are:

 log.msg("plain string")
 log.msg("no args means use 0% interpolation")
 log.msg("pre-interpolated: %d apples" % apples)
 log.msg("posargs: %d apples and %d oranges", apples, oranges)
 log.msg(format="kwargs: %(numapples)d apples", numapples=numapples)

The benefit of the latter two forms are that the arguments are recorded
separately in the event dictionary, so viewing tools can filter on the
structured data, think of something like:

  [e for e in allEvents if e.get("numapples",0) > 4]

*** log facility names are now dot-separated, to match stdlib logging
*** log levels are derived from numerical stdlib logging levels
*** $FLOGFILE to capture flog events during 'trial' runs

One challenge of the flogging system is that, once an application was changed
to write events to flogging instead of twisted's log, those events do not
show up in the normal places where twisted writes its logfiles. For full
applications this will be less of an issue, because application startup will
tell flogging where events should go (flogging is intended to supplant
twisted logging for these applications). But for events emitted during unit
tests, such as those driven by Trial, these events would get lost.

To address this problem, the 0.2.3 flogging code looks for the "FLOGFILE"
environment variable at import time. This specifies a filename where flog
events (a series of pickled event dictionaries) should be written. The file
is opened at import time, events are written during the lifetime of the
process, then the file is closed at shutdown using a Twisted "system event
trigger" (which happens to be enough to work properly under Trial: other
environments may not work so well). If the FLOGFILE filename ends in .bz2,
the event pickles will be compressed, which is highly recommended because it
can result in a 30x space savings (and e.g. the Tahoe unit test run results
in 90MB of uncompressed events). All 'flogtool' modes know how to handle a
.bz2 compressed flogfile as well as an uncompressed one.

The "FLOGTWISTED" environment variable, if set, will cause this same code to
bridge twisted log messages into the flogfile. This makes it easier to see
the relative ordering of Twisted actions and foolscap/application events.
(without this it becomes very hard to correlate the two sources of events).

The "FLOGLEVEL" variable specifies a minimum severity level that will be put
into the flogfile. This defaults to "1", which puts pretty much everything
into the file. The idea is that, for tests, you might as well record
everything, and use the filtering tools to control the display and isolate
the important events. Real applications will use more sophisticated tradeoffs
between disk space and interpretation effort.

The recommended way to run Trial on a unit test suite for an application that
uses Foolscap is:

 FLOGFILE=flog.out FLOGTWISTED=1 trial PACKAGENAME

Note that the logfile cannot be placed in _trial_temp/, because trial deletes
that directory after flogging creates the logfile, so the logfile would get
deleted too. Also note that the file created by $FLOGFILE is truncated on
each run of the program.


* Release 0.2.2 (12 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.2 (inclusive) are fully wire-compatible.
New (optional) negotiation parameters were added in 0.2.1 (really in 0.2.0).

** Bug Fixes

The new duplicate-connection handling code in 0.2.1 was broken. This release
probably fixes it.

There were other bugs in 0.2.1 which were triggered when a duplicate
connection was shut down, causing remote calls to never be retired, which
would also prevent the Reconnector from doing its job. These should be fixed
now.

** Other Changes

Foolscap's connection-negotiation mechanism has been modified to use foolscap
logging ("flog") instead of twisted.log .

Setting the FLOGFILE= environment variable will cause a Foolscap-using
program to write pickled log events to a file of that name. This is
particularly useful when you want to record log events during 'trial' unit
test run. The normal API for setting this file will be added later. The
FLOGTWISTED= environment variable will cause the creation of a twisted.log
bridge, to copy all events from the twisted log into the foolscap log.

The 'flogtool web-view' mode has been enhanced to color-code events according
to their severity, and to format Failure tracebacks in a more-readable way.


* Release 0.2.1 (10 Dec 2007)

** Compatibility

All releases between 0.1.3 and 0.2.1 (inclusive) are fully wire-compatible.
0.2.1 introduces some new negotiation parameters (to handle duplicate
connections better), but these are ignored by older versions, and their lack
is tolerated by 0.2.1 .

** New Features

*** new logging support

Foolscap is slowly acquiring advanced diagnostic event-logging features. See
doc/logging.xhtml for the philosophy and design of this logging system. 0.2.1
contains the first few pieces, including a tool named bin/flogtool that can
be used to watch events on a running system, or gather events from multiple
applications into a single place for later analysis. This support is still
preliminary, and many of the controls and interfaces described in that
document are not yet implemented.

*** better handling of duplicate connections / NAT problems

The connection-management code in 0.1.7 and earlier interacted badly with
programs that run behind NAT boxes (especially those with aggressive
connection timeouts) or on laptops which get unplugged from the network
abruptly. Foolscap seeks to avoid duplicate connections, and various
situtations could cause the two ends to disagree about the viability of any
given connection. The net result (no pun intended) was that a client might
have to wait up to 35 minutes (depending upon various timeout values) before
being able to reestablish a connection, and the Reconnector's exponential
backoff strategy could easily push this into 90 minutes of downtime.

0.2.1 uses a different approach to accomplish duplicate-suppression, and
should provide much faster reconnection after netquakes. To benefit from
this, both ends must be running foolscap-0.2.1 or newer, however there is an
additional setting (not enabled by default) to improve the behavior of
pre-0.2.1 clients: tub.setOption("handle-old-duplicate-connections", True).

*** new Reconnector methods

The Reconnector object (as returned by Tub.connectTo) now has three utility
methods that may be useful during debugging. reset() drops the backoff timer
down to one second, causing the Reconnector to reconnect quickly: you could
use this to avoid an hour-long delay if you've just restarted the server or
re-enabled a network connection that was the cause of the earlier connection
failures. getDelayUntilNextAttempt() returns the number of seconds remaining
until the next connection attempt. And getLastFailure() returns a Failure
object explaining why the last connection attempt failed, which may be a
useful diagnostic in trying to resolve the connection problems.

** Bug Fixes

There were other minor changes: an OS-X unit test failure was resolved,
CopiedFailures are serialized in a way that doesn't cause constraint
violations, and the figleaf code-coverage tools (used by foolscap developers
to measure how well the unit tests exercise the code base) have been improved
(including an emacs code-used/unused annotation tool).



From dmarfil at citic.es  Tue Mar 25 05:45:25 2008
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 25 Mar 2008 12:45:25 +0100
Subject: [Twisted-Python] Serial port communication
Message-ID: <47E8E5D5.1010100@citic.es>

Hi, I'm trying to send some commands to a modem connected to the serial 
port, in a sequential way.
I can send the first command to the modem but I must wait for the whole 
response before sending the next command. I haven't got much experience 
with Twisted so I'm not sure about the best protocol I can use for this.
At this moment I'm trying with SerialPort (from 
twisted.internet.serialport) as my factory, and LineReceiver (from 
twisted.protocols.basic) as its protocol.
I can write to the serial port with the SerialPort's method 
writeSomeData and it works fine, but the modem returns the response byte 
to byte, so the dataReceived method (in the LineReceiver protocol) is 
launched with every byte received, so I have to store the bytes in a 
string so I can find the end of the response and then I can see the 
whole response.
So I can get the whole response from the modem, but in that moment I 
don't know how to tell the factory that it can send another 
writeSomeData (remember that it must be done in a sequential way).
So the question is: how can I tell the factory that it can run another 
writeSomeData once I got the right response from the modem?

I know that the main problem is my inexperience with Twisted, so I'm 
sure there's a better way to implement this. Maybe a more appropiate 
protocol?

Any clue will be very welcome ;-)

Thanks in advance,

Daniel Marfil



From itamar at itamarst.org  Tue Mar 25 07:00:13 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Mar 2008 09:00:13 -0400
Subject: [Twisted-Python] Serial port communication
In-Reply-To: <47E8E5D5.1010100@citic.es>
References: <47E8E5D5.1010100@citic.es>
Message-ID: <1206450013.21090.41.camel@localhost.localdomain>


> I can write to the serial port with the SerialPort's method 
> writeSomeData and it works fine,

You probably want the the write() method, not the writeSomeData method.




From andrewfr_ice at yahoo.com  Tue Mar 25 11:20:07 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 25 Mar 2008 10:20:07 -0700 (PDT)
Subject: [Twisted-Python] Re: Advice sought on application evolution
In-Reply-To: <E1Je5m2-0001Mu-2H@cube.twistedmatrix.com>
Message-ID: <986025.1887.qm@web34207.mail.mud.yahoo.com>

Hi Justin:

> Too much serialization, even accidental
>serialization, trades comprehensibility for
>performance.  I think that's a reasonable place
>to  start: make your system easy to understand, then
>make it fast once you know what's going on.

JW>How does the saying go? "Premature optimisation is
JW>the root of all evil"?

Butler Lampson in the paper "Hints for Computer System
Design" saids "Get it right! Neither abstraction nor
simplicity is a substitute for getting it right." 

I think if there is a tao of Twisted, its tenets would
be performance and getting it right.

A part of getting things right, is knowing what wrong
looks like. Both Twisted and (Stackless - what I work
with), don't dedicate much time to showing what is
definitely wrong.

>The easiest place to start learning is with code that
>looks like all the other code you've written before. 

I am not sure about this approach although there is
much to be said about having a programming style that
makes you feel confident to tackle problems. 

I find a good way to learn is looking at good but
simple examples that do something useful, then tinker
with them. This is the way some of my favourite
computer books work - the various
Kernighan/Richie/Plauger books, Steven's "Unix Network
Programming"

In the case of Twisted, I found the Abe Fettig book
good - I looked at webcat.py and requesthandler.py and
that gave me a start. From time to time, I also posted
on this mailing list to get little examples - very
helpful. 

I also like the design patterns approach to learning:
this is the name, the situation/context, the problem,
the solution, references. 

I think Twisted would benefit from this approach when
one is dealing with common situations like say "call
database from request handler" or "separate business
logic from network logic."


Cheers,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From ddwiggins at advpubtech.com  Tue Mar 25 11:27:56 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 25 Mar 2008 10:27:56 -0700
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <644763.42660.qm@web34203.mail.mud.yahoo.com>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>
	<644763.42660.qm@web34203.mail.mud.yahoo.com>
Message-ID: <fsbcmt$p5n$1@ger.gmane.org>

Andrew Francis wrote:
> I am building a WS-BPEL processor. WS-BPEL is about
> business logic and exotic message exchange patterns. I
> gave a talk at PyCon 2008 called "Adventures in
> Stackless Python Twisted Integration."

Andrew, thanks for the reply.  I saw a message about your work, and have 
bookmarked your "Adventures" blog.

> My strategy is to separate the business logic as much
> as possible from the underlying networking.

My goal exactly, and my concern is with how to do that while still 
respecting the needs of the underlying networking (and in my case, a 
large amount of interaction with a database).

> At the lower levels, I use Stackless Python in conjunction
> with Twisted. A side-effect of this approach is that I
> can block waiting for a Twisted call to finish.

I'll be very interested to learn more about the melding of the two 
paradigms.

One question: I had the impression that Stackless is mostly an academic 
exercise, sort of a proof of concept.  Is this wrong?  How stable, 
portable, etc. is Stackless at this point?  Is it a reasonable choice 
for a commercial application?

> 
> Right now, I am simplifying one of my prototypes so I
> can post it as a full-blown example of all the
> techniques I use. Give me a few days.

I'll try to be patient.  8^)

Regards,
-- 
Don Dwiggins
Advanced Publishing Technology




From steve at holdenweb.com  Tue Mar 25 13:20:41 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 25 Mar 2008 15:20:41 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <fsbcmt$p5n$1@ger.gmane.org>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>	<644763.42660.qm@web34203.mail.mud.yahoo.com>
	<fsbcmt$p5n$1@ger.gmane.org>
Message-ID: <fsbjag$j63$1@ger.gmane.org>

Don Dwiggins wrote:
> Andrew Francis wrote:
>> I am building a WS-BPEL processor. WS-BPEL is about
>> business logic and exotic message exchange patterns. I
>> gave a talk at PyCon 2008 called "Adventures in
>> Stackless Python Twisted Integration."
> 
> Andrew, thanks for the reply.  I saw a message about your work, and have 
> bookmarked your "Adventures" blog.
> 
>> My strategy is to separate the business logic as much
>> as possible from the underlying networking.
> 
> My goal exactly, and my concern is with how to do that while still 
> respecting the needs of the underlying networking (and in my case, a 
> large amount of interaction with a database).
> 
>> At the lower levels, I use Stackless Python in conjunction
>> with Twisted. A side-effect of this approach is that I
>> can block waiting for a Twisted call to finish.
> 
> I'll be very interested to learn more about the melding of the two 
> paradigms.
> 
> One question: I had the impression that Stackless is mostly an academic 
> exercise, sort of a proof of concept.  Is this wrong?  How stable, 
> portable, etc. is Stackless at this point?  Is it a reasonable choice 
> for a commercial application?
> 
Well, CCP are running 40,000+ simultaneous (paying) users on a 250-CPU 
cluster. If you'd call that a commercial application then I guess the 
answer is "yes".

>>
>> Right now, I am simplifying one of my prototypes so I
>> can post it as a full-blown example of all the
>> techniques I use. Give me a few days.
> 
> I'll try to be patient.  8^)
> 
regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From ddwiggins at advpubtech.com  Tue Mar 25 15:56:09 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 25 Mar 2008 14:56:09 -0700
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 48, Issue 41
In-Reply-To: <fsbjag$j63$1@ger.gmane.org>
References: <E1Jdtkp-0000MT-7a@cube.twistedmatrix.com>	<644763.42660.qm@web34203.mail.mud.yahoo.com>	<fsbcmt$p5n$1@ger.gmane.org>
	<fsbjag$j63$1@ger.gmane.org>
Message-ID: <fsbsdq$n3d$1@ger.gmane.org>

Steve Holden wrote:
>> One question: I had the impression that Stackless is mostly an 
>> academic exercise, sort of a proof of concept.  Is this wrong?  How 
>> stable, portable, etc. is Stackless at this point?  Is it a reasonable 
>> choice for a commercial application?
>>
> Well, CCP are running 40,000+ simultaneous (paying) users on a 250-CPU 
> cluster. If you'd call that a commercial application then I guess the 
> answer is "yes".

Wellll, I guess that sounds fairly reasonable. 8^)

Thanks,
Don




From zooko at zooko.com  Tue Mar 25 20:12:47 2008
From: zooko at zooko.com (zooko)
Date: Tue, 25 Mar 2008 19:12:47 -0700
Subject: [Twisted-Python] announcing allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.0
Message-ID: <D14AA58A-9417-4598-81E8-9D1FAA145675@zooko.com>

Folks:

This is it!  We're committing to backwards compatibility and active  
support for the v1.0 branch of Tahoe for the forseeable future.

Tomorrow, http://allmydata.com will open its doors to new customers,  
relying on Tahoe for its backend.

Regards,

Zooko


ANNOUNCING Allmydata.org "Tahoe", the Least-Authority Filesystem, v1.0

We are pleased to announce the release of version 1.0 of the "Tahoe"
Least Authority Filesystem.

The "Tahoe" Least Authority Filesystem is a secure, decentralized,
fault-tolerant filesystem.  All of the source code is available under
a Free Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

A one-page explanation of the security and fault-tolerance properties
that it offers is visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


We believe that this version of Tahoe is stable enough to rely on as a
permanent store of valuable data.  The version 1 branch of Tahoe will
be actively supported and maintained for the forseeable future, and
future versions of Tahoe will retain the ability to read files and
directories produced by Tahoe v1.0 for the forseeable future.

This release of Tahoe will form the basis of the new consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


This is the successor to Allmydata.org "Tahoe" Least Authority
Filesystem v0.9, which was released March 13, 2008 [1].  Since v0.9
we've made the following changes:

  * Use an added secret for convergent encryption to better protect the
    confidentiality of immutable files, and remove the publically
    readable hash of the plaintext (ticket #365).

  * Add a "mkdir-p" feature to the WAPI (ticket #357).

  * Many updates to the Windows installer and Windows filesystem
    integration.


Tahoe v1.0 produces files which can't be read by older versions of
Tahoe, although files produced by Tahoe >= 0.8 can be read by Tahoe
1.0.  The reason that older versions of Tahoe can't read files
produced by Tahoe 1.0 is that those older versions require the file to
come with a publically-readable hash of the plaintext, but exposing
such a hash is a confidentiality leak, so Tahoe 1.0 does not do it.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

Because this software is the product of less than a year and a half of
active development, we do not categorically recommend it for the
storage of data which is extremely confidential or precious.  However,
we believe that the combination of erasure coding, strong encryption,
and careful engineering makes the use of this software a much safer
alternative than common alternatives, such as RAID, or traditional
backup onto a remote server, removable drive, or tape.

This software comes with extensive unit tests [2], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known security issues please see the
Security web page: [3].)

This release of Tahoe is suitable for the "friendnet" use case [4] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [5].


HACKING AND COMMUNITY

Please join us on the mailing list [6] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [7] shows the next improvements that we plan to make and
CREDITS [8] lists the names of people who've contributed to the
project.  The wiki Dev page [9] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [10], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and instructing them to spend part of
their work time on this free-software project).  We are eternally
grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
March 25, 2008
San Francisco, California, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2315
[2] http://allmydata.org/trac/tahoe/wiki/Dev
[3] http://allmydata.org/trac/tahoe/wiki/Security
[4] http://allmydata.org/trac/tahoe/wiki/UseCases
[5] http://allmydata.org/source/tahoe/trunk/docs/install.html
[6] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[7] http://allmydata.org/trac/tahoe/roadmap
[8] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2345
[9] http://allmydata.org/trac/tahoe/wiki/Dev
[10] http://allmydata.com




From zmola at acm.org  Wed Mar 26 07:30:09 2008
From: zmola at acm.org (Carl Zmola)
Date: Wed, 26 Mar 2008 09:30:09 -0400
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <1206430756.9271.43.camel@localhost>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>
	<1206430756.9271.43.camel@localhost>
Message-ID: <47EA4FE1.2040307@acm.org>

Justin Warren wrote:
> On Sun, 2008-03-23 at 03:48 +0000, glyph at divmod.com wrote:
>   
>> On 22 Mar, 01:54 pm, mithrandi at mithrandi.net wrote:
>>     
>>> But yes, the danger of accidentally serializing operations that don't
>>> need to be serialized, and not even realising it, is one of the 
>>> problems
>>> with this coding style.
>>>       
>> As time goes on, I'm becoming a bigger fan of inlineCallbacks.
>>
>> Too much serialization, even accidental serialization, trades 
>> comprehensibility for performance.  I think that's a reasonable place to 
>> start: make your system easy to understand, then make it fast once you 
>> know what's going on.
>>     
>
> How does the saying go? "Premature optimisation is the root of all
> evil"?
>
> As an intermediate novice, I find inlineCallbacks to be a great way to
> make code look more like sequential code, but with many of the benefits
> of asynchrony. You can then refactor the code to make pieces even more
> asynchronous where it's useful, but keep the sequential parts where that
> makes sense. This is great from a 'learning twisted' point of view.
My biggest reason for using frameworks like Twisted, is that they make 
it easier to implement network applications.

Serial programming works well when the tasks are simple, and errors are 
not considered.
As soon as error/timeouts/corner cases are considered, your nice simple 
serial code is more complex and much slower than the "more complex" 
Twisted code.

This is why people do not always see the immediate need for asynchronous 
programming.  If inline callbacks offer a way to ease yourself in to 
Twisted, or make your program more understandable to others, then it is 
worth using.

BTW,  maybe this workflow could be used for a Twisted presentation.  
Take an existing program and turn it into a Twisted program.

Carl
zmola at acm.org

Carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080326/494a63c4/attachment.html>

From pbastov at gmail.com  Wed Mar 26 07:30:41 2008
From: pbastov at gmail.com (Pavel)
Date: Wed, 26 Mar 2008 19:30:41 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
Message-ID: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>

Hi all,

I decided to benchmark my web server written in twisted against apache.

I added just one resource to my twisted web server that reads a file and
returns it to client.

Then, I created a virtual host in Apache and put the same (html) file
to the web root.

I issued the following command for both servers:

# http_load -parallel 100 seconds 5 url

First time the url contained the path to Apache document, second time
-- to twisted web.

Here is the result of the benchmark. My web server is more than 3
times slower than apache,
primarily due to response time as you can see below:

RESULT FOR APACHE
==================
8619 fetches, 13 max parallel, 2.43918e+07 bytes, in 5.00155 seconds
2830 mean bytes/connection
1723.27 fetches/sec, 4.87684e+06 bytes/sec
msecs/connect: 0.557627 mean, 2.159 max, 0.123 min
msecs/first-response: 2.81528 mean, 7.367 max, 0.413 min
HTTP response codes:
  code 200 -- 8619

RESULT FOR MY TWISTED WEB SERVER
=================================
2437 fetches, 100 max parallel, 6.86601e+06 bytes, in 5.00001 seconds
2817.4 mean bytes/connection
487.399 fetches/sec, 1.3732e+06 bytes/sec
msecs/connect: 0.159532 mean, 9.453 max, 0.077 min
msecs/first-response: 197.407 mean, 230.882 max, 5.978 min
HTTP response codes:
  code 200 -- 2437

It's not that I want to outperform Apache, I'm just curious is there any way
to improve the response time in twisted?

Thanks in advance.

-- 

Regards,

Pavel



From mithrandi at mithrandi.net  Wed Mar 26 07:47:29 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Mar 2008 15:47:29 +0200
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
Message-ID: <20080326134729.GD21342@mithrandi.net>

* Pavel <pbastov at gmail.com> [2008-03-26 19:30:41 +0600]:

> I added just one resource to my twisted web server that reads a file and
> returns it to client.

Did you write your own resource to do this, or did you use
twisted.web.static? If you wrote your own resource, it might be helpful
if you posted the source code for this as well.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080326/fb5994d7/attachment.sig>

From daedalus at eigenmagic.com  Wed Mar 26 17:40:53 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Thu, 27 Mar 2008 10:40:53 +1100
Subject: [Twisted-Python] Twisted for Novices [Was: Advice sought on
	application evolution]
In-Reply-To: <986025.1887.qm@web34207.mail.mud.yahoo.com>
References: <986025.1887.qm@web34207.mail.mud.yahoo.com>
Message-ID: <1206574853.6786.15.camel@localhost>

On Tue, 2008-03-25 at 10:20 -0700, Andrew Francis wrote:

> A part of getting things right, is knowing what wrong
> looks like. Both Twisted and (Stackless - what I work
> with), don't dedicate much time to showing what is
> definitely wrong.

Indeed. Also important is understanding *why* something is wrong.
Sometimes this is non-obvious, or counter-intuitive, which can be
confusing to the novice.

> >The easiest place to start learning is with code that
> >looks like all the other code you've written before. 
> 
> I am not sure about this approach although there is
> much to be said about having a programming style that
> makes you feel confident to tackle problems. 
> 
> I find a good way to learn is looking at good but
> simple examples that do something useful, then tinker
> with them. This is the way some of my favourite
> computer books work - the various
> Kernighan/Richie/Plauger books, Steven's "Unix Network
> Programming"

I completely agree. I guess I was trying to say that when I start to
learn something new, it's easier if I can start with a bit of newness
that isn't completely alien to me.

> In the case of Twisted, I found the Abe Fettig book
> good - I looked at webcat.py and requesthandler.py and
> that gave me a start. From time to time, I also posted
> on this mailing list to get little examples - very
> helpful. 
> 
> I also like the design patterns approach to learning:
> this is the name, the situation/context, the problem,
> the solution, references. 

Definitely, particularly when it's something that comes up a lot. The
canonical echo server/client example is ok, but it's a toy problem, not
a real world thing. It might be nice to have a real world example of
something (simple!) most people are likely to want to do, and how
Twisted makes it easy/great.

It'd be great if there was a sequence of tutorials designed to get
people to the 'Aha!' moment of twisted where it all suddenly makes
sense. Maybe there already is, and I'm simply ignorant.

-- 
Justin Warren <daedalus at eigenmagic.com>




From radix at twistedmatrix.com  Wed Mar 26 19:26:11 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 26 Mar 2008 21:26:11 -0400
Subject: [Twisted-Python] [ANN] Twisted 8.0
Message-ID: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>

http://twistedmatrix.com/

MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
has been released, Twisted Matrix Laboratories announced Wednesday.

Enslaved by his new robotic overloads, Master of the Release
Christopher Armstrong presented the new package to the Internet on
March 26th. Armstrong was unable to comment, because of a device worn
around his neck preventing him from doing so, scientists say.

Secretary of Defense Jean-Paul Calderone was asked about concerns that
French interference may have played a role in the delay of this
release. "I find such speculation preposterous. Thomas Hervé is an
upstanding member of the Labs and his loyalties lie with us. He is a
fine addition to our team."  Rumors in the community allege that
Secretary Calderone is holding Hervé's cat ransom until the release is
successfully distributed. Hervé was unavailable for comment.

This release comes shortly after the announcement by Chief of Public
Affairs Duncan McGreggor that Twisted had joined the Software Freedom
Conservancy. "We're happy to join the SFC, and we are now accepting
sponsorship. The fact that we are now ruled by a cabal of robots
should not put off potential donors. Our robotic overlords are running
us at peak efficiency, so we can most effectively distribute The
Love."

Asked about the version number jump in this release,
Commander-in-Chief Glyph Lefkowitz had the following to say: "Our
benefactors have found our previous dice-rolling version number scheme
to be inadequate, and have deigned to propose to us a more... logical
system of versioning."

=====

Twisted is an event-based framework for Internet applications which
works on Python 2.3, 2.4, and 2.5. It can be downloaded from

http://twistedmatrix.com/

Twisted 8.0 is a major feature release, with several new features and
a great number of bug fixes. Some of the highlights follow.

 - The IOCP reactor is now much improved and many bugs have been resolved.
 - Twisted is now easy_installable.
 - Many improvements were made to Trial, Twisted's unit testing system.
 - A new memcache client protocol implementation was added.
 - So much more[1]!

To see the full list of changes in its fifteen kilobytes of glory, see
the release notes[1]. We welcome you to download and enjoy, and please
file any bugs you find[2] and send comments to the mailing list[3].

Why the large version number bump? We've decided to switch to a
time-based versioning scheme. "8.0" means the first release in 2008.

[1] http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/NEWS?format=raw
[2] Register: http://twistedmatrix.com/trac/register New ticket:
http://twistedmatrix.com/trac/newticket
[3] http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Thanks!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From pbastov at gmail.com  Wed Mar 26 20:53:40 2008
From: pbastov at gmail.com (Pavel)
Date: Thu, 27 Mar 2008 08:53:40 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <20080326134729.GD21342@mithrandi.net>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
Message-ID: <eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>

Yes, I wrote my own resource. Looks like this:

class MyRoot(Resource):
	def getChild(self, name, request):
		if "" == name:
			return self
		return Resource

	def render_GET(self, request):
		path = "/path/to/file"
		f = open(path)
		content = f.read()
		f.close()
                return content

On Wed, Mar 26, 2008 at 7:47 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> * Pavel <pbastov at gmail.com> [2008-03-26 19:30:41 +0600]:
>
>
>  > I added just one resource to my twisted web server that reads a file and
>  > returns it to client.
>
>  Did you write your own resource to do this, or did you use
>  twisted.web.static? If you wrote your own resource, it might be helpful
>  if you posted the source code for this as well.
>  --
>  mithrandi, i Ainil en-Balandor, a faer Ambar
>
> -----BEGIN PGP SIGNATURE-----
>  Version: GnuPG v2.0.8 (GNU/Linux)
>
>  iEYEARECAAYFAkfqU/EACgkQpNuXDQIV94oTCQCfd5Se70QCW+/XYvWFOY5UOGr8
>  A4QAmwbAVWa2HCyRumq5zJdnF78tFXvi
>  =Gd/m
>  -----END PGP SIGNATURE-----
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From duncan.mcgreggor at gmail.com  Thu Mar 27 02:09:25 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 27 Mar 2008 03:09:25 -0500
Subject: [Twisted-Python] Re: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
Message-ID: <4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>

On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> http://twistedmatrix.com/
>
>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>  has been released, Twisted Matrix Laboratories announced Wednesday.
>
>  Enslaved by his new robotic overloads, Master of the Release
>  Christopher Armstrong presented the new package to the Internet on
>  March 26th. Armstrong was unable to comment, because of a device worn
>  around his neck preventing him from doing so, scientists say.

A reader (who fears the robotic overlords, and thus wishes to remain
anonymous) has suggested that we do a full press release with this
picture:
  http://chrisbishop.com/fineart/art-happycity.html

d



From steve at holdenweb.com  Thu Mar 27 05:18:24 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 27 Mar 2008 07:18:24 -0400
Subject: [Twisted-Python] Re: [ANN] Twisted 8.0
In-Reply-To: <47EB6743.7070804@karnaugh.za.net>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>	<4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
	<47EB6743.7070804@karnaugh.za.net>
Message-ID: <fsfvqf$19f$1@ger.gmane.org>

Colin Alston wrote:
> On 27/03/2008 10:09 Duncan McGreggor wrote:
>> On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
>> <radix at twistedmatrix.com> wrote:
>>> http://twistedmatrix.com/
>>>
>>>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>>>  has been released, Twisted Matrix Laboratories announced Wednesday.
>>>
>>>  Enslaved by his new robotic overloads, Master of the Release
>>>  Christopher Armstrong presented the new package to the Internet on
>>>  March 26th. Armstrong was unable to comment, because of a device worn
>>>  around his neck preventing him from doing so, scientists say.
>>
>> A reader (who fears the robotic overlords, and thus wishes to remain
>> anonymous) has suggested that we do a full press release with this
>> picture:
>>   http://chrisbishop.com/fineart/art-happycity.html
> 
> I'm pleased to see Twisted is still one of the few Open Source projects 
> out there which still has a genuine sense of humour - and delivers 
> staggeringly high quality code in spite of it.
> 
> Well done all involved - and thank you :)
> 
Not in spite of it, because of it. A sense of humor is essential in 
retaining perspective as one continually fails to communicate one's 
meaning to the stupid machine.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From drew.smathers at gmail.com  Thu Mar 27 10:26:10 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 27 Mar 2008 12:26:10 -0400
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
Message-ID: <368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>

On Wed, Mar 26, 2008 at 10:53 PM, Pavel <pbastov at gmail.com> wrote:
> Yes, I wrote my own resource. Looks like this:
>
>  class MyRoot(Resource):
>         def getChild(self, name, request):
>                 if "" == name:
>                         return self
>                 return Resource
>
>         def render_GET(self, request):
>                 path = "/path/to/file"
>                 f = open(path)
>                 content = f.read()
>                 f.close()
>                 return content
>
>

You should probably be using twisted.web.static.File for a better
comparison of static file serving performance. In fact, you could do
this without writing any code at all:

$ twistd web --path=<dir>


Cheers,
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From mailing_lists at evotex.ch  Thu Mar 27 10:30:11 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 17:30:11 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
Message-ID: <47EBCB93.2080007@evotex.ch>

Hello,

I coded a program that uses Twisted's plugin system. I have noticed that 
if I interrupt the application using Ctrl+C (SIGINT) that when I run it 
next time I get this :

  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
in getCache
    provider = namedAny(module.__name__ + '.' + moduleName)
  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
line 375, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'SendFile'

Could this mean that the plugin cache is corrupt? If so, How can I keep 
it from getting corrupted (is there a safe way of closing it)?

Thanks,
Gabriel



From ddwiggins at advpubtech.com  Thu Mar 27 10:39:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Mar 2008 09:39:26 -0700
Subject: [Twisted-Python] Re: Twisted for Novices [Was: Advice sought on
	application evolution]
In-Reply-To: <1206574853.6786.15.camel@localhost>
References: <986025.1887.qm@web34207.mail.mud.yahoo.com>
	<1206574853.6786.15.camel@localhost>
Message-ID: <fsgijv$g0m$1@ger.gmane.org>

Justin Warren wrote:
> Definitely, particularly when it's something that comes up a lot. The
> canonical echo server/client example is ok, but it's a toy problem, not
> a real world thing. It might be nice to have a real world example of
> something (simple!) most people are likely to want to do, and how
> Twisted makes it easy/great.

Just a sudden synaptic spark: how about a time server that periodically 
connects to several user-specified time hosts, and logs the average and 
standard deviation of their values.  Not too generally useful, but 
real-world and exploits asynchrony well.

This idea was inspired by a nice little Windows time server called 
AboutTime that logs entries like this:

> Connecting to NIST using SNTP.
> Resolved address for NIST (192.43.244.18).
> Received time (ping 62 ms), error 2 ms.
> New time: Thursday, March 27, 2008 09:37:34.

FWIW,

-- 
Don Dwiggins
Advanced Publishing Technology




From mailing_lists at evotex.ch  Thu Mar 27 10:46:59 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 17:46:59 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <47EBCB93.2080007@evotex.ch>
References: <47EBCB93.2080007@evotex.ch>
Message-ID: <47EBCF83.2070806@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I coded a program that uses Twisted's plugin system. I have noticed 
> that if I interrupt the application using Ctrl+C (SIGINT) that when I 
> run it next time I get this :
>
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
> in getPlugins
>    allDropins = getCache(package)
> --- <exception caught here> ---
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
> in getCache
>    provider = namedAny(module.__name__ + '.' + moduleName)
>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
> line 375, in namedAny
>    obj = getattr(obj, n)
> exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>
> Could this mean that the plugin cache is corrupt? If so, How can I 
> keep it from getting corrupted (is there a safe way of closing it)?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
BTW, this only happens sometimes, not every time I kill the app.

Gabriel



From glyph at divmod.com  Thu Mar 27 12:30:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 27 Mar 2008 18:30:59 -0000
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <47EBCB93.2080007@evotex.ch>
References: <47EBCB93.2080007@evotex.ch>
Message-ID: <20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>


This traceback is tantalizingly interesting, but I don't know what might 
have caused the error.

It might not mean that your plugin cache is "corrupt", per se, but that 
you've changed the names of some things in your code.  I'm not sure why 
it hasn't gotten regenerated in the meanwhile.

Can you come up with an example program which will even semi-reliably 
reproduce this error in a clean environment?  If not, is your code 
publicly available?

On 04:30 pm, mailing_lists at evotex.ch wrote:
>Hello,
>
>I coded a program that uses Twisted's plugin system. I have noticed 
>that if I interrupt the application using Ctrl+C (SIGINT) that when I 
>run it next time I get this :
>
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
>in getPlugins
>    allDropins = getCache(package)
>--- <exception caught here> ---
>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
>in getCache
>    provider = namedAny(module.__name__ + '.' + moduleName)
>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
>line 375, in namedAny
>    obj = getattr(obj, n)
>exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>
>Could this mean that the plugin cache is corrupt? If so, How can I keep 
>it from getting corrupted (is there a safe way of closing it)?
>
>Thanks,
>Gabriel
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mailing_lists at evotex.ch  Thu Mar 27 12:50:34 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 27 Mar 2008 19:50:34 +0100
Subject: [Twisted-Python] could plugin cache get currupted?
In-Reply-To: <20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>
References: <47EBCB93.2080007@evotex.ch>
	<20080327183059.21558.493661642.divmod.xquotient.8935@joule.divmod.com>
Message-ID: <47EBEC7A.4000101@evotex.ch>

On 04:30 pm, mailing_lists at evotex.ch wrote:
>> Hello,
>>
>> I coded a program that uses Twisted's plugin system. I have noticed 
>> that if I interrupt the application using Ctrl+C (SIGINT) that when I 
>> run it next time I get this :
>>
>>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 227, 
>> in getPlugins
>>    allDropins = getCache(package)
>> --- <exception caught here> ---
>>  File "/usr/lib/python2.5/site-packages/twisted/plugin.py", line 178, 
>> in getCache
>>    provider = namedAny(module.__name__ + '.' + moduleName)
>>  File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py", 
>> line 375, in namedAny
>>    obj = getattr(obj, n)
>> exceptions.AttributeError: 'module' object has no attribute 'SendFile'
>>
>> Could this mean that the plugin cache is corrupt? If so, How can I 
>> keep it from getting corrupted (is there a safe way of closing it)?
>>
>> Thanks,
>> Gabriel
>>
glyph at divmod.com wrote:
>
> This traceback is tantalizingly interesting, but I don't know what 
> might have caused the error.
>
> It might not mean that your plugin cache is "corrupt", per se, but 
> that you've changed the names of some things in your code.  I'm not 
> sure why it hasn't gotten regenerated in the meanwhile.
>
> Can you come up with an example program which will even semi-reliably 
> reproduce this error in a clean environment?  If not, is your code 
> publicly available? 

I thought it gets corrupt because I didn't change or move any of the 
plugin code. I've had this error happen 3 or 4 times today, out of maybe 
20 runs, so it's hard to reproduce. I'll try to come up with an example 
that reproduces this, as I can't give out the code yet.

Gabriel



From pbastov at gmail.com  Thu Mar 27 21:57:01 2008
From: pbastov at gmail.com (Pavel)
Date: Fri, 28 Mar 2008 09:57:01 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
Message-ID: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>

Thanks for the replies.

In fact, I just tried to compare it against the static files -- almost
the same result --
a little bit faster, but far from Apache :(

On Thu, Mar 27, 2008 at 10:26 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Wed, Mar 26, 2008 at 10:53 PM, Pavel <pbastov at gmail.com> wrote:
>  > Yes, I wrote my own resource. Looks like this:
>  >
>  >  class MyRoot(Resource):
>  >         def getChild(self, name, request):
>  >                 if "" == name:
>  >                         return self
>  >                 return Resource
>  >
>  >         def render_GET(self, request):
>  >                 path = "/path/to/file"
>  >                 f = open(path)
>  >                 content = f.read()
>  >                 f.close()
>  >                 return content
>  >
>  >
>
>  You should probably be using twisted.web.static.File for a better
>  comparison of static file serving performance. In fact, you could do
>  this without writing any code at all:
>
>  $ twistd web --path=<dir>
>
>
>  Cheers,
>  --
>  \\\\\/\"/\\\\\\\\\\\
>  \\\\/ // //\/\\\\\\\
>  \\\/ \\// /\ \/\\\\
>  \\/ /\/ / /\/ /\ \\\
>  \/ / /\/ /\ /\\\ \\
>  / /\\\ /\\\ \\\\\/\
>  \/\\\\\/\\\\\/\\\\\\
>   d.p.s
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From james at mansionfamily.plus.com  Fri Mar 28 00:23:08 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Fri, 28 Mar 2008 06:23:08 +0000
Subject: [Twisted-Python] win32 reactors
Message-ID: <47EC8ECC.9020606@mansionfamily.plus.com>

I'm just starting to evaluate Twisted, so apologies if these questions
seem naive.

It seems to me that the Twisted model for 'reactor' is actually not
what you'd expect from the name (at least, if you have a background
in other reactor implementations including ACE, basic select etc and
Java NIO) since it
 a) handles queueing outgoing data for you and
 b) presents incoming data after completion of the IO

So its a model that maps well to an AIO implementation so long
as inputs from non-blocking sources complete as soon as "some" data
is ready, rather than buffer full.

This high level approachh should work well on Windows - which is
really pleasing.  (Albeit there may be buffer starvation issues on
all platforms I guess, but that's probably scaled beyond Python
ambitions)

A quick look at the open bug list shows a lot of noise on the Win32 side
though.

Is there any reason to have any framework that calls the Win32 select
function?

And why is the event reactor broken at 64 handles? From what I can
see, that's not how to use WaitForMultipleEvents - rather one should
regard it as a way to hash completion events from standard overlapped
IO requests against 61 of the handles and keep a list of the IOs in
progress against each handle. Scales admirably, unlike any attempt to
treat the handle array like a select fd_set.

Shouldn't broken Win32 implementations be 'retired'?

Also - is there any way to determine how much data is queued for write
against an ITransport?

It appears not, though I would have thought it useful (and, a way to
get an event callback when the queued amount falls below a
specified threshold) - then in cases where data can be generated
on demand we can limit the outgoing buffer usage.

James




From glyph at divmod.com  Fri Mar 28 00:27:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 06:27:36 -0000
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
Message-ID: <20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>


On 03:57 am, pbastov at gmail.com wrote:
>Thanks for the replies.
>
>In fact, I just tried to compare it against the static files -- almost
>the same result --
>a little bit faster, but far from Apache :(

Twisted is not, and has never been, as fast as Apache in this kind of 
naive raw-speed comparison on static files.  It's probably not as fast 
for most other things either.

If you would like to make it faster, there's no trick or configuration 
option or tweak.  The solution is simple: optimize the code.  This may 
just involve using a profiler and submitting patches, this may involve 
using some tool like cython or rpython to put the really critical parts 
into an extension module.  Nobody else has volunteered to do this so far 
because Twisted is, in fact, fast enough for most things :).



From pbastov at gmail.com  Fri Mar 28 01:12:16 2008
From: pbastov at gmail.com (Pavel)
Date: Fri, 28 Mar 2008 13:12:16 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
Message-ID: <eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>

Yes, I see what you mean.

I really love Twisted, and will never switch to Apache or the like, since I like
its simplicity and the ability to have all my code in one place.

On Fri, Mar 28, 2008 at 12:27 PM,  <glyph at divmod.com> wrote:
>
>  On 03:57 am, pbastov at gmail.com wrote:
>  >Thanks for the replies.
>  >
>  >In fact, I just tried to compare it against the static files -- almost
>  >the same result --
>  >a little bit faster, but far from Apache :(
>
>  Twisted is not, and has never been, as fast as Apache in this kind of
>  naive raw-speed comparison on static files.  It's probably not as fast
>  for most other things either.
>
>  If you would like to make it faster, there's no trick or configuration
>  option or tweak.  The solution is simple: optimize the code.  This may
>  just involve using a profiler and submitting patches, this may involve
>  using some tool like cython or rpython to put the really critical parts
>  into an extension module.  Nobody else has volunteered to do this so far
>  because Twisted is, in fact, fast enough for most things :).
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From therve at free.fr  Fri Mar 28 03:31:03 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 28 Mar 2008 10:31:03 +0100
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
Message-ID: <20080328103103.3jwax28q5iwwggok@wasabox.wasabout.net>

Quoting Pavel <pbastov at gmail.com>:

> Thanks for the replies.
>
> In fact, I just tried to compare it against the static files -- almost
> the same result --
> a little bit faster, but far from Apache :(

There are 2 things I'll try if speed is a problem:

  * test with sendfile support. Look at  
http://twistedmatrix.com/trac/ticket/585, there is the branch  
sendfile-585-2, which should work with Linux and FreeBSD. If someone  
could provide some benchmark numbers, if it would be great.

  * if you have a multicore server, you'll probably want to make use  
of it. There's nothing in Twisted currently to easily do that, but I  
have tested some months ago the possibility to add prefork facility to  
Twisted. See  
http://twistedmatrix.com/trac/browser/sandbox/therve/prefork_ex1.py  
for an example. It's highly experimental, and there's currently no  
ticket talking about that, but some feedback would be welcome.

-- 
Thomas




From p.mayers at imperial.ac.uk  Fri Mar 28 05:22:21 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 28 Mar 2008 11:22:21 +0000
Subject: [Twisted-Python] Advice sought on application evolution
In-Reply-To: <20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>
References: <fs11ut$rgp$1@ger.gmane.org>	<20080321220702.GB13036@localhost.localdomain>	<87A0AED3-881E-4DD3-A352-E37917FCCB11@madebykite.com>	<20080322135444.GA9572@mithrandi.net>	<20080323034823.21558.1698411546.divmod.xquotient.8700@joule.divmod.com>	<47E639AF.2020200@imperial.ac.uk>
	<20080323231455.21558.652498029.divmod.xquotient.8734@joule.divmod.com>
Message-ID: <47ECD4ED.8070100@imperial.ac.uk>

glyph at divmod.com wrote:
> On 11:06 am, p.mayers at imperial.ac.uk wrote:
>>>
>>> It's great as a high-level prototyping tool and an orchestration 
>>> language for distributed conversations with large numbers of steps 
>>> and coarse- grained error handling.  It's bad as a way of 
>>> representing state machines or continuous processes.
>>
>> Why?
> 
> Here's something which we probably should have done with a state 
> machine, but instead did with deferredGenerator (the predecessor to 
> inlineCallbacks).
> 
> http://divmod.org/trac/browser/trunk/Quotient/xquotient/grabber.py#L438

Ok.

I would have written it more like this, dump the error handling and let 
it propagate upwards to someone who is interested, and obviously clean 
it up with inlineCallbacks:

@inlineCallbacks
def grabber(self):
   yield self.login(self._username, self._password)

   uids = []
   yield self.listUID(uids.append)

   for idx in range(0, len(uids), batchsize):
       uidset = uids[idx:idx+batchsize]
       L = self.shouldRetrieve(uidset).sorted()

...etc. and I guess what I'm getting at is why is the above worse than:

def grab(self):
   return self.login.addCallbacks(self.login_done, self.login_err)

def login_done(self, loginResult):
   uids = []
   d = self.listUID(uids.append)
   d.addCallback(self.uids_done, uids)
   d.addErrback(self.uids_err)

def uids_done(self, unk, uids):
   dlist = []
   for idx in range(0, len(uids), batchsize):
     uid_slice = uids[idx:idx+batchsize]
     d = self.sometinymethod(uid_slice)
     d.addErrback(self.tinymethod_err)
     dlist.append(d)
   dlist = defer.DeferredList(dlist)
   dlist.addCallback(self.next_method)

...etc.

I'm not disputing the point - I'm trying to figure out why 
inlineCallbacks might be inappropriate because I'm using it for just 
such an application and I'm finding it greatly superior to the previous 
multi-callback chain solution, which frankly was incomprehensible and 
error-prone (oops I forgot to return the deferred. again).

On the other hand, I *removed* inlineCallbacks from some lower-level 
calls in my SNMP libs as it was clearly cleaner, so another way of 
asking the question is "how do I detect that inlineCallbacks is bad code 
smell?"

> 
> The function's really long, and there's a ton of duplication between all 
> of the "except" clauses, and there needs to be a try/except around every 
> single deferred call.  This probably would have been better implemented 
> as a regular state-machine, because that would have allowed decomposing 
> the problem further.
> 
> Granted, you could blame the factoring here on any number of things.  It 
> could have been broken into different steps even with deferredGenerator, 
> it could have been documented better, it could have stored more state on 
> the instance so that you could inspect its state rather than hiding it 
> as local variables... but given that this is general stylistic advice I 
> think that the point holds.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From k_r_a_j_kumar at yahoo.co.in  Fri Mar 28 05:44:57 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Fri, 28 Mar 2008 17:14:57 +0530 (IST)
Subject: [Twisted-Python] regarding xml elements
Message-ID: <66657.48471.qm@web8713.mail.in.yahoo.com>

Hi,
I have an xml file in my application,
I have created an element using 
Example goes like this.........

document.createElement("abc")
and i appeneded it by using append() method.
But how i can reflect this change to my xml file?
 and one more thing is i want to create element with some other parameters....
like.............

  <abc   m=" "  n=" ">
    </abc>
and i have m and n values as strings with me.
can anybody help me to create this element and write it to the existing xml file 
as a child of an existing element?

Thanks in advance..

Raj..




      Forgot the famous last words? Access your message archive online at http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080328/29418eaa/attachment.html>

From george at ringdevelopment.com  Fri Mar 28 06:33:03 2008
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 28 Mar 2008 08:33:03 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <66657.48471.qm@web8713.mail.in.yahoo.com>
References: <66657.48471.qm@web8713.mail.in.yahoo.com>
Message-ID: <1206707583.5205.140.camel@localhost.localdomain>

Raj,

I think you are on the wrong list.  

I'm going out on a limb here, but I think you want to communicate from a
Javascript application to a server.  I might suggest using Dojo for this
(http://dojotoolkit.org), which should work if you are trying to write
the entire XML string back to the server, and might should (I live in
the south) work to mirror the xml manipulations to equivalent functions
on the server.

Did you consider JSON instead of XML?

I have not used Dojo outside of the US and there are potential
performance issues elsewhere due to the large libraries cached by AOL.

My apologies if I am off track.

George

On Fri, 2008-03-28 at 17:14 +0530, Raj kumar wrote:
> Hi,
> I have an xml file in my application,
> I have created an element using 
> Example goes like this.........
> 
> document.createElement("abc")
> and i appeneded it by using append() method.
> But how i can reflect this change to my xml file?
>  and one more thing is i want to create element with some other
> parameters....
> like..............
> 
>   <abc   m=" "  n=" ">
>     </abc>
> and i have m and n values as strings with me..
> can anybody help me to create this element and write it to the
> existing xml file 
> as a child of an existing element?
> 
> Thanks in advance...
> 
> Raj..
> 
> 
> 
> ______________________________________________________________________
> Meet people who discuss and share your passions. Join them now.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From sipickles at hotmail.com  Fri Mar 28 07:18:31 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 28 Mar 2008 13:18:31 +0000
Subject: [Twisted-Python] Server Components
Message-ID: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>

Midway thru my server dev, I am seeing the light... well, a light anyway.

Its a stackless python server and not too bad, running on Ubuntu Linux. 
Stackless Python is great, but single threaded (I DO do my DB lookups 
and network comms in other threads).

I figure its GOT to be more concurrent, if I'm looking to use future 
architecture.

So I planned to rewrite the server into modules, each a separate app. I 
guess this is a virtualisation process. Labour could be subdivided 
spatially, or by task (db access/playermanager/AI), or both

The modules plug in to each other, communicating thru the network (twisted).

This means the prototype server would run all the module apps on a 
single machine, then spreading to other machines to allow scalability. 
Being async networked (hinged on twisted.deferred), these modules run 
concurrently, using all the cores available.

SO - Am I reinventing the wheel? Does Twisted do this, or other 
Frameworks? In my limited experience, I need to create a server hub then 
have all the component modules connect to that as clients.

Is there a better way?


Thanks for your thoughts

-- 
Linux Counter: User# 424693 






From projects at reedflute.com  Fri Mar 28 07:28:30 2008
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 28 Mar 2008 15:28:30 +0200
Subject: [Twisted-Python] Serial port communication
In-Reply-To: <47E8E5D5.1010100@citic.es>
References: <47E8E5D5.1010100@citic.es>
Message-ID: <47ECF27E.1040301@reedflute.com>

Daniel Marfil wrote:

> So I can get the whole response from the modem, but in that moment I 
> don't know how to tell the factory that it can send another 
> writeSomeData (remember that it must be done in a sequential way).
> So the question is: how can I tell the factory that it can run another 
> writeSomeData once I got the right response from the modem?
>
> I know that the main problem is my inexperience with Twisted, so I'm 
> sure there's a better way to implement this. Maybe a more appropiate 
> protocol?
>
> Any clue will be very welcome ;-)
>
You will have to have some knowledge of the protocol used by the modem - 
typically Hayes AT (http://www-dcg.fnal.gov/Net/HYSTRM20.TXT) and then 
look out for the termination characters (; <CR>) before you call write() 
again. You will probably want to implement a time out using 
reactor.callLater()  together with a state machine.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From itamar at itamarst.org  Fri Mar 28 07:39:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 28 Mar 2008 09:39:58 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47EC8ECC.9020606@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
Message-ID: <1206711598.21090.90.camel@localhost.localdomain>


On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:

> Shouldn't broken Win32 implementations be 'retired'?

The old I/O Completion Ports reactor (which should be most scalable
Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
a complete rewrite that hopefully is a lot better.

> Also - is there any way to determine how much data is queued for write
> against an ITransport?

You might want to look at the producer/consumer APIs (there's a howto),
they let you know at least when the buffer becomes full or becomes
empty. The APIs could be improved to provide more info or configurable
thresholds, but that hasn't been done yet.




From mithrandi at mithrandi.net  Fri Mar 28 08:28:07 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 28 Mar 2008 16:28:07 +0200
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47EC8ECC.9020606@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
Message-ID: <20080328142807.GB29554@mithrandi.net>

* James Mansion <james at mansionfamily.plus.com> [2008-03-28 06:23:08 +0000]:

> It seems to me that the Twisted model for 'reactor' is actually not
> what you'd expect from the name (at least, if you have a background
> in other reactor implementations including ACE, basic select etc and
> Java NIO) since it
> a) handles queueing outgoing data for you and
> b) presents incoming data after completion of the IO

I believe what Twisted calls the "reactor" would be better called a
"proactor".
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080328/dd94bde4/attachment.sig>

From phil at bubblehouse.org  Fri Mar 28 08:32:44 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:32:44 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <66657.48471.qm@web8713.mail.in.yahoo.com>
References: <66657.48471.qm@web8713.mail.in.yahoo.com>
Message-ID: <1FB21159-4D52-4A58-837A-2F5733A44B01@bubblehouse.org>

On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
> Hi,
> I have an xml file in my application,
> I have created an element using
> Example goes like this.........
>
> document.createElement("abc")
> and i appeneded it by using append() method.
> But how i can reflect this change to my xml file?
>  and one more thing is i want to create element with some other  
> parameters....
> like..............
>
>   <abc   m=" "  n=" ">
>     </abc>
> and i have m and n values as strings with me..
> can anybody help me to create this element and write it to the  
> existing xml file
> as a child of an existing element?

It sounds like you're working with t.w.microdom. I believe you'll want  
to use Document.writexml(). It's not documented in the code, and I  
haven't looked anywhere else, but you should be able to use it like  
this:

     def writexml(self, stream, indent='', addindent='', newl='',  
strip=0,
                  nsprefixes={}, namespace=''):

You'll probably want to ignore most of the parameters. I'm fairly sure  
indent, addindent,newl, and strip are related to pretty-printing. I've  
never used the namespace-related vars either, so I can't really tell  
you what they do ;-)...

Also, in case it's not obvious, 'stream' should be a file object of  
some kind.

To add attributes to your element, you can invoke createElement like  
this:

     document.createElement('abc', attributes={'m':'mvalue',  
'n':'nvalue'})

Then just append() it normally as you've already done.

-phil



From exarkun at divmod.com  Fri Mar 28 08:45:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 09:45:06 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <1FB21159-4D52-4A58-837A-2F5733A44B01@bubblehouse.org>
Message-ID: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>

On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org> wrote:
>On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>Hi,
>>I have an xml file in my application,
>>I have created an element using
>>Example goes like this.........
>>
>>document.createElement("abc")
>>and i appeneded it by using append() method.
>>But how i can reflect this change to my xml file?
>>  and one more thing is i want to create element with some other 
>>parameters....
>>like..............
>>
>>   <abc   m=" "  n=" ">
>>     </abc>
>>and i have m and n values as strings with me..
>>can anybody help me to create this element and write it to the  existing 
>>xml file
>>as a child of an existing element?
>
>It sounds like you're working with t.w.microdom.

If so, stop.

Don't use twisted.web.microdom.  There are plenty of better XML libraries
for Python.

Jean-Paul



From phil at bubblehouse.org  Fri Mar 28 08:51:10 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:51:10 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>
References: <20080328144506.6859.1560292247.divmod.quotient.23915@ohm>
Message-ID: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>


On Mar 28, 2008, at 10:45 AM, Jean-Paul Calderone wrote:
> On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>> Hi,
>>> I have an xml file in my application,
>>> I have created an element using
>>> Example goes like this.........
>>>
>>> document.createElement("abc")
>>>
>> It sounds like you're working with t.w.microdom.
>
> If so, stop.
>
> Don't use twisted.web.microdom.  There are plenty of better XML  
> libraries
> for Python.

What's wrong with it? It's got a familiar API, and it's easier to work  
with than the built-in expat parser. If you've already got a  
dependency on Twisted, it seems like a good choice unless you need a  
high level of performance.

If it's so bad that you'd tell someone not to use it, why isn't it  
deprecated?

-phil



From phil at bubblehouse.org  Fri Mar 28 08:52:37 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 28 Mar 2008 10:52:37 -0400
Subject: [Twisted-Python] Server Components
In-Reply-To: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
Message-ID: <C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>

On Mar 28, 2008, at 9:18 AM, Simon Pickles wrote:
> Midway thru my server dev, I am seeing the light... well, a light  
> anyway.
>
> Its a stackless python server and not too bad, running on Ubuntu  
> Linux. Stackless Python is great, but single threaded (I DO do my DB  
> lookups and network comms in other threads).
>
> I figure its GOT to be more concurrent, if I'm looking to use future  
> architecture.
>
> So I planned to rewrite the server into modules, each a separate  
> app. I guess this is a virtualisation process. Labour could be  
> subdivided spatially, or by task (db access/playermanager/AI), or both

I'm going to go ahead assuming you know where your load problems are  
(or will be), and which things are most in need of being separated  
into components. Of course, this is pretty much the hardest part.

>
> The modules plug in to each other, communicating thru the network  
> (twisted).
>
> This means the prototype server would run all the module apps on a  
> single machine, then spreading to other machines to allow  
> scalability. Being async networked (hinged on twisted.deferred),  
> these modules run concurrently, using all the cores available.
>
> SO - Am I reinventing the wheel? Does Twisted do this, or other  
> Frameworks? In my limited experience, I need to create a server hub  
> then have all the component modules connect to that as clients.
>
> Is there a better way?

I don't believe there's nothing in Twisted that implicitly provides  
the functionality you're talking about, but you have a wide array of  
options on how to implement this yourself. It all depends on what kind  
of information you'll need to pass between modules, and how much  
refactoring you're willing to do to the existing application.

The biggest issue will probably be making a uniform and maintainable  
way for modules to discover each other and make connections without  
introducing security holes. If you are sure to have complete control  
over the network they're running on (say, in a private IP space) this  
may be a non-issue, so it's really just about logistics.

My initial reaction was to suggest Perspective Broker, but someone  
else might recommend AMP, which I'm just starting to learn the ins and  
outs of....

-phil



From exarkun at divmod.com  Fri Mar 28 08:55:39 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 09:55:39 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>
Message-ID: <20080328145539.6859.1410984628.divmod.quotient.23921@ohm>

On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen <phil at bubblehouse.org> wrote:
>
>On Mar 28, 2008, at 10:45 AM, Jean-Paul Calderone wrote:
>>On Fri, 28 Mar 2008 10:32:44 -0400, Phil Christensen <phil at bubblehouse.org 
>> > wrote:
>>>On Mar 28, 2008, at 7:44 AM, Raj kumar wrote:
>>>>Hi,
>>>>I have an xml file in my application,
>>>>I have created an element using
>>>>Example goes like this.........
>>>>
>>>>document.createElement("abc")
>>>It sounds like you're working with t.w.microdom.
>>
>>If so, stop.
>>
>>Don't use twisted.web.microdom.  There are plenty of better XML  libraries
>>for Python.
>
>What's wrong with it? It's got a familiar API, and it's easier to work  with 
>than the built-in expat parser. If you've already got a  dependency on 
>Twisted, it seems like a good choice unless you need a  high level of 
>performance.

It's full of bugs that we probably won't fix, even if you tell us about
them.

>If it's so bad that you'd tell someone not to use it, why isn't it 
>deprecated?

Because it would take a lot of work to deprecate, and there are a lot of
other things people are working on that are deemed more important.

Jean-Paul



From mailing_lists at evotex.ch  Fri Mar 28 09:33:48 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 28 Mar 2008 16:33:48 +0100
Subject: [Twisted-Python] How can I run code when the protocol is done being
	built?
Message-ID: <47ED0FDC.1050404@evotex.ch>

Hello,

I need to use the factory ref in a protocol instance at the begining of 
the protocol instance's life. Normally I do my initializing code in 
__init__(), but I can't access self.factory from inside __init__(), 
since it's only assigned after the protocol has ben built by the 
factory. A hack is to use reactor.callLater(), but I don't like hacks, 
and it's messing up my unit tests (using trial), I get REACTOR UNCLEAN 
errors. Is there a cleaner way to run initialization code, in a 
protocol, but after it has been built (and factory has been assigned)?

Thanks,
Gabriel



From exarkun at divmod.com  Fri Mar 28 09:39:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 10:39:44 -0500
Subject: [Twisted-Python] How can I run code when the protocol is done
	being built?
In-Reply-To: <47ED0FDC.1050404@evotex.ch>
Message-ID: <20080328153944.6859.1007005439.divmod.quotient.23938@ohm>

On Fri, 28 Mar 2008 16:33:48 +0100, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I need to use the factory ref in a protocol instance at the begining of the 
>protocol instance's life. Normally I do my initializing code in __init__(), 
>but I can't access self.factory from inside __init__(), since it's only 
>assigned after the protocol has ben built by the factory. A hack is to use 
>reactor.callLater(), but I don't like hacks, and it's messing up my unit 
>tests (using trial), I get REACTOR UNCLEAN errors. Is there a cleaner way to 
>run initialization code, in a protocol, but after it has been built (and 
>factory has been assigned)?

Do the initialization in connectionMade (or makeConnection) instead of in
__init__.

Jean-Paul



From ms at cerenity.org  Fri Mar 28 09:51:58 2008
From: ms at cerenity.org (Michael)
Date: Fri, 28 Mar 2008 15:51:58 +0000
Subject: [Twisted-Python] Twisted/Kamaelia integration in GSOC ?
Message-ID: <200803281551.59084.ms@cerenity.org>

Hi,


This is just a note to say that it would be really interesting to see someone 
making it easier to use Kamaelia from Twisted and/or vice versa as part of 
summer of code.

Whilst we can use Twisted by putting in a seperate process or thread, that's
rather more coarse grained than I'd like it to be. Similarly, if people want
to use Kamaelia from Twisted you can put kamaelia a thread and access it
using the likefile[1] interface, but it'd be nice to make this sort of thing
more idiomatic for both sides.

Anyway, I wanted to keep this short, so here's a couple of links:
   * http://kamaelia.sourceforge.net/SummerOfCode2008
   * http://kamaelia.sourceforge.net/MiniAxon/
   * http://kamaelia.sourceforge.net/Components

I think it's clear why we'd like to be able to work nicely with Twisted :-)

Have fun,


Michael.
--
http://yeoldeclue.com/blog
[1] cf http://kamaelia.sourceforge.net/Docs/Axon/Axon.LikeFile)



From clemesha at gmail.com  Fri Mar 28 12:11:43 2008
From: clemesha at gmail.com (alex clemesha)
Date: Fri, 28 Mar 2008 11:11:43 -0700
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
	<eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
Message-ID: <d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>

On Fri, Mar 28, 2008 at 12:12 AM, Pavel <pbastov at gmail.com> wrote:

> Yes, I see what you mean.
>
> I really love Twisted, and will never switch to Apache or the like, since
> I like
> its simplicity and the ability to have all my code in one place.


Forgive me if the following is not what you are looking
for but, I would recommend a setup like this:

Use a fast and light server/reverse proxy
like nginx ( http://wiki.codemongers.com/Main ) to

1) handle all static files (img,js,css, static html)
2) reverse proxy all your dynamic twisted.web part

I use this setup, and it works great with Twisted.

-Alex




>
> On Fri, Mar 28, 2008 at 12:27 PM,  <glyph at divmod.com> wrote:
> >
> >  On 03:57 am, pbastov at gmail.com wrote:
> >  >Thanks for the replies.
> >  >
> >  >In fact, I just tried to compare it against the static files -- almost
> >  >the same result --
> >  >a little bit faster, but far from Apache :(
> >
> >  Twisted is not, and has never been, as fast as Apache in this kind of
> >  naive raw-speed comparison on static files.  It's probably not as fast
> >  for most other things either.
> >
> >  If you would like to make it faster, there's no trick or configuration
> >  option or tweak.  The solution is simple: optimize the code.  This may
> >  just involve using a profiler and submitting patches, this may involve
> >  using some tool like cython or rpython to put the really critical parts
> >  into an extension module.  Nobody else has volunteered to do this so
> far
> >  because Twisted is, in fact, fast enough for most things :).
> >
> >
> >
> >  _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Good luck,
>
> Pavel Bastov
> xooChat Team Leader
> http://www.xoochat.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080328/c90c63c7/attachment.html>

From glyph at divmod.com  Fri Mar 28 16:49:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 22:49:11 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <1206711598.21090.90.camel@localhost.localdomain>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
Message-ID: <20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>

On 01:39 pm, itamar at itamarst.org wrote:
>
>On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:
>>Shouldn't broken Win32 implementations be 'retired'?

These implementations aren't "broken", so much as "limited".

Please feel free to contribute patches which reduce these limitations.
>The old I/O Completion Ports reactor (which should be most scalable
>Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
>a complete rewrite that hopefully is a lot better.

It still doesn't support SSL, though:

    http://twistedmatrix.com/trac/ticket/593

and maybe some other features too (I don't have a Windows handy or the 
time required to read the code to check - this really ought to be 
better-documented).

The select reactor is also convenient for testing on Windows, because 
it's the basis of at least one GUI reactor (GTK+) which should also 
support Win32.

Your suggestion for handle buckets in the win32eventreactor is one which 
has been suggested before and sounds good to me.  Nobody has bothered to 
implement it yet :).  However, even in its absence, I don't believe 
we'll be completely dropping win32eventreactor because it is useful for 
integrating with programs that do win32 drawing, even if iocpreactor has 
higher performance and is more scalable.



From glyph at divmod.com  Fri Mar 28 16:59:21 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 28 Mar 2008 22:59:21 -0000
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328145539.6859.1410984628.divmod.quotient.23921@ohm>
References: <D23EB576-C472-4B2D-BF30-AEDAC5E8D6FC@bubblehouse.org>
	<20080328145539.6859.1410984628.divmod.quotient.23921@ohm>
Message-ID: <20080328225921.21558.1606403117.divmod.xquotient.9099@joule.divmod.com>

On 02:55 pm, exarkun at divmod.com wrote:
>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen 
><phil at bubblehouse.org> wrote:

>>If it's so bad that you'd tell someone not to use it, why isn't it 
>>deprecated?

>Because it would take a lot of work to deprecate, and there are a lot 
>of
>other things people are working on that are deemed more important.

Also because there isn't a complete consensus on how terrible it is.  If 
you are doing advanced XML processing, it definitely isn't the best 
choice, because it's missing a bunch of features and it has some 
idiosyncratic behavior.  However, it is conveniently available without 
adding another dependency and it supports simple use-cases OK; this is 
still a problem with other XML libraries in Python, especially DOM 
libraries.  (For example, incompatibilities between the various lxml 
implementations.)

I, personally, don't think it should be deprecated, even if it shouldn't 
be particularly strongly recommended, either.



From exarkun at divmod.com  Fri Mar 28 17:33:50 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Mar 2008 18:33:50 -0500
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328225921.21558.1606403117.divmod.xquotient.9099@joule.divmod.com>
Message-ID: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>

On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>On 02:55 pm, exarkun at divmod.com wrote:
>>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen <phil at bubblehouse.org> 
>>wrote:
>
>>>If it's so bad that you'd tell someone not to use it, why isn't it 
>>>deprecated?
>
>>Because it would take a lot of work to deprecate, and there are a lot of
>>other things people are working on that are deemed more important.
>
>Also because there isn't a complete consensus on how terrible it is.  If you 
>are doing advanced XML processing, it definitely isn't the best choice, 
>because it's missing a bunch of features and it has some idiosyncratic 
>behavior.  However, it is conveniently available without adding another 
>dependency and it supports simple use-cases OK; this is still a problem with 
>other XML libraries in Python, especially DOM libraries.  (For example, 
>incompatibilities between the various lxml implementations.)

Here's an example of a behavior it has which probably isn't going to change
any time soon:

    >>> from twisted.web.microdom import parseString
    >>> s = '<div><span>hello</span> <span>world</span></div>'
    >>> parseString(s).toxml()
    '<?xml version="1.0"?><div><span>hello</span><span>world</span></div>'
    >>> 

So if you need such advanced XML features as correct whitespace handling,
steer clear. ;)

Jean-Paul



From pbastov at gmail.com  Fri Mar 28 21:43:08 2008
From: pbastov at gmail.com (Pavel)
Date: Sat, 29 Mar 2008 09:43:08 +0600
Subject: [Twisted-Python] How to improve response time of twisted.web?
In-Reply-To: <d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>
References: <eaf39e680803260630v454e9a8gfa89aa9d78a77502@mail.gmail.com>
	<20080326134729.GD21342@mithrandi.net>
	<eaf39e680803261953g21d7890er46fd2272d9b30e35@mail.gmail.com>
	<368574aa0803270926l12b73904lf2859cbca1fc23ec@mail.gmail.com>
	<eaf39e680803272057h1ce2ccb4h2dc63bbc18f8a61f@mail.gmail.com>
	<20080328062736.21558.1256885162.divmod.xquotient.9063@joule.divmod.com>
	<eaf39e680803280012n2f64705fhdc8527d4a9f5a92b@mail.gmail.com>
	<d272f0690803281111tf98de16i2c273b27894eeeb5@mail.gmail.com>
Message-ID: <eaf39e680803282043h27905e81u1dcc115608dad600@mail.gmail.com>

> Forgive me if the following is not what you are looking
> for but, I would recommend a setup like this:
>
> Use a fast and light server/reverse proxy
>  like nginx ( http://wiki.codemongers.com/Main ) to
>
> 1) handle all static files (img,js,css, static html)
> 2) reverse proxy all your dynamic twisted.web part
>
> I use this setup, and it works great with Twisted.
>
> -Alex

Greetings Alex, thanks for your advice.

I'm aware of this configuration, and it seems to be a pretty
reasonable one.



From pbastov at gmail.com  Fri Mar 28 23:39:56 2008
From: pbastov at gmail.com (Pavel)
Date: Sat, 29 Mar 2008 11:39:56 +0600
Subject: [Twisted-Python] disable twisted.web logging
Message-ID: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>

Hi all,

is there any way to disable twisted.web logging? Or at least
control it somehow, e.g. filter and log only necessary entries.

Also, is there any way to make http requests be logged into separate file?

Thanks in advance.

-- 
Good luck,

Pavel Bastov



From glyph at divmod.com  Sat Mar 29 01:46:58 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 29 Mar 2008 07:46:58 -0000
Subject: [Twisted-Python] A reminder of a useful report
Message-ID: <20080329074658.21558.89626718.divmod.xquotient.9180@joule.divmod.com>


Just a reminder for those of you who might have some free time this 
weekend. (I probably don't, so this reminder is entirely 
hypocritical...)

There's a report in Trac which provides a list of tickets to review in 
the order that reviewers should consider them in:

    http://twistedmatrix.com/trac/report/15

A few of these haven't been looked at in 3 months.  If you're not 
familiar with the review process but you'd like to contribute to Twisted 
by reviewing tickets - well, this is a great opportunity to ask how :).



From sipickles at hotmail.com  Sat Mar 29 06:51:29 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 29 Mar 2008 12:51:29 +0000
Subject: [Twisted-Python] Deferred Network requests
Message-ID: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>

Hi,

I've been using twisted in a low-level way for some time and am now 
interested in the higher level aspects.

Particularly I hope to be able to make deferred requests across a 
network. I'd like to have a hub server, with many small apps (modules) 
which are all clients of the hub server.

I'd like the modules to be able to request information from each other, 
via the hub, in a deferred way, so the callback will be triggered when 
the requested information arrives.

So I need a chain like this:

ModuleA.RequestName(id).addCallback(modACallback) -> Hub
Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
ModuleB.SendNameToHub() -> Hub
Hub.hubCallback triggered: SendNameToModA() -> ModuleA
ModuleA.modACallback triggered - request is complete.

Perhaps one issue is that I have a client->server->client sequence.

Although it looks slow, I am designing my system to be as concurrent as 
possible. Also, the hub can make decisions about sharing requests with 
several modules on a round-robin, or sending requests (and events, 
particularly) to more than one module.

I know I can do this through TCP or similar, but hoped someone might 
suggest which elements of twisted (a very large framework) I should look 
at more closely.

Many thanks!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sat Mar 29 10:53:10 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 29 Mar 2008 16:53:10 +0000
Subject: [Twisted-Python] Server Components
In-Reply-To: <C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
Message-ID: <BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>


Linux user #458601 - http://counter.li.org.



Phil Christensen wrote:
> If you are sure to have complete control over the network they're 
> running on (say, in a private IP space) this may be a non-issue, so 
> it's really just about logistics.
>
Yes, This system would be in Private IP space.
> My initial reaction was to suggest Perspective Broker, but someone 
> else might recommend AMP, which I'm just starting to learn the ins and 
> outs of....
>
I'll look at PB, but have not found twisted doc very accessible. As for 
AMP, what is that?

Thanks

Si

ps: sorry for repeating myself in later post :)





From phil at bubblehouse.org  Sat Mar 29 18:56:56 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 20:56:56 -0400
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
References: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
Message-ID: <BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>


On Mar 28, 2008, at 7:33 PM, Jean-Paul Calderone wrote:
> On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>> On 02:55 pm, exarkun at divmod.com wrote:
>>> On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen  
>>> <phil at bubblehouse.org> wrote:
>>
>>>> If it's so bad that you'd tell someone not to use it, why isn't  
>>>> it deprecated?
>>
>>> Because it would take a lot of work to deprecate, and there are a  
>>> lot of
>>> other things people are working on that are deemed more important.
>>
>> Also because there isn't a complete consensus on how terrible it  
>> is.  If you are doing advanced XML processing, it definitely isn't  
>> the best choice, because it's missing a bunch of features and it  
>> has some idiosyncratic behavior.  However, it is conveniently  
>> available without adding another dependency and it supports simple  
>> use-cases OK; this is still a problem with other XML libraries in  
>> Python, especially DOM libraries.  (For example, incompatibilities  
>> between the various lxml implementations.)
>
> Here's an example of a behavior it has which probably isn't going  
> to change
> any time soon:
>
>    >>> from twisted.web.microdom import parseString
>    >>> s = '<div><span>hello</span> <span>world</span></div>'
>    >>> parseString(s).toxml()
>    '<?xml version="1.0"?><div><span>hello</span><span>world</span></ 
> div>'
>    >>>
> So if you need such advanced XML features as correct whitespace  
> handling,
> steer clear. ;)

I have to say, I don't find this to be that big an issue. I think if  
you're using XML as a data interchange format (as I know the original  
poster was), whitespace is generally syntactically meaningless.

In fact, in my particular usage, I'm dealing with SAML responses  
which need to have a signature verified using xmlsec, and any  
whitespace like that would break the signature.

I know there's a tendency among developers to immediately disregard  
something that is less than perfect, but I like microdom too much to  
give up on it yet ;-)...

-phil



From phil at bubblehouse.org  Sat Mar 29 19:03:41 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 21:03:41 -0400
Subject: [Twisted-Python] disable twisted.web logging
In-Reply-To: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
References: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
Message-ID: <EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>

On Mar 29, 2008, at 1:39 AM, Pavel wrote:
> Hi all,
>
> is there any way to disable twisted.web logging? Or at least
> control it somehow, e.g. filter and log only necessary entries.
>
> Also, is there any way to make http requests be logged into  
> separate file?

FYI, posts like this should probably go to the twisted-web mailing list.

I'm not sure what level of control you'd like over the access log,  
but for simple redirection, it's straightforward. Here's how I build  
the Site object:

     myresource = MyResource()
     if(config['logfile'] != '-'):
         site = server.Site(myresource, logPath=config['logfile'])
     else:
         site = server.Site(myresource)

This will let you pass either a log filename or /dev/null as a  
parameter.

If you'd like more control (like logging different kinds of requests  
to different files), you'll need to get into the LogObserver stuff in  
twisted.python.log... I've only used t.p.log to create custom  
loggers, though, I'm not sure what's involved in filtering t.web's  
log messages....

Hope this helps,

-phil



From phil at bubblehouse.org  Sat Mar 29 19:23:19 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 29 Mar 2008 21:23:19 -0400
Subject: [Twisted-Python] Server Components
In-Reply-To: <BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<C2075E97-F335-4281-B3B0-395E9B134CD4@bubblehouse.org>
	<BAY114-DAV3C0EAB7155EF37FCADB42BEF80@phx.gbl>
Message-ID: <42DD51A4-18C5-44DA-B641-0EEFB68D1645@bubblehouse.org>


On Mar 29, 2008, at 12:53 PM, Simon Pickles wrote:
>
> Linux user #458601 - http://counter.li.org.
>
> Phil Christensen wrote:
>> If you are sure to have complete control over the network they're  
>> running on (say, in a private IP space) this may be a non-issue,  
>> so it's really just about logistics.
>>
> Yes, This system would be in Private IP space.
>> My initial reaction was to suggest Perspective Broker, but someone  
>> else might recommend AMP, which I'm just starting to learn the ins  
>> and outs of....
>>
> I'll look at PB, but have not found twisted doc very accessible. As  
> for AMP, what is that?

I found the PB docs pretty reasonable, but I was already fairly  
comfortable with asynchronous network programming, which is really a  
required step before Twisted starts making sense. This one was the  
most help:

	http://twistedmatrix.com/projects/core/documentation/howto/pb- 
usage.html

I'm pretty fond of PB, but I don't really use a lot of the more  
advanced features. Its applicability is definitely dependent on what  
kind of data you need to send between your various nodes...

As for amp, I was recently passed this link:

	http://twistedmatrix.com/documents/current/api/ 
twisted.protocols.amp.html

But I'm still processing it ;-)...

On Mar 29, 2008, at 8:51 AM, Simon Pickles wrote:
>
> Particularly I hope to be able to make deferred requests across a  
> network. I'd like to have a hub server, with many small apps  
> (modules) which are all clients of the hub server.
>
> I'd like the modules to be able to request information from each  
> other, via the hub, in a deferred way, so the callback will be  
> triggered when the requested information arrives.

This is definitely the standard behavior of PB, and in fact, much of  
Twisted. Network requests always happen asynchronously, and trigger  
their Deferred's callback function like any other deferred event.

> So I need a chain like this:
>
> ModuleA.RequestName(id).addCallback(modACallback) -> Hub
> Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
> ModuleB.SendNameToHub() -> Hub
> Hub.hubCallback triggered: SendNameToModA() -> ModuleA
> ModuleA.modACallback triggered - request is complete.
>
> Perhaps one issue is that I have a client->server->client sequence.

That shouldn't be an issue. This is a very reasonable command flow,  
and dealing with it elegantly in your app is more a matter of design  
choices than protocol.

> Although it looks slow, I am designing my system to be as  
> concurrent as possible. Also, the hub can make decisions about  
> sharing requests with several modules on a round-robin, or sending  
> requests (and events, particularly) to more than one module.
>
> I know I can do this through TCP or similar, but hoped someone  
> might suggest which elements of twisted (a very large framework) I  
> should look at more closely.

I think you'll find that PB is easier to pick up initially than AMP,  
but if you require a more advanced protocol (e.g., something that  
can't be expressed in terms of python method calls and responses, or  
that needs very robust exception handling), AMP will probably work  
better in the long run.

I do have to emphasize though that this is my opinion based on  
limited exposure to AMP, perhaps someone else can chime in with  
better info...

-phil




From exarkun at twistedmatrix.com  Sat Mar 29 22:05:23 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Mar 2008 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1206849923.83.265199727@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080330/6476a56d/attachment.html>

From glyph at divmod.com  Sat Mar 29 23:08:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 30 Mar 2008 05:08:15 -0000
Subject: [Twisted-Python] regarding xml elements
In-Reply-To: <BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>
References: <20080328233350.6859.1082727142.divmod.quotient.24086@ohm>
	<BA0E78FE-B568-4F04-99B6-5BF7437C6823@bubblehouse.org>
Message-ID: <20080330050815.21558.1706581895.divmod.xquotient.9228@joule.divmod.com>


On 12:56 am, phil at bubblehouse.org wrote:
>On Mar 28, 2008, at 7:33 PM, Jean-Paul Calderone wrote:
>>On Fri, 28 Mar 2008 22:59:21 -0000, glyph at divmod.com wrote:
>>>On 02:55 pm, exarkun at divmod.com wrote:
>>>>On Fri, 28 Mar 2008 10:51:10 -0400, Phil Christensen 
>>>><phil at bubblehouse.org> wrote:

>>    >>> from twisted.web.microdom import parseString
>>    >>> s = '<div><span>hello</span> <span>world</span></div>'
>>    >>> parseString(s).toxml()
>>    '<?xml version="1.0"?><div><span>hello</span><span>world</span></ 
>>div>'
>>    >>>
>>So if you need such advanced XML features as correct whitespace 
>>handling,
>>steer clear. ;)

>I have to say, I don't find this to be that big an issue. I think if 
>you're using XML as a data interchange format (as I know the original 
>poster was), whitespace is generally syntactically meaningless.

Like many things in Microdom, whitespace handling does not strive to be 
particularly spec-compliant (the spec does say "An XML processor  MUST 
always pass all characters in a document that are not markup through to 
the application."), but to be useful for simple cases and stable enough 
that your code won't break.  If you want whitespace you can probably 
cram it in there.  For example, it has a creative misinterpretation of 
the "xml:space" attribute:
>>>from twisted.web.microdom import parseString
>>>s = '<div xml:space="preserve"><span>hello</span> 
>>><span>world</span></div>'
>>>parseString(s).toxml()
'<?xml version="1.0"?><div xml:space="preserve"><span>hello</span> 
<span>world</span></div>'

It is also hard-coded to preserve space in <pre> tags, which is also 
broken because it doesn't really honor namespaces, and therefore has no 
idea if your document is HTML or not, and it can't read DTDs so it 
doesn't know if your elements have this attribute set implicitly (and so 
on and so on).

This could be made into *slightly* less of a hack with a preserveSpace 
argument to parse*(), of course; the implementation would probably be 
very straightforward (c.f. MicroDOMParser.shouldPreserveSpace).  Maybe 
someone who actually likes Microdom, such as Phil, will add one, since 
all I'm committing to here is not totally hating it ;).



From pbastov at gmail.com  Sun Mar 30 05:12:37 2008
From: pbastov at gmail.com (Pavel)
Date: Sun, 30 Mar 2008 17:12:37 +0600
Subject: [Twisted-Python] disable twisted.web logging
In-Reply-To: <EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>
References: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
	<EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>
Message-ID: <eaf39e680803300412w2966e6dg8474deb011736acd@mail.gmail.com>

Phil, your reply is very helpful. Thanks a lot.

P.S.

I will take your advice into account and next time will post to twisted-web.

On Sun, Mar 30, 2008 at 7:03 AM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Mar 29, 2008, at 1:39 AM, Pavel wrote:
>  > Hi all,
>  >
>  > is there any way to disable twisted.web logging? Or at least
>  > control it somehow, e.g. filter and log only necessary entries.
>  >
>  > Also, is there any way to make http requests be logged into
>  > separate file?
>
>  FYI, posts like this should probably go to the twisted-web mailing list.
>
>  I'm not sure what level of control you'd like over the access log,
>  but for simple redirection, it's straightforward. Here's how I build
>  the Site object:
>
>      myresource = MyResource()
>      if(config['logfile'] != '-'):
>          site = server.Site(myresource, logPath=config['logfile'])
>      else:
>          site = server.Site(myresource)
>
>  This will let you pass either a log filename or /dev/null as a
>  parameter.
>
>  If you'd like more control (like logging different kinds of requests
>  to different files), you'll need to get into the LogObserver stuff in
>  twisted.python.log... I've only used t.p.log to create custom
>  loggers, though, I'm not sure what's involved in filtering t.web's
>  log messages....
>
>  Hope this helps,
>
>  -phil
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From sipickles at hotmail.com  Mon Mar 31 02:00:40 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 09:00:40 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
Message-ID: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>

Hi,

You may have seen my recent posts about data comms across nodes of 
server network.

Phil kindly pointed me towards PB and AMP which, after some fiddling 
both look viable. However, I do have one question: If clients can 
request remote data from the server, is the reverse possible?

As I understand PB, a client can get the root object of a 
PBServerFactory, thru which it can call methods with the 'remote_' 
prefix. I'm not clear how this can work in the other direction. As for 
AMP, this seems similar - the client uses callRemote() to execute remote 
methods on the amp server.

Since I have node clients all talking through a server, I need the 
client to make requests to the server, which in turn requests the 
appropriate data from the corresponding client.

Thanks for any advice on this

Regards

Simon

-- 
Linux Counter: User# 424693 






From andreas at kostyrka.org  Mon Mar 31 04:19:27 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 31 Mar 2008 12:19:27 +0200
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F09A28.6000503@hotmail.com>
References: <47F09A28.6000503@hotmail.com>
Message-ID: <1206958767.8299.2.camel@localhost>

Well, the client nodes can also be servers.

Alternativly, it's Twisted, so you let your node call in for "work", and
wait till you have work for the node before returning from the method
call. (Hint return a defered, store it in a dictionary (nodeid =>
defered), and when you need node X to do work for you,
nodeid_defered_dict[nodeX].callback("do this work please", id))

Andreas


Am Montag, den 31.03.2008, 09:00 +0100 schrieb Simon Pickles:
> Hi,
> 
> You may have seen my recent posts about data comms across nodes of 
> server network.
> 
> Phil kindly pointed me towards PB and AMP which, after some fiddling 
> both look viable. However, I do have one question: If clients can 
> request remote data from the server, is the reverse possible?
> 
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. As for 
> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.
> 
> Since I have node clients all talking through a server, I need the 
> client to make requests to the server, which in turn requests the 
> appropriate data from the corresponding client.
> 
> Thanks for any advice on this
> 
> Regards
> 
> Simon
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080331/46b89528/attachment.sig>

From p.mayers at imperial.ac.uk  Mon Mar 31 04:55:39 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 31 Mar 2008 11:55:39 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
References: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
Message-ID: <47F0C32B.80903@imperial.ac.uk>

Simon Pickles wrote:
> Hi,
> 
> You may have seen my recent posts about data comms across nodes of 
> server network.
> 
> Phil kindly pointed me towards PB and AMP which, after some fiddling 
> both look viable. However, I do have one question: If clients can 
> request remote data from the server, is the reverse possible?
> 
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. As for 

Well, this is a contrived example (since you could just return the 
deferred) but:

class Server(pb.Referenceable):
   def remote_foo(self, client):
     d = doThing().addCallback(self.thing_result, client)

   def thing_result(self, result, client):
     client.callRemote('thing', result)



class Client(pb.Referenceable):
   def remote_thing(self, thing):
     # do something

   def callServer(self):
     d = self.server.getRootObject().addCallback(self.callServer2)
   def callServer2(self, server):
     server.callRemote('foo', self)

That is - when you callRemote() you can pass pb.Referenceable as 
arguments, and the other end call callRemote on those objects.


> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.

No idea about AMP

> 
> Since I have node clients all talking through a server, I need the 
> client to make requests to the server, which in turn requests the 
> appropriate data from the corresponding client.
> 
> Thanks for any advice on this
> 
> Regards
> 
> Simon
> 




From p.mayers at imperial.ac.uk  Mon Mar 31 05:31:27 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 31 Mar 2008 12:31:27 +0100
Subject: [Twisted-Python] Deferred Network requests
In-Reply-To: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
References: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
Message-ID: <47F0CB8F.9090209@imperial.ac.uk>

Simon Pickles wrote:
> Hi,
> 
> I've been using twisted in a low-level way for some time and am now 
> interested in the higher level aspects.
> 
> Particularly I hope to be able to make deferred requests across a 
> network. I'd like to have a hub server, with many small apps (modules) 
> which are all clients of the hub server.
> 
> I'd like the modules to be able to request information from each other, 
> via the hub, in a deferred way, so the callback will be triggered when 
> the requested information arrives.
> 
> So I need a chain like this:
> 
> ModuleA.RequestName(id).addCallback(modACallback) -> Hub
> Hub.RequestName(id).addCallback(hubCallback)-> ModuleB
> ModuleB.SendNameToHub() -> Hub
> Hub.hubCallback triggered: SendNameToModA() -> ModuleA
> ModuleA.modACallback triggered - request is complete.
> 
> Perhaps one issue is that I have a client->server->client sequence.
> 
> Although it looks slow, I am designing my system to be as concurrent as 
> possible. Also, the hub can make decisions about sharing requests with 
> several modules on a round-robin, or sending requests (and events, 
> particularly) to more than one module.
> 
> I know I can do this through TCP or similar, but hoped someone might 
> suggest which elements of twisted (a very large framework) I should look 
> at more closely.

Perspective broker (pb) would work, provided the values you are passing 
round are plain python types e.g. int, str, list, dict, tuple.

You'd have something like:

from twisted.spread import pb
from twisted.internet import reactor

class Module(pb.Referenceable):
   def __init__(self, name, server, port=1234):
     self.f = pb.PBClientFactory()
     reactor.connectTCP(server, port, f)
     self.f.getRootObject().addCallback(self.signon, name)

   def signon(self, root, name):
     self.root = root
     self.root.callRemote('signon', name, self)

   # methods for use by remote
   def remote_doThing(self):
     return aDeferredThing()

   # methods for use by local process
   def requestName(self, id):
     return self.root.addCallback(requestName2, id)
   def requestName2(self, root, id):
     return root.callRemote('requestName', id)

ModuleA = Module('ModuleA', server)
reactor.run()

...and on the server site:

from twisted.spread import pb

class Server(pb.Root):
   modules = {}

   # function a module registers with
   def remote_signon(self, name, module):
     if name in self.modules:
         self.modules[name].append(module)
     else:
         self.modules[name] = [module]

   # proxy to a copy of ModuleA, with load-balancing
   def remote_modulea_doThing(self, arg):
     modulea_list = self.modules['ModuleA']
     mod = random.choice(modulea_list)
     return mod.callRemote('doThing', arg)

   # proxy wherever...
   def remote_requestName(self, id):
     mod = ...
     return mod.requestName(id)

The above is very hacky - the class-global dict() is wrong, and there is 
no handling of PB disconnection errors and so forth, but the basic idea 
is sound.

> 
> Many thanks!
> 
> Simon
> 




From drew.smathers at gmail.com  Mon Mar 31 05:40:44 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 31 Mar 2008 07:40:44 -0400
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F0C32B.80903@imperial.ac.uk>
References: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
	<47F0C32B.80903@imperial.ac.uk>
Message-ID: <368574aa0803310440y77f50f19i98a61c856d9373d7@mail.gmail.com>

On Mon, Mar 31, 2008 at 6:55 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Simon Pickles wrote:
>  > Hi,
>  >
>  > You may have seen my recent posts about data comms across nodes of
>  > server network.
>  >
>  > Phil kindly pointed me towards PB and AMP which, after some fiddling
>  > both look viable. However, I do have one question: If clients can
>  > request remote data from the server, is the reverse possible?
>  >
>  > As I understand PB, a client can get the root object of a
>  > PBServerFactory, thru which it can call methods with the 'remote_'
>  > prefix. I'm not clear how this can work in the other direction. As for
>
>  Well, this is a contrived example (since you could just return the
>  deferred) but:
>
>  class Server(pb.Referenceable):
>    def remote_foo(self, client):
>      d = doThing().addCallback(self.thing_result, client)
>
>    def thing_result(self, result, client):
>      client.callRemote('thing', result)
>
>
>
>  class Client(pb.Referenceable):
>    def remote_thing(self, thing):
>      # do something
>
>    def callServer(self):
>      d = self.server.getRootObject().addCallback(self.callServer2)
>    def callServer2(self, server):
>      server.callRemote('foo', self)
>
>  That is - when you callRemote() you can pass pb.Referenceable as
>  arguments, and the other end call callRemote on those objects.
>
>
>
>  > AMP, this seems similar - the client uses callRemote() to execute remote
>  > methods on the amp server.
>
>  No idea about AMP
>

AMP is bidirectional as well.  The server uses callRemote to
communicate with the connected client(s):

http://djfroofy.livejournal.com/3509.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From exarkun at divmod.com  Mon Mar 31 05:46:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 06:46:44 -0500
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV4B99B61DEBE02C4B2CF5BBEFA0@phx.gbl>
Message-ID: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>

On Mon, 31 Mar 2008 09:00:40 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>You may have seen my recent posts about data comms across nodes of server 
>network.
>
>Phil kindly pointed me towards PB and AMP which, after some fiddling both 
>look viable. However, I do have one question: If clients can request remote 
>data from the server, is the reverse possible?
>
>As I understand PB, a client can get the root object of a PBServerFactory, 
>thru which it can call methods with the 'remote_' prefix. I'm not clear how 
>this can work in the other direction. As for AMP, this seems similar - the 
>client uses callRemote() to execute remote methods on the amp server.
>
>Since I have node clients all talking through a server, I need the client to 
>make requests to the server, which in turn requests the appropriate data 
>from the corresponding client.
>
>Thanks for any advice on this
>

In addition to the other suggestions that have been made in this thread,
notice that PBClientFactory.login takes two arguments: the credentials
object used for authentication and an optional "client" object which
defaults to None.  The value of this parameter is made available to your
realm in the `mind´ parameter.  This means you can pass a reference to
login for this parameter and the server can use it to make calls onto the
client whenever it wants, rather than having to wait for a subsequent
call made by the client.

Jean-Paul



From sipickles at hotmail.com  Mon Mar 31 06:18:44 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 13:18:44 +0100
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>
References: <20080331114644.6859.1959769847.divmod.quotient.24734@ohm>
Message-ID: <BAY114-DAV7F26982293AA3E64861E6BEFA0@phx.gbl>



Jean-Paul Calderone wrote:
> On Mon, 31 Mar 2008 09:00:40 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> You may have seen my recent posts about data comms across nodes of 
>> server network.
>>
>> Phil kindly pointed me towards PB and AMP which, after some fiddling 
>> both look viable. However, I do have one question: If clients can 
>> request remote data from the server, is the reverse possible?
>>
>> As I understand PB, a client can get the root object of a 
>> PBServerFactory, thru which it can call methods with the 'remote_' 
>> prefix. I'm not clear how this can work in the other direction. As 
>> for AMP, this seems similar - the client uses callRemote() to execute 
>> remote methods on the amp server.
>>
>> Since I have node clients all talking through a server, I need the 
>> client to make requests to the server, which in turn requests the 
>> appropriate data from the corresponding client.
>>
>> Thanks for any advice on this
>>
>
> In addition to the other suggestions that have been made in this thread,
> notice that PBClientFactory.login takes two arguments: the credentials
> object used for authentication and an optional "client" object which
> defaults to None.  

This looks very interesting.

> The value of this parameter is made available to your
> realm in the `mind´ parameter.  

Er, I'm sorry but I don't understand realm and mind. I'm new to this area.

> This means you can pass a reference to
> login for this parameter and the server can use it to make calls onto the
> client whenever it wants, rather than having to wait for a subsequent
> call made by the client.

This is exactly what I would like to do.

Simon


-- 
Linux Counter: User# 424693 






From exarkun at divmod.com  Mon Mar 31 06:44:41 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 07:44:41 -0500
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <BAY114-DAV7F26982293AA3E64861E6BEFA0@phx.gbl>
Message-ID: <20080331124441.6859.1390157848.divmod.quotient.24741@ohm>

On Mon, 31 Mar 2008 13:18:44 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>
>Jean-Paul Calderone wrote:
> [snip]
>>
>>In addition to the other suggestions that have been made in this thread,
>>notice that PBClientFactory.login takes two arguments: the credentials
>>object used for authentication and an optional "client" object which
>>defaults to None.
>
>This looks very interesting.
>>The value of this parameter is made available to your
>>realm in the `mind´ parameter.
>
>Er, I'm sorry but I don't understand realm and mind. I'm new to this area.
>>This means you can pass a reference to
>>login for this parameter and the server can use it to make calls onto the
>>client whenever it wants, rather than having to wait for a subsequent
>>call made by the client.
>
>This is exactly what I would like to do.

Have you read the cred howto?  There is a section on realms and one on minds
(although the mind section is quite abstract and may not make any sense).

  http://twistedmatrix.com/projects/core/documentation/howto/cred.html

Basically, the mind is just an argument which will be available in your
realm to use however you like.  The realm is the object which creates your
avatars.  Avatars are the objects which are returned by the login method
of PBClientFactory.

Jean-Paul



From dripton at ripton.net  Mon Mar 31 07:23:57 2008
From: dripton at ripton.net (David Ripton)
Date: Mon, 31 Mar 2008 06:23:57 -0700
Subject: [Twisted-Python] Perspective Broker vs AMP
In-Reply-To: <47F09A28.6000503@hotmail.com>
References: <47F09A28.6000503@hotmail.com>
Message-ID: <20080331132357.GA7187@vidar.dreamhost.com>

On 2008.03.31 09:00:40 +0100, Simon Pickles wrote:
> As I understand PB, a client can get the root object of a 
> PBServerFactory, thru which it can call methods with the 'remote_' 
> prefix. I'm not clear how this can work in the other direction. 

The mind argument to Realm.requestAvatar holds a reference to the client
object that the client passed to PBClientFactory.login  You can stash
that reference somewhere on the server side, and call callRemote on it
later.

http://twistedmatrix.com/projects/core/documentation/howto/cred.html

> As for 
> AMP, this seems similar - the client uses callRemote() to execute remote 
> methods on the amp server.

And the server can use callRemote on a client's protocol object. 

I have a simple AMP chat example that demonstrates this:
http://ripton.net/hg/ampchat

-- 
David Ripton    dripton at ripton.net



From mailing_lists at evotex.ch  Mon Mar 31 10:28:09 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 31 Mar 2008 18:28:09 +0200
Subject: [Twisted-Python] win 32 reactor
Message-ID: <47F11119.3040501@evotex.ch>

Hello,

I need to use PyHook, a win32 lib allowing global input monitoring 
(mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
win32com's PumpMessages() function. This is an event loop defined like so :

// @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
thread until a WM_QUIT message.
static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
{
    MSG msg;
    int rc;
    Py_BEGIN_ALLOW_THREADS
    while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
        TranslateMessage(&msg); // needed?
        DispatchMessage(&msg);
    }
    Py_END_ALLOW_THREADS
    if (rc==-1)
        return PyWin_SetAPIError("GetMessage");
    Py_INCREF(Py_None);
    return Py_None;
}

my question is ho can I make this work with twisted? Is there a way to 
use the supplied win32 reactors (there are three I think) or do I have 
to write one myself? Could someone please point me in the right direction?

Thanks,
Gabriel



From nathan.stocks at gmail.com  Mon Mar 31 10:32:25 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 31 Mar 2008 10:32:25 -0600
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
Message-ID: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>

Is there any noticeable difference between psycopg (version 2) or
pygresql (version 3.8.1) when used with twisted.enterprise to connect
to postgresql?

Pygresql hasn't been updated since June 2006, but maybe that's just
because it's stable (?) -- I haven't used it at all, ever.

Psycopg2 has had more recent releases, but I've experience some bugs
with it in (non-twisted) threaded code and the web site has been down
for weeks (months?), so I thought it wise to explore alternatives...

Or is there a better third alternative???

Also, we're considering turning on SSL client-certificate verification
on our postgresql installation -- does anyone know whether either of
the above support SSL client certificates?

Opinions?

~ Nathan



From andreas at kostyrka.org  Mon Mar 31 10:39:43 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 31 Mar 2008 18:39:43 +0200
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <47F11119.3040501@evotex.ch>
References: <47F11119.3040501@evotex.ch>
Message-ID: <1206981583.8299.21.camel@localhost>

This releases the GIL, so I guess it should be ok to call it in a
background thread from Python. Should be all that is needed.

Andreas

Am Montag, den 31.03.2008, 18:28 +0200 schrieb Gabriel Rossetti:
> Hello,
> 
> I need to use PyHook, a win32 lib allowing global input monitoring 
> (mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
> win32com's PumpMessages() function. This is an event loop defined like so :
> 
> // @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
> thread until a WM_QUIT message.
> static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
> {
>     MSG msg;
>     int rc;
>     Py_BEGIN_ALLOW_THREADS
>     while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>         TranslateMessage(&msg); // needed?
>         DispatchMessage(&msg);
>     }
>     Py_END_ALLOW_THREADS
>     if (rc==-1)
>         return PyWin_SetAPIError("GetMessage");
>     Py_INCREF(Py_None);
>     return Py_None;
> }
> 
> my question is ho can I make this work with twisted? Is there a way to 
> use the supplied win32 reactors (there are three I think) or do I have 
> to write one myself? Could someone please point me in the right direction?
> 
> Thanks,
> Gabriel
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080331/a761b60a/attachment.sig>

From exarkun at divmod.com  Mon Mar 31 10:55:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 11:55:42 -0500
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <47F11119.3040501@evotex.ch>
Message-ID: <20080331165542.6859.849658278.divmod.quotient.24782@ohm>

On Mon, 31 Mar 2008 18:28:09 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I need to use PyHook, a win32 lib allowing global input monitoring (mouse, 
>keyboard, etc). It uses the PyWin32 extentions, in particular win32com's 
>PumpMessages() function. This is an event loop defined like so :
>
>// @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
>thread until a WM_QUIT message.
>static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
>{
>    MSG msg;
>    int rc;
>    Py_BEGIN_ALLOW_THREADS
>    while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>        TranslateMessage(&msg); // needed?
>        DispatchMessage(&msg);
>    }
>    Py_END_ALLOW_THREADS
>    if (rc==-1)
>        return PyWin_SetAPIError("GetMessage");
>    Py_INCREF(Py_None);
>    return Py_None;
>}
>
>my question is ho can I make this work with twisted? Is there a way to use 
>the supplied win32 reactors (there are three I think) or do I have to write 
>one myself? Could someone please point me in the right direction?

The three reactors you're probably referring to are selectreactor, win32er,
and IOCP reactor.  Of these, only the latter two do anything particular to
Windows (the first just uses select(2), which Windows sort of has).

win32er is basically a loop around MsgWaitForMultipleObjects.  IOCP reactor
is basically a loop around GetQueuedCompletionStatus.  One way to look at
your question is to consider how GetMessage/TranslateMessage/DispatchMessage
interact with MWFMO and GQCS.  This is basically a Windows API question, so
I can't answer it, since I know very little about Windows APIs.

Jean-Paul



From db3l.net at gmail.com  Mon Mar 31 10:57:05 2008
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 31 Mar 2008 12:57:05 -0400
Subject: [Twisted-Python] Re: Deferred Network requests
References: <BAY114-DAV83550CBF049159CE316ADBEF80@phx.gbl>
	<47F0CB8F.9090209@imperial.ac.uk>
Message-ID: <m2k5jiomqm.fsf@valheru.db3l.homeip.net>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

> Perspective broker (pb) would work, provided the values you are
> passing round are plain python types e.g. int, str, list, dict, tuple.

Lest anyone think this is a hard limitation, PB also works fine with
custom class instances, as long as you appropriately register them for
the jelly/unjelly operation.

-- David




From mailing_lists at evotex.ch  Mon Mar 31 11:02:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 31 Mar 2008 19:02:12 +0200
Subject: [Twisted-Python] win 32 reactor
In-Reply-To: <1206981583.8299.21.camel@localhost>
References: <47F11119.3040501@evotex.ch> <1206981583.8299.21.camel@localhost>
Message-ID: <47F11914.8050106@evotex.ch>

Andreas Kostyrka wrote:
> This releases the GIL, so I guess it should be ok to call it in a
> background thread from Python. Should be all that is needed.
>
> Andreas
>   
Ok, thanks Andreas, I'll try that.
Gabriel
> Am Montag, den 31.03.2008, 18:28 +0200 schrieb Gabriel Rossetti:
>   
>> Hello,
>>
>> I need to use PyHook, a win32 lib allowing global input monitoring 
>> (mouse, keyboard, etc). It uses the PyWin32 extentions, in particular 
>> win32com's PumpMessages() function. This is an event loop defined like so :
>>
>> // @pymethod |pythoncom|PumpMessages|Pumps all messages for the current 
>> thread until a WM_QUIT message.
>> static PyObject *pythoncom_PumpMessages(PyObject *self, PyObject *args)
>> {
>>     MSG msg;
>>     int rc;
>>     Py_BEGIN_ALLOW_THREADS
>>     while ((rc=GetMessage(&msg, 0, 0, 0))==1) {
>>         TranslateMessage(&msg); // needed?
>>         DispatchMessage(&msg);
>>     }
>>     Py_END_ALLOW_THREADS
>>     if (rc==-1)
>>         return PyWin_SetAPIError("GetMessage");
>>     Py_INCREF(Py_None);
>>     return Py_None;
>> }
>>
>> my question is ho can I make this work with twisted? Is there a way to 
>> use the supplied win32 reactors (there are three I think) or do I have 
>> to write one myself? Could someone please point me in the right direction?
>>
>> Thanks,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     




From phil at bubblehouse.org  Mon Mar 31 12:11:20 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Mar 2008 14:11:20 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
Message-ID: <31548118-BB5F-4CD4-8921-077D26DD5F6D@bubblehouse.org>

On Mar 31, 2008, at 12:32 PM, Nathan wrote:
> Is there any noticeable difference between psycopg (version 2) or
> pygresql (version 3.8.1) when used with twisted.enterprise to connect
> to postgresql?
>
> Pygresql hasn't been updated since June 2006, but maybe that's just
> because it's stable (?) -- I haven't used it at all, ever.
>
> Psycopg2 has had more recent releases, but I've experience some bugs
> with it in (non-twisted) threaded code and the web site has been down
> for weeks (months?), so I thought it wise to explore alternatives...
>
> Or is there a better third alternative???

I used both recently with adbapi, and everything seemed fine. I  
remember both of them missing some features that I was used to with  
MySQLdb, like customizable cursor classes and so forth, but nothing  
that was a deal-breaker.

I never ran this in production, but I did run stress tests with both  
these drivers against a copy of a production database. There were no  
driver-related issues, just syntax errors (the web app was originally  
written for MySQL, and there was a small amount of non-standard SQL).

I have run into threading issues with pretty much every driver, so I  
wouldn't discount psycopg2 because of that...

> Also, we're considering turning on SSL client-certificate verification
> on our postgresql installation -- does anyone know whether either of
> the above support SSL client certificates?

I know pygresql doesn't support this, but I'm not sure about psycopg2.

-phil



From sipickles at hotmail.com  Mon Mar 31 12:59:46 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 31 Mar 2008 19:59:46 +0100
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
Message-ID: <BAY114-DAV3606616A45867CF0DD32ABEFA0@phx.gbl>

Hi,

I expected reactor.connectTCP to return a deferred. That would have been 
nice, since callbacks would have handled the outcome.

So how to I handle failure with it?

I tried:

from twisted.internet.error import ConnectionRefusedError


        print "Connecting..."
        try:
            reactor.connectTCP(self.server, self.port, self.f)
        except ConnectionRefusedError(reason):
            self.Connect_Failure()
            return
        self.Connect_Success()

No good. What am I missing?

Thank you!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Mon Mar 31 13:14:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 31 Mar 2008 14:14:06 -0500
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
In-Reply-To: <BAY114-DAV3606616A45867CF0DD32ABEFA0@phx.gbl>
Message-ID: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>

On Mon, 31 Mar 2008 19:59:46 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I expected reactor.connectTCP to return a deferred. That would have been 
>nice, since callbacks would have handled the outcome.
>
>So how to I handle failure with it?

ClientFactory.clientConnectionFailed will be called if the connection
attempt fails for some reason.

Jean-Paul



From james at mansionfamily.plus.com  Mon Mar 31 16:15:46 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Mon, 31 Mar 2008 23:15:46 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
Message-ID: <47F16292.8060705@mansionfamily.plus.com>

glyph at divmod.com wrote:
> On 01:39 pm, itamar at itamarst.org wrote:
>>
>> On Fri, 2008-03-28 at 06:23 +0000, James Mansion wrote:
>>> Shouldn't broken Win32 implementations be 'retired'?
>
> These implementations aren't "broken", so much as "limited".
>
Well, if they don't honour what the documentation says, then they seem 
broken
to me, and the documentation doesn't say you might get an unexpected
64 connection limit. No matter.
> Please feel free to contribute patches which reduce these limitations.
>> The old I/O Completion Ports reactor (which should be most scalable
>> Win32 reactor) was somewhat buggy. Twisted 8.0, released this week, has
>> a complete rewrite that hopefully is a lot better.
>
> It still doesn't support SSL, though:
>
>    http://twistedmatrix.com/trac/ticket/593
>
Need something patterned very much like Len's stuff
here http://www.lenholgate.com/archives/000456.html I guess.
> and maybe some other features too (I don't have a Windows handy or the 
> time required to read the code to check - this really ought to be 
> better-documented).
>
> The select reactor is also convenient for testing on Windows, because 
> it's the basis of at least one GUI reactor (GTK+) which should also 
> support Win32.
>
> Your suggestion for handle buckets in the win32eventreactor is one 
> which has been suggested before and sounds good to me.  Nobody has 
> bothered to implement it yet :).  However, even in its absence, I 
> don't believe we'll be completely dropping win32eventreactor because 
> it is useful for integrating with programs that do win32 drawing, even 
> if iocpreactor has higher performance and is more scalable.
Well, you need a daemon worker thread to call GetQueuedCompletionStatus(Ex)
and enqueue the results to the main thread, but that daemon worker doesn't
even need to have the full support of the C library multithreading so 
long as it just
swizzles pointers and calls raw API routines. Its normally more of a 
gotcha that
you might try to submit IO from a pool thread that might reasonably be 
terminated
before the IO completes. Why do you need an event reactor to support win32
applications, except to call MsgWait... rather than 
GetQueuedCompletionStatus?

On a similar sort of topic - is there a reason to have lots of 
implementations
for POSIX, rather than use libevent or libev?

James




From nathan.stocks at gmail.com  Mon Mar 31 16:45:04 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 31 Mar 2008 16:45:04 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
Message-ID: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>

Is there a way to do the opposite of task.coiterate?  I'm using pyglet
for my UI, which was working great until I upgraded from pyglet 1.0 to
1.1.  Now for some reason, the pyglet performance tanked.  Since I'm
only using twisted to send AMP messages very rarely (on the order of
one every few seconds), it seems like I could try to work around the
problem by giving pyglet back control of the main loop and
occasionally giving twisted some time to breath (occasionally like
every 50ms or something).  Can that be done?

Here's what I'm doing _now_ that technically works, but pyglet 1.1 is
really choking on:

> class MyWindow(pyglet.window.Window):
>  def run(self):
>     while not self.has_exit:
>        do_some_stuff_like_dispatching_updating_and_drawing()
>        yield 1
>
> my_window = MyWindow()
> task.coiterate(my_window.run())
> reactor.run()

By the way, the preferred method for the runloop on pyglet 1.1 is to
use a builtin one like so:

> window = pyglet.window.Window()
>
> @window.event
> def on_draw():
>    window.clear()
>    do_drawing_stuff()
>
> pyglet.app.run()

So if twisted can stand giving up it's run loop, I could periodically
call it from that "on_draw()" method.

~ Nathan



From glyph at divmod.com  Mon Mar 31 19:21:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 01:21:37 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F16292.8060705@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
Message-ID: <20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>

On 31 Mar, 10:15 pm, james at mansionfamily.plus.com wrote:
>glyph at divmod.com wrote:

>>These implementations aren't "broken", so much as "limited".
>Well, if they don't honour what the documentation says, then they seem 
>broken
>to me, and the documentation doesn't say you might get an unexpected
>64 connection limit. No matter.

This is actually a problem for every reactor; handling of the connection 
limit (and there is a connection limit everywhere, even if it's 65535) 
is poorly documented and poorly handled.

Patches which rectify this situation for any reactor, either from the 
perspective of docs or code, would of course be appreciated.
>>It still doesn't support SSL, though:
>>
>>    http://twistedmatrix.com/trac/ticket/593
>Need something patterned very much like Len's stuff
>here http://www.lenholgate.com/archives/000456.html I guess.

The real solution to this problem is really:

  * Add an SSH IProtocol implementation that provides ITransport, rather 
than building it into the reactor
  * Add an API to ITransport to switch protocols, so that the protocol 
doesn't need to support protocol switching

The BIO stuff mentioned on that URL is vaguely correct, but the 
interesting stuff is exposing it to Python.  Now that JP Calderone has 
taken over maintenance of PyOpenSSL, we might actually have a chance to 
get that done :).

Once you've got an SSL connection that is getting bytes from and 
delivering bytes to a transport, you don't need to care about any of the 
win32-specific aspects of that post; you just do the I/O using whatever 
platform I/O facility you want and the crypto happens completely 
disconnected from this socket.  iocpreactor already implements enough of 
this to work.

Again, if you want to see this happen: write code which does these 
things and contribute it.
>>Your suggestion for handle buckets in the win32eventreactor is one 
>>which has been suggested before and sounds good to me.  Nobody has 
>>bothered to implement it yet :).  However, even in its absence, I 
>>don't believe we'll be completely dropping win32eventreactor because 
>>it is useful for integrating with programs that do win32 drawing, even 
>>if iocpreactor has higher performance and is more scalable.
>Well, you need a daemon worker thread to call 
>GetQueuedCompletionStatus(Ex)

(... blah blah win32 API stuff that I don't understand ...)
>Why do you need an event reactor to support win32 applications, except 
>to call MsgWait... rather than GetQueuedCompletionStatus?

My answer here, if I even have one, would be horribly vague: something 
about GDI+, or DirectX, or something.  Maybe there's no good reason, I 
don't know.  This level of specificity is probably best served by the 
issue tracker; file a ticket.  And, if you're going to file a ticket, be 
prepared to actually follow up with an implementation.  While we want to 
maintain support for Windows, the level of energy for doing really 
interesting Windows-specific stuff in Twisted is, in a word, "low".

One thing you might want to know before you file that ticket is that 
*if* there's a reason for the way things are now, it's because in the 
Twisted idiom we always make sure GUI stuff and network stuff is 
happening in the same thread.  If one of the approaches that you 
mentioned requires a dedicated "network" application thread, then that's 
probably why we aren't doing it.
>On a similar sort of topic - is there a reason to have lots of 
>implementations for POSIX, rather than use libevent or libev?

There is more than one answer to this question.  Maybe someone will be 
helpful and turn some of these answers into a FAQ on the wiki:

1) Twisted predates libevent by a few years and libev by many years. 
One might instead ask why libevent didn't help us develop a C reactor, 
rather than writing a whole new library.

2) There's a libevent reactor in a branch.  Contribute patches to deal 
with the outstanding review comments: 
http://twistedmatrix.com/trac/ticket/1930

3) Twisted runs on many platforms, so it supports the lowest common 
denominator; that is not libevent, it is Python's "select" module.

4) Neither libevent nor libev (to my knowledge) integrates with any GUI 
event loops.

5) Despite many valid rationalizations for its existence, the code in 
Twisted was developed organically over many years.  The stuff you'll 
find here is the stuff that people thought was interesting and had time 
to work on.  Strategically standardizing on a single low-level 
multiplexing mechanism is not something that is particularly fun or 
rewarding, especially when getting rid of the old code removes value for 
some users.  (Not everyone already has libevent installed.)



From glyph at divmod.com  Mon Mar 31 20:17:42 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 02:17:42 -0000
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
Message-ID: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>


On 31 Mar, 10:45 pm, nathan.stocks at gmail.com wrote:
>Is there a way to do the opposite of task.coiterate?  I'm using pyglet
>for my UI, which was working great until I upgraded from pyglet 1.0 to
>1.1.  Now for some reason, the pyglet performance tanked.

Twisted's job is to run the main loop; it's best just to let it do that. 
If Pyglet slowed down, it would be best to examine what's gone wrong 
with Pyglet and simply submit a fix for that.

We spoke to Richard Jones about Pyglet/Twisted integration at Chris 
Armstrong's excellent gaming+twisted openspace at PyCon, and I believe 
that some future version of Pyglet will include Twisted integration.  Of 
course, this is just a plan right now, not code, so perhaps your time 
would be better spent contributing this feature to Pyglet, rather than 
turning Twisted inside-out :).



From sergey at optimaltec.com  Mon Mar 31 21:03:18 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Mon, 31 Mar 2008 23:03:18 -0400
Subject: [Twisted-Python] Twisted 8.0.1 for Python 2.5 for Windows is
	missing Zope
Message-ID: <fss8lj$uvs$1@ger.gmane.org>

Hi,

I'm sorry if I'm posting to the wrong list. I tried upgrading Twisted
from 2.5.0 to 8.0.1 on Windows with Python 2.5.2, but it doesn't work
due to missing dependency: zope.interface (I'm trying to run Buildbot on
it, if that matters). Upon checking into this 2.5.0 installer for
Windows had Zope modules included, but 8.0.1 doesn't. I also can't find
relatively recent pre-built zope.interface for Windows, and don't have
Visual Studio 2003 installed to build from source, to check if
installing zope.interface would fix the problem.
Is it possible to include relevant Zope modules back into Windows installer?
Thank you!

Sergey.




From drew.smathers at gmail.com  Mon Mar 31 22:18:57 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 1 Apr 2008 00:18:57 -0400
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
Message-ID: <368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:17 PM,  <glyph at divmod.com> wrote:
>
>  On 31 Mar, 10:45 pm, nathan.stocks at gmail.com wrote:
>  >Is there a way to do the opposite of task.coiterate?  I'm using pyglet
>  >for my UI, which was working great until I upgraded from pyglet 1.0 to
>  >1.1.  Now for some reason, the pyglet performance tanked.
>
>  Twisted's job is to run the main loop; it's best just to let it do that.
>  If Pyglet slowed down, it would be best to examine what's gone wrong
>  with Pyglet and simply submit a fix for that.
>

Yeah, I've experienced some performance issues with pyglet's
app.runtime (maybe Linux-specific or something).  Given the time, I'll
submit a meaningful bug report concerning this.  Regarding integration
with Twisted, though, I think the best thing to do (for now) is to
just ignore pyglet.app.runtime and write a pump function, roughly:

def pump():
    dt = clock.tick(True) # polling tick
    w.clear()
    w.dispatch_events()
    ...
    w.flip()
    if w.has_exit and reactor.running:
        reactor.stop()

Be sure to call clock.tick(True) - since clock.tick will otherwise
block.  The next thing to do is customize clock where appropriate -
that is, to used Twisted's scheduling functions.  Coincidentally, I
did this about 45 minutes ago for a project I'm working on:

http://hg.enterthefoo.com/roboto/file/db931f29b98e/roboto/clock.py

Beware - the above is half-baked and written under the influence of
Hobgoblin Dark English Ale.

Finally, you need schedule the pump function.  To do it as fast as possible:

    from twisted.internet import task
    gameLoop = task.LoopingCall(pump)
    gameLoop.start(0., True)
    reactor.run()

Or with a set framerate:
   ...
   gameLoop.start(1/60., True)

Cheers,

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From james at mansionfamily.plus.com  Mon Mar 31 23:37:42 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Tue, 01 Apr 2008 06:37:42 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
Message-ID: <47F1CA26.3010207@mansionfamily.plus.com>

glyph at divmod.com wrote:
> Patches which rectify this situation for any reactor, either from the 
> perspective of docs or code, would of course be appreciated.
There's no point giving a commitment to doing more than discussing 
implementation approaches. With the
best will in the world its unlikely to get to the top of my pile and 
there's no point living a fantasy.

I do need to understand how limited the current implementation is though.

> And, if you're going to file a ticket, be prepared to actually follow 
> up with an implementation.
Hmm - that's a crap attitude unless you want to deter any concensus 
formation during design.
I know its quite common in open source. :-(
>   While we want to maintain support for Windows, the level of energy 
> for doing really interesting Windows-specific stuff in Twisted is, in 
> a word, "low".
>
> One thing you might want to know before you file that ticket is that 
> *if* there's a reason for the way things are now, it's because in the 
> Twisted idiom we always make sure GUI stuff and network stuff is 
> happening in the same thread.  If one of the approaches that you 
> mentioned requires a dedicated "network" application thread, then 
> that's probably why we aren't doing it.
I appreciate that a reactive system will generally want to run its 
completion callbacks in the main
thread, but that shouldn't preclude restarting incomplete writes or 
doing low-level protocol
stuff in a thread.
>> On a similar sort of topic - is there a reason to have lots of 
>> implementations for POSIX, rather than use libevent or libev?
>
> There is more than one answer to this question.  Maybe someone will be 
> helpful and turn some of these answers into a FAQ on the wiki:
>
> 1) Twisted predates libevent by a few years and libev by many years. 
> One might instead ask why libevent didn't help us develop a C reactor, 
> rather than writing a whole new library.
I've no idea, but if you have a separation of a support library with an 
abstraction that one might
expose with SWIG or similar and reuse directly from C(++) - then this is 
well not actually apparent
on the web site. I think it would be a good idea though,and its more 
likely that I'd be able to
contribute something of this sort (eventually) than anything 
Python-specific.

You have a nice model and one that is much more portable than the common 
reactor idiom.

> 5) Despite many valid rationalizations for its existence, the code in 
> Twisted was developed organically over many years.  The stuff you'll 
> find here is the stuff that people thought was interesting and had 
> time to work on.  Strategically standardizing on a single low-level 
> multiplexing mechanism is not something that is particularly fun or 
> rewarding, especially when getting rid of the old code removes value 
> for some users.  (Not everyone already has libevent installed.)
The curse of volunteer-ware, I guess.  Understandable, but a shame in 
some ways.




From nmweizi at gmail.com  Mon Mar 31 23:45:12 2008
From: nmweizi at gmail.com (weizi)
Date: Tue, 1 Apr 2008 13:45:12 +0800
Subject: =?gb2312?B?tPC4tDogW1R3aXN0ZWQtUHl0aG9uXSBUd2lzdGVkIDguMC4xIGZvcg==?=
	=?gb2312?B?IFB5dGhvbiAyLjUgZm9yIFdpbmRvd3MgaXMJbWlzc2luZyBab3Bl?=
In-Reply-To: <fss8lj$uvs$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org>
Message-ID: <018601c893bb$9198b250$b4ca16f0$@com>

Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents



> -----邮件原件-----
> 发件人: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] 代表 Sergey A.
> Lipnevich
> 发送时间: 2008年4月1日 11:03
> 收件人: twisted-python at twistedmatrix.com
> 主题: [Twisted-Python] Twisted 8.0.1 for Python 2.5 for Windows is missing
> Zope
> 
> Hi,
> 
> I'm sorry if I'm posting to the wrong list. I tried upgrading Twisted from
2.5.0
> to 8.0.1 on Windows with Python 2.5.2, but it doesn't work due to missing
> dependency: zope.interface (I'm trying to run Buildbot on it, if that
matters).
> Upon checking into this 2.5.0 installer for Windows had Zope modules
> included, but 8.0.1 doesn't. I also can't find relatively recent pre-built
> zope.interface for Windows, and don't have Visual Studio 2003 installed to
> build from source, to check if installing zope.interface would fix the
problem.
> Is it possible to include relevant Zope modules back into Windows
installer?
> Thank you!
> 
> Sergey.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




