From bostik at stinghorn.com  Wed Dec  1 01:59:17 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Wed, 1 Dec 2004 08:59:17 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <1101829939.10757.30.camel@sheriffpony>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
	<20041130141815.GI7549@borg.intra.stinghorn.com>
	<1101829939.10757.30.camel@sheriffpony>
Message-ID: <20041201065917.GJ7549@borg.intra.stinghorn.com>

On Tue, 30 Nov 2004, Itamar Shtull-Trauring wrote:
> On Tue, 2004-11-30 at 16:18 +0200, Mika Bostrom wrote:
> 
> >   However, since my intention was to multiplex outgoing mails to
> > different scanning engines, just forwarding blindly is not exactly
> > productive. Let's assume I have 5 or 6 different scanning engines
> > running in localhost, all of them accepting inbound mail via SMTP in
> > irregular ports. smtp.sendmail() uses the standard port, so I came up
> > with this:
> 
> Could you add this patch to http://twistedmatrix.com/bugs/?

  Certainly, and I intend to. I just want to test it in rather
heterogenic use cases first, to be sure that it does in fact do what I
want it to do.

-- 
 Mika Bostr?m         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041201/3c44a314/attachment.pgp 

From patrick.mezard at ifrance.com  Wed Dec  1 08:08:28 2004
From: patrick.mezard at ifrance.com (Patrick =?utf-8?b?TcOpemFyZA==?=)
Date: Wed, 1 Dec 2004 13:08:28 +0000 (UTC)
Subject: [Twisted-Python] Remarks about the TAP to NT service tools
	(moonfallen sandbox)
Message-ID: <loom.20041201T133148-982@post.gmane.org>

Hello,
I am trying to bundle a Twisted server based on a .TAC file into an NT service. 
I finally succeeded with the distutils extension available in moonfallen 
sandbox, here are the problems I met while doing it:

1- It is said in the readme.txt that win32all is required for the extension. 
It might be a bit misleading because the ActivePython version I use has it, 
but failed to generate the distutils package. What is actually needed is a 
win32all package version suitable for py2exe. And for the py2exe 0.5.4 I use, 
it means overwriting win32all with the build 206 for instance.

2- The readme says: "You can also use all the setup options that py2exe 
allows, such as includes and data_files.". I spend some times figuring why 
the 'typelibs' options I was passing were not taken into account. Again, 
this is really a distutils issue, but I guess there are others distutils 
newbies like me around. I was passing the 'typelibs' option to 'py2exe' as 
said in py2exe wiki, instead of 'twistedservice'.
#-------
from distutils.core import setup
import ntsvc

setup(	appconfig='my.tac',
		options = {
			"twistedservice": {\
	"typelibs": [('{F5078F18-C551-11D3-89B9-0000F81FE221}', 0, 4, 0)]}
			})
#-------
works as expected.

I am aware the extension is experimental and unsupported but adding a line 
or two about the pitfalls above (which are purely distutils/py2exe related) 
into the readme may be useful for newcomers.

Besides, I actually need to specify the user account the service will use. 
I will send you patches if I managed to implement this, but I guess I need 
to be a bit more knowledgeable about the distutils and win32all service 
wrapper frameworks.

Thank you for the extension anyway, it's definitely useful and usable.

Patrick M?zard






From njp at njp.us  Wed Dec  1 13:12:18 2004
From: njp at njp.us (Norm Petterson)
Date: Wed, 1 Dec 2004 13:12:18 -0500
Subject: [Twisted-Python] Controlling twisted logging
Message-ID: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>

Hello,

Having just spent some time trying to "turn off" twisted logging via
log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted app
that initially logs to an actual file, it seems that
log.startLogging(log.NullFile()) only works as expected if no previous
startLogging call using a valid file object has been made. Otherwise,
messages continue to be logged.

Is this observation correct, or am I overlooking some way to enable logging
to a logfile and subsequently disable it? In my above experiments,
log.discardLogs() seemed to have no effect either once valid file logging
had been initiated with log.startLogging.

Win2K, Python 2.3.3, Twisted 1.3.0

Thanks for any info,

Norm Petterson




From corydodt at twistedmatrix.com  Wed Dec  1 13:39:31 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 01 Dec 2004 10:39:31 -0800
Subject: [Twisted-Python] Remarks about the TAP to NT service
	tools	(moonfallen sandbox)
In-Reply-To: <loom.20041201T133148-982@post.gmane.org>
References: <loom.20041201T133148-982@post.gmane.org>
Message-ID: <41AE0FE3.3030303@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Good feedback.  I have made the suggested changes to README.txt.  You'll note
that in TODO.txt one of the things the options should be able to grok are
usernames.

C

Patrick M?zard wrote:
| Hello,
| [...]
| I am aware the extension is experimental and unsupported but adding a line
| or two about the pitfalls above (which are purely distutils/py2exe related)
| into the readme may be useful for newcomers.
|
| Besides, I actually need to specify the user account the service will use.
| I will send you patches if I managed to implement this, but I guess I need
| to be a bit more knowledgeable about the distutils and win32all service
| wrapper frameworks.
|
| Thank you for the extension anyway, it's definitely useful and usable.
|
| Patrick M?zard
|
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBrg/j3A5SrXAiHQcRAuV5AKCjgQK+8ZCYhpb/2Xac+iUMXOr42QCgnAE2
lnkvwgsN6dbJVcLOHG2fvMI=
=77r8
-----END PGP SIGNATURE-----



From teratorn at twistedmatrix.com  Wed Dec  1 21:10:23 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 01 Dec 2004 20:10:23 -0600
Subject: [Twisted-Python] Controlling twisted logging
In-Reply-To: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
References: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
Message-ID: <opsicyzljhy3d107@localhost.localdomain>

Norm Petterson wrote:

> Hello,
>
> Having just spent some time trying to "turn off" twisted logging via
> log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted  
> app
> that initially logs to an actual file, it seems that
> log.startLogging(log.NullFile()) only works as expected if no previous
> startLogging call using a valid file object has been made. Otherwise,
> messages continue to be logged.

It seems the best documentation is the source!

startLogging will create a FileLogObserver that wraps the passed in
file-object. The "emit"
method of that FileLogObserver gets added to the *list* of observers.

So startLogging does not stop things being logged to files that you passed
in
on previous calls to startLogging.

If you want to be able to start logging on a given file then you need to
be more explicit
about what objects are getting created. For example:
(untested)

flo = FileLogObserver(file)
startLoggingWithObserver(flo.emit)

then later you can do, e.g.

flo.stop()

then later

flo.start()


> Is this observation correct, or am I overlooking some way to enable  
> logging
> to a logfile and subsequently disable it?

Looks like correct behavior to me.

> In my above experiments,
> log.discardLogs() seemed to have no effect either once valid file logging
> had been initiated with log.startLogging.

Yeah, have a glace at the implementation of discardLogs()

-Eric






From teratorn at twistedmatrix.com  Wed Dec  1 23:14:55 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 01 Dec 2004 22:14:55 -0600
Subject: [Twisted-Python] Controlling twisted logging
In-Reply-To: <opsicyzljhy3d107@localhost.localdomain>
References: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
	<opsicyzljhy3d107@localhost.localdomain>
Message-ID: <opsic4q5wjy3d107@localhost.localdomain>

Eric Mangold wrote:

> Norm Petterson wrote:
>
>> Hello,
>>
>> Having just spent some time trying to "turn off" twisted logging via
>> log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted  
>> app
>> that initially logs to an actual file, it seems that
>> log.startLogging(log.NullFile()) only works as expected if no previous
>> startLogging call using a valid file object has been made. Otherwise,
>> messages continue to be logged.
>
> It seems the best documentation is the source!
>
> startLogging will create a FileLogObserver that wraps the passed in
> file-object. The "emit"
> method of that FileLogObserver gets added to the *list* of observers.
>
> So startLogging does not stop things being logged to files that you  
> passed
> in
> on previous calls to startLogging.
>
> If you want to be able to start logging on a given file then you need to

Err, I meant to say *stop* logging on a given file...

> be more explicit
> about what objects are getting created. For example:
> (untested)
>
> flo = FileLogObserver(file)
> startLoggingWithObserver(flo.emit)
>
> then later you can do, e.g.
>
> flo.stop()
>
> then later
>
> flo.start()
>
>
>> Is this observation correct, or am I overlooking some way to enable  
>> logging
>> to a logfile and subsequently disable it?
>
> Looks like correct behavior to me.
>
>> In my above experiments,
>> log.discardLogs() seemed to have no effect either once valid file  
>> logging
>> had been initiated with log.startLogging.
>
> Yeah, have a glace at the implementation of discardLogs()
>
> -Eric






From hoxide_dirac at yahoo.com.cn  Thu Dec  2 02:19:29 2004
From: hoxide_dirac at yahoo.com.cn (Hoxide Ma)
Date: Thu, 2 Dec 2004 15:19:29 +0800 (CST)
Subject: [Twisted-Python] a byte message frame in twisted 
Message-ID: <20041202071929.5932.qmail@web15707.mail.cnb.yahoo.com>

it just an test,  no any document.
http://wiki.woodpecker.org.cn/moin.cgi/Compass_20core
 
the project is developed by chinese. 
 



---------------------------------
Do You Yahoo!?
150??MP3????????????
???????????????????
1G??1000???????????
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041202/3f9901d1/attachment.htm 

From bruce at cubik.org  Thu Dec  2 13:54:42 2004
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 02 Dec 2004 11:54:42 -0700
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
Message-ID: <41AF64F2.8040908@cubik.org>

Hello everyone,

I've got an app that runs on Twisted 1.0.7rc1 and I'd like to get it 
running on something more current.  Should I be looking at 1.3.0 or is 
the trunk getting close to a 2.0 release?  How stable is the trunk?

One of the main fixes that I'm interested in is some of the performance 
improvements to the data buffering as a result of some issues that I had 
  last year.

Also, what is the recommended reactor these days for a system that 
receives a good bit of load, both from the external world and from 
within a cluster of Twisted-using systems that communicate over PB? (We 
use Linux.)

Have there been any major API changes that would break code, especially 
stuff that used PB?  (Does cBanana still work? It apparently isn't 
automatically used any longer...)

Long ago, I had some woven-using code, but then that was deprecated in 
favor of nevow.  What's the current recommendation in this area?

On the other hand, it looks like there are lots of cool additions to 
Twisted, like the waitForDeferred stuff, that would greatly simplify 
some of our code.

I didn't see any obvious place to look for most of this info and the 
changelog isn't really the right level of granularity, so any help would 
be much appreciated.

  - Bruce




From itamar at itamarst.org  Thu Dec  2 18:21:38 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Dec 2004 18:21:38 -0500
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
In-Reply-To: <41AF64F2.8040908@cubik.org>
References: <41AF64F2.8040908@cubik.org>
Message-ID: <1102029698.24698.83.camel@sheriffpony>

On Thu, 2004-12-02 at 11:54 -0700, Bruce Mitchener wrote:

> I've got an app that runs on Twisted 1.0.7rc1 and I'd like to get it 
> running on something more current.  Should I be looking at 1.3.0 or is 
> the trunk getting close to a 2.0 release?  How stable is the trunk?

Trunk is pretty stable, but you'd have to do a manual copy of some sort
to install, setup.py may no longer work.

> One of the main fixes that I'm interested in is some of the performance 
> improvements to the data buffering as a result of some issues that I had 
>   last year.

That's 2.0 only, yeah.

> Also, what is the recommended reactor these days for a system that 
> receives a good bit of load, both from the external world and from 
> within a cluster of Twisted-using systems that communicate over PB? (We 
> use Linux.)

Still pollreactor.

> Have there been any major API changes that would break code, especially 
> stuff that used PB?  (Does cBanana still work? It apparently isn't 
> automatically used any longer...)

Probably not, but best to just try it and run. cBanana may have been
disabled for security reasons, I forget.

> Long ago, I had some woven-using code, but then that was deprecated in 
> favor of nevow.  What's the current recommendation in this area?

Ask on the twisted-web list, but it's still nevow.

> I didn't see any obvious place to look for most of this info and the 
> changelog isn't really the right level of granularity, so any help would 
> be much appreciated.

We certainly haven't added any major incompatible changes intentionally,
but that doesn't guarantee the software will work. Best to try and see.




From exarkun at divmod.com  Thu Dec  2 21:48:19 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 03 Dec 2004 02:48:19 GMT
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
In-Reply-To: <1102029698.24698.83.camel@sheriffpony>
Message-ID: <20041203024819.1203.1410496871.divmod.quotient.914@ohm>

On Thu, 02 Dec 2004 18:21:38 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2004-12-02 at 11:54 -0700, Bruce Mitchener wrote:
> 
> [snip]
> 
> > Have there been any major API changes that would break code, especially 
> > stuff that used PB?  (Does cBanana still work? It apparently isn't 
> > automatically used any longer...)
> 
> Probably not, but best to just try it and run. cBanana may have been
> disabled for security reasons, I forget.
> 

  Yes.  I found a memory management problem in it.  The bug has been fixed, but I still didn't trust the module enough to leave it enabled by default.  It can still be enabled manually, of course.  It should probably be rewritten in Pyrex, or something.

  Jp



From prabaharpython at yahoo.co.in  Fri Dec  3 02:02:16 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Fri, 3 Dec 2004 07:02:16 +0000 (GMT)
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203024819.1203.1410496871.divmod.quotient.914@ohm>
Message-ID: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>

Dear All,
  
         I want to know the basic details regarding
twisted.
If anybody know regarding this topic "How to use
Twisted
in Python". Otherwise anybody have basic documentation
regarding Twisted concept Please mail me.  Because
this is urgent to me

by
Prabahar
           

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From nico at tekNico.net  Fri Dec  3 02:38:21 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 03 Dec 2004 08:38:21 +0100
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
Message-ID: <cop55d$a4c$1@sea.gmane.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

>   Yes.  I found a memory management problem in it.  The bug has been...

I don't know why, but all messages generated by Quotient do not word wrap,
neither in KNode nor in groups.google.com , making them hard to read
because of the horizontal scrolling needed. Could anybody look into it?
Thanks.

- -- 
Nicola Larosa - nico at tekNico.net

School is like starting life with a 12-year jail sentence in which
bad habits are the only curriculum truly learned. I teach school
and win awards doing it. I should know. -- John Taylor Gatto, 1991

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFBsBfwXv0hgDImBm4RAsb5AJ4hotHKhNWABHAMh3HiNe6NGJ9PFACdG5eM
pPEy9sdibNqe/pTNLSPf+5k=
=OdOR
-----END PGP SIGNATURE-----




From teratorn at twistedmatrix.com  Fri Dec  3 02:46:10 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 03 Dec 2004 01:46:10 -0600
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <opsie868nky3d107@localhost.localdomain>

praba mosas wrote:

> Dear All,
>         I want to know the basic details regarding
> twisted.
> If anybody know regarding this topic "How to use
> Twisted
> in Python". Otherwise anybody have basic documentation
> regarding Twisted concept Please mail me.  Because
> this is urgent to me
>
> by
> Prabahar

Please urgently read this:
http://www.catb.org/~esr/faqs/smart-questions.html

Also of note is the web site:
http://www.twistedmatrix.com

-Eric



From orbitz at ezabel.com  Fri Dec  3 08:30:55 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 03 Dec 2004 08:30:55 -0500
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <41B06A8F.1060203@ezabel.com>

The website has a lot of how-to's and examples, including a tutorial 
which gradually gets more complex. Trying reading those.


praba mosas wrote:

>Dear All,
>  
>         I want to know the basic details regarding
>twisted.
>If anybody know regarding this topic "How to use
>Twisted
>in Python". Otherwise anybody have basic documentation
>regarding Twisted concept Please mail me.  Because
>this is urgent to me
>
>by
>Prabahar
>           
>
>________________________________________________________________________
>Yahoo! India Matrimony: Find your life partner online
>Go to: http://yahoo.shaadi.com/india-matrimony
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From foom at fuhm.net  Fri Dec  3 11:29:09 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 3 Dec 2004 11:29:09 -0500
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
In-Reply-To: <cop55d$a4c$1@sea.gmane.org>
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
	<cop55d$a4c$1@sea.gmane.org>
Message-ID: <756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>

On Dec 3, 2004, at 2:38 AM, Nicola Larosa wrote:
> I don't know why, but all messages generated by Quotient do not word 
> wrap,
> neither in KNode nor in groups.google.com , making them hard to read
> because of the horizontal scrolling needed. Could anybody look into it?
> Thanks.

Yeah, it does look like Quotient is screwing up. It should be 
word-wrapping to 79 columns and using 
http://www.ietf.org/rfc/rfc2646.txt to format the text instead of just 
sending ultra-long lines of text.

James




From michael.mata at gaigen.net  Fri Dec  3 14:29:17 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Fri, 03 Dec 2004 11:29:17 -0800
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <41B0BE8D.9040106@gaigen.net>

praba mosas wrote:

>Dear All,
>  
>         I want to know the basic details regarding
>twisted.
>If anybody know regarding this topic "How to use
>Twisted
>in Python". Otherwise anybody have basic documentation
>regarding Twisted concept Please mail me.  Because
>this is urgent to me
>
>by
>Prabahar
>  
>

Have you looked at the manual and the API documentation?  I believe both 
are included in the default installation.



From foom at fuhm.net  Fri Dec  3 14:48:14 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 3 Dec 2004 14:48:14 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <45866870-4564-11D9-88DA-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-29 18:01:56.910000:
  Bugs opened: 2   Bugs closed: 3   Total open bugs: 314 (-1)
   Critical: 1 (+0)
   Urgent: 15 (-2)
   Bug: 120 (+0)
   Feature: 116 (+1)
   Wish: 62 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
Catch and log errors in half-close protocol callback codepaths  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue807 opened by itamarst

                     ==== Feature ====
[MAIL] Proposed patch to allow smtp.sendmail() to send mail to 
non-standard ports  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue806 opened by bostik

Bugs Closed
______________________
                     ==== Urgent ====
[CORE] IOCP reactor leaks memory  (4 months ago)
        http://www.twistedmatrix.com/bugs/issue655 opened by naz, closed 
by PenguinOfDoom

[CONCH] Conch client possibly not working  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue786 opened by jknight, 
closed by jknight

[TRIAL] trial inconsistently reporting ERROR's  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue796 opened by teratorn, 
closed by jknight




From steve at blighty.com  Fri Dec  3 19:08:32 2004
From: steve at blighty.com (Steve Atkins)
Date: Fri, 3 Dec 2004 16:08:32 -0800
Subject: [Twisted-Python] Installation problems
Message-ID: <20041204000832.GA18932@gp.word-to-the-wise.com>

I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.

The biggie is that I can't find any trace of installation instructions
(pre-requisites, installation instructions) anywhere. The tarball README
refers to INSTALL, and INSTALL doesn't exist.

I attempted a simple "python setup.py build" and the build bombs out
after a while with:

    running build_scripts
    error: file 'bin/manhole' does not exist

So... help a newbie out. What am I doing wrong?

Cheers,
  Steve



From orbitz at ezabel.com  Fri Dec  3 21:43:31 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 03 Dec 2004 21:43:31 -0500
Subject: [Twisted-Python] Installation problems
In-Reply-To: <20041204000832.GA18932@gp.word-to-the-wise.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>
Message-ID: <41B12453.7080704@ezabel.com>

You can either just untar the twisted to someplace like 
/opt/local/Twisted and add that dir to your PYTHONPATH everywhere, or 
use darwinports to install. If you choose darwinports the instance of 
python it installs is in /opt/local, and the default one is in /usr/bin 
or something so you'll have to do some fiddling to use the  python it 
installs by default.  I choose the PYTHONPATH way myself, I like to just 
be able to get the latest changes to twisted via subversion or what not 
and keep all of the documentation and files together.

I have not tried to use the setup file, never really found a need for it.

Hope this helps somewhat.

Steve Atkins wrote:

>I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>
>The biggie is that I can't find any trace of installation instructions
>(pre-requisites, installation instructions) anywhere. The tarball README
>refers to INSTALL, and INSTALL doesn't exist.
>
>I attempted a simple "python setup.py build" and the build bombs out
>after a while with:
>
>    running build_scripts
>    error: file 'bin/manhole' does not exist
>
>So... help a newbie out. What am I doing wrong?
>
>Cheers,
>  Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From andrea at cpushare.com  Sat Dec  4 12:10:19 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 4 Dec 2004 18:10:19 +0100
Subject: [Twisted-Python] keyword changed API
Message-ID: <20041204171019.GG32635@dualathlon.random>

This fixes a little runtime issue with the new python version:

--- ./python/htmlizer.py.~1~	2004-11-28 05:00:05.000000000 +0100
+++ ./python/htmlizer.py	2004-12-04 18:06:06.329802464 +0100
@@ -22,7 +22,7 @@ class TokenPrinter:
             type = "identifier"
             self.parameters = 1
         elif type == tokenize.NAME:
-             if keyword.kwdict.has_key(token):
+             if keyword.iskeyword(token):
                  type = 'keyword'
              else:
                  if self.parameters:

Not sure what's the right way to fix these things to retain backwards
compatibility (perhaps checking sys.version_info?).



From exarkun at divmod.com  Sat Dec  4 12:30:27 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 04 Dec 2004 17:30:27 GMT
Subject: [Twisted-Python] keyword changed API
In-Reply-To: <20041204171019.GG32635@dualathlon.random>
Message-ID: <20041204173027.1203.730989615.divmod.quotient.2028@ohm>

On Sat, 4 Dec 2004 18:10:19 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>This fixes a little runtime issue with the new python version:
> 
> --- ./python/htmlizer.py.~1~	2004-11-28 05:00:05.000000000 +0100
> +++ ./python/htmlizer.py	2004-12-04 18:06:06.329802464 +0100
> @@ -22,7 +22,7 @@ class TokenPrinter:
>              type = "identifier"
>              self.parameters = 1
>          elif type == tokenize.NAME:
> -             if keyword.kwdict.has_key(token):
> +             if keyword.iskeyword(token):
>                   type = 'keyword'
>               else:
>                   if self.parameters:
> 
> Not sure what's the right way to fix these things to retain backwards
> compatibility (perhaps checking sys.version_info?).

  keyword.iskeyword existed in Python 2.2.0, so there seem to be no backwards compatibility problems with just switching to that.

  Thanks.

  Jp



From chris.lyon at spritenote.co.uk  Sun Dec  5 15:34:26 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Sun, 05 Dec 2004 20:34:26 +0000
Subject: [Twisted-Python] Newbie Alert ! Installation problems.
Message-ID: <41B370D2.2020603@spritenote.co.uk>

I've written an app using medusa but know feel the wind is blowing in a 
twisted way. But I'm having trouble with installation.

Windows .... everything downloads and runs nicely.
However the finger demo finger06.py & finger07.py don't find the user 
name in the dict because the username is returned with /W appended on 
the front. Is this some strange characteristic of the windows finger 
client or something I havn't discovered yet?

Linux:= neither the gz or the bz2 uncompress successfully. both failing 
with a  complaint from Ark  . .. a not very helpful .. an error occured 
whilst extracting the file. Other files have worked successfully.

Things are extracted but upon running python setup.py install  I getthe 
rather cryptic
error: file 'bin/manhole' does not exist

So I'm a little bit stumped. Anyone any idea about which aspect of my 
personnal inabilities I'm demonstrating this time?



From steve at blighty.com  Sun Dec  5 17:02:23 2004
From: steve at blighty.com (Steve Atkins)
Date: Sun, 5 Dec 2004 14:02:23 -0800
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <41B12453.7080704@ezabel.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>
	<41B12453.7080704@ezabel.com>
Message-ID: <20041205220223.GA1515@gp.word-to-the-wise.com>

> Steve Atkins wrote:
> 
> >I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
> >
> >The biggie is that I can't find any trace of installation instructions
> >(pre-requisites, installation instructions) anywhere. The tarball README
> >refers to INSTALL, and INSTALL doesn't exist.
> >
> >I attempted a simple "python setup.py build" and the build bombs out
> >after a while with:
> >
> >   running build_scripts
> >   error: file 'bin/manhole' does not exist
> >
> >So... help a newbie out. What am I doing wrong?

It turns out that the SF download site seems to be giving corrupt
tarballs. There was a bunzip error that I missed in unpacking and
a few files were missing or corrupted.

Downloading a clean tarball from twistedmatrix solved everything.

Cheers,
  Steve



From chris.lyon at spritenote.co.uk  Mon Dec  6 06:49:08 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Mon, 06 Dec 2004 11:49:08 +0000
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <20041205220223.GA1515@gp.word-to-the-wise.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>	<41B12453.7080704@ezabel.com>
	<20041205220223.GA1515@gp.word-to-the-wise.com>
Message-ID: <41B44734.2090906@spritenote.co.uk>

Steve Atkins wrote:

>>Steve Atkins wrote:
>>
>>    
>>
>>>I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>>>
>>>The biggie is that I can't find any trace of installation instructions
>>>(pre-requisites, installation instructions) anywhere. The tarball README
>>>refers to INSTALL, and INSTALL doesn't exist.
>>>
>>>I attempted a simple "python setup.py build" and the build bombs out
>>>after a while with:
>>>
>>>  running build_scripts
>>>  error: file 'bin/manhole' does not exist
>>>
>>>So... help a newbie out. What am I doing wrong?
>>>      
>>>
>
>It turns out that the SF download site seems to be giving corrupt
>tarballs. There was a bunzip error that I missed in unpacking and
>a few files were missing or corrupted.
>
>Downloading a clean tarball from twistedmatrix solved everything.
>
>  
>
That's actually where I got them from :(



From chris.lyon at spritenote.co.uk  Mon Dec  6 07:32:07 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Mon, 06 Dec 2004 12:32:07 +0000
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <41B44734.2090906@spritenote.co.uk>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>	<41B12453.7080704@ezabel.com>	<20041205220223.GA1515@gp.word-to-the-wise.com>
	<41B44734.2090906@spritenote.co.uk>
Message-ID: <41B45147.2040100@spritenote.co.uk>

Chris Lyon wrote:

> Steve Atkins wrote:
>
>>> Steve Atkins wrote:
>>>
>>>   
>>>
>>>> I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>>>>
>>>> The biggie is that I can't find any trace of installation instructions
>>>> (pre-requisites, installation instructions) anywhere. The tarball 
>>>> README
>>>> refers to INSTALL, and INSTALL doesn't exist.
>>>>
>>>> I attempted a simple "python setup.py build" and the build bombs out
>>>> after a while with:
>>>>
>>>>  running build_scripts
>>>>  error: file 'bin/manhole' does not exist
>>>>
>>>> So... help a newbie out. What am I doing wrong?
>>>>     
>>>
>>
>> It turns out that the SF download site seems to be giving corrupt
>> tarballs. There was a bunzip error that I missed in unpacking and
>> a few files were missing or corrupted.
>>
>> Downloading a clean tarball from twistedmatrix solved everything.
>>
>>  
>>
> That's actually where I got them from :(
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
Aaah you mean the download directory , this works !  hey hey !



From slyphon at twistedmatrix.com  Mon Dec  6 21:01:12 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 6 Dec 2004 21:01:12 -0500
Subject: [Twisted-Python] An apology to the community (outstanding trial
	bugs)
Message-ID: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>

Hi everyone,

I know that there are several trial issues outstanding and that they're 
holding up the 2.0 release. I recently got a job working in Manhattan, 
and am still adjusting to the commute and the tasks that are assigned 
to me, so I haven't had the attention or energy to devote to twisted.

On a lighter note (and adding to the distraction) I also got engaged 
this weekend. :-)

I'm not quite sure when I'll have time to clear these issues up. I will 
try to work on them during the week and hopefully have them resolved by 
next week sometime.

I am terribly sorry to have put everyone in this position.

-Jonathan




From radeex at gmail.com  Tue Dec  7 07:31:56 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 7 Dec 2004 23:31:56 +1100
Subject: [Twisted-Python] Twisted's roundup instance
Message-ID: <60ed19d4041207043128091d3e@mail.gmail.com>

I just upgraded it to 0.7.9 from 0.6.6 (!), changed it from the bsddb
backend to the sqlite backend, and made it run a persistent server
that's proxied through twistedmatrix.com's twisted.web. All this at
the advice I got from Richard Jones (roundup author) at OSDC.com.au.

The official URL for the Twisted roundup is now
"http://twistedmatrix.com/bugs/". This URL has always existed as a
convenience, but the old canonical URL
(http://twistedmatrix.com/users/roundup.twistd/) is now just a
redirect to the nice new terse one. Note that
"http://twistedmatrix.com/bugs" (i.e., the same URL without a trailing
slash) is a bit off at the moment -- I'll try to figure out a way to
get that to not blow up soon.

I also got rid of "Critical" -- now the highest issue type is
"Urgent", which was all that was documented. I was sick of people
marking their pet bugs as "Critical" when it didn't actually mean
anything.

Hopefully I'll be getting around to fixing up some other issues we've
had with our tracker, later on. In the meantime, I'll be going
actually _using_ roundup and trying to mark some of those Urgent bugs
as resolved. :-)

Thanks, Richard, for chatting with me about Roundup at OSDC. Now
everyone should be a little happier ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dpplgngr at gmail.com  Tue Dec  7 20:12:34 2004
From: dpplgngr at gmail.com (Tony Pryor)
Date: Tue, 7 Dec 2004 20:12:34 -0500
Subject: [Twisted-Python] concurrent terminals and telnet
In-Reply-To: <27c0150b04120717115ae21310@mail.gmail.com>
References: <27c0150b04120717115ae21310@mail.gmail.com>
Message-ID: <27c0150b041207171238bfe572@mail.gmail.com>

hello,

has anyone tried using twisted python to spawn multiple concurrent
telnet client consoles? i've played around with spawning concurrent
telnet consoles in perl and feel like i'm getting snared by
idiosyncracy. otoh i may just be doing something stupid.

tony



From heikki at osafoundation.org  Tue Dec  7 20:46:52 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Tue, 07 Dec 2004 17:46:52 -0800
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
Message-ID: <41B65D0C.9080705@osafoundation.org>

A while back I integrated M2Crypto into Twisted, but the architecture 
was not deemed good then (it was adding more of the SSL cruft in tcp.py 
etc.).

James Knight pointed me to TLS Lite, which had achieved similar 
functionality by using ProtocolWrapper and WrappingFactory and all the 
code was outside of Twisted. (Thanks James!)

I've now got an implementation of M2Crypto + Twisted integration using 
the TLS Lite approach - no changes in Twisted required. (Client only for 
now and not yet fully cleaned up, but all the important pieces should be 
there.)

However, I've run into some problems and I am not sure if they are bugs 
in Twisted or if I am using these interfaces wrong. Maybe you can help.

The most interesting piece of the code is my TLSProtocolWrapper that 
inherits from ProtocolWrapper. See 
http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py

Now, this seems to works perfectly with the echoclient samples when the 
SSL connection has no errors.

When there is an error in the SSL connection, and I call 
connectionLost(), I end up with a traceback that feels like it might be 
a Twisted bug. Or if I am not allowed to call that, how do I signal that 
I want to break the connection? Here's the traceback:

Traceback (most recent call last):
   File "twisted_ssl/real.py", line 71, in main
     reactor.run()
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 123, in run
     self.mainLoop()
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 134, in mainLoop
     self.doIteration(t)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 529, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\log.py", line 65, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\log.py", line 52, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\context.py", line 43, in callWithContext
     return func(*args,**kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 552, in _doReadOrWrite
     selectable.connectionLost(f)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\tcp.py", line 452, in connectionLost
     Connection.connectionLost(self, reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\tcp.py", line 295, in connectionLost
     protocol.connectionLost(reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\M2Crypto\SSL\T
wistedProtocolWrapper.py", line 207, in connectionLost
     ProtocolWrapper.connectionLost(self, reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\protoc
ols\policies.py", line 88, in connectionLost
     self.factory.unregisterProtocol(self)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\protoc
ols\policies.py", line 127, in unregisterProtocol
     del self.protocols[p]
exceptions.KeyError: <twisted.internet.tcp.Client to 
('www.verisign.com', 443) a
t 10fa800>


When I try to hook this up into an IMAP4 client, it seems like my 
wrapper is getting bypassed somewhere. With debug on, I see:

MyProtocolWrapper.__init__
MyProtocolWrapper.makeConnection
MyProtocolWrapper.connectionMade

then nothing, until the connection finally times out. I haven't looked 
much into this one yet. Any guesses as to where I should be looking at? 
Or is it not possible to use the ProtocolWrapper here?

I can upload full source packages as well if anyone needs them.

-- 
   Heikki Toivonen


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041207/d4c3545a/attachment.pgp 

From michaelschneider at fuse.net  Tue Dec  7 21:38:12 2004
From: michaelschneider at fuse.net (Michael Schneider)
Date: Tue, 7 Dec 2004 21:38:12 -0500
Subject: [Twisted-Python] Using Windows active directory for Single Sign-on
Message-ID: <DDEBLIGOHANFDMNECHGEIEJFCFAA.michaelschneider@fuse.net>

Hello All,

I am trying to leverage Windows Active Directory (Kerberos based) on a
client, for
a single sign on. Then running a proccess as that users on a twisted daemon.


Is there some example code for
	- obtaining initial certificate
	-  verifying certificate on twisted
	- executing process as user under twisted

Thank you very much,
Mike



From radeex at gmail.com  Tue Dec  7 22:08:10 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 8 Dec 2004 14:08:10 +1100
Subject: [Twisted-Python] An apology to the community (outstanding trial
	bugs)
In-Reply-To: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>
References: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>
Message-ID: <60ed19d404120719085baa1cd2@mail.gmail.com>

Speaking of trial sucking, I just committed a change to SVN that
should prevent a LOT of those lame "there is a bug in trial" errors --
Failure formatting now uses a safe repr so bugs in user __repr__
implementations won't murder trial.

On Mon, 6 Dec 2004 21:01:12 -0500, Jonathan Simms
<slyphon at twistedmatrix.com> wrote:
> Hi everyone,
> 
> I know that there are several trial issues outstanding and that they're
> holding up the 2.0 release. I recently got a job working in Manhattan,
> and am still adjusting to the commute and the tasks that are assigned
> to me, so I haven't had the attention or energy to devote to twisted.
> 
> On a lighter note (and adding to the distraction) I also got engaged
> this weekend. :-)
> 
> I'm not quite sure when I'll have time to clear these issues up. I will
> try to work on them during the week and hopefully have them resolved by
> next week sometime.
> 
> I am terribly sorry to have put everyone in this position.
> 
> -Jonathan
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From thomas at copyleft.no  Wed Dec  8 06:30:59 2004
From: thomas at copyleft.no (Thomas Kristensen)
Date: Wed, 8 Dec 2004 12:30:59 +0100 (CET)
Subject: [Twisted-Python] Questions about class KeyFactory.
Message-ID: <Pine.LNX.4.61.0412081216350.13853@home.ymera.com>

Hi,

I my a bit afraid im asking a stupid question here, I'll do it anyways
:)


(from twisted/enterprise/row.py)
class KeyFactory:
...
         warnings.warn("This is deprecated. Use the underlying database to
 	generate keys, or just roll your own.", DeprecationWarning)
...

As the warnings says this class is deprecated. Use the underlying 
database. I was wondering if anybody have some example code for this. Im 
using a PgDB.

Here's my rowObject:
class DummyRow(row.RowObject):
     rowColumns = [
         ("testId",  "int"),
         ("testName","varchar"),
         ("testData","varchar")
         ]
     rowKeyColumns    = [("testId","int")]
     rowTableName     = "dummytable"

And my sql code:

CREATE TABLE dummytable (
 	testId SERIAL PRIMARY KEY,
 	testName varchar(64),
 	testData varchar
);

So when using a sequencer to generate an unique key for testId, I dont 
need to supply testId in my insert sql statement. But twisted complains if 
i dont use the assignKeyAttr function, PG complains if I use it with a 
value thats already used (ofcourse).

My insert code

     b = DummyRow()
     b.assignKeyAttr("testId", 3)
     b.testName = "myTestName"
     b.testData = "My test data string"
     manager.insertRow(b).addCallback(onInsert)

Again if was wondering if somebody had some sample code to help me solve 
my problem or a point in the right direction.

Thanks in advance,

--Thomas



From simon at hedberg.net  Wed Dec  8 08:31:36 2004
From: simon at hedberg.net (Simon)
Date: Wed, 8 Dec 2004 14:31:36 +0100
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <Pine.LNX.4.61.0412081216350.13853@home.ymera.com>
Message-ID: <000001c4dd2a$3d8ef340$456271d5@hp>

What happens if you set the id to a zero value of some sort, such as 0,
'', NULL ?


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Thomas
Kristensen
Sent: den 8 december 2004 12:31
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Questions about class KeyFactory.


Hi,

I my a bit afraid im asking a stupid question here, I'll do it anyways
:)






From thomas at copyleft.no  Wed Dec  8 08:52:49 2004
From: thomas at copyleft.no (Thomas Kristensen)
Date: Wed, 8 Dec 2004 14:52:49 +0100 (CET)
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <000001c4dd2a$3d8ef340$456271d5@hp>
References: <000001c4dd2a$3d8ef340$456271d5@hp>
Message-ID: <Pine.LNX.4.61.0412081445150.15427@home.ymera.com>



> What happens if you set the id to a zero value of some sort, such as 0,
> '', NULL ?

I have tried that aswell, they either gives an invalid sql, or is rejected 
by PG :(

b.assignKeyAttr("testId", None) =
libpq.OperationalError: ERROR:  null value in column "testid" violates 
not-null constraint

b.assignKeyAttr("testId", 0) = 
libpq.OperationalError: ERROR:  duplicate key violates unique constraint 
"dummytable_pkey"

b.assignKeyAttr("testId", "NULL") = 
libpq.OperationalError: ERROR:  null value in column "testid" violates 
not-null constraint

b.assignKeyAttr("testId", "") =
libpq.OperationalError: ERROR:  syntax error at or near "," at character 
62


--tkk



From exarkun at divmod.com  Wed Dec  8 10:03:04 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 08 Dec 2004 15:03:04 GMT
Subject: [Twisted-Python] Using Windows active directory for Single Sign-on
In-Reply-To: <DDEBLIGOHANFDMNECHGEIEJFCFAA.michaelschneider@fuse.net>
Message-ID: <20041208150304.1203.791540441.divmod.quotient.3773@ohm>

On Tue, 7 Dec 2004 21:38:12 -0500, Michael Schneider <michaelschneider at fuse.net> wrote:
>Hello All,
> 
> I am trying to leverage Windows Active Directory (Kerberos based) on a
> client, for
> a single sign on. Then running a proccess as that users on a twisted daemon.
> 
> 
> Is there some example code for
> 	- obtaining initial certificate
> 	-  verifying certificate on twisted
> 	- executing process as user under twisted

  For those of us ignorant about Windows Active Directory,

    - what kind of certificate?  where does it come from?  does a win32 API provide it?  what's Windows Active Directory anyway, and how does it relate to your Twisted app?

    - what kind of verification?  do you need to check it against another certificate?  if so, where does that one come from?  do you need to check a signature on it?  if so, who is supposed to have signed it?  are there win32 APIs for these things?

  Regarding the last point, Twisted has one API for launching subprocesses, `reactor.spawnProcess()'.  It works on Windows, but I don't think it supports running processes as other users on Windows.

  Jp



From exarkun at divmod.com  Wed Dec  8 10:04:46 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 08 Dec 2004 15:04:46 GMT
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B65D0C.9080705@osafoundation.org>
Message-ID: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>

On Tue, 07 Dec 2004 17:46:52 -0800, Heikki Toivonen <heikki at osafoundation.org> wrote:
>A while back I integrated M2Crypto into Twisted, but the architecture 
> was not deemed good then (it was adding more of the SSL cruft in tcp.py 
> etc.).
> 
> James Knight pointed me to TLS Lite, which had achieved similar 
> functionality by using ProtocolWrapper and WrappingFactory and all the 
> code was outside of Twisted. (Thanks James!)
> 
> I've now got an implementation of M2Crypto + Twisted integration using 
> the TLS Lite approach - no changes in Twisted required. (Client only for 
> now and not yet fully cleaned up, but all the important pieces should be 
> there.)
> 
> However, I've run into some problems and I am not sure if they are bugs 
> in Twisted or if I am using these interfaces wrong. Maybe you can help.
> 
> The most interesting piece of the code is my TLSProtocolWrapper that 
> inherits from ProtocolWrapper. See 
> http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py
> 
> Now, this seems to works perfectly with the echoclient samples when the 
> SSL connection has no errors.
> 
> When there is an error in the SSL connection, and I call 
> connectionLost(), I end up with a traceback that feels like it might be 
> a Twisted bug. Or if I am not allowed to call that, how do I signal that 
> I want to break the connection? Here's the traceback:

  You should call proto.transport.loseConnection() instead of proto.connectionLost().  The former indicates to the reactor that the connection should be dropped, the latter is a callback that the reactor invokes to tell you that the connection has been dropped.

  Jp



From donovan.preston at gmail.com  Wed Dec  8 10:18:27 2004
From: donovan.preston at gmail.com (Donovan Preston)
Date: Wed, 8 Dec 2004 07:18:27 -0800
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
In-Reply-To: <756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
	<cop55d$a4c$1@sea.gmane.org>
	<756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>
Message-ID: <2570613d04120807184b94c122@mail.gmail.com>

On Fri, 3 Dec 2004 11:29:09 -0500, James Y Knight <foom at fuhm.net> wrote:
> On Dec 3, 2004, at 2:38 AM, Nicola Larosa wrote:
> > I don't know why, but all messages generated by Quotient do not word
> > wrap,
> > neither in KNode nor in groups.google.com , making them hard to read
> > because of the horizontal scrolling needed. Could anybody look into it?
> > Thanks.
> 
> Yeah, it does look like Quotient is screwing up. It should be
> word-wrapping to 79 columns and using
> http://www.ietf.org/rfc/rfc2646.txt to format the text instead of just
> sending ultra-long lines of text.

Yes. This is a known issue and correct format-flowed formatting from the
webui compose screen is on my list of bugfixes.

Further discussion of additional Quotient issues would best be carried out
on the divmod-dev list:

http://divmod.org/users/mailman.twistd/listinfo/divmod-dev

dp



From rich at enflyer.com  Wed Dec  8 12:02:58 2004
From: rich at enflyer.com (Rich Cavanaugh)
Date: Wed, 8 Dec 2004 12:02:58 -0500
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <Pine.LNX.4.61.0412081445150.15427@home.ymera.com>
References: <000001c4dd2a$3d8ef340$456271d5@hp>
	<Pine.LNX.4.61.0412081445150.15427@home.ymera.com>
Message-ID: <035BD890-493B-11D9-92BB-000A95890854@enflyer.com>

On Dec 8, 2004, at 8:52 AM, Thomas Kristensen wrote:

>
>
>> What happens if you set the id to a zero value of some sort, such as 
>> 0,
>> '', NULL ?
>
> I have tried that aswell, they either gives an invalid sql, or is 
> rejected by PG :(
>
> b.assignKeyAttr("testId", None) =
> libpq.OperationalError: ERROR:  null value in column "testid" violates 
> not-null constraint

I have quite a lot of local changes to twisted.enterprise that I would 
be happy to share. The code is a mess right now though and kinda pgsql 
specific so if you want it keep that in mind.

With my changes you would do:

b.assignKeyAttr("testId", PgDefaultColumn())

or

b.assignKeyAttr("testId", PgSequenceColumn("mytable_testId_seq"))

There are a lot of other changes but those are the ones most relevant 
to your problem.

rich
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2361 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041208/db64314e/attachment.bin 

From heikki at osafoundation.org  Wed Dec  8 14:45:38 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Wed, 08 Dec 2004 11:45:38 -0800
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
Message-ID: <41B759E2.1090400@osafoundation.org>

Jp Calderone wrote:
> On Tue, 07 Dec 2004 17:46:52 -0800, Heikki Toivonen <heikki at osafoundation.org> wrote:
>>The most interesting piece of the code is my TLSProtocolWrapper that 
>>inherits from ProtocolWrapper. See 
>>http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py
>>
>>When there is an error in the SSL connection, and I call 
>>connectionLost(), I end up with a traceback that feels like it might be 
>>a Twisted bug. Or if I am not allowed to call that, how do I signal that 
>>I want to break the connection? Here's the traceback:
> 
>   You should call proto.transport.loseConnection() instead of proto.connectionLost().  The former indicates to the reactor that the connection should be dropped, the latter is a callback that the reactor invokes to tell you that the connection has been dropped.

Ok, that makes the exception go away, but it still does not solve the 
problem why I tried to use connectionLost() in the first place. I want 
to signal that this connection was lost because of an error, and calling 
  loseConnection() won't let me specify the error.

I am looking at as non-invasive methods as possible, the ultimate goal 
being that you could hook this up to any existing non-SSL implementation 
  with practically no changes. That seems to rule out custom errbacks.

So, when my wrapper notices an SSL error, how do I signal that the 
connection should be dropped because there was an error - and pass some 
info about the error along?

-- 
   Heikki Toivonen

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041208/c156f6e5/attachment.pgp 

From itamar at itamarst.org  Wed Dec  8 14:59:26 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Dec 2004 14:59:26 -0500
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B759E2.1090400@osafoundation.org>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
	<41B759E2.1090400@osafoundation.org>
Message-ID: <1102535966.29868.149.camel@sheriffpony>

On Wed, 2004-12-08 at 11:45 -0800, Heikki Toivonen wrote:

> So, when my wrapper notices an SSL error, how do I signal that the 
> connection should be dropped because there was an error - and pass some 
> info about the error along?

Perhaps we could add an optional exception or maybe failure keyword arg
to loseConnection (and abortConnection when we have that).




From itamar at itamarst.org  Wed Dec  8 15:00:27 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Dec 2004 15:00:27 -0500
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B759E2.1090400@osafoundation.org>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
	<41B759E2.1090400@osafoundation.org>
Message-ID: <1102536027.29865.151.camel@sheriffpony>

On Wed, 2004-12-08 at 11:45 -0800, Heikki Toivonen wrote:

> So, when my wrapper notices an SSL error, how do I signal that the 
> connection should be dropped because there was an error - and pass some 
> info about the error along?

Aren't you calling the user protocol's connectionLost yourself? You
could remember the reason (if you did) that you closed connection,  and
pass that.




From radeex at gmail.com  Fri Dec 10 06:47:09 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 10 Dec 2004 22:47:09 +1100
Subject: [Twisted-Python] Roundup email interface
Message-ID: <60ed19d404121003471ebc678e@mail.gmail.com>

Works again, after many months of not working. The original reason I
disabled it was that unknown users could send it email (spam) and it
would create new issues. Now it only allows members to post issues,
afaict. Anyway, if you want to use the roundup email interface now,
the email address is

  twisted.roundup at twistedmatrix.com

The documentation for the email interface is at 

  http://roundup.sourceforge.net/doc-0.7/user_guide.html#e-mail-gateway

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mohamed at your-site.com  Fri Dec 10 11:16:07 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Fri, 10 Dec 2004 11:16:07 -0500
Subject: [Twisted-Python] nevow newbie: No module named examples.childrenhtml
Message-ID: <576675500.1102677367@[192.168.1.76]>

Hello all,

How do you run the exampleBrowser?

(#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- twistd -y 
examples.tac

Failed to load application: No module named examples.childrenhtml

(#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- find .
.
./index.css
./index.html
./source.html
./examples
./examples/childrenhtml
./examples/childrenhtml/childrenhtml.py
./examples/childrenhtml/childrenhtml_ChildOfChildPage.html
./examples/childrenhtml/childrenhtml_ChildPage.html
./examples/childrenhtml/childrenhtml_RootPage.html
./examples/childrenhtml/description.html
./examples/childrenhtml/__init__.py
./examples/childrenhtml/childrenhtml.pyc
./examples/__init__.py
./examples/tablehtml
./examples/tablehtml/tablehtml.html
./examples/tablehtml/tablehtml.py
./examples/tablehtml/__init__.py
./python.css
./examples.tac
./twistd.log




From mohamed at your-site.com  Fri Dec 10 11:21:04 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Fri, 10 Dec 2004 11:21:04 -0500
Subject: [Twisted-Python] Re: nevow newbie: No module named
	examples.childrenhtml
In-Reply-To: <576675500.1102677367@[192.168.1.76]>
References: <576675500.1102677367@[192.168.1.76]>
Message-ID: <576972453.1102677664@[192.168.1.76]>

Sorry. Please ignore. I was root and root does not get . in his PYTHONPATH
Just found that in a previous post here.

Thanks
Mohamed~

--On Friday, December 10, 2004 11:16 AM -0500 Mohamed Lrhazi 
<mohamed at your-site.com> wrote:

> Hello all,
>
> How do you run the exampleBrowser?
>
> (#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- twistd -y
> examples.tac
>
> Failed to load application: No module named examples.childrenhtml
> 



From foom at fuhm.net  Fri Dec 10 23:19:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 10 Dec 2004 23:19:32 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <DBB52C06-4B2B-11D9-A1D1-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-03 19:45:55.600000:
  Bugs opened: 15   Bugs closed: 17   Total open bugs: 312 (-2)
   Critical: 0 (-1)
   Urgent: 14 (-1)
   Bug: 118 (-2)
   Feature: 119 (+3)
   Wish: 61 (-1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE] Race condition in streaming producers means producer may never 
be unpaused  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue811 opened by itamarst

[RELEASE MANAGEMENT] Make extension building work wrt zpkg  (yesterday)
        http://www.twistedmatrix.com/bugs/issue818 opened by radix

                     ==== Bug ====
issue issue  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue820 opened by radeex

confirming roundup registration via email doesn't work  (2 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue817 opened by mwh

[WEB] Multiple consecutive / in URLs gives 404 errors  (yesterday)
        http://www.twistedmatrix.com/bugs/issue819 opened by spiv

[CORE] win32select fails with too many open file descriptiors  (2 days 
ago)
        http://www.twistedmatrix.com/bugs/issue816 opened by ndecker

testCyclicAliases in t.mail.test_mail is weird  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue810 opened by marienz

t.runner.identd should hand over a blocking socket  (2 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue814 opened by marienz

Find solution to twisted download hosting other than SF web space  (2 
days ago)
        http://www.twistedmatrix.com/bugs/issue813 opened by radix

Invalid "Index" links at the bottom of document pages.  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue812 opened by tirkal

[CORE, TRIAL] Undesirable ValueError exception masking by namedAny()  
(5 days ago)
        http://www.twistedmatrix.com/bugs/issue808 opened by exarkun

                     ==== Feature ====
[TWISTD] Make twistd a little more scripting friendly  (12 hours ago)
        http://www.twistedmatrix.com/bugs/issue823 opened by spiv

t.internet.process.Process should check for valid arguments  (2 days 
ago)
        http://www.twistedmatrix.com/bugs/issue815 opened by marienz

                     ==== Wish ====
testing a *really* unregistered user  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue822 opened by radix1

testing an unregistered user  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue821 opened by test

Bugs Closed
______________________
                     ==== Urgent ====
make epydoc stop ignoring zope interfaces  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue794 opened by radix, 
closed by radix

[CORE] test_trial fails on windows  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue757 opened by itamarst, 
closed by radix

[TRIAL] Unhandled exception in trial at result reporting time  (1 week 
ago)
        http://www.twistedmatrix.com/bugs/issue800 opened by exarkun, 
closed by radix

[RELEASE MANAGEMENT] setup.py not installing docs, manpages  (17 months 
ago)
        http://www.twistedmatrix.com/bugs/issue51 opened by radix, 
closed by radix

[PB, TRIAL] buggy PB/trial interactions  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue788 opened by teratorn, 
closed by teratorn

                     ==== Bug ====
issue issue  (yesterday)
        http://www.twistedmatrix.com/bugs/issue820 opened by radeex, 
closed by jknight

[RELEASE MANAGEMENT] python-twisted_1.2.0-1woody_all.deb is 
uninstallable  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue582 opened by acapnotic, 
closed by radix

[MAIL] IMAP4 improperly generates multipart BODYSTRUCTURE responses  
(16 months ago)
        http://www.twistedmatrix.com/bugs/issue195 opened by exarkun, 
closed by radix

[WEBSITE] Roundup is broken - Users are logged out when creating new 
issues  (11 months ago)
        http://www.twistedmatrix.com/bugs/issue476 opened by exarkun, 
closed by radix

confirming roundup registration via email doesn't work  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue817 opened by mwh, closed 
by radix

t.runner.identd should hand over a blocking socket  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue814 opened by marienz, 
closed by spiv

intermittent freebsd test_threads failure  (14 months ago)
        http://www.twistedmatrix.com/bugs/issue341 opened by warner, 
closed by glyph

[TRIAL] 'trial --until-failure twisted.abc' spews forever  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue804 opened by exarkun, 
closed by glyph

[MAIL] intermittent IMAP failure  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue369 opened by warner, 
closed by glyph

                     ==== Wish ====
[RELEASE MANAGEMENT] Improvements to the automated release process  (17 
months ago)
        http://www.twistedmatrix.com/bugs/issue56 opened by radix, 
closed by radix

testing a *really* unregistered user  (yesterday)
        http://www.twistedmatrix.com/bugs/issue822 opened by radix1, 
closed by radix

testing an unregistered user  (yesterday)
        http://www.twistedmatrix.com/bugs/issue821 opened by test, 
closed by radix




From prabaharpython at yahoo.co.in  Wed Dec 15 06:21:41 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Wed, 15 Dec 2004 11:21:41 +0000 (GMT)
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041204173027.1203.730989615.divmod.quotient.2028@ohm>
Message-ID: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>

Dear All,

I want to know about the following
concept "Asynchronous networked applications".
Actuall meaning of twisted.
        " it   is a framework for Asynchronous 
networked applications ".  So I want to know
specially about Asynchronous networked applications.
If anybody know regarding this please clear doubts
with small example. I have confusion regarding
this.

regards
Prabahar

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From projects at reedflute.com  Wed Dec 15 10:12:54 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 15 Dec 2004 17:12:54 +0200
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
Message-ID: <41C05476.4030600@reedflute.com>

praba mosas wrote:

>I want to know about the following
>concept "Asynchronous networked applications".
>Actuall meaning of twisted.
>        " it   is a framework for Asynchronous 
>networked applications ".  So I want to know
>specially about Asynchronous networked applications.
>If anybody know regarding this please clear doubts
>with small example. I have confusion regarding
>this.
>  
>
Hi Praba,

In general "asynchronous" would mean "event-driven" as in comparison to "polling".

A simple example I can think of would be the way that in all modern GUI frameworks (for example Microsoft's MFC) you do not have to poll the keyboard or mouse port for input but rather write code in event handlers that responds to events that are automatically generated by the GUI framework.

In the same way - in Twisted you are coding event-handlers rather than writing polling routines that would for example poll a network socket for data.

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From mcfletch at rogers.com  Wed Dec 15 10:43:08 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 15 Dec 2004 10:43:08 -0500
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
Message-ID: <41C05B8C.5000107@rogers.com>

My PyGTA presentation from a few months ago tries to provide some 
background on what asynchronous programming in Twisted is.  It contrasts 
asynchronous programming models with various other approaches to 
parallelising code:
    http://www.vrplumber.com/programming/twistedlowlevel05.pdf
In short, Twisted represents one of many possible approaches to the 
problem of "waiting in parallel", that is, multiplexing events so that 
while a given process is blocked on (for instance) input/output/network 
operations, other operations can continue.

Good luck,
Mike

praba mosas wrote:

>Dear All,
>
>I want to know about the following
>concept "Asynchronous networked applications".
>Actuall meaning of twisted.
>        " it   is a framework for Asynchronous 
>networked applications ".  So I want to know
>specially about Asynchronous networked applications.
>If anybody know regarding this please clear doubts
>with small example. I have confusion regarding
>this.
>
>regards
>Prabahar
>  
>

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From mso at oz.net  Wed Dec 15 13:20:18 2004
From: mso at oz.net (Mike Orr)
Date: Wed, 15 Dec 2004 10:20:18 -0800
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <41C05B8C.5000107@rogers.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
	<41C05B8C.5000107@rogers.com>
Message-ID: <20041215182018.GA3995@sense-sea-MegaSub-1-465.oz.net>

On Wed, Dec 15, 2004 at 10:43:08AM -0500, Mike C. Fletcher wrote:
> My PyGTA presentation from a few months ago tries to provide some 
> background on what asynchronous programming in Twisted is.  It contrasts 
> asynchronous programming models with various other approaches to 
> parallelising code:
>    http://www.vrplumber.com/programming/twistedlowlevel05.pdf
> In short, Twisted represents one of many possible approaches to the 
> problem of "waiting in parallel", that is, multiplexing events so that 
> while a given process is blocked on (for instance) input/output/network 
> operations, other operations can continue.

This is a great overview, and makes the "why's" of Twisted more concrete.
An HTML version would be a good addition to the Twisted Howtos.

-- 
-Mike Orr (aka. Sluggo), mso at oz.net  (iron at sense-sea-MegaSub-1-465.oz.net)
   http://sluggo.kicks-ass.org/                  Cxu vi parolas Esperante?



From gds11561 at tj.sc.gov.br  Wed Dec 15 11:39:20 2004
From: gds11561 at tj.sc.gov.br (Gustavo Dagostin da Silva)
Date: Wed, 15 Dec 2004 14:39:20 -0200
Subject: [Twisted-Python] Question regarding http post/put
Message-ID: <200412151439.20107.gds11561@tj.sc.gov.br>


I'm creating a server which serves xml-rpc and, by demand, loads a HTTP server 
which is intended to upload (big) data from client to server.
How do I limit the request types accepted by the http server to the post/put, 
not permitting get and other requests ?

Thanks in advance,
Gustavo



From kenny at gem-hs.org  Thu Dec 16 22:18:24 2004
From: kenny at gem-hs.org (Kenny Chamber)
Date: Fri, 17 Dec 2004 06:18:24 +0300
Subject: [Twisted-Python] python.plugin
Message-ID: <41C25000.7060203@gem-hs.org>

I extended t.py.p to use deferreds. The code is somewhat hideous and about
three times as slow, but at least it's asynchronous. There's a much more
elegant way to do it using generators. Hopefully, at some point in the
future Python 2.2 will be the minimum supported version.




-----------------------
Kenny Chamber
http://gem-hs.org/contact.html



From itamar at itamarst.org  Thu Dec 16 22:28:20 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Dec 2004 22:28:20 -0500
Subject: [Twisted-Python] python.plugin
In-Reply-To: <41C25000.7060203@gem-hs.org>
References: <41C25000.7060203@gem-hs.org>
Message-ID: <1103254100.3287.56.camel@sheriffpony>

On Fri, 2004-12-17 at 06:18 +0300, Kenny Chamber wrote:
> I extended t.py.p to use deferreds. The code is somewhat hideous and about
> three times as slow, but at least it's asynchronous. There's a much more
> elegant way to do it using generators. Hopefully, at some point in the
> future Python 2.2 will be the minimum supported version.
 
Python 2.2 is the minimal supported version. Please submit patches to
http://twistedmatrix.com/bugs/.




From stefano at pragma2000.com  Fri Dec 17 12:09:38 2004
From: stefano at pragma2000.com (Stefano Masini)
Date: Fri, 17 Dec 2004 18:09:38 +0100
Subject: [Twisted-Python] twisted webdav server
Message-ID: <41C312D2.8070105@pragma2000.com>

Hello Yasushi, Stefan, and Twisted-Python,

I tried and liked akadav (thanks Yasushi), and I read that Stefan 
proposed to refactor it for accessing dynamic data.

Since I need dynamic data too, I was wondering if anybody did it yet.

In case nobody worked on this already, I'm gonna do it, just some 
simple refactoring. Nothing fancy, instead of accessing the file 
system I need to access an object that represents a virtual directory 
and exposes methods like listContent(), get(filename), put(filename, 
data), and so forth...

... but if this code is available already, I could spare some 
fingertips! :)

stefano



On Fri, 22 Oct 2004 17:35:28 +0200, donfu <fu at donfu.com> wrote:

 >> Yasushi Iwata wrote:
 >
 >>> >
 >>> > I wrote WebDAV module for Tiwsted.
 >>> >
 >>> >   http://akadama.jp/akadav.html
 >
 >>
 >> Great, I just had a look at it. It seems to work well for serving a
 >> directory over webdav. However, I'm not quite sure how to adapt it 
to serve
 >> dynamic data from a database.
 >>
 >> I think I could refactor your WebDAV resource-class, so that it 
works with
 >> arbitrary backends. Basically I'd try to factor everything out 
that does
 >> explicitly deal with the filesystem. But in a way, that's what a 
twisted.web
 >> Resource is in the first place, no? Honestly, I'm a bit confused :)
 >>
 >> stefan.



From fu at donfu.com  Sat Dec 18 03:55:44 2004
From: fu at donfu.com (Stefan Niederhauser)
Date: Sat, 18 Dec 2004 09:55:44 +0100
Subject: [Twisted-Python] twisted webdav server
In-Reply-To: <41C312D2.8070105@pragma2000.com>
References: <41C312D2.8070105@pragma2000.com>
Message-ID: <9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>

> Since I need dynamic data too, I was wondering if anybody did it yet.

Sorry, I didn't lift a finger. I was a bit overwhelmed by the size of 
the task, once itamar commented on the refactoring :)

itamar wrote on 2004-10-22:
>  At the very least you'd need to extend Resource to support an extended
>  range of actions. And if you do you should probably work off
>  twisted.web2 - but at this point you should probably switch to the
>  twisted-web mailing list.

Still, I'd be interested in helping out with abstracting the webdav 
backend.

regards,
stefan.




From ihaywood at gnu.org  Sat Dec 18 06:11:33 2004
From: ihaywood at gnu.org (Ian Haywood)
Date: Sat, 18 Dec 2004 22:11:33 +1100
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
Message-ID: <41C41065.1060306@gnu.org>

This a patch on twisted 1.4.0 to add support for the STOR method to
the ftp server code.

I have tested it using GNU standard FTP client and the Windows File 
Explorer FTP mode.

Ian Haywood

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041218/b1147982/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041218/b1147982/attachment.pgp 

From teratorn at twistedmatrix.com  Sat Dec 18 07:06:43 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 18 Dec 2004 06:06:43 -0600
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <41C41065.1060306@gnu.org>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
	<41C41065.1060306@gnu.org>
Message-ID: <opsi7c9hzsy3d107@localhost.localdomain>

On Sat, 18 Dec 2004 22:11:33 +1100, Ian Haywood <ihaywood at gnu.org> wrote:

> This a patch on twisted 1.4.0 to add support for the STOR method to
> the ftp server code.
>
> I have tested it using GNU standard FTP client and the Windows File
> Explorer FTP mode.
>
> Ian Haywood

This is cool.

A couple of issues though. First, nobody is going to commit this without
good unit tests.
Second, there are a few coding style things you should change (<> should
be !=, no space
after functions to call or method definitions)

It's late and that's all I can think of right now :)

-Eric



From jamwt-twisted at jamwt.com  Sat Dec 18 10:00:57 2004
From: jamwt-twisted at jamwt.com (J Turner)
Date: Sat, 18 Dec 2004 09:00:57 -0600
Subject: [Twisted-Python] Twisted PostgreSQL Library
Message-ID: <20041218150057.GA72130@count.jamwt.com>

Hello list,

I've been working on and off over the last few weeks on a twisted-based
pgsql library--driven by my desire to keep threads completely out of my
apps!

It's come together at this point into something worth releasing.. you
can find it here:

http://www.jamwt.com/pgasync/

It's DB API 2.0 compliant, and it has a adbapi wrapper as well for
existing implementations.  I could rattle off all the details here, but
I've already done that like three times in the last few hours
(freshmeat, home page, README, blah blah blah).

So far, in my informal benchmarks performance and scalability look to
be very promising vs. adbapi/threads.

Anyway, feel free to check it out, and I'd love to get feedback,
suggestions (and certainly bug reports).

Thanks,

 - Jamie Turner



From maparent at mac.com  Sat Dec 18 10:58:42 2004
From: maparent at mac.com (Marc-Antoine Parent)
Date: Sat, 18 Dec 2004 10:58:42 -0500
Subject: [Twisted-Python] Python 2.4 compatible windows binaries?
Message-ID: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>

Good day!
I am thinking of migrating to Python 2.4, and I am using Twisted (for 
Nevow). The rebuild was simple on my OSX machine, and twisted works 
very well under 2.4, but I am not familiar with the build procedure on 
Windows. Are you planning to make Windows binaries for Python 2.4, or 
otherwise can you give me an idea of how I should go about to build 
them?
Thank you very much,
Marc-Antoine Parent




From foom at fuhm.net  Sat Dec 18 12:27:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 18 Dec 2004 12:27:22 -0500
Subject: [Twisted-Python] Twisted PostgreSQL Library
In-Reply-To: <20041218150057.GA72130@count.jamwt.com>
References: <20041218150057.GA72130@count.jamwt.com>
Message-ID: <13F0916A-511A-11D9-A7F7-000A95A50FB2@fuhm.net>

I said it before, and I'll say it again now: that is pretty awesome.

James

On Dec 18, 2004, at 10:00 AM, J Turner wrote:

> Hello list,
>
> I've been working on and off over the last few weeks on a twisted-based
> pgsql library--driven by my desire to keep threads completely out of my
> apps!
>
> It's come together at this point into something worth releasing.. you
> can find it here:
>
> http://www.jamwt.com/pgasync/
>
> It's DB API 2.0 compliant, and it has a adbapi wrapper as well for
> existing implementations.  I could rattle off all the details here, but
> I've already done that like three times in the last few hours
> (freshmeat, home page, README, blah blah blah).
>
> So far, in my informal benchmarks performance and scalability look to
> be very promising vs. adbapi/threads.
>
> Anyway, feel free to check it out, and I'd love to get feedback,
> suggestions (and certainly bug reports).




From itamar at itamarst.org  Sat Dec 18 12:57:36 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 18 Dec 2004 12:57:36 -0500
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <opsi7c9hzsy3d107@localhost.localdomain>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
	<41C41065.1060306@gnu.org> <opsi7c9hzsy3d107@localhost.localdomain>
Message-ID: <1103392656.3283.92.camel@sheriffpony>

On Sat, 2004-12-18 at 06:06 -0600, Eric Mangold wrote:
> On Sat, 18 Dec 2004 22:11:33 +1100, Ian Haywood <ihaywood at gnu.org> wrote:
> 
> > This a patch on twisted 1.4.0 to add support for the STOR method to
> > the ftp server code.

> It's late and that's all I can think of right now :)

How about "please add patches to http://twistedmatrix.com/bugs/"? :)




From kurtschwehr at yahoo.com  Sat Dec 18 19:18:06 2004
From: kurtschwehr at yahoo.com (Kurt Schwehr)
Date: Sat, 18 Dec 2004 16:18:06 -0800 (PST)
Subject: [Twisted-Python] Mac OSX Fink packages
Message-ID: <20041219001806.39043.qmail@web51410.mail.yahoo.com>

Hi All,

I am in the process of trying to learning how to use
buildbot and cvstoys and as a result twisted.  I have
created fink packages for buildbot, cvstoys,
pyopenssl, and twisted.  I'm looking for people who
know these programs to give these packages and make
sure they actually work right.   They need a little
more work for the description field, but otherwise
they seem to build and install ok. The files are here:

http://schwehr.org/software/fink/

If you are not used to installing fink packages, the
basic proceedure is to put them in 

/sw/fink/10.3/local/main/finkinfo/net

and then run

fink index
fink list twisted cvstoys buildbot

Thanks!
-kurt

=====
http://schwehr.org

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From foom at fuhm.net  Sat Dec 18 23:32:58 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 18 Dec 2004 23:32:58 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <0F514C05-5177-11D9-A7F7-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-03 19:45:55.600000:
  Bugs opened: 9   Bugs closed: 8   Total open bugs: 313 (+1)
   Critical: 0 (+0)
   Urgent: 14 (+0)
   Bug: 119 (+1)
   Feature: 118 (-1)
   Wish: 62 (+1)

New / Reopened Bugs
______________________
                     ==== Bug ====
[TRIAL] when two test modules have the same classname, class name isn't 
reported second time  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue832 opened by radix

[TRIAL] setUpClass run even if class set to skip  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue831 opened by exarkun

[MAIL] [PATCH] POP3 do_LIST returns an incorrect response  (5 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue826 opened by alecu

[CONCH] test_cftp fails for almost any environment other than an svn 
checkout  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue830 opened by exarkun

PyEval_RestoreThread on exit when using PyQT with Twisted (qtdemo.py)  
(6 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue825 opened by stodge

[PATCH] trial -u does not wait for reactor shutdown before next pass  
(3 days ago)
        http://www.twistedmatrix.com/bugs/issue829 opened by logan

epyrun doesn't like t.python.util.moduleMovedForSplit  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue828 opened by marienz

wrapping code in IRCClient can cause infinite loops  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue827 opened by edmundd

Roundup doesn't auto-add commentators to nosy list  (7 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue824 opened by jknight

Bugs Closed
______________________
                     ==== Bug ====
[MAIL] [PATCH] POP3 do_LIST returns an incorrect response  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue826 opened by alecu, 
closed by exarkun

PyEval_RestoreThread on exit when using PyQT with Twisted (qtdemo.py)  
(6 days ago)
        http://www.twistedmatrix.com/bugs/issue825 opened by stodge, 
closed by itamarst

[WEB] default t.w content-type doesn't specify UTF-8  (16 months ago)
        http://www.twistedmatrix.com/bugs/issue149 opened by moonfallen, 
closed by glyph

[WEB] [PATCH] borken html sux  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue519 opened by enki, 
closed by glyph

Find solution to twisted download hosting other than SF web space  (1 
week ago)
        http://www.twistedmatrix.com/bugs/issue813 opened by radix, 
closed by radix

Roundup doesn't auto-add commentators to nosy list  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue824 opened by jknight, 
closed by radix

[DOCUMENTATION] [PATCH] Contributor agreement still speaks of CVS  (1 
month ago)
        http://www.twistedmatrix.com/bugs/issue787 opened by Tv, closed 
by glyph

                     ==== Feature ====
roundup should send .patch files as text/plain  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue738 opened by jknight, 
closed by jknight




From corydodt at twistedmatrix.com  Mon Dec 20 16:57:29 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 20 Dec 2004 13:57:29 -0800
Subject: [Twisted-Python] Python 2.4 compatible windows binaries?
In-Reply-To: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
Message-ID: <41C74AC9.3080703@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Twisted 2.0 will have windows binaries for Python 2.4, but there are no plans
at this time to do those binaries for earlier versions.

In any case, you can build what you need.  Please check out a working copy of
SVN trunk, and see the text file win32/README.win32.  You need just the "BARE
MINIMUM" build.  Any questions -> list.

Thanks!

C



Marc-Antoine Parent wrote:
| Good day!
| I am thinking of migrating to Python 2.4, and I am using Twisted (for
| Nevow). The rebuild was simple on my OSX machine, and twisted works very
| well under 2.4, but I am not familiar with the build procedure on
| Windows. Are you planning to make Windows binaries for Python 2.4, or
| otherwise can you give me an idea of how I should go about to build them?
| Thank you very much,
| Marc-Antoine Parent
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBx0rJ3A5SrXAiHQcRAjn9AKCUnHZ0m5nrn48ujnAMttTTBbljDACdGzDT
eWY8+7Y1ixir/KG+2S9FjDc=
=DiZz
-----END PGP SIGNATURE-----



From donwsmith at gmail.com  Mon Dec 20 17:30:07 2004
From: donwsmith at gmail.com (Don Smith)
Date: Mon, 20 Dec 2004 14:30:07 -0800
Subject: [Twisted-Python] filewatch.py
Message-ID: <24f63c200412201430435ad076@mail.gmail.com>

Greetings!

I'm fairly new to Twisted, but I like it already. However, I'm having
some difficulty with the filewatch.py example.

Actually, I extended it to loop over a list of files and start service
for each. The log files in the list are actually commands to determine
the most recent log file.

But I have a condition where the log files will get rotated
unexpectedly. I would like to re-evaluate my list of log files every
120 seconds. I have figured out a method to accomplish this, but it
just adds the new log files to the service. This is bad. I want to
stop service on all log files, then start service on the new ones.
This is what I can't figure out how to do. How do I stop the service?

This is how I start it:
if os.path.exists(logfile):
	        internet.TimerService(0.1, watch2,
file(logfile),logfile).startService()


Thanks for you help!!

Don Smith



From jason.mobarak at gmail.com  Mon Dec 20 17:43:02 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Mon, 20 Dec 2004 15:43:02 -0700
Subject: [Twisted-Python] filewatch.py
In-Reply-To: <24f63c200412201430435ad076@mail.gmail.com>
References: <24f63c200412201430435ad076@mail.gmail.com>
Message-ID: <b194c919041220144332df2b3d@mail.gmail.com>

The initializer TimerService will return a TimerService object, which
has the .startService() and .stopService(). So, bind the object
returned by TimerService to some name and call methods on that to
start/stop the service.


On Mon, 20 Dec 2004 14:30:07 -0800, Don Smith <donwsmith at gmail.com> wrote:
> Greetings!
> 
> I'm fairly new to Twisted, but I like it already. However, I'm having
> some difficulty with the filewatch.py example.
> 
> Actually, I extended it to loop over a list of files and start service
> for each. The log files in the list are actually commands to determine
> the most recent log file.
> 
> But I have a condition where the log files will get rotated
> unexpectedly. I would like to re-evaluate my list of log files every
> 120 seconds. I have figured out a method to accomplish this, but it
> just adds the new log files to the service. This is bad. I want to
> stop service on all log files, then start service on the new ones.
> This is what I can't figure out how to do. How do I stop the service?
> 
> This is how I start it:
> if os.path.exists(logfile):
>                 internet.TimerService(0.1, watch2,
> file(logfile),logfile).startService()
> 
> Thanks for you help!!
> 
> Don Smith
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Jason



From stage3 at us.ibm.com  Mon Dec 20 18:23:18 2004
From: stage3 at us.ibm.com (Garrett Rolfs)
Date: 20 Dec 2004 17:23:18 -0600
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
Message-ID: <m3ekhkv9jt.fsf@us.ibm.com>

I fear I'm missing something basic and overlooked something already
documented.  Hopefully someone will set me straight.  I'm attempting
to play with MoinMoin using twisted as the webserver.  I'm running on
linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
attempt to start MoinMoin, I see the following in the log:

2004/12/20 17:05 CST [-] Starting factory
<MoinMoin.server.twistedmoin.MoinSite instance at 0x40a070ec>
2004/12/20 17:05 CST [-] Traceback (most recent call last):
2004/12/20 17:05 CST [-] File
"/home/stage3/bin/twistd", line 36, in ?
2004/12/20 17:05 CST [-] run() 
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 184, in run
2004/12/20 17:05 CST [-] app.run(runApp, ServerOptions) 
2004/12/2017:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/application/app.py",
line 205, in run
2004/12/20 17:05 CST [-]     runApp(config)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 175, in runApp
2004/12/20 17:05 CST [-]     startApplication(config, application)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 160, in startApplication
2004/12/20 17:05 CST [-] shedPrivileges(config['euid'], process.uid,
process.gid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 134, in shedPrivileges
2004/12/20 17:05 CST [-]     switchUID(uid, gid, euid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/python/util.py",
line 606, in switchUID
2004/12/20 17:05 CST [-]     initgroups(uid, gid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/python/util.py",
line 584, in initgroups
2004/12/20 17:05 CST [-]     setgroups(l)
2004/12/20 17:05 CST [-] OSError: [Errno 1] Operation not permitted

I am merely experimenting and I would like to run without being root.
Is it possible?

Thanks,

-Garrett Rolfs




From exarkun at divmod.com  Mon Dec 20 23:31:00 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 21 Dec 2004 04:31:00 GMT
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
In-Reply-To: <m3ekhkv9jt.fsf@us.ibm.com>
Message-ID: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>

On 20 Dec 2004 17:23:18 -0600, Garrett Rolfs <stage3 at us.ibm.com> wrote:
>I fear I'm missing something basic and overlooked something already
> documented.  Hopefully someone will set me straight.  I'm attempting
> to play with MoinMoin using twisted as the webserver.  I'm running on
> linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
> attempt to start MoinMoin, I see the following in the log:
> [snip]

  Your logged in shell is running with more permissions than your system is 
configured to allow you to have.  Perhaps someone recently edited your 
/etc/groups file or something similar.  Logging all the way out and back in
should give you an environment in which twistd will start up for you.

  If you ran across this without passing uid= or gid= to Application(), 
this is probably a twistd bug.  If you didn't, it's just an undesirable
deployment complication with bad error reporting.  Both should be fixed,
of course :)

  Jp



From projects at reedflute.com  Tue Dec 21 10:16:27 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 21 Dec 2004 17:16:27 +0200
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
In-Reply-To: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
References: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
Message-ID: <41C83E4B.3060504@reedflute.com>

Jp Calderone wrote:

>On 20 Dec 2004 17:23:18 -0600, Garrett Rolfs <stage3 at us.ibm.com> wrote:
>  
>
>>I fear I'm missing something basic and overlooked something already
>>documented.  Hopefully someone will set me straight.  I'm attempting
>>to play with MoinMoin using twisted as the webserver.  I'm running on
>>linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
>>attempt to start MoinMoin, I see the following in the log:
>>[snip]
>>    
>>
>
>  Your logged in shell is running with more permissions than your system is 
>configured to allow you to have.  Perhaps someone recently edited your 
>/etc/groups file or something similar.  Logging all the way out and back in
>should give you an environment in which twistd will start up for you.
>
>  If you ran across this without passing uid= or gid= to Application(), 
>this is probably a twistd bug.  If you didn't, it's just an undesirable
>deployment complication with bad error reporting.  Both should be fixed,
>of course :)
>
>  
>

Don't know if it is a bug - or something todo with shell privileges. I 
have seen the same thing migrating recently from Slackware 9.1 to 
Slackware 10.0.

Since I'm using the same version of Twisted and Python on both versions 
of Slack (9.1 and 10.0) - logic seems to point in the direction of the 
distro or some GNU library related issue.

regards,

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From stage3 at us.ibm.com  Tue Dec 21 10:51:08 2004
From: stage3 at us.ibm.com (Garrett Rolfs)
Date: 21 Dec 2004 09:51:08 -0600
Subject: [Twisted-Python] Re: Starting MoinMoin as nonroot Linux User
References: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
	<41C83E4B.3060504@reedflute.com>
Message-ID: <m3acs7vedv.fsf@us.ibm.com>

Eugene Coetzee <projects at reedflute.com> writes:

> Jp Calderone wrote:
> 
> >  Your logged in shell is running with more permissions than your
> > system is configured to allow you to have.  Perhaps someone recently
> > edited your /etc/groups file or something similar.  Logging all the
> > way out and back in
> >should give you an environment in which twistd will start up for you.
> >

Thank you for the clue.  Indeed that appears to be the problem.  I
looked at my /etc/passwd entry and I am in my own "personal" group.
My site has linux clients that authenticate against AFS.  Every user
has their own group to minimize the exposure allowing unanticipated
access to local (non-AFS) directories and files.  Anyway, back to the
main topic...  I executed the id command and noticed I am in groups
not listed in /etc/passwd.  Also, I shouldn't be in these groups
because they are "personal" groups for other users.  Hence, I have
sent an email to our internal support org.
 
> Don't know if it is a bug - or something todo with shell privileges. I
> have seen the same thing migrating recently from Slackware 9.1 to
> Slackware 10.0.
> 
> Since I'm using the same version of Twisted and Python on both
> versions of Slack (9.1 and 10.0) - logic seems to point in the
> direction of the distro or some GNU library related issue.
> 

The id command may shed some light to what is different, at least it
did for me.

Thanks for the feedback.

-Garrett Rolfs




From mary-twisted at puzzling.org  Wed Dec 22 20:51:59 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 23 Dec 2004 12:51:59 +1100
Subject: [Twisted-Python] Re: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
Message-ID: <20041223015159.GE27858@home.puzzling.org>


OK, when you say "I got errors", can you tell us what the errors were?
The last 15 lines of the install output would be a good start.

-Mary

On Wed, Dec 22, 2004, Robert Ide wrote:
> I am trying to install Twisted
> 
> I downloaded from the twisted site
> 
> I got errors and when I try to run twistd --version I get "not found"
> 
> Rob
> 
> 
> 
> -----Original Message-----
> From: twisted-web-bounces at twistedmatrix.com
> [mailto:twisted-web-bounces at twistedmatrix.com] On Behalf Of Mary Gardiner
> Sent: Wednesday, December 22, 2004 7:42 PM
> To: twisted-web at twistedmatrix.com
> Subject: Re: [Twisted-web] Installing on Fedora
> 
> On Wed, Dec 22, 2004, Robert Ide wrote:
> > This may be a rooky question but I'm having some trouble installing on
> > Fedora. I ran python setup.py install but that didn't seem to work and when
> I
> > look at admin/twisted.spec I'm not sure what to do with it. Should I be
> using
> > rpm with this?
> 
> A few questions:
> 
>  1. What are you trying to install exactly (twisted, Nevow...)?
>  2. Where did you download it from?
>  3. What tells you that "python setup.py install" didn't work (error
>     messages, failure of the program to show up in the right place)?
> 
> If it's twisted you're trying to install,
> twisted-python at twistedmatrix.com might be of some help...
> 
> -Mary



From andrew-twisted at puzzling.org  Wed Dec 22 21:14:45 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 23 Dec 2004 13:14:45 +1100
Subject: [Twisted-Python] Re: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
Message-ID: <20041223021445.GS4882@frobozz>

[Moving to twisted-python at twistedmatrix.com -- I don't see anything
web-specific here]

On Wed, Dec 22, 2004 at 05:58:01PM -0800, Robert Ide wrote:
> Here is the error from running python setup.py install
> 
> running install
> Traceback (most recent call last):
>   File "setup.py", line 358, in ?
>     setup(**setup_args)
[...]
>   File "/usr/lib/python2.2/distutils/sysconfig.py", line 322, in _init_posix
>     raise DistutilsPlatformError(my_msg)
> distutils.errors.DistutilsPlatformError: invalid Python installation: unable
> to open /usr/lib/python2.2/config/Makefile (No such file or directory)

To be clear: what exactly are you trying to install?  The Twisted 1.3
tarball?

I don't know Fedora, but I'd check to see if you have the python-devel
package installed, and if not see if it makes a difference.

Also, a bit of googling shows there's already an RPM of Twisted for Fedora:
    http://download.fedora.redhat.com/pub/fedora/linux/core/development/i386/Fedora/RPMS/python-twisted-1.3.0-20041213.i386.rpm

Any particular reason you aren't using that?

Let us know how you're going.

-Andrew.




From cpunion at gmail.com  Wed Dec 22 23:17:21 2004
From: cpunion at gmail.com (lijie)
Date: Thu, 23 Dec 2004 12:17:21 +0800
Subject: [Twisted-Python] How to use Application with wxpython and tcp client
Message-ID: <41CA46D1.5000701@gmail.com>

I have a gui using wxpython, and I want to connect a server use twisted.
How to implement it using application or service?



From itamar at itamarst.org  Thu Dec 23 09:35:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Dec 2004 09:35:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN ignore
	files generated by unit tests.
In-Reply-To: <E1ChPs7-0001Mz-00@wolfwood>
References: <E1ChPs7-0001Mz-00@wolfwood>
Message-ID: <1103812537.14088.94.camel@sheriffpony>

On Thu, 2004-12-23 at 03:07 -0700, Tommi Virtanen wrote:

> Modified:
>    trunk/twisted/lore/test/   (props changed)
>    trunk/twisted/test/   (props changed)
> Log:
> Make SVN ignore files generated by unit tests.

Really we should fix the tests so that the files are not created under
the twisted/ tree.




From grib at billgribble.com  Thu Dec 23 10:32:27 2004
From: grib at billgribble.com (Bill Gribble)
Date: Thu, 23 Dec 2004 09:32:27 -0600
Subject: [Twisted-Python] twistedmatrix.com in various spam URL blocklists
In-Reply-To: <1103812537.14088.94.camel@sheriffpony>
References: <1103812537.14088.94.camel@sheriffpony>
Message-ID: <1103815947.5100.11.camel@serrano>

Some Twisted mailing list messages are getting dropped in my spam bucket
in the same way this one was.  It might make sense to contact the SURBL
groups and get twistedmatrix.com off their lists.  

Bill Gribble

> Content analysis details:   (6.0 points, 5.0 required)
> 
>  pts rule name              description
> ---- ---------------------- --------------------------------------------------
> -2.6 BAYES_00               BODY: Bayesian spam probability is 0 to 1%
>                             [score: 0.0000]
>  1.0 URIBL_PH_SURBL         Contains a URL listed in the PH SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.0 URIBL_AB_SURBL         Contains a URL listed in the AB SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.8 URIBL_WS_SURBL         Contains a URL listed in the WS SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.0 URIBL_OB_SURBL         Contains a URL listed in the OB SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  3.8 URIBL_SC_SURBL         Contains a URL listed in the SC SURBL blocklist



From foom at fuhm.net  Thu Dec 23 12:33:28 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 23 Dec 2004 12:33:28 -0500
Subject: [Twisted-Python] twistedmatrix.com in various spam URL blocklists
In-Reply-To: <1103815947.5100.11.camel@serrano>
References: <1103812537.14088.94.camel@sheriffpony>
	<1103815947.5100.11.camel@serrano>
Message-ID: <C2272355-5508-11D9-8D68-000A95A50FB2@fuhm.net>

Wow, I really wouldn't recommend scoring a single external source so 
high that it, all by itself, can mark your emails as spam. Also, 
http://www.rulesemporium.com/cgi-bin/uribl.cgi doesn't say anything 
about twistedmatrix.com being on their list. Maybe they just removed 
it, or maybe your configuration is broken somehow.

James

On Dec 23, 2004, at 10:32 AM, Bill Gribble wrote:

> Some Twisted mailing list messages are getting dropped in my spam 
> bucket
> in the same way this one was.  It might make sense to contact the SURBL
> groups and get twistedmatrix.com off their lists.
>
> Bill Gribble
>
>> Content analysis details:   (6.0 points, 5.0 required)
>>
>>  pts rule name              description
>> ---- ---------------------- 
>> --------------------------------------------------
>> -2.6 BAYES_00               BODY: Bayesian spam probability is 0 to 1%
>>                             [score: 0.0000]
>>  1.0 URIBL_PH_SURBL         Contains a URL listed in the PH SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.0 URIBL_AB_SURBL         Contains a URL listed in the AB SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.8 URIBL_WS_SURBL         Contains a URL listed in the WS SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.0 URIBL_OB_SURBL         Contains a URL listed in the OB SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  3.8 URIBL_SC_SURBL         Contains a URL listed in the SC SURBL 
>> blocklist
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ww at groovy.net  Thu Dec 23 18:10:23 2004
From: ww at groovy.net (William Waites)
Date: Thu, 23 Dec 2004 18:10:23 -0500
Subject: [Twisted-Python] a couple of patches
Message-ID: <20041223231023.GI1460@groovy.net>

greetings, sent this directly to glyph a little while ago,
to deafening silence... perhaps i said the wrong thing ;)

here are a couple of patches:

the first one adds interface support to enterprise.adbapi.ConnectionPool
to make things like IFooBarObject(dbpool) where dbpool is a ConnectionPool
instance work as expected.

the second adds unregistration methods to the python.dispatch.EventDispatcher

cheers,
-w

-------------- next part --------------
diff -uP Twisted-1.3.0/twisted/enterprise/adbapi.py Twisted-Local/twisted/enterprise/adbapi.py
--- Twisted-1.3.0/twisted/enterprise/adbapi.py	2004-02-26 00:45:04.000000000 -0500
+++ Twisted-Local/twisted/enterprise/adbapi.py	2004-12-20 01:11:47.000000000 -0500
@@ -48,7 +48,7 @@
     def __getattr__(self, name):
         return getattr(self._cursor, name)
 
-
+from interfaces import IConnectionPool
 class ConnectionPool:
     """I represent a pool of connections to a DB-API 2.0 compliant database.
 
@@ -57,7 +57,8 @@
     the noisy arg which determines whether informational log messages are
     generated during the pool's operation.
     """
-
+    __implements__ = IConnectionPool,
+    
     noisy = 1   # if true, generate informational log messages
     min = 3     # minimum number of connections in pool
     max = 5     # maximum number of connections in pool
@@ -309,7 +310,7 @@
         warnings.warn("This is deprecated. Use runInteraction", DeprecationWarning)
         self._deferToThread(self._runInteraction, interaction,
                             *args, **kw).addCallbacks(callback, errback)
-
+del IConnectionPool
 
 class Augmentation:
     '''This class is now deprecated. Just use the ConnectionPool directly.
diff -uP Twisted-1.3.0/twisted/enterprise/interfaces.py Twisted-Local/twisted/enterprise/interfaces.py
--- Twisted-1.3.0/twisted/enterprise/interfaces.py	1969-12-31 19:00:00.000000000 -0500
+++ Twisted-Local/twisted/enterprise/interfaces.py	2004-12-20 01:14:15.000000000 -0500
@@ -0,0 +1,86 @@
+from twisted.python import components
+class IConnectionPool(components.Interface):
+    """I represent a pool of connections to a DB-API 2.0 compliant database.
+
+    You can pass cp_min, cp_max or both to set the minimum and maximum
+    number of connections that will be opened by the pool. You can pass
+    the noisy arg which determines whether informational log messages are
+    generated during the pool's operation.
+    """
+    def start(self):
+        """Start the connection pool.
+
+        If you are using the reactor normally, this function does *not*
+        need to be called.
+        """
+    def runInteraction(self, interaction, *args, **kw):
+        """Interact with the database and return the result.
+
+        The 'interaction' is a callable object which will be executed
+        in a thread using a pooled connection. It will be passed an
+        L{Transaction} object as an argument (whose interface is
+        identical to that of the database cursor for your DB-API
+        module of choice), and its results will be returned as a
+        Deferred. If running the method raises an exception, the
+        transaction will be rolled back. If the method returns a
+        value, the transaction will be committed.
+
+        NOTE that the function you pass is *not* run in the main
+        thread: you may have to worry about thread-safety in the
+        function you pass to this if it tries to use non-local
+        objects.
+
+        @param interaction: a callable object whose first argument is
+            L{adbapi.Transaction}. *args,**kw will be passed as
+            additional arguments.
+
+        @return: a Deferred which will fire the return value of
+            'interaction(Transaction(...))', or a Failure.
+        """
+
+    def runQuery(self, *args, **kw):
+        """Execute an SQL query and return the result.
+
+        A DB-API cursor will will be invoked with cursor.execute(*args, **kw).
+        The exact nature of the arguments will depend on the specific flavor
+        of DB-API being used, but the first argument in *args be an SQL
+        statement. The result of a subsequent cursor.fetchall() will be
+        fired to the Deferred which is returned. If either the 'execute' or
+        'fetchall' methods raise an exception, the transaction will be rolled
+        back and a Failure returned.
+
+        The  *args and **kw arguments will be passed to the DB-API cursor's
+        'execute' method.
+
+        @return: a Deferred which will fire the return value of a DB-API
+        cursor's 'fetchall' method, or a Failure.
+        """
+    def runOperation(self, *args, **kw):
+        """Execute an SQL query and return None.
+
+        A DB-API cursor will will be invoked with cursor.execute(*args, **kw).
+        The exact nature of the arguments will depend on the specific flavor
+        of DB-API being used, but the first argument in *args will be an SQL
+        statement. This method will not attempt to fetch any results from the
+        query and is thus suitable for INSERT, DELETE, and other SQL statements
+        which do not return values. If the 'execute' method raises an exception,
+        the transaction will be rolled back and a Failure returned.
+
+        The args and kw arguments will be passed to the DB-API cursor's
+        'execute' method.
+
+        return: a Deferred which will fire None or a Failure.
+        """
+    def close(self):
+        """Close all pool connections and shutdown the pool."""
+    def connect(self):
+        """Return a database connection when one becomes available.
+
+        This method blocks and should be run in a thread from the internal threadpool.
+        Don't call this method directly from non-threaded twisted code.
+
+        @return: a database connection from the pool.
+        """
+        
+# keep the namespace tidy
+del components
-------------- next part --------------
--- Twisted-1.3.0/twisted/python/dispatch.py	2003-11-29 00:30:05.000000000 -0500
+++ Twisted-Local/twisted/python/dispatch.py	2004-12-20 16:59:30.000000000 -0500
@@ -31,11 +31,12 @@
         self.prefix = prefix
         self.callbacks = {}
 
-
     def registerHandler(self, name, meth):
         self.callbacks.setdefault(name, []).append(meth)
 
-
+    def unregisterHandler(self, name, meth):
+        self.callbacks[name].remove(meth)
+        
     def autoRegister(self, obj):
         from twisted.python import reflect
         d = {}
@@ -43,7 +44,13 @@
         for k,v in d.items():
             self.registerHandler(k, v)
 
-
+    def autoUnregister(self, obj):
+        from twisted.python import reflect
+        d = {}
+        reflect.accumulateMethods(obj, d, self.prefix)
+        for k,v in d.items():
+            self.unregisterHandler(k, v)
+            
     def publishEvent(self, name, *args, **kwargs):
         for cb in self.callbacks[name]:
             cb(*args, **kwargs)

From mary-twisted at puzzling.org  Thu Dec 23 18:18:14 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Dec 2004 10:18:14 +1100
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041223231023.GI1460@groovy.net>
References: <20041223231023.GI1460@groovy.net>
Message-ID: <20041223231814.GB23419@fuchsia.puzzling.org>

On Thu, Dec 23, 2004, William Waites wrote:
> greetings, sent this directly to glyph a little while ago,
> to deafening silence... perhaps i said the wrong thing ;)

Nah, did the wrong thing... :) Best thing to do is add it to the bug
tracker at http://twistedmatrix.com/bugs/. Put [PATCH] in the subject.

Can you let me know whether it was anything on the website that
convinced you to send the code directly to Glyph, so that I can update
it? (It's not that Glyph eats the code of contributors for fiendish
pleasure... that I know of... it's just that it's better to put it in
the tracker.)

-Mary



From itamar at itamarst.org  Thu Dec 23 18:32:47 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Dec 2004 18:32:47 -0500
Subject: [Twisted-Python] ANN: Fusion v0.2, C++ integration for Twisted
Message-ID: <1103844768.14088.138.camel@sheriffpony>

Fusion is a library that supports implementing protocols in C++ for use
with Twisted, allowing control over memory allocation strategies, fast
method calls internally, etc.. Fusion supports TCP, UDP and multicast,
and is implemented using the Boost.Python python bindings.

Fusion has only been tested on Linux - Debian GNU/Linux with gcc 3.3 on
PowerPC and Redhat 7.3 with gcc 2.96 on x86.

Fusion is licensed under the MIT license, and available for download
from http://itamarst.org/software/fusion-0.2.tar.gz

Features supported in v0.2:

1. Scheduling functions with the twisted event loop from C++ (callLater
and LoopingCall).

2. Support for implementing C++ UDP and multicast protocols.

3. Support for implementing C++ TCP protocols (client and server), with
a zero-copy buffering layer written in C++. Protocols implemented in
Python can also use this custom buffering layer. There are two write
APIs, one accepting a functor/function that writes to a buffer allocated
by Fusion, and the other accepting a shared_ptr that points at an
instance that owns a buffer.


** WARNING **
Writing networking code in C++ can lead to buffer overflows and other
unpleasant security problems. Stick to pure Python unless you have no
other choice and know what you're doing. Don't assume I know what I'm
doing, either - bug reports are more than welcome :)





From ww at groovy.net  Thu Dec 23 19:22:30 2004
From: ww at groovy.net (William Waites)
Date: Thu, 23 Dec 2004 19:22:30 -0500
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041223231814.GB23419@fuchsia.puzzling.org>
References: <20041223231023.GI1460@groovy.net>
	<20041223231814.GB23419@fuchsia.puzzling.org>
Message-ID: <20041224002230.GJ1460@groovy.net>

On Fri, Dec 24, 2004 at 10:18:14AM +1100, Mary Gardiner wrote:
> On Thu, Dec 23, 2004, William Waites wrote:
> > greetings, sent this directly to glyph a little while ago,
> > to deafening silence... perhaps i said the wrong thing ;)
> 
> Nah, did the wrong thing... :) Best thing to do is add it to the bug
> tracker at http://twistedmatrix.com/bugs/. Put [PATCH] in the subject.

*sigh* 

yet another bugtracker... ok... sure thing.

> Can you let me know whether it was anything on the website that
> convinced you to send the code directly to Glyph, so that I can update
> it?

nothing in particular, i just didn't see anything obvious that said,
"code contributions go here," so i guessed...

-w



From mary-twisted at puzzling.org  Thu Dec 23 19:25:57 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Dec 2004 11:25:57 +1100
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041224002230.GJ1460@groovy.net>
References: <20041223231023.GI1460@groovy.net>
	<20041223231814.GB23419@fuchsia.puzzling.org>
	<20041224002230.GJ1460@groovy.net>
Message-ID: <20041224002557.GA2087@home.puzzling.org>

On Thu, Dec 23, 2004, William Waites wrote:
> nothing in particular, i just didn't see anything obvious that said,
> "code contributions go here," so i guessed...

Thanks, I'll see what I can do about that...

-Mary



From alan.ezust at gmail.com  Fri Dec 24 15:10:16 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 12:10:16 -0800
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
Message-ID: <f377591c041224121015c2acd8@mail.gmail.com>

I'm playing around with Twisted for my first time, and I noticed that 
page.renderString() returns a string like this:

<Deferred at 0x4054616c  current result: '<html>\n  <head>\n   
<title>Greetings!</title>\n  </head>\n  <body>\n    <h1
style="font-size: large">Now I will greet you:</h1>\n    Hi My name
is\n  </body>\n</html>'>


First, why the Deferred result?

Second, what if I just want the actual string? What method should I
call? Or am I supposed to do something else to this before getting the
renderString?



From ww at groovy.net  Fri Dec 24 16:05:07 2004
From: ww at groovy.net (William Waites)
Date: Fri, 24 Dec 2004 16:05:07 -0500
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
In-Reply-To: <f377591c041224121015c2acd8@mail.gmail.com>
References: <f377591c041224121015c2acd8@mail.gmail.com>
Message-ID: <20041224210507.GK1460@groovy.net>

On Fri, Dec 24, 2004 at 12:10:16PM -0800, Alan Ezust wrote:
> I'm playing around with Twisted for my first time, and I noticed that 
> page.renderString() returns a string like this:
> 
> <Deferred at 0x4054616c  current result: '<html>\n  <head>\n   
> <title>Greetings!</title>\n  </head>\n  <body>\n    <h1
> style="font-size: large">Now I will greet you:</h1>\n    Hi My name
> is\n  </body>\n</html>'>
> 
> First, why the Deferred result?

I suspect it is because renderString might well want to do other
operations in order to construct the string, and the result may
not be immediately available.

> Second, what if I just want the actual string? What method should I
> call? Or am I supposed to do something else to this before getting the
> renderString?

You could do somethign like:

def _cbDoSomethingWithString(str):
    print str

page.renderString().addCallback(_cbDoSomethingWithString)

There is also a helper function that you can use:

    s = page.renderString()
    from twisted.trial.util import wait
    s = wait(s)

though I am not sure how advisable it is to use that, depending on
what exactly it is you are trying to do...

Cheers,
-w



From alan.ezust at gmail.com  Fri Dec 24 18:42:09 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 15:42:09 -0800
Subject: [Twisted-Python] nuvow webform example?
In-Reply-To: <20041224222315.GL1460@groovy.net>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
	<f377591c0412241350663f190@mail.gmail.com>
	<20041224222315.GL1460@groovy.net>
Message-ID: <f377591c04122415421b3aa3a5@mail.gmail.com>

I have another question about the docs in nuvow webform. I'm following
the tutorial for nevow and I want to create a dynamic form with model.

http://www.divmod.org/Home/Projects/Nevow/index.html

I see an example of the webform, but it doesn't quite work:

class WebForm(rend.Page):
#   document = rend.stan(  # this should be changed to:
    docFactory = loaders.stan(
    tags.html[
    tags.body[
        h1["Here is the form:"],
        webform.renderForms('original')
    ]
])
resource = WebForm(Implementation())


I'm not sure I quite understand why 'original' goes there, but in any
case, I don't get any output from this. Is there something else that
needs to be fixed with this example?



On Fri, 24 Dec 2004 17:23:15 -0500, William Waites <ww at groovy.net> wrote:
> On Fri, Dec 24, 2004 at 01:50:46PM -0800, Alan Ezust wrote:
> > Ah, thanks...  the wait() did the trick.
> >
> > As it turned out, all I was doing was a little test apparently
> > creating and calling renderstring() immediately afterwards is a little
> > too soon for python  to handle, in this example...
> 
> Careful though -- wait is only appropriate to use in trivial
> examples. in fact it is only used in the test suite. It does
> some things that are not really allowed. Take a look at the
> implementation of wait.
> 
> It is really much better to schedule a callback -- this is the
> meaning of "you don't call twisted, twisted calls you".
> 
> Good luck,
> -w
> 
> --
> ... a poem about a haircut! But lofty, noble, tragic, timeless,
> full of love, treachery, retribution, quiet heroism in the face
> of certain doom! Six lines, cleverly rhymed, and every word
> beginning with the letter s!
>



From alan.ezust at gmail.com  Fri Dec 24 18:53:10 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 15:53:10 -0800
Subject: [Twisted-Python] Re: nuvow webform example?
In-Reply-To: <f377591c04122415421b3aa3a5@mail.gmail.com>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
	<f377591c0412241350663f190@mail.gmail.com>
	<20041224222315.GL1460@groovy.net>
	<f377591c04122415421b3aa3a5@mail.gmail.com>
Message-ID: <f377591c041224155323a14a30@mail.gmail.com>

oops. That last message was not clear at all.

Let me try again...

I'm following the tutorial. I defined classes

class ISimpleMethod(TypedInterface):
class Implementation(object):
as shown in the tutorial. Then I fixed up the webform, and here is my version:

class WebForm(rend.Page):
    docFactory = loaders.stan(
    tags.html[ tags.body[
        tags.h1["Here is the form:"],
        webform.renderForms('original')
    ]])

And here is a handler that is supposed to render the form.

def handler(req):
    req.content_type = "text/html"
    req.send_http_header()
     # this was the greeting example - works great.
    page = SearchPage("My name is Joe")    
    page.renderString().addCallback(req.write)

    # webform example - attempt to display.
    # I see "here is the form" but nothing else
    resource = WebForm(Implementation())
    resource.renderString().addCallback(req.write)

    return apache.OK



From dialtone at divmod.com  Fri Dec 24 20:43:30 2004
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Sat, 25 Dec 2004 02:43:30 +0100
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
In-Reply-To: <20041224210507.GK1460@groovy.net>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
Message-ID: <41CCC5C2.6050003@divmod.com>

William Waites wrote:

>There is also a helper function that you can use:
>
>    s = page.renderString()
>    from twisted.trial.util import wait
>    s = wait(s)
>
>though I am not sure how advisable it is to use that, depending on
>what exactly it is you are trying to do...
>  
>
That's a solution, although not very 'clean'.
You should use renderSynchronously call in rend.Page.
Beware! You cannot have a deferred in renderSynchronously so use at your 
own risk :).



From tv at twistedmatrix.com  Sat Dec 25 05:59:33 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 25 Dec 2004 12:59:33 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN ignore
	files generated by unit tests.
In-Reply-To: <1103812537.14088.94.camel@sheriffpony>
References: <E1ChPs7-0001Mz-00@wolfwood>
	<1103812537.14088.94.camel@sheriffpony>
Message-ID: <41CD4815.8090106@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>Modified:
>>   trunk/twisted/lore/test/   (props changed)
>>   trunk/twisted/test/   (props changed)
>>Log:
>>Make SVN ignore files generated by unit tests.
>>    
>>
>Really we should fix the tests so that the files are not created under
>the twisted/ tree.
>  
>
I agree. However, that was not a <5 minute task for me.

twisted/test/myrebuilder.py is imported; if you put it
somewhere else, you need to do sys.path hacking or such.

twisted/lore/test/ ignored files are created by things where
I see no simple option for setting the destination directory.
Someone who knows lore better may want to pick that up.




From itamar at itamarst.org  Sat Dec 25 12:00:34 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 25 Dec 2004 12:00:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN
	ignore files generated by unit tests.
In-Reply-To: <41CD4815.8090106@twistedmatrix.com>
References: <E1ChPs7-0001Mz-00@wolfwood>
	<1103812537.14088.94.camel@sheriffpony>
	<41CD4815.8090106@twistedmatrix.com>
Message-ID: <1103994034.8343.44.camel@sheriffpony>

On Sat, 2004-12-25 at 12:59 +0200, Tommi Virtanen wrote:

> twisted/lore/test/ ignored files are created by things where
> I see no simple option for setting the destination directory.
> Someone who knows lore better may want to pick that up.

One would copy the files to mkdir(TestCase/mktemp(self)) and then run
the tests on the copies.




From foom at fuhm.net  Sat Dec 25 22:42:51 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 25 Dec 2004 22:42:51 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <381C4CC4-56F0-11D9-8D68-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-19 04:24:41.480000:
  Bugs opened: 8   Bugs closed: 2   Total open bugs: 319 (+6)
   Urgent: 13 (-1)
   Bug: 123 (+4)
   Feature: 121 (+3)
   Wish: 62 (+0)

New / Reopened Bugs
______________________
                     ==== Bug ====
win32: reactor.spawnProcess does not grant permission to open sockets  
(2 days ago)
        http://twistedmatrix.com/bugs/issue837 opened by stefanomasini

[CONCH, WIN32] Test suite import error on win32 
(twisted.conch.test.test_cftp)  (2 days ago)
        http://twistedmatrix.com/bugs/issue836 opened by spiv

[TRIAL] "trial --until-failure --debug" totally broken  (4 days ago)
        http://twistedmatrix.com/bugs/issue834 opened by exarkun

roundup shouldn't set status to chatting unless status is new or 
resolved  (5 days ago)
        http://twistedmatrix.com/bugs/issue833 opened by jknight

Roundup doesn't auto-add commentators to nosy list  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue824 opened by jknight

                     ==== Feature ====
[PATCH] Interface support for adbapi.ConnectionPool  (10 hours ago)
        http://twistedmatrix.com/bugs/issue839 opened by ww

[PATCH] Unregister handlers for EventDispatcher  (10 hours ago)
        http://twistedmatrix.com/bugs/issue838 opened by ww

[TRIAL] Trial dry-run  (3 days ago)
        http://twistedmatrix.com/bugs/issue835 opened by jml

Bugs Closed
______________________
                     ==== Urgent ====
[TRIAL] Intermittent 
twisted.trial.test.test_adapters.TestFailureFormatting failure  (3 
weeks ago)
        http://twistedmatrix.com/bugs/issue798 opened by exarkun, closed 
by spiv

                     ==== Bug ====
Roundup doesn't auto-add commentators to nosy list  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue824 opened by jknight, closed 
by radix




From tv at twistedmatrix.com  Sun Dec 26 08:42:25 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 15:42:25 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
Message-ID: <41CEBFC1.1040808@twistedmatrix.com>

If no one yells at me during the next 24 hours,
tomorrow I will run

svn commit -m 'Move sandbox outside of trunk.' \
  svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/trunk/sandbox \
  svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/sandbox

This is your only chance to prevent it. I want it gone.



From tv at twistedmatrix.com  Sun Dec 26 09:17:57 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 16:17:57 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN	ignore
	files generated by unit tests.
In-Reply-To: <1103994034.8343.44.camel@sheriffpony>
References: <E1ChPs7-0001Mz-00@wolfwood>	<1103812537.14088.94.camel@sheriffpony>	<41CD4815.8090106@twistedmatrix.com>
	<1103994034.8343.44.camel@sheriffpony>
Message-ID: <41CEC815.1000907@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>twisted/lore/test/ ignored files are created by things where
>>I see no simple option for setting the destination directory.
>>Someone who knows lore better may want to pick that up.
>>    
>>
>One would copy the files to mkdir(TestCase/mktemp(self)) and then run
>the tests on the copies.
>  
>
I though of that, too, but considered it too messy at the time
(basically because I was too tired to actually read the code).
I just committed r12789:12791 which do exactly that.

That still leaves this:

twisted/test/myrebuilder.py is imported; if you put it
somewhere else, you need to do sys.path hacking or such.




From itamar at itamarst.org  Sun Dec 26 11:06:51 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 26 Dec 2004 11:06:51 -0500
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEBFC1.1040808@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
Message-ID: <1104077211.8349.122.camel@sheriffpony>

On Sun, 2004-12-26 at 15:42 +0200, Tommi Virtanen wrote:
> If no one yells at me during the next 24 hours,
> tomorrow I will run
> 
> svn commit -m 'Move sandbox outside of trunk.' \
>   svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/trunk/sandbox \
>   svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/sandbox

Consider this a yell. What is your motivation for doing this? I'm not
saying I disagree, necessarily, but I'd like some discussion first.




From tv at twistedmatrix.com  Sun Dec 26 11:21:26 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 18:21:26 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <1104077211.8349.122.camel@sheriffpony>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
Message-ID: <41CEE506.6020201@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>If no one yells at me during the next 24 hours,
>>tomorrow I will run
>>    
>>
>Consider this a yell. What is your motivation for doing this? I'm not
>saying I disagree, necessarily, but I'd like some discussion first.
>  
>
I think other people's sandbox changes just clutter up "svn st -u" and
"svn log", sandbox isn't really part of the twisted project (should not
get included in released source; should not get tagged; should not
get branched), and say 80% of the people co'ing trunk have no interest
in the sandbox (and when they have, it's easy to co when really wanted).

What's the _harm_ in moving it outside of trunk? Nevow has its sandbox
outside the trunk, and I really prefer it that way.




From alan.ezust at gmail.com  Sun Dec 26 11:24:18 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Sun, 26 Dec 2004 11:24:18 -0500
Subject: [Twisted-Python] errorhandler example in docs needs work
Message-ID: <f377591c04122608241f6e02bf@mail.gmail.com>

Reading this in the manual:
    http://twistedmatrix.com/documents/current/howto/defer

Example of how to write error handlers for exceptions:

def errorHandler(failure):
    failure.trap(SpamException, EggException)
    # Handle SpamExceptions and EggExceptions

d.addCallback(cookSpamAndEggs)
d.addErrback(errorHandler)

This example is missing something. The #handle SpamExceptions
should have at least one statement after the # like
      print "I am handling the exception"

I look at this example above and I still don't know how to write an
error handler. I shall read further, but I wanted to share my
feedback.



From tv at twistedmatrix.com  Sun Dec 26 11:58:12 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 18:58:12 +0200
Subject: [Twisted-Python] errorhandler example in docs needs work
In-Reply-To: <f377591c04122608241f6e02bf@mail.gmail.com>
References: <f377591c04122608241f6e02bf@mail.gmail.com>
Message-ID: <41CEEDA4.9090201@twistedmatrix.com>

Alan Ezust wrote:

>Reading this in the manual:
>    http://twistedmatrix.com/documents/current/howto/defer
>
>Example of how to write error handlers for exceptions:
>
>def errorHandler(failure):
>    failure.trap(SpamException, EggException)
>    # Handle SpamExceptions and EggExceptions
>
>d.addCallback(cookSpamAndEggs)
>d.addErrback(errorHandler)
>
>This example is missing something. The #handle SpamExceptions
>should have at least one statement after the # like
>      print "I am handling the exception"
>
>I look at this example above and I still don't know how to write an
>error handler. I shall read further, but I wanted to share my
>feedback.
>  
>
How would the print statement help you to know how to write an error 
handler?

Maybe there should be a "bigger" example somewhere, outside the defer howto,
with real code. Something like "try to fetch this URL via HTTP, retry up 
to three times".




From ww at groovy.net  Sun Dec 26 13:57:23 2004
From: ww at groovy.net (William Waites)
Date: Sun, 26 Dec 2004 13:57:23 -0500
Subject: [Twisted-Python] errorhandler example in docs needs work
In-Reply-To: <f377591c04122608241f6e02bf@mail.gmail.com>
References: <f377591c04122608241f6e02bf@mail.gmail.com>
Message-ID: <20041226185723.GN1460@groovy.net>

On Sun, Dec 26, 2004 at 11:24:18AM -0500, Alan Ezust wrote:
> 
> This example is missing something. The #handle SpamExceptions
> should have at least one statement after the # like
>       print "I am handling the exception"

If you want to see the error (and traceback), the usual thing to do is

	from twisted.python import log
	log.err(failure)

> I look at this example above and I still don't know how to write an
> error handler. I shall read further, but I wanted to share my
> feedback.

Of course the actual logic of the error handler depends on what the
error means and what should be done about it, but that is somewhat
application specific....

-w



From corydodt at twistedmatrix.com  Sun Dec 26 14:49:23 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 26 Dec 2004 11:49:23 -0800
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEE506.6020201@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
Message-ID: <41CF15C3.1060609@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I agree with the change, but I'm one of the people who will be
negatively impacted.  Probably, everyone doing serious work in the
sandbox will be in the same boat with me.  Published in mailing list
discussions or wikis or webpages, one occasionally mentions one's new
project which is not yet ready for Twisted, and one occasionally gets
email from people trying it out.  Changing the location of sandbox will
mean confused emails from people trying out that experimental code.

That said, I'm okay with this.

C


Tommi Virtanen wrote:
| Itamar Shtull-Trauring wrote:
|
|>> If no one yells at me during the next 24 hours,
|>> tomorrow I will run
|>>
|>
|> Consider this a yell. What is your motivation for doing this? I'm not
|> saying I disagree, necessarily, but I'd like some discussion first.
|>
|>
| I think other people's sandbox changes just clutter up "svn st -u" and
| "svn log", sandbox isn't really part of the twisted project (should not
| get included in released source; should not get tagged; should not
| get branched), and say 80% of the people co'ing trunk have no interest
| in the sandbox (and when they have, it's easy to co when really wanted).
|
| What's the _harm_ in moving it outside of trunk? Nevow has its sandbox
| outside the trunk, and I really prefer it that way.
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBzxXD3A5SrXAiHQcRAimHAJ45aZmqW5VgvmugEzixPsyHSVssYwCeJEkZ
8ewBuaThiRlVbG6eeUjKRuA=
=7mSJ
-----END PGP SIGNATURE-----



From tv at twistedmatrix.com  Mon Dec 27 04:28:49 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 27 Dec 2004 11:28:49 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEE506.6020201@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
Message-ID: <41CFD5D1.2060405@twistedmatrix.com>

Tommi Virtanen wrote:

> I think other people's sandbox changes just clutter up "svn st -u" and
> "svn log", sandbox isn't really part of the twisted project (should not
> get included in released source; should not get tagged; should not
> get branched), and say 80% of the people co'ing trunk have no interest
> in the sandbox (and when they have, it's easy to co when really wanted).

Also, sandbox changes trigger buildbot, adding noise to the waterfall.



From corydodt at twistedmatrix.com  Mon Dec 27 11:52:17 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 27 Dec 2004 08:52:17 -0800
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CFD5D1.2060405@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>
	<41CFD5D1.2060405@twistedmatrix.com>
Message-ID: <41D03DC1.4050509@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Actually, they're not supposed to.  If they are triggering the buildbot,
it's a recent regression.

C


Tommi Virtanen wrote:
| Tommi Virtanen wrote:
|
|> I think other people's sandbox changes just clutter up "svn st -u" and
|> "svn log", sandbox isn't really part of the twisted project (should not
|> get included in released source; should not get tagged; should not
|> get branched), and say 80% of the people co'ing trunk have no interest
|> in the sandbox (and when they have, it's easy to co when really wanted).
|
|
| Also, sandbox changes trigger buildbot, adding noise to the waterfall.
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFB0D3A3A5SrXAiHQcRAr9OAJ956hUcVDUMfOKx7XCkcZngm2yvJACfQi6B
gSvpXP1wpOA34mvT/KxhY9U=
=v78m
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Mon Dec 27 12:43:10 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 27 Dec 2004 17:43:10 GMT
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41D03DC1.4050509@twistedmatrix.com>
Message-ID: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>

On Mon, 27 Dec 2004 08:52:17 -0800, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Actually, they're not supposed to.  If they are triggering the buildbot,
> it's a recent regression.

  Commits show up on the waterfall.  Builds are not triggered.

  Jp



From tv at twistedmatrix.com  Mon Dec 27 15:36:31 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 27 Dec 2004 22:36:31 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>
References: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>
Message-ID: <41D0724F.4030406@twistedmatrix.com>

Jp Calderone wrote:

>>Actually, they're not supposed to.  If they are triggering the buildbot,
>>it's a recent regression.
>>    
>>
>  Commits show up on the waterfall.  Builds are not triggered.
>  
>
I stand corrected on that point.



From glyph at divmod.com  Mon Dec 27 16:35:00 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 27 Dec 2004 16:35:00 -0500
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CF15C3.1060609@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
	<41CF15C3.1060609@twistedmatrix.com>
Message-ID: <1104183300.5341.1.camel@localhost>

On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:

> That said, I'm okay with this.

I won't be as negatively impacted, but I agree with this sentiment.

I believe the commit should go ahead - I hope to make branches a more
integral part of the development process soon, so anything that makes it
easier to check them out is worthwhile.

So, +1




From tv at twistedmatrix.com  Mon Dec 27 18:58:41 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 28 Dec 2004 01:58:41 +0200
Subject: [Twisted-Python] Sandbox has moved,
	please co it explicitly if you want it
In-Reply-To: <1104183300.5341.1.camel@localhost>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>	<41CF15C3.1060609@twistedmatrix.com>
	<1104183300.5341.1.camel@localhost>
Message-ID: <41D0A1B1.40803@twistedmatrix.com>

Glyph Lefkowitz wrote:

>On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:
>  
>
>>That said, I'm okay with this.
>>    
>>
>I won't be as negatively impacted, but I agree with this sentiment.
>
>I believe the commit should go ahead - I hope to make branches a more
>integral part of the development process soon, so anything that makes it
>easier to check them out is worthwhile.
>
>So, +1
>  
>
You two seem to be happy and itamar only wanted discussion :)

r12804 moved sandbox out of the trunk.

To get your hands on the new sandbox, use something like

svn co svn://cvs.twistedmatrix.com/svn/Twisted/sandbox
svn co svn+ssh://cvs.twistedmatrix.com/svn/Twisted/sandbox




From radeex at gmail.com  Mon Dec 27 21:58:21 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 28 Dec 2004 13:58:21 +1100
Subject: [Twisted-Python] Sandbox has moved,
	please co it explicitly if you want it
In-Reply-To: <41D0A1B1.40803@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
	<41CF15C3.1060609@twistedmatrix.com>
	<1104183300.5341.1.camel@localhost> <41D0A1B1.40803@twistedmatrix.com>
Message-ID: <60ed19d40412271858577578aa@mail.gmail.com>

FYI, this may cause problems with existing checkouts such that the
only (obvious?) fix is to checkout a new copy. At least it did with
mine.

After a failed attempt to 'svn up' (which said some stuff about not
deleting the current directory since it was changed), svn stat told me
"! .", which means ". is not what I think it is". It was totally
incomprehensible to me, so I just checked out again.


On Tue, 28 Dec 2004 01:58:41 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> Glyph Lefkowitz wrote:
> 
> >On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:
> >
> >
> >>That said, I'm okay with this.
> >>
> >>
> >I won't be as negatively impacted, but I agree with this sentiment.
> >
> >I believe the commit should go ahead - I hope to make branches a more
> >integral part of the development process soon, so anything that makes it
> >easier to check them out is worthwhile.
> >
> >So, +1
> >
> >
> You two seem to be happy and itamar only wanted discussion :)
> 
> r12804 moved sandbox out of the trunk.
> 
> To get your hands on the new sandbox, use something like
> 
> svn co svn://cvs.twistedmatrix.com/svn/Twisted/sandbox
> svn co svn+ssh://cvs.twistedmatrix.com/svn/Twisted/sandbox
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From tv at twistedmatrix.com  Tue Dec 28 00:47:23 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 28 Dec 2004 07:47:23 +0200
Subject: [Twisted-Python] Sandbox has moved,	please co it explicitly if
	you want it
In-Reply-To: <60ed19d40412271858577578aa@mail.gmail.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>	<41CF15C3.1060609@twistedmatrix.com>	<1104183300.5341.1.camel@localhost>
	<41D0A1B1.40803@twistedmatrix.com>
	<60ed19d40412271858577578aa@mail.gmail.com>
Message-ID: <41D0F36B.8000302@twistedmatrix.com>

Christopher Armstrong wrote:

>FYI, this may cause problems with existing checkouts such that the
>only (obvious?) fix is to checkout a new copy. At least it did with
>mine.
>
>After a failed attempt to 'svn up' (which said some stuff about not
>deleting the current directory since it was changed), svn stat told me
>"! .", which means ". is not what I think it is". It was totally
>incomprehensible to me, so I just checked out again.
>  
>
You had non-versioned stuff in sandbox/ that was left around for you
to clean up manually. See what's left and finally rm -rf sandbox.
That happens whenever svn up sees repository has removed a file,
but there's a "conflict" caused by local files hanging around.

Just as a counterpoint, my sandbox directory was clean and svn up
removed it happily.




From int at mtx.ru  Tue Dec 28 03:24:35 2004
From: int at mtx.ru (Pavel Volkovitskiy)
Date: Tue, 28 Dec 2004 11:24:35 +0300
Subject: [Twisted-Python] microdom bug
Message-ID: <41D11843.4090603@mtx.ru>

Hello

test.py
===================================================================
#!/usr/bin/env python2.4

from twisted.web import microdom
import xml.dom.minidom

data = '<div> <div>div 1.1</div> <div>div 1.2</div> </div>'

doc_minidom = xml.dom.minidom.parseString(data)
doc_microdom = microdom.parseString(data)

node_minidom = 
doc_minidom.getElementsByTagName('div')[0].getElementsByTagName('div')[0]
node_microdom = 
doc_microdom.getElementsByTagName('div')[0].getElementsByTagName('div')[0]

print 'minidom:', node_minidom.toxml()
print 'microdom:', node_microdom.toxml()
====================================================================

$./test.py
===========================================
minidom: <div>div 1.1</div>
microdom: <div><div>div 1.1</div><div>div 1.2</div></div>
===========================================



From prabaharpython at yahoo.co.in  Tue Dec 28 06:10:52 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Tue, 28 Dec 2004 11:10:52 +0000 (GMT)
Subject: [Twisted-Python] How to create a Twisted module?
In-Reply-To: <20041215182018.GA3995@sense-sea-MegaSub-1-465.oz.net>
Message-ID: <20041228111052.88616.qmail@web8203.mail.in.yahoo.com>

Dear  all
    I am new in this group.  I have a task which name
is "Web based file manager Twisted Module". I know all
the concepts about twisted But I didn't know anything
about Twisted in Technically. I am well fluent in
python.
     So what are the things I need to do for this?. 
What are the things require for this task?. I expect
details regarding software requirements.
      I have only Python software in my system. Is it
enough. I don't know how to import the twisted
packages into my system.
         Please mail me as early as possible.

regards
T.Mosas Prabahar

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From justinjohnson at gmail.com  Tue Dec 28 15:32:04 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 28 Dec 2004 14:32:04 -0600
Subject: [Twisted-Python] More on PB Copyable Errors
Message-ID: <94a776e704122812321c78389@mail.gmail.com>

I would really like to be able to pass custom exceptions over the wire
in PB.  Previous discussion on this list ended with the conclusion
that it currently isn't possible without hacking a local copy of
Twisted.

I have done that to get the result I want, with minimal testing, and
would like to get some discussion going around this topic.  Attached
are 3 test files, s.py for the server, c.py for the client, and e.py
for the error definitions which are imported by both s.py and c.py. 
If I make the following modification to my local copy of
twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
the custom error is passed back as I want.

   #state['value'] = str(self.value) # Exception instance
   state['value'] = self.value # Exception instance

I was wondering if there is a reason we wouldn't want to change the
code to check for registered unjellyables for the exception, and
return them (or rather go through the jelly/unjelly process) if they
exist, but return the string representation otherwise.  Maybe that is
more complicated than I realize.

Any thoughts or suggestions on how we might make this possible?
Thanks.
-Justin



From justinjohnson at gmail.com  Tue Dec 28 15:34:02 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 28 Dec 2004 14:34:02 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e704122812321c78389@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
Message-ID: <94a776e70412281234522aa53d@mail.gmail.com>

Whoops... forgot the attachments.  Here they are.


On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> I would really like to be able to pass custom exceptions over the wire
> in PB.  Previous discussion on this list ended with the conclusion
> that it currently isn't possible without hacking a local copy of
> Twisted.
> 
> I have done that to get the result I want, with minimal testing, and
> would like to get some discussion going around this topic.  Attached
> are 3 test files, s.py for the server, c.py for the client, and e.py
> for the error definitions which are imported by both s.py and c.py.
> If I make the following modification to my local copy of
> twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> the custom error is passed back as I want.
> 
>   #state['value'] = str(self.value) # Exception instance
>   state['value'] = self.value # Exception instance
> 
> I was wondering if there is a reason we wouldn't want to change the
> code to check for registered unjellyables for the exception, and
> return them (or rather go through the jelly/unjelly process) if they
> exist, but return the string representation otherwise.  Maybe that is
> more complicated than I realize.
> 
> Any thoughts or suggestions on how we might make this possible?
> Thanks.
> -Justin
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: c.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041228/c55d85d8/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: e.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041228/c55d85d8/attachment-0001.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: s.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041228/c55d85d8/attachment-0002.txt 

From solipsis at pitrou.net  Wed Dec 29 05:24:10 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 29 Dec 2004 11:24:10 +0100
Subject: [Twisted-Python] access an XMLRPC service through an HTTP proxy
Message-ID: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

I'm using twisted.web.xmlrpc.Proxy to connect to an XMLRPC service.
Unfortunately there are situations in which I have to go through an HTTP
proxy, yet there doesn't seem to be an option for this (and looking at
the code, the connection to the remote server is quite "harwired").

Is there a simple way to do this ? (write a new protocol factory
perhaps ?)
Also, is there a way to discover the OS's HTTP proxy settings ?
(especially under Windows)

Thanks

Antoine.





From solipsis at pitrou.net  Wed Dec 29 07:49:17 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 29 Dec 2004 13:49:17 +0100
Subject: [Twisted-Python] access an XMLRPC service through an HTTP proxy
In-Reply-To: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1104324558.1161.5.camel@p-dhcp-333-72.rd.francetelecom.fr>


> I'm using twisted.web.xmlrpc.Proxy to connect to an XMLRPC service.
> Unfortunately there are situations in which I have to go through an HTTP
> proxy, yet there doesn't seem to be an option for this (and looking at
> the code, the connection to the remote server is quite "harwired").

Replying to myself... The following seems to work (I didn't test with
HTTPS) :

import urlparse
import twisted.web.xmlrpc as xmlrpc

class ProxiedXMLRPC:
    """
    A Proxy for making remote XML-RPC calls accross an HTTP proxy.

    Pass the URL of the remote XML-RPC server to the constructor,
    as well as the proxy host and port.

    Use proxy.callRemote('foobar', *args) to call remote method
    'foobar' with *args.
    """

    def __init__(self, reactor, url, proxy_host, proxy_port):
        self.reactor = reactor
        self.url = url
        self.proxy_host = proxy_host
        self.proxy_port = proxy_port
        parts = urlparse.urlparse(url)
        self.remote_host = parts[1]
        self.secure = parts[0] == 'https'

    def callRemote(self, method, *args):
        factory = xmlrpc.QueryFactory(self.url, self.remote_host, method, *args)
        if self.secure:
            from twisted.internet import ssl
            self.reactor.connectSSL(self.proxy_host, self.proxy_port,
                               factory, ssl.ClientContextFactory())
        else:
            self.reactor.connectTCP(self.proxy_host, self.proxy_port, factory)
        return factory.deferred


Regards

Antoine.





From justinjohnson at gmail.com  Wed Dec 29 09:56:48 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 08:56:48 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e70412281234522aa53d@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
Message-ID: <94a776e70412290656149280cd@mail.gmail.com>

Attached is a patch with modifications to pb.py and jelly.py.  With
the patch applied, CopyableFailure.getStateToCopy first checks to see
if the actual exception instance's class has an unjellyable registered
so it can be unjellied on the other side.  If it does, the actual
exception instance is passed back as failure.value.  Otherwise a
string representation is passed back as it is today.

I'd like some confirmation that this is an acceptable approach.  If so
I will gladly submit an enhancement and attach the patch.

-Justin


On Tue, 28 Dec 2004 14:34:02 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Whoops... forgot the attachments.  Here they are.
> 
> 
> On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > I would really like to be able to pass custom exceptions over the wire
> > in PB.  Previous discussion on this list ended with the conclusion
> > that it currently isn't possible without hacking a local copy of
> > Twisted.
> >
> > I have done that to get the result I want, with minimal testing, and
> > would like to get some discussion going around this topic.  Attached
> > are 3 test files, s.py for the server, c.py for the client, and e.py
> > for the error definitions which are imported by both s.py and c.py.
> > If I make the following modification to my local copy of
> > twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> > the custom error is passed back as I want.
> >
> >   #state['value'] = str(self.value) # Exception instance
> >   state['value'] = self.value # Exception instance
> >
> > I was wondering if there is a reason we wouldn't want to change the
> > code to check for registered unjellyables for the exception, and
> > return them (or rather go through the jelly/unjelly process) if they
> > exist, but return the string representation otherwise.  Maybe that is
> > more complicated than I realize.
> >
> > Any thoughts or suggestions on how we might make this possible?
> > Thanks.
> > -Justin
> >
> 
> 
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041229/0184d235/attachment.txt 

From justinjohnson at gmail.com  Wed Dec 29 10:20:40 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 09:20:40 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e70412290656149280cd@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
Message-ID: <94a776e704122907202ca18c98@mail.gmail.com>

Submitted Issue844.

On Wed, 29 Dec 2004 08:56:48 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Attached is a patch with modifications to pb.py and jelly.py.  With
> the patch applied, CopyableFailure.getStateToCopy first checks to see
> if the actual exception instance's class has an unjellyable registered
> so it can be unjellied on the other side.  If it does, the actual
> exception instance is passed back as failure.value.  Otherwise a
> string representation is passed back as it is today.
> 
> I'd like some confirmation that this is an acceptable approach.  If so
> I will gladly submit an enhancement and attach the patch.
> 
> -Justin
> 
> On Tue, 28 Dec 2004 14:34:02 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > Whoops... forgot the attachments.  Here they are.
> >
> >
> > On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
> > <justinjohnson at gmail.com> wrote:
> > > I would really like to be able to pass custom exceptions over the wire
> > > in PB.  Previous discussion on this list ended with the conclusion
> > > that it currently isn't possible without hacking a local copy of
> > > Twisted.
> > >
> > > I have done that to get the result I want, with minimal testing, and
> > > would like to get some discussion going around this topic.  Attached
> > > are 3 test files, s.py for the server, c.py for the client, and e.py
> > > for the error definitions which are imported by both s.py and c.py.
> > > If I make the following modification to my local copy of
> > > twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> > > the custom error is passed back as I want.
> > >
> > >   #state['value'] = str(self.value) # Exception instance
> > >   state['value'] = self.value # Exception instance
> > >
> > > I was wondering if there is a reason we wouldn't want to change the
> > > code to check for registered unjellyables for the exception, and
> > > return them (or rather go through the jelly/unjelly process) if they
> > > exist, but return the string representation otherwise.  Maybe that is
> > > more complicated than I realize.
> > >
> > > Any thoughts or suggestions on how we might make this possible?
> > > Thanks.
> > > -Justin
> > >
> >
> >
> >
> 
> 
>



From db3l at fitlinxx.com  Wed Dec 29 14:15:57 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 14:15:57 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
Message-ID: <uzmzwex02.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Attached is a patch with modifications to pb.py and jelly.py.  With
> the patch applied, CopyableFailure.getStateToCopy first checks to see
> if the actual exception instance's class has an unjellyable registered
> so it can be unjellied on the other side.  If it does, the actual
> exception instance is passed back as failure.value.  Otherwise a
> string representation is passed back as it is today.

I think the one big risk with this approach is that I'm not sure a
sender can ever know accurately whether a recipient will be able to
unjelly a particular instance.  In your case, you're assuming the two
sides are symmetrical and have imported the same definitions, but that
need not be the case.  At least in general, it's certainly possible
for the transmitting side to not have the unjellier registered (if it
never expects to receive such objects back, for example).  Or
conversely, the sender may have an unjellier registered but the
recipient won't.  In this latter case you'd get an exception on the
remote side which sending the string would have avoided.

One alternative approach to handle this is to transmit both the string
and instance representation, and then let the decoding side trap any
unjellier security exceptions and fall back to the string
representation.  The big question of course is whether such a fallback
should be automatic, silent, etc..

Another option would be to provide some sort of configurability
(perhaps something along the lines of how unsafe traceback support is
handled) so an application could make the choice of what mode to
operate in, either string names, or full instances (and the latter
just has to have unjelliers registered just as for any other remotes).

I'm sort of in the same state you are in, in that for me the simplest
approach is just transmit the instance because my two sides are in
fact symmetric.  So the short internal change to local source works
fine for me too.  But I think that any general addition to the twisted
base needs to take the more general proposition (and issues) into account.

-- David




From justinjohnson at gmail.com  Wed Dec 29 14:47:48 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 13:47:48 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uzmzwex02.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
Message-ID: <94a776e704122911477e36fb72@mail.gmail.com>

Thanks for the reply.

In my testing it seemed that I would get an InsecureJelly error on the
sending side if I tried to send back an object that I hadn't called
pb.setUnjellyableForClass on the sending side for.  In other words,
calling setUnjellyableForClass on the sending side was a way of saying
that it was okay to send over the wire, and also a way of registering
what class to use when unjellying it if it were received.

Is this not correct?


On 29 Dec 2004 14:15:57 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Attached is a patch with modifications to pb.py and jelly.py.  With
> > the patch applied, CopyableFailure.getStateToCopy first checks to see
> > if the actual exception instance's class has an unjellyable registered
> > so it can be unjellied on the other side.  If it does, the actual
> > exception instance is passed back as failure.value.  Otherwise a
> > string representation is passed back as it is today.
> 
> I think the one big risk with this approach is that I'm not sure a
> sender can ever know accurately whether a recipient will be able to
> unjelly a particular instance.  In your case, you're assuming the two
> sides are symmetrical and have imported the same definitions, but that
> need not be the case.  At least in general, it's certainly possible
> for the transmitting side to not have the unjellier registered (if it
> never expects to receive such objects back, for example).  Or
> conversely, the sender may have an unjellier registered but the
> recipient won't.  In this latter case you'd get an exception on the
> remote side which sending the string would have avoided.
>
> One alternative approach to handle this is to transmit both the string
> and instance representation, and then let the decoding side trap any
> unjellier security exceptions and fall back to the string
> representation.  The big question of course is whether such a fallback
> should be automatic, silent, etc..
> 
> Another option would be to provide some sort of configurability
> (perhaps something along the lines of how unsafe traceback support is
> handled) so an application could make the choice of what mode to
> operate in, either string names, or full instances (and the latter
> just has to have unjelliers registered just as for any other remotes).
> 
> I'm sort of in the same state you are in, in that for me the simplest
> approach is just transmit the instance because my two sides are in
> fact symmetric.  So the short internal change to local source works
> fine for me too.  But I think that any general addition to the twisted
> base needs to take the more general proposition (and issues) into account.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radeex at gmail.com  Wed Dec 29 17:06:06 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 30 Dec 2004 09:06:06 +1100
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uzmzwex02.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
Message-ID: <60ed19d4041229140616fbc760@mail.gmail.com>

On 29 Dec 2004 14:15:57 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> I think the one big risk with this approach is that I'm not sure a
> sender can ever know accurately whether a recipient will be able to
> unjelly a particular instance.  In your case, you're assuming the two
> sides are symmetrical and have imported the same definitions, but that
> need not be the case.  At least in general, it's certainly possible
> for the transmitting side to not have the unjellier registered (if it
> never expects to receive such objects back, for example).  Or
> conversely, the sender may have an unjellier registered but the
> recipient won't.  In this latter case you'd get an exception on the
> remote side which sending the string would have avoided.

Why's that actually a risk? In any case where a PB app uses Copyable
and suchlike, that assumption is made. If someone is marking an
exception as jellyable, then they know that their clients should also
be able to unjelly that exception, and it will be a part of the
protocol.

> Another option would be to provide some sort of configurability
> (perhaps something along the lines of how unsafe traceback support is
> handled) so an application could make the choice of what mode to
> operate in, either string names, or full instances (and the latter
> just has to have unjelliers registered just as for any other remotes).

That's exactly what the patch would do, AIUI. On the server side, you
can set unsafeTracebacks if you want tracebacks to be sent to the
client. The server side can also set an exception class as jellyable
if you want to send exception instances to the client.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From db3l at fitlinxx.com  Wed Dec 29 20:38:05 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 20:38:05 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<60ed19d4041229140616fbc760@mail.gmail.com>
Message-ID: <umzvwefb6.fsf@fitlinxx.com>

Christopher Armstrong <radeex at gmail.com> writes:

(...)
> Why's that actually a risk? In any case where a PB app uses Copyable
> and suchlike, that assumption is made. If someone is marking an
> exception as jellyable, then they know that their clients should also
> be able to unjelly that exception, and it will be a part of the
> protocol.

Yeah, that's reasonable.  It doesn't cover a desire to transmit system
exceptions (e.g., we sometimes reuse ValueError rather than redefining our
own version of it), but at worst you'd just need to build a mirror
hierarchy for those system exceptions you might reuse.

(...)
> That's exactly what the patch would do, AIUI. On the server side, you
> can set unsafeTracebacks if you want tracebacks to be sent to the
> client. The server side can also set an exception class as jellyable
> if you want to send exception instances to the client.

Well, the patch is checking the unjelly registry to make the encoding
decision on the server side, which I don't think is the same thing as
what you're saying.  To check for whether the exception was marked as
jellyable, it should be checking for a subclass of Jellyable and not
looking in the unjelly registry (I think).

But yeah, if the patch looked for a Jellyable subclass (which is the
same thing the normal _Jellier class does when jellying anything
else), I think that would be a reasonable approach.

-- David





From db3l at fitlinxx.com  Wed Dec 29 21:31:17 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 21:31:17 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
Message-ID: <uis6kecui.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> In my testing it seemed that I would get an InsecureJelly error on the
> sending side if I tried to send back an object that I hadn't called
> pb.setUnjellyableForClass on the sending side for.  In other words,
> calling setUnjellyableForClass on the sending side was a way of saying
> that it was okay to send over the wire, and also a way of registering
> what class to use when unjellying it if it were received.
> 
> Is this not correct?

I believe the only purpose of setUnjellyableForClass is to establish
what to do for unjellying.  While it does also impact the global
security options (which do get checked during jellying) the way it
stores type information in there is only matched during unjellying, at
least in my experience (it adds permission for the type but not the
instance).

I believe the only (typical) requirement to support jellying an object
is that it be a class that is a jelly.Jellyable subclass (such as any
of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
else should be needed on the server side.

I just tried a quick tweak to your s/e/c.py modules so that s.py
returned an instance of a dummy class defined in e.py instead of an
error, and it seems to work fine even if the server side (s) hasn't
issued the setUnjellyableForClass call.  Without that call, the client
will raise the error after receiving the object.  And even if the
server does issue that call, if the dummy class isn't inheriting from
Copyable, the insecure error is generated on the transmitting side.

It is, however, possible to insert additional types/classes/modules
into the global security options independent of class inheritance from
Jellyable.  This is how all the basic Python types are handled, but it
can be extended to support your own classes (although I had a problem
with extension classes/types, since I originally tried to use this to
support mxDateTime objects without modifying jelly).

So for example, if I have my test class "MyObject" in e.py, and
instead of setUnjellyableForClass, I use something like
"jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
will still be successfully sent and received (providing the instance
data can also be jellied).

So after writing this, the fact that the security options could get
used to permit an instance (that isn't of a subclass of Jellyable) to
be encoded might mean that just verifying Jellyable (ala my last
response to Christopher) is insufficient, at least technically.

Perhaps the only true way to determine if something is jellyable is to
try to jelly it (heck, that's probably more Pythonic anyway), and just
handle an exception as a fallback to the string representation.

-- David




From solipsis at pitrou.net  Thu Dec 30 09:44:32 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 30 Dec 2004 15:44:32 +0100
Subject: [Twisted-Python] ludicrous timeouts in protocols.http.HTTPFactory
	and web.server.Site
Message-ID: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

I'm accessing a twisted-based XMLRPC server through an HTTP proxy which
seems to leave outgoing connections open for a very long time (I think
it waits for the server to close them on its own). This means that after
a handful of remote method calls through this proxy, my server runs into
file descriptor limits:

Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 535, in _doReadOrWrite
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line 625, in doRead
  File "/usr/src/build/475206-i386/install/usr/lib/python2.3/socket.py", line 167, in accept
socket.error: (24, 'Too many open files')

Which is easily checked by a netstat dump :

$ netstat --inet --tcp -n -p | grep :8550
tcp        0      0 192.33.178.29:8550          193.49.124.107:30839        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:25463        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:37494        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:33910        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:20854        ESTABLISHED 3076/python 
...
... and so on for exactly 998 lines


Looking at the Twisted code, I see that very long timeouts have been
defined for both protocols.http.HTTPFactory and web.server.Site
(60*60*12, that is 12 hours!). If I override the "timeout" parameter
when constructing the Site receiving XMLRPC connections, then the
problem disappears:
        reactor.listenTCP(xmlrpc_port, server.Site(self, timeout=30), interface=xmlrpc_host)

I think the default values in Twisted are quite bogus and should be
changed to more sensible ones. 30 or 60 seconds is ok in the context of
an HTTP connection. Very long timeouts on the other hand make the server
very vulnerable.

Regards

Antoine.





From justinjohnson at gmail.com  Thu Dec 30 10:48:17 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 09:48:17 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uis6kecui.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
Message-ID: <94a776e7041230074867d17cc6@mail.gmail.com>

I agree.  I did some testing to verify what you were saying.  So this
is basically reiterating everything you just said, but just for
clarification for myself... in the current non-patched code the
following happens:

When the server encounters an error while calling a method that was
invoked from a remote client, it will...
   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
replacing actual pb.Error instances with a string representation of
them.
   2) Return a new (non-wrapping) pb.CopyableFailure for all other
errors, thus including stack trace, etc.

When the server needs to send anything else back to the client, if it
is a subclass of flavors.Jellyable it sends it back.  Otherwise it
raises InsecureJelly on the server side.

On the client side it will unjelly the thing sent across if it can
(i.e. if setUnjellyableForClass was called).  Otherwise it raises an
InsecureJelly on the client side.

So it seems like these are our options:

1) If an error is Jellyable, send it and assume the client will either
unjelly it or deal with unjellying errors.

2) If an error is Jellyable, send it.  If the client fails to unjelly
it, communicate back to the server who then sends a CopyableFailure
wrapping the original error.

3) If an error is Jellyable, send both it and a CopyableFailure
wrapping the original error.  The client can then first try to unjelly
the error and fall back to the CopyableFailure that was passed along.


I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.

-Justin


On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > In my testing it seemed that I would get an InsecureJelly error on the
> > sending side if I tried to send back an object that I hadn't called
> > pb.setUnjellyableForClass on the sending side for.  In other words,
> > calling setUnjellyableForClass on the sending side was a way of saying
> > that it was okay to send over the wire, and also a way of registering
> > what class to use when unjellying it if it were received.
> >
> > Is this not correct?
> 
> I believe the only purpose of setUnjellyableForClass is to establish
> what to do for unjellying.  While it does also impact the global
> security options (which do get checked during jellying) the way it
> stores type information in there is only matched during unjellying, at
> least in my experience (it adds permission for the type but not the
> instance).
> 
> I believe the only (typical) requirement to support jellying an object
> is that it be a class that is a jelly.Jellyable subclass (such as any
> of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> else should be needed on the server side.
> 
> I just tried a quick tweak to your s/e/c.py modules so that s.py
> returned an instance of a dummy class defined in e.py instead of an
> error, and it seems to work fine even if the server side (s) hasn't
> issued the setUnjellyableForClass call.  Without that call, the client
> will raise the error after receiving the object.  And even if the
> server does issue that call, if the dummy class isn't inheriting from
> Copyable, the insecure error is generated on the transmitting side.
> 
> It is, however, possible to insert additional types/classes/modules
> into the global security options independent of class inheritance from
> Jellyable.  This is how all the basic Python types are handled, but it
> can be extended to support your own classes (although I had a problem
> with extension classes/types, since I originally tried to use this to
> support mxDateTime objects without modifying jelly).
> 
> So for example, if I have my test class "MyObject" in e.py, and
> instead of setUnjellyableForClass, I use something like
> "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> will still be successfully sent and received (providing the instance
> data can also be jellied).
> 
> So after writing this, the fact that the security options could get
> used to permit an instance (that isn't of a subclass of Jellyable) to
> be encoded might mean that just verifying Jellyable (ala my last
> response to Christopher) is insufficient, at least technically.
> 
> Perhaps the only true way to determine if something is jellyable is to
> try to jelly it (heck, that's probably more Pythonic anyway), and just
> handle an exception as a fallback to the string representation.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From justinjohnson at gmail.com  Thu Dec 30 10:57:49 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 09:57:49 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e7041230074867d17cc6@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
Message-ID: <94a776e704123007572b3dc57b@mail.gmail.com>

Option 1 is also most like the way things work today for sending
anything that isn't an error.  The only reason CopyableFailure exists
is because you HAVE to send a failure.  Whether it is
jelly/unjellyable or not, the other end must be informed of errors. 
But as soon as a developer decides to make their errors copyable, they
have in effect agreed that they are responsible for testing the
unjellying on the other end.


On Thu, 30 Dec 2004 09:48:17 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> I agree.  I did some testing to verify what you were saying.  So this
> is basically reiterating everything you just said, but just for
> clarification for myself... in the current non-patched code the
> following happens:
> 
> When the server encounters an error while calling a method that was
> invoked from a remote client, it will...
>   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
> replacing actual pb.Error instances with a string representation of
> them.
>   2) Return a new (non-wrapping) pb.CopyableFailure for all other
> errors, thus including stack trace, etc.
> 
> When the server needs to send anything else back to the client, if it
> is a subclass of flavors.Jellyable it sends it back.  Otherwise it
> raises InsecureJelly on the server side.
> 
> On the client side it will unjelly the thing sent across if it can
> (i.e. if setUnjellyableForClass was called).  Otherwise it raises an
> InsecureJelly on the client side.
> 
> So it seems like these are our options:
> 
> 1) If an error is Jellyable, send it and assume the client will either
> unjelly it or deal with unjellying errors.
> 
> 2) If an error is Jellyable, send it.  If the client fails to unjelly
> it, communicate back to the server who then sends a CopyableFailure
> wrapping the original error.
> 
> 3) If an error is Jellyable, send both it and a CopyableFailure
> wrapping the original error.  The client can then first try to unjelly
> the error and fall back to the CopyableFailure that was passed along.
> 
> I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.
> 
> -Justin
> 
> 
> On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> > Justin Johnson <justinjohnson at gmail.com> writes:
> >
> > > In my testing it seemed that I would get an InsecureJelly error on the
> > > sending side if I tried to send back an object that I hadn't called
> > > pb.setUnjellyableForClass on the sending side for.  In other words,
> > > calling setUnjellyableForClass on the sending side was a way of saying
> > > that it was okay to send over the wire, and also a way of registering
> > > what class to use when unjellying it if it were received.
> > >
> > > Is this not correct?
> >
> > I believe the only purpose of setUnjellyableForClass is to establish
> > what to do for unjellying.  While it does also impact the global
> > security options (which do get checked during jellying) the way it
> > stores type information in there is only matched during unjellying, at
> > least in my experience (it adds permission for the type but not the
> > instance).
> >
> > I believe the only (typical) requirement to support jellying an object
> > is that it be a class that is a jelly.Jellyable subclass (such as any
> > of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> > else should be needed on the server side.
> >
> > I just tried a quick tweak to your s/e/c.py modules so that s.py
> > returned an instance of a dummy class defined in e.py instead of an
> > error, and it seems to work fine even if the server side (s) hasn't
> > issued the setUnjellyableForClass call.  Without that call, the client
> > will raise the error after receiving the object.  And even if the
> > server does issue that call, if the dummy class isn't inheriting from
> > Copyable, the insecure error is generated on the transmitting side.
> >
> > It is, however, possible to insert additional types/classes/modules
> > into the global security options independent of class inheritance from
> > Jellyable.  This is how all the basic Python types are handled, but it
> > can be extended to support your own classes (although I had a problem
> > with extension classes/types, since I originally tried to use this to
> > support mxDateTime objects without modifying jelly).
> >
> > So for example, if I have my test class "MyObject" in e.py, and
> > instead of setUnjellyableForClass, I use something like
> > "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> > will still be successfully sent and received (providing the instance
> > data can also be jellied).
> >
> > So after writing this, the fact that the security options could get
> > used to permit an instance (that isn't of a subclass of Jellyable) to
> > be encoded might mean that just verifying Jellyable (ala my last
> > response to Christopher) is insufficient, at least technically.
> >
> > Perhaps the only true way to determine if something is jellyable is to
> > try to jelly it (heck, that's probably more Pythonic anyway), and just
> > handle an exception as a fallback to the string representation.
> >
> > -- David
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From justinjohnson at gmail.com  Thu Dec 30 11:27:26 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 10:27:26 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e704123007572b3dc57b@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
Message-ID: <94a776e70412300827a0ec69d@mail.gmail.com>

A new patch is attached.


On Thu, 30 Dec 2004 09:57:49 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Option 1 is also most like the way things work today for sending
> anything that isn't an error.  The only reason CopyableFailure exists
> is because you HAVE to send a failure.  Whether it is
> jelly/unjellyable or not, the other end must be informed of errors.
> But as soon as a developer decides to make their errors copyable, they
> have in effect agreed that they are responsible for testing the
> unjellying on the other end.
> 
> 
> On Thu, 30 Dec 2004 09:48:17 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > I agree.  I did some testing to verify what you were saying.  So this
> > is basically reiterating everything you just said, but just for
> > clarification for myself... in the current non-patched code the
> > following happens:
> >
> > When the server encounters an error while calling a method that was
> > invoked from a remote client, it will...
> >   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
> > replacing actual pb.Error instances with a string representation of
> > them.
> >   2) Return a new (non-wrapping) pb.CopyableFailure for all other
> > errors, thus including stack trace, etc.
> >
> > When the server needs to send anything else back to the client, if it
> > is a subclass of flavors.Jellyable it sends it back.  Otherwise it
> > raises InsecureJelly on the server side.
> >
> > On the client side it will unjelly the thing sent across if it can
> > (i.e. if setUnjellyableForClass was called).  Otherwise it raises an
> > InsecureJelly on the client side.
> >
> > So it seems like these are our options:
> >
> > 1) If an error is Jellyable, send it and assume the client will either
> > unjelly it or deal with unjellying errors.
> >
> > 2) If an error is Jellyable, send it.  If the client fails to unjelly
> > it, communicate back to the server who then sends a CopyableFailure
> > wrapping the original error.
> >
> > 3) If an error is Jellyable, send both it and a CopyableFailure
> > wrapping the original error.  The client can then first try to unjelly
> > the error and fall back to the CopyableFailure that was passed along.
> >
> > I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.
> >
> > -Justin
> >
> >
> > On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> > > Justin Johnson <justinjohnson at gmail.com> writes:
> > >
> > > > In my testing it seemed that I would get an InsecureJelly error on the
> > > > sending side if I tried to send back an object that I hadn't called
> > > > pb.setUnjellyableForClass on the sending side for.  In other words,
> > > > calling setUnjellyableForClass on the sending side was a way of saying
> > > > that it was okay to send over the wire, and also a way of registering
> > > > what class to use when unjellying it if it were received.
> > > >
> > > > Is this not correct?
> > >
> > > I believe the only purpose of setUnjellyableForClass is to establish
> > > what to do for unjellying.  While it does also impact the global
> > > security options (which do get checked during jellying) the way it
> > > stores type information in there is only matched during unjellying, at
> > > least in my experience (it adds permission for the type but not the
> > > instance).
> > >
> > > I believe the only (typical) requirement to support jellying an object
> > > is that it be a class that is a jelly.Jellyable subclass (such as any
> > > of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> > > else should be needed on the server side.
> > >
> > > I just tried a quick tweak to your s/e/c.py modules so that s.py
> > > returned an instance of a dummy class defined in e.py instead of an
> > > error, and it seems to work fine even if the server side (s) hasn't
> > > issued the setUnjellyableForClass call.  Without that call, the client
> > > will raise the error after receiving the object.  And even if the
> > > server does issue that call, if the dummy class isn't inheriting from
> > > Copyable, the insecure error is generated on the transmitting side.
> > >
> > > It is, however, possible to insert additional types/classes/modules
> > > into the global security options independent of class inheritance from
> > > Jellyable.  This is how all the basic Python types are handled, but it
> > > can be extended to support your own classes (although I had a problem
> > > with extension classes/types, since I originally tried to use this to
> > > support mxDateTime objects without modifying jelly).
> > >
> > > So for example, if I have my test class "MyObject" in e.py, and
> > > instead of setUnjellyableForClass, I use something like
> > > "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> > > will still be successfully sent and received (providing the instance
> > > data can also be jellied).
> > >
> > > So after writing this, the fact that the security options could get
> > > used to permit an instance (that isn't of a subclass of Jellyable) to
> > > be encoded might mean that just verifying Jellyable (ala my last
> > > response to Christopher) is insufficient, at least technically.
> > >
> > > Perhaps the only true way to determine if something is jellyable is to
> > > try to jelly it (heck, that's probably more Pythonic anyway), and just
> > > handle an exception as a fallback to the string representation.
> > >
> > > -- David
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041230/057bd89d/attachment.txt 

From db3l at fitlinxx.com  Thu Dec 30 11:52:17 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 30 Dec 2004 11:52:17 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
Message-ID: <uekh7hgou.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> A new patch is attached.

If we're going with the instance check, I'd probably stick with
Jellyable and not Copyable (since you might have a referenceable or
viewable exception object) - that matches the actual jelly()
implementation.

I'm still wondering if just trying to jelly the object isn't the
best approach in the end though, since checking the instance class
excludes the cases where the security options permits the object
to be sent (e.g., I might use the security options to let standard
Python exceptions through without having my own Copyable subclasses).

>From a prior post of yours:

> Option 1 is also most like the way things work today for sending
> anything that isn't an error.  The only reason CopyableFailure exists

Close - option 1 (Jellyable subclass) is one half of the jellying
process - the other half is the type being allowed by the security options
and being supported by the default jelly handling of native Python types.

-- David




From justinjohnson at gmail.com  Thu Dec 30 13:25:01 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 12:25:01 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uekh7hgou.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
Message-ID: <94a776e704123010255c184077@mail.gmail.com>

Oh yeah, right.  I managed to entirely skip your comments on the
security options.

How about the attached patch?


On 30 Dec 2004 11:52:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > A new patch is attached.
> 
> If we're going with the instance check, I'd probably stick with
> Jellyable and not Copyable (since you might have a referenceable or
> viewable exception object) - that matches the actual jelly()
> implementation.
> 
> I'm still wondering if just trying to jelly the object isn't the
> best approach in the end though, since checking the instance class
> excludes the cases where the security options permits the object
> to be sent (e.g., I might use the security options to let standard
> Python exceptions through without having my own Copyable subclasses).
> 
> >From a prior post of yours:
> 
> > Option 1 is also most like the way things work today for sending
> > anything that isn't an error.  The only reason CopyableFailure exists
> 
> Close - option 1 (Jellyable subclass) is one half of the jellying
> process - the other half is the type being allowed by the security options
> and being supported by the default jelly handling of native Python types.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: new_patch.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041230/91be9acc/attachment.txt 

From pf_moore at yahoo.co.uk  Thu Dec 30 16:50:21 2004
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu, 30 Dec 2004 21:50:21 +0000
Subject: [Twisted-Python] Re: Python 2.4 compatible windows binaries?
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
	<41C74AC9.3080703@twistedmatrix.com>
Message-ID: <uacrv4fs2.fsf@yahoo.co.uk>

Cory Dodt <corydodt at twistedmatrix.com> writes:

> Twisted 2.0 will have windows binaries for Python 2.4, but there are no plans
> at this time to do those binaries for earlier versions.

I know this is probably a silly question, but what sort of timescale
is expected for Twisted 2.0?

Paul.
-- 
Never keep up with the Joneses. Drag them down to your level. --
Quentin Crisp




From andrew-twisted at puzzling.org  Thu Dec 30 18:39:23 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Dec 2004 10:39:23 +1100
Subject: [Twisted-Python] ludicrous timeouts in protocols.http.HTTPFactory
	and web.server.Site
In-Reply-To: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <20041230233923.GR5117@frobozz>

On Thu, Dec 30, 2004 at 03:44:32PM +0100, Antoine Pitrou wrote:
[...]
> Looking at the Twisted code, I see that very long timeouts have been
> defined for both protocols.http.HTTPFactory and web.server.Site
> (60*60*12, that is 12 hours!). If I override the "timeout" parameter
> when constructing the Site receiving XMLRPC connections, then the
> problem disappears:
>         reactor.listenTCP(xmlrpc_port, server.Site(self, timeout=30), interface=xmlrpc_host)
> 
> I think the default values in Twisted are quite bogus and should be
> changed to more sensible ones. 30 or 60 seconds is ok in the context of
> an HTTP connection. Very long timeouts on the other hand make the server
> very vulnerable.

One person's "reasonable" timeout is another person's "ludicrous"... this
sort of thing will need tuning per-application.  12 hours is conservative,
but highly unlikely to interfere with what anyone with pre-timeout Twisted
expects, while solving the problem twistedmatrix.com's web site was having
with the occasional connection not being closed.  And having long-running
connections mysteriously die due to a timeout setting you didn't even know
existed can be very surprising and frustrating to debug.

That said, the HTTP code is now quite careful with timeouts: it disables
them while sending the response (or more accurately, after receiving a
complete request, and then reenables them after it finishes sending the
response), so the only time a timeout can occur is while waiting for a
request to be sent -- i.e. it won't time out someone that's downloading an
ISO over a dial-up link.  So there probably is room to reduce it.

However, for very large POST requests over a slow link (ever tried to attach
a large file to your webmail over dial-up?), 30 or 60 seconds is still too
slow, but I could see an argument for, say, 30 minutes being the default.
Part of the issue here is backwards compatibility -- there may be
deployments of old versions of Twisted out there that depends on the
conservative (or no!) timeouts, and we don't want to gratuitously break
them.  If we do decide to be more aggressive by default, we need to make
this very clear in the documentation for the next version.

Regardless, if a particular application has specific needs, they can always
change the setting, just like you did.  It's not a major issue.

-Andrew.




From solipsis at pitrou.net  Fri Dec 31 04:50:44 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Fri, 31 Dec 2004 10:50:44 +0100
Subject: [Twisted-Python] ludicrous timeouts in
	protocols.http.HTTPFactory and web.server.Site
In-Reply-To: <20041230233923.GR5117@frobozz>
References: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<20041230233923.GR5117@frobozz>
Message-ID: <1104486644.1606.11.camel@p-dhcp-333-72.rd.francetelecom.fr>


> However, for very large POST requests over a slow link (ever tried to attach
> a large file to your webmail over dial-up?), 30 or 60 seconds is still too
> slow, but I could see an argument for, say, 30 minutes being the default.

Well, yes, actually it depends on which timeout we are really testing.
The timeout I had problems with is when a request has already been
answered, but the client leaves its socket open for whatever reason,
without sending or waiting for anything: so it's a case of "keepalive"
HTTP connection that is kept alive much too long, I think. I agree that
if data is being transfered in whatever direction (whether request
payload or reply payload), the connection should not be closed ;)

Since this happened with a well-known proxy server (according to the Via
header, it is "NetCache NetApp/5.6.1"), some other people might
encounter the same problem and wonder why their low traffic HTTP server
sometimes runs out of file descriptors after 30 minutes of activity. I
must insist that this happened with only _one_ client sending XMLRPC
requests every 2 or 3 seconds.


By the way, I've written a little routine to detect HTTP proxy settings.
It works under Windows and Linux, but could surely be improved. Here it
is in case it interests someone:

import urlparse

def discover_proxy():
    """
    Returns a (host, port) tuple if a proxy is found in the
    current machine configuration, (None, None) otherwise.
    """

    host_port = None

    # Un*x et al.
    if 'http_proxy' in os.environ:
        parts = urlparse.urlparse(os.environ['http_proxy'])
        if not parts[0] or parts[0] == 'http':
            host_port = parts[1]

    # Windows
    try:
        import _winreg as winreg
    except ImportError:
        pass
    else:
        try:
            # Try to grab current proxy settings from the registry
            regkey = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                'Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings')
            regval = winreg.QueryValueEx(regkey, 'ProxyServer')
            regkey.Close()
            regval = str(regval[0])
            # Regval can be of two types:
            # - 'myproxy:3128' if one proxy for all protocols
            # - 'ftp=myftpproxy:3128;http=myhttpproxy:3128;...' if several different proxies
            values = regval.split(';')
            if len(values) > 1:
                for s in values:
                    scheme, p = s.split('=')
                    if scheme == 'http':
                        host_port = p
                        break
            else:
                host_port = values[0]

        except Exception, e:
            print str(e)
            pass

    # Split host and port
    if host_port is not None:
        t = host_port.split(':')
        host = t[0].strip()
        if host:
            try:
                port = int(t[1])
            except:
                port = 80
            return host, port

    return None, None


Regards

Antoine.





From corydodt at twistedmatrix.com  Fri Dec 31 16:38:33 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Fri, 31 Dec 2004 13:38:33 -0800
Subject: [Twisted-Python] Re: Python 2.4 compatible windows binaries?
In-Reply-To: <uacrv4fs2.fsf@yahoo.co.uk>
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>	<41C74AC9.3080703@twistedmatrix.com>
	<uacrv4fs2.fsf@yahoo.co.uk>
Message-ID: <41D5C6D9.1090905@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Not silly, but not easy to answer, either.  Several of us are working on
the release whenever we have time, but there are still a few issues to
be resolved.  See tracking bug:
http://twistedmatrix.com/bugs/issue567
(also any open issues marked "urgent:next release")

and notes in:
(Twisted svn trunk)/admin/2.0.txt

C


Paul Moore wrote:
| Cory Dodt <corydodt at twistedmatrix.com> writes:
|
|
|>Twisted 2.0 will have windows binaries for Python 2.4, but there are
no plans
|>at this time to do those binaries for earlier versions.
|
|
| I know this is probably a silly question, but what sort of timescale
| is expected for Twisted 2.0?
|
| Paul.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFB1cbZ3A5SrXAiHQcRAtgAAJ9knmrDxjtWgXbmnMzVu965Qs5CzQCgi+bx
r17+0+GCdtfe8kjA/is0sgU=
=w7Vu
-----END PGP SIGNATURE-----



From patrick.mezard at ifrance.com  Wed Dec  1 06:08:28 2004
From: patrick.mezard at ifrance.com (Patrick =?utf-8?b?TcOpemFyZA==?=)
Date: Wed, 1 Dec 2004 13:08:28 +0000 (UTC)
Subject: [Twisted-Python] Remarks about the TAP to NT service tools
	(moonfallen sandbox)
Message-ID: <loom.20041201T133148-982@post.gmane.org>

Hello,
I am trying to bundle a Twisted server based on a .TAC file into an NT service. 
I finally succeeded with the distutils extension available in moonfallen 
sandbox, here are the problems I met while doing it:

1- It is said in the readme.txt that win32all is required for the extension. 
It might be a bit misleading because the ActivePython version I use has it, 
but failed to generate the distutils package. What is actually needed is a 
win32all package version suitable for py2exe. And for the py2exe 0.5.4 I use, 
it means overwriting win32all with the build 206 for instance.

2- The readme says: "You can also use all the setup options that py2exe 
allows, such as includes and data_files.". I spend some times figuring why 
the 'typelibs' options I was passing were not taken into account. Again, 
this is really a distutils issue, but I guess there are others distutils 
newbies like me around. I was passing the 'typelibs' option to 'py2exe' as 
said in py2exe wiki, instead of 'twistedservice'.
#-------
from distutils.core import setup
import ntsvc

setup(	appconfig='my.tac',
		options = {
			"twistedservice": {\
	"typelibs": [('{F5078F18-C551-11D3-89B9-0000F81FE221}', 0, 4, 0)]}
			})
#-------
works as expected.

I am aware the extension is experimental and unsupported but adding a line 
or two about the pitfalls above (which are purely distutils/py2exe related) 
into the readme may be useful for newcomers.

Besides, I actually need to specify the user account the service will use. 
I will send you patches if I managed to implement this, but I guess I need 
to be a bit more knowledgeable about the distutils and win32all service 
wrapper frameworks.

Thank you for the extension anyway, it's definitely useful and usable.

Patrick Mézard






From njp at njp.us  Wed Dec  1 11:12:18 2004
From: njp at njp.us (Norm Petterson)
Date: Wed, 1 Dec 2004 13:12:18 -0500
Subject: [Twisted-Python] Controlling twisted logging
Message-ID: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>

Hello,

Having just spent some time trying to "turn off" twisted logging via
log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted app
that initially logs to an actual file, it seems that
log.startLogging(log.NullFile()) only works as expected if no previous
startLogging call using a valid file object has been made. Otherwise,
messages continue to be logged.

Is this observation correct, or am I overlooking some way to enable logging
to a logfile and subsequently disable it? In my above experiments,
log.discardLogs() seemed to have no effect either once valid file logging
had been initiated with log.startLogging.

Win2K, Python 2.3.3, Twisted 1.3.0

Thanks for any info,

Norm Petterson




From corydodt at twistedmatrix.com  Wed Dec  1 11:39:31 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 01 Dec 2004 10:39:31 -0800
Subject: [Twisted-Python] Remarks about the TAP to NT service
	tools	(moonfallen sandbox)
In-Reply-To: <loom.20041201T133148-982@post.gmane.org>
References: <loom.20041201T133148-982@post.gmane.org>
Message-ID: <41AE0FE3.3030303@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Good feedback.  I have made the suggested changes to README.txt.  You'll note
that in TODO.txt one of the things the options should be able to grok are
usernames.

C

Patrick Mézard wrote:
| Hello,
| [...]
| I am aware the extension is experimental and unsupported but adding a line
| or two about the pitfalls above (which are purely distutils/py2exe related)
| into the readme may be useful for newcomers.
|
| Besides, I actually need to specify the user account the service will use.
| I will send you patches if I managed to implement this, but I guess I need
| to be a bit more knowledgeable about the distutils and win32all service
| wrapper frameworks.
|
| Thank you for the extension anyway, it's definitely useful and usable.
|
| Patrick Mézard
|
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBrg/j3A5SrXAiHQcRAuV5AKCjgQK+8ZCYhpb/2Xac+iUMXOr42QCgnAE2
lnkvwgsN6dbJVcLOHG2fvMI=
=77r8
-----END PGP SIGNATURE-----



From teratorn at twistedmatrix.com  Wed Dec  1 19:10:23 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 01 Dec 2004 20:10:23 -0600
Subject: [Twisted-Python] Controlling twisted logging
In-Reply-To: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
References: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
Message-ID: <opsicyzljhy3d107@localhost.localdomain>

Norm Petterson wrote:

> Hello,
>
> Having just spent some time trying to "turn off" twisted logging via
> log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted  
> app
> that initially logs to an actual file, it seems that
> log.startLogging(log.NullFile()) only works as expected if no previous
> startLogging call using a valid file object has been made. Otherwise,
> messages continue to be logged.

It seems the best documentation is the source!

startLogging will create a FileLogObserver that wraps the passed in
file-object. The "emit"
method of that FileLogObserver gets added to the *list* of observers.

So startLogging does not stop things being logged to files that you passed
in
on previous calls to startLogging.

If you want to be able to start logging on a given file then you need to
be more explicit
about what objects are getting created. For example:
(untested)

flo = FileLogObserver(file)
startLoggingWithObserver(flo.emit)

then later you can do, e.g.

flo.stop()

then later

flo.start()


> Is this observation correct, or am I overlooking some way to enable  
> logging
> to a logfile and subsequently disable it?

Looks like correct behavior to me.

> In my above experiments,
> log.discardLogs() seemed to have no effect either once valid file logging
> had been initiated with log.startLogging.

Yeah, have a glace at the implementation of discardLogs()

-Eric






From teratorn at twistedmatrix.com  Wed Dec  1 21:14:55 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 01 Dec 2004 22:14:55 -0600
Subject: [Twisted-Python] Controlling twisted logging
In-Reply-To: <opsicyzljhy3d107@localhost.localdomain>
References: <003b01c4d7d1$4b852450$6501a8c0@njpdesk>
	<opsicyzljhy3d107@localhost.localdomain>
Message-ID: <opsic4q5wjy3d107@localhost.localdomain>

Eric Mangold wrote:

> Norm Petterson wrote:
>
>> Hello,
>>
>> Having just spent some time trying to "turn off" twisted logging via
>> log.discardLogs() and/or log.startLogging(log.NullFile()) in a twisted  
>> app
>> that initially logs to an actual file, it seems that
>> log.startLogging(log.NullFile()) only works as expected if no previous
>> startLogging call using a valid file object has been made. Otherwise,
>> messages continue to be logged.
>
> It seems the best documentation is the source!
>
> startLogging will create a FileLogObserver that wraps the passed in
> file-object. The "emit"
> method of that FileLogObserver gets added to the *list* of observers.
>
> So startLogging does not stop things being logged to files that you  
> passed
> in
> on previous calls to startLogging.
>
> If you want to be able to start logging on a given file then you need to

Err, I meant to say *stop* logging on a given file...

> be more explicit
> about what objects are getting created. For example:
> (untested)
>
> flo = FileLogObserver(file)
> startLoggingWithObserver(flo.emit)
>
> then later you can do, e.g.
>
> flo.stop()
>
> then later
>
> flo.start()
>
>
>> Is this observation correct, or am I overlooking some way to enable  
>> logging
>> to a logfile and subsequently disable it?
>
> Looks like correct behavior to me.
>
>> In my above experiments,
>> log.discardLogs() seemed to have no effect either once valid file  
>> logging
>> had been initiated with log.startLogging.
>
> Yeah, have a glace at the implementation of discardLogs()
>
> -Eric






From hoxide_dirac at yahoo.com.cn  Thu Dec  2 00:19:29 2004
From: hoxide_dirac at yahoo.com.cn (Hoxide Ma)
Date: Thu, 2 Dec 2004 15:19:29 +0800 (CST)
Subject: [Twisted-Python] a byte message frame in twisted 
Message-ID: <20041202071929.5932.qmail@web15707.mail.cnb.yahoo.com>

it just an test,  no any document.
http://wiki.woodpecker.org.cn/moin.cgi/Compass_20core
 
the project is developed by chinese. 
 



---------------------------------
Do You Yahoo!?
150万曲MP3疯狂搜，带您闯入音乐殿堂
美女明星应有尽有，搜遍美图、艳图和酷图
1G就是1000兆，雅虎电邮自助扩容！
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041202/3f9901d1/attachment.html>

From bruce at cubik.org  Thu Dec  2 11:54:42 2004
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 02 Dec 2004 11:54:42 -0700
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
Message-ID: <41AF64F2.8040908@cubik.org>

Hello everyone,

I've got an app that runs on Twisted 1.0.7rc1 and I'd like to get it 
running on something more current.  Should I be looking at 1.3.0 or is 
the trunk getting close to a 2.0 release?  How stable is the trunk?

One of the main fixes that I'm interested in is some of the performance 
improvements to the data buffering as a result of some issues that I had 
  last year.

Also, what is the recommended reactor these days for a system that 
receives a good bit of load, both from the external world and from 
within a cluster of Twisted-using systems that communicate over PB? (We 
use Linux.)

Have there been any major API changes that would break code, especially 
stuff that used PB?  (Does cBanana still work? It apparently isn't 
automatically used any longer...)

Long ago, I had some woven-using code, but then that was deprecated in 
favor of nevow.  What's the current recommendation in this area?

On the other hand, it looks like there are lots of cool additions to 
Twisted, like the waitForDeferred stuff, that would greatly simplify 
some of our code.

I didn't see any obvious place to look for most of this info and the 
changelog isn't really the right level of granularity, so any help would 
be much appreciated.

  - Bruce




From itamar at itamarst.org  Thu Dec  2 16:21:38 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Dec 2004 18:21:38 -0500
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
In-Reply-To: <41AF64F2.8040908@cubik.org>
References: <41AF64F2.8040908@cubik.org>
Message-ID: <1102029698.24698.83.camel@sheriffpony>

On Thu, 2004-12-02 at 11:54 -0700, Bruce Mitchener wrote:

> I've got an app that runs on Twisted 1.0.7rc1 and I'd like to get it 
> running on something more current.  Should I be looking at 1.3.0 or is 
> the trunk getting close to a 2.0 release?  How stable is the trunk?

Trunk is pretty stable, but you'd have to do a manual copy of some sort
to install, setup.py may no longer work.

> One of the main fixes that I'm interested in is some of the performance 
> improvements to the data buffering as a result of some issues that I had 
>   last year.

That's 2.0 only, yeah.

> Also, what is the recommended reactor these days for a system that 
> receives a good bit of load, both from the external world and from 
> within a cluster of Twisted-using systems that communicate over PB? (We 
> use Linux.)

Still pollreactor.

> Have there been any major API changes that would break code, especially 
> stuff that used PB?  (Does cBanana still work? It apparently isn't 
> automatically used any longer...)

Probably not, but best to just try it and run. cBanana may have been
disabled for security reasons, I forget.

> Long ago, I had some woven-using code, but then that was deprecated in 
> favor of nevow.  What's the current recommendation in this area?

Ask on the twisted-web list, but it's still nevow.

> I didn't see any obvious place to look for most of this info and the 
> changelog isn't really the right level of granularity, so any help would 
> be much appreciated.

We certainly haven't added any major incompatible changes intentionally,
but that doesn't guarantee the software will work. Best to try and see.




From exarkun at divmod.com  Thu Dec  2 19:48:19 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 03 Dec 2004 02:48:19 GMT
Subject: [Twisted-Python] Updating from Ancient Twisted to Current Twisted
In-Reply-To: <1102029698.24698.83.camel@sheriffpony>
Message-ID: <20041203024819.1203.1410496871.divmod.quotient.914@ohm>

On Thu, 02 Dec 2004 18:21:38 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2004-12-02 at 11:54 -0700, Bruce Mitchener wrote:
> 
> [snip]
> 
> > Have there been any major API changes that would break code, especially 
> > stuff that used PB?  (Does cBanana still work? It apparently isn't 
> > automatically used any longer...)
> 
> Probably not, but best to just try it and run. cBanana may have been
> disabled for security reasons, I forget.
> 

  Yes.  I found a memory management problem in it.  The bug has been fixed, but I still didn't trust the module enough to leave it enabled by default.  It can still be enabled manually, of course.  It should probably be rewritten in Pyrex, or something.

  Jp



From prabaharpython at yahoo.co.in  Fri Dec  3 00:02:16 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Fri, 3 Dec 2004 07:02:16 +0000 (GMT)
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203024819.1203.1410496871.divmod.quotient.914@ohm>
Message-ID: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>

Dear All,
  
         I want to know the basic details regarding
twisted.
If anybody know regarding this topic "How to use
Twisted
in Python". Otherwise anybody have basic documentation
regarding Twisted concept Please mail me.  Because
this is urgent to me

by
Prabahar
           

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From nico at tekNico.net  Fri Dec  3 00:38:21 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 03 Dec 2004 08:38:21 +0100
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
Message-ID: <cop55d$a4c$1@sea.gmane.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

>   Yes.  I found a memory management problem in it.  The bug has been...

I don't know why, but all messages generated by Quotient do not word wrap,
neither in KNode nor in groups.google.com , making them hard to read
because of the horizontal scrolling needed. Could anybody look into it?
Thanks.

- -- 
Nicola Larosa - nico at tekNico.net

School is like starting life with a 12-year jail sentence in which
bad habits are the only curriculum truly learned. I teach school
and win awards doing it. I should know. -- John Taylor Gatto, 1991

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFBsBfwXv0hgDImBm4RAsb5AJ4hotHKhNWABHAMh3HiNe6NGJ9PFACdG5eM
pPEy9sdibNqe/pTNLSPf+5k=
=OdOR
-----END PGP SIGNATURE-----




From teratorn at twistedmatrix.com  Fri Dec  3 00:46:10 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 03 Dec 2004 01:46:10 -0600
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <opsie868nky3d107@localhost.localdomain>

praba mosas wrote:

> Dear All,
>         I want to know the basic details regarding
> twisted.
> If anybody know regarding this topic "How to use
> Twisted
> in Python". Otherwise anybody have basic documentation
> regarding Twisted concept Please mail me.  Because
> this is urgent to me
>
> by
> Prabahar

Please urgently read this:
http://www.catb.org/~esr/faqs/smart-questions.html

Also of note is the web site:
http://www.twistedmatrix.com

-Eric



From orbitz at ezabel.com  Fri Dec  3 06:30:55 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 03 Dec 2004 08:30:55 -0500
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <41B06A8F.1060203@ezabel.com>

The website has a lot of how-to's and examples, including a tutorial 
which gradually gets more complex. Trying reading those.


praba mosas wrote:

>Dear All,
>  
>         I want to know the basic details regarding
>twisted.
>If anybody know regarding this topic "How to use
>Twisted
>in Python". Otherwise anybody have basic documentation
>regarding Twisted concept Please mail me.  Because
>this is urgent to me
>
>by
>Prabahar
>           
>
>________________________________________________________________________
>Yahoo! India Matrimony: Find your life partner online
>Go to: http://yahoo.shaadi.com/india-matrimony
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From foom at fuhm.net  Fri Dec  3 09:29:09 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 3 Dec 2004 11:29:09 -0500
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
In-Reply-To: <cop55d$a4c$1@sea.gmane.org>
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
	<cop55d$a4c$1@sea.gmane.org>
Message-ID: <756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>

On Dec 3, 2004, at 2:38 AM, Nicola Larosa wrote:
> I don't know why, but all messages generated by Quotient do not word 
> wrap,
> neither in KNode nor in groups.google.com , making them hard to read
> because of the horizontal scrolling needed. Could anybody look into it?
> Thanks.

Yeah, it does look like Quotient is screwing up. It should be 
word-wrapping to 79 columns and using 
http://www.ietf.org/rfc/rfc2646.txt to format the text instead of just 
sending ultra-long lines of text.

James




From michael.mata at gaigen.net  Fri Dec  3 12:29:17 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Fri, 03 Dec 2004 11:29:17 -0800
Subject: [Twisted-Python] How to use Twisted in Python
In-Reply-To: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
References: <20041203070216.23633.qmail@web8403.mail.in.yahoo.com>
Message-ID: <41B0BE8D.9040106@gaigen.net>

praba mosas wrote:

>Dear All,
>  
>         I want to know the basic details regarding
>twisted.
>If anybody know regarding this topic "How to use
>Twisted
>in Python". Otherwise anybody have basic documentation
>regarding Twisted concept Please mail me.  Because
>this is urgent to me
>
>by
>Prabahar
>  
>

Have you looked at the manual and the API documentation?  I believe both 
are included in the default installation.



From foom at fuhm.net  Fri Dec  3 12:48:14 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 3 Dec 2004 14:48:14 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <45866870-4564-11D9-88DA-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-29 18:01:56.910000:
  Bugs opened: 2   Bugs closed: 3   Total open bugs: 314 (-1)
   Critical: 1 (+0)
   Urgent: 15 (-2)
   Bug: 120 (+0)
   Feature: 116 (+1)
   Wish: 62 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
Catch and log errors in half-close protocol callback codepaths  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue807 opened by itamarst

                     ==== Feature ====
[MAIL] Proposed patch to allow smtp.sendmail() to send mail to 
non-standard ports  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue806 opened by bostik

Bugs Closed
______________________
                     ==== Urgent ====
[CORE] IOCP reactor leaks memory  (4 months ago)
        http://www.twistedmatrix.com/bugs/issue655 opened by naz, closed 
by PenguinOfDoom

[CONCH] Conch client possibly not working  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue786 opened by jknight, 
closed by jknight

[TRIAL] trial inconsistently reporting ERROR's  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue796 opened by teratorn, 
closed by jknight




From steve at blighty.com  Fri Dec  3 17:08:32 2004
From: steve at blighty.com (Steve Atkins)
Date: Fri, 3 Dec 2004 16:08:32 -0800
Subject: [Twisted-Python] Installation problems
Message-ID: <20041204000832.GA18932@gp.word-to-the-wise.com>

I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.

The biggie is that I can't find any trace of installation instructions
(pre-requisites, installation instructions) anywhere. The tarball README
refers to INSTALL, and INSTALL doesn't exist.

I attempted a simple "python setup.py build" and the build bombs out
after a while with:

    running build_scripts
    error: file 'bin/manhole' does not exist

So... help a newbie out. What am I doing wrong?

Cheers,
  Steve



From orbitz at ezabel.com  Fri Dec  3 19:43:31 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 03 Dec 2004 21:43:31 -0500
Subject: [Twisted-Python] Installation problems
In-Reply-To: <20041204000832.GA18932@gp.word-to-the-wise.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>
Message-ID: <41B12453.7080704@ezabel.com>

You can either just untar the twisted to someplace like 
/opt/local/Twisted and add that dir to your PYTHONPATH everywhere, or 
use darwinports to install. If you choose darwinports the instance of 
python it installs is in /opt/local, and the default one is in /usr/bin 
or something so you'll have to do some fiddling to use the  python it 
installs by default.  I choose the PYTHONPATH way myself, I like to just 
be able to get the latest changes to twisted via subversion or what not 
and keep all of the documentation and files together.

I have not tried to use the setup file, never really found a need for it.

Hope this helps somewhat.

Steve Atkins wrote:

>I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>
>The biggie is that I can't find any trace of installation instructions
>(pre-requisites, installation instructions) anywhere. The tarball README
>refers to INSTALL, and INSTALL doesn't exist.
>
>I attempted a simple "python setup.py build" and the build bombs out
>after a while with:
>
>    running build_scripts
>    error: file 'bin/manhole' does not exist
>
>So... help a newbie out. What am I doing wrong?
>
>Cheers,
>  Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From andrea at cpushare.com  Sat Dec  4 10:10:19 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 4 Dec 2004 18:10:19 +0100
Subject: [Twisted-Python] keyword changed API
Message-ID: <20041204171019.GG32635@dualathlon.random>

This fixes a little runtime issue with the new python version:

--- ./python/htmlizer.py.~1~	2004-11-28 05:00:05.000000000 +0100
+++ ./python/htmlizer.py	2004-12-04 18:06:06.329802464 +0100
@@ -22,7 +22,7 @@ class TokenPrinter:
             type = "identifier"
             self.parameters = 1
         elif type == tokenize.NAME:
-             if keyword.kwdict.has_key(token):
+             if keyword.iskeyword(token):
                  type = 'keyword'
              else:
                  if self.parameters:

Not sure what's the right way to fix these things to retain backwards
compatibility (perhaps checking sys.version_info?).



From exarkun at divmod.com  Sat Dec  4 10:30:27 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 04 Dec 2004 17:30:27 GMT
Subject: [Twisted-Python] keyword changed API
In-Reply-To: <20041204171019.GG32635@dualathlon.random>
Message-ID: <20041204173027.1203.730989615.divmod.quotient.2028@ohm>

On Sat, 4 Dec 2004 18:10:19 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>This fixes a little runtime issue with the new python version:
> 
> --- ./python/htmlizer.py.~1~	2004-11-28 05:00:05.000000000 +0100
> +++ ./python/htmlizer.py	2004-12-04 18:06:06.329802464 +0100
> @@ -22,7 +22,7 @@ class TokenPrinter:
>              type = "identifier"
>              self.parameters = 1
>          elif type == tokenize.NAME:
> -             if keyword.kwdict.has_key(token):
> +             if keyword.iskeyword(token):
>                   type = 'keyword'
>               else:
>                   if self.parameters:
> 
> Not sure what's the right way to fix these things to retain backwards
> compatibility (perhaps checking sys.version_info?).

  keyword.iskeyword existed in Python 2.2.0, so there seem to be no backwards compatibility problems with just switching to that.

  Thanks.

  Jp



From chris.lyon at spritenote.co.uk  Sun Dec  5 13:34:26 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Sun, 05 Dec 2004 20:34:26 +0000
Subject: [Twisted-Python] Newbie Alert ! Installation problems.
Message-ID: <41B370D2.2020603@spritenote.co.uk>

I've written an app using medusa but know feel the wind is blowing in a 
twisted way. But I'm having trouble with installation.

Windows .... everything downloads and runs nicely.
However the finger demo finger06.py & finger07.py don't find the user 
name in the dict because the username is returned with /W appended on 
the front. Is this some strange characteristic of the windows finger 
client or something I havn't discovered yet?

Linux:= neither the gz or the bz2 uncompress successfully. both failing 
with a  complaint from Ark  . .. a not very helpful .. an error occured 
whilst extracting the file. Other files have worked successfully.

Things are extracted but upon running python setup.py install  I getthe 
rather cryptic
error: file 'bin/manhole' does not exist

So I'm a little bit stumped. Anyone any idea about which aspect of my 
personnal inabilities I'm demonstrating this time?



From steve at blighty.com  Sun Dec  5 15:02:23 2004
From: steve at blighty.com (Steve Atkins)
Date: Sun, 5 Dec 2004 14:02:23 -0800
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <41B12453.7080704@ezabel.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>
	<41B12453.7080704@ezabel.com>
Message-ID: <20041205220223.GA1515@gp.word-to-the-wise.com>

> Steve Atkins wrote:
> 
> >I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
> >
> >The biggie is that I can't find any trace of installation instructions
> >(pre-requisites, installation instructions) anywhere. The tarball README
> >refers to INSTALL, and INSTALL doesn't exist.
> >
> >I attempted a simple "python setup.py build" and the build bombs out
> >after a while with:
> >
> >   running build_scripts
> >   error: file 'bin/manhole' does not exist
> >
> >So... help a newbie out. What am I doing wrong?

It turns out that the SF download site seems to be giving corrupt
tarballs. There was a bunzip error that I missed in unpacking and
a few files were missing or corrupted.

Downloading a clean tarball from twistedmatrix solved everything.

Cheers,
  Steve



From chris.lyon at spritenote.co.uk  Mon Dec  6 04:49:08 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Mon, 06 Dec 2004 11:49:08 +0000
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <20041205220223.GA1515@gp.word-to-the-wise.com>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>	<41B12453.7080704@ezabel.com>
	<20041205220223.GA1515@gp.word-to-the-wise.com>
Message-ID: <41B44734.2090906@spritenote.co.uk>

Steve Atkins wrote:

>>Steve Atkins wrote:
>>
>>    
>>
>>>I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>>>
>>>The biggie is that I can't find any trace of installation instructions
>>>(pre-requisites, installation instructions) anywhere. The tarball README
>>>refers to INSTALL, and INSTALL doesn't exist.
>>>
>>>I attempted a simple "python setup.py build" and the build bombs out
>>>after a while with:
>>>
>>>  running build_scripts
>>>  error: file 'bin/manhole' does not exist
>>>
>>>So... help a newbie out. What am I doing wrong?
>>>      
>>>
>
>It turns out that the SF download site seems to be giving corrupt
>tarballs. There was a bunzip error that I missed in unpacking and
>a few files were missing or corrupted.
>
>Downloading a clean tarball from twistedmatrix solved everything.
>
>  
>
That's actually where I got them from :(



From chris.lyon at spritenote.co.uk  Mon Dec  6 05:32:07 2004
From: chris.lyon at spritenote.co.uk (Chris Lyon)
Date: Mon, 06 Dec 2004 12:32:07 +0000
Subject: RESOLVED Re: [Twisted-Python] Installation problems
In-Reply-To: <41B44734.2090906@spritenote.co.uk>
References: <20041204000832.GA18932@gp.word-to-the-wise.com>	<41B12453.7080704@ezabel.com>	<20041205220223.GA1515@gp.word-to-the-wise.com>
	<41B44734.2090906@spritenote.co.uk>
Message-ID: <41B45147.2040100@spritenote.co.uk>

Chris Lyon wrote:

> Steve Atkins wrote:
>
>>> Steve Atkins wrote:
>>>
>>>   
>>>
>>>> I've hit some problems installing twisted 1.3.0 on OS X / python 2.4.
>>>>
>>>> The biggie is that I can't find any trace of installation instructions
>>>> (pre-requisites, installation instructions) anywhere. The tarball 
>>>> README
>>>> refers to INSTALL, and INSTALL doesn't exist.
>>>>
>>>> I attempted a simple "python setup.py build" and the build bombs out
>>>> after a while with:
>>>>
>>>>  running build_scripts
>>>>  error: file 'bin/manhole' does not exist
>>>>
>>>> So... help a newbie out. What am I doing wrong?
>>>>     
>>>
>>
>> It turns out that the SF download site seems to be giving corrupt
>> tarballs. There was a bunzip error that I missed in unpacking and
>> a few files were missing or corrupted.
>>
>> Downloading a clean tarball from twistedmatrix solved everything.
>>
>>  
>>
> That's actually where I got them from :(
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
Aaah you mean the download directory , this works !  hey hey !



From slyphon at twistedmatrix.com  Mon Dec  6 19:01:12 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 6 Dec 2004 21:01:12 -0500
Subject: [Twisted-Python] An apology to the community (outstanding trial
	bugs)
Message-ID: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>

Hi everyone,

I know that there are several trial issues outstanding and that they're 
holding up the 2.0 release. I recently got a job working in Manhattan, 
and am still adjusting to the commute and the tasks that are assigned 
to me, so I haven't had the attention or energy to devote to twisted.

On a lighter note (and adding to the distraction) I also got engaged 
this weekend. :-)

I'm not quite sure when I'll have time to clear these issues up. I will 
try to work on them during the week and hopefully have them resolved by 
next week sometime.

I am terribly sorry to have put everyone in this position.

-Jonathan




From radeex at gmail.com  Tue Dec  7 05:31:56 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 7 Dec 2004 23:31:56 +1100
Subject: [Twisted-Python] Twisted's roundup instance
Message-ID: <60ed19d4041207043128091d3e@mail.gmail.com>

I just upgraded it to 0.7.9 from 0.6.6 (!), changed it from the bsddb
backend to the sqlite backend, and made it run a persistent server
that's proxied through twistedmatrix.com's twisted.web. All this at
the advice I got from Richard Jones (roundup author) at OSDC.com.au.

The official URL for the Twisted roundup is now
"http://twistedmatrix.com/bugs/". This URL has always existed as a
convenience, but the old canonical URL
(http://twistedmatrix.com/users/roundup.twistd/) is now just a
redirect to the nice new terse one. Note that
"http://twistedmatrix.com/bugs" (i.e., the same URL without a trailing
slash) is a bit off at the moment -- I'll try to figure out a way to
get that to not blow up soon.

I also got rid of "Critical" -- now the highest issue type is
"Urgent", which was all that was documented. I was sick of people
marking their pet bugs as "Critical" when it didn't actually mean
anything.

Hopefully I'll be getting around to fixing up some other issues we've
had with our tracker, later on. In the meantime, I'll be going
actually _using_ roundup and trying to mark some of those Urgent bugs
as resolved. :-)

Thanks, Richard, for chatting with me about Roundup at OSDC. Now
everyone should be a little happier ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dpplgngr at gmail.com  Tue Dec  7 18:12:34 2004
From: dpplgngr at gmail.com (Tony Pryor)
Date: Tue, 7 Dec 2004 20:12:34 -0500
Subject: [Twisted-Python] concurrent terminals and telnet
In-Reply-To: <27c0150b04120717115ae21310@mail.gmail.com>
References: <27c0150b04120717115ae21310@mail.gmail.com>
Message-ID: <27c0150b041207171238bfe572@mail.gmail.com>

hello,

has anyone tried using twisted python to spawn multiple concurrent
telnet client consoles? i've played around with spawning concurrent
telnet consoles in perl and feel like i'm getting snared by
idiosyncracy. otoh i may just be doing something stupid.

tony



From heikki at osafoundation.org  Tue Dec  7 18:46:52 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Tue, 07 Dec 2004 17:46:52 -0800
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
Message-ID: <41B65D0C.9080705@osafoundation.org>

A while back I integrated M2Crypto into Twisted, but the architecture 
was not deemed good then (it was adding more of the SSL cruft in tcp.py 
etc.).

James Knight pointed me to TLS Lite, which had achieved similar 
functionality by using ProtocolWrapper and WrappingFactory and all the 
code was outside of Twisted. (Thanks James!)

I've now got an implementation of M2Crypto + Twisted integration using 
the TLS Lite approach - no changes in Twisted required. (Client only for 
now and not yet fully cleaned up, but all the important pieces should be 
there.)

However, I've run into some problems and I am not sure if they are bugs 
in Twisted or if I am using these interfaces wrong. Maybe you can help.

The most interesting piece of the code is my TLSProtocolWrapper that 
inherits from ProtocolWrapper. See 
http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py

Now, this seems to works perfectly with the echoclient samples when the 
SSL connection has no errors.

When there is an error in the SSL connection, and I call 
connectionLost(), I end up with a traceback that feels like it might be 
a Twisted bug. Or if I am not allowed to call that, how do I signal that 
I want to break the connection? Here's the traceback:

Traceback (most recent call last):
   File "twisted_ssl/real.py", line 71, in main
     reactor.run()
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 123, in run
     self.mainLoop()
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 134, in mainLoop
     self.doIteration(t)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 529, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\log.py", line 65, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\log.py", line 52, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\python
\context.py", line 43, in callWithContext
     return func(*args,**kw)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\default.py", line 552, in _doReadOrWrite
     selectable.connectionLost(f)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\tcp.py", line 452, in connectionLost
     Connection.connectionLost(self, reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\intern
et\tcp.py", line 295, in connectionLost
     protocol.connectionLost(reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\M2Crypto\SSL\T
wistedProtocolWrapper.py", line 207, in connectionLost
     ProtocolWrapper.connectionLost(self, reason)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\protoc
ols\policies.py", line 88, in connectionLost
     self.factory.unregisterProtocol(self)
   File 
"c:\builds\chandler\chandler\release\bin\lib\site-packages\twisted\protoc
ols\policies.py", line 127, in unregisterProtocol
     del self.protocols[p]
exceptions.KeyError: <twisted.internet.tcp.Client to 
('www.verisign.com', 443) a
t 10fa800>


When I try to hook this up into an IMAP4 client, it seems like my 
wrapper is getting bypassed somewhere. With debug on, I see:

MyProtocolWrapper.__init__
MyProtocolWrapper.makeConnection
MyProtocolWrapper.connectionMade

then nothing, until the connection finally times out. I haven't looked 
much into this one yet. Any guesses as to where I should be looking at? 
Or is it not possible to use the ProtocolWrapper here?

I can upload full source packages as well if anyone needs them.

-- 
   Heikki Toivonen


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20041207/d4c3545a/attachment.sig>

From michaelschneider at fuse.net  Tue Dec  7 19:38:12 2004
From: michaelschneider at fuse.net (Michael Schneider)
Date: Tue, 7 Dec 2004 21:38:12 -0500
Subject: [Twisted-Python] Using Windows active directory for Single Sign-on
Message-ID: <DDEBLIGOHANFDMNECHGEIEJFCFAA.michaelschneider@fuse.net>

Hello All,

I am trying to leverage Windows Active Directory (Kerberos based) on a
client, for
a single sign on. Then running a proccess as that users on a twisted daemon.


Is there some example code for
	- obtaining initial certificate
	-  verifying certificate on twisted
	- executing process as user under twisted

Thank you very much,
Mike



From radeex at gmail.com  Tue Dec  7 20:08:10 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 8 Dec 2004 14:08:10 +1100
Subject: [Twisted-Python] An apology to the community (outstanding trial
	bugs)
In-Reply-To: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>
References: <DEE5CFF1-47F3-11D9-8D81-000D932DFB0A@twistedmatrix.com>
Message-ID: <60ed19d404120719085baa1cd2@mail.gmail.com>

Speaking of trial sucking, I just committed a change to SVN that
should prevent a LOT of those lame "there is a bug in trial" errors --
Failure formatting now uses a safe repr so bugs in user __repr__
implementations won't murder trial.

On Mon, 6 Dec 2004 21:01:12 -0500, Jonathan Simms
<slyphon at twistedmatrix.com> wrote:
> Hi everyone,
> 
> I know that there are several trial issues outstanding and that they're
> holding up the 2.0 release. I recently got a job working in Manhattan,
> and am still adjusting to the commute and the tasks that are assigned
> to me, so I haven't had the attention or energy to devote to twisted.
> 
> On a lighter note (and adding to the distraction) I also got engaged
> this weekend. :-)
> 
> I'm not quite sure when I'll have time to clear these issues up. I will
> try to work on them during the week and hopefully have them resolved by
> next week sometime.
> 
> I am terribly sorry to have put everyone in this position.
> 
> -Jonathan
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From thomas at copyleft.no  Wed Dec  8 04:30:59 2004
From: thomas at copyleft.no (Thomas Kristensen)
Date: Wed, 8 Dec 2004 12:30:59 +0100 (CET)
Subject: [Twisted-Python] Questions about class KeyFactory.
Message-ID: <Pine.LNX.4.61.0412081216350.13853@home.ymera.com>

Hi,

I my a bit afraid im asking a stupid question here, I'll do it anyways
:)


(from twisted/enterprise/row.py)
class KeyFactory:
...
         warnings.warn("This is deprecated. Use the underlying database to
 	generate keys, or just roll your own.", DeprecationWarning)
...

As the warnings says this class is deprecated. Use the underlying 
database. I was wondering if anybody have some example code for this. Im 
using a PgDB.

Here's my rowObject:
class DummyRow(row.RowObject):
     rowColumns = [
         ("testId",  "int"),
         ("testName","varchar"),
         ("testData","varchar")
         ]
     rowKeyColumns    = [("testId","int")]
     rowTableName     = "dummytable"

And my sql code:

CREATE TABLE dummytable (
 	testId SERIAL PRIMARY KEY,
 	testName varchar(64),
 	testData varchar
);

So when using a sequencer to generate an unique key for testId, I dont 
need to supply testId in my insert sql statement. But twisted complains if 
i dont use the assignKeyAttr function, PG complains if I use it with a 
value thats already used (ofcourse).

My insert code

     b = DummyRow()
     b.assignKeyAttr("testId", 3)
     b.testName = "myTestName"
     b.testData = "My test data string"
     manager.insertRow(b).addCallback(onInsert)

Again if was wondering if somebody had some sample code to help me solve 
my problem or a point in the right direction.

Thanks in advance,

--Thomas



From simon at hedberg.net  Wed Dec  8 06:31:36 2004
From: simon at hedberg.net (Simon)
Date: Wed, 8 Dec 2004 14:31:36 +0100
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <Pine.LNX.4.61.0412081216350.13853@home.ymera.com>
Message-ID: <000001c4dd2a$3d8ef340$456271d5@hp>

What happens if you set the id to a zero value of some sort, such as 0,
'', NULL ?


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Thomas
Kristensen
Sent: den 8 december 2004 12:31
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Questions about class KeyFactory.


Hi,

I my a bit afraid im asking a stupid question here, I'll do it anyways
:)






From thomas at copyleft.no  Wed Dec  8 06:52:49 2004
From: thomas at copyleft.no (Thomas Kristensen)
Date: Wed, 8 Dec 2004 14:52:49 +0100 (CET)
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <000001c4dd2a$3d8ef340$456271d5@hp>
References: <000001c4dd2a$3d8ef340$456271d5@hp>
Message-ID: <Pine.LNX.4.61.0412081445150.15427@home.ymera.com>



> What happens if you set the id to a zero value of some sort, such as 0,
> '', NULL ?

I have tried that aswell, they either gives an invalid sql, or is rejected 
by PG :(

b.assignKeyAttr("testId", None) =
libpq.OperationalError: ERROR:  null value in column "testid" violates 
not-null constraint

b.assignKeyAttr("testId", 0) = 
libpq.OperationalError: ERROR:  duplicate key violates unique constraint 
"dummytable_pkey"

b.assignKeyAttr("testId", "NULL") = 
libpq.OperationalError: ERROR:  null value in column "testid" violates 
not-null constraint

b.assignKeyAttr("testId", "") =
libpq.OperationalError: ERROR:  syntax error at or near "," at character 
62


--tkk



From exarkun at divmod.com  Wed Dec  8 08:03:04 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 08 Dec 2004 15:03:04 GMT
Subject: [Twisted-Python] Using Windows active directory for Single Sign-on
In-Reply-To: <DDEBLIGOHANFDMNECHGEIEJFCFAA.michaelschneider@fuse.net>
Message-ID: <20041208150304.1203.791540441.divmod.quotient.3773@ohm>

On Tue, 7 Dec 2004 21:38:12 -0500, Michael Schneider <michaelschneider at fuse.net> wrote:
>Hello All,
> 
> I am trying to leverage Windows Active Directory (Kerberos based) on a
> client, for
> a single sign on. Then running a proccess as that users on a twisted daemon.
> 
> 
> Is there some example code for
> 	- obtaining initial certificate
> 	-  verifying certificate on twisted
> 	- executing process as user under twisted

  For those of us ignorant about Windows Active Directory,

    - what kind of certificate?  where does it come from?  does a win32 API provide it?  what's Windows Active Directory anyway, and how does it relate to your Twisted app?

    - what kind of verification?  do you need to check it against another certificate?  if so, where does that one come from?  do you need to check a signature on it?  if so, who is supposed to have signed it?  are there win32 APIs for these things?

  Regarding the last point, Twisted has one API for launching subprocesses, `reactor.spawnProcess()'.  It works on Windows, but I don't think it supports running processes as other users on Windows.

  Jp



From exarkun at divmod.com  Wed Dec  8 08:04:46 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 08 Dec 2004 15:04:46 GMT
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B65D0C.9080705@osafoundation.org>
Message-ID: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>

On Tue, 07 Dec 2004 17:46:52 -0800, Heikki Toivonen <heikki at osafoundation.org> wrote:
>A while back I integrated M2Crypto into Twisted, but the architecture 
> was not deemed good then (it was adding more of the SSL cruft in tcp.py 
> etc.).
> 
> James Knight pointed me to TLS Lite, which had achieved similar 
> functionality by using ProtocolWrapper and WrappingFactory and all the 
> code was outside of Twisted. (Thanks James!)
> 
> I've now got an implementation of M2Crypto + Twisted integration using 
> the TLS Lite approach - no changes in Twisted required. (Client only for 
> now and not yet fully cleaned up, but all the important pieces should be 
> there.)
> 
> However, I've run into some problems and I am not sure if they are bugs 
> in Twisted or if I am using these interfaces wrong. Maybe you can help.
> 
> The most interesting piece of the code is my TLSProtocolWrapper that 
> inherits from ProtocolWrapper. See 
> http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py
> 
> Now, this seems to works perfectly with the echoclient samples when the 
> SSL connection has no errors.
> 
> When there is an error in the SSL connection, and I call 
> connectionLost(), I end up with a traceback that feels like it might be 
> a Twisted bug. Or if I am not allowed to call that, how do I signal that 
> I want to break the connection? Here's the traceback:

  You should call proto.transport.loseConnection() instead of proto.connectionLost().  The former indicates to the reactor that the connection should be dropped, the latter is a callback that the reactor invokes to tell you that the connection has been dropped.

  Jp



From donovan.preston at gmail.com  Wed Dec  8 08:18:27 2004
From: donovan.preston at gmail.com (Donovan Preston)
Date: Wed, 8 Dec 2004 07:18:27 -0800
Subject: [Twisted-Python] OT: No word wrap in Quotient [was: Re: Updating
	from Ancient Twisted to Current Twisted]
In-Reply-To: <756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>
References: <1102029698.24698.83.camel@sheriffpony>
	<20041203024819.1203.1410496871.divmod.quotient.914@ohm>
	<cop55d$a4c$1@sea.gmane.org>
	<756A651A-4548-11D9-88DA-000A95A50FB2@fuhm.net>
Message-ID: <2570613d04120807184b94c122@mail.gmail.com>

On Fri, 3 Dec 2004 11:29:09 -0500, James Y Knight <foom at fuhm.net> wrote:
> On Dec 3, 2004, at 2:38 AM, Nicola Larosa wrote:
> > I don't know why, but all messages generated by Quotient do not word
> > wrap,
> > neither in KNode nor in groups.google.com , making them hard to read
> > because of the horizontal scrolling needed. Could anybody look into it?
> > Thanks.
> 
> Yeah, it does look like Quotient is screwing up. It should be
> word-wrapping to 79 columns and using
> http://www.ietf.org/rfc/rfc2646.txt to format the text instead of just
> sending ultra-long lines of text.

Yes. This is a known issue and correct format-flowed formatting from the
webui compose screen is on my list of bugfixes.

Further discussion of additional Quotient issues would best be carried out
on the divmod-dev list:

http://divmod.org/users/mailman.twistd/listinfo/divmod-dev

dp



From rich at enflyer.com  Wed Dec  8 10:02:58 2004
From: rich at enflyer.com (Rich Cavanaugh)
Date: Wed, 8 Dec 2004 12:02:58 -0500
Subject: [Twisted-Python] Questions about class KeyFactory.
In-Reply-To: <Pine.LNX.4.61.0412081445150.15427@home.ymera.com>
References: <000001c4dd2a$3d8ef340$456271d5@hp>
	<Pine.LNX.4.61.0412081445150.15427@home.ymera.com>
Message-ID: <035BD890-493B-11D9-92BB-000A95890854@enflyer.com>

On Dec 8, 2004, at 8:52 AM, Thomas Kristensen wrote:

>
>
>> What happens if you set the id to a zero value of some sort, such as 
>> 0,
>> '', NULL ?
>
> I have tried that aswell, they either gives an invalid sql, or is 
> rejected by PG :(
>
> b.assignKeyAttr("testId", None) =
> libpq.OperationalError: ERROR:  null value in column "testid" violates 
> not-null constraint

I have quite a lot of local changes to twisted.enterprise that I would 
be happy to share. The code is a mess right now though and kinda pgsql 
specific so if you want it keep that in mind.

With my changes you would do:

b.assignKeyAttr("testId", PgDefaultColumn())

or

b.assignKeyAttr("testId", PgSequenceColumn("mytable_testId_seq"))

There are a lot of other changes but those are the ones most relevant 
to your problem.

rich
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2361 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041208/db64314e/attachment-0002.bin>

From heikki at osafoundation.org  Wed Dec  8 12:45:38 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Wed, 08 Dec 2004 11:45:38 -0800
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
Message-ID: <41B759E2.1090400@osafoundation.org>

Jp Calderone wrote:
> On Tue, 07 Dec 2004 17:46:52 -0800, Heikki Toivonen <heikki at osafoundation.org> wrote:
>>The most interesting piece of the code is my TLSProtocolWrapper that 
>>inherits from ProtocolWrapper. See 
>>http://lxr.osafoundation.org/source/internal/m2crypto/M2Crypto/SSL/TwistedProtocolWrapper.py
>>
>>When there is an error in the SSL connection, and I call 
>>connectionLost(), I end up with a traceback that feels like it might be 
>>a Twisted bug. Or if I am not allowed to call that, how do I signal that 
>>I want to break the connection? Here's the traceback:
> 
>   You should call proto.transport.loseConnection() instead of proto.connectionLost().  The former indicates to the reactor that the connection should be dropped, the latter is a callback that the reactor invokes to tell you that the connection has been dropped.

Ok, that makes the exception go away, but it still does not solve the 
problem why I tried to use connectionLost() in the first place. I want 
to signal that this connection was lost because of an error, and calling 
  loseConnection() won't let me specify the error.

I am looking at as non-invasive methods as possible, the ultimate goal 
being that you could hook this up to any existing non-SSL implementation 
  with practically no changes. That seems to rule out custom errbacks.

So, when my wrapper notices an SSL error, how do I signal that the 
connection should be dropped because there was an error - and pass some 
info about the error along?

-- 
   Heikki Toivonen

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20041208/c156f6e5/attachment.sig>

From itamar at itamarst.org  Wed Dec  8 12:59:26 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Dec 2004 14:59:26 -0500
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B759E2.1090400@osafoundation.org>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
	<41B759E2.1090400@osafoundation.org>
Message-ID: <1102535966.29868.149.camel@sheriffpony>

On Wed, 2004-12-08 at 11:45 -0800, Heikki Toivonen wrote:

> So, when my wrapper notices an SSL error, how do I signal that the 
> connection should be dropped because there was an error - and pass some 
> info about the error along?

Perhaps we could add an optional exception or maybe failure keyword arg
to loseConnection (and abortConnection when we have that).




From itamar at itamarst.org  Wed Dec  8 13:00:27 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Dec 2004 15:00:27 -0500
Subject: [Twisted-Python] M2Crypto+Twisted, part 2
In-Reply-To: <41B759E2.1090400@osafoundation.org>
References: <20041208150446.1203.1220179938.divmod.quotient.3775@ohm>
	<41B759E2.1090400@osafoundation.org>
Message-ID: <1102536027.29865.151.camel@sheriffpony>

On Wed, 2004-12-08 at 11:45 -0800, Heikki Toivonen wrote:

> So, when my wrapper notices an SSL error, how do I signal that the 
> connection should be dropped because there was an error - and pass some 
> info about the error along?

Aren't you calling the user protocol's connectionLost yourself? You
could remember the reason (if you did) that you closed connection,  and
pass that.




From radeex at gmail.com  Fri Dec 10 04:47:09 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 10 Dec 2004 22:47:09 +1100
Subject: [Twisted-Python] Roundup email interface
Message-ID: <60ed19d404121003471ebc678e@mail.gmail.com>

Works again, after many months of not working. The original reason I
disabled it was that unknown users could send it email (spam) and it
would create new issues. Now it only allows members to post issues,
afaict. Anyway, if you want to use the roundup email interface now,
the email address is

  twisted.roundup at twistedmatrix.com

The documentation for the email interface is at 

  http://roundup.sourceforge.net/doc-0.7/user_guide.html#e-mail-gateway

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mohamed at your-site.com  Fri Dec 10 09:16:07 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Fri, 10 Dec 2004 11:16:07 -0500
Subject: [Twisted-Python] nevow newbie: No module named examples.childrenhtml
Message-ID: <576675500.1102677367@[192.168.1.76]>

Hello all,

How do you run the exampleBrowser?

(#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- twistd -y 
examples.tac

Failed to load application: No module named examples.childrenhtml

(#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- find .
.
./index.css
./index.html
./source.html
./examples
./examples/childrenhtml
./examples/childrenhtml/childrenhtml.py
./examples/childrenhtml/childrenhtml_ChildOfChildPage.html
./examples/childrenhtml/childrenhtml_ChildPage.html
./examples/childrenhtml/childrenhtml_RootPage.html
./examples/childrenhtml/description.html
./examples/childrenhtml/__init__.py
./examples/childrenhtml/childrenhtml.pyc
./examples/__init__.py
./examples/tablehtml
./examples/tablehtml/tablehtml.html
./examples/tablehtml/tablehtml.py
./examples/tablehtml/__init__.py
./python.css
./examples.tac
./twistd.log




From mohamed at your-site.com  Fri Dec 10 09:21:04 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Fri, 10 Dec 2004 11:21:04 -0500
Subject: [Twisted-Python] Re: nevow newbie: No module named
	examples.childrenhtml
In-Reply-To: <576675500.1102677367@[192.168.1.76]>
References: <576675500.1102677367@[192.168.1.76]>
Message-ID: <576972453.1102677664@[192.168.1.76]>

Sorry. Please ignore. I was root and root does not get . in his PYTHONPATH
Just found that in a previous post here.

Thanks
Mohamed~

--On Friday, December 10, 2004 11:16 AM -0500 Mohamed Lrhazi 
<mohamed at your-site.com> wrote:

> Hello all,
>
> How do you run the exampleBrowser?
>
> (#:/var/www/web_roots/nevow/nevow-0.3/examples/exampleBrowser)- twistd -y
> examples.tac
>
> Failed to load application: No module named examples.childrenhtml
> 



From foom at fuhm.net  Fri Dec 10 21:19:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 10 Dec 2004 23:19:32 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <DBB52C06-4B2B-11D9-A1D1-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-03 19:45:55.600000:
  Bugs opened: 15   Bugs closed: 17   Total open bugs: 312 (-2)
   Critical: 0 (-1)
   Urgent: 14 (-1)
   Bug: 118 (-2)
   Feature: 119 (+3)
   Wish: 61 (-1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE] Race condition in streaming producers means producer may never 
be unpaused  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue811 opened by itamarst

[RELEASE MANAGEMENT] Make extension building work wrt zpkg  (yesterday)
        http://www.twistedmatrix.com/bugs/issue818 opened by radix

                     ==== Bug ====
issue issue  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue820 opened by radeex

confirming roundup registration via email doesn't work  (2 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue817 opened by mwh

[WEB] Multiple consecutive / in URLs gives 404 errors  (yesterday)
        http://www.twistedmatrix.com/bugs/issue819 opened by spiv

[CORE] win32select fails with too many open file descriptiors  (2 days 
ago)
        http://www.twistedmatrix.com/bugs/issue816 opened by ndecker

testCyclicAliases in t.mail.test_mail is weird  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue810 opened by marienz

t.runner.identd should hand over a blocking socket  (2 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue814 opened by marienz

Find solution to twisted download hosting other than SF web space  (2 
days ago)
        http://www.twistedmatrix.com/bugs/issue813 opened by radix

Invalid "Index" links at the bottom of document pages.  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue812 opened by tirkal

[CORE, TRIAL] Undesirable ValueError exception masking by namedAny()  
(5 days ago)
        http://www.twistedmatrix.com/bugs/issue808 opened by exarkun

                     ==== Feature ====
[TWISTD] Make twistd a little more scripting friendly  (12 hours ago)
        http://www.twistedmatrix.com/bugs/issue823 opened by spiv

t.internet.process.Process should check for valid arguments  (2 days 
ago)
        http://www.twistedmatrix.com/bugs/issue815 opened by marienz

                     ==== Wish ====
testing a *really* unregistered user  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue822 opened by radix1

testing an unregistered user  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue821 opened by test

Bugs Closed
______________________
                     ==== Urgent ====
make epydoc stop ignoring zope interfaces  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue794 opened by radix, 
closed by radix

[CORE] test_trial fails on windows  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue757 opened by itamarst, 
closed by radix

[TRIAL] Unhandled exception in trial at result reporting time  (1 week 
ago)
        http://www.twistedmatrix.com/bugs/issue800 opened by exarkun, 
closed by radix

[RELEASE MANAGEMENT] setup.py not installing docs, manpages  (17 months 
ago)
        http://www.twistedmatrix.com/bugs/issue51 opened by radix, 
closed by radix

[PB, TRIAL] buggy PB/trial interactions  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue788 opened by teratorn, 
closed by teratorn

                     ==== Bug ====
issue issue  (yesterday)
        http://www.twistedmatrix.com/bugs/issue820 opened by radeex, 
closed by jknight

[RELEASE MANAGEMENT] python-twisted_1.2.0-1woody_all.deb is 
uninstallable  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue582 opened by acapnotic, 
closed by radix

[MAIL] IMAP4 improperly generates multipart BODYSTRUCTURE responses  
(16 months ago)
        http://www.twistedmatrix.com/bugs/issue195 opened by exarkun, 
closed by radix

[WEBSITE] Roundup is broken - Users are logged out when creating new 
issues  (11 months ago)
        http://www.twistedmatrix.com/bugs/issue476 opened by exarkun, 
closed by radix

confirming roundup registration via email doesn't work  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue817 opened by mwh, closed 
by radix

t.runner.identd should hand over a blocking socket  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue814 opened by marienz, 
closed by spiv

intermittent freebsd test_threads failure  (14 months ago)
        http://www.twistedmatrix.com/bugs/issue341 opened by warner, 
closed by glyph

[TRIAL] 'trial --until-failure twisted.abc' spews forever  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue804 opened by exarkun, 
closed by glyph

[MAIL] intermittent IMAP failure  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue369 opened by warner, 
closed by glyph

                     ==== Wish ====
[RELEASE MANAGEMENT] Improvements to the automated release process  (17 
months ago)
        http://www.twistedmatrix.com/bugs/issue56 opened by radix, 
closed by radix

testing a *really* unregistered user  (yesterday)
        http://www.twistedmatrix.com/bugs/issue822 opened by radix1, 
closed by radix

testing an unregistered user  (yesterday)
        http://www.twistedmatrix.com/bugs/issue821 opened by test, 
closed by radix




From prabaharpython at yahoo.co.in  Wed Dec 15 04:21:41 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Wed, 15 Dec 2004 11:21:41 +0000 (GMT)
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041204173027.1203.730989615.divmod.quotient.2028@ohm>
Message-ID: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>

Dear All,

I want to know about the following
concept "Asynchronous networked applications".
Actuall meaning of twisted.
        " it   is a framework for Asynchronous 
networked applications ".  So I want to know
specially about Asynchronous networked applications.
If anybody know regarding this please clear doubts
with small example. I have confusion regarding
this.

regards
Prabahar

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From projects at reedflute.com  Wed Dec 15 08:12:54 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 15 Dec 2004 17:12:54 +0200
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
Message-ID: <41C05476.4030600@reedflute.com>

praba mosas wrote:

>I want to know about the following
>concept "Asynchronous networked applications".
>Actuall meaning of twisted.
>        " it   is a framework for Asynchronous 
>networked applications ".  So I want to know
>specially about Asynchronous networked applications.
>If anybody know regarding this please clear doubts
>with small example. I have confusion regarding
>this.
>  
>
Hi Praba,

In general "asynchronous" would mean "event-driven" as in comparison to "polling".

A simple example I can think of would be the way that in all modern GUI frameworks (for example Microsoft's MFC) you do not have to poll the keyboard or mouse port for input but rather write code in event handlers that responds to events that are automatically generated by the GUI framework.

In the same way - in Twisted you are coding event-handlers rather than writing polling routines that would for example poll a network socket for data.

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From mcfletch at rogers.com  Wed Dec 15 08:43:08 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 15 Dec 2004 10:43:08 -0500
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
Message-ID: <41C05B8C.5000107@rogers.com>

My PyGTA presentation from a few months ago tries to provide some 
background on what asynchronous programming in Twisted is.  It contrasts 
asynchronous programming models with various other approaches to 
parallelising code:
    http://www.vrplumber.com/programming/twistedlowlevel05.pdf
In short, Twisted represents one of many possible approaches to the 
problem of "waiting in parallel", that is, multiplexing events so that 
while a given process is blocked on (for instance) input/output/network 
operations, other operations can continue.

Good luck,
Mike

praba mosas wrote:

>Dear All,
>
>I want to know about the following
>concept "Asynchronous networked applications".
>Actuall meaning of twisted.
>        " it   is a framework for Asynchronous 
>networked applications ".  So I want to know
>specially about Asynchronous networked applications.
>If anybody know regarding this please clear doubts
>with small example. I have confusion regarding
>this.
>
>regards
>Prabahar
>  
>

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From mso at oz.net  Wed Dec 15 11:20:18 2004
From: mso at oz.net (Mike Orr)
Date: Wed, 15 Dec 2004 10:20:18 -0800
Subject: [Twisted-Python] Meaning of "Asynchronous networked applications"
In-Reply-To: <41C05B8C.5000107@rogers.com>
References: <20041215112141.90691.qmail@web8408.mail.in.yahoo.com>
	<41C05B8C.5000107@rogers.com>
Message-ID: <20041215182018.GA3995@sense-sea-MegaSub-1-465.oz.net>

On Wed, Dec 15, 2004 at 10:43:08AM -0500, Mike C. Fletcher wrote:
> My PyGTA presentation from a few months ago tries to provide some 
> background on what asynchronous programming in Twisted is.  It contrasts 
> asynchronous programming models with various other approaches to 
> parallelising code:
>    http://www.vrplumber.com/programming/twistedlowlevel05.pdf
> In short, Twisted represents one of many possible approaches to the 
> problem of "waiting in parallel", that is, multiplexing events so that 
> while a given process is blocked on (for instance) input/output/network 
> operations, other operations can continue.

This is a great overview, and makes the "why's" of Twisted more concrete.
An HTML version would be a good addition to the Twisted Howtos.

-- 
-Mike Orr (aka. Sluggo), mso at oz.net  (iron at sense-sea-MegaSub-1-465.oz.net)
   http://sluggo.kicks-ass.org/                  Cxu vi parolas Esperante?



From gds11561 at tj.sc.gov.br  Wed Dec 15 09:39:20 2004
From: gds11561 at tj.sc.gov.br (Gustavo Dagostin da Silva)
Date: Wed, 15 Dec 2004 14:39:20 -0200
Subject: [Twisted-Python] Question regarding http post/put
Message-ID: <200412151439.20107.gds11561@tj.sc.gov.br>


I'm creating a server which serves xml-rpc and, by demand, loads a HTTP server 
which is intended to upload (big) data from client to server.
How do I limit the request types accepted by the http server to the post/put, 
not permitting get and other requests ?

Thanks in advance,
Gustavo



From kenny at gem-hs.org  Thu Dec 16 20:18:24 2004
From: kenny at gem-hs.org (Kenny Chamber)
Date: Fri, 17 Dec 2004 06:18:24 +0300
Subject: [Twisted-Python] python.plugin
Message-ID: <41C25000.7060203@gem-hs.org>

I extended t.py.p to use deferreds. The code is somewhat hideous and about
three times as slow, but at least it's asynchronous. There's a much more
elegant way to do it using generators. Hopefully, at some point in the
future Python 2.2 will be the minimum supported version.




-----------------------
Kenny Chamber
http://gem-hs.org/contact.html



From itamar at itamarst.org  Thu Dec 16 20:28:20 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Dec 2004 22:28:20 -0500
Subject: [Twisted-Python] python.plugin
In-Reply-To: <41C25000.7060203@gem-hs.org>
References: <41C25000.7060203@gem-hs.org>
Message-ID: <1103254100.3287.56.camel@sheriffpony>

On Fri, 2004-12-17 at 06:18 +0300, Kenny Chamber wrote:
> I extended t.py.p to use deferreds. The code is somewhat hideous and about
> three times as slow, but at least it's asynchronous. There's a much more
> elegant way to do it using generators. Hopefully, at some point in the
> future Python 2.2 will be the minimum supported version.
 
Python 2.2 is the minimal supported version. Please submit patches to
http://twistedmatrix.com/bugs/.




From stefano at pragma2000.com  Fri Dec 17 10:09:38 2004
From: stefano at pragma2000.com (Stefano Masini)
Date: Fri, 17 Dec 2004 18:09:38 +0100
Subject: [Twisted-Python] twisted webdav server
Message-ID: <41C312D2.8070105@pragma2000.com>

Hello Yasushi, Stefan, and Twisted-Python,

I tried and liked akadav (thanks Yasushi), and I read that Stefan 
proposed to refactor it for accessing dynamic data.

Since I need dynamic data too, I was wondering if anybody did it yet.

In case nobody worked on this already, I'm gonna do it, just some 
simple refactoring. Nothing fancy, instead of accessing the file 
system I need to access an object that represents a virtual directory 
and exposes methods like listContent(), get(filename), put(filename, 
data), and so forth...

... but if this code is available already, I could spare some 
fingertips! :)

stefano



On Fri, 22 Oct 2004 17:35:28 +0200, donfu <fu at donfu.com> wrote:

 >> Yasushi Iwata wrote:
 >
 >>> >
 >>> > I wrote WebDAV module for Tiwsted.
 >>> >
 >>> >   http://akadama.jp/akadav.html
 >
 >>
 >> Great, I just had a look at it. It seems to work well for serving a
 >> directory over webdav. However, I'm not quite sure how to adapt it 
to serve
 >> dynamic data from a database.
 >>
 >> I think I could refactor your WebDAV resource-class, so that it 
works with
 >> arbitrary backends. Basically I'd try to factor everything out 
that does
 >> explicitly deal with the filesystem. But in a way, that's what a 
twisted.web
 >> Resource is in the first place, no? Honestly, I'm a bit confused :)
 >>
 >> stefan.



From fu at donfu.com  Sat Dec 18 01:55:44 2004
From: fu at donfu.com (Stefan Niederhauser)
Date: Sat, 18 Dec 2004 09:55:44 +0100
Subject: [Twisted-Python] twisted webdav server
In-Reply-To: <41C312D2.8070105@pragma2000.com>
References: <41C312D2.8070105@pragma2000.com>
Message-ID: <9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>

> Since I need dynamic data too, I was wondering if anybody did it yet.

Sorry, I didn't lift a finger. I was a bit overwhelmed by the size of 
the task, once itamar commented on the refactoring :)

itamar wrote on 2004-10-22:
>  At the very least you'd need to extend Resource to support an extended
>  range of actions. And if you do you should probably work off
>  twisted.web2 - but at this point you should probably switch to the
>  twisted-web mailing list.

Still, I'd be interested in helping out with abstracting the webdav 
backend.

regards,
stefan.




From ihaywood at gnu.org  Sat Dec 18 04:11:33 2004
From: ihaywood at gnu.org (Ian Haywood)
Date: Sat, 18 Dec 2004 22:11:33 +1100
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
Message-ID: <41C41065.1060306@gnu.org>

This a patch on twisted 1.4.0 to add support for the STOR method to
the ftp server code.

I have tested it using GNU standard FTP client and the Windows File 
Explorer FTP mode.

Ian Haywood

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diff
URL: </pipermail/twisted-python/attachments/20041218/b1147982/attachment.ksh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20041218/b1147982/attachment.sig>

From teratorn at twistedmatrix.com  Sat Dec 18 05:06:43 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 18 Dec 2004 06:06:43 -0600
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <41C41065.1060306@gnu.org>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
	<41C41065.1060306@gnu.org>
Message-ID: <opsi7c9hzsy3d107@localhost.localdomain>

On Sat, 18 Dec 2004 22:11:33 +1100, Ian Haywood <ihaywood at gnu.org> wrote:

> This a patch on twisted 1.4.0 to add support for the STOR method to
> the ftp server code.
>
> I have tested it using GNU standard FTP client and the Windows File
> Explorer FTP mode.
>
> Ian Haywood

This is cool.

A couple of issues though. First, nobody is going to commit this without
good unit tests.
Second, there are a few coding style things you should change (<> should
be !=, no space
after functions to call or method definitions)

It's late and that's all I can think of right now :)

-Eric



From jamwt-twisted at jamwt.com  Sat Dec 18 08:00:57 2004
From: jamwt-twisted at jamwt.com (J Turner)
Date: Sat, 18 Dec 2004 09:00:57 -0600
Subject: [Twisted-Python] Twisted PostgreSQL Library
Message-ID: <20041218150057.GA72130@count.jamwt.com>

Hello list,

I've been working on and off over the last few weeks on a twisted-based
pgsql library--driven by my desire to keep threads completely out of my
apps!

It's come together at this point into something worth releasing.. you
can find it here:

http://www.jamwt.com/pgasync/

It's DB API 2.0 compliant, and it has a adbapi wrapper as well for
existing implementations.  I could rattle off all the details here, but
I've already done that like three times in the last few hours
(freshmeat, home page, README, blah blah blah).

So far, in my informal benchmarks performance and scalability look to
be very promising vs. adbapi/threads.

Anyway, feel free to check it out, and I'd love to get feedback,
suggestions (and certainly bug reports).

Thanks,

 - Jamie Turner



From maparent at mac.com  Sat Dec 18 08:58:42 2004
From: maparent at mac.com (Marc-Antoine Parent)
Date: Sat, 18 Dec 2004 10:58:42 -0500
Subject: [Twisted-Python] Python 2.4 compatible windows binaries?
Message-ID: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>

Good day!
I am thinking of migrating to Python 2.4, and I am using Twisted (for 
Nevow). The rebuild was simple on my OSX machine, and twisted works 
very well under 2.4, but I am not familiar with the build procedure on 
Windows. Are you planning to make Windows binaries for Python 2.4, or 
otherwise can you give me an idea of how I should go about to build 
them?
Thank you very much,
Marc-Antoine Parent




From foom at fuhm.net  Sat Dec 18 10:27:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 18 Dec 2004 12:27:22 -0500
Subject: [Twisted-Python] Twisted PostgreSQL Library
In-Reply-To: <20041218150057.GA72130@count.jamwt.com>
References: <20041218150057.GA72130@count.jamwt.com>
Message-ID: <13F0916A-511A-11D9-A7F7-000A95A50FB2@fuhm.net>

I said it before, and I'll say it again now: that is pretty awesome.

James

On Dec 18, 2004, at 10:00 AM, J Turner wrote:

> Hello list,
>
> I've been working on and off over the last few weeks on a twisted-based
> pgsql library--driven by my desire to keep threads completely out of my
> apps!
>
> It's come together at this point into something worth releasing.. you
> can find it here:
>
> http://www.jamwt.com/pgasync/
>
> It's DB API 2.0 compliant, and it has a adbapi wrapper as well for
> existing implementations.  I could rattle off all the details here, but
> I've already done that like three times in the last few hours
> (freshmeat, home page, README, blah blah blah).
>
> So far, in my informal benchmarks performance and scalability look to
> be very promising vs. adbapi/threads.
>
> Anyway, feel free to check it out, and I'd love to get feedback,
> suggestions (and certainly bug reports).




From itamar at itamarst.org  Sat Dec 18 10:57:36 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 18 Dec 2004 12:57:36 -0500
Subject: [Twisted-Python] FTP STOR method
In-Reply-To: <opsi7c9hzsy3d107@localhost.localdomain>
References: <41C312D2.8070105@pragma2000.com>
	<9A857024-50D2-11D9-B396-000393DC7B7C@donfu.com>
	<41C41065.1060306@gnu.org> <opsi7c9hzsy3d107@localhost.localdomain>
Message-ID: <1103392656.3283.92.camel@sheriffpony>

On Sat, 2004-12-18 at 06:06 -0600, Eric Mangold wrote:
> On Sat, 18 Dec 2004 22:11:33 +1100, Ian Haywood <ihaywood at gnu.org> wrote:
> 
> > This a patch on twisted 1.4.0 to add support for the STOR method to
> > the ftp server code.

> It's late and that's all I can think of right now :)

How about "please add patches to http://twistedmatrix.com/bugs/"? :)




From kurtschwehr at yahoo.com  Sat Dec 18 17:18:06 2004
From: kurtschwehr at yahoo.com (Kurt Schwehr)
Date: Sat, 18 Dec 2004 16:18:06 -0800 (PST)
Subject: [Twisted-Python] Mac OSX Fink packages
Message-ID: <20041219001806.39043.qmail@web51410.mail.yahoo.com>

Hi All,

I am in the process of trying to learning how to use
buildbot and cvstoys and as a result twisted.  I have
created fink packages for buildbot, cvstoys,
pyopenssl, and twisted.  I'm looking for people who
know these programs to give these packages and make
sure they actually work right.   They need a little
more work for the description field, but otherwise
they seem to build and install ok. The files are here:

http://schwehr.org/software/fink/

If you are not used to installing fink packages, the
basic proceedure is to put them in 

/sw/fink/10.3/local/main/finkinfo/net

and then run

fink index
fink list twisted cvstoys buildbot

Thanks!
-kurt

=====
http://schwehr.org

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From foom at fuhm.net  Sat Dec 18 21:32:58 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 18 Dec 2004 23:32:58 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <0F514C05-5177-11D9-A7F7-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-03 19:45:55.600000:
  Bugs opened: 9   Bugs closed: 8   Total open bugs: 313 (+1)
   Critical: 0 (+0)
   Urgent: 14 (+0)
   Bug: 119 (+1)
   Feature: 118 (-1)
   Wish: 62 (+1)

New / Reopened Bugs
______________________
                     ==== Bug ====
[TRIAL] when two test modules have the same classname, class name isn't 
reported second time  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue832 opened by radix

[TRIAL] setUpClass run even if class set to skip  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue831 opened by exarkun

[MAIL] [PATCH] POP3 do_LIST returns an incorrect response  (5 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue826 opened by alecu

[CONCH] test_cftp fails for almost any environment other than an svn 
checkout  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue830 opened by exarkun

PyEval_RestoreThread on exit when using PyQT with Twisted (qtdemo.py)  
(6 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue825 opened by stodge

[PATCH] trial -u does not wait for reactor shutdown before next pass  
(3 days ago)
        http://www.twistedmatrix.com/bugs/issue829 opened by logan

epyrun doesn't like t.python.util.moduleMovedForSplit  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue828 opened by marienz

wrapping code in IRCClient can cause infinite loops  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue827 opened by edmundd

Roundup doesn't auto-add commentators to nosy list  (7 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue824 opened by jknight

Bugs Closed
______________________
                     ==== Bug ====
[MAIL] [PATCH] POP3 do_LIST returns an incorrect response  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue826 opened by alecu, 
closed by exarkun

PyEval_RestoreThread on exit when using PyQT with Twisted (qtdemo.py)  
(6 days ago)
        http://www.twistedmatrix.com/bugs/issue825 opened by stodge, 
closed by itamarst

[WEB] default t.w content-type doesn't specify UTF-8  (16 months ago)
        http://www.twistedmatrix.com/bugs/issue149 opened by moonfallen, 
closed by glyph

[WEB] [PATCH] borken html sux  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue519 opened by enki, 
closed by glyph

Find solution to twisted download hosting other than SF web space  (1 
week ago)
        http://www.twistedmatrix.com/bugs/issue813 opened by radix, 
closed by radix

Roundup doesn't auto-add commentators to nosy list  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue824 opened by jknight, 
closed by radix

[DOCUMENTATION] [PATCH] Contributor agreement still speaks of CVS  (1 
month ago)
        http://www.twistedmatrix.com/bugs/issue787 opened by Tv, closed 
by glyph

                     ==== Feature ====
roundup should send .patch files as text/plain  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue738 opened by jknight, 
closed by jknight




From corydodt at twistedmatrix.com  Mon Dec 20 14:57:29 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 20 Dec 2004 13:57:29 -0800
Subject: [Twisted-Python] Python 2.4 compatible windows binaries?
In-Reply-To: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
Message-ID: <41C74AC9.3080703@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Twisted 2.0 will have windows binaries for Python 2.4, but there are no plans
at this time to do those binaries for earlier versions.

In any case, you can build what you need.  Please check out a working copy of
SVN trunk, and see the text file win32/README.win32.  You need just the "BARE
MINIMUM" build.  Any questions -> list.

Thanks!

C



Marc-Antoine Parent wrote:
| Good day!
| I am thinking of migrating to Python 2.4, and I am using Twisted (for
| Nevow). The rebuild was simple on my OSX machine, and twisted works very
| well under 2.4, but I am not familiar with the build procedure on
| Windows. Are you planning to make Windows binaries for Python 2.4, or
| otherwise can you give me an idea of how I should go about to build them?
| Thank you very much,
| Marc-Antoine Parent
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBx0rJ3A5SrXAiHQcRAjn9AKCUnHZ0m5nrn48ujnAMttTTBbljDACdGzDT
eWY8+7Y1ixir/KG+2S9FjDc=
=DiZz
-----END PGP SIGNATURE-----



From donwsmith at gmail.com  Mon Dec 20 15:30:07 2004
From: donwsmith at gmail.com (Don Smith)
Date: Mon, 20 Dec 2004 14:30:07 -0800
Subject: [Twisted-Python] filewatch.py
Message-ID: <24f63c200412201430435ad076@mail.gmail.com>

Greetings!

I'm fairly new to Twisted, but I like it already. However, I'm having
some difficulty with the filewatch.py example.

Actually, I extended it to loop over a list of files and start service
for each. The log files in the list are actually commands to determine
the most recent log file.

But I have a condition where the log files will get rotated
unexpectedly. I would like to re-evaluate my list of log files every
120 seconds. I have figured out a method to accomplish this, but it
just adds the new log files to the service. This is bad. I want to
stop service on all log files, then start service on the new ones.
This is what I can't figure out how to do. How do I stop the service?

This is how I start it:
if os.path.exists(logfile):
	        internet.TimerService(0.1, watch2,
file(logfile),logfile).startService()


Thanks for you help!!

Don Smith



From jason.mobarak at gmail.com  Mon Dec 20 15:43:02 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Mon, 20 Dec 2004 15:43:02 -0700
Subject: [Twisted-Python] filewatch.py
In-Reply-To: <24f63c200412201430435ad076@mail.gmail.com>
References: <24f63c200412201430435ad076@mail.gmail.com>
Message-ID: <b194c919041220144332df2b3d@mail.gmail.com>

The initializer TimerService will return a TimerService object, which
has the .startService() and .stopService(). So, bind the object
returned by TimerService to some name and call methods on that to
start/stop the service.


On Mon, 20 Dec 2004 14:30:07 -0800, Don Smith <donwsmith at gmail.com> wrote:
> Greetings!
> 
> I'm fairly new to Twisted, but I like it already. However, I'm having
> some difficulty with the filewatch.py example.
> 
> Actually, I extended it to loop over a list of files and start service
> for each. The log files in the list are actually commands to determine
> the most recent log file.
> 
> But I have a condition where the log files will get rotated
> unexpectedly. I would like to re-evaluate my list of log files every
> 120 seconds. I have figured out a method to accomplish this, but it
> just adds the new log files to the service. This is bad. I want to
> stop service on all log files, then start service on the new ones.
> This is what I can't figure out how to do. How do I stop the service?
> 
> This is how I start it:
> if os.path.exists(logfile):
>                 internet.TimerService(0.1, watch2,
> file(logfile),logfile).startService()
> 
> Thanks for you help!!
> 
> Don Smith
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Jason



From stage3 at us.ibm.com  Mon Dec 20 16:23:18 2004
From: stage3 at us.ibm.com (Garrett Rolfs)
Date: 20 Dec 2004 17:23:18 -0600
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
Message-ID: <m3ekhkv9jt.fsf@us.ibm.com>

I fear I'm missing something basic and overlooked something already
documented.  Hopefully someone will set me straight.  I'm attempting
to play with MoinMoin using twisted as the webserver.  I'm running on
linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
attempt to start MoinMoin, I see the following in the log:

2004/12/20 17:05 CST [-] Starting factory
<MoinMoin.server.twistedmoin.MoinSite instance at 0x40a070ec>
2004/12/20 17:05 CST [-] Traceback (most recent call last):
2004/12/20 17:05 CST [-] File
"/home/stage3/bin/twistd", line 36, in ?
2004/12/20 17:05 CST [-] run() 
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 184, in run
2004/12/20 17:05 CST [-] app.run(runApp, ServerOptions) 
2004/12/2017:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/application/app.py",
line 205, in run
2004/12/20 17:05 CST [-]     runApp(config)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 175, in runApp
2004/12/20 17:05 CST [-]     startApplication(config, application)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 160, in startApplication
2004/12/20 17:05 CST [-] shedPrivileges(config['euid'], process.uid,
process.gid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 134, in shedPrivileges
2004/12/20 17:05 CST [-]     switchUID(uid, gid, euid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/python/util.py",
line 606, in switchUID
2004/12/20 17:05 CST [-]     initgroups(uid, gid)
2004/12/20 17:05 CST [-] File
"/home/stage3/lib/python2.3/site-packages/twisted/python/util.py",
line 584, in initgroups
2004/12/20 17:05 CST [-]     setgroups(l)
2004/12/20 17:05 CST [-] OSError: [Errno 1] Operation not permitted

I am merely experimenting and I would like to run without being root.
Is it possible?

Thanks,

-Garrett Rolfs




From exarkun at divmod.com  Mon Dec 20 21:31:00 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 21 Dec 2004 04:31:00 GMT
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
In-Reply-To: <m3ekhkv9jt.fsf@us.ibm.com>
Message-ID: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>

On 20 Dec 2004 17:23:18 -0600, Garrett Rolfs <stage3 at us.ibm.com> wrote:
>I fear I'm missing something basic and overlooked something already
> documented.  Hopefully someone will set me straight.  I'm attempting
> to play with MoinMoin using twisted as the webserver.  I'm running on
> linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
> attempt to start MoinMoin, I see the following in the log:
> [snip]

  Your logged in shell is running with more permissions than your system is 
configured to allow you to have.  Perhaps someone recently edited your 
/etc/groups file or something similar.  Logging all the way out and back in
should give you an environment in which twistd will start up for you.

  If you ran across this without passing uid= or gid= to Application(), 
this is probably a twistd bug.  If you didn't, it's just an undesirable
deployment complication with bad error reporting.  Both should be fixed,
of course :)

  Jp



From projects at reedflute.com  Tue Dec 21 08:16:27 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 21 Dec 2004 17:16:27 +0200
Subject: [Twisted-Python] Starting MoinMoin as nonroot Linux User
In-Reply-To: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
References: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
Message-ID: <41C83E4B.3060504@reedflute.com>

Jp Calderone wrote:

>On 20 Dec 2004 17:23:18 -0600, Garrett Rolfs <stage3 at us.ibm.com> wrote:
>  
>
>>I fear I'm missing something basic and overlooked something already
>>documented.  Hopefully someone will set me straight.  I'm attempting
>>to play with MoinMoin using twisted as the webserver.  I'm running on
>>linux using python 2.3.4 and twisted 1.3.0 as a nonroot user.  When I
>>attempt to start MoinMoin, I see the following in the log:
>>[snip]
>>    
>>
>
>  Your logged in shell is running with more permissions than your system is 
>configured to allow you to have.  Perhaps someone recently edited your 
>/etc/groups file or something similar.  Logging all the way out and back in
>should give you an environment in which twistd will start up for you.
>
>  If you ran across this without passing uid= or gid= to Application(), 
>this is probably a twistd bug.  If you didn't, it's just an undesirable
>deployment complication with bad error reporting.  Both should be fixed,
>of course :)
>
>  
>

Don't know if it is a bug - or something todo with shell privileges. I 
have seen the same thing migrating recently from Slackware 9.1 to 
Slackware 10.0.

Since I'm using the same version of Twisted and Python on both versions 
of Slack (9.1 and 10.0) - logic seems to point in the direction of the 
distro or some GNU library related issue.

regards,

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From stage3 at us.ibm.com  Tue Dec 21 08:51:08 2004
From: stage3 at us.ibm.com (Garrett Rolfs)
Date: 21 Dec 2004 09:51:08 -0600
Subject: [Twisted-Python] Re: Starting MoinMoin as nonroot Linux User
References: <20041221043100.1029.2117911546.divmod.quotient.14253@ohm>
	<41C83E4B.3060504@reedflute.com>
Message-ID: <m3acs7vedv.fsf@us.ibm.com>

Eugene Coetzee <projects at reedflute.com> writes:

> Jp Calderone wrote:
> 
> >  Your logged in shell is running with more permissions than your
> > system is configured to allow you to have.  Perhaps someone recently
> > edited your /etc/groups file or something similar.  Logging all the
> > way out and back in
> >should give you an environment in which twistd will start up for you.
> >

Thank you for the clue.  Indeed that appears to be the problem.  I
looked at my /etc/passwd entry and I am in my own "personal" group.
My site has linux clients that authenticate against AFS.  Every user
has their own group to minimize the exposure allowing unanticipated
access to local (non-AFS) directories and files.  Anyway, back to the
main topic...  I executed the id command and noticed I am in groups
not listed in /etc/passwd.  Also, I shouldn't be in these groups
because they are "personal" groups for other users.  Hence, I have
sent an email to our internal support org.
 
> Don't know if it is a bug - or something todo with shell privileges. I
> have seen the same thing migrating recently from Slackware 9.1 to
> Slackware 10.0.
> 
> Since I'm using the same version of Twisted and Python on both
> versions of Slack (9.1 and 10.0) - logic seems to point in the
> direction of the distro or some GNU library related issue.
> 

The id command may shed some light to what is different, at least it
did for me.

Thanks for the feedback.

-Garrett Rolfs




From mary-twisted at puzzling.org  Wed Dec 22 18:51:59 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 23 Dec 2004 12:51:59 +1100
Subject: [Twisted-Python] Re: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
Message-ID: <20041223015159.GE27858@home.puzzling.org>


OK, when you say "I got errors", can you tell us what the errors were?
The last 15 lines of the install output would be a good start.

-Mary

On Wed, Dec 22, 2004, Robert Ide wrote:
> I am trying to install Twisted
> 
> I downloaded from the twisted site
> 
> I got errors and when I try to run twistd --version I get "not found"
> 
> Rob
> 
> 
> 
> -----Original Message-----
> From: twisted-web-bounces at twistedmatrix.com
> [mailto:twisted-web-bounces at twistedmatrix.com] On Behalf Of Mary Gardiner
> Sent: Wednesday, December 22, 2004 7:42 PM
> To: twisted-web at twistedmatrix.com
> Subject: Re: [Twisted-web] Installing on Fedora
> 
> On Wed, Dec 22, 2004, Robert Ide wrote:
> > This may be a rooky question but I'm having some trouble installing on
> > Fedora. I ran python setup.py install but that didn't seem to work and when
> I
> > look at admin/twisted.spec I'm not sure what to do with it. Should I be
> using
> > rpm with this?
> 
> A few questions:
> 
>  1. What are you trying to install exactly (twisted, Nevow...)?
>  2. Where did you download it from?
>  3. What tells you that "python setup.py install" didn't work (error
>     messages, failure of the program to show up in the right place)?
> 
> If it's twisted you're trying to install,
> twisted-python at twistedmatrix.com might be of some help...
> 
> -Mary



From andrew-twisted at puzzling.org  Wed Dec 22 19:14:45 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 23 Dec 2004 13:14:45 +1100
Subject: [Twisted-Python] Re: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
Message-ID: <20041223021445.GS4882@frobozz>

[Moving to twisted-python at twistedmatrix.com -- I don't see anything
web-specific here]

On Wed, Dec 22, 2004 at 05:58:01PM -0800, Robert Ide wrote:
> Here is the error from running python setup.py install
> 
> running install
> Traceback (most recent call last):
>   File "setup.py", line 358, in ?
>     setup(**setup_args)
[...]
>   File "/usr/lib/python2.2/distutils/sysconfig.py", line 322, in _init_posix
>     raise DistutilsPlatformError(my_msg)
> distutils.errors.DistutilsPlatformError: invalid Python installation: unable
> to open /usr/lib/python2.2/config/Makefile (No such file or directory)

To be clear: what exactly are you trying to install?  The Twisted 1.3
tarball?

I don't know Fedora, but I'd check to see if you have the python-devel
package installed, and if not see if it makes a difference.

Also, a bit of googling shows there's already an RPM of Twisted for Fedora:
    http://download.fedora.redhat.com/pub/fedora/linux/core/development/i386/Fedora/RPMS/python-twisted-1.3.0-20041213.i386.rpm

Any particular reason you aren't using that?

Let us know how you're going.

-Andrew.




From cpunion at gmail.com  Wed Dec 22 21:17:21 2004
From: cpunion at gmail.com (lijie)
Date: Thu, 23 Dec 2004 12:17:21 +0800
Subject: [Twisted-Python] How to use Application with wxpython and tcp client
Message-ID: <41CA46D1.5000701@gmail.com>

I have a gui using wxpython, and I want to connect a server use twisted.
How to implement it using application or service?



From itamar at itamarst.org  Thu Dec 23 07:35:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Dec 2004 09:35:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN ignore
	files generated by unit tests.
In-Reply-To: <E1ChPs7-0001Mz-00@wolfwood>
References: <E1ChPs7-0001Mz-00@wolfwood>
Message-ID: <1103812537.14088.94.camel@sheriffpony>

On Thu, 2004-12-23 at 03:07 -0700, Tommi Virtanen wrote:

> Modified:
>    trunk/twisted/lore/test/   (props changed)
>    trunk/twisted/test/   (props changed)
> Log:
> Make SVN ignore files generated by unit tests.

Really we should fix the tests so that the files are not created under
the twisted/ tree.




From grib at billgribble.com  Thu Dec 23 08:32:27 2004
From: grib at billgribble.com (Bill Gribble)
Date: Thu, 23 Dec 2004 09:32:27 -0600
Subject: [Twisted-Python] twistedmatrix.com in various spam URL blocklists
In-Reply-To: <1103812537.14088.94.camel@sheriffpony>
References: <1103812537.14088.94.camel@sheriffpony>
Message-ID: <1103815947.5100.11.camel@serrano>

Some Twisted mailing list messages are getting dropped in my spam bucket
in the same way this one was.  It might make sense to contact the SURBL
groups and get twistedmatrix.com off their lists.  

Bill Gribble

> Content analysis details:   (6.0 points, 5.0 required)
> 
>  pts rule name              description
> ---- ---------------------- --------------------------------------------------
> -2.6 BAYES_00               BODY: Bayesian spam probability is 0 to 1%
>                             [score: 0.0000]
>  1.0 URIBL_PH_SURBL         Contains a URL listed in the PH SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.0 URIBL_AB_SURBL         Contains a URL listed in the AB SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.8 URIBL_WS_SURBL         Contains a URL listed in the WS SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  1.0 URIBL_OB_SURBL         Contains a URL listed in the OB SURBL blocklist
>                             [URIs: twistedmatrix.com]
>  3.8 URIBL_SC_SURBL         Contains a URL listed in the SC SURBL blocklist



From foom at fuhm.net  Thu Dec 23 10:33:28 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 23 Dec 2004 12:33:28 -0500
Subject: [Twisted-Python] twistedmatrix.com in various spam URL blocklists
In-Reply-To: <1103815947.5100.11.camel@serrano>
References: <1103812537.14088.94.camel@sheriffpony>
	<1103815947.5100.11.camel@serrano>
Message-ID: <C2272355-5508-11D9-8D68-000A95A50FB2@fuhm.net>

Wow, I really wouldn't recommend scoring a single external source so 
high that it, all by itself, can mark your emails as spam. Also, 
http://www.rulesemporium.com/cgi-bin/uribl.cgi doesn't say anything 
about twistedmatrix.com being on their list. Maybe they just removed 
it, or maybe your configuration is broken somehow.

James

On Dec 23, 2004, at 10:32 AM, Bill Gribble wrote:

> Some Twisted mailing list messages are getting dropped in my spam 
> bucket
> in the same way this one was.  It might make sense to contact the SURBL
> groups and get twistedmatrix.com off their lists.
>
> Bill Gribble
>
>> Content analysis details:   (6.0 points, 5.0 required)
>>
>>  pts rule name              description
>> ---- ---------------------- 
>> --------------------------------------------------
>> -2.6 BAYES_00               BODY: Bayesian spam probability is 0 to 1%
>>                             [score: 0.0000]
>>  1.0 URIBL_PH_SURBL         Contains a URL listed in the PH SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.0 URIBL_AB_SURBL         Contains a URL listed in the AB SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.8 URIBL_WS_SURBL         Contains a URL listed in the WS SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  1.0 URIBL_OB_SURBL         Contains a URL listed in the OB SURBL 
>> blocklist
>>                             [URIs: twistedmatrix.com]
>>  3.8 URIBL_SC_SURBL         Contains a URL listed in the SC SURBL 
>> blocklist
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ww at groovy.net  Thu Dec 23 16:10:23 2004
From: ww at groovy.net (William Waites)
Date: Thu, 23 Dec 2004 18:10:23 -0500
Subject: [Twisted-Python] a couple of patches
Message-ID: <20041223231023.GI1460@groovy.net>

greetings, sent this directly to glyph a little while ago,
to deafening silence... perhaps i said the wrong thing ;)

here are a couple of patches:

the first one adds interface support to enterprise.adbapi.ConnectionPool
to make things like IFooBarObject(dbpool) where dbpool is a ConnectionPool
instance work as expected.

the second adds unregistration methods to the python.dispatch.EventDispatcher

cheers,
-w

-------------- next part --------------
diff -uP Twisted-1.3.0/twisted/enterprise/adbapi.py Twisted-Local/twisted/enterprise/adbapi.py
--- Twisted-1.3.0/twisted/enterprise/adbapi.py	2004-02-26 00:45:04.000000000 -0500
+++ Twisted-Local/twisted/enterprise/adbapi.py	2004-12-20 01:11:47.000000000 -0500
@@ -48,7 +48,7 @@
     def __getattr__(self, name):
         return getattr(self._cursor, name)
 
-
+from interfaces import IConnectionPool
 class ConnectionPool:
     """I represent a pool of connections to a DB-API 2.0 compliant database.
 
@@ -57,7 +57,8 @@
     the noisy arg which determines whether informational log messages are
     generated during the pool's operation.
     """
-
+    __implements__ = IConnectionPool,
+    
     noisy = 1   # if true, generate informational log messages
     min = 3     # minimum number of connections in pool
     max = 5     # maximum number of connections in pool
@@ -309,7 +310,7 @@
         warnings.warn("This is deprecated. Use runInteraction", DeprecationWarning)
         self._deferToThread(self._runInteraction, interaction,
                             *args, **kw).addCallbacks(callback, errback)
-
+del IConnectionPool
 
 class Augmentation:
     '''This class is now deprecated. Just use the ConnectionPool directly.
diff -uP Twisted-1.3.0/twisted/enterprise/interfaces.py Twisted-Local/twisted/enterprise/interfaces.py
--- Twisted-1.3.0/twisted/enterprise/interfaces.py	1969-12-31 19:00:00.000000000 -0500
+++ Twisted-Local/twisted/enterprise/interfaces.py	2004-12-20 01:14:15.000000000 -0500
@@ -0,0 +1,86 @@
+from twisted.python import components
+class IConnectionPool(components.Interface):
+    """I represent a pool of connections to a DB-API 2.0 compliant database.
+
+    You can pass cp_min, cp_max or both to set the minimum and maximum
+    number of connections that will be opened by the pool. You can pass
+    the noisy arg which determines whether informational log messages are
+    generated during the pool's operation.
+    """
+    def start(self):
+        """Start the connection pool.
+
+        If you are using the reactor normally, this function does *not*
+        need to be called.
+        """
+    def runInteraction(self, interaction, *args, **kw):
+        """Interact with the database and return the result.
+
+        The 'interaction' is a callable object which will be executed
+        in a thread using a pooled connection. It will be passed an
+        L{Transaction} object as an argument (whose interface is
+        identical to that of the database cursor for your DB-API
+        module of choice), and its results will be returned as a
+        Deferred. If running the method raises an exception, the
+        transaction will be rolled back. If the method returns a
+        value, the transaction will be committed.
+
+        NOTE that the function you pass is *not* run in the main
+        thread: you may have to worry about thread-safety in the
+        function you pass to this if it tries to use non-local
+        objects.
+
+        @param interaction: a callable object whose first argument is
+            L{adbapi.Transaction}. *args,**kw will be passed as
+            additional arguments.
+
+        @return: a Deferred which will fire the return value of
+            'interaction(Transaction(...))', or a Failure.
+        """
+
+    def runQuery(self, *args, **kw):
+        """Execute an SQL query and return the result.
+
+        A DB-API cursor will will be invoked with cursor.execute(*args, **kw).
+        The exact nature of the arguments will depend on the specific flavor
+        of DB-API being used, but the first argument in *args be an SQL
+        statement. The result of a subsequent cursor.fetchall() will be
+        fired to the Deferred which is returned. If either the 'execute' or
+        'fetchall' methods raise an exception, the transaction will be rolled
+        back and a Failure returned.
+
+        The  *args and **kw arguments will be passed to the DB-API cursor's
+        'execute' method.
+
+        @return: a Deferred which will fire the return value of a DB-API
+        cursor's 'fetchall' method, or a Failure.
+        """
+    def runOperation(self, *args, **kw):
+        """Execute an SQL query and return None.
+
+        A DB-API cursor will will be invoked with cursor.execute(*args, **kw).
+        The exact nature of the arguments will depend on the specific flavor
+        of DB-API being used, but the first argument in *args will be an SQL
+        statement. This method will not attempt to fetch any results from the
+        query and is thus suitable for INSERT, DELETE, and other SQL statements
+        which do not return values. If the 'execute' method raises an exception,
+        the transaction will be rolled back and a Failure returned.
+
+        The args and kw arguments will be passed to the DB-API cursor's
+        'execute' method.
+
+        return: a Deferred which will fire None or a Failure.
+        """
+    def close(self):
+        """Close all pool connections and shutdown the pool."""
+    def connect(self):
+        """Return a database connection when one becomes available.
+
+        This method blocks and should be run in a thread from the internal threadpool.
+        Don't call this method directly from non-threaded twisted code.
+
+        @return: a database connection from the pool.
+        """
+        
+# keep the namespace tidy
+del components
-------------- next part --------------
--- Twisted-1.3.0/twisted/python/dispatch.py	2003-11-29 00:30:05.000000000 -0500
+++ Twisted-Local/twisted/python/dispatch.py	2004-12-20 16:59:30.000000000 -0500
@@ -31,11 +31,12 @@
         self.prefix = prefix
         self.callbacks = {}
 
-
     def registerHandler(self, name, meth):
         self.callbacks.setdefault(name, []).append(meth)
 
-
+    def unregisterHandler(self, name, meth):
+        self.callbacks[name].remove(meth)
+        
     def autoRegister(self, obj):
         from twisted.python import reflect
         d = {}
@@ -43,7 +44,13 @@
         for k,v in d.items():
             self.registerHandler(k, v)
 
-
+    def autoUnregister(self, obj):
+        from twisted.python import reflect
+        d = {}
+        reflect.accumulateMethods(obj, d, self.prefix)
+        for k,v in d.items():
+            self.unregisterHandler(k, v)
+            
     def publishEvent(self, name, *args, **kwargs):
         for cb in self.callbacks[name]:
             cb(*args, **kwargs)

From mary-twisted at puzzling.org  Thu Dec 23 16:18:14 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Dec 2004 10:18:14 +1100
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041223231023.GI1460@groovy.net>
References: <20041223231023.GI1460@groovy.net>
Message-ID: <20041223231814.GB23419@fuchsia.puzzling.org>

On Thu, Dec 23, 2004, William Waites wrote:
> greetings, sent this directly to glyph a little while ago,
> to deafening silence... perhaps i said the wrong thing ;)

Nah, did the wrong thing... :) Best thing to do is add it to the bug
tracker at http://twistedmatrix.com/bugs/. Put [PATCH] in the subject.

Can you let me know whether it was anything on the website that
convinced you to send the code directly to Glyph, so that I can update
it? (It's not that Glyph eats the code of contributors for fiendish
pleasure... that I know of... it's just that it's better to put it in
the tracker.)

-Mary



From itamar at itamarst.org  Thu Dec 23 16:32:47 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Dec 2004 18:32:47 -0500
Subject: [Twisted-Python] ANN: Fusion v0.2, C++ integration for Twisted
Message-ID: <1103844768.14088.138.camel@sheriffpony>

Fusion is a library that supports implementing protocols in C++ for use
with Twisted, allowing control over memory allocation strategies, fast
method calls internally, etc.. Fusion supports TCP, UDP and multicast,
and is implemented using the Boost.Python python bindings.

Fusion has only been tested on Linux - Debian GNU/Linux with gcc 3.3 on
PowerPC and Redhat 7.3 with gcc 2.96 on x86.

Fusion is licensed under the MIT license, and available for download
from http://itamarst.org/software/fusion-0.2.tar.gz

Features supported in v0.2:

1. Scheduling functions with the twisted event loop from C++ (callLater
and LoopingCall).

2. Support for implementing C++ UDP and multicast protocols.

3. Support for implementing C++ TCP protocols (client and server), with
a zero-copy buffering layer written in C++. Protocols implemented in
Python can also use this custom buffering layer. There are two write
APIs, one accepting a functor/function that writes to a buffer allocated
by Fusion, and the other accepting a shared_ptr that points at an
instance that owns a buffer.


** WARNING **
Writing networking code in C++ can lead to buffer overflows and other
unpleasant security problems. Stick to pure Python unless you have no
other choice and know what you're doing. Don't assume I know what I'm
doing, either - bug reports are more than welcome :)





From ww at groovy.net  Thu Dec 23 17:22:30 2004
From: ww at groovy.net (William Waites)
Date: Thu, 23 Dec 2004 19:22:30 -0500
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041223231814.GB23419@fuchsia.puzzling.org>
References: <20041223231023.GI1460@groovy.net>
	<20041223231814.GB23419@fuchsia.puzzling.org>
Message-ID: <20041224002230.GJ1460@groovy.net>

On Fri, Dec 24, 2004 at 10:18:14AM +1100, Mary Gardiner wrote:
> On Thu, Dec 23, 2004, William Waites wrote:
> > greetings, sent this directly to glyph a little while ago,
> > to deafening silence... perhaps i said the wrong thing ;)
> 
> Nah, did the wrong thing... :) Best thing to do is add it to the bug
> tracker at http://twistedmatrix.com/bugs/. Put [PATCH] in the subject.

*sigh* 

yet another bugtracker... ok... sure thing.

> Can you let me know whether it was anything on the website that
> convinced you to send the code directly to Glyph, so that I can update
> it?

nothing in particular, i just didn't see anything obvious that said,
"code contributions go here," so i guessed...

-w



From mary-twisted at puzzling.org  Thu Dec 23 17:25:57 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Dec 2004 11:25:57 +1100
Subject: [Twisted-Python] a couple of patches
In-Reply-To: <20041224002230.GJ1460@groovy.net>
References: <20041223231023.GI1460@groovy.net>
	<20041223231814.GB23419@fuchsia.puzzling.org>
	<20041224002230.GJ1460@groovy.net>
Message-ID: <20041224002557.GA2087@home.puzzling.org>

On Thu, Dec 23, 2004, William Waites wrote:
> nothing in particular, i just didn't see anything obvious that said,
> "code contributions go here," so i guessed...

Thanks, I'll see what I can do about that...

-Mary



From alan.ezust at gmail.com  Fri Dec 24 13:10:16 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 12:10:16 -0800
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
Message-ID: <f377591c041224121015c2acd8@mail.gmail.com>

I'm playing around with Twisted for my first time, and I noticed that 
page.renderString() returns a string like this:

<Deferred at 0x4054616c  current result: '<html>\n  <head>\n   
<title>Greetings!</title>\n  </head>\n  <body>\n    <h1
style="font-size: large">Now I will greet you:</h1>\n    Hi My name
is\n  </body>\n</html>'>


First, why the Deferred result?

Second, what if I just want the actual string? What method should I
call? Or am I supposed to do something else to this before getting the
renderString?



From ww at groovy.net  Fri Dec 24 14:05:07 2004
From: ww at groovy.net (William Waites)
Date: Fri, 24 Dec 2004 16:05:07 -0500
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
In-Reply-To: <f377591c041224121015c2acd8@mail.gmail.com>
References: <f377591c041224121015c2acd8@mail.gmail.com>
Message-ID: <20041224210507.GK1460@groovy.net>

On Fri, Dec 24, 2004 at 12:10:16PM -0800, Alan Ezust wrote:
> I'm playing around with Twisted for my first time, and I noticed that 
> page.renderString() returns a string like this:
> 
> <Deferred at 0x4054616c  current result: '<html>\n  <head>\n   
> <title>Greetings!</title>\n  </head>\n  <body>\n    <h1
> style="font-size: large">Now I will greet you:</h1>\n    Hi My name
> is\n  </body>\n</html>'>
> 
> First, why the Deferred result?

I suspect it is because renderString might well want to do other
operations in order to construct the string, and the result may
not be immediately available.

> Second, what if I just want the actual string? What method should I
> call? Or am I supposed to do something else to this before getting the
> renderString?

You could do somethign like:

def _cbDoSomethingWithString(str):
    print str

page.renderString().addCallback(_cbDoSomethingWithString)

There is also a helper function that you can use:

    s = page.renderString()
    from twisted.trial.util import wait
    s = wait(s)

though I am not sure how advisable it is to use that, depending on
what exactly it is you are trying to do...

Cheers,
-w



From alan.ezust at gmail.com  Fri Dec 24 16:42:09 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 15:42:09 -0800
Subject: [Twisted-Python] nuvow webform example?
In-Reply-To: <20041224222315.GL1460@groovy.net>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
	<f377591c0412241350663f190@mail.gmail.com>
	<20041224222315.GL1460@groovy.net>
Message-ID: <f377591c04122415421b3aa3a5@mail.gmail.com>

I have another question about the docs in nuvow webform. I'm following
the tutorial for nevow and I want to create a dynamic form with model.

http://www.divmod.org/Home/Projects/Nevow/index.html

I see an example of the webform, but it doesn't quite work:

class WebForm(rend.Page):
#   document = rend.stan(  # this should be changed to:
    docFactory = loaders.stan(
    tags.html[
    tags.body[
        h1["Here is the form:"],
        webform.renderForms('original')
    ]
])
resource = WebForm(Implementation())


I'm not sure I quite understand why 'original' goes there, but in any
case, I don't get any output from this. Is there something else that
needs to be fixed with this example?



On Fri, 24 Dec 2004 17:23:15 -0500, William Waites <ww at groovy.net> wrote:
> On Fri, Dec 24, 2004 at 01:50:46PM -0800, Alan Ezust wrote:
> > Ah, thanks...  the wait() did the trick.
> >
> > As it turned out, all I was doing was a little test apparently
> > creating and calling renderstring() immediately afterwards is a little
> > too soon for python  to handle, in this example...
> 
> Careful though -- wait is only appropriate to use in trivial
> examples. in fact it is only used in the test suite. It does
> some things that are not really allowed. Take a look at the
> implementation of wait.
> 
> It is really much better to schedule a callback -- this is the
> meaning of "you don't call twisted, twisted calls you".
> 
> Good luck,
> -w
> 
> --
> ... a poem about a haircut! But lofty, noble, tragic, timeless,
> full of love, treachery, retribution, quiet heroism in the face
> of certain doom! Six lines, cleverly rhymed, and every word
> beginning with the letter s!
>



From alan.ezust at gmail.com  Fri Dec 24 16:53:10 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Fri, 24 Dec 2004 15:53:10 -0800
Subject: [Twisted-Python] Re: nuvow webform example?
In-Reply-To: <f377591c04122415421b3aa3a5@mail.gmail.com>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
	<f377591c0412241350663f190@mail.gmail.com>
	<20041224222315.GL1460@groovy.net>
	<f377591c04122415421b3aa3a5@mail.gmail.com>
Message-ID: <f377591c041224155323a14a30@mail.gmail.com>

oops. That last message was not clear at all.

Let me try again...

I'm following the tutorial. I defined classes

class ISimpleMethod(TypedInterface):
class Implementation(object):
as shown in the tutorial. Then I fixed up the webform, and here is my version:

class WebForm(rend.Page):
    docFactory = loaders.stan(
    tags.html[ tags.body[
        tags.h1["Here is the form:"],
        webform.renderForms('original')
    ]])

And here is a handler that is supposed to render the form.

def handler(req):
    req.content_type = "text/html"
    req.send_http_header()
     # this was the greeting example - works great.
    page = SearchPage("My name is Joe")    
    page.renderString().addCallback(req.write)

    # webform example - attempt to display.
    # I see "here is the form" but nothing else
    resource = WebForm(Implementation())
    resource.renderString().addCallback(req.write)

    return apache.OK



From dialtone at divmod.com  Fri Dec 24 18:43:30 2004
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Sat, 25 Dec 2004 02:43:30 +0100
Subject: [Twisted-Python] Page.renderString returns Deferred at <addr>
	current result: 'blah'
In-Reply-To: <20041224210507.GK1460@groovy.net>
References: <f377591c041224121015c2acd8@mail.gmail.com>
	<20041224210507.GK1460@groovy.net>
Message-ID: <41CCC5C2.6050003@divmod.com>

William Waites wrote:

>There is also a helper function that you can use:
>
>    s = page.renderString()
>    from twisted.trial.util import wait
>    s = wait(s)
>
>though I am not sure how advisable it is to use that, depending on
>what exactly it is you are trying to do...
>  
>
That's a solution, although not very 'clean'.
You should use renderSynchronously call in rend.Page.
Beware! You cannot have a deferred in renderSynchronously so use at your 
own risk :).



From tv at twistedmatrix.com  Sat Dec 25 03:59:33 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 25 Dec 2004 12:59:33 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN ignore
	files generated by unit tests.
In-Reply-To: <1103812537.14088.94.camel@sheriffpony>
References: <E1ChPs7-0001Mz-00@wolfwood>
	<1103812537.14088.94.camel@sheriffpony>
Message-ID: <41CD4815.8090106@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>Modified:
>>   trunk/twisted/lore/test/   (props changed)
>>   trunk/twisted/test/   (props changed)
>>Log:
>>Make SVN ignore files generated by unit tests.
>>    
>>
>Really we should fix the tests so that the files are not created under
>the twisted/ tree.
>  
>
I agree. However, that was not a <5 minute task for me.

twisted/test/myrebuilder.py is imported; if you put it
somewhere else, you need to do sys.path hacking or such.

twisted/lore/test/ ignored files are created by things where
I see no simple option for setting the destination directory.
Someone who knows lore better may want to pick that up.




From itamar at itamarst.org  Sat Dec 25 10:00:34 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 25 Dec 2004 12:00:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN
	ignore files generated by unit tests.
In-Reply-To: <41CD4815.8090106@twistedmatrix.com>
References: <E1ChPs7-0001Mz-00@wolfwood>
	<1103812537.14088.94.camel@sheriffpony>
	<41CD4815.8090106@twistedmatrix.com>
Message-ID: <1103994034.8343.44.camel@sheriffpony>

On Sat, 2004-12-25 at 12:59 +0200, Tommi Virtanen wrote:

> twisted/lore/test/ ignored files are created by things where
> I see no simple option for setting the destination directory.
> Someone who knows lore better may want to pick that up.

One would copy the files to mkdir(TestCase/mktemp(self)) and then run
the tests on the copies.




From foom at fuhm.net  Sat Dec 25 20:42:51 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 25 Dec 2004 22:42:51 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <381C4CC4-56F0-11D9-8D68-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-12-19 04:24:41.480000:
  Bugs opened: 8   Bugs closed: 2   Total open bugs: 319 (+6)
   Urgent: 13 (-1)
   Bug: 123 (+4)
   Feature: 121 (+3)
   Wish: 62 (+0)

New / Reopened Bugs
______________________
                     ==== Bug ====
win32: reactor.spawnProcess does not grant permission to open sockets  
(2 days ago)
        http://twistedmatrix.com/bugs/issue837 opened by stefanomasini

[CONCH, WIN32] Test suite import error on win32 
(twisted.conch.test.test_cftp)  (2 days ago)
        http://twistedmatrix.com/bugs/issue836 opened by spiv

[TRIAL] "trial --until-failure --debug" totally broken  (4 days ago)
        http://twistedmatrix.com/bugs/issue834 opened by exarkun

roundup shouldn't set status to chatting unless status is new or 
resolved  (5 days ago)
        http://twistedmatrix.com/bugs/issue833 opened by jknight

Roundup doesn't auto-add commentators to nosy list  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue824 opened by jknight

                     ==== Feature ====
[PATCH] Interface support for adbapi.ConnectionPool  (10 hours ago)
        http://twistedmatrix.com/bugs/issue839 opened by ww

[PATCH] Unregister handlers for EventDispatcher  (10 hours ago)
        http://twistedmatrix.com/bugs/issue838 opened by ww

[TRIAL] Trial dry-run  (3 days ago)
        http://twistedmatrix.com/bugs/issue835 opened by jml

Bugs Closed
______________________
                     ==== Urgent ====
[TRIAL] Intermittent 
twisted.trial.test.test_adapters.TestFailureFormatting failure  (3 
weeks ago)
        http://twistedmatrix.com/bugs/issue798 opened by exarkun, closed 
by spiv

                     ==== Bug ====
Roundup doesn't auto-add commentators to nosy list  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue824 opened by jknight, closed 
by radix




From tv at twistedmatrix.com  Sun Dec 26 06:42:25 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 15:42:25 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
Message-ID: <41CEBFC1.1040808@twistedmatrix.com>

If no one yells at me during the next 24 hours,
tomorrow I will run

svn commit -m 'Move sandbox outside of trunk.' \
  svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/trunk/sandbox \
  svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/sandbox

This is your only chance to prevent it. I want it gone.



From tv at twistedmatrix.com  Sun Dec 26 07:17:57 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 16:17:57 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r12768 - Make SVN	ignore
	files generated by unit tests.
In-Reply-To: <1103994034.8343.44.camel@sheriffpony>
References: <E1ChPs7-0001Mz-00@wolfwood>	<1103812537.14088.94.camel@sheriffpony>	<41CD4815.8090106@twistedmatrix.com>
	<1103994034.8343.44.camel@sheriffpony>
Message-ID: <41CEC815.1000907@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>twisted/lore/test/ ignored files are created by things where
>>I see no simple option for setting the destination directory.
>>Someone who knows lore better may want to pick that up.
>>    
>>
>One would copy the files to mkdir(TestCase/mktemp(self)) and then run
>the tests on the copies.
>  
>
I though of that, too, but considered it too messy at the time
(basically because I was too tired to actually read the code).
I just committed r12789:12791 which do exactly that.

That still leaves this:

twisted/test/myrebuilder.py is imported; if you put it
somewhere else, you need to do sys.path hacking or such.




From itamar at itamarst.org  Sun Dec 26 09:06:51 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 26 Dec 2004 11:06:51 -0500
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEBFC1.1040808@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
Message-ID: <1104077211.8349.122.camel@sheriffpony>

On Sun, 2004-12-26 at 15:42 +0200, Tommi Virtanen wrote:
> If no one yells at me during the next 24 hours,
> tomorrow I will run
> 
> svn commit -m 'Move sandbox outside of trunk.' \
>   svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/trunk/sandbox \
>   svn+ssh://tv at cvs.twistedmatrix.com/svn/Twisted/sandbox

Consider this a yell. What is your motivation for doing this? I'm not
saying I disagree, necessarily, but I'd like some discussion first.




From tv at twistedmatrix.com  Sun Dec 26 09:21:26 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 18:21:26 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <1104077211.8349.122.camel@sheriffpony>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
Message-ID: <41CEE506.6020201@twistedmatrix.com>

Itamar Shtull-Trauring wrote:

>>If no one yells at me during the next 24 hours,
>>tomorrow I will run
>>    
>>
>Consider this a yell. What is your motivation for doing this? I'm not
>saying I disagree, necessarily, but I'd like some discussion first.
>  
>
I think other people's sandbox changes just clutter up "svn st -u" and
"svn log", sandbox isn't really part of the twisted project (should not
get included in released source; should not get tagged; should not
get branched), and say 80% of the people co'ing trunk have no interest
in the sandbox (and when they have, it's easy to co when really wanted).

What's the _harm_ in moving it outside of trunk? Nevow has its sandbox
outside the trunk, and I really prefer it that way.




From alan.ezust at gmail.com  Sun Dec 26 09:24:18 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Sun, 26 Dec 2004 11:24:18 -0500
Subject: [Twisted-Python] errorhandler example in docs needs work
Message-ID: <f377591c04122608241f6e02bf@mail.gmail.com>

Reading this in the manual:
    http://twistedmatrix.com/documents/current/howto/defer

Example of how to write error handlers for exceptions:

def errorHandler(failure):
    failure.trap(SpamException, EggException)
    # Handle SpamExceptions and EggExceptions

d.addCallback(cookSpamAndEggs)
d.addErrback(errorHandler)

This example is missing something. The #handle SpamExceptions
should have at least one statement after the # like
      print "I am handling the exception"

I look at this example above and I still don't know how to write an
error handler. I shall read further, but I wanted to share my
feedback.



From tv at twistedmatrix.com  Sun Dec 26 09:58:12 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Dec 2004 18:58:12 +0200
Subject: [Twisted-Python] errorhandler example in docs needs work
In-Reply-To: <f377591c04122608241f6e02bf@mail.gmail.com>
References: <f377591c04122608241f6e02bf@mail.gmail.com>
Message-ID: <41CEEDA4.9090201@twistedmatrix.com>

Alan Ezust wrote:

>Reading this in the manual:
>    http://twistedmatrix.com/documents/current/howto/defer
>
>Example of how to write error handlers for exceptions:
>
>def errorHandler(failure):
>    failure.trap(SpamException, EggException)
>    # Handle SpamExceptions and EggExceptions
>
>d.addCallback(cookSpamAndEggs)
>d.addErrback(errorHandler)
>
>This example is missing something. The #handle SpamExceptions
>should have at least one statement after the # like
>      print "I am handling the exception"
>
>I look at this example above and I still don't know how to write an
>error handler. I shall read further, but I wanted to share my
>feedback.
>  
>
How would the print statement help you to know how to write an error 
handler?

Maybe there should be a "bigger" example somewhere, outside the defer howto,
with real code. Something like "try to fetch this URL via HTTP, retry up 
to three times".




From ww at groovy.net  Sun Dec 26 11:57:23 2004
From: ww at groovy.net (William Waites)
Date: Sun, 26 Dec 2004 13:57:23 -0500
Subject: [Twisted-Python] errorhandler example in docs needs work
In-Reply-To: <f377591c04122608241f6e02bf@mail.gmail.com>
References: <f377591c04122608241f6e02bf@mail.gmail.com>
Message-ID: <20041226185723.GN1460@groovy.net>

On Sun, Dec 26, 2004 at 11:24:18AM -0500, Alan Ezust wrote:
> 
> This example is missing something. The #handle SpamExceptions
> should have at least one statement after the # like
>       print "I am handling the exception"

If you want to see the error (and traceback), the usual thing to do is

	from twisted.python import log
	log.err(failure)

> I look at this example above and I still don't know how to write an
> error handler. I shall read further, but I wanted to share my
> feedback.

Of course the actual logic of the error handler depends on what the
error means and what should be done about it, but that is somewhat
application specific....

-w



From corydodt at twistedmatrix.com  Sun Dec 26 12:49:23 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 26 Dec 2004 11:49:23 -0800
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEE506.6020201@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
Message-ID: <41CF15C3.1060609@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I agree with the change, but I'm one of the people who will be
negatively impacted.  Probably, everyone doing serious work in the
sandbox will be in the same boat with me.  Published in mailing list
discussions or wikis or webpages, one occasionally mentions one's new
project which is not yet ready for Twisted, and one occasionally gets
email from people trying it out.  Changing the location of sandbox will
mean confused emails from people trying out that experimental code.

That said, I'm okay with this.

C


Tommi Virtanen wrote:
| Itamar Shtull-Trauring wrote:
|
|>> If no one yells at me during the next 24 hours,
|>> tomorrow I will run
|>>
|>
|> Consider this a yell. What is your motivation for doing this? I'm not
|> saying I disagree, necessarily, but I'd like some discussion first.
|>
|>
| I think other people's sandbox changes just clutter up "svn st -u" and
| "svn log", sandbox isn't really part of the twisted project (should not
| get included in released source; should not get tagged; should not
| get branched), and say 80% of the people co'ing trunk have no interest
| in the sandbox (and when they have, it's easy to co when really wanted).
|
| What's the _harm_ in moving it outside of trunk? Nevow has its sandbox
| outside the trunk, and I really prefer it that way.
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBzxXD3A5SrXAiHQcRAimHAJ45aZmqW5VgvmugEzixPsyHSVssYwCeJEkZ
8ewBuaThiRlVbG6eeUjKRuA=
=7mSJ
-----END PGP SIGNATURE-----



From tv at twistedmatrix.com  Mon Dec 27 02:28:49 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 27 Dec 2004 11:28:49 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CEE506.6020201@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
Message-ID: <41CFD5D1.2060405@twistedmatrix.com>

Tommi Virtanen wrote:

> I think other people's sandbox changes just clutter up "svn st -u" and
> "svn log", sandbox isn't really part of the twisted project (should not
> get included in released source; should not get tagged; should not
> get branched), and say 80% of the people co'ing trunk have no interest
> in the sandbox (and when they have, it's easy to co when really wanted).

Also, sandbox changes trigger buildbot, adding noise to the waterfall.



From corydodt at twistedmatrix.com  Mon Dec 27 09:52:17 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 27 Dec 2004 08:52:17 -0800
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CFD5D1.2060405@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>
	<41CFD5D1.2060405@twistedmatrix.com>
Message-ID: <41D03DC1.4050509@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Actually, they're not supposed to.  If they are triggering the buildbot,
it's a recent regression.

C


Tommi Virtanen wrote:
| Tommi Virtanen wrote:
|
|> I think other people's sandbox changes just clutter up "svn st -u" and
|> "svn log", sandbox isn't really part of the twisted project (should not
|> get included in released source; should not get tagged; should not
|> get branched), and say 80% of the people co'ing trunk have no interest
|> in the sandbox (and when they have, it's easy to co when really wanted).
|
|
| Also, sandbox changes trigger buildbot, adding noise to the waterfall.
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFB0D3A3A5SrXAiHQcRAr9OAJ956hUcVDUMfOKx7XCkcZngm2yvJACfQi6B
gSvpXP1wpOA34mvT/KxhY9U=
=v78m
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Mon Dec 27 10:43:10 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 27 Dec 2004 17:43:10 GMT
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41D03DC1.4050509@twistedmatrix.com>
Message-ID: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>

On Mon, 27 Dec 2004 08:52:17 -0800, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Actually, they're not supposed to.  If they are triggering the buildbot,
> it's a recent regression.

  Commits show up on the waterfall.  Builds are not triggered.

  Jp



From tv at twistedmatrix.com  Mon Dec 27 13:36:31 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 27 Dec 2004 22:36:31 +0200
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>
References: <20041227174310.10762.16078278.divmod.quotient.1966@ohm>
Message-ID: <41D0724F.4030406@twistedmatrix.com>

Jp Calderone wrote:

>>Actually, they're not supposed to.  If they are triggering the buildbot,
>>it's a recent regression.
>>    
>>
>  Commits show up on the waterfall.  Builds are not triggered.
>  
>
I stand corrected on that point.



From glyph at divmod.com  Mon Dec 27 14:35:00 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 27 Dec 2004 16:35:00 -0500
Subject: [Twisted-Python] Moving sandbox out of the trunk.
In-Reply-To: <41CF15C3.1060609@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
	<41CF15C3.1060609@twistedmatrix.com>
Message-ID: <1104183300.5341.1.camel@localhost>

On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:

> That said, I'm okay with this.

I won't be as negatively impacted, but I agree with this sentiment.

I believe the commit should go ahead - I hope to make branches a more
integral part of the development process soon, so anything that makes it
easier to check them out is worthwhile.

So, +1




From tv at twistedmatrix.com  Mon Dec 27 16:58:41 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 28 Dec 2004 01:58:41 +0200
Subject: [Twisted-Python] Sandbox has moved,
	please co it explicitly if you want it
In-Reply-To: <1104183300.5341.1.camel@localhost>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>	<41CF15C3.1060609@twistedmatrix.com>
	<1104183300.5341.1.camel@localhost>
Message-ID: <41D0A1B1.40803@twistedmatrix.com>

Glyph Lefkowitz wrote:

>On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:
>  
>
>>That said, I'm okay with this.
>>    
>>
>I won't be as negatively impacted, but I agree with this sentiment.
>
>I believe the commit should go ahead - I hope to make branches a more
>integral part of the development process soon, so anything that makes it
>easier to check them out is worthwhile.
>
>So, +1
>  
>
You two seem to be happy and itamar only wanted discussion :)

r12804 moved sandbox out of the trunk.

To get your hands on the new sandbox, use something like

svn co svn://cvs.twistedmatrix.com/svn/Twisted/sandbox
svn co svn+ssh://cvs.twistedmatrix.com/svn/Twisted/sandbox




From radeex at gmail.com  Mon Dec 27 19:58:21 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 28 Dec 2004 13:58:21 +1100
Subject: [Twisted-Python] Sandbox has moved,
	please co it explicitly if you want it
In-Reply-To: <41D0A1B1.40803@twistedmatrix.com>
References: <41CEBFC1.1040808@twistedmatrix.com>
	<1104077211.8349.122.camel@sheriffpony>
	<41CEE506.6020201@twistedmatrix.com>
	<41CF15C3.1060609@twistedmatrix.com>
	<1104183300.5341.1.camel@localhost> <41D0A1B1.40803@twistedmatrix.com>
Message-ID: <60ed19d40412271858577578aa@mail.gmail.com>

FYI, this may cause problems with existing checkouts such that the
only (obvious?) fix is to checkout a new copy. At least it did with
mine.

After a failed attempt to 'svn up' (which said some stuff about not
deleting the current directory since it was changed), svn stat told me
"! .", which means ". is not what I think it is". It was totally
incomprehensible to me, so I just checked out again.


On Tue, 28 Dec 2004 01:58:41 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> Glyph Lefkowitz wrote:
> 
> >On Sun, 2004-12-26 at 11:49 -0800, Cory Dodt wrote:
> >
> >
> >>That said, I'm okay with this.
> >>
> >>
> >I won't be as negatively impacted, but I agree with this sentiment.
> >
> >I believe the commit should go ahead - I hope to make branches a more
> >integral part of the development process soon, so anything that makes it
> >easier to check them out is worthwhile.
> >
> >So, +1
> >
> >
> You two seem to be happy and itamar only wanted discussion :)
> 
> r12804 moved sandbox out of the trunk.
> 
> To get your hands on the new sandbox, use something like
> 
> svn co svn://cvs.twistedmatrix.com/svn/Twisted/sandbox
> svn co svn+ssh://cvs.twistedmatrix.com/svn/Twisted/sandbox
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From tv at twistedmatrix.com  Mon Dec 27 22:47:23 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 28 Dec 2004 07:47:23 +0200
Subject: [Twisted-Python] Sandbox has moved,	please co it explicitly if
	you want it
In-Reply-To: <60ed19d40412271858577578aa@mail.gmail.com>
References: <41CEBFC1.1040808@twistedmatrix.com>	<1104077211.8349.122.camel@sheriffpony>	<41CEE506.6020201@twistedmatrix.com>	<41CF15C3.1060609@twistedmatrix.com>	<1104183300.5341.1.camel@localhost>
	<41D0A1B1.40803@twistedmatrix.com>
	<60ed19d40412271858577578aa@mail.gmail.com>
Message-ID: <41D0F36B.8000302@twistedmatrix.com>

Christopher Armstrong wrote:

>FYI, this may cause problems with existing checkouts such that the
>only (obvious?) fix is to checkout a new copy. At least it did with
>mine.
>
>After a failed attempt to 'svn up' (which said some stuff about not
>deleting the current directory since it was changed), svn stat told me
>"! .", which means ". is not what I think it is". It was totally
>incomprehensible to me, so I just checked out again.
>  
>
You had non-versioned stuff in sandbox/ that was left around for you
to clean up manually. See what's left and finally rm -rf sandbox.
That happens whenever svn up sees repository has removed a file,
but there's a "conflict" caused by local files hanging around.

Just as a counterpoint, my sandbox directory was clean and svn up
removed it happily.




From int at mtx.ru  Tue Dec 28 01:24:35 2004
From: int at mtx.ru (Pavel Volkovitskiy)
Date: Tue, 28 Dec 2004 11:24:35 +0300
Subject: [Twisted-Python] microdom bug
Message-ID: <41D11843.4090603@mtx.ru>

Hello

test.py
===================================================================
#!/usr/bin/env python2.4

from twisted.web import microdom
import xml.dom.minidom

data = '<div> <div>div 1.1</div> <div>div 1.2</div> </div>'

doc_minidom = xml.dom.minidom.parseString(data)
doc_microdom = microdom.parseString(data)

node_minidom = 
doc_minidom.getElementsByTagName('div')[0].getElementsByTagName('div')[0]
node_microdom = 
doc_microdom.getElementsByTagName('div')[0].getElementsByTagName('div')[0]

print 'minidom:', node_minidom.toxml()
print 'microdom:', node_microdom.toxml()
====================================================================

$./test.py
===========================================
minidom: <div>div 1.1</div>
microdom: <div><div>div 1.1</div><div>div 1.2</div></div>
===========================================



From prabaharpython at yahoo.co.in  Tue Dec 28 04:10:52 2004
From: prabaharpython at yahoo.co.in (praba mosas)
Date: Tue, 28 Dec 2004 11:10:52 +0000 (GMT)
Subject: [Twisted-Python] How to create a Twisted module?
In-Reply-To: <20041215182018.GA3995@sense-sea-MegaSub-1-465.oz.net>
Message-ID: <20041228111052.88616.qmail@web8203.mail.in.yahoo.com>

Dear  all
    I am new in this group.  I have a task which name
is "Web based file manager Twisted Module". I know all
the concepts about twisted But I didn't know anything
about Twisted in Technically. I am well fluent in
python.
     So what are the things I need to do for this?. 
What are the things require for this task?. I expect
details regarding software requirements.
      I have only Python software in my system. Is it
enough. I don't know how to import the twisted
packages into my system.
         Please mail me as early as possible.

regards
T.Mosas Prabahar

________________________________________________________________________
Yahoo! India Matrimony: Find your life partner online
Go to: http://yahoo.shaadi.com/india-matrimony



From justinjohnson at gmail.com  Tue Dec 28 13:32:04 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 28 Dec 2004 14:32:04 -0600
Subject: [Twisted-Python] More on PB Copyable Errors
Message-ID: <94a776e704122812321c78389@mail.gmail.com>

I would really like to be able to pass custom exceptions over the wire
in PB.  Previous discussion on this list ended with the conclusion
that it currently isn't possible without hacking a local copy of
Twisted.

I have done that to get the result I want, with minimal testing, and
would like to get some discussion going around this topic.  Attached
are 3 test files, s.py for the server, c.py for the client, and e.py
for the error definitions which are imported by both s.py and c.py. 
If I make the following modification to my local copy of
twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
the custom error is passed back as I want.

   #state['value'] = str(self.value) # Exception instance
   state['value'] = self.value # Exception instance

I was wondering if there is a reason we wouldn't want to change the
code to check for registered unjellyables for the exception, and
return them (or rather go through the jelly/unjelly process) if they
exist, but return the string representation otherwise.  Maybe that is
more complicated than I realize.

Any thoughts or suggestions on how we might make this possible?
Thanks.
-Justin



From justinjohnson at gmail.com  Tue Dec 28 13:34:02 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 28 Dec 2004 14:34:02 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e704122812321c78389@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
Message-ID: <94a776e70412281234522aa53d@mail.gmail.com>

Whoops... forgot the attachments.  Here they are.


On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> I would really like to be able to pass custom exceptions over the wire
> in PB.  Previous discussion on this list ended with the conclusion
> that it currently isn't possible without hacking a local copy of
> Twisted.
> 
> I have done that to get the result I want, with minimal testing, and
> would like to get some discussion going around this topic.  Attached
> are 3 test files, s.py for the server, c.py for the client, and e.py
> for the error definitions which are imported by both s.py and c.py.
> If I make the following modification to my local copy of
> twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> the custom error is passed back as I want.
> 
>   #state['value'] = str(self.value) # Exception instance
>   state['value'] = self.value # Exception instance
> 
> I was wondering if there is a reason we wouldn't want to change the
> code to check for registered unjellyables for the exception, and
> return them (or rather go through the jelly/unjelly process) if they
> exist, but return the string representation otherwise.  Maybe that is
> more complicated than I realize.
> 
> Any thoughts or suggestions on how we might make this possible?
> Thanks.
> -Justin
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: c.py
URL: </pipermail/twisted-python/attachments/20041228/c55d85d8/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: e.py
URL: </pipermail/twisted-python/attachments/20041228/c55d85d8/attachment-0001.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: s.py
URL: </pipermail/twisted-python/attachments/20041228/c55d85d8/attachment-0002.ksh>

From solipsis at pitrou.net  Wed Dec 29 03:24:10 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 29 Dec 2004 11:24:10 +0100
Subject: [Twisted-Python] access an XMLRPC service through an HTTP proxy
Message-ID: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

I'm using twisted.web.xmlrpc.Proxy to connect to an XMLRPC service.
Unfortunately there are situations in which I have to go through an HTTP
proxy, yet there doesn't seem to be an option for this (and looking at
the code, the connection to the remote server is quite "harwired").

Is there a simple way to do this ? (write a new protocol factory
perhaps ?)
Also, is there a way to discover the OS's HTTP proxy settings ?
(especially under Windows)

Thanks

Antoine.





From solipsis at pitrou.net  Wed Dec 29 05:49:17 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 29 Dec 2004 13:49:17 +0100
Subject: [Twisted-Python] access an XMLRPC service through an HTTP proxy
In-Reply-To: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <1104315850.1161.2.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1104324558.1161.5.camel@p-dhcp-333-72.rd.francetelecom.fr>


> I'm using twisted.web.xmlrpc.Proxy to connect to an XMLRPC service.
> Unfortunately there are situations in which I have to go through an HTTP
> proxy, yet there doesn't seem to be an option for this (and looking at
> the code, the connection to the remote server is quite "harwired").

Replying to myself... The following seems to work (I didn't test with
HTTPS) :

import urlparse
import twisted.web.xmlrpc as xmlrpc

class ProxiedXMLRPC:
    """
    A Proxy for making remote XML-RPC calls accross an HTTP proxy.

    Pass the URL of the remote XML-RPC server to the constructor,
    as well as the proxy host and port.

    Use proxy.callRemote('foobar', *args) to call remote method
    'foobar' with *args.
    """

    def __init__(self, reactor, url, proxy_host, proxy_port):
        self.reactor = reactor
        self.url = url
        self.proxy_host = proxy_host
        self.proxy_port = proxy_port
        parts = urlparse.urlparse(url)
        self.remote_host = parts[1]
        self.secure = parts[0] == 'https'

    def callRemote(self, method, *args):
        factory = xmlrpc.QueryFactory(self.url, self.remote_host, method, *args)
        if self.secure:
            from twisted.internet import ssl
            self.reactor.connectSSL(self.proxy_host, self.proxy_port,
                               factory, ssl.ClientContextFactory())
        else:
            self.reactor.connectTCP(self.proxy_host, self.proxy_port, factory)
        return factory.deferred


Regards

Antoine.





From justinjohnson at gmail.com  Wed Dec 29 07:56:48 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 08:56:48 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e70412281234522aa53d@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
Message-ID: <94a776e70412290656149280cd@mail.gmail.com>

Attached is a patch with modifications to pb.py and jelly.py.  With
the patch applied, CopyableFailure.getStateToCopy first checks to see
if the actual exception instance's class has an unjellyable registered
so it can be unjellied on the other side.  If it does, the actual
exception instance is passed back as failure.value.  Otherwise a
string representation is passed back as it is today.

I'd like some confirmation that this is an acceptable approach.  If so
I will gladly submit an enhancement and attach the patch.

-Justin


On Tue, 28 Dec 2004 14:34:02 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Whoops... forgot the attachments.  Here they are.
> 
> 
> On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > I would really like to be able to pass custom exceptions over the wire
> > in PB.  Previous discussion on this list ended with the conclusion
> > that it currently isn't possible without hacking a local copy of
> > Twisted.
> >
> > I have done that to get the result I want, with minimal testing, and
> > would like to get some discussion going around this topic.  Attached
> > are 3 test files, s.py for the server, c.py for the client, and e.py
> > for the error definitions which are imported by both s.py and c.py.
> > If I make the following modification to my local copy of
> > twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> > the custom error is passed back as I want.
> >
> >   #state['value'] = str(self.value) # Exception instance
> >   state['value'] = self.value # Exception instance
> >
> > I was wondering if there is a reason we wouldn't want to change the
> > code to check for registered unjellyables for the exception, and
> > return them (or rather go through the jelly/unjelly process) if they
> > exist, but return the string representation otherwise.  Maybe that is
> > more complicated than I realize.
> >
> > Any thoughts or suggestions on how we might make this possible?
> > Thanks.
> > -Justin
> >
> 
> 
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch.txt
URL: </pipermail/twisted-python/attachments/20041229/0184d235/attachment-0002.txt>

From justinjohnson at gmail.com  Wed Dec 29 08:20:40 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 09:20:40 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e70412290656149280cd@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
Message-ID: <94a776e704122907202ca18c98@mail.gmail.com>

Submitted Issue844.

On Wed, 29 Dec 2004 08:56:48 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Attached is a patch with modifications to pb.py and jelly.py.  With
> the patch applied, CopyableFailure.getStateToCopy first checks to see
> if the actual exception instance's class has an unjellyable registered
> so it can be unjellied on the other side.  If it does, the actual
> exception instance is passed back as failure.value.  Otherwise a
> string representation is passed back as it is today.
> 
> I'd like some confirmation that this is an acceptable approach.  If so
> I will gladly submit an enhancement and attach the patch.
> 
> -Justin
> 
> On Tue, 28 Dec 2004 14:34:02 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > Whoops... forgot the attachments.  Here they are.
> >
> >
> > On Tue, 28 Dec 2004 14:32:04 -0600, Justin Johnson
> > <justinjohnson at gmail.com> wrote:
> > > I would really like to be able to pass custom exceptions over the wire
> > > in PB.  Previous discussion on this list ended with the conclusion
> > > that it currently isn't possible without hacking a local copy of
> > > Twisted.
> > >
> > > I have done that to get the result I want, with minimal testing, and
> > > would like to get some discussion going around this topic.  Attached
> > > are 3 test files, s.py for the server, c.py for the client, and e.py
> > > for the error definitions which are imported by both s.py and c.py.
> > > If I make the following modification to my local copy of
> > > twisted/spread/pb.py in the CopyableFailure's getStateToCopy method,
> > > the custom error is passed back as I want.
> > >
> > >   #state['value'] = str(self.value) # Exception instance
> > >   state['value'] = self.value # Exception instance
> > >
> > > I was wondering if there is a reason we wouldn't want to change the
> > > code to check for registered unjellyables for the exception, and
> > > return them (or rather go through the jelly/unjelly process) if they
> > > exist, but return the string representation otherwise.  Maybe that is
> > > more complicated than I realize.
> > >
> > > Any thoughts or suggestions on how we might make this possible?
> > > Thanks.
> > > -Justin
> > >
> >
> >
> >
> 
> 
>



From db3l at fitlinxx.com  Wed Dec 29 12:15:57 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 14:15:57 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
Message-ID: <uzmzwex02.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Attached is a patch with modifications to pb.py and jelly.py.  With
> the patch applied, CopyableFailure.getStateToCopy first checks to see
> if the actual exception instance's class has an unjellyable registered
> so it can be unjellied on the other side.  If it does, the actual
> exception instance is passed back as failure.value.  Otherwise a
> string representation is passed back as it is today.

I think the one big risk with this approach is that I'm not sure a
sender can ever know accurately whether a recipient will be able to
unjelly a particular instance.  In your case, you're assuming the two
sides are symmetrical and have imported the same definitions, but that
need not be the case.  At least in general, it's certainly possible
for the transmitting side to not have the unjellier registered (if it
never expects to receive such objects back, for example).  Or
conversely, the sender may have an unjellier registered but the
recipient won't.  In this latter case you'd get an exception on the
remote side which sending the string would have avoided.

One alternative approach to handle this is to transmit both the string
and instance representation, and then let the decoding side trap any
unjellier security exceptions and fall back to the string
representation.  The big question of course is whether such a fallback
should be automatic, silent, etc..

Another option would be to provide some sort of configurability
(perhaps something along the lines of how unsafe traceback support is
handled) so an application could make the choice of what mode to
operate in, either string names, or full instances (and the latter
just has to have unjelliers registered just as for any other remotes).

I'm sort of in the same state you are in, in that for me the simplest
approach is just transmit the instance because my two sides are in
fact symmetric.  So the short internal change to local source works
fine for me too.  But I think that any general addition to the twisted
base needs to take the more general proposition (and issues) into account.

-- David




From justinjohnson at gmail.com  Wed Dec 29 12:47:48 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 29 Dec 2004 13:47:48 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uzmzwex02.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
Message-ID: <94a776e704122911477e36fb72@mail.gmail.com>

Thanks for the reply.

In my testing it seemed that I would get an InsecureJelly error on the
sending side if I tried to send back an object that I hadn't called
pb.setUnjellyableForClass on the sending side for.  In other words,
calling setUnjellyableForClass on the sending side was a way of saying
that it was okay to send over the wire, and also a way of registering
what class to use when unjellying it if it were received.

Is this not correct?


On 29 Dec 2004 14:15:57 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Attached is a patch with modifications to pb.py and jelly.py.  With
> > the patch applied, CopyableFailure.getStateToCopy first checks to see
> > if the actual exception instance's class has an unjellyable registered
> > so it can be unjellied on the other side.  If it does, the actual
> > exception instance is passed back as failure.value.  Otherwise a
> > string representation is passed back as it is today.
> 
> I think the one big risk with this approach is that I'm not sure a
> sender can ever know accurately whether a recipient will be able to
> unjelly a particular instance.  In your case, you're assuming the two
> sides are symmetrical and have imported the same definitions, but that
> need not be the case.  At least in general, it's certainly possible
> for the transmitting side to not have the unjellier registered (if it
> never expects to receive such objects back, for example).  Or
> conversely, the sender may have an unjellier registered but the
> recipient won't.  In this latter case you'd get an exception on the
> remote side which sending the string would have avoided.
>
> One alternative approach to handle this is to transmit both the string
> and instance representation, and then let the decoding side trap any
> unjellier security exceptions and fall back to the string
> representation.  The big question of course is whether such a fallback
> should be automatic, silent, etc..
> 
> Another option would be to provide some sort of configurability
> (perhaps something along the lines of how unsafe traceback support is
> handled) so an application could make the choice of what mode to
> operate in, either string names, or full instances (and the latter
> just has to have unjelliers registered just as for any other remotes).
> 
> I'm sort of in the same state you are in, in that for me the simplest
> approach is just transmit the instance because my two sides are in
> fact symmetric.  So the short internal change to local source works
> fine for me too.  But I think that any general addition to the twisted
> base needs to take the more general proposition (and issues) into account.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radeex at gmail.com  Wed Dec 29 15:06:06 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 30 Dec 2004 09:06:06 +1100
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uzmzwex02.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
Message-ID: <60ed19d4041229140616fbc760@mail.gmail.com>

On 29 Dec 2004 14:15:57 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> I think the one big risk with this approach is that I'm not sure a
> sender can ever know accurately whether a recipient will be able to
> unjelly a particular instance.  In your case, you're assuming the two
> sides are symmetrical and have imported the same definitions, but that
> need not be the case.  At least in general, it's certainly possible
> for the transmitting side to not have the unjellier registered (if it
> never expects to receive such objects back, for example).  Or
> conversely, the sender may have an unjellier registered but the
> recipient won't.  In this latter case you'd get an exception on the
> remote side which sending the string would have avoided.

Why's that actually a risk? In any case where a PB app uses Copyable
and suchlike, that assumption is made. If someone is marking an
exception as jellyable, then they know that their clients should also
be able to unjelly that exception, and it will be a part of the
protocol.

> Another option would be to provide some sort of configurability
> (perhaps something along the lines of how unsafe traceback support is
> handled) so an application could make the choice of what mode to
> operate in, either string names, or full instances (and the latter
> just has to have unjelliers registered just as for any other remotes).

That's exactly what the patch would do, AIUI. On the server side, you
can set unsafeTracebacks if you want tracebacks to be sent to the
client. The server side can also set an exception class as jellyable
if you want to send exception instances to the client.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From db3l at fitlinxx.com  Wed Dec 29 18:38:05 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 20:38:05 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<60ed19d4041229140616fbc760@mail.gmail.com>
Message-ID: <umzvwefb6.fsf@fitlinxx.com>

Christopher Armstrong <radeex at gmail.com> writes:

(...)
> Why's that actually a risk? In any case where a PB app uses Copyable
> and suchlike, that assumption is made. If someone is marking an
> exception as jellyable, then they know that their clients should also
> be able to unjelly that exception, and it will be a part of the
> protocol.

Yeah, that's reasonable.  It doesn't cover a desire to transmit system
exceptions (e.g., we sometimes reuse ValueError rather than redefining our
own version of it), but at worst you'd just need to build a mirror
hierarchy for those system exceptions you might reuse.

(...)
> That's exactly what the patch would do, AIUI. On the server side, you
> can set unsafeTracebacks if you want tracebacks to be sent to the
> client. The server side can also set an exception class as jellyable
> if you want to send exception instances to the client.

Well, the patch is checking the unjelly registry to make the encoding
decision on the server side, which I don't think is the same thing as
what you're saying.  To check for whether the exception was marked as
jellyable, it should be checking for a subclass of Jellyable and not
looking in the unjelly registry (I think).

But yeah, if the patch looked for a Jellyable subclass (which is the
same thing the normal _Jellier class does when jellying anything
else), I think that would be a reasonable approach.

-- David





From db3l at fitlinxx.com  Wed Dec 29 19:31:17 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 29 Dec 2004 21:31:17 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
Message-ID: <uis6kecui.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> In my testing it seemed that I would get an InsecureJelly error on the
> sending side if I tried to send back an object that I hadn't called
> pb.setUnjellyableForClass on the sending side for.  In other words,
> calling setUnjellyableForClass on the sending side was a way of saying
> that it was okay to send over the wire, and also a way of registering
> what class to use when unjellying it if it were received.
> 
> Is this not correct?

I believe the only purpose of setUnjellyableForClass is to establish
what to do for unjellying.  While it does also impact the global
security options (which do get checked during jellying) the way it
stores type information in there is only matched during unjellying, at
least in my experience (it adds permission for the type but not the
instance).

I believe the only (typical) requirement to support jellying an object
is that it be a class that is a jelly.Jellyable subclass (such as any
of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
else should be needed on the server side.

I just tried a quick tweak to your s/e/c.py modules so that s.py
returned an instance of a dummy class defined in e.py instead of an
error, and it seems to work fine even if the server side (s) hasn't
issued the setUnjellyableForClass call.  Without that call, the client
will raise the error after receiving the object.  And even if the
server does issue that call, if the dummy class isn't inheriting from
Copyable, the insecure error is generated on the transmitting side.

It is, however, possible to insert additional types/classes/modules
into the global security options independent of class inheritance from
Jellyable.  This is how all the basic Python types are handled, but it
can be extended to support your own classes (although I had a problem
with extension classes/types, since I originally tried to use this to
support mxDateTime objects without modifying jelly).

So for example, if I have my test class "MyObject" in e.py, and
instead of setUnjellyableForClass, I use something like
"jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
will still be successfully sent and received (providing the instance
data can also be jellied).

So after writing this, the fact that the security options could get
used to permit an instance (that isn't of a subclass of Jellyable) to
be encoded might mean that just verifying Jellyable (ala my last
response to Christopher) is insufficient, at least technically.

Perhaps the only true way to determine if something is jellyable is to
try to jelly it (heck, that's probably more Pythonic anyway), and just
handle an exception as a fallback to the string representation.

-- David




From solipsis at pitrou.net  Thu Dec 30 07:44:32 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 30 Dec 2004 15:44:32 +0100
Subject: [Twisted-Python] ludicrous timeouts in protocols.http.HTTPFactory
	and web.server.Site
Message-ID: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

I'm accessing a twisted-based XMLRPC server through an HTTP proxy which
seems to leave outgoing connections open for a very long time (I think
it waits for the server to close them on its own). This means that after
a handful of remote method calls through this proxy, my server runs into
file descriptor limits:

Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 535, in _doReadOrWrite
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line 625, in doRead
  File "/usr/src/build/475206-i386/install/usr/lib/python2.3/socket.py", line 167, in accept
socket.error: (24, 'Too many open files')

Which is easily checked by a netstat dump :

$ netstat --inet --tcp -n -p | grep :8550
tcp        0      0 192.33.178.29:8550          193.49.124.107:30839        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:25463        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:37494        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:33910        ESTABLISHED 3076/python 
tcp        0      0 192.33.178.29:8550          193.49.124.107:20854        ESTABLISHED 3076/python 
...
... and so on for exactly 998 lines


Looking at the Twisted code, I see that very long timeouts have been
defined for both protocols.http.HTTPFactory and web.server.Site
(60*60*12, that is 12 hours!). If I override the "timeout" parameter
when constructing the Site receiving XMLRPC connections, then the
problem disappears:
        reactor.listenTCP(xmlrpc_port, server.Site(self, timeout=30), interface=xmlrpc_host)

I think the default values in Twisted are quite bogus and should be
changed to more sensible ones. 30 or 60 seconds is ok in the context of
an HTTP connection. Very long timeouts on the other hand make the server
very vulnerable.

Regards

Antoine.





From justinjohnson at gmail.com  Thu Dec 30 08:48:17 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 09:48:17 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uis6kecui.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
Message-ID: <94a776e7041230074867d17cc6@mail.gmail.com>

I agree.  I did some testing to verify what you were saying.  So this
is basically reiterating everything you just said, but just for
clarification for myself... in the current non-patched code the
following happens:

When the server encounters an error while calling a method that was
invoked from a remote client, it will...
   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
replacing actual pb.Error instances with a string representation of
them.
   2) Return a new (non-wrapping) pb.CopyableFailure for all other
errors, thus including stack trace, etc.

When the server needs to send anything else back to the client, if it
is a subclass of flavors.Jellyable it sends it back.  Otherwise it
raises InsecureJelly on the server side.

On the client side it will unjelly the thing sent across if it can
(i.e. if setUnjellyableForClass was called).  Otherwise it raises an
InsecureJelly on the client side.

So it seems like these are our options:

1) If an error is Jellyable, send it and assume the client will either
unjelly it or deal with unjellying errors.

2) If an error is Jellyable, send it.  If the client fails to unjelly
it, communicate back to the server who then sends a CopyableFailure
wrapping the original error.

3) If an error is Jellyable, send both it and a CopyableFailure
wrapping the original error.  The client can then first try to unjelly
the error and fall back to the CopyableFailure that was passed along.


I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.

-Justin


On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > In my testing it seemed that I would get an InsecureJelly error on the
> > sending side if I tried to send back an object that I hadn't called
> > pb.setUnjellyableForClass on the sending side for.  In other words,
> > calling setUnjellyableForClass on the sending side was a way of saying
> > that it was okay to send over the wire, and also a way of registering
> > what class to use when unjellying it if it were received.
> >
> > Is this not correct?
> 
> I believe the only purpose of setUnjellyableForClass is to establish
> what to do for unjellying.  While it does also impact the global
> security options (which do get checked during jellying) the way it
> stores type information in there is only matched during unjellying, at
> least in my experience (it adds permission for the type but not the
> instance).
> 
> I believe the only (typical) requirement to support jellying an object
> is that it be a class that is a jelly.Jellyable subclass (such as any
> of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> else should be needed on the server side.
> 
> I just tried a quick tweak to your s/e/c.py modules so that s.py
> returned an instance of a dummy class defined in e.py instead of an
> error, and it seems to work fine even if the server side (s) hasn't
> issued the setUnjellyableForClass call.  Without that call, the client
> will raise the error after receiving the object.  And even if the
> server does issue that call, if the dummy class isn't inheriting from
> Copyable, the insecure error is generated on the transmitting side.
> 
> It is, however, possible to insert additional types/classes/modules
> into the global security options independent of class inheritance from
> Jellyable.  This is how all the basic Python types are handled, but it
> can be extended to support your own classes (although I had a problem
> with extension classes/types, since I originally tried to use this to
> support mxDateTime objects without modifying jelly).
> 
> So for example, if I have my test class "MyObject" in e.py, and
> instead of setUnjellyableForClass, I use something like
> "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> will still be successfully sent and received (providing the instance
> data can also be jellied).
> 
> So after writing this, the fact that the security options could get
> used to permit an instance (that isn't of a subclass of Jellyable) to
> be encoded might mean that just verifying Jellyable (ala my last
> response to Christopher) is insufficient, at least technically.
> 
> Perhaps the only true way to determine if something is jellyable is to
> try to jelly it (heck, that's probably more Pythonic anyway), and just
> handle an exception as a fallback to the string representation.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From justinjohnson at gmail.com  Thu Dec 30 08:57:49 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 09:57:49 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e7041230074867d17cc6@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
Message-ID: <94a776e704123007572b3dc57b@mail.gmail.com>

Option 1 is also most like the way things work today for sending
anything that isn't an error.  The only reason CopyableFailure exists
is because you HAVE to send a failure.  Whether it is
jelly/unjellyable or not, the other end must be informed of errors. 
But as soon as a developer decides to make their errors copyable, they
have in effect agreed that they are responsible for testing the
unjellying on the other end.


On Thu, 30 Dec 2004 09:48:17 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> I agree.  I did some testing to verify what you were saying.  So this
> is basically reiterating everything you just said, but just for
> clarification for myself... in the current non-patched code the
> following happens:
> 
> When the server encounters an error while calling a method that was
> invoked from a remote client, it will...
>   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
> replacing actual pb.Error instances with a string representation of
> them.
>   2) Return a new (non-wrapping) pb.CopyableFailure for all other
> errors, thus including stack trace, etc.
> 
> When the server needs to send anything else back to the client, if it
> is a subclass of flavors.Jellyable it sends it back.  Otherwise it
> raises InsecureJelly on the server side.
> 
> On the client side it will unjelly the thing sent across if it can
> (i.e. if setUnjellyableForClass was called).  Otherwise it raises an
> InsecureJelly on the client side.
> 
> So it seems like these are our options:
> 
> 1) If an error is Jellyable, send it and assume the client will either
> unjelly it or deal with unjellying errors.
> 
> 2) If an error is Jellyable, send it.  If the client fails to unjelly
> it, communicate back to the server who then sends a CopyableFailure
> wrapping the original error.
> 
> 3) If an error is Jellyable, send both it and a CopyableFailure
> wrapping the original error.  The client can then first try to unjelly
> the error and fall back to the CopyableFailure that was passed along.
> 
> I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.
> 
> -Justin
> 
> 
> On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> > Justin Johnson <justinjohnson at gmail.com> writes:
> >
> > > In my testing it seemed that I would get an InsecureJelly error on the
> > > sending side if I tried to send back an object that I hadn't called
> > > pb.setUnjellyableForClass on the sending side for.  In other words,
> > > calling setUnjellyableForClass on the sending side was a way of saying
> > > that it was okay to send over the wire, and also a way of registering
> > > what class to use when unjellying it if it were received.
> > >
> > > Is this not correct?
> >
> > I believe the only purpose of setUnjellyableForClass is to establish
> > what to do for unjellying.  While it does also impact the global
> > security options (which do get checked during jellying) the way it
> > stores type information in there is only matched during unjellying, at
> > least in my experience (it adds permission for the type but not the
> > instance).
> >
> > I believe the only (typical) requirement to support jellying an object
> > is that it be a class that is a jelly.Jellyable subclass (such as any
> > of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> > else should be needed on the server side.
> >
> > I just tried a quick tweak to your s/e/c.py modules so that s.py
> > returned an instance of a dummy class defined in e.py instead of an
> > error, and it seems to work fine even if the server side (s) hasn't
> > issued the setUnjellyableForClass call.  Without that call, the client
> > will raise the error after receiving the object.  And even if the
> > server does issue that call, if the dummy class isn't inheriting from
> > Copyable, the insecure error is generated on the transmitting side.
> >
> > It is, however, possible to insert additional types/classes/modules
> > into the global security options independent of class inheritance from
> > Jellyable.  This is how all the basic Python types are handled, but it
> > can be extended to support your own classes (although I had a problem
> > with extension classes/types, since I originally tried to use this to
> > support mxDateTime objects without modifying jelly).
> >
> > So for example, if I have my test class "MyObject" in e.py, and
> > instead of setUnjellyableForClass, I use something like
> > "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> > will still be successfully sent and received (providing the instance
> > data can also be jellied).
> >
> > So after writing this, the fact that the security options could get
> > used to permit an instance (that isn't of a subclass of Jellyable) to
> > be encoded might mean that just verifying Jellyable (ala my last
> > response to Christopher) is insufficient, at least technically.
> >
> > Perhaps the only true way to determine if something is jellyable is to
> > try to jelly it (heck, that's probably more Pythonic anyway), and just
> > handle an exception as a fallback to the string representation.
> >
> > -- David
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From justinjohnson at gmail.com  Thu Dec 30 09:27:26 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 10:27:26 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e704123007572b3dc57b@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
Message-ID: <94a776e70412300827a0ec69d@mail.gmail.com>

A new patch is attached.


On Thu, 30 Dec 2004 09:57:49 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Option 1 is also most like the way things work today for sending
> anything that isn't an error.  The only reason CopyableFailure exists
> is because you HAVE to send a failure.  Whether it is
> jelly/unjellyable or not, the other end must be informed of errors.
> But as soon as a developer decides to make their errors copyable, they
> have in effect agreed that they are responsible for testing the
> unjellying on the other end.
> 
> 
> On Thu, 30 Dec 2004 09:48:17 -0600, Justin Johnson
> <justinjohnson at gmail.com> wrote:
> > I agree.  I did some testing to verify what you were saying.  So this
> > is basically reiterating everything you just said, but just for
> > clarification for myself... in the current non-patched code the
> > following happens:
> >
> > When the server encounters an error while calling a method that was
> > invoked from a remote client, it will...
> >   1) Wrap all subclasses of pb.Error in a pb.CopyableFailure, thus
> > replacing actual pb.Error instances with a string representation of
> > them.
> >   2) Return a new (non-wrapping) pb.CopyableFailure for all other
> > errors, thus including stack trace, etc.
> >
> > When the server needs to send anything else back to the client, if it
> > is a subclass of flavors.Jellyable it sends it back.  Otherwise it
> > raises InsecureJelly on the server side.
> >
> > On the client side it will unjelly the thing sent across if it can
> > (i.e. if setUnjellyableForClass was called).  Otherwise it raises an
> > InsecureJelly on the client side.
> >
> > So it seems like these are our options:
> >
> > 1) If an error is Jellyable, send it and assume the client will either
> > unjelly it or deal with unjellying errors.
> >
> > 2) If an error is Jellyable, send it.  If the client fails to unjelly
> > it, communicate back to the server who then sends a CopyableFailure
> > wrapping the original error.
> >
> > 3) If an error is Jellyable, send both it and a CopyableFailure
> > wrapping the original error.  The client can then first try to unjelly
> > the error and fall back to the CopyableFailure that was passed along.
> >
> > I vote for option 1.  Options 2 and 3 seem somewhat hacky to me.
> >
> > -Justin
> >
> >
> > On 29 Dec 2004 21:31:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> > > Justin Johnson <justinjohnson at gmail.com> writes:
> > >
> > > > In my testing it seemed that I would get an InsecureJelly error on the
> > > > sending side if I tried to send back an object that I hadn't called
> > > > pb.setUnjellyableForClass on the sending side for.  In other words,
> > > > calling setUnjellyableForClass on the sending side was a way of saying
> > > > that it was okay to send over the wire, and also a way of registering
> > > > what class to use when unjellying it if it were received.
> > > >
> > > > Is this not correct?
> > >
> > > I believe the only purpose of setUnjellyableForClass is to establish
> > > what to do for unjellying.  While it does also impact the global
> > > security options (which do get checked during jellying) the way it
> > > stores type information in there is only matched during unjellying, at
> > > least in my experience (it adds permission for the type but not the
> > > instance).
> > >
> > > I believe the only (typical) requirement to support jellying an object
> > > is that it be a class that is a jelly.Jellyable subclass (such as any
> > > of the remoteable flavors like Copyable, Referenceable, etc...).  Nothing
> > > else should be needed on the server side.
> > >
> > > I just tried a quick tweak to your s/e/c.py modules so that s.py
> > > returned an instance of a dummy class defined in e.py instead of an
> > > error, and it seems to work fine even if the server side (s) hasn't
> > > issued the setUnjellyableForClass call.  Without that call, the client
> > > will raise the error after receiving the object.  And even if the
> > > server does issue that call, if the dummy class isn't inheriting from
> > > Copyable, the insecure error is generated on the transmitting side.
> > >
> > > It is, however, possible to insert additional types/classes/modules
> > > into the global security options independent of class inheritance from
> > > Jellyable.  This is how all the basic Python types are handled, but it
> > > can be extended to support your own classes (although I had a problem
> > > with extension classes/types, since I originally tried to use this to
> > > support mxDateTime objects without modifying jelly).
> > >
> > > So for example, if I have my test class "MyObject" in e.py, and
> > > instead of setUnjellyableForClass, I use something like
> > > "jelly.globalSecurity.allowInstancesOf(MyObject)", then the object
> > > will still be successfully sent and received (providing the instance
> > > data can also be jellied).
> > >
> > > So after writing this, the fact that the security options could get
> > > used to permit an instance (that isn't of a subclass of Jellyable) to
> > > be encoded might mean that just verifying Jellyable (ala my last
> > > response to Christopher) is insufficient, at least technically.
> > >
> > > Perhaps the only true way to determine if something is jellyable is to
> > > try to jelly it (heck, that's probably more Pythonic anyway), and just
> > > handle an exception as a fallback to the string representation.
> > >
> > > -- David
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch.txt
URL: </pipermail/twisted-python/attachments/20041230/057bd89d/attachment-0002.txt>

From db3l at fitlinxx.com  Thu Dec 30 09:52:17 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 30 Dec 2004 11:52:17 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
Message-ID: <uekh7hgou.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> A new patch is attached.

If we're going with the instance check, I'd probably stick with
Jellyable and not Copyable (since you might have a referenceable or
viewable exception object) - that matches the actual jelly()
implementation.

I'm still wondering if just trying to jelly the object isn't the
best approach in the end though, since checking the instance class
excludes the cases where the security options permits the object
to be sent (e.g., I might use the security options to let standard
Python exceptions through without having my own Copyable subclasses).

>From a prior post of yours:

> Option 1 is also most like the way things work today for sending
> anything that isn't an error.  The only reason CopyableFailure exists

Close - option 1 (Jellyable subclass) is one half of the jellying
process - the other half is the type being allowed by the security options
and being supported by the default jelly handling of native Python types.

-- David




From justinjohnson at gmail.com  Thu Dec 30 11:25:01 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 30 Dec 2004 12:25:01 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uekh7hgou.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e70412281234522aa53d@mail.gmail.com>
	<94a776e70412290656149280cd@mail.gmail.com>
	<uzmzwex02.fsf@fitlinxx.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
Message-ID: <94a776e704123010255c184077@mail.gmail.com>

Oh yeah, right.  I managed to entirely skip your comments on the
security options.

How about the attached patch?


On 30 Dec 2004 11:52:17 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > A new patch is attached.
> 
> If we're going with the instance check, I'd probably stick with
> Jellyable and not Copyable (since you might have a referenceable or
> viewable exception object) - that matches the actual jelly()
> implementation.
> 
> I'm still wondering if just trying to jelly the object isn't the
> best approach in the end though, since checking the instance class
> excludes the cases where the security options permits the object
> to be sent (e.g., I might use the security options to let standard
> Python exceptions through without having my own Copyable subclasses).
> 
> >From a prior post of yours:
> 
> > Option 1 is also most like the way things work today for sending
> > anything that isn't an error.  The only reason CopyableFailure exists
> 
> Close - option 1 (Jellyable subclass) is one half of the jellying
> process - the other half is the type being allowed by the security options
> and being supported by the default jelly handling of native Python types.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: new_patch.txt
URL: </pipermail/twisted-python/attachments/20041230/91be9acc/attachment-0002.txt>

From pf_moore at yahoo.co.uk  Thu Dec 30 14:50:21 2004
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu, 30 Dec 2004 21:50:21 +0000
Subject: [Twisted-Python] Re: Python 2.4 compatible windows binaries?
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>
	<41C74AC9.3080703@twistedmatrix.com>
Message-ID: <uacrv4fs2.fsf@yahoo.co.uk>

Cory Dodt <corydodt at twistedmatrix.com> writes:

> Twisted 2.0 will have windows binaries for Python 2.4, but there are no plans
> at this time to do those binaries for earlier versions.

I know this is probably a silly question, but what sort of timescale
is expected for Twisted 2.0?

Paul.
-- 
Never keep up with the Joneses. Drag them down to your level. --
Quentin Crisp




From andrew-twisted at puzzling.org  Thu Dec 30 16:39:23 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Dec 2004 10:39:23 +1100
Subject: [Twisted-Python] ludicrous timeouts in protocols.http.HTTPFactory
	and web.server.Site
In-Reply-To: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <20041230233923.GR5117@frobozz>

On Thu, Dec 30, 2004 at 03:44:32PM +0100, Antoine Pitrou wrote:
[...]
> Looking at the Twisted code, I see that very long timeouts have been
> defined for both protocols.http.HTTPFactory and web.server.Site
> (60*60*12, that is 12 hours!). If I override the "timeout" parameter
> when constructing the Site receiving XMLRPC connections, then the
> problem disappears:
>         reactor.listenTCP(xmlrpc_port, server.Site(self, timeout=30), interface=xmlrpc_host)
> 
> I think the default values in Twisted are quite bogus and should be
> changed to more sensible ones. 30 or 60 seconds is ok in the context of
> an HTTP connection. Very long timeouts on the other hand make the server
> very vulnerable.

One person's "reasonable" timeout is another person's "ludicrous"... this
sort of thing will need tuning per-application.  12 hours is conservative,
but highly unlikely to interfere with what anyone with pre-timeout Twisted
expects, while solving the problem twistedmatrix.com's web site was having
with the occasional connection not being closed.  And having long-running
connections mysteriously die due to a timeout setting you didn't even know
existed can be very surprising and frustrating to debug.

That said, the HTTP code is now quite careful with timeouts: it disables
them while sending the response (or more accurately, after receiving a
complete request, and then reenables them after it finishes sending the
response), so the only time a timeout can occur is while waiting for a
request to be sent -- i.e. it won't time out someone that's downloading an
ISO over a dial-up link.  So there probably is room to reduce it.

However, for very large POST requests over a slow link (ever tried to attach
a large file to your webmail over dial-up?), 30 or 60 seconds is still too
slow, but I could see an argument for, say, 30 minutes being the default.
Part of the issue here is backwards compatibility -- there may be
deployments of old versions of Twisted out there that depends on the
conservative (or no!) timeouts, and we don't want to gratuitously break
them.  If we do decide to be more aggressive by default, we need to make
this very clear in the documentation for the next version.

Regardless, if a particular application has specific needs, they can always
change the setting, just like you did.  It's not a major issue.

-Andrew.




From solipsis at pitrou.net  Fri Dec 31 02:50:44 2004
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Fri, 31 Dec 2004 10:50:44 +0100
Subject: [Twisted-Python] ludicrous timeouts in
	protocols.http.HTTPFactory and web.server.Site
In-Reply-To: <20041230233923.GR5117@frobozz>
References: <1104417872.2684.14.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<20041230233923.GR5117@frobozz>
Message-ID: <1104486644.1606.11.camel@p-dhcp-333-72.rd.francetelecom.fr>


> However, for very large POST requests over a slow link (ever tried to attach
> a large file to your webmail over dial-up?), 30 or 60 seconds is still too
> slow, but I could see an argument for, say, 30 minutes being the default.

Well, yes, actually it depends on which timeout we are really testing.
The timeout I had problems with is when a request has already been
answered, but the client leaves its socket open for whatever reason,
without sending or waiting for anything: so it's a case of "keepalive"
HTTP connection that is kept alive much too long, I think. I agree that
if data is being transfered in whatever direction (whether request
payload or reply payload), the connection should not be closed ;)

Since this happened with a well-known proxy server (according to the Via
header, it is "NetCache NetApp/5.6.1"), some other people might
encounter the same problem and wonder why their low traffic HTTP server
sometimes runs out of file descriptors after 30 minutes of activity. I
must insist that this happened with only _one_ client sending XMLRPC
requests every 2 or 3 seconds.


By the way, I've written a little routine to detect HTTP proxy settings.
It works under Windows and Linux, but could surely be improved. Here it
is in case it interests someone:

import urlparse

def discover_proxy():
    """
    Returns a (host, port) tuple if a proxy is found in the
    current machine configuration, (None, None) otherwise.
    """

    host_port = None

    # Un*x et al.
    if 'http_proxy' in os.environ:
        parts = urlparse.urlparse(os.environ['http_proxy'])
        if not parts[0] or parts[0] == 'http':
            host_port = parts[1]

    # Windows
    try:
        import _winreg as winreg
    except ImportError:
        pass
    else:
        try:
            # Try to grab current proxy settings from the registry
            regkey = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                'Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings')
            regval = winreg.QueryValueEx(regkey, 'ProxyServer')
            regkey.Close()
            regval = str(regval[0])
            # Regval can be of two types:
            # - 'myproxy:3128' if one proxy for all protocols
            # - 'ftp=myftpproxy:3128;http=myhttpproxy:3128;...' if several different proxies
            values = regval.split(';')
            if len(values) > 1:
                for s in values:
                    scheme, p = s.split('=')
                    if scheme == 'http':
                        host_port = p
                        break
            else:
                host_port = values[0]

        except Exception, e:
            print str(e)
            pass

    # Split host and port
    if host_port is not None:
        t = host_port.split(':')
        host = t[0].strip()
        if host:
            try:
                port = int(t[1])
            except:
                port = 80
            return host, port

    return None, None


Regards

Antoine.





From corydodt at twistedmatrix.com  Fri Dec 31 14:38:33 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Fri, 31 Dec 2004 13:38:33 -0800
Subject: [Twisted-Python] Re: Python 2.4 compatible windows binaries?
In-Reply-To: <uacrv4fs2.fsf@yahoo.co.uk>
References: <B06DC9A0-510D-11D9-85EF-003065D4F272@mac.com>	<41C74AC9.3080703@twistedmatrix.com>
	<uacrv4fs2.fsf@yahoo.co.uk>
Message-ID: <41D5C6D9.1090905@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Not silly, but not easy to answer, either.  Several of us are working on
the release whenever we have time, but there are still a few issues to
be resolved.  See tracking bug:
http://twistedmatrix.com/bugs/issue567
(also any open issues marked "urgent:next release")

and notes in:
(Twisted svn trunk)/admin/2.0.txt

C


Paul Moore wrote:
| Cory Dodt <corydodt at twistedmatrix.com> writes:
|
|
|>Twisted 2.0 will have windows binaries for Python 2.4, but there are
no plans
|>at this time to do those binaries for earlier versions.
|
|
| I know this is probably a silly question, but what sort of timescale
| is expected for Twisted 2.0?
|
| Paul.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFB1cbZ3A5SrXAiHQcRAtgAAJ9knmrDxjtWgXbmnMzVu965Qs5CzQCgi+bx
r17+0+GCdtfe8kjA/is0sgU=
=w7Vu
-----END PGP SIGNATURE-----



