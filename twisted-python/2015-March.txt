From trac at twistedmatrix.com  Sun Mar  1 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Mar 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1425193517.26.5258662462784393093@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150301/991a43eb/attachment.html>

From 421174439 at qq.com  Mon Mar  2 01:04:15 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 16:04:15 +0800
Subject: [Twisted-Python] exceptions.ImportError: cannot import name _epoll
Message-ID: <tencent_453E36893DA89C4968F23CBE@qq.com>

My dear friends,   would u please give your hand kindly?

the twisted version is 12.3.0.?
the detail error is as below:
Unhandled Error
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 652, in run
    runApp(config)
  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", line 23, in runApp
    _SomeApplicationRunner(config).run()
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 386, in run
    self.application = self.createOrGetApplication()
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 451, in createOrGetApplication
    application = getApplication(self.config, passphrase)
--- <exception caught here> ---
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 462, in getApplication
    application = service.loadApplication(filename, style, passphrase)
  File "/usr/lib/python2.7/site-packages/twisted/application/service.py", line 405, in loadApplication
    application = sob.loadValueFromFile(filename, 'application', passphrase)
  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 210, in loadValueFromFile
    exec fileObj in d, d
  File "src/try.tac", line 32, in <module>
    from twisted.internet import epollreactor
  File "/usr/lib/python2.7/site-packages/twisted/internet/epollreactor.py", line 31, in <module>
    from twisted.python import _epoll
exceptions.ImportError: cannot import name _epoll


Failed to load application: cannot import name _epoll?









Thanks a lot,
Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/16f18af2/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 39399FDF at E1A15F7D.7F19F454.png
Type: application/octet-stream
Size: 71147 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/16f18af2/attachment-0001.obj>

From exarkun at twistedmatrix.com  Mon Mar  2 04:29:24 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Mar 2015 11:29:24 -0000
Subject: [Twisted-Python] exceptions.ImportError: cannot import name
	_epoll
In-Reply-To: <tencent_453E36893DA89C4968F23CBE@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
Message-ID: <20150302112924.7028.898434504.divmod.xquotient.2@top>

On 08:04 am, 421174439 at qq.com wrote:
>My dear friends,   would u please give your hand kindly?

How did you install Twisted and what operating system are you using?

Jean-Paul
>the twisted version is 12.3.0.?
>the detail error is as below:
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 652, in run
>    runApp(config)
>  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", 
>line 23, in runApp
>    _SomeApplicationRunner(config).run()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 386, in run
>    self.application = self.createOrGetApplication()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 451, in createOrGetApplication
>    application = getApplication(self.config, passphrase)
>--- <exception caught here> ---
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 462, in getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "/usr/lib/python2.7/site- 
>packages/twisted/application/service.py", line 405, in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', 
>passphrase)
>  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 
>210, in loadValueFromFile
>    exec fileObj in d, d
>  File "src/try.tac", line 32, in <module>
>    from twisted.internet import epollreactor
>  File "/usr/lib/python2.7/site- 
>packages/twisted/internet/epollreactor.py", line 31, in <module>
>    from twisted.python import _epoll
>exceptions.ImportError: cannot import name _epoll
>
>
>Failed to load application: cannot import name _epoll?
>
>
>
>
>
>
>
>
>
>Thanks a lot,
>Mark


From 421174439 at qq.com  Mon Mar  2 04:44:43 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 19:44:43 +0800
Subject: [Twisted-Python] =?utf-8?b?5Zue5aSN77yaICBleGNlcHRpb25zLkltcG9y?=
 =?utf-8?q?tError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <20150302112924.7028.898434504.divmod.xquotient.2@top>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
Message-ID: <tencent_119009843D23FA76296C0F28@qq.com>

I use cygwin in Windows Vista.
?
I install twisted using tool setup-x86.exe which is suggested by cygwin.?


Thanks.


------------------ ???? ------------------
???: "exarkun";<exarkun at twistedmatrix.com>;
????: 2015?3?2?(???) ??7:29
???: "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

??: Re: [Twisted-Python] exceptions.ImportError: cannot import name_epoll



On 08:04 am, 421174439 at qq.com wrote:
>My dear friends,   would u please give your hand kindly?

How did you install Twisted and what operating system are you using?

Jean-Paul
>the twisted version is 12.3.0.?
>the detail error is as below:
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 652, in run
>    runApp(config)
>  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", 
>line 23, in runApp
>    _SomeApplicationRunner(config).run()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 386, in run
>    self.application = self.createOrGetApplication()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 451, in createOrGetApplication
>    application = getApplication(self.config, passphrase)
>--- <exception caught here> ---
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 462, in getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "/usr/lib/python2.7/site- 
>packages/twisted/application/service.py", line 405, in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', 
>passphrase)
>  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 
>210, in loadValueFromFile
>    exec fileObj in d, d
>  File "src/try.tac", line 32, in <module>
>    from twisted.internet import epollreactor
>  File "/usr/lib/python2.7/site- 
>packages/twisted/internet/epollreactor.py", line 31, in <module>
>    from twisted.python import _epoll
>exceptions.ImportError: cannot import name _epoll
>
>
>Failed to load application: cannot import name _epoll?
>
>
>
>
>
>
>
>
>
>Thanks a lot,
>Mark

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/2b8e5501/attachment.html>

From exarkun at twistedmatrix.com  Mon Mar  2 05:46:33 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Mar 2015 12:46:33 -0000
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaICBleGNlcHRpb25zLkltcG9y?=
 =?utf-8?q?tError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <tencent_119009843D23FA76296C0F28@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
Message-ID: <20150302124633.7028.277570116.divmod.xquotient.8@top>

On 11:44 am, 421174439 at qq.com wrote:
>I use cygwin in Windows Vista.
>?
>I install twisted using tool setup-x86.exe which is suggested by 
>cygwin.?

epoll is a Linux-only feature.  twisted.internet.epollreactor is only 
usable on Linux.  You should probably remove the explicit reactor 
selection from the code you're trying to run.  Twisted will make a 
reasonable guess about what reactor is best to use on the platform you 
happen to be using if you just import twisted.internet.reactor.  Failing 
that, twistd has command-line arguments to allow the user to make an 
explicit reactor selection.

Jean-Paul


From 421174439 at qq.com  Mon Mar  2 05:55:03 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 20:55:03 +0800
Subject: [Twisted-Python] =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <20150302124633.7028.277570116.divmod.xquotient.8@top>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
Message-ID: <tencent_2C45935F2D8F83102A59F757@qq.com>

maybe you are right.
but cygwin is a linux environment on windows.


thanks
------------------ ???? ------------------
???: "exarkun";<exarkun at twistedmatrix.com>;
????: 2015?3?2?(???) ??8:46
???: "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

??: Re: [Twisted-Python]???  exceptions.ImportError: cannot import name_epoll



On 11:44 am, 421174439 at qq.com wrote:
>I use cygwin in Windows Vista.
>?
>I install twisted using tool setup-x86.exe which is suggested by 
>cygwin.?

epoll is a Linux-only feature.  twisted.internet.epollreactor is only 
usable on Linux.  You should probably remove the explicit reactor 
selection from the code you're trying to run.  Twisted will make a 
reasonable guess about what reactor is best to use on the platform you 
happen to be using if you just import twisted.internet.reactor.  Failing 
that, twistd has command-line arguments to allow the user to make an 
explicit reactor selection.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/a67a1a7a/attachment.html>

From al.niessner at gmail.com  Mon Mar  2 11:36:01 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Mon, 2 Mar 2015 10:36:01 -0800
Subject: [Twisted-Python] twisted thread pool
Message-ID: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>

Platform:
CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
Ubuntu 14.04
Python 3.4 (yes, I know)
Twisted 13.2.0

I use the vanilla twisted.internet.reactor.run() with the
factory twisted.web.server.Site(root). It all runs just fine (seemingly)
but,when I was snooping around on my machine, I had a ton of threads lying
about. After cleaning up, I restarted my twisted application and found that
I have 151 python3 threads lying about. I doubled checked and I have just
twisted application running.

I browsed the documentation and the twisted thread pool claims to default
between 5 and 10. However, I do abuse the deferToThread() cannot find any
simple documentation on how that might feed back to the 151 threads. I
thought maybe I need to exit the deferred returned from deferToThread() in
some special way to clean it all up. However, I can find no documentation
for it.

I have been googling about with many random search terms trying to puzzle
the 151 threads from the documentation that tells me I should expect 5 to
10.

Can anyone please help understand why I have 151 threads and where they are
coming from? Luckily they are all idle so the machine runs just fine.

The best story I can come up with is that there is one master thread on
core-0 and then I get 10 threads in the pool for each of the other physical
cores. However, the story is just numerology.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/28a3c87d/attachment.html>

From glyph at twistedmatrix.com  Mon Mar  2 12:38:39 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Mar 2015 11:38:39 -0800
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <tencent_2C45935F2D8F83102A59F757@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
Message-ID: <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>

> On Mar 2, 2015, at 4:55 AM, 8 <421174439 at qq.com> wrote:
> 
> maybe you are right.
> but cygwin is a linux environment on windows.

No, it is not.  It is a "unix-like" environment on Windows.

When Jean-Paul says that epoll is a "linux" feature, he does not mean that it is available on "linux-like" systems or that it is a POSIX or UNIX-ish feature.  It is specifically only available on Linux: it is not, for example, available on FreeBSD, or Mac OS X, and the thing called "epoll" on Solaris is something different that is not compatible.

For what it's worth, Cygwin is not a supported environment for Twisted.  We have buildbots that run native Windows python executables on a few versions of Windows, but we don't test under Cygwin.  It might work, but you may encounter bugs that we have not tested for, since none of our developers would be notified if it breaks.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/ec84fdbe/attachment.html>

From glyph at twistedmatrix.com  Mon Mar  2 14:50:40 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Mar 2015 13:50:40 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
Message-ID: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
> 
> 
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
> 
> I use the vanilla twisted.internet.reactor.run() with the factory twisted.web.server.Site(root). It all runs just fine (seemingly) but,when I was snooping around on my machine, I had a ton of threads lying about. After cleaning up, I restarted my twisted application and found that I have 151 python3 threads lying about. I doubled checked and I have just twisted application running.
> 
> I browsed the documentation and the twisted thread pool claims to default between 5 and 10. However, I do abuse the deferToThread() cannot find any simple documentation on how that might feed back to the 151 threads. I thought maybe I need to exit the deferred returned from deferToThread() in some special way to clean it all up. However, I can find no documentation for it.
> 
> I have been googling about with many random search terms trying to puzzle the 151 threads from the documentation that tells me I should expect 5 to 10.
> 
> Can anyone please help understand why I have 151 threads and where they are coming from? Luckily they are all idle so the machine runs just fine.
> 
> The best story I can come up with is that there is one master thread on core-0 and then I get 10 threads in the pool for each of the other physical cores. However, the story is just numerology.

There are some bugs in the thread pool implementation (hopefully I'll get around to finishing my fix for soon, see <https://twistedmatrix.com/trac/ticket/2673 <https://twistedmatrix.com/trac/ticket/2673>> for details) which may cause this issue, but given how far out of whack those numbers are, my inclination is to think it's something else in your environment.

Can you put your full code online somewhere so that we can test it?  Ideally after fixing it to be a minimal reproducer? :)

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/aeae23c0/attachment.html>

From al.niessner at gmail.com  Mon Mar  2 16:34:47 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Mon, 2 Mar 2015 15:34:47 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
Message-ID: <CAO5pCYQ9AGJmGyvhV3zvmYzC0X0xWfKFoign0ymN4fUTEEWtsg@mail.gmail.com>

I am new to twisted so the start up is really those two lines, but I can
work at a minimal reproducers. May take a day or two.

I read through the bug report a bit and there seems to be some funny stuff
with the deferToThread and a possible race condition, Did I read that
correctly?

The other problem that I am seeing is that the thread seems to finish prior
to me getting the deferred setup and then not getting the signal. I figured
it was my fault and I was going to look at it later, but, when I saw what
looked liked race condition discussions on the bug report, I figured I
better ask before I run off into the weeds.

On Mon, Mar 2, 2015 at 1:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
>
>
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
>
>
> I use the vanilla twisted.internet.reactor.run() with the
> factory twisted.web.server.Site(root). It all runs just fine (seemingly)
> but,when I was snooping around on my machine, I had a ton of threads lying
> about. After cleaning up, I restarted my twisted application and found that
> I have 151 python3 threads lying about. I doubled checked and I have just
> twisted application running.
>
> I browsed the documentation and the twisted thread pool claims to default
> between 5 and 10. However, I do abuse the deferToThread() cannot find any
> simple documentation on how that might feed back to the 151 threads. I
> thought maybe I need to exit the deferred returned from deferToThread() in
> some special way to clean it all up. However, I can find no documentation
> for it.
>
> I have been googling about with many random search terms trying to puzzle
> the 151 threads from the documentation that tells me I should expect 5 to
> 10.
>
> Can anyone please help understand why I have 151 threads and where they
> are coming from? Luckily they are all idle so the machine runs just fine.
>
> The best story I can come up with is that there is one master thread on
> core-0 and then I get 10 threads in the pool for each of the other physical
> cores. However, the story is just numerology.
>
>
> There are some bugs in the thread pool implementation (hopefully I'll get
> around to finishing my fix for soon, see <
> https://twistedmatrix.com/trac/ticket/2673> for details) which may cause
> this issue, but given how far out of whack those numbers are, my
> inclination is to think it's something else in your environment.
>
> Can you put your full code online somewhere so that we can test it?
> Ideally after fixing it to be a minimal reproducer? :)
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150302/dd5be42b/attachment.html>

From 421174439 at qq.com  Tue Mar  3 07:37:22 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Tue, 3 Mar 2015 22:37:22 +0800
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
 <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
Message-ID: <tencent_7842E99914B454A15AA86EE4@qq.com>

Hi glyph?,

Thanks for your patient reply. I try to run that on Ubuntu 14 and all works find.
So I guess you are right.

Thanks,
Mark




------------------ Original ------------------
From:  "Glyph Lefkowitz";<glyph at twistedmatrix.com>;
Date:  Tue, Mar 3, 2015 03:38 AM
To:  "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

Subject:  Re: [Twisted-Python]??? ???  exceptions.ImportError: cannot import name_epoll



On Mar 2, 2015, at 4:55 AM, 8 <421174439 at qq.com> wrote:

maybe you are right.
but cygwin is a linux environment on windows.



No, it is not.  It is a "unix-like" environment on Windows.


When Jean-Paul says that epoll is a "linux" feature, he does not mean that it is available on "linux-like" systems or that it is a POSIX or UNIX-ish feature.  It is specifically only available on Linux: it is not, for example, available on FreeBSD, or Mac OS X, and the thing called "epoll" on Solaris is something different that is not compatible.


For what it's worth, Cygwin is not a supported environment for Twisted.  We have buildbots that run native Windows python executables on a few versions of Windows, but we don't test under Cygwin.  It might work, but you may encounter bugs that we have not tested for, since none of our developers would be notified if it breaks.


-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150303/188b4ed6/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Mar  3 15:18:26 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Mar 2015 14:18:26 -0800
Subject: [Twisted-Python] exceptions.ImportError: cannot import
	name_epoll
In-Reply-To: <tencent_7842E99914B454A15AA86EE4@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
 <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
 <tencent_7842E99914B454A15AA86EE4@qq.com>
Message-ID: <3B715506-1F4C-46B2-A21F-2996F6726168@twistedmatrix.com>


> On Mar 3, 2015, at 6:37 AM, 8 <421174439 at qq.com> wrote:
> 
> Thanks for your patient reply. I try to run that on Ubuntu 14 and all works find.
> So I guess you are right.

No problem.  Glad you were able to work this out!

Thanks for using Twisted,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150303/fe68641d/attachment.html>

From al.niessner at gmail.com  Wed Mar  4 09:59:00 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Wed, 4 Mar 2015 08:59:00 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
Message-ID: <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>

Nevermind. While building the test case I figured out where I went wrong. I
had a subprocess pool that I forgot to close and it just grew out of hand.

I checked and twisted is running at 4 processes. Sounds better.

Thanks for all of the help.

On Mon, Mar 2, 2015 at 1:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
>
>
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
>
>
> I use the vanilla twisted.internet.reactor.run() with the
> factory twisted.web.server.Site(root). It all runs just fine (seemingly)
> but,when I was snooping around on my machine, I had a ton of threads lying
> about. After cleaning up, I restarted my twisted application and found that
> I have 151 python3 threads lying about. I doubled checked and I have just
> twisted application running.
>
> I browsed the documentation and the twisted thread pool claims to default
> between 5 and 10. However, I do abuse the deferToThread() cannot find any
> simple documentation on how that might feed back to the 151 threads. I
> thought maybe I need to exit the deferred returned from deferToThread() in
> some special way to clean it all up. However, I can find no documentation
> for it.
>
> I have been googling about with many random search terms trying to puzzle
> the 151 threads from the documentation that tells me I should expect 5 to
> 10.
>
> Can anyone please help understand why I have 151 threads and where they
> are coming from? Luckily they are all idle so the machine runs just fine.
>
> The best story I can come up with is that there is one master thread on
> core-0 and then I get 10 threads in the pool for each of the other physical
> cores. However, the story is just numerology.
>
>
> There are some bugs in the thread pool implementation (hopefully I'll get
> around to finishing my fix for soon, see <
> https://twistedmatrix.com/trac/ticket/2673> for details) which may cause
> this issue, but given how far out of whack those numbers are, my
> inclination is to think it's something else in your environment.
>
> Can you put your full code online somewhere so that we can test it?
> Ideally after fixing it to be a minimal reproducer? :)
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150304/4acf792f/attachment.html>

From glyph at twistedmatrix.com  Wed Mar  4 12:11:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Mar 2015 11:11:26 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
 <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>
Message-ID: <15872A47-37EF-4AEC-934D-15396B849166@twistedmatrix.com>


> On Mar 4, 2015, at 8:59 AM, Al Niessner <al.niessner at gmail.com> wrote:
> 
> Nevermind. While building the test case I figured out where I went wrong.

... and that right there is exactly why we request that those asking questions build those types of examples ;-D

> I had a subprocess pool that I forgot to close and it just grew out of hand.

This sounds much more in line with what I expected.

> I checked and twisted is running at 4 processes. Sounds better.

Great!  Thanks for following up publicly, it's always nice when someone follows up with a problem like this and avoids creating urban myths around resource management problems in Twisted :).

> Thanks for all of the help.

No problem! Glad it worked out.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150304/7c65cb3e/attachment.html>

From glyph at twistedmatrix.com  Wed Mar  4 18:14:18 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Mar 2015 17:14:18 -0800
Subject: [Twisted-Python] getting rid of semantic newlines
Message-ID: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>

I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.

Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.

In pursuit of this questionable benefit, we have to accept the following annoyances:

It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
It looks bad in online code browsers; long sentences horizontally scroll or wrap.

I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.

Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150304/c8c1cc98/attachment.html>

From hawkowl at atleastfornow.net  Wed Mar  4 20:37:59 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 5 Mar 2015 11:37:59 +0800
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <326BF849-D2A9-40B8-9D96-9AB79BAB4526@atleastfornow.net>


> On 5 Mar 2015, at 09:14, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
> 
> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
> 
> In pursuit of this questionable benefit, we have to accept the following annoyances:
> 
> 	? It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> 	? It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786>.
> 	? It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
> 	? It looks bad in online code browsers; long sentences horizontally scroll or wrap.
> 
> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
> 
> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> Thanks,
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Welllll, I am opposed, obviously :) I think that it works better in the (some trivial, some non-trivial) RST docs I've written, but, I'm just one person, so, YMMV.

However, I defer (ha), as those are real annoyances, and maybe the Twisted docs will never indeed reap the benefits of cleaner documentation diffs/reorganisation in the way, that, for example, my book will.

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150305/0d7eedad/attachment.pgp>

From donald at stufft.io  Wed Mar  4 21:01:09 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 4 Mar 2015 23:01:09 -0500
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <2766D633-63F3-4CBE-A904-A19E9CFB9931@stufft.io>


> On Mar 4, 2015, at 8:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
> 
> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
> 
> In pursuit of this questionable benefit, we have to accept the following annoyances:
> 
> It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
> It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
> It looks bad in online code browsers; long sentences horizontally scroll or wrap.
> 
> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
> 
> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> Thanks,
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Not that my opinion of what Twisted should do should matter much, but I think that semantic newlines are a hack to try and work around deficiency in tooling. Look at Github?s ?rendered diff? for how documentation diff *should* be. Tooling should make things easier for the developer, the developer shouldn?t have to go out of their way to make things easier for the tooling.

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150304/95cdf64b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150304/95cdf64b/attachment-0001.pgp>

From hs at ox.cx  Wed Mar  4 23:20:03 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 05 Mar 2015 07:20:03 +0100
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>

On 5 Mar 2015, at 2:14, Glyph Lefkowitz wrote:

> I find the "semantic newlines" standard which we have been attempting 
> to enforce for documentation a constant source of annoyance.
>
> Ostensibly, the purpose of using semantic newlines is to reduce the 
> size of diffs.  However, given that we have oceans of documentation 
> _not_ using this style, we are unlikely to reap that benefit any time 
> soon.  Also, unlike code, documentation rarely needs small spot fixes; 
> a fix to a document should result in changes elsewhere within the 
> sentence or paragraph.
>
> In pursuit of this questionable benefit, we have to accept the 
> following annoyances:
>
> It's inconsistent with pretty much every other Sphinx project out 
> there.  Python lays out an 80-column maximum for Sphinx documents, the 
> same as code: 
> https://docs.python.org/devguide/documenting.html#use-of-whitespace 
> <https://docs.python.org/devguide/documenting.html#use-of-whitespace> 
> and an inspection of pretty much every other Sphinx project out there 
> shows this style is consistently followed.

We don?t follow PEP8 either and that?s a much bigger annoyance to 
me.

> It's inconsistent with the coding standard and requires special 
> explanation in the docs.  I was prompted to write this message by 
> attempting to review <https://twistedmatrix.com/trac/ticket/7786 
> <https://twistedmatrix.com/trac/ticket/7786>>.
> It requires special editor configuration.  ReST mode in emacs, vim, 
> and sublime text expect to wrap paragraphs at 80 characters and 
> keeping the semantic newlines where they're supposed to be has no tool 
> support and involves avoiding other bits of tool support around 
> re-flowing.  It also looks bad in an editor, with a ragged right edge.
> It looks bad in online code browsers; long sentences horizontally 
> scroll or wrap.
>
> I think this style might have made sense ago 10 years ago in HTML, but 
> with present-day RST it seems to go strongly against the grain.
>
> Would anyone else like to make our documentation style-guide more 
> harmonious with existing standards?  Anyone opposed?

I?m opposed; in general I have the same opinion as Donald: bad tooling 
shouldn?t dictate standards.

However I come to a very different conclusion: 80 chars for prose *is* a 
very artificial standard set by shitty tooling.  If we wanted to be 
consequent, it should be ?enter only after paragraphs?.  Semantic 
newlines at least help me to quickly scan the structure of a document, 
they indicate when a sentence is too long etc.  In other words: it?s a 
concession to bad tools but at least it?s a useful one.  80 chars/line 
is just terrible in every regard and resulting from soft line wraps 
being NP-hard or something.

I?m not gonna veto it or something, just wanted to point out the 
tooling-inconsistency in the arguments that are frequently brought up.


From glyph at twistedmatrix.com  Thu Mar  5 13:48:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 5 Mar 2015 12:48:26 -0800
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
Message-ID: <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>


> On Mar 4, 2015, at 10:20 PM, Hynek Schlawack <hs at ox.cx> wrote:
> 
> On 5 Mar 2015, at 2:14, Glyph Lefkowitz wrote:
> 
>> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
>> 
>> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
>> 
>> In pursuit of this questionable benefit, we have to accept the following annoyances:
>> 
>> It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> 
> We don?t follow PEP8 either and that?s a much bigger annoyance to me.

Sure, but (A) you're wrong our style is way better than PEP8, just check out my CAML CASE knuckle tat ;-), (B) the style is "PEP8, except..." and not a totally different style (C) much of the codebase _does_ actually adhere to that standard whereas none of the documentation does, (D) we have tools - janky tools, but tools nonetheless - that validate our coding standard, but none that can validate semantic line-breaking, and (E) not only do we not have tools to check this automatically but it's not clear to me how you would check it automatically.  Especially the part where it's arbitrary if you want to break a line around a clause it's optional, and maybe you don't need to break lines at the end of short sentences.

So while I can appreciate that the not-quite-PEP8 case isn't exactly open and shut, it's also a far less obviously beneficial change, in my mind.

>> It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
>> It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
>> It looks bad in online code browsers; long sentences horizontally scroll or wrap.
>> 
>> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
>> 
>> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> I?m opposed; in general I have the same opinion as Donald: bad tooling shouldn?t dictate standards.
> 
> However I come to a very different conclusion: 80 chars for prose *is* a very artificial standard set by shitty tooling.  If we wanted to be consequent, it should be ?enter only after paragraphs?.

Personally and aesthetically I would also prefer "enter after paragraphs" a bit better, but as long as we're going to make a change, going with the grain of other community stuff seems worthwhile.

> Semantic newlines at least help me to quickly scan the structure of a document, they indicate when a sentence is too long etc.

One of the features of "semantic newlines" that I discovered in this process is that it's not "lines at the end of sentences", it's "line breaks at the end of any clause, optionally".  If it were just "line break at the end of a sentence" it would be annoying, but not quite to the threshold that would make me start this thread :).

> In other words: it?s a concession to bad tools but at least it?s a useful one.  80 chars/line is just terrible in every regard and resulting from soft line wraps being NP-hard or something.

I feel your pain.

When I first came to UNIX - from classic Mac OS - I thought it was crazy that everybody wrapped lines at 80 characters.  It struck me as inconceivable that people would be inserting artifacts into "modern" (circa 1996), new data based on the physical limitations of hardware from the 1970s.  If you wanted your lines to be wrapped, why not just have your text editor do soft wrapping?  Obviously "newlines" were only there for paragraph breaks in text files.

But, while this is part of our history, it is not entirely historical.  Line-wrapping is an extremely pervasive cultural convention, and just about everything expects it.  The one community where this hasn't taken root is ObjC, and if you look at the lengths of some method-names in that universe you may wish for some 70s-era hardware to dictate your stylistic choices again ;).

Not to mention the fact that if we were really going to throw off the shackles of bad tooling, we'd be running something other than VT100 emulators to do the majority of our daily work, but I'm guessing that during this conversation you have at least one terminal window open ;-).

But have hope, the future may yet arrive.  Emacs 24.4 just (just!) introduced indentation-sensitive wrapping in visual-line-mode which looks vaguely like you'd expect a post-1986 word processor to look, even if you're editing code.  Supposedly Vim has accepted a similar patch <https://retracile.net/wiki/VimBreakIndent <https://retracile.net/wiki/VimBreakIndent>> but I have yet to see it on a build I've actually installed anywhere yet.

So... give it another 10 years, and the open source community may have cracked the code of line-wrapping at run time :-).


-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150305/86162d17/attachment.html>

From jml at mumak.net  Fri Mar  6 01:07:37 2015
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 06 Mar 2015 08:07:37 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
Message-ID: <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>

On Thu, 5 Mar 2015 at 20:49 Glyph <glyph at twistedmatrix.com> wrote:
[snip]

> So... give it another 10 years, and the open source community may have
> cracked the code of line-wrapping at run time :-).
>
>
This email made my morning.

jml
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150306/2d3c4ff3/attachment.html>

From adi at roiban.ro  Fri Mar  6 07:06:11 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 6 Mar 2015 14:06:11 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
 <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
Message-ID: <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>

I don't care what standard is used, just make sure that it is not
stated on a page with 99% of obsolete info and in a section named
"XHTML Layout" like it is now on

https://twistedmatrix.com/documents/current/core/development/policy/doc-standard.html

You can continue to argue for getting rid of semantic newlines but
please make sure that the current dev documentation is valid and
please take the time to review
https://twistedmatrix.com/trac/ticket/7786

Thanks!

On 6 March 2015 at 08:07, Jonathan Lange <jml at mumak.net> wrote:
> On Thu, 5 Mar 2015 at 20:49 Glyph <glyph at twistedmatrix.com> wrote:
> [snip]
>>
>> So... give it another 10 years, and the open source community may have
>> cracked the code of line-wrapping at run time :-).
>>
>
> This email made my morning.
>
> jml
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban


From jamesbroadhead at gmail.com  Fri Mar  6 07:19:22 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Fri, 6 Mar 2015 14:19:22 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
 <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
 <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>
Message-ID: <CA+hid6Es5hz0tUvU4fJ-S5C34nb2s9CapqxAChUhn+61i2pMww@mail.gmail.com>

On 6 March 2015 at 14:06, Adi Roiban <adi at roiban.ro> wrote:

> I don't care what standard is used, just make sure that it is not
> stated on a page with 99% of obsolete info and in a section named
> "XHTML Layout" like it is now on
>

<3

Enforcement by tooling would be better again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150306/47aea395/attachment.html>

From hawkowl at atleastfornow.net  Fri Mar  6 16:56:41 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 7 Mar 2015 07:56:41 +0800
Subject: [Twisted-Python] Twisted 15.1.0pre1 Prerelease Announcement
Message-ID: <349BC40F-574B-4E9F-B4DF-B71F30EB6D58@atleastfornow.net>

Hi everyone!

I'm happy to announce the first prerelease for Twisted 15.1! This is not a big release, but does have some nice-to-haves:

- You can now install Twisted's optional dependencies (when it's released to PyPI) easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
- twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
- Twisted's MSN support is now deprecated.
- More documentation on how Trial finds tests.

As usual, tarballs can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS file can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .

Please test them out! :)

Twisted regards,
Hawkie Owl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150307/1e79043b/attachment.pgp>

From trac at twistedmatrix.com  Sun Mar  8 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Mar 2015 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1425798316.99.6883915489183497392@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150308/98cc7510/attachment.html>

From adi at roiban.ro  Sun Mar  8 04:03:03 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 8 Mar 2015 10:03:03 +0000
Subject: [Twisted-Python] t.p.filepath and Unicode
Message-ID: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>

Hi,

I am trying to help porting Twisted on Py3 and for me the fact that
FilePath requires all paths to be bytes is a constant pain.

To reduce the Unicode pain when working with string my principle is to
do all internal operations in Unicode and then convert to bytes only
at input and output.

Right now I am trying to port t.p.moduled and when using the current
implementation of FilePath I have to constantly encode/decode path. I
would prefer not to consider the FilePath an input/output level.

Does anyone find this useful and plan to use FilePath with bytes in
another Python3 project?

What do you say if we will also have an UnicodeFilePath class  which
only accept Unicode as path input and only outputs Unicode?

It can start with simple path traversal/directory creation/file
creation just to have t.p.moduled (and trial) ported.

Thanks!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Sun Mar  8 04:26:38 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 8 Mar 2015 03:26:38 -0700
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
Message-ID: <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>


> On Mar 8, 2015, at 3:03 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I am trying to help porting Twisted on Py3 and for me the fact that
> FilePath requires all paths to be bytes is a constant pain.
> 
> To reduce the Unicode pain when working with string my principle is to
> do all internal operations in Unicode and then convert to bytes only
> at input and output.
> 
> Right now I am trying to port t.p.moduled and when using the current
> implementation of FilePath I have to constantly encode/decode path. I
> would prefer not to consider the FilePath an input/output level.
> 
> Does anyone find this useful and plan to use FilePath with bytes in
> another Python3 project?
> 
> What do you say if we will also have an UnicodeFilePath class  which
> only accept Unicode as path input and only outputs Unicode?
> 
> It can start with simple path traversal/directory creation/file
> creation just to have t.p.moduled (and trial) ported.

This approach to unicode support in FilePath is wrong, but when I went to go looking, I realized that there is no comprehensive ticket that outlines how FilePath should support unicode, so I have nothing to refer you to for how to do it correctly.

I more or less figured this out a long time ago and I have been talking about it for years, and the lack of a write-up is a terrible oversight.  I'm sorry about that.

I'm going to go file a ticket now with a specification for this, and I'll post a link as soon as it's done.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150308/77fac967/attachment.html>

From wolfgang.kde at rohdewald.de  Sun Mar  8 05:30:38 2015
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Sun, 08 Mar 2015 12:30:38 +0100
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
Message-ID: <1940884.5xp4HdFM9F@i5>

Am Sonntag, 8. M?rz 2015, 10:03:03 schrieb Adi Roiban:
> Hi,
> 
> I am trying to help porting Twisted on Py3 and for me the fact that
> FilePath requires all paths to be bytes is a constant pain.
> 
> To reduce the Unicode pain when working with string my principle is to
> do all internal operations in Unicode and then convert to bytes only
> at input and output.
> 
> Right now I am trying to port t.p.moduled and when using the current
> implementation of FilePath I have to constantly encode/decode path. I
> would prefer not to consider the FilePath an input/output level.
> 
> Does anyone find this useful and plan to use FilePath with bytes in
> another Python3 project?
> 
> What do you say if we will also have an UnicodeFilePath class  which
> only accept Unicode as path input and only outputs Unicode?
> 
> It can start with simple path traversal/directory creation/file
> creation just to have t.p.moduled (and trial) ported.
> 
> Thanks!
> 

Some months ago someone outlined his idea, I believe in the mailing
list in a thread I participated in. I do not remember who it
was. IIRC, the plan was that FilePath accepts all types of string. It 
keeps a 1:1 copy of that string and has attributes returning the
variant that the caller needs, converting on the fly.


There also is bug report 7166.

-- 
Wolfgang


From wolfgang.kde at rohdewald.de  Sun Mar  8 05:34:50 2015
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Sun, 08 Mar 2015 12:34:50 +0100
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <1940884.5xp4HdFM9F@i5>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
 <1940884.5xp4HdFM9F@i5>
Message-ID: <2855265.P4O2NVK3Xa@i5>

Am Sonntag, 8. M?rz 2015, 12:30:38 schrieben Sie:
> Some months ago someone outlined his idea, I believe in the mailing
> list in a thread I participated in.

should have tried to find it before posting.

That was Glyph On Sep 9, 2014, at 08:01 with the subject

Re: [Twisted-Python] Python3: should paths be bytes or str?

-- 
Wolfgang


From glyph at twistedmatrix.com  Sun Mar  8 06:17:41 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 8 Mar 2015 05:17:41 -0700
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
 <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>
Message-ID: <A17988CF-D48D-4715-B9EF-EFFC204CEBA3@twistedmatrix.com>


> On Mar 8, 2015, at 3:26 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Mar 8, 2015, at 3:03 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Hi,
>> 
>> I am trying to help porting Twisted on Py3 and for me the fact that
>> FilePath requires all paths to be bytes is a constant pain.
>> 
>> To reduce the Unicode pain when working with string my principle is to
>> do all internal operations in Unicode and then convert to bytes only
>> at input and output.
>> 
>> Right now I am trying to port t.p.moduled and when using the current
>> implementation of FilePath I have to constantly encode/decode path. I
>> would prefer not to consider the FilePath an input/output level.
>> 
>> Does anyone find this useful and plan to use FilePath with bytes in
>> another Python3 project?
>> 
>> What do you say if we will also have an UnicodeFilePath class  which
>> only accept Unicode as path input and only outputs Unicode?
>> 
>> It can start with simple path traversal/directory creation/file
>> creation just to have t.p.moduled (and trial) ported.
> 
> This approach to unicode support in FilePath is wrong, but when I went to go looking, I realized that there is no comprehensive ticket that outlines how FilePath should support unicode, so I have nothing to refer you to for how to do it correctly.
> 
> I more or less figured this out a long time ago and I have been talking about it for years, and the lack of a write-up is a terrible oversight.  I'm sorry about that.
> 
> I'm going to go file a ticket now with a specification for this, and I'll post a link as soon as it's done.

Now written in ticket form:

https://twistedmatrix.com/trac/ticket/7805 <https://twistedmatrix.com/trac/ticket/7805>

In short, "FilePath should return the type you give its constructor from all of its public methods, and use an internal representation appropriate to the platform it's running on."

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150308/3071cccc/attachment-0001.html>

From bra at fsn.hu  Thu Mar 12 00:57:33 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Thu, 12 Mar 2015 07:57:33 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
Message-ID: <550138DD.306@fsn.hu>

Hi,

On 01/20/14 15:30, Laurens Van Houtven wrote:
> The first answer by JP Calderone (exarkun) on the following 
> stackoverflow question may be of some assistance.
>
> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
What is the best way to use this capability from a .tac file?



From glyph at twistedmatrix.com  Thu Mar 12 11:42:20 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Mar 2015 10:42:20 -0700
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <550138DD.306@fsn.hu>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
Message-ID: <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>


> On Mar 11, 2015, at 11:57 PM, Nagy, Attila <bra at fsn.hu> wrote:
> 
> Hi,
> 
> On 01/20/14 15:30, Laurens Van Houtven wrote:
>> The first answer by JP Calderone (exarkun) on the following stackoverflow question may be of some assistance.
>> 
>> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
> What is the best way to use this capability from a .tac file?

There's nothing special about a .tac file with respect to spawning processes, it's just another way to instantiate a Service object.  You just need to change the spawned process's arg list from "[executable, __file__, str(port.fileno())]" to something like "[executable, 'twistd', '-n', '-y', __file__, str(port.fileno())]".

-glyph

From bra at fsn.hu  Fri Mar 13 04:03:02 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Fri, 13 Mar 2015 11:03:02 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
Message-ID: <5502B5D6.7050509@fsn.hu>

On 03/12/15 18:42, Glyph Lefkowitz wrote:
>> On Mar 11, 2015, at 11:57 PM, Nagy, Attila <bra at fsn.hu> wrote:
>>
>> Hi,
>>
>> On 01/20/14 15:30, Laurens Van Houtven wrote:
>>> The first answer by JP Calderone (exarkun) on the following stackoverflow question may be of some assistance.
>>>
>>> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
>> What is the best way to use this capability from a .tac file?
> There's nothing special about a .tac file with respect to spawning processes, it's just another way to instantiate a Service object.  You just need to change the spawned process's arg list from "[executable, __file__, str(port.fileno())]" to something like "[executable, 'twistd', '-n', '-y', __file__, str(port.fileno())]".
>
Sounds logical. Do you plan a nicer interface for this maybe? :)


From glyph at twistedmatrix.com  Fri Mar 13 04:28:57 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Mar 2015 03:28:57 -0700
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <5502B5D6.7050509@fsn.hu>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
 <5502B5D6.7050509@fsn.hu>
Message-ID: <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>

> On Mar 13, 2015, at 3:03 AM, Nagy, Attila <bra at fsn.hu> wrote:
> 
> Sounds logical. Do you plan a nicer interface for this maybe? :)

Plan? Not right now. Hope for? Yes, for many years :).

I would very much like to have Twisted contain a straightforward process-pool interface, perhaps a deferToProcess.  But attempting to guess when this will happen is a fool's errand.  Perhaps you could help us do it, though! :)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150313/ea76ce46/attachment.html>

From bra at fsn.hu  Fri Mar 13 04:54:06 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Fri, 13 Mar 2015 11:54:06 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
 <5502B5D6.7050509@fsn.hu>
 <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>
Message-ID: <5502C1CE.5060905@fsn.hu>

On 03/13/15 11:28, Glyph wrote:
>> On Mar 13, 2015, at 3:03 AM, Nagy, Attila <bra at fsn.hu 
>> <mailto:bra at fsn.hu>> wrote:
>>
>> Sounds logical. Do you plan a nicer interface for this maybe? :)
>
> Plan? Not right now. Hope for? Yes, for many years :).
>
> I would very much like to have Twisted contain a straightforward 
> process-pool interface, perhaps a deferToProcess.  But attempting to 
> guess when this will happen is a fool's errand.  Perhaps you could 
> help us do it, though! :)
>
If I had the time. :)
Anyways, big thanks for letting this done!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150313/77c5c361/attachment.html>

From trac at twistedmatrix.com  Sun Mar 15 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Mar 2015 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1426399517.24.3579945590119118805@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150315/ae3125cb/attachment.html>

From adi at roiban.ro  Mon Mar 16 03:17:45 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Mar 2015 09:17:45 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
Message-ID: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>

Hi

I know that twisted main repo contains a lot of code but I would like
to discuss the option of merging
twisted-dev-tools and twistedchecker into twisted main repo.

The main reason why I want this is to make reviews for these repos
more visible to twisted developers.

I don't think that we would have a different team of developers
working on twisted and another one on twisted tools and twistedchecker

I understand that twistedchecker was started as a SOC project and I
agree that is much easier to start as a separate project, but not I
feel that having a different repo does not help.

------

Twistedchecker  has become an important part of dev process and I feel
that the reviews for this project are should be more visible.

For example my PRs for twistedchecker are unreviewed on GitHub for
more than on mouth and there are many other reviews laying idle

------

Maybe there is another reason why those PR are not reviewed and
merging twistechecker and twisted-dev-tools will not help with having
those PR reviewed faster but I would like to investigate this issue
and look for solutions.

What do you think?

I have also filled this ticket
https://github.com/twisted/twisted-dev-tools/issues/11

I think that reviewing patched in less than 2 weeks is critical for
having an active open source project and expecting for developers to
send more patches.

Cheers
-- 
Adi Roiban


From adi at roiban.ro  Mon Mar 16 12:20:12 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Mar 2015 18:20:12 +0000
Subject: [Twisted-Python] Branch name convention
Message-ID: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>

Hi,

I would like to ask why the  twisted branch name convention ask for
trailing ticket ID.

Why not leading ID?

some-text-1234 vs 1234-some-text

-----

The default git auto completion script only does search at the start
of the string.

When I work on a ticket I know the ticket number but I always forget
the name of the branch... so I have to search it inside the Trac
ticket.

It is not a big deal and I know that there are greater annoyances in
Twisted dev process but I am curios if there is someone else who don't
like this convention and if there is any chance of changing it.

Thanks!

-- 
Adi Roiban


From glyph at twistedmatrix.com  Mon Mar 16 12:53:55 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Mar 2015 11:53:55 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
Message-ID: <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>


> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I would like to ask why the  twisted branch name convention ask for
> trailing ticket ID.
> 
> Why not leading ID?
> 
> some-text-1234 vs 1234-some-text
> 
> -----
> 
> The default git auto completion script only does search at the start
> of the string.
> 
> When I work on a ticket I know the ticket number but I always forget
> the name of the branch... so I have to search it inside the Trac
> ticket.
> 
> It is not a big deal and I know that there are greater annoyances in
> Twisted dev process but I am curios if there is someone else who don't
> like this convention and if there is any chance of changing it.

When we started this it seemed like the descriptive name would be easier to remember than the opaque ticket number.  I agree that was the wrong call, oddly enough, I do remember the ticket numbers more.  That said, we can switch as soon as all the currently outstanding branches are landed and deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150316/42e7ce7b/attachment.html>

From adi at roiban.ro  Tue Mar 17 05:33:37 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 17 Mar 2015 11:33:37 +0000
Subject: [Twisted-Python] coverage buildbot builder
Message-ID: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>

Hi,

First, a few question regarding the coverage builder.

1. Why is the coverage builder executed under a French locale ?

2. Does anyone check its results. Are those results used in some way?

3. I see that it is in the list of supported builder. Is the coverage
builder relevant should we reject a patch if coverage is under a
certain limit?

While reading the wiki and narrative documentation I could not find
the answer to the above questions.

I assume that coverage reporter should be run on all builder and then
aggregate all results. Otherwise I expect that a coverage builder on
Linux will have a lot of false positives for Windows or OSX specific
code.

----------

I think that aggregating coverage for all tests modules (ie the
test_*.py) file itself from all supported builders (os/reactors)
should help reviewer/developer identify tests which are not executed
Maybe the results could be sent to one of the trendy web services and
have a nice graph.

Does Twisted have this in place?
Do you think this might be useful?
Is there a ticket for that?

Thanks!

-- 
Adi Roiban


From adi at roiban.ro  Tue Mar 17 07:44:39 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 17 Mar 2015 13:44:39 +0000
Subject: [Twisted-Python] Does anyone need / make use of SSHTransportAddress
	introduced in 12.1 ?
Message-ID: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>

Hi,

While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
out about the SSHTransportAddress introduced in 12.1.

SSHTransportAddress is just an IAddress wrapping in a non-tranparent
way another IAddress.

It was introduces in #2997 which was accepted without any reason why
we need SSHTransportAddress and why SSHTransportAddress is better than
an IAddress.
I could not find any documentation describing why we need this new class.

In case I have not got this wrong, exarkun argued that we need
SSHTransportAddress in order to find out the type of transport in use
https://twistedmatrix.com/trac/ticket/5999#comment:11

I find it stupid to use transport.getHost() and transport.getPeer() to
find out what transport you have rather than doing a check on the
transport itself.

# I am for this check
if IConchTransport.providedBy(someTransport):
    pass

# rather this one.
if isinstance(someTransport.getHost(), SSHTransportAddress):
    pass

I understand the need for endpoints but has somebody implemented an
endpoint which reads an SSHTransportAddress?

Am I the only one who fails to see the advantages of using
SSHTransportAddress over a normal IAddress?

Thanks!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Tue Mar 17 23:15:31 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:15:31 -0700
Subject: [Twisted-Python] coverage buildbot builder
In-Reply-To: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>
References: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>
Message-ID: <A3288493-E968-4B29-84AB-6E4CA16EA2C6@twistedmatrix.com>


> On Mar 17, 2015, at 4:33 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> First, a few question regarding the coverage builder.
> 
> 1. Why is the coverage builder executed under a French locale ?

This is unintentional, I'm sure.

> 2. Does anyone check its results. Are those results used in some way?

They are uploaded, and the link is visible from the buildbot.

For example, a recent build:

https://buildbot.twistedmatrix.com/builds/twisted-coverage.py/twisted-coverage.py-r44067/ <https://buildbot.twistedmatrix.com/builds/twisted-coverage.py/twisted-coverage.py-r44067/>
> 3. I see that it is in the list of supported builder. Is the coverage
> builder relevant should we reject a patch if coverage is under a
> certain limit?

I don't think the coverage builder is tracking a total number.  It would be better if it could.

> While reading the wiki and narrative documentation I could not find
> the answer to the above questions.
> 
> I assume that coverage reporter should be run on all builder and then
> aggregate all results. Otherwise I expect that a coverage builder on
> Linux will have a lot of false positives for Windows or OSX specific
> code.

This would certainly be better, but what we have now is still pretty valuable.  If you click on that link you can see there are still a lot of totally cross-platform modules with terrible coverage numbers (twisted.names.authority, for example).

> I think that aggregating coverage for all tests modules (ie the
> test_*.py) file itself from all supported builders (os/reactors)
> should help reviewer/developer identify tests which are not executed
> Maybe the results could be sent to one of the trendy web services and
> have a nice graph.
> 
> Does Twisted have this in place?

No.

> Do you think this might be useful?

Yes.

> Is there a ticket for that?

Not that I'm aware of.

> Thanks!

Thanks for looking into it!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150317/88f39456/attachment.html>

From glyph at twistedmatrix.com  Tue Mar 17 23:30:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:30:58 -0700
Subject: [Twisted-Python] Does anyone need / make use of
	SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
Message-ID: <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>


> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
> out about the SSHTransportAddress introduced in 12.1.
> 
> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
> way another IAddress.
> 
> It was introduces in #2997 which was accepted without any reason why
> we need SSHTransportAddress and why SSHTransportAddress is better than
> an IAddress.
> I could not find any documentation describing why we need this new class.

The reason that we need this new type of address is to ensure that any code inspecting this address and attempting to construct a similar connection based upon it is not mislead into creating a transport which is not similar to the one it is indicating.

Arguably, SSHTransportAddress is missing lots of important information: is the address indicative of a client, or a server?  If a client, what hostname was specified?  If a server, what user is connected?  Two SSH connections to the same IP address / port number are not necessarily equivalent, but the current implementation of SSHTransportAddress would compare that way, which is unfortunate.

> In case I have not got this wrong, exarkun argued that we need
> SSHTransportAddress in order to find out the type of transport in use
> https://twistedmatrix.com/trac/ticket/5999#comment:11
> 
> I find it stupid to use transport.getHost() and transport.getPeer() to
> find out what transport you have rather than doing a check on the
> transport itself.
> 
> # I am for this check
> if IConchTransport.providedBy(someTransport):
>    pass
> 
> # rather this one.
> if isinstance(someTransport.getHost(), SSHTransportAddress):
>    pass
> 
> I understand the need for endpoints but has somebody implemented an
> endpoint which reads an SSHTransportAddress?

No, and that's exactly the point - if they had written one that connects IPv4Addresses into endpoints, but not SSHTransportAddresses, they shouldn't be able to make a new connection and treat it as equivalent; it has totally different properties.

> Am I the only one who fails to see the advantages of using
> SSHTransportAddress over a normal IAddress?

SSHTransportAddress is useful, but its only utility is in explicitly breaking use-cases that in fact should not work, so it's a bit user-hostile, so I can see why you'd feel it is useless.  If it were retrofitted to keep enough information to be useful in its own right, then that would be a lot better.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150317/6f02a547/attachment.html>

From glyph at twistedmatrix.com  Tue Mar 17 23:43:02 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:43:02 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
Message-ID: <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>


> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi
> 
> I know that twisted main repo contains a lot of code but I would like
> to discuss the option of merging
> twisted-dev-tools and twistedchecker into twisted main repo.
> 
> The main reason why I want this is to make reviews for these repos
> more visible to twisted developers.
> 
> I don't think that we would have a different team of developers
> working on twisted and another one on twisted tools and twistedchecker
> 
> I understand that twistedchecker was started as a SOC project and I
> agree that is much easier to start as a separate project, but not I
> feel that having a different repo does not help.

I'm approximately -0 on this.  I don't like the idea of dumping a bunch of code into the main Twisted repo that isn't distributed along with Twisted (personally I cannot wait to get rid of the "admin" directory entirely), but I also see your point about the tool being a part of the process.

> Twistedchecker  has become an important part of dev process and I feel
> that the reviews for this project are should be more visible.

> For example my PRs for twistedchecker are unreviewed on GitHub for
> more than on mouth and there are many other reviews laying idle

To be fair we are only just now getting down to a reasonable latency on Twisted reviews, and it is still a fairly small audience reviewing.  This may just lengthen the Twisted review queue :).

So, I do have an alternate proposal - perhaps you should just announce changes to twistedchecker on this list, and land changes to it without review if nobody objects within a week or so.  If you're making changes that are time-sensitive and there is an insufficient community to participate in reviews, then I think it's fair to say that they shouldn't be reviewed.  If anyone objects to the changes that are going in, they can always sign up to do reviews :).  I have implicitly instituted such a process for Twisted-umbrella projects like Imaginary and Vertex, where there are not enough active contributors to sustain development.

> Maybe there is another reason why those PR are not reviewed and
> merging twistechecker and twisted-dev-tools will not help with having
> those PR reviewed faster but I would like to investigate this issue
> and look for solutions.
> 
> What do you think?
> 
> I have also filled this ticket
> https://github.com/twisted/twisted-dev-tools/issues/11
> 
> I think that reviewing patched in less than 2 weeks is critical for
> having an active open source project and expecting for developers to
> send more patches.

Thanks for looking into this, and for all your work making it more pleasant to develop Twisted,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150317/8b15dfe8/attachment.html>

From adi at roiban.ro  Wed Mar 18 00:51:05 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 06:51:05 +0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
Message-ID: <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>

On 18 March 2015 at 05:30, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
> out about the SSHTransportAddress introduced in 12.1.
>
> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
> way another IAddress.
>
> It was introduces in #2997 which was accepted without any reason why
> we need SSHTransportAddress and why SSHTransportAddress is better than
> an IAddress.
> I could not find any documentation describing why we need this new class.
>
>
> The reason that we need this new type of address is to ensure that any code
> inspecting this address and attempting to construct a similar connection
> based upon it is not mislead into creating a transport which is not similar
> to the one it is indicating.
>
> Arguably, SSHTransportAddress is missing lots of important information: is
> the address indicative of a client, or a server?  If a client, what hostname
> was specified?  If a server, what user is connected?  Two SSH connections to
> the same IP address / port number are not necessarily equivalent, but the
> current implementation of SSHTransportAddress would compare that way, which
> is unfortunate.

[snip]

> SSHTransportAddress is useful, but its only utility is in explicitly
> breaking use-cases that in fact should not work, so it's a bit user-hostile,
> so I can see why you'd feel it is useless.  If it were retrofitted to keep
> enough information to be useful in its own right, then that would be a lot
> better.

Thanks! Are these design notes for SSHTransportAddress documented somewhere?

I will update my changes to start making use of SSHTransportAddress.

I have created a ticket to add client/server information into the
SSHTransportAddress. I am using this as a pretext to try to improve
the documentation for SSHTransportAddress.
https://twistedmatrix.com/trac/ticket/7825#ticket

Again, many thanks for the comments!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Wed Mar 18 02:24:19 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 18 Mar 2015 01:24:19 -0700
Subject: [Twisted-Python] Does anyone need / make use of
	SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
 <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>
Message-ID: <FB6C46D9-E550-43A7-8233-77F9AFC119D6@twistedmatrix.com>


> On Mar 17, 2015, at 11:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 18 March 2015 at 05:30, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
>> out about the SSHTransportAddress introduced in 12.1.
>> 
>> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
>> way another IAddress.
>> 
>> It was introduces in #2997 which was accepted without any reason why
>> we need SSHTransportAddress and why SSHTransportAddress is better than
>> an IAddress.
>> I could not find any documentation describing why we need this new class.
>> 
>> 
>> The reason that we need this new type of address is to ensure that any code
>> inspecting this address and attempting to construct a similar connection
>> based upon it is not mislead into creating a transport which is not similar
>> to the one it is indicating.
>> 
>> Arguably, SSHTransportAddress is missing lots of important information: is
>> the address indicative of a client, or a server?  If a client, what hostname
>> was specified?  If a server, what user is connected?  Two SSH connections to
>> the same IP address / port number are not necessarily equivalent, but the
>> current implementation of SSHTransportAddress would compare that way, which
>> is unfortunate.
> 
> [snip]
> 
>> SSHTransportAddress is useful, but its only utility is in explicitly
>> breaking use-cases that in fact should not work, so it's a bit user-hostile,
>> so I can see why you'd feel it is useless.  If it were retrofitted to keep
>> enough information to be useful in its own right, then that would be a lot
>> better.
> 
> Thanks!

No problem, always happy to explain :).

> Are these design notes for SSHTransportAddress documented somewhere?

Doubtful.  They seem like an obvious consequence of how the various pieces fit together, for me; I feel like every IAddress implementer would have to contain a similar comment, if it were documented anywhere.  However, this really should be written somewhere that people, especially twisted maintainers, will see it.  Any suggestions?

> I will update my changes to start making use of SSHTransportAddress.

Great.

> I have created a ticket to add client/server information into the
> SSHTransportAddress. I am using this as a pretext to try to improve
> the documentation for SSHTransportAddress.
> https://twistedmatrix.com/trac/ticket/7825#ticket <https://twistedmatrix.com/trac/ticket/7825#ticket>

Thanks!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/5bab42c5/attachment.html>

From adi at roiban.ro  Wed Mar 18 02:38:18 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 08:38:18 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
Message-ID: <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>

On 18 March 2015 at 05:43, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
>
[snip]

> I'm approximately -0 on this.  I don't like the idea of dumping a bunch of
> code into the main Twisted repo that isn't distributed along with Twisted
> (personally I cannot wait to get rid of the "admin" directory entirely), but
> I also see your point about the tool being a part of the process.

>> Twistedchecker  has become an important part of dev process and I feel
>> that the reviews for this project should be more visible.

> To be fair we are only just now getting down to a reasonable latency on
> Twisted reviews, and it is still a fairly small audience reviewing.  This
> may just lengthen the Twisted review queue :).

As commented earlier, any tickets which sits idle in the review queue
for more than 1 week is not reasonable for me

Some changes in twistedchecker are there to help you with general
review process so if we land them first future reviews might be faster
as you no longer have to stop and check for false positives in
twistedchecker builder.

I don't agree with your priority... but judging by the fact that
pyflakes patches took so long to land and nobody is pissed of by
twistedchecker I feel in minority :(
For me improving the infrastructure and the tools used by the
developers is more important than the Twisted code itself.

It seems to me that you are suggesting that we can build a state of
the art skyscraper with bamboo scaffolding and only use our bare hands
and later we can look into creating power tools and advanced cranes
and scaffolding.

Maybe we are used with the fact that you can only run static code
analysis on buildbot and for that you need a commit and to manually
trigger a build by filling a web form and wait 2 minutes for results,
but this is stone age :(

pyflakes and twistedchecker should run in less than 1 second on local
computer. To optimize speed the checker should be smart and only check
the files which have changes since trunk.

---------

What I am trying to do is to convince other Twisted developers that
tools and infrastructure are important and they should be top
priority.
I am advocating for replacing primitive tools.

The current review process is a pain for new non-commiter
contributors. Read-only clone of svn, manual patches attached to trac,
review commend digested into a single comment, new branches created
for conflicting changes... etc

Developing good tools take a lot of effort... so does writing good
tests. Tools should be at least as important as the code or the tests
. In fact, tests are just a tool to help you develop code.

> So, I do have an alternate proposal - perhaps you should just announce
> changes to twistedchecker on this list, and land changes to it without
> review if nobody objects within a week or so.  If you're making changes that
> are time-sensitive and there is an insufficient community to participate in
> reviews, then I think it's fair to say that they shouldn't be reviewed.  If
> anyone objects to the changes that are going in, they can always sign up to
> do reviews :).  I have implicitly instituted such a process for
> Twisted-umbrella projects like Imaginary and Vertex, where there are not
> enough active contributors to sustain development.
>

Beside twistedchecker there are also twisted-dev-tools and the repos
from twisted-infra organization.

I am not happy about cowboy / one man show coding. Merging a change
without a review as this will break things for sure.

My alternate proposal is to try to raise awareness that good tools are
at least as important as good tests and have more people reviewing
code for tools and work on improving the tools and to consider them an
integral part of the development process.

Cheers!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Wed Mar 18 04:25:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 18 Mar 2015 03:25:14 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
Message-ID: <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>


> On Mar 18, 2015, at 1:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 18 March 2015 at 05:43, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
> [snip]
> 
>> I'm approximately -0 on this.  I don't like the idea of dumping a bunch of
>> code into the main Twisted repo that isn't distributed along with Twisted
>> (personally I cannot wait to get rid of the "admin" directory entirely), but
>> I also see your point about the tool being a part of the process.
> 
>>> Twistedchecker  has become an important part of dev process and I feel
>>> that the reviews for this project should be more visible.
> 
>> To be fair we are only just now getting down to a reasonable latency on
>> Twisted reviews, and it is still a fairly small audience reviewing.  This
>> may just lengthen the Twisted review queue :).
> 
> As commented earlier, any tickets which sits idle in the review queue
> for more than 1 week is not reasonable for me
> 
> Some changes in twistedchecker are there to help you with general
> review process so if we land them first future reviews might be faster
> as you no longer have to stop and check for false positives in
> twistedchecker builder.

Annoying issues with twistedchecker are certainly a problem, and I don't want to dissuade you from working on them, but to be honest, they have not been a significant source of blockers for me lately.  I have reviewed plenty of tickets this month <http://twistedmatrix.com/highscores/> and twistedchecker rarely came up.  Now, granted, this is probably partly because of your other recent work, so, it's certainly valuable.

> I don't agree with your priority... but judging by the fact that
> pyflakes patches took so long to land and nobody is pissed of by
> twistedchecker I feel in minority :(
> For me improving the infrastructure and the tools used by the
> developers is more important than the Twisted code itself.
> 
> It seems to me that you are suggesting that we can build a state of
> the art skyscraper with bamboo scaffolding and only use our bare hands
> and later we can look into creating power tools and advanced cranes
> and scaffolding.
> 
> Maybe we are used with the fact that you can only run static code
> analysis on buildbot and for that you need a commit and to manually
> trigger a build by filling a web form and wait 2 minutes for results,
> but this is stone age :(
> 
> pyflakes and twistedchecker should run in less than 1 second on local
> computer. To optimize speed the checker should be smart and only check
> the files which have changes since trunk.

Twisted should also seamlessly parallelize over multiple cores.  It should also have good operational visibility, tracing, and a clearly-documented deployment story.  It does not strike me that any of these are substantially more important than the others.  While the tools aren't great, what I have spent most of my time struggling with lately is how to document things clearly, not tool issues.

> ---------
> 
> What I am trying to do is to convince other Twisted developers that
> tools and infrastructure are important and they should be top
> priority.
> I am advocating for replacing primitive tools.
> 
> The current review process is a pain for new non-commiter
> contributors. Read-only clone of svn, manual patches attached to trac,
> review commend digested into a single comment, new branches created
> for conflicting changes... etc

In my mind, the biggest tools problem is getting us onto a DVCS (which means "git" since git has won the DVCS wars). That means being able to deploy a testing site to make sure we haven't broken stuff, which means a Vagrantfile for braid.  I put in quite a lot of effort improving the state of our build farm earlier in the year, and ops stuff is only so rewarding, so I'm still a little burnt out on that.

If we had a DVCS though, the current conflicts on the logging branch would be easy to resolve, and as it stands they're not.  Many of the other issues you're talking about are hypothetically a big issue but this one is practically affecting progress a lot, since all of the builds are failing and multiple branches now need to be manually rebased.

> Developing good tools take a lot of effort... so does writing good
> tests. Tools should be at least as important as the code or the tests
> . In fact, tests are just a tool to help you develop code.

No argument there.  But there's plenty of testing we don't have either - fuzz testing, for example.  Our performance tests are kind of a mess, and we don't have alerting on performance regressions.  No one of these issues strikes me as obviously the #1 out there, overriding everything else that's going on with the project.

>> So, I do have an alternate proposal - perhaps you should just announce
>> changes to twistedchecker on this list, and land changes to it without
>> review if nobody objects within a week or so.  If you're making changes that
>> are time-sensitive and there is an insufficient community to participate in
>> reviews, then I think it's fair to say that they shouldn't be reviewed.  If
>> anyone objects to the changes that are going in, they can always sign up to
>> do reviews :).  I have implicitly instituted such a process for
>> Twisted-umbrella projects like Imaginary and Vertex, where there are not
>> enough active contributors to sustain development.
>> 
> 
> Beside twistedchecker there are also twisted-dev-tools and the repos
> from twisted-infra organization.
> 
> I am not happy about cowboy / one man show coding. Merging a change
> without a review as this will break things for sure.

I'd definitely prefer more participation but I can't synthesize contributors out of thin air.

> My alternate proposal is to try to raise awareness that good tools are
> at least as important as good tests and have more people reviewing
> code for tools and work on improving the tools and to consider them an
> integral part of the development process.

I am personally unconvinced that this is what I should spend my time doing, just because I already have an already never-ending list of things to work on within Twisted, but I really, really hope you are able to convince many others.  It would certainly make my life a lot easier ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/2a3c8d7b/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Mar 18 04:33:13 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Mar 2015 10:33:13 -0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
Message-ID: <20150318103313.6423.1846331760.divmod.xquotient.2@top>

On 17 Mar, 01:44 pm, adi at roiban.ro wrote:
>
>Am I the only one who fails to see the advantages of using
>SSHTransportAddress over a normal IAddress?

This doesn't make any sense.  `IAddress` has no attributes or methods. 
You can't do *anything* with an object that only provides `IAddress`.

Jean-Paul


From hawkowl at atleastfornow.net  Wed Mar 18 04:45:39 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 18 Mar 2015 18:45:39 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
Message-ID: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>

Hi,

As Python 2.6 has been officially abandoned for a year+ (and will receive no further official security updates) and Python 2.7 has been available for almost five years, it might be time to put Python 2.6 support to bed. The only currently supported distro that has Python 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.

This would be in line with other major projects (eg. Django, Plone) and Python's porting guide (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older). We can also remove some things from TestCase, and there's random smatterings of 2.6 support workarounds/comments that we could also remove.

As such, I think we should make 15.1 the final release which officially supports Python 2.6.

Any objections?

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/a1ea17e9/attachment.pgp>

From adi at roiban.ro  Wed Mar 18 04:55:27 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 10:55:27 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
Message-ID: <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>

Ok. Let's focus on Git then.

My biggest annoyance is buildbot and the builders with false positives.

Is this the only wiki page documenting the progress and next steps for
git migration  https://twistedmatrix.com/trac/wiki/Infrastructure/SwitchToGit

I have started working at vagrant file but the changes are not
reviewed since 8 Feb https://github.com/twisted-infra/braid/pull/77

I can donate time to work on this, just let me know what can I do :)

Cheers
-- 
Adi Roiban


From adi at roiban.ro  Wed Mar 18 04:58:40 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 10:58:40 +0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <20150318103313.6423.1846331760.divmod.xquotient.2@top>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <20150318103313.6423.1846331760.divmod.xquotient.2@top>
Message-ID: <CAFycZ9e4XuUiTXG5b=E7gfP0qLbGesSEA_SbL=gwK2mKjtuTbg@mail.gmail.com>

On 18 March 2015 at 10:33,  <exarkun at twistedmatrix.com> wrote:
> On 17 Mar, 01:44 pm, adi at roiban.ro wrote:
>>
>>
>> Am I the only one who fails to see the advantages of using
>> SSHTransportAddress over a normal IAddress?
>
>
> This doesn't make any sense.  `IAddress` has no attributes or methods. You
> can't do *anything* with an object that only provides `IAddress`.
>
> Jean-Paul

True. I was thinking at IPv4Address and IPv6Address.

Thanks for the follow up. I have change  getHost and getPeer for conch
to return SSHTransportAddress and pushed changes for review.

-- 
Adi Roiban


From adi at roiban.ro  Wed Mar 18 05:00:15 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 11:00:15 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <CAFycZ9eAum2wdZr+DyVpQWvrjV946cyOKCUpBnCquq1HPjy96g@mail.gmail.com>

Nope. Not for my part. +1 for removing it.

Thanks!

-- 
Adi Roiban


From itamar at itamarst.org  Wed Mar 18 05:26:03 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Mar 2015 07:26:03 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <abb07e50ac1e8ad94da5d8f7d7b61c0e@itamarst.org>

 

+1 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/c384307e/attachment.html>

From p.mayers at imperial.ac.uk  Wed Mar 18 06:24:31 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Mar 2015 12:24:31 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <55096E7F.2000001@imperial.ac.uk>

On 18/03/15 10:45, HawkOwl wrote:
> Hi,
>
> As Python 2.6 has been officially abandoned for a year+ (and will
> receive no further official security updates) and Python 2.7 has been
> available for almost five years, it might be time to put Python 2.6
> support to bed. The only currently supported distro that has Python
> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>
> This would be in line with other major projects (eg. Django, Plone)
> and Python's porting guide
> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
> We can also remove some things from TestCase, and there's random
> smatterings of 2.6 support workarounds/comments that we could also
> remove.
>
> As such, I think we should make 15.1 the final release which
> officially supports Python 2.6.
>
> Any objections?

Objectively it seems reasonable.

Subjectively, it'll substantially inconvenience me (and others who have 
RH/CentOS 6 systems which will be in service for years more).

In the past, we've built and deployed a newer Python when this has 
happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't 
intend to repeat it. Absent an EPEL package for python27, I suspect many 
people will do what we intend to do - stop updating Twisted.

Expect to see queries from people on older versions they can't update 
for some time ;o)

In all seriousness, I guess it depends on how useful this is. Being "in 
line" with other projects doesn't seem like a useful goal - who cares 
what Plone does? If it's useful for Twisted, then do it.


From donald at stufft.io  Wed Mar 18 06:29:48 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 18 Mar 2015 08:29:48 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <55096E7F.2000001@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
Message-ID: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>


> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 18/03/15 10:45, HawkOwl wrote:
>> Hi,
>> 
>> As Python 2.6 has been officially abandoned for a year+ (and will
>> receive no further official security updates) and Python 2.7 has been
>> available for almost five years, it might be time to put Python 2.6
>> support to bed. The only currently supported distro that has Python
>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>> 
>> This would be in line with other major projects (eg. Django, Plone)
>> and Python's porting guide
>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>> We can also remove some things from TestCase, and there's random
>> smatterings of 2.6 support workarounds/comments that we could also
>> remove.
>> 
>> As such, I think we should make 15.1 the final release which
>> officially supports Python 2.6.
>> 
>> Any objections?
> 
> Objectively it seems reasonable.
> 
> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
> 
> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
> 
> Expect to see queries from people on older versions they can't update for some time ;o)
> 
> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Isn?t the RHEL answer here to just use SCLs to install Python 2.7?

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/f0d2b03e/attachment.pgp>

From p.mayers at imperial.ac.uk  Wed Mar 18 07:02:45 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Mar 2015 13:02:45 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <55097775.5050704@imperial.ac.uk>

On 18/03/15 12:29, Donald Stufft wrote:

> Isn?t the RHEL answer here to just use SCLs to install Python 2.7?

I've never actually come across the SCL stuff before. Thanks for the 
pointer.

My latter point still stands - don't do it because others do it, do it 
because it's good for Twisted (or not ;o)


From hawkowl at atleastfornow.net  Wed Mar 18 07:07:13 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 18 Mar 2015 21:07:13 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <55097775.5050704@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <55097775.5050704@imperial.ac.uk>
Message-ID: <7608DC3F-364E-4DCC-9D4D-57F6EE78BE66@atleastfornow.net>


> On 18 Mar 2015, at 21:02, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 18/03/15 12:29, Donald Stufft wrote:
> 
>> Isn?t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> I've never actually come across the SCL stuff before. Thanks for the pointer.
> 
> My latter point still stands - don't do it because others do it, do it because it's good for Twisted (or not ;o)

Yes, it's good for Twisted -- but I was mentioning that it's also something that other projects have done, so it's not like it's a crazy idea :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/f07e979d/attachment.pgp>

From glyph at twistedmatrix.com  Wed Mar 18 16:03:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 15:03:14 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
Message-ID: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>

I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".

Anybody else have this issue?  Objections?

-glyph



From glyph at twistedmatrix.com  Wed Mar 18 17:48:19 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 16:48:19 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
Message-ID: <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>


> On Mar 18, 2015, at 3:55 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Ok. Let's focus on Git then.
> 
> My biggest annoyance is buildbot and the builders with false positives.
> 
> Is this the only wiki page documenting the progress and next steps for
> git migration  https://twistedmatrix.com/trac/wiki/Infrastructure/SwitchToGit
> 
> I have started working at vagrant file but the changes are not
> reviewed since 8 Feb https://github.com/twisted-infra/braid/pull/77
> 
> I can donate time to work on this, just let me know what can I do :)

OK, cool.  I didn't realize that was ready for review.  I am liking the process we have for Mimic for flagging PRs with keywords - https://github.com/rackerlabs/mimic/pulls <https://github.com/rackerlabs/mimic/pulls> - but this needs automation so as not to be unfriendly to non-committer contributors.

I'll try to get to it by the end of the week.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/dbdc1bd3/attachment.html>

From glyph at twistedmatrix.com  Wed Mar 18 17:57:31 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 16:57:31 -0700
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>


> On Mar 18, 2015, at 5:29 AM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> 
>> On 18/03/15 10:45, HawkOwl wrote:
>>> Hi,
>>> 
>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>> receive no further official security updates) and Python 2.7 has been
>>> available for almost five years, it might be time to put Python 2.6
>>> support to bed. The only currently supported distro that has Python
>>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>>> 
>>> This would be in line with other major projects (eg. Django, Plone)
>>> and Python's porting guide
>>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>>> We can also remove some things from TestCase, and there's random
>>> smatterings of 2.6 support workarounds/comments that we could also
>>> remove.
>>> 
>>> As such, I think we should make 15.1 the final release which
>>> officially supports Python 2.6.
>>> 
>>> Any objections?
>> 
>> Objectively it seems reasonable.
>> 
>> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
>> 
>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>> 
>> Expect to see queries from people on older versions they can't update for some time ;o)
>> 
>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Isn?t the RHEL answer here to just use SCLs to install Python 2.7?

Rather than just suggest we preserve the status quo and stay on 2.6 forever to do indefinite free work to support Red Hat's obsolescence business, perhaps we should make a condition of dropping 2.6 support being a clear guide for getting a Twisted environment with py2.7 up and running on whatever appropriately decrepit environment is popular in the CentOS/RHEL user community?  I am annoyed with RH for lagging so much, but I don't want to make their customers' employees suffer for it.

Phil - I do have a question though, since you seem to be a real life user with this use-case :).  If you want to use an old, unsupported version of Python, why do you want to deploy a new, updated version of Twisted on it?

dstufft - is there a PyPy EPEL?  As long as we're telling people to change which Python to use, perhaps we should point them at an actually good one ;).

-glyph




From donald at stufft.io  Wed Mar 18 18:42:07 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 18 Mar 2015 20:42:07 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
Message-ID: <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>


> On Mar 18, 2015, at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Mar 18, 2015, at 5:29 AM, Donald Stufft <donald at stufft.io> wrote:
>> 
>> 
>>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>> 
>>> On 18/03/15 10:45, HawkOwl wrote:
>>>> Hi,
>>>> 
>>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>>> receive no further official security updates) and Python 2.7 has been
>>>> available for almost five years, it might be time to put Python 2.6
>>>> support to bed. The only currently supported distro that has Python
>>>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>>>> 
>>>> This would be in line with other major projects (eg. Django, Plone)
>>>> and Python's porting guide
>>>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>>>> We can also remove some things from TestCase, and there's random
>>>> smatterings of 2.6 support workarounds/comments that we could also
>>>> remove.
>>>> 
>>>> As such, I think we should make 15.1 the final release which
>>>> officially supports Python 2.6.
>>>> 
>>>> Any objections?
>>> 
>>> Objectively it seems reasonable.
>>> 
>>> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
>>> 
>>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>>> 
>>> Expect to see queries from people on older versions they can't update for some time ;o)
>>> 
>>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
>> Isn?t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> Rather than just suggest we preserve the status quo and stay on 2.6 forever to do indefinite free work to support Red Hat's obsolescence business, perhaps we should make a condition of dropping 2.6 support being a clear guide for getting a Twisted environment with py2.7 up and running on whatever appropriately decrepit environment is popular in the CentOS/RHEL user community?  I am annoyed with RH for lagging so much, but I don't want to make their customers' employees suffer for it.
> 
> Phil - I do have a question though, since you seem to be a real life user with this use-case :). If you want to use an old, unsupported version of Python, why do you want to deploy a new, updated version of Twisted on it?
> 
> dstufft - is there a PyPy EPEL?  As long as we're telling people to change which Python to use, perhaps we should point them at an actually good one ;).
> 

It looks like EPEL has PyPy 2.0.2, I don?t see it in SCL.

If you want newer than that you could possibly convince PyPy to build RPMs with COPR. I?m doing that for python-pip and co and it?s not very hard once you have the RPM spec file originally written, which could probably just be taken from Fedora.

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150318/ef69b783/attachment.pgp>

From exarkun at twistedmatrix.com  Wed Mar 18 18:45:57 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Mar 2015 00:45:57 -0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <20150319004557.6423.1301490171.divmod.xquotient.8@top>

On 18 Mar, 10:45 am, hawkowl at atleastfornow.net wrote:
>Hi,
>
>As Python 2.6 has been officially abandoned for a year+ (and will 
>receive no further official security updates) and Python 2.7 has been 
>available for almost five years, it might be time to put Python 2.6 
>support to bed. The only currently supported distro that has Python 2.6 
>is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>
>This would be in line with other major projects (eg. Django, Plone) and 
>Python's porting guide (https://docs.python.org/3/howto/pyporting.html 
>#drop-support-for-python-2-6-and-older). We can also remove some things 
>from TestCase, and there's random smatterings of 2.6 support 
>workarounds/comments that we could also remove.
>
>As such, I think we should make 15.1 the final release which officially 
>supports Python 2.6.
>
>Any objections?

Please keep in mind that the way Twisted drops support for various 
platforms is by:

  1) announcing that it will be so
  2) removing the BuildBot configurations that demonstrate Twisted works 
on those platforms
  3) dropping the development/review requirement that the test suite be 
kept passing on those platforms

Contrast this with another possible meaning of "drop support" which is 
*not* what Twisted does:

  1) actively prioritize a bunch of work to make sure that Twisted 
definitely will be as broken as possible on the de-supported platform

Thanks.
Jean-Paul


From exarkun at twistedmatrix.com  Wed Mar 18 18:50:58 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Mar 2015 00:50:58 -0000
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <20150319005058.6423.2103407819.divmod.xquotient.15@top>

On 18 Mar, 10:03 pm, glyph at twistedmatrix.com wrote:
>I'd like to deprecate and remove __nonzero__ on Deferreds. 
>Occasionally I see code where someone (maybe even me) does "if d:" 
>where they should have been doing "@d.addCallback def cb(result): if 
>result: ...".
>
>Anybody else have this issue?  Objections?

Er.  What?  It's a little early for april fools' day, isn't it?

Seriously, this is weird.  Am I missing something?

Can expand on what it would mean to deprecated a special method of a 
class that doesn't even define it and what makes Deferred unique among 
all user-defined classes in this regard.

Jean-Paul


From mithrandi at mithrandi.net  Wed Mar 18 19:30:03 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 19 Mar 2015 03:30:03 +0200
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <CAMcKhMR4=4-TBXZES0H2U-5ePgLNsW-Vt=hp6YgNZrPKapC7hA@mail.gmail.com>

On 19 March 2015 at 00:03, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> I'd like to deprecate and remove __nonzero__ on Deferreds.

By "remove" do you mean "add an implementation that raises an
exception"? (It seems like this must be what you meant, I just wanted
to be clear since this is a slightly subtle issue)

I'm not sure offhand if I have any code that would be affected by
this, but I don't think I would have a problem considering any such
code incorrect. The most likely case I can think of is where I've
lazily written something like "if d" instead of "if d is not None".

That is to say, "+1".
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From adi at roiban.ro  Thu Mar 19 03:45:13 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 09:45:13 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
Message-ID: <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>

> OK, cool.  I didn't realize that was ready for review.  I am liking the
> process we have for Mimic for flagging PRs with keywords -
> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
> not to be unfriendly to non-committer contributors.
>
> I'll try to get to it by the end of the week.

For twistedchecker I start using tags ... but I don't have permissions
for twisted-infra repos.

Yes. GitHub PR are nice but horrible for implementing anything formal
on top of it.

I was preparing to suggest someting similar also for Trac as sometimes
I am not sure if a comment is 'do minor changes and merge' or 'do
minor change and send them for review'

My suggestion is this:

when a PR is ready for review the author should leave a comment
containing the `needs-review` marker. This will send a hook and a
custom hook server will update the tags of the ticket.

When someone has reviewed the changes and don't like them he/she can
add a comment with 'needs-changes' marker. Again the hook server will
kick in and update the tags.

When someone has approved the changes he/she leave a comment with
`changes-approved` marker and the hook server will update the tags.

The hook server will have permission to  set tag so this will work
even for non commiters.

I already use something like this for my project based on a custom GH
hook server which is just a simple web server which parse the hook and
dispatch them as a nice JSON
https://github.com/chevah/txghserf/blob/master/txghserf/server.py

I find it easy to type needs-review / needs-chagnes ... etc than using
the mouse to set a tag or change the owner of a ticket.

What do you say?
-- 
Adi Roiban


From p.mayers at imperial.ac.uk  Thu Mar 19 06:02:08 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Mar 2015 12:02:08 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>
Message-ID: <550ABAC0.2020703@imperial.ac.uk>

On 19/03/15 00:42, Donald Stufft wrote:

> If you want newer than that you could possibly convince PyPy to build
> RPMs with COPR. I?m doing that for python-pip and co and it?s not
> very hard once you have the RPM spec file originally written, which
> could probably just be taken from Fedora.

IME that is usually a lot harder than it looks. We (try to) do it a lot 
and it's very common to need a lot of work backporting newer Fedora 
.spec to EL6. It's often easier to just roll a new one.


From p.mayers at imperial.ac.uk  Thu Mar 19 06:05:50 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Mar 2015 12:05:50 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
Message-ID: <550ABB9E.8070800@imperial.ac.uk>

On 18/03/15 23:57, Glyph Lefkowitz wrote:

> Rather than just suggest we preserve the status quo and stay on 2.6
> forever to do indefinite free work to support Red Hat's obsolescence

You *definitely* shouldn't do that. Push back on RedHat, and tell 
customers to push back on RedHat. I say this to other projects.

As mentioned, if maintaining 2.6 support is anything other than a 
trivial amount of work, then it's totally reasonable to drop it.

> business, perhaps we should make a condition of dropping 2.6 support
> being a clear guide for getting a Twisted environment with py2.7 up
> and running on whatever appropriately decrepit environment is popular
> in the CentOS/RHEL user community?  I am annoyed with RH for lagging
> so much, but I don't want to make their customers' employees suffer
> for it.
>
> Phil - I do have a question though, since you seem to be a real life
> user with this use-case :).  If you want to use an old, unsupported
> version of Python, why do you want to deploy a new, updated version
> of Twisted on it?

Well, I don't want to use Python 2.6 per-se. It's what a large number of 
the systems we run have bundled, I have no need for newer 2.7 language 
features, and thus if I can *possibly* avoid it, I don't want to 
maintain the burden of deploying another version, even less so the 
burden of packaging it. We've done that in the past, it's non-trivial 
effort.

I've no specific need for a newer Twisted right now, but I can imagine 
things that might appear - support in listenSSL for ALPN for example, or 
HTTP/2 - that we could use if they appeared.

So, it's purely speculative. I have no current specific need.

> dstufft - is there a PyPy EPEL?  As long as we're telling people to
> change which Python to use, perhaps we should point them at an
> actually good one ;).

PyPy in EPEL 6 is currently sitting at 2.0.2. I've only tried it a few 
times and had mixed results; having to use psycopg2cffi was a bit of a 
pain, and I had some pathological performance issues, but it did 
basically work.

The RHEL SCLs OTOH... After Donald's pointer I took a look at them. They 
are... not great.

[Basically, they're built to think they run in one path, but installed 
in another, and you have to run it with a wrapper script that sets up 
LD_LIBRARY_PATH, PATH, PYTHONPATH, etc.

As opposed to what you'd think, a Python 2.7 compiled and installed 
into, say, /opt/python2.7, which you can just run directly.

Sigh...]

So my ?0.02 is that recommending SCL for Python 2.7 on EL6 is something 
you would want to do with caution ;o)

I honestly wouldn't worry about it too much; RedHat's policies aren't 
and shouldn't be Twisted's problem. Do what's best for your development.

Cheers,
Phil


From timothy.gallagher at nuspire.com  Thu Mar 19 08:56:36 2015
From: timothy.gallagher at nuspire.com (Timothy Gallagher)
Date: Thu, 19 Mar 2015 14:56:36 +0000
Subject: [Twisted-Python] twisted echo ssl client with .p12
Message-ID: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>

Hello all,
I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?

ctx = ssl.ClientContextFactory.getContext(self)
ctx.use_certificate_file('keys/client.crt')
ctx.use_privatekey_file('keys/client.key')

Any assistance or code examples would be a huge help.

Thank you for the time
TJ

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/6b328342/attachment.html>

From adi at roiban.ro  Thu Mar 19 09:26:56 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 15:26:56 +0000
Subject: [Twisted-Python] Pausing the transport in
 http.HTTPChannel.lineReceived after all headers are received
Message-ID: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>

Hi,

My usecase is this:

When all headers of an HTTP request are received I want to ask a
remote service if the
request should be accepted and what to do with it.

Before I got the response for the remote service, I don't want to
receive/read HTTP data.
The response is returned via an deferred.

The HTTP data might be a 10G file which might be rejected.. for
example due to quota limits.

Here is a gist with a short example and my quick and dirty fix:
https://gist.github.com/adiroiban/621efeab47662a04cb20

------

Do you think this is a valid use case and that  someone would be
willing to review a patch to add such a feature?

-------

I first went on a wrong path as I was calling
self.transport.pauseProducing() instead of self.pauseProducing() but
while reading the code I found this:

In http.HTTPChannel  self.transport.producerPaused is confusing as it
is always False.. and looking at the code from internet/abstract.py I
can see that it is not touched by pauseProducing() ... how should
producerPaused be used?

Is this a bug or a feature? Is there a ticket for it?

I saw that when you return a non-zero value from lineReceived() it
will stop processing the remaining data but I could not find the
documentation for this behaviour.

Should I continue searching for the documentation ? or file a ticket?


Thanks!
-- 
Adi Roiban


From ldanielburr at me.com  Thu Mar 19 09:36:03 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Thu, 19 Mar 2015 10:36:03 -0500
Subject: [Twisted-Python] twisted echo ssl client with .p12
In-Reply-To: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
References: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
Message-ID: <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>

Hi Timothy,

> On Mar 19, 2015, at 9:56 AM, Timothy Gallagher <timothy.gallagher at nuspire.com> wrote:
> 
> Hello all,
> I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?

Maybe http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto <http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto> will be useful to you.  Twisted uses pyopenssl under the covers, so the solution exarkun posted to StackOverflow should be applicable.

Hope this helps,

- L. Daniel Burr

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/1fafe375/attachment.html>

From radix at twistedmatrix.com  Thu Mar 19 09:41:40 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Mar 2015 10:41:40 -0500
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
Message-ID: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>


> On Mar 19, 2015, at 4:45 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> OK, cool.  I didn't realize that was ready for review.  I am liking the
>> process we have for Mimic for flagging PRs with keywords -
>> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
>> not to be unfriendly to non-committer contributors.
>> 
>> I'll try to get to it by the end of the week.
> 
> For twistedchecker I start using tags ... but I don't have permissions
> for twisted-infra repos.
> 
> Yes. GitHub PR are nice but horrible for implementing anything formal
> on top of it.
> 
> I was preparing to suggest someting similar also for Trac as sometimes
> I am not sure if a comment is 'do minor changes and merge' or 'do
> minor change and send them for review'
> 
> My suggestion is this:
> 
> when a PR is ready for review the author should leave a comment
> containing the `needs-review` marker. This will send a hook and a
> custom hook server will update the tags of the ticket.
> 


I suggest making the default, tagless state of a PR mean ?in review?, for a couple of reasons:

- having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
- if the automation loses track of a PR, we don?t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR

so I propose tagless PRs be considered ?in review?, and a label only for `needs-changes`.

-radix

From hawkowl at atleastfornow.net  Thu Mar 19 09:46:33 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 19 Mar 2015 23:46:33 +0800
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
Message-ID: <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>


> On 19 Mar 2015, at 23:41, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> I suggest making the default, tagless state of a PR mean ?in review?, for a couple of reasons:
> 
> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
> - if the automation loses track of a PR, we don?t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
> 
> so I propose tagless PRs be considered ?in review?, and a label only for `needs-changes`.

Only people with special access can modify labels, though?

> 
> -radix
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/4d21ed2e/attachment.pgp>

From hawkowl at atleastfornow.net  Thu Mar 19 09:53:38 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 19 Mar 2015 23:53:38 +0800
Subject: [Twisted-Python] Pausing the transport in
	http.HTTPChannel.lineReceived after all headers are received
In-Reply-To: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>
References: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>
Message-ID: <7D0E710F-7D1F-43DA-94E0-037AB5C6560B@atleastfornow.net>


> On 19 Mar 2015, at 23:26, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> My usecase is this:
> 
> When all headers of an HTTP request are received I want to ask a
> remote service if the
> request should be accepted and what to do with it.
> 
> Before I got the response for the remote service, I don't want to
> receive/read HTTP data.
> The response is returned via an deferred.
> 
> The HTTP data might be a 10G file which might be rejected.. for
> example due to quota limits.
> 
> Here is a gist with a short example and my quick and dirty fix:
> https://gist.github.com/adiroiban/621efeab47662a04cb20
> 
> ------
> 
> Do you think this is a valid use case and that  someone would be
> willing to review a patch to add such a feature?

Ah yes, the 100-Continue stuff! I mentioned it briefly in my talk at PyCon AU.

It would be a useful feature, and I looked into it a little bit, but I'm not entirely sure how it would be accessible to user code. Most web server frameworks (Django, Klein, Flask, et al) work on a "here's a full request, send a full response" (only Twisted/Klein can do more than send a whole response without hacks :) ) and fitting it into that sort of framework would be a bit confusing.

So, my question is, because this functionality is desirable, how would it be exposed to the user? Maybe if it did traversal prior to the whole request being completed, and called something like headers_POST() or headers_GET() similar to render_GET/POST/etc, which would give the user access to these headers. A Deferred firing with True unblocks the producer, a Deferred firing with False kills off the request.

> 
> -------
> 
> I first went on a wrong path as I was calling
> self.transport.pauseProducing() instead of self.pauseProducing() but
> while reading the code I found this:
> 
> In http.HTTPChannel  self.transport.producerPaused is confusing as it
> is always False.. and looking at the code from internet/abstract.py I
> can see that it is not touched by pauseProducing() ... how should
> producerPaused be used?
> 
> Is this a bug or a feature? Is there a ticket for it?
> 
> I saw that when you return a non-zero value from lineReceived() it
> will stop processing the remaining data but I could not find the
> documentation for this behaviour.
> 
> Should I continue searching for the documentation ? or file a ticket?

This functionality does not exist in Twisted, it just automatically sends the 100. (https://twistedmatrix.com/trac/ticket/4673) However, according to http://twisted-python.twistedmatrix.narkive.com/I9VkN3K3/twisted-web-giant-file-post-forwarding-and-early-bail-out , it probably won't work that great -- only some clients do the 100 continue stuff, and others will just keep shovelling data down the pipe, so only by closing the connection (and them probably disregarding your error message) will it work.

> 
> 
> Thanks!
> --
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/021dde7a/attachment.pgp>

From radix at twistedmatrix.com  Thu Mar 19 09:54:55 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Mar 2015 10:54:55 -0500
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
 <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>
Message-ID: <324386F4-38B2-4168-8BA7-29DEA189BED8@twistedmatrix.com>


> On Mar 19, 2015, at 10:46 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> 
>> On 19 Mar 2015, at 23:41, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>> 
>> I suggest making the default, tagless state of a PR mean ?in review?, for a couple of reasons:
>> 
>> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
>> - if the automation loses track of a PR, we don?t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
>> 
>> so I propose tagless PRs be considered ?in review?, and a label only for `needs-changes`.
> 
> Only people with special access can modify labels, though?


Right, and Adi suggests a bot for managing those labels ? I?m not disagreeing with that point in general, just the details about which tags there are.

-radix



From adi at roiban.ro  Thu Mar 19 10:30:02 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 16:30:02 +0000
Subject: [Twisted-Python] 100-continue and rejecting connection after
	headers are received
Message-ID: <CAFycZ9cT9BUvPg8o72iVUQE+GO_Svx7my5TXKyr+DcBpBG9WiQ@mail.gmail.com>

I am moving this to a dedicated ticket

I start working on 100-Continue here
https://twistedmatrix.com/trac/ticket/6928 and was asked to follow up
on the mailinglist ... which due to slow review progress I gave up..
so I am doing it now.


On 19 March 2015 at 15:53, HawkOwl <hawkowl at atleastfornow.net> wrote:
>
>> On 19 Mar 2015, at 23:26, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> My usecase is this:
>>
>> When all headers of an HTTP request are received I want to ask a
>> remote service if the
>> request should be accepted and what to do with it.
>>
>> Before I got the response for the remote service, I don't want to
>> receive/read HTTP data.
>> The response is returned via an deferred.
>>
>> The HTTP data might be a 10G file which might be rejected.. for
>> example due to quota limits.
>>
>> Here is a gist with a short example and my quick and dirty fix:
>> https://gist.github.com/adiroiban/621efeab47662a04cb20
>>
>> ------
>>
>> Do you think this is a valid use case and that  someone would be
>> willing to review a patch to add such a feature?
>
> Ah yes, the 100-Continue stuff! I mentioned it briefly in my talk at PyCon AU.
>
> It would be a useful feature, and I looked into it a little bit, but I'm not entirely sure how it would be accessible to user code. Most web server frameworks (Django, Klein, Flask, et al) work on a "here's a full request, send a full response" (only Twisted/Klein can do more than send a whole response without hacks :) ) and fitting it into that sort of framework would be a bit confusing.
>
> So, my question is, because this functionality is desirable, how would it be exposed to the user? Maybe if it did traversal prior to the whole request being completed, and called something like headers_POST() or headers_GET() similar to render_GET/POST/etc, which would give the user access to these headers. A Deferred firing with True unblocks the producer, a Deferred firing with False kills off the request.

I already have 100-continue in production ... and I also have a code
which rejects a request after headers were received even if
100-continue was not used.

When all headers are received I am traversing the url and inform the
resource about the headers... before content is received.

I have a special resource which has a new headersReceived method. This
method should return http._CONTINUE as otherwise the request is
rejected.

This only work for resource traversals which don't depend on the request body.
Exarkun made an excellent comment here
https://twistedmatrix.com/trac/ticket/6928#comment:5

The new resource interface is simple.

Here is a dump from my current code
https://gist.github.com/adiroiban/1a515a9354a8168a0275

Here is a diff on Twisted
https://github.com/twisted/twisted/compare/trunk...chevah:6928-http-100-accept

Please review the interface and let me know if it make sense to you.
I am happy to continue working on this as long as others are
interested in reviewing the patch.

Thanks!

-- 
Adi Roiban


From poalman at gmail.com  Thu Mar 19 12:18:27 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Thu, 19 Mar 2015 18:18:27 +0000
Subject: [Twisted-Python] custom FTP server is blocking
Message-ID: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>

I have some blocking going on in a custom twisted ftp server and I'm
trying to pin point what exactly is doing it.

I think this line in openForReading on my FTPShell object could be the culprit:

_FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))

(_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)

I'm guessing urllib2.urlopen blocks resolving the domain and
connecting? What would be the twisted equivalent way of providing a
file like object of the download stream to the FileReader that
wouldn't block?

Regards,

Paul


From ldanielburr at me.com  Thu Mar 19 14:38:30 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Thu, 19 Mar 2015 15:38:30 -0500
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
Message-ID: <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>

Hi Paul,

> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
> 
> I have some blocking going on in a custom twisted ftp server and I'm
> trying to pin point what exactly is doing it.
> 
> I think this line in openForReading on my FTPShell object could be the culprit:
> 
> _FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))
> 

Yeah, urllib2.urlopen() blocks, so this is at least one place in your code that will cause you a problem.

> (_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)
> 
> I'm guessing urllib2.urlopen blocks resolving the domain and
> connecting? What would be the twisted equivalent way of providing a
> file like object of the download stream to the FileReader that
> wouldn't block?
> 

You probably want to use twisted.web.client.Agent for this, as it allows you to perform non-blocking http requests.  If you can live with buffering the http response body into, say, a tempfile or an io.BytesIO instance, then you can just pass that to _FileReader as the fObj argument and call it a day.


Hope this helps,

--
L. Daniel Burr



From glyph at twistedmatrix.com  Thu Mar 19 15:13:48 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Mar 2015 14:13:48 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <20150319005058.6423.2103407819.divmod.xquotient.15@top>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
 <20150319005058.6423.2103407819.divmod.xquotient.15@top>
Message-ID: <18084B73-66AE-4F0A-857C-507D27537533@twistedmatrix.com>


> On Mar 18, 2015, at 5:50 PM, exarkun at twistedmatrix.com wrote:
> 
> On 18 Mar, 10:03 pm, glyph at twistedmatrix.com wrote:
>> I'd like to deprecate and remove __nonzero__ on Deferreds. Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>> 
>> Anybody else have this issue?  Objections?
> 
> Er.  What?  It's a little early for april fools' day, isn't it?

> Seriously, this is weird.  Am I missing something?

Apparently?

> Can expand on what it would mean to deprecated a special method of a class that doesn't even define it

Add such a method and cause it to emit a warning, then raise an exception.

> and what makes Deferred unique among all user-defined classes in this regard.

As I stated in my original message, there's a class of bug where someone does "if somethingThatReturnsDeferred()".  Particularly, "if checkPassword()" is a dangerous manifestation of this class of bug.  I'd like this to fail noisily instead of appearing to work.

In my opinion, having all user-defined classes implement true truthiness by default is a design error in the language.  It's a usually-harmless one except in a few cases, and this is one of those cases, which is why Deferred is not the same as the average user-defined class.

-glyph



From dripton at ripton.net  Thu Mar 19 18:23:35 2015
From: dripton at ripton.net (David Ripton)
Date: Thu, 19 Mar 2015 20:23:35 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550ABB9E.8070800@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
Message-ID: <550B6887.4020703@ripton.net>

On 03/19/2015 08:05 AM, Phil Mayers wrote:
> On 18/03/15 23:57, Glyph Lefkowitz wrote:
> 
>> Rather than just suggest we preserve the status quo and stay on 2.6
>> forever to do indefinite free work to support Red Hat's obsolescence
> 
> You *definitely* shouldn't do that. Push back on RedHat, and tell
> customers to push back on RedHat. I say this to other projects.

Red Hat supports old versions of RHEL forever because they have
customers that want that (because they have legacy apps that they want
to keep working with minimal maintenance, but who still want security
patches), and are willing to pay for it.  It's a good thing that someone
provides that option, even if we don't all need it.

That doesn't mean Twisted needs to support old versions of RHEL forever.
 RHEL 7 has been out for a while, and comes with Python 2.7 as the
default.  So even if Twisted drops support for Python 2.6, it'll still
work on RHEL.  (Just not on old versions of RHEL.)

Furthermore, SCL makes Python 2.7 available (in /opt) on RHEL 5 and 6
and CentOS 6, without users needing to build it themselves.  So even
those who are stuck with old versions can install SCL, then use pip to
install new Twisted.

IOW, I wouldn't worry about it.  Drop support for Python 2.6 when it
makes sense for Twisted.

-- 
David Ripton    dripton at ripton.net


From glyph at twistedmatrix.com  Thu Mar 19 21:25:04 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 20:25:04 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
Message-ID: <790710C6-7461-4E4C-A796-381BD3ED2679@twistedmatrix.com>


> On Mar 19, 2015, at 8:41 AM, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> 
>> On Mar 19, 2015, at 4:45 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>>> OK, cool.  I didn't realize that was ready for review.  I am liking the
>>> process we have for Mimic for flagging PRs with keywords -
>>> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
>>> not to be unfriendly to non-committer contributors.
>>> 
>>> I'll try to get to it by the end of the week.
>> 
>> For twistedchecker I start using tags ... but I don't have permissions
>> for twisted-infra repos.
>> 
>> Yes. GitHub PR are nice but horrible for implementing anything formal
>> on top of it.
>> 
>> I was preparing to suggest someting similar also for Trac as sometimes
>> I am not sure if a comment is 'do minor changes and merge' or 'do
>> minor change and send them for review'
>> 
>> My suggestion is this:
>> 
>> when a PR is ready for review the author should leave a comment
>> containing the `needs-review` marker. This will send a hook and a
>> custom hook server will update the tags of the ticket.
>> 
> 
> 
> I suggest making the default, tagless state of a PR mean ?in review?, for a couple of reasons:
> 
> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
> - if the automation loses track of a PR, we don?t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
> 
> so I propose tagless PRs be considered ?in review?, and a label only for `needs-changes`.

I like seeing the big green "ready for review" on Mimic PRs; it's more eye-catching.  We can have 2 labels though, so that if the automation breaks, we can have a periodic check that adds "in-review" to everything un-labeled.

-g

From glyph at twistedmatrix.com  Thu Mar 19 23:25:10 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 22:25:10 -0700
Subject: [Twisted-Python] twisted echo ssl client with .p12
In-Reply-To: <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>
References: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
 <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>
Message-ID: <1AE7D177-6F83-4204-B088-3706F7E1B05F@twistedmatrix.com>


> On Mar 19, 2015, at 8:36 AM, Louis D. Burr <ldanielburr at me.com> wrote:
> 
> Hi Timothy,
> 
>> On Mar 19, 2015, at 9:56 AM, Timothy Gallagher <timothy.gallagher at nuspire.com <mailto:timothy.gallagher at nuspire.com>> wrote:
>> 
>> Hello all,
>> I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?
> 
> Maybe http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto <http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto> will be useful to you.  Twisted uses pyopenssl under the covers, so the solution exarkun posted to StackOverflow should be applicable.
> 
> Hope this helps,
> 
> - L. Daniel Burr

You definitely shouldn't use ssl.ClientContextFactory.  It doesn't verify certificates, or provide any authentication of the server.  We should really remove and deprecate it :-\.

You should use ssl.optionsForClientTLS, and you should build it like this:

import getpass

from OpenSSL.crypto import load_pkcs12
from twisted.internet.ssl import (
    PrivateCertificate, KeyPair, Certificate, optionsForClientTLS
)

from twisted.internet.protocol import Factory, Protocol
from twisted.internet.endpoints import SSL4ClientEndpoint
from twisted.internet.defer import inlineCallbacks, Deferred
from twisted.internet.task import react

@inlineCallbacks
def main(reactor, p12file, host, port=443):
    host = host.decode("utf-8")
    port = int(port)
    with open(p12file) as f:
        pkcs12 = load_pkcs12(f.read(), getpass.getpass())
        publicCertificate = Certificate(pkcs12.get_certificate())
        privateKey = KeyPair(pkcs12.get_privatekey())
        privateCertificate = PrivateCertificate.fromCertificateAndKeyPair(
            publicCertificate, privateKey
        )
    contextFactory = optionsForClientTLS(host,
                                         clientCertificate=privateCertificate)
    endpoint = SSL4ClientEndpoint(reactor, host, port, contextFactory)
    x = Deferred()
    class it(Protocol, object):
        def connectionMade(self):
            self.transport.write(b"GET / HTTP/1.1\r\n\r\n")
        def dataReceived(self, data):
            x.callback(Certificate.peerFromTransport(self.transport))
            self.transport.abortConnection()
    yield endpoint.connect(Factory.forProtocol(it))
    cert = yield x
    print(cert)

from sys import argv
react(main, argv[1:])

Hopefully that's a pretty complete answer :-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/5d5edec5/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Mar 19 23:43:46 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 22:43:46 -0700
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550ABB9E.8070800@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
Message-ID: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>

> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.

The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.

I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150319/52456258/attachment.html>

From donald at stufft.io  Thu Mar 19 23:47:54 2015
From: donald at stufft.io (Donald Stufft)
Date: Fri, 20 Mar 2015 01:47:54 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
 <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
Message-ID: <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>


> On Mar 20, 2015, at 1:43 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk <mailto:p.mayers at imperial.ac.uk>> wrote:
>> 
>> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.
> 
> The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.
> 
> I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I can give you access to some logs that you can parse, assuming they are downloading with pip or easy_install. It?ll tell you what versions of Python people are using.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150320/d2beffe6/attachment.html>

From hawkowl at atleastfornow.net  Fri Mar 20 00:36:13 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 20 Mar 2015 14:36:13 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
 <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
 <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>
Message-ID: <87DF82EE-DFA2-41A2-8B2A-9E53D7568E59@atleastfornow.net>


> On 20 Mar 2015, at 13:47, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 20, 2015, at 1:43 AM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>> 
>>> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.
>> 
>> The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.
>> 
>> I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
>> 
>> -glyph
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> I can give you access to some logs that you can parse, assuming they are downloading with pip or easy_install. It?ll tell you what versions of Python people are using.

yesplz :)

- Hawkie

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150320/8899b322/attachment.pgp>

From kathyannfarnsworth at yahoo.com  Fri Mar 20 01:03:40 2015
From: kathyannfarnsworth at yahoo.com (kathy farnsworth)
Date: Fri, 20 Mar 2015 07:03:40 +0000 (UTC)
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
References: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
Message-ID: <622011267.1371635.1426835020184.JavaMail.yahoo@mail.yahoo.com>

How do I unsubscribe to this that I accidentally did I suppose. I am getting flooded with emails that I have no idea what they are about. Many, many emails. I tried to spam and they still come. PLEASE HELP AND SPREAD THE WORD TO REMOVE ME !!!!!!!
Kathy?kathyannfarnsworth at yahoo.com 


     On Thursday, March 19, 2015 10:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
   

 
On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.


The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted. ?If users are?doing this on RHEL6, then maybe there's a reason to keep supporting 2.6. ?But if using RHEL just means that they're never upgrading anything?then there's no point to continuing maintenance.
I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
-glyph

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150320/18759810/attachment.html>

From jmp at justinmp.com  Fri Mar 20 05:05:40 2015
From: jmp at justinmp.com (Justin Mazzola Paluska)
Date: Fri, 20 Mar 2015 07:05:40 -0400
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <550BFF04.9080009@justinmp.com>

On 03/18/2015 06:03 PM, Glyph Lefkowitz wrote:
> I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>
> Anybody else have this issue?  Objections?

How does this interact with code that uses None as a sentinel?

I have code where I shoot off a recurring process, but want to wait when the 
first run completes.  I do something along the lines of:


d = Deferred()

... setup everything so it calls my callback every time the loop completes ...

if d:
     d.callback("first time completed!")
     d = None

while most of my code uses the check "if d is not None", not all of it does 
(especially the older code).
     --Justin


From poalman at gmail.com  Fri Mar 20 05:16:27 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Fri, 20 Mar 2015 11:16:27 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
Message-ID: <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>

On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
> Hi Paul,
>
>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>
>> I have some blocking going on in a custom twisted ftp server and I'm
>> trying to pin point what exactly is doing it.
>>
>> I think this line in openForReading on my FTPShell object could be the culprit:
>>
>> _FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))
>>
>
> Yeah, urllib2.urlopen() blocks, so this is at least one place in your code that will cause you a problem.
>
>> (_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)
>>
>> I'm guessing urllib2.urlopen blocks resolving the domain and
>> connecting? What would be the twisted equivalent way of providing a
>> file like object of the download stream to the FileReader that
>> wouldn't block?
>>
>
> You probably want to use twisted.web.client.Agent for this, as it allows you to perform non-blocking http requests.  If you can live with buffering the http response body into, say, a tempfile or an io.BytesIO instance, then you can just pass that to _FileReader as the fObj argument and call it a day.

I want to stream the http request back to the client connected over
FTP. I guess I could do that with io.BytesIO right? I can't figure out
how to wire it up though. I've added agent.request which is firing
back a twisted.web.client.Response but I'm not sure how to stream the
data from that into the BytesIO object so that _FileReader has a file
like interface to read from.


>
> Hope this helps,
>
> --
> L. Daniel Burr
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From adi at roiban.ro  Fri Mar 20 06:19:10 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 20 Mar 2015 12:19:10 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
 <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
Message-ID: <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>

On 20 March 2015 at 11:16, Paul Wiseman <poalman at gmail.com> wrote:
> On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
>> Hi Paul,
>>
>>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>>
> I want to stream the http request back to the client connected over
> FTP. I guess I could do that with io.BytesIO right? I can't figure out
> how to wire it up though. I've added agent.request which is firing
> back a twisted.web.client.Response but I'm not sure how to stream the
> data from that into the BytesIO object so that _FileReader has a file
> like interface to read from.

Without an example code use on your side I find it hard to help here.
Do you have an http://sscce.org/ for your problem?

Most probably you will need to implemented your own FileReader which
will hook into the response.deliverBody with a protocol which will
forward the data from dataReceived to your FTP data connection...all
this using a consumer/producer API.

Cheers
-- 
Adi Roiban


From poalman at gmail.com  Fri Mar 20 06:47:12 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Fri, 20 Mar 2015 12:47:12 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
 <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
 <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>
Message-ID: <CACgdh2gWoY8Vu=A4r5Q03s7-+HxEak6KD6en8tpy578QQ-GNsw@mail.gmail.com>

On 20 March 2015 at 12:19, Adi Roiban <adi at roiban.ro> wrote:
> On 20 March 2015 at 11:16, Paul Wiseman <poalman at gmail.com> wrote:
>> On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
>>> Hi Paul,
>>>
>>>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>>>
>> I want to stream the http request back to the client connected over
>> FTP. I guess I could do that with io.BytesIO right? I can't figure out
>> how to wire it up though. I've added agent.request which is firing
>> back a twisted.web.client.Response but I'm not sure how to stream the
>> data from that into the BytesIO object so that _FileReader has a file
>> like interface to read from.
>
> Without an example code use on your side I find it hard to help here.
> Do you have an http://sscce.org/ for your problem?
>
> Most probably you will need to implemented your own FileReader which
> will hook into the response.deliverBody with a protocol which will
> forward the data from dataReceived to your FTP data connection...all
> this using a consumer/producer API.
>

I just wrote an example that shows what I'm trying to do, it runs an
anonymous ftp server on 2121 of the local file system and any file you
try to download show should stream the body of http://www.yahoo.com
instead of the file contents.

There's a couple of reasons I think this doesn't work, I think I need
to return the _FileReader right away so it can begin streaming, but I
don't know how to make it wait for the deferred which is created in
the streamBody function, as this will file once the streaming is
complete.

I also think another problem is that as the stream is written the file
pointer on the BytesIO object will be at the end of the file, so I
guess the reader would need to seek to the right place, then tell to
the end afterwards so the writer continues to stream properly?

I'm not sure how to hook this up!

import io
from twisted.python import log
from twisted.internet import reactor
from twisted.internet.defer import Deferred
from twisted.internet.protocol import Protocol
from twisted.web.client import Agent, ContentDecoderAgent, GzipDecoder
from twisted.protocols.ftp import FTPFactory, FTPRealm,
FTPAnonymousShell, _FileReader
from twisted.cred.portal import Portal
from twisted.cred.checkers import AllowAnonymousAccess, FilePasswordDB
from twisted.internet import defer

agent = ContentDecoderAgent(Agent(reactor), [('gzip', GzipDecoder)])

class StreamWriter(Protocol):
    def __init__(self, finished, stream):
        self.finished = finished
        self.stream = stream

    def dataReceived(self, bytes):
        self.stream.write(bytes)

    def connectionLost(self, reason):
        print 'Finished receiving body:', reason.type, reason.value
        self.finished.callback(None)


def streamBody(response, stream):
    finished = Deferred()
    response.deliverBody(StreamWriter(finished, stream))
    return finished

def openForReading(self, path):
    d = agent.request("GET", "http://www.yahoo.com")

    stream = io.BytesIO()
    d.addCallback(lambda resp: streamBody(resp, stream))
    d.addErrback(log.err)

    return defer.succeed(_FileReader(stream))

def main():

    FTPAnonymousShell.openForReading = openForReading

    p = Portal(FTPRealm('./'),
           [AllowAnonymousAccess(), FilePasswordDB("pass.dat")])

    f = FTPFactory(p)

    reactor.listenTCP(2121, f)
    reactor.run()

if __name__ == "__main__":
    main()


> Cheers
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From rgacote at Appropriatesolutions.com  Fri Mar 20 12:36:54 2015
From: rgacote at Appropriatesolutions.com (Raymond Cote)
Date: Fri, 20 Mar 2015 14:36:54 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <D423A16C-51F6-40C8-92AE-1EBC9261EDBB@Appropriatesolutions.com>


> On Mar 18, 2015, at 8:29 AM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> 
>> On 18/03/15 10:45, HawkOwl wrote:
>>> Hi,
>>> 
>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>> receive no further official security updates) and Python 2.7 has been
>> 
>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>> 
>> Expect to see queries from people on older versions they can't update for some time ;o)
>> 
>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Isn?t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> ---
> Donald Stufft
> PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

+1 for removal

We have quite a number of Twisted installations on RHEL6 (even RHEL5), but we always install a custom Python ? never want to touch the system Python (except for very simple scripts).

Rest of our distributions are on Windows and we?ve been moving legacy code to 2.7 for some time now.
Need to keep up with the security enhancements?

?Ray
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150320/04ca39cc/attachment.pgp>

From glyph at twistedmatrix.com  Fri Mar 20 16:49:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Mar 2015 15:49:58 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <550BFF04.9080009@justinmp.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
 <550BFF04.9080009@justinmp.com>
Message-ID: <6C7CDA4C-FEA6-4AA1-BD09-FA05BCD33E1B@twistedmatrix.com>


> On Mar 20, 2015, at 4:05 AM, Justin Mazzola Paluska <jmp at justinmp.com> wrote:
> 
> On 03/18/2015 06:03 PM, Glyph Lefkowitz wrote:
>> I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>> 
>> Anybody else have this issue?  Objections?
> 
> How does this interact with code that uses None as a sentinel?
> 
> I have code where I shoot off a recurring process, but want to wait when the first run completes.  I do something along the lines of:
> 
> 
> d = Deferred()
> 
> ... setup everything so it calls my callback every time the loop completes ...
> 
> if d:
>    d.callback("first time completed!")
>    d = None
> 
> while most of my code uses the check "if d is not None", not all of it does (especially the older code).
>    --Justin

That's why we would have a warning first, so you'd have an opportunity to fix it.  Given that Deferred is so central and widely used, we might want to wait more than the required minimum of one release before turning that warning into an exception.

The "right" way to check against None is always to use "if x is not None", not "if x"; there are lots of other reasons.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150320/be5cf887/attachment.html>

From hawkowl at atleastfornow.net  Sat Mar 21 09:29:06 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 21 Mar 2015 23:29:06 +0800
Subject: [Twisted-Python] Twisted 15.1 feedback
Message-ID: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>

Hi everyone,

It's been about two weeks now -- does anyone have any feedback on whether 15.1 worked/didn't work/caused a resonance cascade?

If you missed the announcement, tarballs can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS file can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .

Once I'm happy that it's not completely broken, I'll push 15.1 out the door proper, and get 15.2 on the way... :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150321/a60a9238/attachment.pgp>

From chriswwolfe at gmail.com  Sat Mar 21 09:41:39 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Sat, 21 Mar 2015 10:41:39 -0500
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
Message-ID: <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>

Hawkowl,

The new functionality for installing optional dependencies does not on
Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).

This is due to two things:
1. some of the optional dependencies do not support python3
2. setup3.py isn't using the optional extras built in the main setup.py
file.

Thanks!
Chris (herrwolfe)

On Sat, Mar 21, 2015 at 10:29 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi everyone,
>
> It's been about two weeks now -- does anyone have any feedback on whether
> 15.1 worked/didn't work/caused a resonance cascade?
>
> If you missed the announcement, tarballs can be found at
> http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS
> file can be found at
> http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .
>
> Once I'm happy that it's not completely broken, I'll push 15.1 out the
> door proper, and get 15.2 on the way... :)
>
> - Hawkie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150321/da82f121/attachment.html>

From exarkun at twistedmatrix.com  Sat Mar 21 10:53:10 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Mar 2015 16:53:10 -0000
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
 <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
Message-ID: <20150321165310.6423.1657664535.divmod.xquotient.19@top>

On 03:41 pm, chriswwolfe at gmail.com wrote:
>Hawkowl,
>
>The new functionality for installing optional dependencies does not on
>Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).
>
>This is due to two things:
>1. some of the optional dependencies do not support python3
>2. setup3.py isn't using the optional extras built in the main setup.py
>file.

Are these regressions compared to 15.0?  I don't think they are because 
these features are brand new (on Python 2) in 15.0.  #7807 should be 
fixed (and hopefully for 15.2) but it doesn't sound like it's a blocking 
issue for completing the 15.1 release because it doesn't remove 
something that was included in 15.0.

Jean-Paul


From chriswwolfe at gmail.com  Sat Mar 21 11:24:18 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Sat, 21 Mar 2015 12:24:18 -0500
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <20150321165310.6423.1657664535.divmod.xquotient.19@top>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
 <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
 <20150321165310.6423.1657664535.divmod.xquotient.19@top>
Message-ID: <CAEKSqku-T+HQ7PDP0S6oeTr9jSb8RYPJVTXK5wyF9OC2J3_WXA@mail.gmail.com>

Jean-Paul,

You are correct. No, this is not a regression compared to to 15.0. I missed
the words 'resonance cascade'.

Thanks,
Chris

On Sat, Mar 21, 2015 at 11:53 AM, <exarkun at twistedmatrix.com> wrote:

> On 03:41 pm, chriswwolfe at gmail.com wrote:
>
>> Hawkowl,
>>
>> The new functionality for installing optional dependencies does not on
>> Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).
>>
>> This is due to two things:
>> 1. some of the optional dependencies do not support python3
>> 2. setup3.py isn't using the optional extras built in the main setup.py
>> file.
>>
>
> Are these regressions compared to 15.0?  I don't think they are because
> these features are brand new (on Python 2) in 15.0.  #7807 should be fixed
> (and hopefully for 15.2) but it doesn't sound like it's a blocking issue
> for completing the 15.1 release because it doesn't remove something that
> was included in 15.0.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150321/e7d8e5df/attachment-0001.html>

From adi at roiban.ro  Sat Mar 21 16:45:08 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 21 Mar 2015 22:45:08 +0000
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
Message-ID: <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>

On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I would like to ask why the  twisted branch name convention ask for
> trailing ticket ID.
>
> Why not leading ID?
>
> some-text-1234 vs 1234-some-text
>
> -----
>
> The default git auto completion script only does search at the start
> of the string.
>
> When I work on a ticket I know the ticket number but I always forget
> the name of the branch... so I have to search it inside the Trac
> ticket.
>
> It is not a big deal and I know that there are greater annoyances in
> Twisted dev process but I am curios if there is someone else who don't
> like this convention and if there is any chance of changing it.
>
>
> When we started this it seemed like the descriptive name would be easier to
> remember than the opaque ticket number.  I agree that was the wrong call,
> oddly enough, I do remember the ticket numbers more.  That said, we can
> switch as soon as all the currently outstanding branches are landed and
> deleted: https://twistedmatrix.com/trac/browser/branches ;-)

Which are the "all currently outstanding branches" ?

I see a lot of branched older than 5 years... with 210 branches older
than 2 years :(

Why do we need to wait for them?

-- 
Adi Roiban


From glyph at twistedmatrix.com  Sat Mar 21 18:10:23 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Mar 2015 17:10:23 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
Message-ID: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>


> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> I would like to ask why the  twisted branch name convention ask for
>> trailing ticket ID.
>> 
>> Why not leading ID?
>> 
>> some-text-1234 vs 1234-some-text
>> 
>> -----
>> 
>> The default git auto completion script only does search at the start
>> of the string.
>> 
>> When I work on a ticket I know the ticket number but I always forget
>> the name of the branch... so I have to search it inside the Trac
>> ticket.
>> 
>> It is not a big deal and I know that there are greater annoyances in
>> Twisted dev process but I am curios if there is someone else who don't
>> like this convention and if there is any chance of changing it.
>> 
>> 
>> When we started this it seemed like the descriptive name would be easier to
>> remember than the opaque ticket number.  I agree that was the wrong call,
>> oddly enough, I do remember the ticket numbers more.  That said, we can
>> switch as soon as all the currently outstanding branches are landed and
>> deleted: https://twistedmatrix.com/trac/browser/branches ;-)
> 
> Which are the "all currently outstanding branches" ?
> 
> I see a lot of branched older than 5 years... with 210 branches older
> than 2 years :(
> 
> Why do we need to wait for them?


Sorry, that was not a very clear comment :).

What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.

For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150321/fe0e8191/attachment.html>

From trac at twistedmatrix.com  Sun Mar 22 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Mar 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1427004315.51.4096312344064254174@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150322/02a48b92/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Mar 22 05:53:05 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Mar 2015 11:53:05 -0000
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
Message-ID: <20150322115305.6423.106740246.divmod.xquotient.21@top>

On 12:10 am, glyph at twistedmatrix.com wrote:
>
>For what it's worth, many of those branches can be removed.  We used to 
>have a script that automated this deletion, but I can't find it now 
>:-\.

It's part of twisted-trac-integration.
>-glyph


From radix at twistedmatrix.com  Sun Mar 22 09:35:16 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 22 Mar 2015 10:35:16 -0500
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
Message-ID: <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>


> On Mar 21, 2015, at 7:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>> 
>>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>> 
>>> Hi,
>>> 
>>> I would like to ask why the  twisted branch name convention ask for
>>> trailing ticket ID.
>>> 
>>> Why not leading ID?
>>> 
>>> some-text-1234 vs 1234-some-text
>>> 
>>> -----
>>> 
>>> The default git auto completion script only does search at the start
>>> of the string.
>>> 
>>> When I work on a ticket I know the ticket number but I always forget
>>> the name of the branch... so I have to search it inside the Trac
>>> ticket.
>>> 
>>> It is not a big deal and I know that there are greater annoyances in
>>> Twisted dev process but I am curios if there is someone else who don't
>>> like this convention and if there is any chance of changing it.
>>> 
>>> 
>>> When we started this it seemed like the descriptive name would be easier to
>>> remember than the opaque ticket number.  I agree that was the wrong call,
>>> oddly enough, I do remember the ticket numbers more.  That said, we can
>>> switch as soon as all the currently outstanding branches are landed and
>>> deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)
>> 
>> Which are the "all currently outstanding branches" ?
>> 
>> I see a lot of branched older than 5 years... with 210 branches older
>> than 2 years :(
>> 
>> Why do we need to wait for them?
> 
> 
> Sorry, that was not a very clear comment :).
> 
> What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.
> 
> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
> 

It?s probably also possible to just update the automation to support either format so you don?t have to do a big migration or block on an empty branch list.


-radix
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150322/cad23dbf/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 22 17:10:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Mar 2015 16:10:16 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <20150322115305.6423.106740246.divmod.xquotient.21@top>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
 <20150322115305.6423.106740246.divmod.xquotient.21@top>
Message-ID: <AE85364B-1455-4560-977F-711CF0AC0388@twistedmatrix.com>


> On Mar 22, 2015, at 04:53, exarkun at twistedmatrix.com wrote:
> 
> On 12:10 am, glyph at twistedmatrix.com wrote:
>> 
>> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
> 
> It's part of twisted-trac-integration.

Right! I forgot that's not on Github yet.

That's <https://launchpad.net/twisted-trac-integration <https://launchpad.net/twisted-trac-integration>>, specifically <http://bazaar.launchpad.net/~twisted-dev/twisted-trac-integration/trunk/view/head:/tools/cleanup-remote.py <http://bazaar.launchpad.net/~twisted-dev/twisted-trac-integration/trunk/view/head:/tools/cleanup-remote.py>>

I ran it like this:

python cleanup-remote.py Twisted svn+ssh://svn.twistedmatrix.com/svn/Twisted/branches https://twistedmatrix.com/trac/ <https://twistedmatrix.com/trac/>

and it's still running - there are quite a few branches to go through and this wifi isn't super fast :-).

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150322/fbd06cfc/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 22 17:10:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Mar 2015 16:10:58 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
 <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>
Message-ID: <FC7F5534-BE37-4664-9739-80AADD57B89C@twistedmatrix.com>


> On Mar 22, 2015, at 08:35, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> 
>> On Mar 21, 2015, at 7:10 PM, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> 
>>> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>> 
>>> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>>> 
>>>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>>> 
>>>> Hi,
>>>> 
>>>> I would like to ask why the  twisted branch name convention ask for
>>>> trailing ticket ID.
>>>> 
>>>> Why not leading ID?
>>>> 
>>>> some-text-1234 vs 1234-some-text
>>>> 
>>>> -----
>>>> 
>>>> The default git auto completion script only does search at the start
>>>> of the string.
>>>> 
>>>> When I work on a ticket I know the ticket number but I always forget
>>>> the name of the branch... so I have to search it inside the Trac
>>>> ticket.
>>>> 
>>>> It is not a big deal and I know that there are greater annoyances in
>>>> Twisted dev process but I am curios if there is someone else who don't
>>>> like this convention and if there is any chance of changing it.
>>>> 
>>>> 
>>>> When we started this it seemed like the descriptive name would be easier to
>>>> remember than the opaque ticket number.  I agree that was the wrong call,
>>>> oddly enough, I do remember the ticket numbers more.  That said, we can
>>>> switch as soon as all the currently outstanding branches are landed and
>>>> deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)
>>> 
>>> Which are the "all currently outstanding branches" ?
>>> 
>>> I see a lot of branched older than 5 years... with 210 branches older
>>> than 2 years :(
>>> 
>>> Why do we need to wait for them?
>> 
>> 
>> Sorry, that was not a very clear comment :).
>> 
>> What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.
>> 
>> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
>> 
> 
> It?s probably also possible to just update the automation to support either format so you don?t have to do a big migration or block on an empty branch list.

That would also be fine; the set of old branches is quite finite so we don't need such tooling to be terribly elaborate :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150322/e3b5bfe9/attachment.html>

From adi at roiban.ro  Mon Mar 23 08:05:56 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 23 Mar 2015 14:05:56 +0000
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
Message-ID: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>

When running the pyhon3 tests I see many Unhandled Error
ex:
https://buildbot.twistedmatrix.com/builders/python-3.3-tests/builds/2736/steps/shell/logs/stdio

This looks bad. Is this a bug in the test runner or a bug in the code?

Thanks!
-- 
Adi Roiban


From hawkowl at atleastfornow.net  Mon Mar 23 08:25:03 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 23 Mar 2015 22:25:03 +0800
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
Message-ID: <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>


> On 23 Mar 2015, at 22:05, Adi Roiban <adi at roiban.ro> wrote:
> 
> When running the pyhon3 tests I see many Unhandled Error
> ex:
> https://buildbot.twistedmatrix.com/builders/python-3.3-tests/builds/2736/steps/shell/logs/stdio
> 
> This looks bad. Is this a bug in the test runner or a bug in the code?
> 
> Thanks!
> --
> Adi Roiban

Hi Adi,

It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150323/b45cfc6e/attachment-0001.pgp>

From mithrandi at mithrandi.net  Mon Mar 23 09:29:32 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 23 Mar 2015 17:29:32 +0200
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
Message-ID: <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>

On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.

Note that "Unhandled error in Deferred" is the default log message for
log.err, and a lot (most?) of the code that logs a failure calls
log.err without passing a different message.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From hello at techfolk.co.uk  Tue Mar 24 03:07:41 2015
From: hello at techfolk.co.uk (hello from techfolk)
Date: Tue, 24 Mar 2015 09:07:41 -0000
Subject: [Twisted-Python] JOB: Senior and Lead Engineers | ClusterHQ |
	Bristol, UK | relocation offered
Message-ID: <57782324d09458bfcae140c224d70e3a@mail.gmail.com>

Dear Twisted Matrix community,

We hope that is ok to share jobs in this manner as we urgently need your
skills in event-driven asynchronous systems programming.

In particular, we need you to help solve the kinds of containerisation and
data management problems that arise from deploying modern applications in
a micro-service environment, integrating with Docker, Mesos, CoreOS etc.

ClusterHQ is a recently?funded open source provider preparing for the
first major release of the Flocker container volume management software
this summer. It's interesting work in a very topical area, collaborating
on a team that includes recognised Twisted and Open ZFS contributors. We
are building the engineering team here in Bristol UK - fast becoming a
recognised hub of cloud computing, and a city which offers a high quality
of life. Discretionary relocation assistance is available.

You can read more at:
http://techfolk.co.uk/current-jobs/python-cc-scala-go-software-engineer-ce
ntral-bristol-tl69

We'd be glad to take questions and tell you more. Alternatively, please
free to contact me directly via the methods below.

techfolk is an independent recruitment specialist working for ClusterHQ.

Thanks for your time,
Andrew


Andrew Gifford, Founder
techfolk Ltd
+44 (0)117 318 2447 | +44 (0)7710 794225
hello at techfolk.co.uk?|?http://techfolk.co.uk?|
http://twitter.com/we_are_techfolk | Skype: Andrew.Gifford1978
techfolk Ltd. 96 Belmont Road, Bristol, BS6 5AU, UK


From d.vinella at gmail.com  Tue Mar 24 03:49:46 2015
From: d.vinella at gmail.com (Dario Vinella)
Date: Tue, 24 Mar 2015 10:49:46 +0100
Subject: [Twisted-Python] LoopingCall.withCount countCallable called with 0
Message-ID: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>

Hi all,

I found an odd behavior using a LoopingCall.withCount with a very small
interval (0.02 sec): sometimes the countCallable is called with 0 as
argument and it looks like the now - _realLastTime is smaller than the
looping interval.

Here you can find the very simple code I use to reproduce the "anomaly",
with a main loopingCall and another one that prints its internals

https://gist.github.com/dvinella/31d94f9dd0e47586658d

and here an extract of the logs it produces

https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375

The doc for the withCount states that the argument should be normally 1,
higher if the reactor blocks for some reason, but it doesn't say anything
about 0.
The beahavior is quite misleading since the loop seems to anticipate the
interval timeout, saying "I've been called, but I should have not been
called"

I must add that the anomaly doesn't appear right at the start, but after
tens of seconds, mostly when the system is under medium/heavy load.

So is it only a documentation issue for an exceptional case, due to timers
imprecision, that should be handled at higher levels, or is it a real issue?

dario
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150324/b5384e20/attachment.html>

From p.mayers at imperial.ac.uk  Tue Mar 24 07:03:58 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Mar 2015 13:03:58 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550B6887.4020703@ripton.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk> <550B6887.4020703@ripton.net>
Message-ID: <551160BE.7050101@imperial.ac.uk>

On 20/03/15 00:23, David Ripton wrote:
> On 03/19/2015 08:05 AM, Phil Mayers wrote:
>> On 18/03/15 23:57, Glyph Lefkowitz wrote:
>>
>>> Rather than just suggest we preserve the status quo and stay on 2.6
>>> forever to do indefinite free work to support Red Hat's obsolescence
>>
>> You *definitely* shouldn't do that. Push back on RedHat, and tell
>> customers to push back on RedHat. I say this to other projects.
>
> Red Hat supports old versions of RHEL forever because they have
> customers that want that (because they have legacy apps that they want
> to keep working with minimal maintenance, but who still want security
> patches), and are willing to pay for it.  It's a good thing that someone
> provides that option, even if we don't all need it.

Absolutely, and we use it for that reason. But since RedHat charge for 
this support, it seems fair they bear the maintenance burden ;o)

"Push back" could be "ask for an appropriate SCL" or some other way of 
providing newer packages without violating the stability. The "samba" 
versus "samba3x" packages on RHEL6 are a good example.

>
> That doesn't mean Twisted needs to support old versions of RHEL forever.
>   RHEL 7 has been out for a while, and comes with Python 2.7 as the
> default.  So even if Twisted drops support for Python 2.6, it'll still
> work on RHEL.  (Just not on old versions of RHEL.)
>
> Furthermore, SCL makes Python 2.7 available (in /opt) on RHEL 5 and 6
> and CentOS 6, without users needing to build it themselves.  So even
> those who are stuck with old versions can install SCL, then use pip to
> install new Twisted.
>
> IOW, I wouldn't worry about it.  Drop support for Python 2.6 when it
> makes sense for Twisted.

+1


From glyph at twistedmatrix.com  Tue Mar 24 16:18:38 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Mar 2015 15:18:38 -0700
Subject: [Twisted-Python] LoopingCall.withCount countCallable called
	with 0
In-Reply-To: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
References: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
Message-ID: <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>


> On Mar 24, 2015, at 2:49 AM, Dario Vinella <d.vinella at gmail.com> wrote:
> 
> Hi all,
> 
> I found an odd behavior using a LoopingCall.withCount with a very small interval (0.02 sec): sometimes the countCallable is called with 0 as argument and it looks like the now - _realLastTime is smaller than the looping interval.

So, this can definitely happen if time goes backwards, but it has to go backwards between the time that the reactor starts executing timed calls and the time that LoopingCall looks at the timestamp to compute what the value passed to withCount should be.  If it were smaller than the LoopingCall's time-to-run 

> Here you can find the very simple code I use to reproduce the "anomaly", with a main loopingCall and another one that prints its internals
> 
> https://gist.github.com/dvinella/31d94f9dd0e47586658d <https://gist.github.com/dvinella/31d94f9dd0e47586658d>

An even more straightforward way to figure out if it's a problem with your machine would be this:

import time
from itertools import count

then = time.time()
for ever in count():
    now = time.time()
    print("{},{}".format(ever, (now - then) * 10e6))
    then = now

It would be good to look at how many of these numbers are negative.

> and here an extract of the logs it produces
> 
> https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375 <https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375>
> 
> The doc for the withCount states that the argument should be normally 1, higher if the reactor blocks for some reason, but it doesn't say anything about 0.
> The beahavior is quite misleading since the loop seems to anticipate the interval timeout, saying "I've been called, but I should have not been called"

That seems right.  I think there's a real problem here, since physical clocks do just fail, and sometimes NTP slew has to happen.  LoopingCall.withCount has a clear opportunity to notice that time has gone backwards, and can just skip that call.  This is assuming that time has gone backwards by a tiny amount for a brief period of time, though, and does not address the more complex issue of "the clock was set some significant distance into the past".  LoopingCall still isn't going to be able to deal with large amounts of clock drift, we'd need a monotonic version for that :).

> I must add that the anomaly doesn't appear right at the start, but after tens of seconds, mostly when the system is under medium/heavy load.

Even seriously broken clocks don't go backwards a lot. ;-)

> So is it only a documentation issue for an exceptional case, due to timers imprecision, that should be handled at higher levels, or is it a real issue?

I think it's a real issue.

The point of withCount is supposed to be that it keeps track of how far into a sequence you should advance, for example, into the frames of an animation.  If your callback advances by N frames each time it's called, it's supposed to be up-to-date with "real time".

Assuming that the reason time is going backwards is that your ntp daemon is correcting your clock, every time withCount's callback gets called with 0, _realLastTime gets updated, which means that the "frame" we should have advanced is simply lost, and it will slowly fall behind real time each time this happens.

So while the calls with 0 themselves are a minor annoyance, they are a symptom of a problem that makes it impossible for LoopingCall to do its job properly in some cases, and should definitely be fixed.

Thanks for reporting!  Can you open a ticket?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150324/b19af633/attachment.html>

From burak.arslan at arskom.com.tr  Wed Mar 25 02:35:29 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Wed, 25 Mar 2015 10:35:29 +0200
Subject: [Twisted-Python] Reporting total traffic that goes through an SSL
	socket
Message-ID: <55127351.9060204@arskom.com.tr>

Hello All,

I'm using twisted for implementing a custom protocol via SSL.

I've been wondering though, is there an easy way of counting the number
of bytes that go in and out of the socket, including SSL overhead? I can
easily count what I'm reading and I'm writing, but not what actually
goes through the pipe.

I do realize that I won't be counting packet replays and such, that's
fine for the time being.

Best regards,
Burak



From glyph at twistedmatrix.com  Wed Mar 25 14:20:30 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Mar 2015 13:20:30 -0700
Subject: [Twisted-Python] Reporting total traffic that goes through an
	SSL socket
In-Reply-To: <55127351.9060204@arskom.com.tr>
References: <55127351.9060204@arskom.com.tr>
Message-ID: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>


> On Mar 25, 2015, at 1:35 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> I'm using twisted for implementing a custom protocol via SSL.
> 
> I've been wondering though, is there an easy way of counting the number
> of bytes that go in and out of the socket, including SSL overhead?

Well, "easy" is relative :).

Internally in Twisted, TLS is implemented as a wrapper protocol that sits on a low-level transport, and acts as a transport for your protocol, and a protocol for the TCP (or other stream-based) transport.  Older APIs like connectSSL, listenSSL, and .startTLS on a protocol somewhat obscure this, and there's no nice way to expose it.

However, there is a ticket in progress: https://twistedmatrix.com/trac/ticket/5642 <https://twistedmatrix.com/trac/ticket/5642> which has some code that demonstrates how to make the TLS stuff "purely" a wrapper all the way from the endpoint to your application code.

What you need to do is write your own wrapper protocol and interpose it below the TLS transport (act as the transport for the TLS protocol, and the protocol for the TCP transport).

If it is not obvious how to do this from the documentation for twisted.protocols.policies.ProtocolWrapper and the code in the aforementioned ticket, I (or someone else) can elaborate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150325/2070885d/attachment.html>

From christianzlong2 at gmail.com  Wed Mar 25 16:01:55 2015
From: christianzlong2 at gmail.com (Christian Long)
Date: Wed, 25 Mar 2015 17:01:55 -0500
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
Message-ID: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>

I'm writing up my experiences porting a Twisted application from Linux
to Windows. Part 1 is up, covering how to install the requirements.

http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html

Part 2 will cover running Twisted as a Windows service.

Part 3 will cover making your own binary distributions using wheel.

Python packaging has improved a lot in recent years, especially on
Windows. Glyph, thank you for pypiwin32.

I'm trying to make these instructions as up-to-date as possible. Give
it a look if you're interested, and please suggest improvements.

Thanks,

Christian Long


From glyph at twistedmatrix.com  Wed Mar 25 14:20:30 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Mar 2015 13:20:30 -0700
Subject: [Twisted-Python] Reporting total traffic that goes through an
	SSL socket
In-Reply-To: <55127351.9060204@arskom.com.tr>
References: <55127351.9060204@arskom.com.tr>
Message-ID: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>


> On Mar 25, 2015, at 1:35 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> I'm using twisted for implementing a custom protocol via SSL.
> 
> I've been wondering though, is there an easy way of counting the number
> of bytes that go in and out of the socket, including SSL overhead?

Well, "easy" is relative :).

Internally in Twisted, TLS is implemented as a wrapper protocol that sits on a low-level transport, and acts as a transport for your protocol, and a protocol for the TCP (or other stream-based) transport.  Older APIs like connectSSL, listenSSL, and .startTLS on a protocol somewhat obscure this, and there's no nice way to expose it.

However, there is a ticket in progress: https://twistedmatrix.com/trac/ticket/5642 <https://twistedmatrix.com/trac/ticket/5642> which has some code that demonstrates how to make the TLS stuff "purely" a wrapper all the way from the endpoint to your application code.

What you need to do is write your own wrapper protocol and interpose it below the TLS transport (act as the transport for the TLS protocol, and the protocol for the TCP transport).

If it is not obvious how to do this from the documentation for twisted.protocols.policies.ProtocolWrapper and the code in the aforementioned ticket, I (or someone else) can elaborate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150325/2070885d/attachment-0001.html>

From d.vinella at gmail.com  Thu Mar 26 03:06:38 2015
From: d.vinella at gmail.com (Dario Vinella)
Date: Thu, 26 Mar 2015 10:06:38 +0100
Subject: [Twisted-Python] LoopingCall.withCount countCallable called
	with 0
In-Reply-To: <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>
References: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
 <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>
Message-ID: <CALTAbWn8LqUnkpLcMVb50jo5Nv0XweOWkrdfDaK4HQxDSXOn+A@mail.gmail.com>

2015-03-24 23:18 GMT+01:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

> It would be good to look at how many of these numbers are negative.
>

Not a single one, running the script for a couple of hours, under any
condition


>
> That seems right.  I think there's a real problem here, since physical
> clocks do just fail, and sometimes NTP slew has to happen.
> LoopingCall.withCount has a clear opportunity to notice that time has gone
> backwards, and can just skip that call.  This is assuming that time has
> gone backwards by a tiny amount for a brief period of time, though, and
> does not address the more complex issue of "the clock was set some
> significant distance into the past".  LoopingCall still isn't going to be
> able to deal with large amounts of clock drift, we'd need a monotonic
> version for that :).
>
> I must add that the anomaly doesn't appear right at the start, but after
> tens of seconds, mostly when the system is under medium/heavy load.
>
>
> Even seriously broken clocks don't go backwards a *lot*. ;-)
>
>
I can reproduce the anomaly with my previous script on my linux machine
with or without ntp (systemd-timesyncd) enabled and on a macbook (with
kqreactor).
The only difference is that since the mac is beefier than the linux box I
need to stress it more to trigger the anomaly (a couple of vms + some heavy
apps)
I think the ntp cause can be excluded since the issue is reproducible
without it and furthermore because once triggered the anomaly happens too
frequently to think the ntpd applies so many (negative) fixes in such short
time.
Here it is a log where I print a dot when the calls arg is 1, the value if
not 1, each dot is separated by 0.02s

https://gist.github.com/dvinella/73e5e45a04c428f037bf


> Thanks for reporting!  Can you open a ticket?
>

Sure, I'll open it!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150326/b323bfab/attachment.html>

From laurens at daemon.be  Thu Mar 26 12:18:29 2015
From: laurens at daemon.be (Laurens Vets)
Date: Thu, 26 Mar 2015 11:18:29 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every 5
	minutes
Message-ID: <f594959b983017043e9def26aaeabd11@daemon.be>

Hello,

I'm trying to get to know the Twisted framework by extending the 
ircLogBot.py example. I want to be able to get a list of all names in a 
channel (by sending NAMES) and I want to rerun this every 5 minutes.

I've been able to get the NAMES on a channel join by doing this in 
LogBot:

def joined(self, channel):
     self.names(channel)

def names(self, channel):
     self.sendLine("NAMES %s" % channel)

def irc_unknown(self, prefix, command, params):
     if command == 'RPL_NAMREPLY':
         self.handle_namereply(*params)

def handle_namereply(self, myname, channeltype, channelname, users):
     self.logger.log("Handling namereply %r %r %r %r" % (myname, 
channeltype, channelname, users))

The problem I face is that I have no idea where to put a LoopingCall to 
run this same command every 5 minutes. Where would be the best place to 
place this?

Thanks in advance!


From burak.arslan at arskom.com.tr  Thu Mar 26 12:20:06 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Thu, 26 Mar 2015 20:20:06 +0200
Subject: [Twisted-Python] Reporting total traffic that goes through an
 SSL socket
In-Reply-To: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>
References: <55127351.9060204@arskom.com.tr>
 <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>
Message-ID: <55144DD6.90201@arskom.com.tr>

Hey Glyph,

On 03/25/15 22:20, Glyph Lefkowitz wrote:
>
> However, there is a ticket in
> progress: https://twistedmatrix.com/trac/ticket/5642 which has some
> code that demonstrates how to make the TLS stuff "purely" a wrapper
> all the way from the endpoint to your application code.
>
> What you need to do is write your own wrapper protocol and interpose
> it below the TLS transport (act as the transport for the TLS protocol,
> and the protocol for the TCP transport).
>
> If it is not obvious how to do this from the documentation for
> twisted.protocols.policies.ProtocolWrapper and the code in the
> aforementioned ticket, I (or someone else) can elaborate.
>

Thanks a bunch for the pointers, let me see what I can come up with.

Best regards,
Burak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150326/d1c6706c/attachment.html>

From adi at roiban.ro  Thu Mar 26 12:24:53 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 26 Mar 2015 18:24:53 +0000
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
In-Reply-To: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
References: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
Message-ID: <CAFycZ9e1nSU7=KeqHWxDivuFxkgm-Mw5E7dvW8UnPQo6v4u8cg@mail.gmail.com>

Many thanks!

I find it of great help and happy to see more people talking about
Microsoft Visual C++ Compiler for Python 2.7.

Recently I had tried to fix a bug in iocp support and I failed to
build IOCP module on windows. I will try it again using your steps.

Looking forward for next posts!

On 25 March 2015 at 22:01, Christian Long <christianzlong2 at gmail.com> wrote:
> I'm writing up my experiences porting a Twisted application from Linux
> to Windows. Part 1 is up, covering how to install the requirements.
>
> http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html
>
> Part 2 will cover running Twisted as a Windows service.
>
> Part 3 will cover making your own binary distributions using wheel.
>
> Python packaging has improved a lot in recent years, especially on
> Windows. Glyph, thank you for pypiwin32.
>
> I'm trying to make these instructions as up-to-date as possible. Give
> it a look if you're interested, and please suggest improvements.
>
> Thanks,
>
> Christian Long
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Adi Roiban


From glyph at twistedmatrix.com  Thu Mar 26 16:56:45 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Mar 2015 15:56:45 -0700
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
In-Reply-To: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
References: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
Message-ID: <F1F9A1CE-771D-4A86-BF8D-50985B0244D1@twistedmatrix.com>

> 
> On Mar 25, 2015, at 3:01 PM, Christian Long <christianzlong2 at gmail.com> wrote:
> 
> I'm writing up my experiences porting a Twisted application from Linux
> to Windows. Part 1 is up, covering how to install the requirements.
> 
> http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html
> 
> Part 2 will cover running Twisted as a Windows service.
> 
> Part 3 will cover making your own binary distributions using wheel.
> 
> Python packaging has improved a lot in recent years, especially on
> Windows. Glyph, thank you for pypiwin32.

Thank you SO much for doing this, Christian.  I have had a half-finished draft of a blog post of this type for quite some time, which I have been feeling bad about not finishing.  Ever since cyli's tutorials fell out of date, we have been lacking something like this.

I haven't had time to review thoroughly, but it looks very good from a quick skim.

As you're writing these instructions, don't be shy about filing bugs for things that should work differently or better on Windows.  We should have documentation of the state of the art but we should also be striving to improve.

I am particularly looking forward to Part 2 - I'd really like to have our Windows buildbots come up automatically on boot, since I still VNC across a transcontinental network link every time one of them reboots ;-).

-glyph



From exarkun at twistedmatrix.com  Sat Mar 28 10:22:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Mar 2015 16:22:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
Message-ID: <20150328162226.6423.210098794.divmod.xquotient.61@top>

Hello all,

The Twisted issue tracker needs someone to pay attention to it for spam 
content and clean up that content.  I've been taking care of this for a 
while now but I'm going to step back from this position soon.

These days spam is primarily submitted as new tickets.  When a spam 
ticket is filed, it needs to be deleted.  There's a form in the trac web 
interface for deleting tickets.  Access needs to be specially granted, 
so you need a trac account to volunteer for this role.

Trac is configured with some automatic spam filtering software.  It 
catches some, but obviously not all, spam submissions.

The trac rss feed can be used to monitor new content for spam.  Total 
time commitment for this job is pretty minimal (perhaps a few minutes a 
week) but timely action on spam is preferred.

It's probably also possible for this responsibility to shared between 
multiple people (divided up however those people find works).

I'll continue covering this role for another week but after that I'll 
stop - so please volunteer before then!

Thanks,
Jean-Paul


From hawkowl at atleastfornow.net  Sat Mar 28 10:29:23 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 29 Mar 2015 00:29:23 +0800
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150328162226.6423.210098794.divmod.xquotient.61@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
Message-ID: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>

Hi exarkun,

I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and I'm usually around.

I'd also like to be able to reset passwords on trac -- there's been a few instances where people aren't able to reset their password and people with the power haven't been around.

- hawkie

> On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> 
> Hello all,
> 
> The Twisted issue tracker needs someone to pay attention to it for spam content and clean up that content.  I've been taking care of this for a while now but I'm going to step back from this position soon.
> 
> These days spam is primarily submitted as new tickets.  When a spam ticket is filed, it needs to be deleted.  There's a form in the trac web interface for deleting tickets.  Access needs to be specially granted, so you need a trac account to volunteer for this role.
> 
> Trac is configured with some automatic spam filtering software.  It catches some, but obviously not all, spam submissions.
> 
> The trac rss feed can be used to monitor new content for spam.  Total time commitment for this job is pretty minimal (perhaps a few minutes a week) but timely action on spam is preferred.
> 
> It's probably also possible for this responsibility to shared between multiple people (divided up however those people find works).
> 
> I'll continue covering this role for another week but after that I'll stop - so please volunteer before then!
> 
> Thanks,
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150329/5c8d17e5/attachment.pgp>

From jerryguitarist at gmail.com  Sat Mar 28 10:38:58 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Sat, 28 Mar 2015 22:08:58 +0530
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>

Hello Mr. exarkun!

I would love to help out with this. I am from India. I have been making
some beginner bitesized contributions to Twisted (you have reviewed and
merged some of them) and I am looking forward to contribute in any way that
I possibly can. Please let me know what you think! Also, I'll be coming to
PyCon in Montreal this year and I hope to see you and learn from you there!

Regards,
Eeshan Garg

On Sat, Mar 28, 2015 at 9:59 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi exarkun,
>
> I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and
> I'm usually around.
>
> I'd also like to be able to reset passwords on trac -- there's been a few
> instances where people aren't able to reset their password and people with
> the power haven't been around.
>
> - hawkie
>
> > On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> >
> > Hello all,
> >
> > The Twisted issue tracker needs someone to pay attention to it for spam
> content and clean up that content.  I've been taking care of this for a
> while now but I'm going to step back from this position soon.
> >
> > These days spam is primarily submitted as new tickets.  When a spam
> ticket is filed, it needs to be deleted.  There's a form in the trac web
> interface for deleting tickets.  Access needs to be specially granted, so
> you need a trac account to volunteer for this role.
> >
> > Trac is configured with some automatic spam filtering software.  It
> catches some, but obviously not all, spam submissions.
> >
> > The trac rss feed can be used to monitor new content for spam.  Total
> time commitment for this job is pretty minimal (perhaps a few minutes a
> week) but timely action on spam is preferred.
> >
> > It's probably also possible for this responsibility to shared between
> multiple people (divided up however those people find works).
> >
> > I'll continue covering this role for another week but after that I'll
> stop - so please volunteer before then!
> >
> > Thanks,
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150328/6e8f2742/attachment.html>

From ypercube at gmail.com  Sat Mar 28 10:41:48 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Sat, 28 Mar 2015 16:41:48 +0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>

I'll be happy to do this. Times: 09:00 to 20:00 GMT and often later.

ypercube

On Sat, Mar 28, 2015 at 4:29 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi exarkun,
>
> I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and
> I'm usually around.
>
> I'd also like to be able to reset passwords on trac -- there's been a few
> instances where people aren't able to reset their password and people with
> the power haven't been around.
>
> - hawkie
>
> > On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> >
> > Hello all,
> >
> > The Twisted issue tracker needs someone to pay attention to it for spam
> content and clean up that content.  I've been taking care of this for a
> while now but I'm going to step back from this position soon.
> >
> > These days spam is primarily submitted as new tickets.  When a spam
> ticket is filed, it needs to be deleted.  There's a form in the trac web
> interface for deleting tickets.  Access needs to be specially granted, so
> you need a trac account to volunteer for this role.
> >
> > Trac is configured with some automatic spam filtering software.  It
> catches some, but obviously not all, spam submissions.
> >
> > The trac rss feed can be used to monitor new content for spam.  Total
> time commitment for this job is pretty minimal (perhaps a few minutes a
> week) but timely action on spam is preferred.
> >
> > It's probably also possible for this responsibility to shared between
> multiple people (divided up however those people find works).
> >
> > I'll continue covering this role for another week but after that I'll
> stop - so please volunteer before then!
> >
> > Thanks,
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150328/b0e8f7d1/attachment.html>

From trac at twistedmatrix.com  Sun Mar 29 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Mar 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1427609115.66.5060729686195389110@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150329/a11d53b9/attachment.html>

From adi at roiban.ro  Sun Mar 29 06:22:59 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 29 Mar 2015 13:22:59 +0100
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
Message-ID: <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>

Hi,

Without a Trac account you can not create a new ticket or update wiki page.

I just tried to create a new account named 'robot-spammer' and it
looks like it would be extremely easy to automate the process.

Observing notifications on IRC I saw that many spam comments were
posted by dedicated spam accounts.
Is there any effort in improving the registration process to prevent
spam accounts being created in the first place?
Email confirmation or reCAPTCHA or linking to external providers like GitHub?

Rather than hunting spam comments I prefer to work on preventing those comments.

Cheers,
Adi


From exarkun at twistedmatrix.com  Sun Mar 29 07:13:44 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 13:13:44 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
 <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>
Message-ID: <20150329131344.6423.59683279.divmod.xquotient.89@top>

On 12:22 pm, adi at roiban.ro wrote:
>Hi,
>
>Without a Trac account you can not create a new ticket or update wiki 
>page.
>
>I just tried to create a new account named 'robot-spammer' and it
>looks like it would be extremely easy to automate the process.
>
>Observing notifications on IRC I saw that many spam comments were
>posted by dedicated spam accounts.
>Is there any effort in improving the registration process to prevent
>spam accounts being created in the first place?
>Email confirmation or reCAPTCHA or linking to external providers like 
>GitHub?
>
>Rather than hunting spam comments I prefer to work on preventing those 
>comments.

Feel free to work on that if you like.

My goal with this thread is only to find a replacement for myself 
performing the cleanup steps.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Mar 29 08:43:17 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 14:43:17 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <20150329144317.6423.697858440.divmod.xquotient.94@top>

On 28 Mar, 04:29 pm, hawkowl at atleastfornow.net wrote:
>Hi exarkun,
>
>I'd also like to be able to reset passwords on trac -- there's been a 
>few instances where people aren't able to reset their password and 
>people with the power haven't been around.

I don't know how trac password reset works.  Presumably the ideal 
solution would be to fix trac's built-in self-service password reset 
feature?  As far as I know noone has managed to understand why (or even 
under what conditions) it is broken, though.

If you'd like to deal with this manually until that happens, I suggest 
adding an entry to the ProjectJobs wiki page describing the requirements 
and volunteering yourself for the job for some period of time.  If you 
can describe the trac permissions required I'm sure someone can grant 
them to you.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Mar 29 08:52:03 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 14:52:03 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150328162226.6423.210098794.divmod.xquotient.61@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
Message-ID: <20150329145203.6423.700890444.divmod.xquotient.109@top>

On 28 Mar, 04:22 pm, exarkun at twistedmatrix.com wrote:
>Hello all,
>
>The Twisted issue tracker needs someone to pay attention to it for spam 
>content and clean up that content.  I've been taking care of this for a 
>while now but I'm going to step back from this position soon.

Thanks for volunteering, Hawkowl, Eeshan Garg, and Pantelis Theodosiou.

I've updated the description of this position on the ProjectJobs wiki 
page:

    https://twistedmatrix.com/trac/wiki/ProjectJobs#TicketSpam

Please have a look and (if it still sounds good), add your trac username 
to the "Assigned to" field.  Since there are several of you and you each 
have different availability times, it might also make sense to record 
that information as well (so we can see what kind of coverage we have 
and know what we're losing when you've had enough).

I'll set up the necessary trac permissions in a few days.  Let me know 
if you have any questions about the job or the job description.

Thanks!
Jean-Paul


From exarkun at twistedmatrix.com  Sun Mar 29 09:00:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 15:00:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
Message-ID: <20150329150026.6423.1729699743.divmod.xquotient.123@top>

On 28 Mar, 04:38 pm, jerryguitarist at gmail.com wrote:
>Hello Mr. exarkun!
>
>I would love to help out with this. I am from India. I have been making
>some beginner bitesized contributions to Twisted (you have reviewed and
>merged some of them) and I am looking forward to contribute in any way 
>that
>I possibly can. Please let me know what you think! Also, I'll be coming 
>to
>PyCon in Montreal this year and I hope to see you and learn from you 
>there!

Hi Eeshan,

I'll be at PyCon too.  Looking forward to meeting you. :)

Jean-Paul


From adi at roiban.ro  Mon Mar 30 04:52:05 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 30 Mar 2015 11:52:05 +0100
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
 <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
Message-ID: <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>

On 23 March 2015 at 15:29, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.
>
> Note that "Unhandled error in Deferred" is the default log message for
> log.err, and a lot (most?) of the code that logs a failure calls
> log.err without passing a different message.

I have no idea what you are talking about :(

I run deferred related tests using nose and standard pyunit 2.7.
Each time I see an  "Unhandled error in Deferred"  message in the log
it means that my test is poorly written and
does not make an explicit call to check the deferred value.. for
example using something similar to self.successResultOf()

If you say that it is ok to ignore those errors, fine by me.

I think that soon we should have trial on py3 and we will no longer
need to worry about this primitive test runner.

Cheers
-- 
Adi Roiban


From jerryguitarist at gmail.com  Mon Mar 30 11:32:44 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Mon, 30 Mar 2015 23:02:44 +0530
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150329150026.6423.1729699743.divmod.xquotient.123@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
 <20150329150026.6423.1729699743.divmod.xquotient.123@top>
Message-ID: <CA+2gYipgfbirR60diOOXfLQd0d5d9QvkBio+0xtnRWC3uaYMdg@mail.gmail.com>

Hello Mr. exarkun!

I just added my Trac user name to the relevant "Assigned to" field. :-)

It is a huge honor for me to learn from you.

Regards,
Eeshan Garg

On Sun, Mar 29, 2015 at 8:30 PM, <exarkun at twistedmatrix.com> wrote:

> On 28 Mar, 04:38 pm, jerryguitarist at gmail.com wrote:
>
>> Hello Mr. exarkun!
>>
>> I would love to help out with this. I am from India. I have been making
>> some beginner bitesized contributions to Twisted (you have reviewed and
>> merged some of them) and I am looking forward to contribute in any way
>> that
>> I possibly can. Please let me know what you think! Also, I'll be coming to
>> PyCon in Montreal this year and I hope to see you and learn from you
>> there!
>>
>
> Hi Eeshan,
>
> I'll be at PyCon too.  Looking forward to meeting you. :)
>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150330/97ca58ea/attachment.html>

From glyph at twistedmatrix.com  Mon Mar 30 14:28:50 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Mar 2015 13:28:50 -0700
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
 <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
 <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>
Message-ID: <488A5704-11F1-47D9-8F3C-9AB988CBD0E2@twistedmatrix.com>


> On Mar 30, 2015, at 3:52 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 23 March 2015 at 15:29, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
>> On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
>>> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.
>> 
>> Note that "Unhandled error in Deferred" is the default log message for
>> log.err, and a lot (most?) of the code that logs a failure calls
>> log.err without passing a different message.
> 
> I have no idea what you are talking about :(
> 
> I run deferred related tests using nose and standard pyunit 2.7.
> Each time I see an  "Unhandled error in Deferred"  message in the log
> it means that my test is poorly written and
> does not make an explicit call to check the deferred value.. for
> example using something similar to self.successResultOf()
> 
> If you say that it is ok to ignore those errors, fine by me.

If you run a test under trial that logs a traceback (whether the result of an unhandled error in a Deferred or any other `log.err? call), the test will fail.

If you run a test under trial that logs a traceback and you call self.flushLoggedErrors() to clear that logged error, then it won't fail.

However, twisted cannot control what your other test runners do, so maybe nose (and definitely stdlib unittest) don't think logged errors are sufficient to fail a test.  Right now lots of tests on the py3 builder with the primitive test runner are spewing tracebacks which are _supposed_ to be logged, and which are properly being caught and "flushed".  When we switch to trial these will show up only in test.log and not on stderr.

> I think that soon we should have trial on py3 and we will no longer
> need to worry about this primitive test runner.


YES.  Thanks to HawkOwl for all her recent work which is going towards making this possible soon!!!

-glyph



From glyph at twistedmatrix.com  Mon Mar 30 14:39:15 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Mar 2015 13:39:15 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
	5 minutes
In-Reply-To: <f594959b983017043e9def26aaeabd11@daemon.be>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
Message-ID: <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>


> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
> 
> Hello,
> 
> I'm trying to get to know the Twisted framework by extending the ircLogBot.py example. I want to be able to get a list of all names in a channel (by sending NAMES) and I want to rerun this every 5 minutes.
> 
> I've been able to get the NAMES on a channel join by doing this in LogBot:
> 
> def joined(self, channel):
>    self.names(channel)
> 
> def names(self, channel):
>    self.sendLine("NAMES %s" % channel)
> 
> def irc_unknown(self, prefix, command, params):
>    if command == 'RPL_NAMREPLY':
>        self.handle_namereply(*params)
> 
> def handle_namereply(self, myname, channeltype, channelname, users):
>    self.logger.log("Handling namereply %r %r %r %r" % (myname, channeltype, channelname, users))
> 
> The problem I face is that I have no idea where to put a LoopingCall to run this same command every 5 minutes. Where would be the best place to place this?

I would probably start such a LoopingCall in LogBot.connectionMade, and make sure to stop it in LogBot.connectionLost.  That way only an active connection will attempt to send NAMES to itself.

Does that make sense for your application?

Thanks for using Twisted,

-glyph

From giacomo.tanganelli at iet.unipi.it  Tue Mar 31 07:07:23 2015
From: giacomo.tanganelli at iet.unipi.it (Giacomo Tanganelli)
Date: Tue, 31 Mar 2015 15:07:23 +0200
Subject: [Twisted-Python] Twisted CoAP implementation
Message-ID: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>

Hi,
I have recently implemented a CoAP open source library based on Twisted. I
noticed that in the web site there is a page regarding Twisted
sub-projects.  I'm wondering if I can add my project to such list, I think
it could help someone. Does anyone know ho to achieve this?

In any case the code is freely available at
https://github.com/Tanganelli/CoAPthon

Bests
Giacomo

-- 
Giacomo Tanganelli
PhD Student Dept. Information Engineering
Via Diotisalvi 2, I-56122 Pisa, ITALY
Phone (direct/switch/fax): +39 050 2217 472
E-mail: g.tanganelli at iet.unipi.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150331/7a334fe3/attachment.html>

From trac at twistedmatrix.com  Sun Mar  1 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Mar 2015 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1425193517.26.5258662462784393093@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150301/991a43eb/attachment-0002.html>

From 421174439 at qq.com  Mon Mar  2 01:04:15 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 16:04:15 +0800
Subject: [Twisted-Python] exceptions.ImportError: cannot import name _epoll
Message-ID: <tencent_453E36893DA89C4968F23CBE@qq.com>

My dear friends,   would u please give your hand kindly?

the twisted version is 12.3.0.‍
the detail error is as below:
Unhandled Error
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 652, in run
    runApp(config)
  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", line 23, in runApp
    _SomeApplicationRunner(config).run()
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 386, in run
    self.application = self.createOrGetApplication()
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 451, in createOrGetApplication
    application = getApplication(self.config, passphrase)
--- <exception caught here> ---
  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", line 462, in getApplication
    application = service.loadApplication(filename, style, passphrase)
  File "/usr/lib/python2.7/site-packages/twisted/application/service.py", line 405, in loadApplication
    application = sob.loadValueFromFile(filename, 'application', passphrase)
  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 210, in loadValueFromFile
    exec fileObj in d, d
  File "src/try.tac", line 32, in <module>
    from twisted.internet import epollreactor
  File "/usr/lib/python2.7/site-packages/twisted/internet/epollreactor.py", line 31, in <module>
    from twisted.python import _epoll
exceptions.ImportError: cannot import name _epoll


Failed to load application: cannot import name _epoll‍









Thanks a lot,
Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/16f18af2/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 39399FDF at E1A15F7D.7F19F454.png
Type: application/octet-stream
Size: 71147 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20150302/16f18af2/attachment-0002.obj>

From exarkun at twistedmatrix.com  Mon Mar  2 04:29:24 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Mar 2015 11:29:24 -0000
Subject: [Twisted-Python] exceptions.ImportError: cannot import name
	_epoll
In-Reply-To: <tencent_453E36893DA89C4968F23CBE@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
Message-ID: <20150302112924.7028.898434504.divmod.xquotient.2@top>

On 08:04 am, 421174439 at qq.com wrote:
>My dear friends,   would u please give your hand kindly?

How did you install Twisted and what operating system are you using?

Jean-Paul
>the twisted version is 12.3.0.‍
>the detail error is as below:
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 652, in run
>    runApp(config)
>  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", 
>line 23, in runApp
>    _SomeApplicationRunner(config).run()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 386, in run
>    self.application = self.createOrGetApplication()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 451, in createOrGetApplication
>    application = getApplication(self.config, passphrase)
>--- <exception caught here> ---
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 462, in getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "/usr/lib/python2.7/site- 
>packages/twisted/application/service.py", line 405, in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', 
>passphrase)
>  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 
>210, in loadValueFromFile
>    exec fileObj in d, d
>  File "src/try.tac", line 32, in <module>
>    from twisted.internet import epollreactor
>  File "/usr/lib/python2.7/site- 
>packages/twisted/internet/epollreactor.py", line 31, in <module>
>    from twisted.python import _epoll
>exceptions.ImportError: cannot import name _epoll
>
>
>Failed to load application: cannot import name _epoll‍
>
>
>
>
>
>
>
>
>
>Thanks a lot,
>Mark



From 421174439 at qq.com  Mon Mar  2 04:44:43 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 19:44:43 +0800
Subject: [Twisted-Python] =?utf-8?b?5Zue5aSN77yaICBleGNlcHRpb25zLkltcG9y?=
 =?utf-8?q?tError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <20150302112924.7028.898434504.divmod.xquotient.2@top>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
Message-ID: <tencent_119009843D23FA76296C0F28@qq.com>

I use cygwin in Windows Vista.
‍
I install twisted using tool setup-x86.exe which is suggested by cygwin.‍


Thanks.


------------------ 原始邮件 ------------------
发件人: "exarkun";<exarkun at twistedmatrix.com>;
发送时间: 2015年3月2日(星期一) 晚上7:29
收件人: "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

主题: Re: [Twisted-Python] exceptions.ImportError: cannot import name_epoll



On 08:04 am, 421174439 at qq.com wrote:
>My dear friends,   would u please give your hand kindly?

How did you install Twisted and what operating system are you using?

Jean-Paul
>the twisted version is 12.3.0.‍
>the detail error is as below:
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 652, in run
>    runApp(config)
>  File "/usr/lib/python2.7/site-packages/twisted/scripts/twistd.py", 
>line 23, in runApp
>    _SomeApplicationRunner(config).run()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 386, in run
>    self.application = self.createOrGetApplication()
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 451, in createOrGetApplication
>    application = getApplication(self.config, passphrase)
>--- <exception caught here> ---
>  File "/usr/lib/python2.7/site-packages/twisted/application/app.py", 
>line 462, in getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "/usr/lib/python2.7/site- 
>packages/twisted/application/service.py", line 405, in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', 
>passphrase)
>  File "/usr/lib/python2.7/site-packages/twisted/persisted/sob.py", line 
>210, in loadValueFromFile
>    exec fileObj in d, d
>  File "src/try.tac", line 32, in <module>
>    from twisted.internet import epollreactor
>  File "/usr/lib/python2.7/site- 
>packages/twisted/internet/epollreactor.py", line 31, in <module>
>    from twisted.python import _epoll
>exceptions.ImportError: cannot import name _epoll
>
>
>Failed to load application: cannot import name _epoll‍
>
>
>
>
>
>
>
>
>
>Thanks a lot,
>Mark

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/2b8e5501/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Mar  2 05:46:33 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Mar 2015 12:46:33 -0000
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaICBleGNlcHRpb25zLkltcG9y?=
 =?utf-8?q?tError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <tencent_119009843D23FA76296C0F28@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
Message-ID: <20150302124633.7028.277570116.divmod.xquotient.8@top>

On 11:44 am, 421174439 at qq.com wrote:
>I use cygwin in Windows Vista.
>‍
>I install twisted using tool setup-x86.exe which is suggested by 
>cygwin.‍

epoll is a Linux-only feature.  twisted.internet.epollreactor is only 
usable on Linux.  You should probably remove the explicit reactor 
selection from the code you're trying to run.  Twisted will make a 
reasonable guess about what reactor is best to use on the platform you 
happen to be using if you just import twisted.internet.reactor.  Failing 
that, twistd has command-line arguments to allow the user to make an 
explicit reactor selection.

Jean-Paul



From 421174439 at qq.com  Mon Mar  2 05:55:03 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Mon, 2 Mar 2015 20:55:03 +0800
Subject: [Twisted-Python] =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <20150302124633.7028.277570116.divmod.xquotient.8@top>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
Message-ID: <tencent_2C45935F2D8F83102A59F757@qq.com>

maybe you are right.
but cygwin is a linux environment on windows.


thanks
------------------ 原始邮件 ------------------
发件人: "exarkun";<exarkun at twistedmatrix.com>;
发送时间: 2015年3月2日(星期一) 晚上8:46
收件人: "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

主题: Re: [Twisted-Python]回复：  exceptions.ImportError: cannot import name_epoll



On 11:44 am, 421174439 at qq.com wrote:
>I use cygwin in Windows Vista.
>‍
>I install twisted using tool setup-x86.exe which is suggested by 
>cygwin.‍

epoll is a Linux-only feature.  twisted.internet.epollreactor is only 
usable on Linux.  You should probably remove the explicit reactor 
selection from the code you're trying to run.  Twisted will make a 
reasonable guess about what reactor is best to use on the platform you 
happen to be using if you just import twisted.internet.reactor.  Failing 
that, twistd has command-line arguments to allow the user to make an 
explicit reactor selection.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/a67a1a7a/attachment-0002.html>

From al.niessner at gmail.com  Mon Mar  2 11:36:01 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Mon, 2 Mar 2015 10:36:01 -0800
Subject: [Twisted-Python] twisted thread pool
Message-ID: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>

Platform:
CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
Ubuntu 14.04
Python 3.4 (yes, I know)
Twisted 13.2.0

I use the vanilla twisted.internet.reactor.run() with the
factory twisted.web.server.Site(root). It all runs just fine (seemingly)
but,when I was snooping around on my machine, I had a ton of threads lying
about. After cleaning up, I restarted my twisted application and found that
I have 151 python3 threads lying about. I doubled checked and I have just
twisted application running.

I browsed the documentation and the twisted thread pool claims to default
between 5 and 10. However, I do abuse the deferToThread() cannot find any
simple documentation on how that might feed back to the 151 threads. I
thought maybe I need to exit the deferred returned from deferToThread() in
some special way to clean it all up. However, I can find no documentation
for it.

I have been googling about with many random search terms trying to puzzle
the 151 threads from the documentation that tells me I should expect 5 to
10.

Can anyone please help understand why I have 151 threads and where they are
coming from? Luckily they are all idle so the machine runs just fine.

The best story I can come up with is that there is one master thread on
core-0 and then I get 10 threads in the pool for each of the other physical
cores. However, the story is just numerology.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/28a3c87d/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Mar  2 12:38:39 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Mar 2015 11:38:39 -0800
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <tencent_2C45935F2D8F83102A59F757@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
Message-ID: <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>

> On Mar 2, 2015, at 4:55 AM, 8 <421174439 at qq.com> wrote:
> 
> maybe you are right.
> but cygwin is a linux environment on windows.

No, it is not.  It is a "unix-like" environment on Windows.

When Jean-Paul says that epoll is a "linux" feature, he does not mean that it is available on "linux-like" systems or that it is a POSIX or UNIX-ish feature.  It is specifically only available on Linux: it is not, for example, available on FreeBSD, or Mac OS X, and the thing called "epoll" on Solaris is something different that is not compatible.

For what it's worth, Cygwin is not a supported environment for Twisted.  We have buildbots that run native Windows python executables on a few versions of Windows, but we don't test under Cygwin.  It might work, but you may encounter bugs that we have not tested for, since none of our developers would be notified if it breaks.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/ec84fdbe/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Mar  2 14:50:40 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Mar 2015 13:50:40 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
Message-ID: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
> 
> 
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
> 
> I use the vanilla twisted.internet.reactor.run() with the factory twisted.web.server.Site(root). It all runs just fine (seemingly) but,when I was snooping around on my machine, I had a ton of threads lying about. After cleaning up, I restarted my twisted application and found that I have 151 python3 threads lying about. I doubled checked and I have just twisted application running.
> 
> I browsed the documentation and the twisted thread pool claims to default between 5 and 10. However, I do abuse the deferToThread() cannot find any simple documentation on how that might feed back to the 151 threads. I thought maybe I need to exit the deferred returned from deferToThread() in some special way to clean it all up. However, I can find no documentation for it.
> 
> I have been googling about with many random search terms trying to puzzle the 151 threads from the documentation that tells me I should expect 5 to 10.
> 
> Can anyone please help understand why I have 151 threads and where they are coming from? Luckily they are all idle so the machine runs just fine.
> 
> The best story I can come up with is that there is one master thread on core-0 and then I get 10 threads in the pool for each of the other physical cores. However, the story is just numerology.

There are some bugs in the thread pool implementation (hopefully I'll get around to finishing my fix for soon, see <https://twistedmatrix.com/trac/ticket/2673 <https://twistedmatrix.com/trac/ticket/2673>> for details) which may cause this issue, but given how far out of whack those numbers are, my inclination is to think it's something else in your environment.

Can you put your full code online somewhere so that we can test it?  Ideally after fixing it to be a minimal reproducer? :)

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/aeae23c0/attachment-0002.html>

From al.niessner at gmail.com  Mon Mar  2 16:34:47 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Mon, 2 Mar 2015 15:34:47 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
Message-ID: <CAO5pCYQ9AGJmGyvhV3zvmYzC0X0xWfKFoign0ymN4fUTEEWtsg@mail.gmail.com>

I am new to twisted so the start up is really those two lines, but I can
work at a minimal reproducers. May take a day or two.

I read through the bug report a bit and there seems to be some funny stuff
with the deferToThread and a possible race condition, Did I read that
correctly?

The other problem that I am seeing is that the thread seems to finish prior
to me getting the deferred setup and then not getting the signal. I figured
it was my fault and I was going to look at it later, but, when I saw what
looked liked race condition discussions on the bug report, I figured I
better ask before I run off into the weeds.

On Mon, Mar 2, 2015 at 1:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
>
>
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
>
>
> I use the vanilla twisted.internet.reactor.run() with the
> factory twisted.web.server.Site(root). It all runs just fine (seemingly)
> but,when I was snooping around on my machine, I had a ton of threads lying
> about. After cleaning up, I restarted my twisted application and found that
> I have 151 python3 threads lying about. I doubled checked and I have just
> twisted application running.
>
> I browsed the documentation and the twisted thread pool claims to default
> between 5 and 10. However, I do abuse the deferToThread() cannot find any
> simple documentation on how that might feed back to the 151 threads. I
> thought maybe I need to exit the deferred returned from deferToThread() in
> some special way to clean it all up. However, I can find no documentation
> for it.
>
> I have been googling about with many random search terms trying to puzzle
> the 151 threads from the documentation that tells me I should expect 5 to
> 10.
>
> Can anyone please help understand why I have 151 threads and where they
> are coming from? Luckily they are all idle so the machine runs just fine.
>
> The best story I can come up with is that there is one master thread on
> core-0 and then I get 10 threads in the pool for each of the other physical
> cores. However, the story is just numerology.
>
>
> There are some bugs in the thread pool implementation (hopefully I'll get
> around to finishing my fix for soon, see <
> https://twistedmatrix.com/trac/ticket/2673> for details) which may cause
> this issue, but given how far out of whack those numbers are, my
> inclination is to think it's something else in your environment.
>
> Can you put your full code online somewhere so that we can test it?
> Ideally after fixing it to be a minimal reproducer? :)
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150302/dd5be42b/attachment-0002.html>

From 421174439 at qq.com  Tue Mar  3 07:37:22 2015
From: 421174439 at qq.com (=?utf-8?B?OA==?=)
Date: Tue, 3 Mar 2015 22:37:22 +0800
Subject: [Twisted-Python]
 =?utf-8?b?5Zue5aSN77yaIOWbnuWkje+8miAgZXhjZXB0?=
 =?utf-8?q?ions=2EImportError=3A_cannot_import_name=5Fepoll?=
In-Reply-To: <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
 <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
Message-ID: <tencent_7842E99914B454A15AA86EE4@qq.com>

Hi glyph‍,

Thanks for your patient reply. I try to run that on Ubuntu 14 and all works find.
So I guess you are right.

Thanks,
Mark




------------------ Original ------------------
From:  "Glyph Lefkowitz";<glyph at twistedmatrix.com>;
Date:  Tue, Mar 3, 2015 03:38 AM
To:  "Twisted general discussion"<twisted-python at twistedmatrix.com>; 

Subject:  Re: [Twisted-Python]回复： 回复：  exceptions.ImportError: cannot import name_epoll



On Mar 2, 2015, at 4:55 AM, 8 <421174439 at qq.com> wrote:

maybe you are right.
but cygwin is a linux environment on windows.



No, it is not.  It is a "unix-like" environment on Windows.


When Jean-Paul says that epoll is a "linux" feature, he does not mean that it is available on "linux-like" systems or that it is a POSIX or UNIX-ish feature.  It is specifically only available on Linux: it is not, for example, available on FreeBSD, or Mac OS X, and the thing called "epoll" on Solaris is something different that is not compatible.


For what it's worth, Cygwin is not a supported environment for Twisted.  We have buildbots that run native Windows python executables on a few versions of Windows, but we don't test under Cygwin.  It might work, but you may encounter bugs that we have not tested for, since none of our developers would be notified if it breaks.


-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150303/188b4ed6/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar  3 15:18:26 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Mar 2015 14:18:26 -0800
Subject: [Twisted-Python] exceptions.ImportError: cannot import
	name_epoll
In-Reply-To: <tencent_7842E99914B454A15AA86EE4@qq.com>
References: <tencent_453E36893DA89C4968F23CBE@qq.com>
 <20150302112924.7028.898434504.divmod.xquotient.2@top>
 <tencent_119009843D23FA76296C0F28@qq.com>
 <20150302124633.7028.277570116.divmod.xquotient.8@top>
 <tencent_2C45935F2D8F83102A59F757@qq.com>
 <93C934A2-2D69-48DD-BB8C-EE7C10C2E876@twistedmatrix.com>
 <tencent_7842E99914B454A15AA86EE4@qq.com>
Message-ID: <3B715506-1F4C-46B2-A21F-2996F6726168@twistedmatrix.com>


> On Mar 3, 2015, at 6:37 AM, 8 <421174439 at qq.com> wrote:
> 
> Thanks for your patient reply. I try to run that on Ubuntu 14 and all works find.
> So I guess you are right.

No problem.  Glad you were able to work this out!

Thanks for using Twisted,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150303/fe68641d/attachment-0002.html>

From al.niessner at gmail.com  Wed Mar  4 09:59:00 2015
From: al.niessner at gmail.com (Al Niessner)
Date: Wed, 4 Mar 2015 08:59:00 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
Message-ID: <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>

Nevermind. While building the test case I figured out where I went wrong. I
had a subprocess pool that I forgot to close and it just grew out of hand.

I checked and twisted is running at 4 processes. Sounds better.

Thanks for all of the help.

On Mon, Mar 2, 2015 at 1:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 2, 2015, at 10:36 AM, Al Niessner <al.niessner at gmail.com> wrote:
>
>
> Platform:
> CPU: Intel (2x with 8 core each then hyper-threading gets us to 32 virtual)
> Ubuntu 14.04
> Python 3.4 (yes, I know)
> Twisted 13.2.0
>
>
> I use the vanilla twisted.internet.reactor.run() with the
> factory twisted.web.server.Site(root). It all runs just fine (seemingly)
> but,when I was snooping around on my machine, I had a ton of threads lying
> about. After cleaning up, I restarted my twisted application and found that
> I have 151 python3 threads lying about. I doubled checked and I have just
> twisted application running.
>
> I browsed the documentation and the twisted thread pool claims to default
> between 5 and 10. However, I do abuse the deferToThread() cannot find any
> simple documentation on how that might feed back to the 151 threads. I
> thought maybe I need to exit the deferred returned from deferToThread() in
> some special way to clean it all up. However, I can find no documentation
> for it.
>
> I have been googling about with many random search terms trying to puzzle
> the 151 threads from the documentation that tells me I should expect 5 to
> 10.
>
> Can anyone please help understand why I have 151 threads and where they
> are coming from? Luckily they are all idle so the machine runs just fine.
>
> The best story I can come up with is that there is one master thread on
> core-0 and then I get 10 threads in the pool for each of the other physical
> cores. However, the story is just numerology.
>
>
> There are some bugs in the thread pool implementation (hopefully I'll get
> around to finishing my fix for soon, see <
> https://twistedmatrix.com/trac/ticket/2673> for details) which may cause
> this issue, but given how far out of whack those numbers are, my
> inclination is to think it's something else in your environment.
>
> Can you put your full code online somewhere so that we can test it?
> Ideally after fixing it to be a minimal reproducer? :)
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150304/4acf792f/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar  4 12:11:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Mar 2015 11:11:26 -0800
Subject: [Twisted-Python] twisted thread pool
In-Reply-To: <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>
References: <CAO5pCYSciiOLn3+fWfykc_E-Ky+9QBEcVpY+LZ=ksmb-L1tR8Q@mail.gmail.com>
 <0938C870-10BD-424A-BF7F-6485E163C460@twistedmatrix.com>
 <CAO5pCYTqYfWrqguOCjaLJkY7dKRiW9ieWjmQY0ztfKLeGk21Dg@mail.gmail.com>
Message-ID: <15872A47-37EF-4AEC-934D-15396B849166@twistedmatrix.com>


> On Mar 4, 2015, at 8:59 AM, Al Niessner <al.niessner at gmail.com> wrote:
> 
> Nevermind. While building the test case I figured out where I went wrong.

... and that right there is exactly why we request that those asking questions build those types of examples ;-D

> I had a subprocess pool that I forgot to close and it just grew out of hand.

This sounds much more in line with what I expected.

> I checked and twisted is running at 4 processes. Sounds better.

Great!  Thanks for following up publicly, it's always nice when someone follows up with a problem like this and avoids creating urban myths around resource management problems in Twisted :).

> Thanks for all of the help.

No problem! Glad it worked out.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150304/7c65cb3e/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar  4 18:14:18 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Mar 2015 17:14:18 -0800
Subject: [Twisted-Python] getting rid of semantic newlines
Message-ID: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>

I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.

Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.

In pursuit of this questionable benefit, we have to accept the following annoyances:

It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
It looks bad in online code browsers; long sentences horizontally scroll or wrap.

I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.

Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150304/c8c1cc98/attachment-0002.html>

From hawkowl at atleastfornow.net  Wed Mar  4 20:37:59 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 5 Mar 2015 11:37:59 +0800
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <326BF849-D2A9-40B8-9D96-9AB79BAB4526@atleastfornow.net>


> On 5 Mar 2015, at 09:14, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
> 
> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
> 
> In pursuit of this questionable benefit, we have to accept the following annoyances:
> 
> 	• It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> 	• It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786>.
> 	• It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
> 	• It looks bad in online code browsers; long sentences horizontally scroll or wrap.
> 
> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
> 
> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> Thanks,
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Welllll, I am opposed, obviously :) I think that it works better in the (some trivial, some non-trivial) RST docs I've written, but, I'm just one person, so, YMMV.

However, I defer (ha), as those are real annoyances, and maybe the Twisted docs will never indeed reap the benefits of cleaner documentation diffs/reorganisation in the way, that, for example, my book will.

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150305/0d7eedad/attachment.sig>

From donald at stufft.io  Wed Mar  4 21:01:09 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 4 Mar 2015 23:01:09 -0500
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <2766D633-63F3-4CBE-A904-A19E9CFB9931@stufft.io>


> On Mar 4, 2015, at 8:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
> 
> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
> 
> In pursuit of this questionable benefit, we have to accept the following annoyances:
> 
> It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
> It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
> It looks bad in online code browsers; long sentences horizontally scroll or wrap.
> 
> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
> 
> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> Thanks,
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Not that my opinion of what Twisted should do should matter much, but I think that semantic newlines are a hack to try and work around deficiency in tooling. Look at Github’s “rendered diff” for how documentation diff *should* be. Tooling should make things easier for the developer, the developer shouldn’t have to go out of their way to make things easier for the tooling.

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150304/95cdf64b/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150304/95cdf64b/attachment.sig>

From hs at ox.cx  Wed Mar  4 23:20:03 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 05 Mar 2015 07:20:03 +0100
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
Message-ID: <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>

On 5 Mar 2015, at 2:14, Glyph Lefkowitz wrote:

> I find the "semantic newlines" standard which we have been attempting 
> to enforce for documentation a constant source of annoyance.
>
> Ostensibly, the purpose of using semantic newlines is to reduce the 
> size of diffs.  However, given that we have oceans of documentation 
> _not_ using this style, we are unlikely to reap that benefit any time 
> soon.  Also, unlike code, documentation rarely needs small spot fixes; 
> a fix to a document should result in changes elsewhere within the 
> sentence or paragraph.
>
> In pursuit of this questionable benefit, we have to accept the 
> following annoyances:
>
> It's inconsistent with pretty much every other Sphinx project out 
> there.  Python lays out an 80-column maximum for Sphinx documents, the 
> same as code: 
> https://docs.python.org/devguide/documenting.html#use-of-whitespace 
> <https://docs.python.org/devguide/documenting.html#use-of-whitespace> 
> and an inspection of pretty much every other Sphinx project out there 
> shows this style is consistently followed.

We don’t follow PEP8 either and that’s a much bigger annoyance to 
me.

> It's inconsistent with the coding standard and requires special 
> explanation in the docs.  I was prompted to write this message by 
> attempting to review <https://twistedmatrix.com/trac/ticket/7786 
> <https://twistedmatrix.com/trac/ticket/7786>>.
> It requires special editor configuration.  ReST mode in emacs, vim, 
> and sublime text expect to wrap paragraphs at 80 characters and 
> keeping the semantic newlines where they're supposed to be has no tool 
> support and involves avoiding other bits of tool support around 
> re-flowing.  It also looks bad in an editor, with a ragged right edge.
> It looks bad in online code browsers; long sentences horizontally 
> scroll or wrap.
>
> I think this style might have made sense ago 10 years ago in HTML, but 
> with present-day RST it seems to go strongly against the grain.
>
> Would anyone else like to make our documentation style-guide more 
> harmonious with existing standards?  Anyone opposed?

I’m opposed; in general I have the same opinion as Donald: bad tooling 
shouldn’t dictate standards.

However I come to a very different conclusion: 80 chars for prose *is* a 
very artificial standard set by shitty tooling.  If we wanted to be 
consequent, it should be “enter only after paragraphs”.  Semantic 
newlines at least help me to quickly scan the structure of a document, 
they indicate when a sentence is too long etc.  In other words: it’s a 
concession to bad tools but at least it’s a useful one.  80 chars/line 
is just terrible in every regard and resulting from soft line wraps 
being NP-hard or something.

I’m not gonna veto it or something, just wanted to point out the 
tooling-inconsistency in the arguments that are frequently brought up.



From glyph at twistedmatrix.com  Thu Mar  5 13:48:26 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 5 Mar 2015 12:48:26 -0800
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
Message-ID: <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>


> On Mar 4, 2015, at 10:20 PM, Hynek Schlawack <hs at ox.cx> wrote:
> 
> On 5 Mar 2015, at 2:14, Glyph Lefkowitz wrote:
> 
>> I find the "semantic newlines" standard which we have been attempting to enforce for documentation a constant source of annoyance.
>> 
>> Ostensibly, the purpose of using semantic newlines is to reduce the size of diffs.  However, given that we have oceans of documentation _not_ using this style, we are unlikely to reap that benefit any time soon.  Also, unlike code, documentation rarely needs small spot fixes; a fix to a document should result in changes elsewhere within the sentence or paragraph.
>> 
>> In pursuit of this questionable benefit, we have to accept the following annoyances:
>> 
>> It's inconsistent with pretty much every other Sphinx project out there.  Python lays out an 80-column maximum for Sphinx documents, the same as code: https://docs.python.org/devguide/documenting.html#use-of-whitespace <https://docs.python.org/devguide/documenting.html#use-of-whitespace> and an inspection of pretty much every other Sphinx project out there shows this style is consistently followed.
> 
> We don’t follow PEP8 either and that’s a much bigger annoyance to me.

Sure, but (A) you're wrong our style is way better than PEP8, just check out my CAML CASE knuckle tat ;-), (B) the style is "PEP8, except..." and not a totally different style (C) much of the codebase _does_ actually adhere to that standard whereas none of the documentation does, (D) we have tools - janky tools, but tools nonetheless - that validate our coding standard, but none that can validate semantic line-breaking, and (E) not only do we not have tools to check this automatically but it's not clear to me how you would check it automatically.  Especially the part where it's arbitrary if you want to break a line around a clause it's optional, and maybe you don't need to break lines at the end of short sentences.

So while I can appreciate that the not-quite-PEP8 case isn't exactly open and shut, it's also a far less obviously beneficial change, in my mind.

>> It's inconsistent with the coding standard and requires special explanation in the docs.  I was prompted to write this message by attempting to review <https://twistedmatrix.com/trac/ticket/7786 <https://twistedmatrix.com/trac/ticket/7786>>.
>> It requires special editor configuration.  ReST mode in emacs, vim, and sublime text expect to wrap paragraphs at 80 characters and keeping the semantic newlines where they're supposed to be has no tool support and involves avoiding other bits of tool support around re-flowing.  It also looks bad in an editor, with a ragged right edge.
>> It looks bad in online code browsers; long sentences horizontally scroll or wrap.
>> 
>> I think this style might have made sense ago 10 years ago in HTML, but with present-day RST it seems to go strongly against the grain.
>> 
>> Would anyone else like to make our documentation style-guide more harmonious with existing standards?  Anyone opposed?
> 
> I’m opposed; in general I have the same opinion as Donald: bad tooling shouldn’t dictate standards.
> 
> However I come to a very different conclusion: 80 chars for prose *is* a very artificial standard set by shitty tooling.  If we wanted to be consequent, it should be “enter only after paragraphs”.

Personally and aesthetically I would also prefer "enter after paragraphs" a bit better, but as long as we're going to make a change, going with the grain of other community stuff seems worthwhile.

> Semantic newlines at least help me to quickly scan the structure of a document, they indicate when a sentence is too long etc.

One of the features of "semantic newlines" that I discovered in this process is that it's not "lines at the end of sentences", it's "line breaks at the end of any clause, optionally".  If it were just "line break at the end of a sentence" it would be annoying, but not quite to the threshold that would make me start this thread :).

> In other words: it’s a concession to bad tools but at least it’s a useful one.  80 chars/line is just terrible in every regard and resulting from soft line wraps being NP-hard or something.

I feel your pain.

When I first came to UNIX - from classic Mac OS - I thought it was crazy that everybody wrapped lines at 80 characters.  It struck me as inconceivable that people would be inserting artifacts into "modern" (circa 1996), new data based on the physical limitations of hardware from the 1970s.  If you wanted your lines to be wrapped, why not just have your text editor do soft wrapping?  Obviously "newlines" were only there for paragraph breaks in text files.

But, while this is part of our history, it is not entirely historical.  Line-wrapping is an extremely pervasive cultural convention, and just about everything expects it.  The one community where this hasn't taken root is ObjC, and if you look at the lengths of some method-names in that universe you may wish for some 70s-era hardware to dictate your stylistic choices again ;).

Not to mention the fact that if we were really going to throw off the shackles of bad tooling, we'd be running something other than VT100 emulators to do the majority of our daily work, but I'm guessing that during this conversation you have at least one terminal window open ;-).

But have hope, the future may yet arrive.  Emacs 24.4 just (just!) introduced indentation-sensitive wrapping in visual-line-mode which looks vaguely like you'd expect a post-1986 word processor to look, even if you're editing code.  Supposedly Vim has accepted a similar patch <https://retracile.net/wiki/VimBreakIndent <https://retracile.net/wiki/VimBreakIndent>> but I have yet to see it on a build I've actually installed anywhere yet.

So... give it another 10 years, and the open source community may have cracked the code of line-wrapping at run time :-).


-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150305/86162d17/attachment-0002.html>

From jml at mumak.net  Fri Mar  6 01:07:37 2015
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 06 Mar 2015 08:07:37 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
Message-ID: <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>

On Thu, 5 Mar 2015 at 20:49 Glyph <glyph at twistedmatrix.com> wrote:
[snip]

> So... give it another 10 years, and the open source community may have
> cracked the code of line-wrapping at run time :-).
>
>
This email made my morning.

jml
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150306/2d3c4ff3/attachment-0002.html>

From adi at roiban.ro  Fri Mar  6 07:06:11 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 6 Mar 2015 14:06:11 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
 <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
Message-ID: <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>

I don't care what standard is used, just make sure that it is not
stated on a page with 99% of obsolete info and in a section named
"XHTML Layout" like it is now on

https://twistedmatrix.com/documents/current/core/development/policy/doc-standard.html

You can continue to argue for getting rid of semantic newlines but
please make sure that the current dev documentation is valid and
please take the time to review
https://twistedmatrix.com/trac/ticket/7786

Thanks!

On 6 March 2015 at 08:07, Jonathan Lange <jml at mumak.net> wrote:
> On Thu, 5 Mar 2015 at 20:49 Glyph <glyph at twistedmatrix.com> wrote:
> [snip]
>>
>> So... give it another 10 years, and the open source community may have
>> cracked the code of line-wrapping at run time :-).
>>
>
> This email made my morning.
>
> jml
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban



From jamesbroadhead at gmail.com  Fri Mar  6 07:19:22 2015
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Fri, 6 Mar 2015 14:19:22 +0000
Subject: [Twisted-Python] getting rid of semantic newlines
In-Reply-To: <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>
References: <6E3544B6-4CB5-421F-A4D5-5B3AD3631D5E@twistedmatrix.com>
 <873CCBB9-7CE3-4A43-8DAC-2B8A0204D02B@ox.cx>
 <FFA101AC-108B-494F-B7B8-9AB3D4AF04E8@twistedmatrix.com>
 <CAHZ8tnYrrLu8Wp-n1D4EBo-J7kOnAHjexNGpbJkPfvetC1XRBg@mail.gmail.com>
 <CAFycZ9eHhuvrBjJ=xhgFyi8x_1bi5tCd9Xc+O=WzFH8Jd42BMg@mail.gmail.com>
Message-ID: <CA+hid6Es5hz0tUvU4fJ-S5C34nb2s9CapqxAChUhn+61i2pMww@mail.gmail.com>

On 6 March 2015 at 14:06, Adi Roiban <adi at roiban.ro> wrote:

> I don't care what standard is used, just make sure that it is not
> stated on a page with 99% of obsolete info and in a section named
> "XHTML Layout" like it is now on
>

<3

Enforcement by tooling would be better again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150306/47aea395/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Mar  6 16:56:41 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 7 Mar 2015 07:56:41 +0800
Subject: [Twisted-Python] Twisted 15.1.0pre1 Prerelease Announcement
Message-ID: <349BC40F-574B-4E9F-B4DF-B71F30EB6D58@atleastfornow.net>

Hi everyone!

I'm happy to announce the first prerelease for Twisted 15.1! This is not a big release, but does have some nice-to-haves:

- You can now install Twisted's optional dependencies (when it's released to PyPI) easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
- twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
- Twisted's MSN support is now deprecated.
- More documentation on how Trial finds tests.

As usual, tarballs can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS file can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .

Please test them out! :)

Twisted regards,
Hawkie Owl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150307/1e79043b/attachment.sig>

From trac at twistedmatrix.com  Sun Mar  8 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Mar 2015 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1425798316.99.6883915489183497392@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150308/98cc7510/attachment-0002.html>

From adi at roiban.ro  Sun Mar  8 04:03:03 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 8 Mar 2015 10:03:03 +0000
Subject: [Twisted-Python] t.p.filepath and Unicode
Message-ID: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>

Hi,

I am trying to help porting Twisted on Py3 and for me the fact that
FilePath requires all paths to be bytes is a constant pain.

To reduce the Unicode pain when working with string my principle is to
do all internal operations in Unicode and then convert to bytes only
at input and output.

Right now I am trying to port t.p.moduled and when using the current
implementation of FilePath I have to constantly encode/decode path. I
would prefer not to consider the FilePath an input/output level.

Does anyone find this useful and plan to use FilePath with bytes in
another Python3 project?

What do you say if we will also have an UnicodeFilePath class  which
only accept Unicode as path input and only outputs Unicode?

It can start with simple path traversal/directory creation/file
creation just to have t.p.moduled (and trial) ported.

Thanks!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Sun Mar  8 04:26:38 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 8 Mar 2015 03:26:38 -0700
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
Message-ID: <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>


> On Mar 8, 2015, at 3:03 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I am trying to help porting Twisted on Py3 and for me the fact that
> FilePath requires all paths to be bytes is a constant pain.
> 
> To reduce the Unicode pain when working with string my principle is to
> do all internal operations in Unicode and then convert to bytes only
> at input and output.
> 
> Right now I am trying to port t.p.moduled and when using the current
> implementation of FilePath I have to constantly encode/decode path. I
> would prefer not to consider the FilePath an input/output level.
> 
> Does anyone find this useful and plan to use FilePath with bytes in
> another Python3 project?
> 
> What do you say if we will also have an UnicodeFilePath class  which
> only accept Unicode as path input and only outputs Unicode?
> 
> It can start with simple path traversal/directory creation/file
> creation just to have t.p.moduled (and trial) ported.

This approach to unicode support in FilePath is wrong, but when I went to go looking, I realized that there is no comprehensive ticket that outlines how FilePath should support unicode, so I have nothing to refer you to for how to do it correctly.

I more or less figured this out a long time ago and I have been talking about it for years, and the lack of a write-up is a terrible oversight.  I'm sorry about that.

I'm going to go file a ticket now with a specification for this, and I'll post a link as soon as it's done.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150308/77fac967/attachment-0002.html>

From wolfgang.kde at rohdewald.de  Sun Mar  8 05:30:38 2015
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Sun, 08 Mar 2015 12:30:38 +0100
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
Message-ID: <1940884.5xp4HdFM9F@i5>

Am Sonntag, 8. März 2015, 10:03:03 schrieb Adi Roiban:
> Hi,
> 
> I am trying to help porting Twisted on Py3 and for me the fact that
> FilePath requires all paths to be bytes is a constant pain.
> 
> To reduce the Unicode pain when working with string my principle is to
> do all internal operations in Unicode and then convert to bytes only
> at input and output.
> 
> Right now I am trying to port t.p.moduled and when using the current
> implementation of FilePath I have to constantly encode/decode path. I
> would prefer not to consider the FilePath an input/output level.
> 
> Does anyone find this useful and plan to use FilePath with bytes in
> another Python3 project?
> 
> What do you say if we will also have an UnicodeFilePath class  which
> only accept Unicode as path input and only outputs Unicode?
> 
> It can start with simple path traversal/directory creation/file
> creation just to have t.p.moduled (and trial) ported.
> 
> Thanks!
> 

Some months ago someone outlined his idea, I believe in the mailing
list in a thread I participated in. I do not remember who it
was. IIRC, the plan was that FilePath accepts all types of string. It 
keeps a 1:1 copy of that string and has attributes returning the
variant that the caller needs, converting on the fly.


There also is bug report 7166.

-- 
Wolfgang



From wolfgang.kde at rohdewald.de  Sun Mar  8 05:34:50 2015
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Sun, 08 Mar 2015 12:34:50 +0100
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <1940884.5xp4HdFM9F@i5>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
 <1940884.5xp4HdFM9F@i5>
Message-ID: <2855265.P4O2NVK3Xa@i5>

Am Sonntag, 8. März 2015, 12:30:38 schrieben Sie:
> Some months ago someone outlined his idea, I believe in the mailing
> list in a thread I participated in.

should have tried to find it before posting.

That was Glyph On Sep 9, 2014, at 08:01 with the subject

Re: [Twisted-Python] Python3: should paths be bytes or str?

-- 
Wolfgang



From glyph at twistedmatrix.com  Sun Mar  8 06:17:41 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 8 Mar 2015 05:17:41 -0700
Subject: [Twisted-Python] t.p.filepath and Unicode
In-Reply-To: <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>
References: <CAFycZ9cOn2FGafCEGec8y1U9KQKwbuQVfrzLfDS8x8RB7EVkeQ@mail.gmail.com>
 <9B31476D-D291-4438-8900-3B94B221E87B@twistedmatrix.com>
Message-ID: <A17988CF-D48D-4715-B9EF-EFFC204CEBA3@twistedmatrix.com>


> On Mar 8, 2015, at 3:26 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Mar 8, 2015, at 3:03 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Hi,
>> 
>> I am trying to help porting Twisted on Py3 and for me the fact that
>> FilePath requires all paths to be bytes is a constant pain.
>> 
>> To reduce the Unicode pain when working with string my principle is to
>> do all internal operations in Unicode and then convert to bytes only
>> at input and output.
>> 
>> Right now I am trying to port t.p.moduled and when using the current
>> implementation of FilePath I have to constantly encode/decode path. I
>> would prefer not to consider the FilePath an input/output level.
>> 
>> Does anyone find this useful and plan to use FilePath with bytes in
>> another Python3 project?
>> 
>> What do you say if we will also have an UnicodeFilePath class  which
>> only accept Unicode as path input and only outputs Unicode?
>> 
>> It can start with simple path traversal/directory creation/file
>> creation just to have t.p.moduled (and trial) ported.
> 
> This approach to unicode support in FilePath is wrong, but when I went to go looking, I realized that there is no comprehensive ticket that outlines how FilePath should support unicode, so I have nothing to refer you to for how to do it correctly.
> 
> I more or less figured this out a long time ago and I have been talking about it for years, and the lack of a write-up is a terrible oversight.  I'm sorry about that.
> 
> I'm going to go file a ticket now with a specification for this, and I'll post a link as soon as it's done.

Now written in ticket form:

https://twistedmatrix.com/trac/ticket/7805 <https://twistedmatrix.com/trac/ticket/7805>

In short, "FilePath should return the type you give its constructor from all of its public methods, and use an internal representation appropriate to the platform it's running on."

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150308/3071cccc/attachment-0002.html>

From bra at fsn.hu  Thu Mar 12 00:57:33 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Thu, 12 Mar 2015 07:57:33 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
Message-ID: <550138DD.306@fsn.hu>

Hi,

On 01/20/14 15:30, Laurens Van Houtven wrote:
> The first answer by JP Calderone (exarkun) on the following 
> stackoverflow question may be of some assistance.
>
> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
What is the best way to use this capability from a .tac file?




From glyph at twistedmatrix.com  Thu Mar 12 11:42:20 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Mar 2015 10:42:20 -0700
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <550138DD.306@fsn.hu>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
Message-ID: <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>


> On Mar 11, 2015, at 11:57 PM, Nagy, Attila <bra at fsn.hu> wrote:
> 
> Hi,
> 
> On 01/20/14 15:30, Laurens Van Houtven wrote:
>> The first answer by JP Calderone (exarkun) on the following stackoverflow question may be of some assistance.
>> 
>> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
> What is the best way to use this capability from a .tac file?

There's nothing special about a .tac file with respect to spawning processes, it's just another way to instantiate a Service object.  You just need to change the spawned process's arg list from "[executable, __file__, str(port.fileno())]" to something like "[executable, 'twistd', '-n', '-y', __file__, str(port.fileno())]".

-glyph


From bra at fsn.hu  Fri Mar 13 04:03:02 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Fri, 13 Mar 2015 11:03:02 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
Message-ID: <5502B5D6.7050509@fsn.hu>

On 03/12/15 18:42, Glyph Lefkowitz wrote:
>> On Mar 11, 2015, at 11:57 PM, Nagy, Attila <bra at fsn.hu> wrote:
>>
>> Hi,
>>
>> On 01/20/14 15:30, Laurens Van Houtven wrote:
>>> The first answer by JP Calderone (exarkun) on the following stackoverflow question may be of some assistance.
>>>
>>> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
>> What is the best way to use this capability from a .tac file?
> There's nothing special about a .tac file with respect to spawning processes, it's just another way to instantiate a Service object.  You just need to change the spawned process's arg list from "[executable, __file__, str(port.fileno())]" to something like "[executable, 'twistd', '-n', '-y', __file__, str(port.fileno())]".
>
Sounds logical. Do you plan a nicer interface for this maybe? :)



From glyph at twistedmatrix.com  Fri Mar 13 04:28:57 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Mar 2015 03:28:57 -0700
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <5502B5D6.7050509@fsn.hu>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
 <5502B5D6.7050509@fsn.hu>
Message-ID: <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>

> On Mar 13, 2015, at 3:03 AM, Nagy, Attila <bra at fsn.hu> wrote:
> 
> Sounds logical. Do you plan a nicer interface for this maybe? :)

Plan? Not right now. Hope for? Yes, for many years :).

I would very much like to have Twisted contain a straightforward process-pool interface, perhaps a deferToProcess.  But attempting to guess when this will happen is a fool's errand.  Perhaps you could help us do it, though! :)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150313/ea76ce46/attachment-0002.html>

From bra at fsn.hu  Fri Mar 13 04:54:06 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Fri, 13 Mar 2015 11:54:06 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
 <550138DD.306@fsn.hu>
 <85AA419D-FF5E-4995-AAF2-904D8E5E3197@twistedmatrix.com>
 <5502B5D6.7050509@fsn.hu>
 <9D85D48B-BE5C-4E76-A6FE-119B8360F8A2@twistedmatrix.com>
Message-ID: <5502C1CE.5060905@fsn.hu>

On 03/13/15 11:28, Glyph wrote:
>> On Mar 13, 2015, at 3:03 AM, Nagy, Attila <bra at fsn.hu 
>> <mailto:bra at fsn.hu>> wrote:
>>
>> Sounds logical. Do you plan a nicer interface for this maybe? :)
>
> Plan? Not right now. Hope for? Yes, for many years :).
>
> I would very much like to have Twisted contain a straightforward 
> process-pool interface, perhaps a deferToProcess.  But attempting to 
> guess when this will happen is a fool's errand.  Perhaps you could 
> help us do it, though! :)
>
If I had the time. :)
Anyways, big thanks for letting this done!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150313/77c5c361/attachment-0002.html>

From trac at twistedmatrix.com  Sun Mar 15 00:05:17 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Mar 2015 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1426399517.24.3579945590119118805@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150315/ae3125cb/attachment-0002.html>

From adi at roiban.ro  Mon Mar 16 03:17:45 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Mar 2015 09:17:45 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
Message-ID: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>

Hi

I know that twisted main repo contains a lot of code but I would like
to discuss the option of merging
twisted-dev-tools and twistedchecker into twisted main repo.

The main reason why I want this is to make reviews for these repos
more visible to twisted developers.

I don't think that we would have a different team of developers
working on twisted and another one on twisted tools and twistedchecker

I understand that twistedchecker was started as a SOC project and I
agree that is much easier to start as a separate project, but not I
feel that having a different repo does not help.

------

Twistedchecker  has become an important part of dev process and I feel
that the reviews for this project are should be more visible.

For example my PRs for twistedchecker are unreviewed on GitHub for
more than on mouth and there are many other reviews laying idle

------

Maybe there is another reason why those PR are not reviewed and
merging twistechecker and twisted-dev-tools will not help with having
those PR reviewed faster but I would like to investigate this issue
and look for solutions.

What do you think?

I have also filled this ticket
https://github.com/twisted/twisted-dev-tools/issues/11

I think that reviewing patched in less than 2 weeks is critical for
having an active open source project and expecting for developers to
send more patches.

Cheers
-- 
Adi Roiban



From adi at roiban.ro  Mon Mar 16 12:20:12 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Mar 2015 18:20:12 +0000
Subject: [Twisted-Python] Branch name convention
Message-ID: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>

Hi,

I would like to ask why the  twisted branch name convention ask for
trailing ticket ID.

Why not leading ID?

some-text-1234 vs 1234-some-text

-----

The default git auto completion script only does search at the start
of the string.

When I work on a ticket I know the ticket number but I always forget
the name of the branch... so I have to search it inside the Trac
ticket.

It is not a big deal and I know that there are greater annoyances in
Twisted dev process but I am curios if there is someone else who don't
like this convention and if there is any chance of changing it.

Thanks!

-- 
Adi Roiban



From glyph at twistedmatrix.com  Mon Mar 16 12:53:55 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Mar 2015 11:53:55 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
Message-ID: <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>


> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I would like to ask why the  twisted branch name convention ask for
> trailing ticket ID.
> 
> Why not leading ID?
> 
> some-text-1234 vs 1234-some-text
> 
> -----
> 
> The default git auto completion script only does search at the start
> of the string.
> 
> When I work on a ticket I know the ticket number but I always forget
> the name of the branch... so I have to search it inside the Trac
> ticket.
> 
> It is not a big deal and I know that there are greater annoyances in
> Twisted dev process but I am curios if there is someone else who don't
> like this convention and if there is any chance of changing it.

When we started this it seemed like the descriptive name would be easier to remember than the opaque ticket number.  I agree that was the wrong call, oddly enough, I do remember the ticket numbers more.  That said, we can switch as soon as all the currently outstanding branches are landed and deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150316/42e7ce7b/attachment-0002.html>

From adi at roiban.ro  Tue Mar 17 05:33:37 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 17 Mar 2015 11:33:37 +0000
Subject: [Twisted-Python] coverage buildbot builder
Message-ID: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>

Hi,

First, a few question regarding the coverage builder.

1. Why is the coverage builder executed under a French locale ?

2. Does anyone check its results. Are those results used in some way?

3. I see that it is in the list of supported builder. Is the coverage
builder relevant should we reject a patch if coverage is under a
certain limit?

While reading the wiki and narrative documentation I could not find
the answer to the above questions.

I assume that coverage reporter should be run on all builder and then
aggregate all results. Otherwise I expect that a coverage builder on
Linux will have a lot of false positives for Windows or OSX specific
code.

----------

I think that aggregating coverage for all tests modules (ie the
test_*.py) file itself from all supported builders (os/reactors)
should help reviewer/developer identify tests which are not executed
Maybe the results could be sent to one of the trendy web services and
have a nice graph.

Does Twisted have this in place?
Do you think this might be useful?
Is there a ticket for that?

Thanks!

-- 
Adi Roiban



From adi at roiban.ro  Tue Mar 17 07:44:39 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 17 Mar 2015 13:44:39 +0000
Subject: [Twisted-Python] Does anyone need / make use of SSHTransportAddress
	introduced in 12.1 ?
Message-ID: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>

Hi,

While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
out about the SSHTransportAddress introduced in 12.1.

SSHTransportAddress is just an IAddress wrapping in a non-tranparent
way another IAddress.

It was introduces in #2997 which was accepted without any reason why
we need SSHTransportAddress and why SSHTransportAddress is better than
an IAddress.
I could not find any documentation describing why we need this new class.

In case I have not got this wrong, exarkun argued that we need
SSHTransportAddress in order to find out the type of transport in use
https://twistedmatrix.com/trac/ticket/5999#comment:11

I find it stupid to use transport.getHost() and transport.getPeer() to
find out what transport you have rather than doing a check on the
transport itself.

# I am for this check
if IConchTransport.providedBy(someTransport):
    pass

# rather this one.
if isinstance(someTransport.getHost(), SSHTransportAddress):
    pass

I understand the need for endpoints but has somebody implemented an
endpoint which reads an SSHTransportAddress?

Am I the only one who fails to see the advantages of using
SSHTransportAddress over a normal IAddress?

Thanks!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Tue Mar 17 23:15:31 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:15:31 -0700
Subject: [Twisted-Python] coverage buildbot builder
In-Reply-To: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>
References: <CAFycZ9dfrSvjwz8TKeQKoVAV7ucp2zddmy0aCrPjNFFfPg5Qrw@mail.gmail.com>
Message-ID: <A3288493-E968-4B29-84AB-6E4CA16EA2C6@twistedmatrix.com>


> On Mar 17, 2015, at 4:33 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> First, a few question regarding the coverage builder.
> 
> 1. Why is the coverage builder executed under a French locale ?

This is unintentional, I'm sure.

> 2. Does anyone check its results. Are those results used in some way?

They are uploaded, and the link is visible from the buildbot.

For example, a recent build:

https://buildbot.twistedmatrix.com/builds/twisted-coverage.py/twisted-coverage.py-r44067/ <https://buildbot.twistedmatrix.com/builds/twisted-coverage.py/twisted-coverage.py-r44067/>
> 3. I see that it is in the list of supported builder. Is the coverage
> builder relevant should we reject a patch if coverage is under a
> certain limit?

I don't think the coverage builder is tracking a total number.  It would be better if it could.

> While reading the wiki and narrative documentation I could not find
> the answer to the above questions.
> 
> I assume that coverage reporter should be run on all builder and then
> aggregate all results. Otherwise I expect that a coverage builder on
> Linux will have a lot of false positives for Windows or OSX specific
> code.

This would certainly be better, but what we have now is still pretty valuable.  If you click on that link you can see there are still a lot of totally cross-platform modules with terrible coverage numbers (twisted.names.authority, for example).

> I think that aggregating coverage for all tests modules (ie the
> test_*.py) file itself from all supported builders (os/reactors)
> should help reviewer/developer identify tests which are not executed
> Maybe the results could be sent to one of the trendy web services and
> have a nice graph.
> 
> Does Twisted have this in place?

No.

> Do you think this might be useful?

Yes.

> Is there a ticket for that?

Not that I'm aware of.

> Thanks!

Thanks for looking into it!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150317/88f39456/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar 17 23:30:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:30:58 -0700
Subject: [Twisted-Python] Does anyone need / make use of
	SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
Message-ID: <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>


> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
> out about the SSHTransportAddress introduced in 12.1.
> 
> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
> way another IAddress.
> 
> It was introduces in #2997 which was accepted without any reason why
> we need SSHTransportAddress and why SSHTransportAddress is better than
> an IAddress.
> I could not find any documentation describing why we need this new class.

The reason that we need this new type of address is to ensure that any code inspecting this address and attempting to construct a similar connection based upon it is not mislead into creating a transport which is not similar to the one it is indicating.

Arguably, SSHTransportAddress is missing lots of important information: is the address indicative of a client, or a server?  If a client, what hostname was specified?  If a server, what user is connected?  Two SSH connections to the same IP address / port number are not necessarily equivalent, but the current implementation of SSHTransportAddress would compare that way, which is unfortunate.

> In case I have not got this wrong, exarkun argued that we need
> SSHTransportAddress in order to find out the type of transport in use
> https://twistedmatrix.com/trac/ticket/5999#comment:11
> 
> I find it stupid to use transport.getHost() and transport.getPeer() to
> find out what transport you have rather than doing a check on the
> transport itself.
> 
> # I am for this check
> if IConchTransport.providedBy(someTransport):
>    pass
> 
> # rather this one.
> if isinstance(someTransport.getHost(), SSHTransportAddress):
>    pass
> 
> I understand the need for endpoints but has somebody implemented an
> endpoint which reads an SSHTransportAddress?

No, and that's exactly the point - if they had written one that connects IPv4Addresses into endpoints, but not SSHTransportAddresses, they shouldn't be able to make a new connection and treat it as equivalent; it has totally different properties.

> Am I the only one who fails to see the advantages of using
> SSHTransportAddress over a normal IAddress?

SSHTransportAddress is useful, but its only utility is in explicitly breaking use-cases that in fact should not work, so it's a bit user-hostile, so I can see why you'd feel it is useless.  If it were retrofitted to keep enough information to be useful in its own right, then that would be a lot better.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150317/6f02a547/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar 17 23:43:02 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Mar 2015 22:43:02 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
Message-ID: <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>


> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi
> 
> I know that twisted main repo contains a lot of code but I would like
> to discuss the option of merging
> twisted-dev-tools and twistedchecker into twisted main repo.
> 
> The main reason why I want this is to make reviews for these repos
> more visible to twisted developers.
> 
> I don't think that we would have a different team of developers
> working on twisted and another one on twisted tools and twistedchecker
> 
> I understand that twistedchecker was started as a SOC project and I
> agree that is much easier to start as a separate project, but not I
> feel that having a different repo does not help.

I'm approximately -0 on this.  I don't like the idea of dumping a bunch of code into the main Twisted repo that isn't distributed along with Twisted (personally I cannot wait to get rid of the "admin" directory entirely), but I also see your point about the tool being a part of the process.

> Twistedchecker  has become an important part of dev process and I feel
> that the reviews for this project are should be more visible.

> For example my PRs for twistedchecker are unreviewed on GitHub for
> more than on mouth and there are many other reviews laying idle

To be fair we are only just now getting down to a reasonable latency on Twisted reviews, and it is still a fairly small audience reviewing.  This may just lengthen the Twisted review queue :).

So, I do have an alternate proposal - perhaps you should just announce changes to twistedchecker on this list, and land changes to it without review if nobody objects within a week or so.  If you're making changes that are time-sensitive and there is an insufficient community to participate in reviews, then I think it's fair to say that they shouldn't be reviewed.  If anyone objects to the changes that are going in, they can always sign up to do reviews :).  I have implicitly instituted such a process for Twisted-umbrella projects like Imaginary and Vertex, where there are not enough active contributors to sustain development.

> Maybe there is another reason why those PR are not reviewed and
> merging twistechecker and twisted-dev-tools will not help with having
> those PR reviewed faster but I would like to investigate this issue
> and look for solutions.
> 
> What do you think?
> 
> I have also filled this ticket
> https://github.com/twisted/twisted-dev-tools/issues/11
> 
> I think that reviewing patched in less than 2 weeks is critical for
> having an active open source project and expecting for developers to
> send more patches.

Thanks for looking into this, and for all your work making it more pleasant to develop Twisted,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150317/8b15dfe8/attachment-0002.html>

From adi at roiban.ro  Wed Mar 18 00:51:05 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 06:51:05 +0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
Message-ID: <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>

On 18 March 2015 at 05:30, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
> out about the SSHTransportAddress introduced in 12.1.
>
> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
> way another IAddress.
>
> It was introduces in #2997 which was accepted without any reason why
> we need SSHTransportAddress and why SSHTransportAddress is better than
> an IAddress.
> I could not find any documentation describing why we need this new class.
>
>
> The reason that we need this new type of address is to ensure that any code
> inspecting this address and attempting to construct a similar connection
> based upon it is not mislead into creating a transport which is not similar
> to the one it is indicating.
>
> Arguably, SSHTransportAddress is missing lots of important information: is
> the address indicative of a client, or a server?  If a client, what hostname
> was specified?  If a server, what user is connected?  Two SSH connections to
> the same IP address / port number are not necessarily equivalent, but the
> current implementation of SSHTransportAddress would compare that way, which
> is unfortunate.

[snip]

> SSHTransportAddress is useful, but its only utility is in explicitly
> breaking use-cases that in fact should not work, so it's a bit user-hostile,
> so I can see why you'd feel it is useless.  If it were retrofitted to keep
> enough information to be useful in its own right, then that would be a lot
> better.

Thanks! Are these design notes for SSHTransportAddress documented somewhere?

I will update my changes to start making use of SSHTransportAddress.

I have created a ticket to add client/server information into the
SSHTransportAddress. I am using this as a pretext to try to improve
the documentation for SSHTransportAddress.
https://twistedmatrix.com/trac/ticket/7825#ticket

Again, many thanks for the comments!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Wed Mar 18 02:24:19 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 18 Mar 2015 01:24:19 -0700
Subject: [Twisted-Python] Does anyone need / make use of
	SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <3FF3B369-5247-4C10-B279-1984E90B607B@twistedmatrix.com>
 <CAFycZ9etwJgkdJqX0V5c8OP5gBCS-mMbnZJ6PeMC6aZWHypd9w@mail.gmail.com>
Message-ID: <FB6C46D9-E550-43A7-8233-77F9AFC119D6@twistedmatrix.com>


> On Mar 17, 2015, at 11:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 18 March 2015 at 05:30, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Mar 17, 2015, at 6:44 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> While trying to fix https://twistedmatrix.com/trac/ticket/5999 I found
>> out about the SSHTransportAddress introduced in 12.1.
>> 
>> SSHTransportAddress is just an IAddress wrapping in a non-tranparent
>> way another IAddress.
>> 
>> It was introduces in #2997 which was accepted without any reason why
>> we need SSHTransportAddress and why SSHTransportAddress is better than
>> an IAddress.
>> I could not find any documentation describing why we need this new class.
>> 
>> 
>> The reason that we need this new type of address is to ensure that any code
>> inspecting this address and attempting to construct a similar connection
>> based upon it is not mislead into creating a transport which is not similar
>> to the one it is indicating.
>> 
>> Arguably, SSHTransportAddress is missing lots of important information: is
>> the address indicative of a client, or a server?  If a client, what hostname
>> was specified?  If a server, what user is connected?  Two SSH connections to
>> the same IP address / port number are not necessarily equivalent, but the
>> current implementation of SSHTransportAddress would compare that way, which
>> is unfortunate.
> 
> [snip]
> 
>> SSHTransportAddress is useful, but its only utility is in explicitly
>> breaking use-cases that in fact should not work, so it's a bit user-hostile,
>> so I can see why you'd feel it is useless.  If it were retrofitted to keep
>> enough information to be useful in its own right, then that would be a lot
>> better.
> 
> Thanks!

No problem, always happy to explain :).

> Are these design notes for SSHTransportAddress documented somewhere?

Doubtful.  They seem like an obvious consequence of how the various pieces fit together, for me; I feel like every IAddress implementer would have to contain a similar comment, if it were documented anywhere.  However, this really should be written somewhere that people, especially twisted maintainers, will see it.  Any suggestions?

> I will update my changes to start making use of SSHTransportAddress.

Great.

> I have created a ticket to add client/server information into the
> SSHTransportAddress. I am using this as a pretext to try to improve
> the documentation for SSHTransportAddress.
> https://twistedmatrix.com/trac/ticket/7825#ticket <https://twistedmatrix.com/trac/ticket/7825#ticket>

Thanks!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150318/5bab42c5/attachment-0002.html>

From adi at roiban.ro  Wed Mar 18 02:38:18 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 08:38:18 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
Message-ID: <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>

On 18 March 2015 at 05:43, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
>
[snip]

> I'm approximately -0 on this.  I don't like the idea of dumping a bunch of
> code into the main Twisted repo that isn't distributed along with Twisted
> (personally I cannot wait to get rid of the "admin" directory entirely), but
> I also see your point about the tool being a part of the process.

>> Twistedchecker  has become an important part of dev process and I feel
>> that the reviews for this project should be more visible.

> To be fair we are only just now getting down to a reasonable latency on
> Twisted reviews, and it is still a fairly small audience reviewing.  This
> may just lengthen the Twisted review queue :).

As commented earlier, any tickets which sits idle in the review queue
for more than 1 week is not reasonable for me

Some changes in twistedchecker are there to help you with general
review process so if we land them first future reviews might be faster
as you no longer have to stop and check for false positives in
twistedchecker builder.

I don't agree with your priority... but judging by the fact that
pyflakes patches took so long to land and nobody is pissed of by
twistedchecker I feel in minority :(
For me improving the infrastructure and the tools used by the
developers is more important than the Twisted code itself.

It seems to me that you are suggesting that we can build a state of
the art skyscraper with bamboo scaffolding and only use our bare hands
and later we can look into creating power tools and advanced cranes
and scaffolding.

Maybe we are used with the fact that you can only run static code
analysis on buildbot and for that you need a commit and to manually
trigger a build by filling a web form and wait 2 minutes for results,
but this is stone age :(

pyflakes and twistedchecker should run in less than 1 second on local
computer. To optimize speed the checker should be smart and only check
the files which have changes since trunk.

---------

What I am trying to do is to convince other Twisted developers that
tools and infrastructure are important and they should be top
priority.
I am advocating for replacing primitive tools.

The current review process is a pain for new non-commiter
contributors. Read-only clone of svn, manual patches attached to trac,
review commend digested into a single comment, new branches created
for conflicting changes... etc

Developing good tools take a lot of effort... so does writing good
tests. Tools should be at least as important as the code or the tests
. In fact, tests are just a tool to help you develop code.

> So, I do have an alternate proposal - perhaps you should just announce
> changes to twistedchecker on this list, and land changes to it without
> review if nobody objects within a week or so.  If you're making changes that
> are time-sensitive and there is an insufficient community to participate in
> reviews, then I think it's fair to say that they shouldn't be reviewed.  If
> anyone objects to the changes that are going in, they can always sign up to
> do reviews :).  I have implicitly instituted such a process for
> Twisted-umbrella projects like Imaginary and Vertex, where there are not
> enough active contributors to sustain development.
>

Beside twistedchecker there are also twisted-dev-tools and the repos
from twisted-infra organization.

I am not happy about cowboy / one man show coding. Merging a change
without a review as this will break things for sure.

My alternate proposal is to try to raise awareness that good tools are
at least as important as good tests and have more people reviewing
code for tools and work on improving the tools and to consider them an
integral part of the development process.

Cheers!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Wed Mar 18 04:25:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 18 Mar 2015 03:25:14 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
Message-ID: <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>


> On Mar 18, 2015, at 1:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 18 March 2015 at 05:43, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Mar 16, 2015, at 2:17 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
> [snip]
> 
>> I'm approximately -0 on this.  I don't like the idea of dumping a bunch of
>> code into the main Twisted repo that isn't distributed along with Twisted
>> (personally I cannot wait to get rid of the "admin" directory entirely), but
>> I also see your point about the tool being a part of the process.
> 
>>> Twistedchecker  has become an important part of dev process and I feel
>>> that the reviews for this project should be more visible.
> 
>> To be fair we are only just now getting down to a reasonable latency on
>> Twisted reviews, and it is still a fairly small audience reviewing.  This
>> may just lengthen the Twisted review queue :).
> 
> As commented earlier, any tickets which sits idle in the review queue
> for more than 1 week is not reasonable for me
> 
> Some changes in twistedchecker are there to help you with general
> review process so if we land them first future reviews might be faster
> as you no longer have to stop and check for false positives in
> twistedchecker builder.

Annoying issues with twistedchecker are certainly a problem, and I don't want to dissuade you from working on them, but to be honest, they have not been a significant source of blockers for me lately.  I have reviewed plenty of tickets this month <http://twistedmatrix.com/highscores/> and twistedchecker rarely came up.  Now, granted, this is probably partly because of your other recent work, so, it's certainly valuable.

> I don't agree with your priority... but judging by the fact that
> pyflakes patches took so long to land and nobody is pissed of by
> twistedchecker I feel in minority :(
> For me improving the infrastructure and the tools used by the
> developers is more important than the Twisted code itself.
> 
> It seems to me that you are suggesting that we can build a state of
> the art skyscraper with bamboo scaffolding and only use our bare hands
> and later we can look into creating power tools and advanced cranes
> and scaffolding.
> 
> Maybe we are used with the fact that you can only run static code
> analysis on buildbot and for that you need a commit and to manually
> trigger a build by filling a web form and wait 2 minutes for results,
> but this is stone age :(
> 
> pyflakes and twistedchecker should run in less than 1 second on local
> computer. To optimize speed the checker should be smart and only check
> the files which have changes since trunk.

Twisted should also seamlessly parallelize over multiple cores.  It should also have good operational visibility, tracing, and a clearly-documented deployment story.  It does not strike me that any of these are substantially more important than the others.  While the tools aren't great, what I have spent most of my time struggling with lately is how to document things clearly, not tool issues.

> ---------
> 
> What I am trying to do is to convince other Twisted developers that
> tools and infrastructure are important and they should be top
> priority.
> I am advocating for replacing primitive tools.
> 
> The current review process is a pain for new non-commiter
> contributors. Read-only clone of svn, manual patches attached to trac,
> review commend digested into a single comment, new branches created
> for conflicting changes... etc

In my mind, the biggest tools problem is getting us onto a DVCS (which means "git" since git has won the DVCS wars). That means being able to deploy a testing site to make sure we haven't broken stuff, which means a Vagrantfile for braid.  I put in quite a lot of effort improving the state of our build farm earlier in the year, and ops stuff is only so rewarding, so I'm still a little burnt out on that.

If we had a DVCS though, the current conflicts on the logging branch would be easy to resolve, and as it stands they're not.  Many of the other issues you're talking about are hypothetically a big issue but this one is practically affecting progress a lot, since all of the builds are failing and multiple branches now need to be manually rebased.

> Developing good tools take a lot of effort... so does writing good
> tests. Tools should be at least as important as the code or the tests
> . In fact, tests are just a tool to help you develop code.

No argument there.  But there's plenty of testing we don't have either - fuzz testing, for example.  Our performance tests are kind of a mess, and we don't have alerting on performance regressions.  No one of these issues strikes me as obviously the #1 out there, overriding everything else that's going on with the project.

>> So, I do have an alternate proposal - perhaps you should just announce
>> changes to twistedchecker on this list, and land changes to it without
>> review if nobody objects within a week or so.  If you're making changes that
>> are time-sensitive and there is an insufficient community to participate in
>> reviews, then I think it's fair to say that they shouldn't be reviewed.  If
>> anyone objects to the changes that are going in, they can always sign up to
>> do reviews :).  I have implicitly instituted such a process for
>> Twisted-umbrella projects like Imaginary and Vertex, where there are not
>> enough active contributors to sustain development.
>> 
> 
> Beside twistedchecker there are also twisted-dev-tools and the repos
> from twisted-infra organization.
> 
> I am not happy about cowboy / one man show coding. Merging a change
> without a review as this will break things for sure.

I'd definitely prefer more participation but I can't synthesize contributors out of thin air.

> My alternate proposal is to try to raise awareness that good tools are
> at least as important as good tests and have more people reviewing
> code for tools and work on improving the tools and to consider them an
> integral part of the development process.

I am personally unconvinced that this is what I should spend my time doing, just because I already have an already never-ending list of things to work on within Twisted, but I really, really hope you are able to convince many others.  It would certainly make my life a lot easier ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150318/2a3c8d7b/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Mar 18 04:33:13 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Mar 2015 10:33:13 -0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
Message-ID: <20150318103313.6423.1846331760.divmod.xquotient.2@top>

On 17 Mar, 01:44 pm, adi at roiban.ro wrote:
>
>Am I the only one who fails to see the advantages of using
>SSHTransportAddress over a normal IAddress?

This doesn't make any sense.  `IAddress` has no attributes or methods. 
You can't do *anything* with an object that only provides `IAddress`.

Jean-Paul



From hawkowl at atleastfornow.net  Wed Mar 18 04:45:39 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 18 Mar 2015 18:45:39 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
Message-ID: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>

Hi,

As Python 2.6 has been officially abandoned for a year+ (and will receive no further official security updates) and Python 2.7 has been available for almost five years, it might be time to put Python 2.6 support to bed. The only currently supported distro that has Python 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.

This would be in line with other major projects (eg. Django, Plone) and Python's porting guide (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older). We can also remove some things from TestCase, and there's random smatterings of 2.6 support workarounds/comments that we could also remove.

As such, I think we should make 15.1 the final release which officially supports Python 2.6.

Any objections?

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150318/a1ea17e9/attachment.sig>

From adi at roiban.ro  Wed Mar 18 04:55:27 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 10:55:27 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
Message-ID: <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>

Ok. Let's focus on Git then.

My biggest annoyance is buildbot and the builders with false positives.

Is this the only wiki page documenting the progress and next steps for
git migration  https://twistedmatrix.com/trac/wiki/Infrastructure/SwitchToGit

I have started working at vagrant file but the changes are not
reviewed since 8 Feb https://github.com/twisted-infra/braid/pull/77

I can donate time to work on this, just let me know what can I do :)

Cheers
-- 
Adi Roiban



From adi at roiban.ro  Wed Mar 18 04:58:40 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 10:58:40 +0000
Subject: [Twisted-Python] Does anyone need / make use of
 SSHTransportAddress introduced in 12.1 ?
In-Reply-To: <20150318103313.6423.1846331760.divmod.xquotient.2@top>
References: <CAFycZ9fxa9tCb2-1bibWqNJstEohCv8QhhP7r4NH8g8sGy0HGw@mail.gmail.com>
 <20150318103313.6423.1846331760.divmod.xquotient.2@top>
Message-ID: <CAFycZ9e4XuUiTXG5b=E7gfP0qLbGesSEA_SbL=gwK2mKjtuTbg@mail.gmail.com>

On 18 March 2015 at 10:33,  <exarkun at twistedmatrix.com> wrote:
> On 17 Mar, 01:44 pm, adi at roiban.ro wrote:
>>
>>
>> Am I the only one who fails to see the advantages of using
>> SSHTransportAddress over a normal IAddress?
>
>
> This doesn't make any sense.  `IAddress` has no attributes or methods. You
> can't do *anything* with an object that only provides `IAddress`.
>
> Jean-Paul

True. I was thinking at IPv4Address and IPv6Address.

Thanks for the follow up. I have change  getHost and getPeer for conch
to return SSHTransportAddress and pushed changes for review.

-- 
Adi Roiban



From adi at roiban.ro  Wed Mar 18 05:00:15 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 18 Mar 2015 11:00:15 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <CAFycZ9eAum2wdZr+DyVpQWvrjV946cyOKCUpBnCquq1HPjy96g@mail.gmail.com>

Nope. Not for my part. +1 for removing it.

Thanks!

-- 
Adi Roiban



From itamar at itamarst.org  Wed Mar 18 05:26:03 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Mar 2015 07:26:03 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <abb07e50ac1e8ad94da5d8f7d7b61c0e@itamarst.org>

 

+1 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150318/c384307e/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Mar 18 06:24:31 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Mar 2015 12:24:31 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <55096E7F.2000001@imperial.ac.uk>

On 18/03/15 10:45, HawkOwl wrote:
> Hi,
>
> As Python 2.6 has been officially abandoned for a year+ (and will
> receive no further official security updates) and Python 2.7 has been
> available for almost five years, it might be time to put Python 2.6
> support to bed. The only currently supported distro that has Python
> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>
> This would be in line with other major projects (eg. Django, Plone)
> and Python's porting guide
> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
> We can also remove some things from TestCase, and there's random
> smatterings of 2.6 support workarounds/comments that we could also
> remove.
>
> As such, I think we should make 15.1 the final release which
> officially supports Python 2.6.
>
> Any objections?

Objectively it seems reasonable.

Subjectively, it'll substantially inconvenience me (and others who have 
RH/CentOS 6 systems which will be in service for years more).

In the past, we've built and deployed a newer Python when this has 
happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't 
intend to repeat it. Absent an EPEL package for python27, I suspect many 
people will do what we intend to do - stop updating Twisted.

Expect to see queries from people on older versions they can't update 
for some time ;o)

In all seriousness, I guess it depends on how useful this is. Being "in 
line" with other projects doesn't seem like a useful goal - who cares 
what Plone does? If it's useful for Twisted, then do it.



From donald at stufft.io  Wed Mar 18 06:29:48 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 18 Mar 2015 08:29:48 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <55096E7F.2000001@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
Message-ID: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>


> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 18/03/15 10:45, HawkOwl wrote:
>> Hi,
>> 
>> As Python 2.6 has been officially abandoned for a year+ (and will
>> receive no further official security updates) and Python 2.7 has been
>> available for almost five years, it might be time to put Python 2.6
>> support to bed. The only currently supported distro that has Python
>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>> 
>> This would be in line with other major projects (eg. Django, Plone)
>> and Python's porting guide
>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>> We can also remove some things from TestCase, and there's random
>> smatterings of 2.6 support workarounds/comments that we could also
>> remove.
>> 
>> As such, I think we should make 15.1 the final release which
>> officially supports Python 2.6.
>> 
>> Any objections?
> 
> Objectively it seems reasonable.
> 
> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
> 
> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
> 
> Expect to see queries from people on older versions they can't update for some time ;o)
> 
> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Isn’t the RHEL answer here to just use SCLs to install Python 2.7?

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150318/f0d2b03e/attachment.sig>

From p.mayers at imperial.ac.uk  Wed Mar 18 07:02:45 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Mar 2015 13:02:45 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <55097775.5050704@imperial.ac.uk>

On 18/03/15 12:29, Donald Stufft wrote:

> Isn’t the RHEL answer here to just use SCLs to install Python 2.7?

I've never actually come across the SCL stuff before. Thanks for the 
pointer.

My latter point still stands - don't do it because others do it, do it 
because it's good for Twisted (or not ;o)



From hawkowl at atleastfornow.net  Wed Mar 18 07:07:13 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 18 Mar 2015 21:07:13 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <55097775.5050704@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <55097775.5050704@imperial.ac.uk>
Message-ID: <7608DC3F-364E-4DCC-9D4D-57F6EE78BE66@atleastfornow.net>


> On 18 Mar 2015, at 21:02, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 18/03/15 12:29, Donald Stufft wrote:
> 
>> Isn’t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> I've never actually come across the SCL stuff before. Thanks for the pointer.
> 
> My latter point still stands - don't do it because others do it, do it because it's good for Twisted (or not ;o)

Yes, it's good for Twisted -- but I was mentioning that it's also something that other projects have done, so it's not like it's a crazy idea :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150318/f07e979d/attachment.sig>

From glyph at twistedmatrix.com  Wed Mar 18 16:03:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 15:03:14 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
Message-ID: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>

I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".

Anybody else have this issue?  Objections?

-glyph




From glyph at twistedmatrix.com  Wed Mar 18 17:48:19 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 16:48:19 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
Message-ID: <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>


> On Mar 18, 2015, at 3:55 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Ok. Let's focus on Git then.
> 
> My biggest annoyance is buildbot and the builders with false positives.
> 
> Is this the only wiki page documenting the progress and next steps for
> git migration  https://twistedmatrix.com/trac/wiki/Infrastructure/SwitchToGit
> 
> I have started working at vagrant file but the changes are not
> reviewed since 8 Feb https://github.com/twisted-infra/braid/pull/77
> 
> I can donate time to work on this, just let me know what can I do :)

OK, cool.  I didn't realize that was ready for review.  I am liking the process we have for Mimic for flagging PRs with keywords - https://github.com/rackerlabs/mimic/pulls <https://github.com/rackerlabs/mimic/pulls> - but this needs automation so as not to be unfriendly to non-committer contributors.

I'll try to get to it by the end of the week.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150318/dbdc1bd3/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 18 17:57:31 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Mar 2015 16:57:31 -0700
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>


> On Mar 18, 2015, at 5:29 AM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> 
>> On 18/03/15 10:45, HawkOwl wrote:
>>> Hi,
>>> 
>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>> receive no further official security updates) and Python 2.7 has been
>>> available for almost five years, it might be time to put Python 2.6
>>> support to bed. The only currently supported distro that has Python
>>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>>> 
>>> This would be in line with other major projects (eg. Django, Plone)
>>> and Python's porting guide
>>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>>> We can also remove some things from TestCase, and there's random
>>> smatterings of 2.6 support workarounds/comments that we could also
>>> remove.
>>> 
>>> As such, I think we should make 15.1 the final release which
>>> officially supports Python 2.6.
>>> 
>>> Any objections?
>> 
>> Objectively it seems reasonable.
>> 
>> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
>> 
>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>> 
>> Expect to see queries from people on older versions they can't update for some time ;o)
>> 
>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Isn’t the RHEL answer here to just use SCLs to install Python 2.7?

Rather than just suggest we preserve the status quo and stay on 2.6 forever to do indefinite free work to support Red Hat's obsolescence business, perhaps we should make a condition of dropping 2.6 support being a clear guide for getting a Twisted environment with py2.7 up and running on whatever appropriately decrepit environment is popular in the CentOS/RHEL user community?  I am annoyed with RH for lagging so much, but I don't want to make their customers' employees suffer for it.

Phil - I do have a question though, since you seem to be a real life user with this use-case :).  If you want to use an old, unsupported version of Python, why do you want to deploy a new, updated version of Twisted on it?

dstufft - is there a PyPy EPEL?  As long as we're telling people to change which Python to use, perhaps we should point them at an actually good one ;).

-glyph





From donald at stufft.io  Wed Mar 18 18:42:07 2015
From: donald at stufft.io (Donald Stufft)
Date: Wed, 18 Mar 2015 20:42:07 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
Message-ID: <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>


> On Mar 18, 2015, at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Mar 18, 2015, at 5:29 AM, Donald Stufft <donald at stufft.io> wrote:
>> 
>> 
>>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>> 
>>> On 18/03/15 10:45, HawkOwl wrote:
>>>> Hi,
>>>> 
>>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>>> receive no further official security updates) and Python 2.7 has been
>>>> available for almost five years, it might be time to put Python 2.6
>>>> support to bed. The only currently supported distro that has Python
>>>> 2.6 is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>>>> 
>>>> This would be in line with other major projects (eg. Django, Plone)
>>>> and Python's porting guide
>>>> (https://docs.python.org/3/howto/pyporting.html#drop-support-for-python-2-6-and-older).
>>>> We can also remove some things from TestCase, and there's random
>>>> smatterings of 2.6 support workarounds/comments that we could also
>>>> remove.
>>>> 
>>>> As such, I think we should make 15.1 the final release which
>>>> officially supports Python 2.6.
>>>> 
>>>> Any objections?
>>> 
>>> Objectively it seems reasonable.
>>> 
>>> Subjectively, it'll substantially inconvenience me (and others who have RH/CentOS 6 systems which will be in service for years more).
>>> 
>>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>>> 
>>> Expect to see queries from people on older versions they can't update for some time ;o)
>>> 
>>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
>> Isn’t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> Rather than just suggest we preserve the status quo and stay on 2.6 forever to do indefinite free work to support Red Hat's obsolescence business, perhaps we should make a condition of dropping 2.6 support being a clear guide for getting a Twisted environment with py2.7 up and running on whatever appropriately decrepit environment is popular in the CentOS/RHEL user community?  I am annoyed with RH for lagging so much, but I don't want to make their customers' employees suffer for it.
> 
> Phil - I do have a question though, since you seem to be a real life user with this use-case :). If you want to use an old, unsupported version of Python, why do you want to deploy a new, updated version of Twisted on it?
> 
> dstufft - is there a PyPy EPEL?  As long as we're telling people to change which Python to use, perhaps we should point them at an actually good one ;).
> 

It looks like EPEL has PyPy 2.0.2, I don’t see it in SCL.

If you want newer than that you could possibly convince PyPy to build RPMs with COPR. I’m doing that for python-pip and co and it’s not very hard once you have the RPM spec file originally written, which could probably just be taken from Fedora.

---
Donald Stufft
PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150318/ef69b783/attachment.sig>

From exarkun at twistedmatrix.com  Wed Mar 18 18:45:57 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Mar 2015 00:45:57 -0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
Message-ID: <20150319004557.6423.1301490171.divmod.xquotient.8@top>

On 18 Mar, 10:45 am, hawkowl at atleastfornow.net wrote:
>Hi,
>
>As Python 2.6 has been officially abandoned for a year+ (and will 
>receive no further official security updates) and Python 2.7 has been 
>available for almost five years, it might be time to put Python 2.6 
>support to bed. The only currently supported distro that has Python 2.6 
>is RHEL6, and RHEL7 with Python 2.7 has now been out for a year.
>
>This would be in line with other major projects (eg. Django, Plone) and 
>Python's porting guide (https://docs.python.org/3/howto/pyporting.html 
>#drop-support-for-python-2-6-and-older). We can also remove some things 
>from TestCase, and there's random smatterings of 2.6 support 
>workarounds/comments that we could also remove.
>
>As such, I think we should make 15.1 the final release which officially 
>supports Python 2.6.
>
>Any objections?

Please keep in mind that the way Twisted drops support for various 
platforms is by:

  1) announcing that it will be so
  2) removing the BuildBot configurations that demonstrate Twisted works 
on those platforms
  3) dropping the development/review requirement that the test suite be 
kept passing on those platforms

Contrast this with another possible meaning of "drop support" which is 
*not* what Twisted does:

  1) actively prioritize a bunch of work to make sure that Twisted 
definitely will be as broken as possible on the de-supported platform

Thanks.
Jean-Paul



From exarkun at twistedmatrix.com  Wed Mar 18 18:50:58 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Mar 2015 00:50:58 -0000
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <20150319005058.6423.2103407819.divmod.xquotient.15@top>

On 18 Mar, 10:03 pm, glyph at twistedmatrix.com wrote:
>I'd like to deprecate and remove __nonzero__ on Deferreds. 
>Occasionally I see code where someone (maybe even me) does "if d:" 
>where they should have been doing "@d.addCallback def cb(result): if 
>result: ...".
>
>Anybody else have this issue?  Objections?

Er.  What?  It's a little early for april fools' day, isn't it?

Seriously, this is weird.  Am I missing something?

Can expand on what it would mean to deprecated a special method of a 
class that doesn't even define it and what makes Deferred unique among 
all user-defined classes in this regard.

Jean-Paul



From mithrandi at mithrandi.net  Wed Mar 18 19:30:03 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 19 Mar 2015 03:30:03 +0200
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <CAMcKhMR4=4-TBXZES0H2U-5ePgLNsW-Vt=hp6YgNZrPKapC7hA@mail.gmail.com>

On 19 March 2015 at 00:03, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> I'd like to deprecate and remove __nonzero__ on Deferreds.

By "remove" do you mean "add an implementation that raises an
exception"? (It seems like this must be what you meant, I just wanted
to be clear since this is a slightly subtle issue)

I'm not sure offhand if I have any code that would be affected by
this, but I don't think I would have a problem considering any such
code incorrect. The most likely case I can think of is where I've
lazily written something like "if d" instead of "if d is not None".

That is to say, "+1".
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From adi at roiban.ro  Thu Mar 19 03:45:13 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 09:45:13 +0000
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
 twisted main repo
In-Reply-To: <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
Message-ID: <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>

> OK, cool.  I didn't realize that was ready for review.  I am liking the
> process we have for Mimic for flagging PRs with keywords -
> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
> not to be unfriendly to non-committer contributors.
>
> I'll try to get to it by the end of the week.

For twistedchecker I start using tags ... but I don't have permissions
for twisted-infra repos.

Yes. GitHub PR are nice but horrible for implementing anything formal
on top of it.

I was preparing to suggest someting similar also for Trac as sometimes
I am not sure if a comment is 'do minor changes and merge' or 'do
minor change and send them for review'

My suggestion is this:

when a PR is ready for review the author should leave a comment
containing the `needs-review` marker. This will send a hook and a
custom hook server will update the tags of the ticket.

When someone has reviewed the changes and don't like them he/she can
add a comment with 'needs-changes' marker. Again the hook server will
kick in and update the tags.

When someone has approved the changes he/she leave a comment with
`changes-approved` marker and the hook server will update the tags.

The hook server will have permission to  set tag so this will work
even for non commiters.

I already use something like this for my project based on a custom GH
hook server which is just a simple web server which parse the hook and
dispatch them as a nice JSON
https://github.com/chevah/txghserf/blob/master/txghserf/server.py

I find it easy to type needs-review / needs-chagnes ... etc than using
the mouse to set a tag or change the owner of a ticket.

What do you say?
-- 
Adi Roiban



From p.mayers at imperial.ac.uk  Thu Mar 19 06:02:08 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Mar 2015 12:02:08 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <2F6A906F-3F40-410F-93B8-8AD878086990@stufft.io>
Message-ID: <550ABAC0.2020703@imperial.ac.uk>

On 19/03/15 00:42, Donald Stufft wrote:

> If you want newer than that you could possibly convince PyPy to build
> RPMs with COPR. I’m doing that for python-pip and co and it’s not
> very hard once you have the RPM spec file originally written, which
> could probably just be taken from Fedora.

IME that is usually a lot harder than it looks. We (try to) do it a lot 
and it's very common to need a lot of work backporting newer Fedora 
.spec to EL6. It's often easier to just roll a new one.



From p.mayers at imperial.ac.uk  Thu Mar 19 06:05:50 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Mar 2015 12:05:50 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
Message-ID: <550ABB9E.8070800@imperial.ac.uk>

On 18/03/15 23:57, Glyph Lefkowitz wrote:

> Rather than just suggest we preserve the status quo and stay on 2.6
> forever to do indefinite free work to support Red Hat's obsolescence

You *definitely* shouldn't do that. Push back on RedHat, and tell 
customers to push back on RedHat. I say this to other projects.

As mentioned, if maintaining 2.6 support is anything other than a 
trivial amount of work, then it's totally reasonable to drop it.

> business, perhaps we should make a condition of dropping 2.6 support
> being a clear guide for getting a Twisted environment with py2.7 up
> and running on whatever appropriately decrepit environment is popular
> in the CentOS/RHEL user community?  I am annoyed with RH for lagging
> so much, but I don't want to make their customers' employees suffer
> for it.
>
> Phil - I do have a question though, since you seem to be a real life
> user with this use-case :).  If you want to use an old, unsupported
> version of Python, why do you want to deploy a new, updated version
> of Twisted on it?

Well, I don't want to use Python 2.6 per-se. It's what a large number of 
the systems we run have bundled, I have no need for newer 2.7 language 
features, and thus if I can *possibly* avoid it, I don't want to 
maintain the burden of deploying another version, even less so the 
burden of packaging it. We've done that in the past, it's non-trivial 
effort.

I've no specific need for a newer Twisted right now, but I can imagine 
things that might appear - support in listenSSL for ALPN for example, or 
HTTP/2 - that we could use if they appeared.

So, it's purely speculative. I have no current specific need.

> dstufft - is there a PyPy EPEL?  As long as we're telling people to
> change which Python to use, perhaps we should point them at an
> actually good one ;).

PyPy in EPEL 6 is currently sitting at 2.0.2. I've only tried it a few 
times and had mixed results; having to use psycopg2cffi was a bit of a 
pain, and I had some pathological performance issues, but it did 
basically work.

The RHEL SCLs OTOH... After Donald's pointer I took a look at them. They 
are... not great.

[Basically, they're built to think they run in one path, but installed 
in another, and you have to run it with a wrapper script that sets up 
LD_LIBRARY_PATH, PATH, PYTHONPATH, etc.

As opposed to what you'd think, a Python 2.7 compiled and installed 
into, say, /opt/python2.7, which you can just run directly.

Sigh...]

So my £0.02 is that recommending SCL for Python 2.7 on EL6 is something 
you would want to do with caution ;o)

I honestly wouldn't worry about it too much; RedHat's policies aren't 
and shouldn't be Twisted's problem. Do what's best for your development.

Cheers,
Phil



From timothy.gallagher at nuspire.com  Thu Mar 19 08:56:36 2015
From: timothy.gallagher at nuspire.com (Timothy Gallagher)
Date: Thu, 19 Mar 2015 14:56:36 +0000
Subject: [Twisted-Python] twisted echo ssl client with .p12
Message-ID: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>

Hello all,
I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?

ctx = ssl.ClientContextFactory.getContext(self)
ctx.use_certificate_file('keys/client.crt')
ctx.use_privatekey_file('keys/client.key')

Any assistance or code examples would be a huge help.

Thank you for the time
TJ

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150319/6b328342/attachment-0002.html>

From adi at roiban.ro  Thu Mar 19 09:26:56 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 15:26:56 +0000
Subject: [Twisted-Python] Pausing the transport in
 http.HTTPChannel.lineReceived after all headers are received
Message-ID: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>

Hi,

My usecase is this:

When all headers of an HTTP request are received I want to ask a
remote service if the
request should be accepted and what to do with it.

Before I got the response for the remote service, I don't want to
receive/read HTTP data.
The response is returned via an deferred.

The HTTP data might be a 10G file which might be rejected.. for
example due to quota limits.

Here is a gist with a short example and my quick and dirty fix:
https://gist.github.com/adiroiban/621efeab47662a04cb20

------

Do you think this is a valid use case and that  someone would be
willing to review a patch to add such a feature?

-------

I first went on a wrong path as I was calling
self.transport.pauseProducing() instead of self.pauseProducing() but
while reading the code I found this:

In http.HTTPChannel  self.transport.producerPaused is confusing as it
is always False.. and looking at the code from internet/abstract.py I
can see that it is not touched by pauseProducing() ... how should
producerPaused be used?

Is this a bug or a feature? Is there a ticket for it?

I saw that when you return a non-zero value from lineReceived() it
will stop processing the remaining data but I could not find the
documentation for this behaviour.

Should I continue searching for the documentation ? or file a ticket?


Thanks!
-- 
Adi Roiban



From ldanielburr at me.com  Thu Mar 19 09:36:03 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Thu, 19 Mar 2015 10:36:03 -0500
Subject: [Twisted-Python] twisted echo ssl client with .p12
In-Reply-To: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
References: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
Message-ID: <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>

Hi Timothy,

> On Mar 19, 2015, at 9:56 AM, Timothy Gallagher <timothy.gallagher at nuspire.com> wrote:
> 
> Hello all,
> I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?

Maybe http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto <http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto> will be useful to you.  Twisted uses pyopenssl under the covers, so the solution exarkun posted to StackOverflow should be applicable.

Hope this helps,

- L. Daniel Burr

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150319/1fafe375/attachment-0002.html>

From radix at twistedmatrix.com  Thu Mar 19 09:41:40 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Mar 2015 10:41:40 -0500
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
Message-ID: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>


> On Mar 19, 2015, at 4:45 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> OK, cool.  I didn't realize that was ready for review.  I am liking the
>> process we have for Mimic for flagging PRs with keywords -
>> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
>> not to be unfriendly to non-committer contributors.
>> 
>> I'll try to get to it by the end of the week.
> 
> For twistedchecker I start using tags ... but I don't have permissions
> for twisted-infra repos.
> 
> Yes. GitHub PR are nice but horrible for implementing anything formal
> on top of it.
> 
> I was preparing to suggest someting similar also for Trac as sometimes
> I am not sure if a comment is 'do minor changes and merge' or 'do
> minor change and send them for review'
> 
> My suggestion is this:
> 
> when a PR is ready for review the author should leave a comment
> containing the `needs-review` marker. This will send a hook and a
> custom hook server will update the tags of the ticket.
> 


I suggest making the default, tagless state of a PR mean “in review”, for a couple of reasons:

- having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
- if the automation loses track of a PR, we don’t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR

so I propose tagless PRs be considered “in review”, and a label only for `needs-changes`.

-radix


From hawkowl at atleastfornow.net  Thu Mar 19 09:46:33 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 19 Mar 2015 23:46:33 +0800
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
Message-ID: <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>


> On 19 Mar 2015, at 23:41, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> I suggest making the default, tagless state of a PR mean “in review”, for a couple of reasons:
> 
> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
> - if the automation loses track of a PR, we don’t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
> 
> so I propose tagless PRs be considered “in review”, and a label only for `needs-changes`.

Only people with special access can modify labels, though?

> 
> -radix
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150319/4d21ed2e/attachment.sig>

From hawkowl at atleastfornow.net  Thu Mar 19 09:53:38 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 19 Mar 2015 23:53:38 +0800
Subject: [Twisted-Python] Pausing the transport in
	http.HTTPChannel.lineReceived after all headers are received
In-Reply-To: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>
References: <CAFycZ9fSWr0S3spJFXfET_qD=5yTO003P0CK1RmxjHGLKNjHHA@mail.gmail.com>
Message-ID: <7D0E710F-7D1F-43DA-94E0-037AB5C6560B@atleastfornow.net>


> On 19 Mar 2015, at 23:26, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> My usecase is this:
> 
> When all headers of an HTTP request are received I want to ask a
> remote service if the
> request should be accepted and what to do with it.
> 
> Before I got the response for the remote service, I don't want to
> receive/read HTTP data.
> The response is returned via an deferred.
> 
> The HTTP data might be a 10G file which might be rejected.. for
> example due to quota limits.
> 
> Here is a gist with a short example and my quick and dirty fix:
> https://gist.github.com/adiroiban/621efeab47662a04cb20
> 
> ------
> 
> Do you think this is a valid use case and that  someone would be
> willing to review a patch to add such a feature?

Ah yes, the 100-Continue stuff! I mentioned it briefly in my talk at PyCon AU.

It would be a useful feature, and I looked into it a little bit, but I'm not entirely sure how it would be accessible to user code. Most web server frameworks (Django, Klein, Flask, et al) work on a "here's a full request, send a full response" (only Twisted/Klein can do more than send a whole response without hacks :) ) and fitting it into that sort of framework would be a bit confusing.

So, my question is, because this functionality is desirable, how would it be exposed to the user? Maybe if it did traversal prior to the whole request being completed, and called something like headers_POST() or headers_GET() similar to render_GET/POST/etc, which would give the user access to these headers. A Deferred firing with True unblocks the producer, a Deferred firing with False kills off the request.

> 
> -------
> 
> I first went on a wrong path as I was calling
> self.transport.pauseProducing() instead of self.pauseProducing() but
> while reading the code I found this:
> 
> In http.HTTPChannel  self.transport.producerPaused is confusing as it
> is always False.. and looking at the code from internet/abstract.py I
> can see that it is not touched by pauseProducing() ... how should
> producerPaused be used?
> 
> Is this a bug or a feature? Is there a ticket for it?
> 
> I saw that when you return a non-zero value from lineReceived() it
> will stop processing the remaining data but I could not find the
> documentation for this behaviour.
> 
> Should I continue searching for the documentation ? or file a ticket?

This functionality does not exist in Twisted, it just automatically sends the 100. (https://twistedmatrix.com/trac/ticket/4673) However, according to http://twisted-python.twistedmatrix.narkive.com/I9VkN3K3/twisted-web-giant-file-post-forwarding-and-early-bail-out , it probably won't work that great -- only some clients do the 100 continue stuff, and others will just keep shovelling data down the pipe, so only by closing the connection (and them probably disregarding your error message) will it work.

> 
> 
> Thanks!
> --
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150319/021dde7a/attachment.sig>

From radix at twistedmatrix.com  Thu Mar 19 09:54:55 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Mar 2015 10:54:55 -0500
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
 <FE5D7DFF-3E5C-49EC-A8DE-2114F5F98842@atleastfornow.net>
Message-ID: <324386F4-38B2-4168-8BA7-29DEA189BED8@twistedmatrix.com>


> On Mar 19, 2015, at 10:46 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> 
>> On 19 Mar 2015, at 23:41, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>> 
>> I suggest making the default, tagless state of a PR mean “in review”, for a couple of reasons:
>> 
>> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
>> - if the automation loses track of a PR, we don’t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
>> 
>> so I propose tagless PRs be considered “in review”, and a label only for `needs-changes`.
> 
> Only people with special access can modify labels, though?


Right, and Adi suggests a bot for managing those labels — I’m not disagreeing with that point in general, just the details about which tags there are.

-radix




From adi at roiban.ro  Thu Mar 19 10:30:02 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 19 Mar 2015 16:30:02 +0000
Subject: [Twisted-Python] 100-continue and rejecting connection after
	headers are received
Message-ID: <CAFycZ9cT9BUvPg8o72iVUQE+GO_Svx7my5TXKyr+DcBpBG9WiQ@mail.gmail.com>

I am moving this to a dedicated ticket

I start working on 100-Continue here
https://twistedmatrix.com/trac/ticket/6928 and was asked to follow up
on the mailinglist ... which due to slow review progress I gave up..
so I am doing it now.


On 19 March 2015 at 15:53, HawkOwl <hawkowl at atleastfornow.net> wrote:
>
>> On 19 Mar 2015, at 23:26, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> My usecase is this:
>>
>> When all headers of an HTTP request are received I want to ask a
>> remote service if the
>> request should be accepted and what to do with it.
>>
>> Before I got the response for the remote service, I don't want to
>> receive/read HTTP data.
>> The response is returned via an deferred.
>>
>> The HTTP data might be a 10G file which might be rejected.. for
>> example due to quota limits.
>>
>> Here is a gist with a short example and my quick and dirty fix:
>> https://gist.github.com/adiroiban/621efeab47662a04cb20
>>
>> ------
>>
>> Do you think this is a valid use case and that  someone would be
>> willing to review a patch to add such a feature?
>
> Ah yes, the 100-Continue stuff! I mentioned it briefly in my talk at PyCon AU.
>
> It would be a useful feature, and I looked into it a little bit, but I'm not entirely sure how it would be accessible to user code. Most web server frameworks (Django, Klein, Flask, et al) work on a "here's a full request, send a full response" (only Twisted/Klein can do more than send a whole response without hacks :) ) and fitting it into that sort of framework would be a bit confusing.
>
> So, my question is, because this functionality is desirable, how would it be exposed to the user? Maybe if it did traversal prior to the whole request being completed, and called something like headers_POST() or headers_GET() similar to render_GET/POST/etc, which would give the user access to these headers. A Deferred firing with True unblocks the producer, a Deferred firing with False kills off the request.

I already have 100-continue in production ... and I also have a code
which rejects a request after headers were received even if
100-continue was not used.

When all headers are received I am traversing the url and inform the
resource about the headers... before content is received.

I have a special resource which has a new headersReceived method. This
method should return http._CONTINUE as otherwise the request is
rejected.

This only work for resource traversals which don't depend on the request body.
Exarkun made an excellent comment here
https://twistedmatrix.com/trac/ticket/6928#comment:5

The new resource interface is simple.

Here is a dump from my current code
https://gist.github.com/adiroiban/1a515a9354a8168a0275

Here is a diff on Twisted
https://github.com/twisted/twisted/compare/trunk...chevah:6928-http-100-accept

Please review the interface and let me know if it make sense to you.
I am happy to continue working on this as long as others are
interested in reviewing the patch.

Thanks!

-- 
Adi Roiban



From poalman at gmail.com  Thu Mar 19 12:18:27 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Thu, 19 Mar 2015 18:18:27 +0000
Subject: [Twisted-Python] custom FTP server is blocking
Message-ID: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>

I have some blocking going on in a custom twisted ftp server and I'm
trying to pin point what exactly is doing it.

I think this line in openForReading on my FTPShell object could be the culprit:

_FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))

(_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)

I'm guessing urllib2.urlopen blocks resolving the domain and
connecting? What would be the twisted equivalent way of providing a
file like object of the download stream to the FileReader that
wouldn't block?

Regards,

Paul



From ldanielburr at me.com  Thu Mar 19 14:38:30 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Thu, 19 Mar 2015 15:38:30 -0500
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
Message-ID: <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>

Hi Paul,

> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
> 
> I have some blocking going on in a custom twisted ftp server and I'm
> trying to pin point what exactly is doing it.
> 
> I think this line in openForReading on my FTPShell object could be the culprit:
> 
> _FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))
> 

Yeah, urllib2.urlopen() blocks, so this is at least one place in your code that will cause you a problem.

> (_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)
> 
> I'm guessing urllib2.urlopen blocks resolving the domain and
> connecting? What would be the twisted equivalent way of providing a
> file like object of the download stream to the FileReader that
> wouldn't block?
> 

You probably want to use twisted.web.client.Agent for this, as it allows you to perform non-blocking http requests.  If you can live with buffering the http response body into, say, a tempfile or an io.BytesIO instance, then you can just pass that to _FileReader as the fObj argument and call it a day.


Hope this helps,

--
L. Daniel Burr




From glyph at twistedmatrix.com  Thu Mar 19 15:13:48 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Mar 2015 14:13:48 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <20150319005058.6423.2103407819.divmod.xquotient.15@top>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
 <20150319005058.6423.2103407819.divmod.xquotient.15@top>
Message-ID: <18084B73-66AE-4F0A-857C-507D27537533@twistedmatrix.com>


> On Mar 18, 2015, at 5:50 PM, exarkun at twistedmatrix.com wrote:
> 
> On 18 Mar, 10:03 pm, glyph at twistedmatrix.com wrote:
>> I'd like to deprecate and remove __nonzero__ on Deferreds. Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>> 
>> Anybody else have this issue?  Objections?
> 
> Er.  What?  It's a little early for april fools' day, isn't it?

> Seriously, this is weird.  Am I missing something?

Apparently?

> Can expand on what it would mean to deprecated a special method of a class that doesn't even define it

Add such a method and cause it to emit a warning, then raise an exception.

> and what makes Deferred unique among all user-defined classes in this regard.

As I stated in my original message, there's a class of bug where someone does "if somethingThatReturnsDeferred()".  Particularly, "if checkPassword()" is a dangerous manifestation of this class of bug.  I'd like this to fail noisily instead of appearing to work.

In my opinion, having all user-defined classes implement true truthiness by default is a design error in the language.  It's a usually-harmless one except in a few cases, and this is one of those cases, which is why Deferred is not the same as the average user-defined class.

-glyph




From dripton at ripton.net  Thu Mar 19 18:23:35 2015
From: dripton at ripton.net (David Ripton)
Date: Thu, 19 Mar 2015 20:23:35 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550ABB9E.8070800@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
Message-ID: <550B6887.4020703@ripton.net>

On 03/19/2015 08:05 AM, Phil Mayers wrote:
> On 18/03/15 23:57, Glyph Lefkowitz wrote:
> 
>> Rather than just suggest we preserve the status quo and stay on 2.6
>> forever to do indefinite free work to support Red Hat's obsolescence
> 
> You *definitely* shouldn't do that. Push back on RedHat, and tell
> customers to push back on RedHat. I say this to other projects.

Red Hat supports old versions of RHEL forever because they have
customers that want that (because they have legacy apps that they want
to keep working with minimal maintenance, but who still want security
patches), and are willing to pay for it.  It's a good thing that someone
provides that option, even if we don't all need it.

That doesn't mean Twisted needs to support old versions of RHEL forever.
 RHEL 7 has been out for a while, and comes with Python 2.7 as the
default.  So even if Twisted drops support for Python 2.6, it'll still
work on RHEL.  (Just not on old versions of RHEL.)

Furthermore, SCL makes Python 2.7 available (in /opt) on RHEL 5 and 6
and CentOS 6, without users needing to build it themselves.  So even
those who are stuck with old versions can install SCL, then use pip to
install new Twisted.

IOW, I wouldn't worry about it.  Drop support for Python 2.6 when it
makes sense for Twisted.

-- 
David Ripton    dripton at ripton.net



From glyph at twistedmatrix.com  Thu Mar 19 21:25:04 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 20:25:04 -0700
Subject: [Twisted-Python] twistechecker and twisted-dev-tools as part of
	twisted main repo
In-Reply-To: <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
References: <CAFycZ9fUSvjhawmuWFSe+H-0+1j5rSo1js41=hQgf7SWRhb3bg@mail.gmail.com>
 <87B25055-3EBC-4BE0-9709-E5F2D22A7B0A@twistedmatrix.com>
 <CAFycZ9d+x95bGiUwA=kuFObvwuP7aZKXppTtS6N5iPbavNJG8Q@mail.gmail.com>
 <114F261C-CFFF-4EA8-93A8-A41FA8ECE191@twistedmatrix.com>
 <CAFycZ9fUJckEumemVxeebOz+7V-98B9E+QiBHNjWU9nDLU3BzQ@mail.gmail.com>
 <255017F2-5166-4FC3-864A-2C1A7868B05E@twistedmatrix.com>
 <CAFycZ9e69idaKLgQbw1SzkQ5FBdfPWwLZmLoy5yxXrns7xsWFQ@mail.gmail.com>
 <68FF61BE-A07C-45D7-BA53-433EEDC2FA2A@twistedmatrix.com>
Message-ID: <790710C6-7461-4E4C-A796-381BD3ED2679@twistedmatrix.com>


> On Mar 19, 2015, at 8:41 AM, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> 
>> On Mar 19, 2015, at 4:45 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>>> OK, cool.  I didn't realize that was ready for review.  I am liking the
>>> process we have for Mimic for flagging PRs with keywords -
>>> https://github.com/rackerlabs/mimic/pulls - but this needs automation so as
>>> not to be unfriendly to non-committer contributors.
>>> 
>>> I'll try to get to it by the end of the week.
>> 
>> For twistedchecker I start using tags ... but I don't have permissions
>> for twisted-infra repos.
>> 
>> Yes. GitHub PR are nice but horrible for implementing anything formal
>> on top of it.
>> 
>> I was preparing to suggest someting similar also for Trac as sometimes
>> I am not sure if a comment is 'do minor changes and merge' or 'do
>> minor change and send them for review'
>> 
>> My suggestion is this:
>> 
>> when a PR is ready for review the author should leave a comment
>> containing the `needs-review` marker. This will send a hook and a
>> custom hook server will update the tags of the ticket.
>> 
> 
> 
> I suggest making the default, tagless state of a PR mean “in review”, for a couple of reasons:
> 
> - having labels for both `needs-changes` and `in-review` means you can enter an invalid state where both labels are applied
> - if the automation loses track of a PR, we don’t want people filtering only for PRs with `label:in-review` and missing out on the forgotten PR
> 
> so I propose tagless PRs be considered “in review”, and a label only for `needs-changes`.

I like seeing the big green "ready for review" on Mimic PRs; it's more eye-catching.  We can have 2 labels though, so that if the automation breaks, we can have a periodic check that adds "in-review" to everything un-labeled.

-g


From glyph at twistedmatrix.com  Thu Mar 19 23:25:10 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 22:25:10 -0700
Subject: [Twisted-Python] twisted echo ssl client with .p12
In-Reply-To: <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>
References: <2E0A0B508EE01A488C1CC7275D3706B9D0989199@DC1EXCHANGE.nuspire.net>
 <C89DF0E4-6725-4E20-9CB7-4718CC3198FC@me.com>
Message-ID: <1AE7D177-6F83-4204-B088-3706F7E1B05F@twistedmatrix.com>


> On Mar 19, 2015, at 8:36 AM, Louis D. Burr <ldanielburr at me.com> wrote:
> 
> Hi Timothy,
> 
>> On Mar 19, 2015, at 9:56 AM, Timothy Gallagher <timothy.gallagher at nuspire.com <mailto:timothy.gallagher at nuspire.com>> wrote:
>> 
>> Hello all,
>> I have a project that requires client server with ssl/tls including client certificate authentication.  Also the a requirement is that the client needs to use a .p12 file to house its keys.  I have the server part and client part down except I cannot find any code examples using a .p12 file to get the certificates.  Can this be done without having to hack into the ssl.ClientConextFactory?
> 
> Maybe http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto <http://stackoverflow.com/questions/6345786/python-reading-a-pkcs12-certificate-with-pyopenssl-crypto> will be useful to you.  Twisted uses pyopenssl under the covers, so the solution exarkun posted to StackOverflow should be applicable.
> 
> Hope this helps,
> 
> - L. Daniel Burr

You definitely shouldn't use ssl.ClientContextFactory.  It doesn't verify certificates, or provide any authentication of the server.  We should really remove and deprecate it :-\.

You should use ssl.optionsForClientTLS, and you should build it like this:

import getpass

from OpenSSL.crypto import load_pkcs12
from twisted.internet.ssl import (
    PrivateCertificate, KeyPair, Certificate, optionsForClientTLS
)

from twisted.internet.protocol import Factory, Protocol
from twisted.internet.endpoints import SSL4ClientEndpoint
from twisted.internet.defer import inlineCallbacks, Deferred
from twisted.internet.task import react

@inlineCallbacks
def main(reactor, p12file, host, port=443):
    host = host.decode("utf-8")
    port = int(port)
    with open(p12file) as f:
        pkcs12 = load_pkcs12(f.read(), getpass.getpass())
        publicCertificate = Certificate(pkcs12.get_certificate())
        privateKey = KeyPair(pkcs12.get_privatekey())
        privateCertificate = PrivateCertificate.fromCertificateAndKeyPair(
            publicCertificate, privateKey
        )
    contextFactory = optionsForClientTLS(host,
                                         clientCertificate=privateCertificate)
    endpoint = SSL4ClientEndpoint(reactor, host, port, contextFactory)
    x = Deferred()
    class it(Protocol, object):
        def connectionMade(self):
            self.transport.write(b"GET / HTTP/1.1\r\n\r\n")
        def dataReceived(self, data):
            x.callback(Certificate.peerFromTransport(self.transport))
            self.transport.abortConnection()
    yield endpoint.connect(Factory.forProtocol(it))
    cert = yield x
    print(cert)

from sys import argv
react(main, argv[1:])

Hopefully that's a pretty complete answer :-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150319/5d5edec5/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Mar 19 23:43:46 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Mar 2015 22:43:46 -0700
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550ABB9E.8070800@imperial.ac.uk>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
Message-ID: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>

> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.

The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.

I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150319/52456258/attachment-0002.html>

From donald at stufft.io  Thu Mar 19 23:47:54 2015
From: donald at stufft.io (Donald Stufft)
Date: Fri, 20 Mar 2015 01:47:54 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
 <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
Message-ID: <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>


> On Mar 20, 2015, at 1:43 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk <mailto:p.mayers at imperial.ac.uk>> wrote:
>> 
>> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.
> 
> The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.
> 
> I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I can give you access to some logs that you can parse, assuming they are downloading with pip or easy_install. It’ll tell you what versions of Python people are using.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150320/d2beffe6/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Mar 20 00:36:13 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 20 Mar 2015 14:36:13 +0800
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk>
 <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
 <12EEB425-4358-4A0F-B6A4-43681F125467@stufft.io>
Message-ID: <87DF82EE-DFA2-41A2-8B2A-9E53D7568E59@atleastfornow.net>


> On 20 Mar 2015, at 13:47, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 20, 2015, at 1:43 AM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>> 
>>> I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.
>> 
>> The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.
>> 
>> I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
>> 
>> -glyph
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> I can give you access to some logs that you can parse, assuming they are downloading with pip or easy_install. It’ll tell you what versions of Python people are using.

yesplz :)

- Hawkie

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150320/8899b322/attachment.sig>

From kathyannfarnsworth at yahoo.com  Fri Mar 20 01:03:40 2015
From: kathyannfarnsworth at yahoo.com (kathy farnsworth)
Date: Fri, 20 Mar 2015 07:03:40 +0000 (UTC)
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
References: <51A30662-96EF-4348-8553-54909D60CC84@twistedmatrix.com>
Message-ID: <622011267.1371635.1426835020184.JavaMail.yahoo@mail.yahoo.com>

How do I unsubscribe to this that I accidentally did I suppose. I am getting flooded with emails that I have no idea what they are about. Many, many emails. I tried to spam and they still come. PLEASE HELP AND SPREAD THE WORD TO REMOVE ME !!!!!!!
Kathy kathyannfarnsworth at yahoo.com 


     On Thursday, March 19, 2015 10:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
   

 
On Mar 19, 2015, at 5:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
I honestly wouldn't worry about it too much; RedHat's policies aren't and shouldn't be Twisted's problem. Do what's best for your development.


The problem is that they kinda are Twisted's problem - in the sense that we want our users to keep upgrading Twisted.  If users are doing this on RHEL6, then maybe there's a reason to keep supporting 2.6.  But if using RHEL just means that they're never upgrading anything then there's no point to continuing maintenance.
I wish that we had metrics on who was using Twisted where so we could make data-driven decisions about stuff like this :-\.
-glyph

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150320/18759810/attachment-0002.html>

From jmp at justinmp.com  Fri Mar 20 05:05:40 2015
From: jmp at justinmp.com (Justin Mazzola Paluska)
Date: Fri, 20 Mar 2015 07:05:40 -0400
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
Message-ID: <550BFF04.9080009@justinmp.com>

On 03/18/2015 06:03 PM, Glyph Lefkowitz wrote:
> I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>
> Anybody else have this issue?  Objections?

How does this interact with code that uses None as a sentinel?

I have code where I shoot off a recurring process, but want to wait when the 
first run completes.  I do something along the lines of:


d = Deferred()

... setup everything so it calls my callback every time the loop completes ...

if d:
     d.callback("first time completed!")
     d = None

while most of my code uses the check "if d is not None", not all of it does 
(especially the older code).
     --Justin



From poalman at gmail.com  Fri Mar 20 05:16:27 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Fri, 20 Mar 2015 11:16:27 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
Message-ID: <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>

On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
> Hi Paul,
>
>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>
>> I have some blocking going on in a custom twisted ftp server and I'm
>> trying to pin point what exactly is doing it.
>>
>> I think this line in openForReading on my FTPShell object could be the culprit:
>>
>> _FileReader(urllib2.urlopen(result.link,timeout=settings.GLOBAL_TIMEOUT))
>>
>
> Yeah, urllib2.urlopen() blocks, so this is at least one place in your code that will cause you a problem.
>
>> (_FileReader is twisted.protocols.ftp._FileReader and result.link a url string)
>>
>> I'm guessing urllib2.urlopen blocks resolving the domain and
>> connecting? What would be the twisted equivalent way of providing a
>> file like object of the download stream to the FileReader that
>> wouldn't block?
>>
>
> You probably want to use twisted.web.client.Agent for this, as it allows you to perform non-blocking http requests.  If you can live with buffering the http response body into, say, a tempfile or an io.BytesIO instance, then you can just pass that to _FileReader as the fObj argument and call it a day.

I want to stream the http request back to the client connected over
FTP. I guess I could do that with io.BytesIO right? I can't figure out
how to wire it up though. I've added agent.request which is firing
back a twisted.web.client.Response but I'm not sure how to stream the
data from that into the BytesIO object so that _FileReader has a file
like interface to read from.


>
> Hope this helps,
>
> --
> L. Daniel Burr
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From adi at roiban.ro  Fri Mar 20 06:19:10 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 20 Mar 2015 12:19:10 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
 <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
Message-ID: <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>

On 20 March 2015 at 11:16, Paul Wiseman <poalman at gmail.com> wrote:
> On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
>> Hi Paul,
>>
>>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>>
> I want to stream the http request back to the client connected over
> FTP. I guess I could do that with io.BytesIO right? I can't figure out
> how to wire it up though. I've added agent.request which is firing
> back a twisted.web.client.Response but I'm not sure how to stream the
> data from that into the BytesIO object so that _FileReader has a file
> like interface to read from.

Without an example code use on your side I find it hard to help here.
Do you have an http://sscce.org/ for your problem?

Most probably you will need to implemented your own FileReader which
will hook into the response.deliverBody with a protocol which will
forward the data from dataReceived to your FTP data connection...all
this using a consumer/producer API.

Cheers
-- 
Adi Roiban



From poalman at gmail.com  Fri Mar 20 06:47:12 2015
From: poalman at gmail.com (Paul Wiseman)
Date: Fri, 20 Mar 2015 12:47:12 +0000
Subject: [Twisted-Python] custom FTP server is blocking
In-Reply-To: <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>
References: <CACgdh2i4n5CgwiOQ124YeM-Cyqp+3rMwHGFN7cnq5dt=C_Ne0A@mail.gmail.com>
 <3E9E76E8-E3D3-4905-86B1-0003192C2834@me.com>
 <CACgdh2iq5H0v4Za6pd24RmMA91JsVQ+7bAzrZukayLoLCQMB4w@mail.gmail.com>
 <CAFycZ9ekN0bxsyCXujcTwsYLENgKR_7Ynm2Z3P9BiSLkni970w@mail.gmail.com>
Message-ID: <CACgdh2gWoY8Vu=A4r5Q03s7-+HxEak6KD6en8tpy578QQ-GNsw@mail.gmail.com>

On 20 March 2015 at 12:19, Adi Roiban <adi at roiban.ro> wrote:
> On 20 March 2015 at 11:16, Paul Wiseman <poalman at gmail.com> wrote:
>> On 19 March 2015 at 20:38, Louis D. Burr <ldanielburr at me.com> wrote:
>>> Hi Paul,
>>>
>>>> On Mar 19, 2015, at 1:18 PM, Paul Wiseman <poalman at gmail.com> wrote:
>>>>
>> I want to stream the http request back to the client connected over
>> FTP. I guess I could do that with io.BytesIO right? I can't figure out
>> how to wire it up though. I've added agent.request which is firing
>> back a twisted.web.client.Response but I'm not sure how to stream the
>> data from that into the BytesIO object so that _FileReader has a file
>> like interface to read from.
>
> Without an example code use on your side I find it hard to help here.
> Do you have an http://sscce.org/ for your problem?
>
> Most probably you will need to implemented your own FileReader which
> will hook into the response.deliverBody with a protocol which will
> forward the data from dataReceived to your FTP data connection...all
> this using a consumer/producer API.
>

I just wrote an example that shows what I'm trying to do, it runs an
anonymous ftp server on 2121 of the local file system and any file you
try to download show should stream the body of http://www.yahoo.com
instead of the file contents.

There's a couple of reasons I think this doesn't work, I think I need
to return the _FileReader right away so it can begin streaming, but I
don't know how to make it wait for the deferred which is created in
the streamBody function, as this will file once the streaming is
complete.

I also think another problem is that as the stream is written the file
pointer on the BytesIO object will be at the end of the file, so I
guess the reader would need to seek to the right place, then tell to
the end afterwards so the writer continues to stream properly?

I'm not sure how to hook this up!

import io
from twisted.python import log
from twisted.internet import reactor
from twisted.internet.defer import Deferred
from twisted.internet.protocol import Protocol
from twisted.web.client import Agent, ContentDecoderAgent, GzipDecoder
from twisted.protocols.ftp import FTPFactory, FTPRealm,
FTPAnonymousShell, _FileReader
from twisted.cred.portal import Portal
from twisted.cred.checkers import AllowAnonymousAccess, FilePasswordDB
from twisted.internet import defer

agent = ContentDecoderAgent(Agent(reactor), [('gzip', GzipDecoder)])

class StreamWriter(Protocol):
    def __init__(self, finished, stream):
        self.finished = finished
        self.stream = stream

    def dataReceived(self, bytes):
        self.stream.write(bytes)

    def connectionLost(self, reason):
        print 'Finished receiving body:', reason.type, reason.value
        self.finished.callback(None)


def streamBody(response, stream):
    finished = Deferred()
    response.deliverBody(StreamWriter(finished, stream))
    return finished

def openForReading(self, path):
    d = agent.request("GET", "http://www.yahoo.com")

    stream = io.BytesIO()
    d.addCallback(lambda resp: streamBody(resp, stream))
    d.addErrback(log.err)

    return defer.succeed(_FileReader(stream))

def main():

    FTPAnonymousShell.openForReading = openForReading

    p = Portal(FTPRealm('./'),
           [AllowAnonymousAccess(), FilePasswordDB("pass.dat")])

    f = FTPFactory(p)

    reactor.listenTCP(2121, f)
    reactor.run()

if __name__ == "__main__":
    main()


> Cheers
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From rgacote at Appropriatesolutions.com  Fri Mar 20 12:36:54 2015
From: rgacote at Appropriatesolutions.com (Raymond Cote)
Date: Fri, 20 Mar 2015 14:36:54 -0400
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
Message-ID: <D423A16C-51F6-40C8-92AE-1EBC9261EDBB@Appropriatesolutions.com>


> On Mar 18, 2015, at 8:29 AM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Mar 18, 2015, at 8:24 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> 
>> On 18/03/15 10:45, HawkOwl wrote:
>>> Hi,
>>> 
>>> As Python 2.6 has been officially abandoned for a year+ (and will
>>> receive no further official security updates) and Python 2.7 has been
>> 
>> In the past, we've built and deployed a newer Python when this has happened e.g. RHEL4/5. That was a huge pain in the arse, and we don't intend to repeat it. Absent an EPEL package for python27, I suspect many people will do what we intend to do - stop updating Twisted.
>> 
>> Expect to see queries from people on older versions they can't update for some time ;o)
>> 
>> In all seriousness, I guess it depends on how useful this is. Being "in line" with other projects doesn't seem like a useful goal - who cares what Plone does? If it's useful for Twisted, then do it.
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Isn’t the RHEL answer here to just use SCLs to install Python 2.7?
> 
> ---
> Donald Stufft
> PGP: 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

+1 for removal

We have quite a number of Twisted installations on RHEL6 (even RHEL5), but we always install a custom Python — never want to touch the system Python (except for very simple scripts).

Rest of our distributions are on Windows and we’ve been moving legacy code to 2.7 for some time now.
Need to keep up with the security enhancements…

—Ray
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150320/04ca39cc/attachment.sig>

From glyph at twistedmatrix.com  Fri Mar 20 16:49:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Mar 2015 15:49:58 -0700
Subject: [Twisted-Python] __nonzero__ for Deferred
In-Reply-To: <550BFF04.9080009@justinmp.com>
References: <7CDB818B-023B-4FB9-A205-7207DD97003A@twistedmatrix.com>
 <550BFF04.9080009@justinmp.com>
Message-ID: <6C7CDA4C-FEA6-4AA1-BD09-FA05BCD33E1B@twistedmatrix.com>


> On Mar 20, 2015, at 4:05 AM, Justin Mazzola Paluska <jmp at justinmp.com> wrote:
> 
> On 03/18/2015 06:03 PM, Glyph Lefkowitz wrote:
>> I'd like to deprecate and remove __nonzero__ on Deferreds.  Occasionally I see code where someone (maybe even me) does "if d:" where they should have been doing "@d.addCallback def cb(result): if result: ...".
>> 
>> Anybody else have this issue?  Objections?
> 
> How does this interact with code that uses None as a sentinel?
> 
> I have code where I shoot off a recurring process, but want to wait when the first run completes.  I do something along the lines of:
> 
> 
> d = Deferred()
> 
> ... setup everything so it calls my callback every time the loop completes ...
> 
> if d:
>    d.callback("first time completed!")
>    d = None
> 
> while most of my code uses the check "if d is not None", not all of it does (especially the older code).
>    --Justin

That's why we would have a warning first, so you'd have an opportunity to fix it.  Given that Deferred is so central and widely used, we might want to wait more than the required minimum of one release before turning that warning into an exception.

The "right" way to check against None is always to use "if x is not None", not "if x"; there are lots of other reasons.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150320/be5cf887/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Mar 21 09:29:06 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 21 Mar 2015 23:29:06 +0800
Subject: [Twisted-Python] Twisted 15.1 feedback
Message-ID: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>

Hi everyone,

It's been about two weeks now -- does anyone have any feedback on whether 15.1 worked/didn't work/caused a resonance cascade?

If you missed the announcement, tarballs can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS file can be found at http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .

Once I'm happy that it's not completely broken, I'll push 15.1 out the door proper, and get 15.2 on the way... :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150321/a60a9238/attachment.sig>

From chriswwolfe at gmail.com  Sat Mar 21 09:41:39 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Sat, 21 Mar 2015 10:41:39 -0500
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
Message-ID: <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>

Hawkowl,

The new functionality for installing optional dependencies does not on
Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).

This is due to two things:
1. some of the optional dependencies do not support python3
2. setup3.py isn't using the optional extras built in the main setup.py
file.

Thanks!
Chris (herrwolfe)

On Sat, Mar 21, 2015 at 10:29 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi everyone,
>
> It's been about two weeks now -- does anyone have any feedback on whether
> 15.1 worked/didn't work/caused a resonance cascade?
>
> If you missed the announcement, tarballs can be found at
> http://twistedmatrix.com/Releases/pre/15.1.0pre1/ , and the full NEWS
> file can be found at
> http://twistedmatrix.com/Releases/pre/15.1.0pre1/NEWS.txt .
>
> Once I'm happy that it's not completely broken, I'll push 15.1 out the
> door proper, and get 15.2 on the way... :)
>
> - Hawkie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150321/da82f121/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Mar 21 10:53:10 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Mar 2015 16:53:10 -0000
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
 <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
Message-ID: <20150321165310.6423.1657664535.divmod.xquotient.19@top>

On 03:41 pm, chriswwolfe at gmail.com wrote:
>Hawkowl,
>
>The new functionality for installing optional dependencies does not on
>Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).
>
>This is due to two things:
>1. some of the optional dependencies do not support python3
>2. setup3.py isn't using the optional extras built in the main setup.py
>file.

Are these regressions compared to 15.0?  I don't think they are because 
these features are brand new (on Python 2) in 15.0.  #7807 should be 
fixed (and hopefully for 15.2) but it doesn't sound like it's a blocking 
issue for completing the 15.1 release because it doesn't remove 
something that was included in 15.0.

Jean-Paul



From chriswwolfe at gmail.com  Sat Mar 21 11:24:18 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Sat, 21 Mar 2015 12:24:18 -0500
Subject: [Twisted-Python] Twisted 15.1 feedback
In-Reply-To: <20150321165310.6423.1657664535.divmod.xquotient.19@top>
References: <8662592F-77DB-41E9-AC05-2658C8A3074A@atleastfornow.net>
 <CAEKSqks07LfZqSu9DzJXmhYeGs7Cy7+s-Q70bX8uZU30s8dkcg@mail.gmail.com>
 <20150321165310.6423.1657664535.divmod.xquotient.19@top>
Message-ID: <CAEKSqku-T+HQ7PDP0S6oeTr9jSb8RYPJVTXK5wyF9OC2J3_WXA@mail.gmail.com>

Jean-Paul,

You are correct. No, this is not a regression compared to to 15.0. I missed
the words 'resonance cascade'.

Thanks,
Chris

On Sat, Mar 21, 2015 at 11:53 AM, <exarkun at twistedmatrix.com> wrote:

> On 03:41 pm, chriswwolfe at gmail.com wrote:
>
>> Hawkowl,
>>
>> The new functionality for installing optional dependencies does not on
>> Python3 (ticket: https://twistedmatrix.com/trac/ticket/7807).
>>
>> This is due to two things:
>> 1. some of the optional dependencies do not support python3
>> 2. setup3.py isn't using the optional extras built in the main setup.py
>> file.
>>
>
> Are these regressions compared to 15.0?  I don't think they are because
> these features are brand new (on Python 2) in 15.0.  #7807 should be fixed
> (and hopefully for 15.2) but it doesn't sound like it's a blocking issue
> for completing the 15.1 release because it doesn't remove something that
> was included in 15.0.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150321/e7d8e5df/attachment-0002.html>

From adi at roiban.ro  Sat Mar 21 16:45:08 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 21 Mar 2015 22:45:08 +0000
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
Message-ID: <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>

On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I would like to ask why the  twisted branch name convention ask for
> trailing ticket ID.
>
> Why not leading ID?
>
> some-text-1234 vs 1234-some-text
>
> -----
>
> The default git auto completion script only does search at the start
> of the string.
>
> When I work on a ticket I know the ticket number but I always forget
> the name of the branch... so I have to search it inside the Trac
> ticket.
>
> It is not a big deal and I know that there are greater annoyances in
> Twisted dev process but I am curios if there is someone else who don't
> like this convention and if there is any chance of changing it.
>
>
> When we started this it seemed like the descriptive name would be easier to
> remember than the opaque ticket number.  I agree that was the wrong call,
> oddly enough, I do remember the ticket numbers more.  That said, we can
> switch as soon as all the currently outstanding branches are landed and
> deleted: https://twistedmatrix.com/trac/browser/branches ;-)

Which are the "all currently outstanding branches" ?

I see a lot of branched older than 5 years... with 210 branches older
than 2 years :(

Why do we need to wait for them?

-- 
Adi Roiban



From glyph at twistedmatrix.com  Sat Mar 21 18:10:23 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Mar 2015 17:10:23 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
Message-ID: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>


> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> I would like to ask why the  twisted branch name convention ask for
>> trailing ticket ID.
>> 
>> Why not leading ID?
>> 
>> some-text-1234 vs 1234-some-text
>> 
>> -----
>> 
>> The default git auto completion script only does search at the start
>> of the string.
>> 
>> When I work on a ticket I know the ticket number but I always forget
>> the name of the branch... so I have to search it inside the Trac
>> ticket.
>> 
>> It is not a big deal and I know that there are greater annoyances in
>> Twisted dev process but I am curios if there is someone else who don't
>> like this convention and if there is any chance of changing it.
>> 
>> 
>> When we started this it seemed like the descriptive name would be easier to
>> remember than the opaque ticket number.  I agree that was the wrong call,
>> oddly enough, I do remember the ticket numbers more.  That said, we can
>> switch as soon as all the currently outstanding branches are landed and
>> deleted: https://twistedmatrix.com/trac/browser/branches ;-)
> 
> Which are the "all currently outstanding branches" ?
> 
> I see a lot of branched older than 5 years... with 210 branches older
> than 2 years :(
> 
> Why do we need to wait for them?


Sorry, that was not a very clear comment :).

What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.

For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150321/fe0e8191/attachment-0002.html>

From trac at twistedmatrix.com  Sun Mar 22 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Mar 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1427004315.51.4096312344064254174@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150322/02a48b92/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Mar 22 05:53:05 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Mar 2015 11:53:05 -0000
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
Message-ID: <20150322115305.6423.106740246.divmod.xquotient.21@top>

On 12:10 am, glyph at twistedmatrix.com wrote:
>
>For what it's worth, many of those branches can be removed.  We used to 
>have a script that automated this deletion, but I can't find it now 
>:-\.

It's part of twisted-trac-integration.
>-glyph



From radix at twistedmatrix.com  Sun Mar 22 09:35:16 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 22 Mar 2015 10:35:16 -0500
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
Message-ID: <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>


> On Mar 21, 2015, at 7:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>> 
>>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>> 
>>> Hi,
>>> 
>>> I would like to ask why the  twisted branch name convention ask for
>>> trailing ticket ID.
>>> 
>>> Why not leading ID?
>>> 
>>> some-text-1234 vs 1234-some-text
>>> 
>>> -----
>>> 
>>> The default git auto completion script only does search at the start
>>> of the string.
>>> 
>>> When I work on a ticket I know the ticket number but I always forget
>>> the name of the branch... so I have to search it inside the Trac
>>> ticket.
>>> 
>>> It is not a big deal and I know that there are greater annoyances in
>>> Twisted dev process but I am curios if there is someone else who don't
>>> like this convention and if there is any chance of changing it.
>>> 
>>> 
>>> When we started this it seemed like the descriptive name would be easier to
>>> remember than the opaque ticket number.  I agree that was the wrong call,
>>> oddly enough, I do remember the ticket numbers more.  That said, we can
>>> switch as soon as all the currently outstanding branches are landed and
>>> deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)
>> 
>> Which are the "all currently outstanding branches" ?
>> 
>> I see a lot of branched older than 5 years... with 210 branches older
>> than 2 years :(
>> 
>> Why do we need to wait for them?
> 
> 
> Sorry, that was not a very clear comment :).
> 
> What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.
> 
> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
> 

It’s probably also possible to just update the automation to support either format so you don’t have to do a big migration or block on an empty branch list.


-radix
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150322/cad23dbf/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Mar 22 17:10:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Mar 2015 16:10:16 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <20150322115305.6423.106740246.divmod.xquotient.21@top>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
 <20150322115305.6423.106740246.divmod.xquotient.21@top>
Message-ID: <AE85364B-1455-4560-977F-711CF0AC0388@twistedmatrix.com>


> On Mar 22, 2015, at 04:53, exarkun at twistedmatrix.com wrote:
> 
> On 12:10 am, glyph at twistedmatrix.com wrote:
>> 
>> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
> 
> It's part of twisted-trac-integration.

Right! I forgot that's not on Github yet.

That's <https://launchpad.net/twisted-trac-integration <https://launchpad.net/twisted-trac-integration>>, specifically <http://bazaar.launchpad.net/~twisted-dev/twisted-trac-integration/trunk/view/head:/tools/cleanup-remote.py <http://bazaar.launchpad.net/~twisted-dev/twisted-trac-integration/trunk/view/head:/tools/cleanup-remote.py>>

I ran it like this:

python cleanup-remote.py Twisted svn+ssh://svn.twistedmatrix.com/svn/Twisted/branches https://twistedmatrix.com/trac/ <https://twistedmatrix.com/trac/>

and it's still running - there are quite a few branches to go through and this wifi isn't super fast :-).

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150322/fbd06cfc/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Mar 22 17:10:58 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Mar 2015 16:10:58 -0700
Subject: [Twisted-Python] Branch name convention
In-Reply-To: <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>
References: <CAFycZ9dJMR8B6VDMtL8jxbSGnGxe1GRwtgcdL2Cp--UEK-pE+g@mail.gmail.com>
 <877B0102-76CE-42AA-A46B-9486EDE61FB9@twistedmatrix.com>
 <CAFycZ9ckkM=JXCHV=jvPjd4kTmKVyDyAVOb9UP2UiyXBfTY5Pw@mail.gmail.com>
 <721071F7-D1F8-435D-AC51-E3D8B4F6EE3B@twistedmatrix.com>
 <9E73FBDC-8968-43F1-98E9-21C4136E7049@twistedmatrix.com>
Message-ID: <FC7F5534-BE37-4664-9739-80AADD57B89C@twistedmatrix.com>


> On Mar 22, 2015, at 08:35, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> 
>> On Mar 21, 2015, at 7:10 PM, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>> 
>>> On Mar 21, 2015, at 3:45 PM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>> 
>>> On 16 March 2015 at 18:53, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>>> 
>>>> On Mar 16, 2015, at 11:20 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>>>> 
>>>> Hi,
>>>> 
>>>> I would like to ask why the  twisted branch name convention ask for
>>>> trailing ticket ID.
>>>> 
>>>> Why not leading ID?
>>>> 
>>>> some-text-1234 vs 1234-some-text
>>>> 
>>>> -----
>>>> 
>>>> The default git auto completion script only does search at the start
>>>> of the string.
>>>> 
>>>> When I work on a ticket I know the ticket number but I always forget
>>>> the name of the branch... so I have to search it inside the Trac
>>>> ticket.
>>>> 
>>>> It is not a big deal and I know that there are greater annoyances in
>>>> Twisted dev process but I am curios if there is someone else who don't
>>>> like this convention and if there is any chance of changing it.
>>>> 
>>>> 
>>>> When we started this it seemed like the descriptive name would be easier to
>>>> remember than the opaque ticket number.  I agree that was the wrong call,
>>>> oddly enough, I do remember the ticket numbers more.  That said, we can
>>>> switch as soon as all the currently outstanding branches are landed and
>>>> deleted: https://twistedmatrix.com/trac/browser/branches <https://twistedmatrix.com/trac/browser/branches> ;-)
>>> 
>>> Which are the "all currently outstanding branches" ?
>>> 
>>> I see a lot of branched older than 5 years... with 210 branches older
>>> than 2 years :(
>>> 
>>> Why do we need to wait for them?
>> 
>> 
>> Sorry, that was not a very clear comment :).
>> 
>> What I mean is, any change to the naming convention needs to include a plan for addressing the existing branches, so that any automation which relies on the current branch naming format (mostly the post-commit hook) can be updated at the appropriate time.
>> 
>> For what it's worth, many of those branches can be removed.  We used to have a script that automated this deletion, but I can't find it now :-\.
>> 
> 
> It’s probably also possible to just update the automation to support either format so you don’t have to do a big migration or block on an empty branch list.

That would also be fine; the set of old branches is quite finite so we don't need such tooling to be terribly elaborate :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150322/e3b5bfe9/attachment-0002.html>

From adi at roiban.ro  Mon Mar 23 08:05:56 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 23 Mar 2015 14:05:56 +0000
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
Message-ID: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>

When running the pyhon3 tests I see many Unhandled Error
ex:
https://buildbot.twistedmatrix.com/builders/python-3.3-tests/builds/2736/steps/shell/logs/stdio

This looks bad. Is this a bug in the test runner or a bug in the code?

Thanks!
-- 
Adi Roiban



From hawkowl at atleastfornow.net  Mon Mar 23 08:25:03 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 23 Mar 2015 22:25:03 +0800
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
Message-ID: <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>


> On 23 Mar 2015, at 22:05, Adi Roiban <adi at roiban.ro> wrote:
> 
> When running the pyhon3 tests I see many Unhandled Error
> ex:
> https://buildbot.twistedmatrix.com/builders/python-3.3-tests/builds/2736/steps/shell/logs/stdio
> 
> This looks bad. Is this a bug in the test runner or a bug in the code?
> 
> Thanks!
> --
> Adi Roiban

Hi Adi,

It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150323/b45cfc6e/attachment.sig>

From mithrandi at mithrandi.net  Mon Mar 23 09:29:32 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 23 Mar 2015 17:29:32 +0200
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
Message-ID: <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>

On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.

Note that "Unhandled error in Deferred" is the default log message for
log.err, and a lot (most?) of the code that logs a failure calls
log.err without passing a different message.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From hello at techfolk.co.uk  Tue Mar 24 03:07:41 2015
From: hello at techfolk.co.uk (hello from techfolk)
Date: Tue, 24 Mar 2015 09:07:41 -0000
Subject: [Twisted-Python] JOB: Senior and Lead Engineers | ClusterHQ |
	Bristol, UK | relocation offered
Message-ID: <57782324d09458bfcae140c224d70e3a@mail.gmail.com>

Dear Twisted Matrix community,

We hope that is ok to share jobs in this manner as we urgently need your
skills in event-driven asynchronous systems programming.

In particular, we need you to help solve the kinds of containerisation and
data management problems that arise from deploying modern applications in
a micro-service environment, integrating with Docker, Mesos, CoreOS etc.

ClusterHQ is a recently funded open source provider preparing for the
first major release of the Flocker container volume management software
this summer. It's interesting work in a very topical area, collaborating
on a team that includes recognised Twisted and Open ZFS contributors. We
are building the engineering team here in Bristol UK - fast becoming a
recognised hub of cloud computing, and a city which offers a high quality
of life. Discretionary relocation assistance is available.

You can read more at:
http://techfolk.co.uk/current-jobs/python-cc-scala-go-software-engineer-ce
ntral-bristol-tl69

We'd be glad to take questions and tell you more. Alternatively, please
free to contact me directly via the methods below.

techfolk is an independent recruitment specialist working for ClusterHQ.

Thanks for your time,
Andrew


Andrew Gifford, Founder
techfolk Ltd
+44 (0)117 318 2447 | +44 (0)7710 794225
hello at techfolk.co.uk | http://techfolk.co.uk |
http://twitter.com/we_are_techfolk | Skype: Andrew.Gifford1978
techfolk Ltd. 96 Belmont Road, Bristol, BS6 5AU, UK



From d.vinella at gmail.com  Tue Mar 24 03:49:46 2015
From: d.vinella at gmail.com (Dario Vinella)
Date: Tue, 24 Mar 2015 10:49:46 +0100
Subject: [Twisted-Python] LoopingCall.withCount countCallable called with 0
Message-ID: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>

Hi all,

I found an odd behavior using a LoopingCall.withCount with a very small
interval (0.02 sec): sometimes the countCallable is called with 0 as
argument and it looks like the now - _realLastTime is smaller than the
looping interval.

Here you can find the very simple code I use to reproduce the "anomaly",
with a main loopingCall and another one that prints its internals

https://gist.github.com/dvinella/31d94f9dd0e47586658d

and here an extract of the logs it produces

https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375

The doc for the withCount states that the argument should be normally 1,
higher if the reactor blocks for some reason, but it doesn't say anything
about 0.
The beahavior is quite misleading since the loop seems to anticipate the
interval timeout, saying "I've been called, but I should have not been
called"

I must add that the anomaly doesn't appear right at the start, but after
tens of seconds, mostly when the system is under medium/heavy load.

So is it only a documentation issue for an exceptional case, due to timers
imprecision, that should be handled at higher levels, or is it a real issue?

dario
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150324/b5384e20/attachment-0002.html>

From p.mayers at imperial.ac.uk  Tue Mar 24 07:03:58 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Mar 2015 13:03:58 +0000
Subject: [Twisted-Python] Removing Python 2.6 Support after Twisted 15.1
In-Reply-To: <550B6887.4020703@ripton.net>
References: <90A93245-B89C-4360-A3BF-B9A456A7F19C@atleastfornow.net>
 <55096E7F.2000001@imperial.ac.uk>
 <FBD15BFD-7A30-491D-A603-86C5F80A1218@stufft.io>
 <00484D72-0D1D-4C6C-B88E-94B546DB1B46@twistedmatrix.com>
 <550ABB9E.8070800@imperial.ac.uk> <550B6887.4020703@ripton.net>
Message-ID: <551160BE.7050101@imperial.ac.uk>

On 20/03/15 00:23, David Ripton wrote:
> On 03/19/2015 08:05 AM, Phil Mayers wrote:
>> On 18/03/15 23:57, Glyph Lefkowitz wrote:
>>
>>> Rather than just suggest we preserve the status quo and stay on 2.6
>>> forever to do indefinite free work to support Red Hat's obsolescence
>>
>> You *definitely* shouldn't do that. Push back on RedHat, and tell
>> customers to push back on RedHat. I say this to other projects.
>
> Red Hat supports old versions of RHEL forever because they have
> customers that want that (because they have legacy apps that they want
> to keep working with minimal maintenance, but who still want security
> patches), and are willing to pay for it.  It's a good thing that someone
> provides that option, even if we don't all need it.

Absolutely, and we use it for that reason. But since RedHat charge for 
this support, it seems fair they bear the maintenance burden ;o)

"Push back" could be "ask for an appropriate SCL" or some other way of 
providing newer packages without violating the stability. The "samba" 
versus "samba3x" packages on RHEL6 are a good example.

>
> That doesn't mean Twisted needs to support old versions of RHEL forever.
>   RHEL 7 has been out for a while, and comes with Python 2.7 as the
> default.  So even if Twisted drops support for Python 2.6, it'll still
> work on RHEL.  (Just not on old versions of RHEL.)
>
> Furthermore, SCL makes Python 2.7 available (in /opt) on RHEL 5 and 6
> and CentOS 6, without users needing to build it themselves.  So even
> those who are stuck with old versions can install SCL, then use pip to
> install new Twisted.
>
> IOW, I wouldn't worry about it.  Drop support for Python 2.6 when it
> makes sense for Twisted.

+1



From glyph at twistedmatrix.com  Tue Mar 24 16:18:38 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Mar 2015 15:18:38 -0700
Subject: [Twisted-Python] LoopingCall.withCount countCallable called
	with 0
In-Reply-To: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
References: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
Message-ID: <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>


> On Mar 24, 2015, at 2:49 AM, Dario Vinella <d.vinella at gmail.com> wrote:
> 
> Hi all,
> 
> I found an odd behavior using a LoopingCall.withCount with a very small interval (0.02 sec): sometimes the countCallable is called with 0 as argument and it looks like the now - _realLastTime is smaller than the looping interval.

So, this can definitely happen if time goes backwards, but it has to go backwards between the time that the reactor starts executing timed calls and the time that LoopingCall looks at the timestamp to compute what the value passed to withCount should be.  If it were smaller than the LoopingCall's time-to-run 

> Here you can find the very simple code I use to reproduce the "anomaly", with a main loopingCall and another one that prints its internals
> 
> https://gist.github.com/dvinella/31d94f9dd0e47586658d <https://gist.github.com/dvinella/31d94f9dd0e47586658d>

An even more straightforward way to figure out if it's a problem with your machine would be this:

import time
from itertools import count

then = time.time()
for ever in count():
    now = time.time()
    print("{},{}".format(ever, (now - then) * 10e6))
    then = now

It would be good to look at how many of these numbers are negative.

> and here an extract of the logs it produces
> 
> https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375 <https://gist.github.com/dvinella/8cfdce0b9f5fdda7b375>
> 
> The doc for the withCount states that the argument should be normally 1, higher if the reactor blocks for some reason, but it doesn't say anything about 0.
> The beahavior is quite misleading since the loop seems to anticipate the interval timeout, saying "I've been called, but I should have not been called"

That seems right.  I think there's a real problem here, since physical clocks do just fail, and sometimes NTP slew has to happen.  LoopingCall.withCount has a clear opportunity to notice that time has gone backwards, and can just skip that call.  This is assuming that time has gone backwards by a tiny amount for a brief period of time, though, and does not address the more complex issue of "the clock was set some significant distance into the past".  LoopingCall still isn't going to be able to deal with large amounts of clock drift, we'd need a monotonic version for that :).

> I must add that the anomaly doesn't appear right at the start, but after tens of seconds, mostly when the system is under medium/heavy load.

Even seriously broken clocks don't go backwards a lot. ;-)

> So is it only a documentation issue for an exceptional case, due to timers imprecision, that should be handled at higher levels, or is it a real issue?

I think it's a real issue.

The point of withCount is supposed to be that it keeps track of how far into a sequence you should advance, for example, into the frames of an animation.  If your callback advances by N frames each time it's called, it's supposed to be up-to-date with "real time".

Assuming that the reason time is going backwards is that your ntp daemon is correcting your clock, every time withCount's callback gets called with 0, _realLastTime gets updated, which means that the "frame" we should have advanced is simply lost, and it will slowly fall behind real time each time this happens.

So while the calls with 0 themselves are a minor annoyance, they are a symptom of a problem that makes it impossible for LoopingCall to do its job properly in some cases, and should definitely be fixed.

Thanks for reporting!  Can you open a ticket?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150324/b19af633/attachment-0002.html>

From burak.arslan at arskom.com.tr  Wed Mar 25 02:35:29 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Wed, 25 Mar 2015 10:35:29 +0200
Subject: [Twisted-Python] Reporting total traffic that goes through an SSL
	socket
Message-ID: <55127351.9060204@arskom.com.tr>

Hello All,

I'm using twisted for implementing a custom protocol via SSL.

I've been wondering though, is there an easy way of counting the number
of bytes that go in and out of the socket, including SSL overhead? I can
easily count what I'm reading and I'm writing, but not what actually
goes through the pipe.

I do realize that I won't be counting packet replays and such, that's
fine for the time being.

Best regards,
Burak




From glyph at twistedmatrix.com  Wed Mar 25 14:20:30 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Mar 2015 13:20:30 -0700
Subject: [Twisted-Python] Reporting total traffic that goes through an
	SSL socket
In-Reply-To: <55127351.9060204@arskom.com.tr>
References: <55127351.9060204@arskom.com.tr>
Message-ID: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>


> On Mar 25, 2015, at 1:35 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> I'm using twisted for implementing a custom protocol via SSL.
> 
> I've been wondering though, is there an easy way of counting the number
> of bytes that go in and out of the socket, including SSL overhead?

Well, "easy" is relative :).

Internally in Twisted, TLS is implemented as a wrapper protocol that sits on a low-level transport, and acts as a transport for your protocol, and a protocol for the TCP (or other stream-based) transport.  Older APIs like connectSSL, listenSSL, and .startTLS on a protocol somewhat obscure this, and there's no nice way to expose it.

However, there is a ticket in progress: https://twistedmatrix.com/trac/ticket/5642 <https://twistedmatrix.com/trac/ticket/5642> which has some code that demonstrates how to make the TLS stuff "purely" a wrapper all the way from the endpoint to your application code.

What you need to do is write your own wrapper protocol and interpose it below the TLS transport (act as the transport for the TLS protocol, and the protocol for the TCP transport).

If it is not obvious how to do this from the documentation for twisted.protocols.policies.ProtocolWrapper and the code in the aforementioned ticket, I (or someone else) can elaborate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150325/2070885d/attachment-0004.html>

From christianzlong2 at gmail.com  Wed Mar 25 16:01:55 2015
From: christianzlong2 at gmail.com (Christian Long)
Date: Wed, 25 Mar 2015 17:01:55 -0500
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
Message-ID: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>

I'm writing up my experiences porting a Twisted application from Linux
to Windows. Part 1 is up, covering how to install the requirements.

http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html

Part 2 will cover running Twisted as a Windows service.

Part 3 will cover making your own binary distributions using wheel.

Python packaging has improved a lot in recent years, especially on
Windows. Glyph, thank you for pypiwin32.

I'm trying to make these instructions as up-to-date as possible. Give
it a look if you're interested, and please suggest improvements.

Thanks,

Christian Long



From glyph at twistedmatrix.com  Wed Mar 25 14:20:30 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Mar 2015 13:20:30 -0700
Subject: [Twisted-Python] Reporting total traffic that goes through an
	SSL socket
In-Reply-To: <55127351.9060204@arskom.com.tr>
References: <55127351.9060204@arskom.com.tr>
Message-ID: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>


> On Mar 25, 2015, at 1:35 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> I'm using twisted for implementing a custom protocol via SSL.
> 
> I've been wondering though, is there an easy way of counting the number
> of bytes that go in and out of the socket, including SSL overhead?

Well, "easy" is relative :).

Internally in Twisted, TLS is implemented as a wrapper protocol that sits on a low-level transport, and acts as a transport for your protocol, and a protocol for the TCP (or other stream-based) transport.  Older APIs like connectSSL, listenSSL, and .startTLS on a protocol somewhat obscure this, and there's no nice way to expose it.

However, there is a ticket in progress: https://twistedmatrix.com/trac/ticket/5642 <https://twistedmatrix.com/trac/ticket/5642> which has some code that demonstrates how to make the TLS stuff "purely" a wrapper all the way from the endpoint to your application code.

What you need to do is write your own wrapper protocol and interpose it below the TLS transport (act as the transport for the TLS protocol, and the protocol for the TCP transport).

If it is not obvious how to do this from the documentation for twisted.protocols.policies.ProtocolWrapper and the code in the aforementioned ticket, I (or someone else) can elaborate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150325/2070885d/attachment-0005.html>

From d.vinella at gmail.com  Thu Mar 26 03:06:38 2015
From: d.vinella at gmail.com (Dario Vinella)
Date: Thu, 26 Mar 2015 10:06:38 +0100
Subject: [Twisted-Python] LoopingCall.withCount countCallable called
	with 0
In-Reply-To: <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>
References: <CALTAbW=PEr3sn5E8bcCF13w-injhC9ojCJVrNb1biFRN7QNMOw@mail.gmail.com>
 <7F261C23-3DCA-4CA9-BF01-37C767E59988@twistedmatrix.com>
Message-ID: <CALTAbWn8LqUnkpLcMVb50jo5Nv0XweOWkrdfDaK4HQxDSXOn+A@mail.gmail.com>

2015-03-24 23:18 GMT+01:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

> It would be good to look at how many of these numbers are negative.
>

Not a single one, running the script for a couple of hours, under any
condition


>
> That seems right.  I think there's a real problem here, since physical
> clocks do just fail, and sometimes NTP slew has to happen.
> LoopingCall.withCount has a clear opportunity to notice that time has gone
> backwards, and can just skip that call.  This is assuming that time has
> gone backwards by a tiny amount for a brief period of time, though, and
> does not address the more complex issue of "the clock was set some
> significant distance into the past".  LoopingCall still isn't going to be
> able to deal with large amounts of clock drift, we'd need a monotonic
> version for that :).
>
> I must add that the anomaly doesn't appear right at the start, but after
> tens of seconds, mostly when the system is under medium/heavy load.
>
>
> Even seriously broken clocks don't go backwards a *lot*. ;-)
>
>
I can reproduce the anomaly with my previous script on my linux machine
with or without ntp (systemd-timesyncd) enabled and on a macbook (with
kqreactor).
The only difference is that since the mac is beefier than the linux box I
need to stress it more to trigger the anomaly (a couple of vms + some heavy
apps)
I think the ntp cause can be excluded since the issue is reproducible
without it and furthermore because once triggered the anomaly happens too
frequently to think the ntpd applies so many (negative) fixes in such short
time.
Here it is a log where I print a dot when the calls arg is 1, the value if
not 1, each dot is separated by 0.02s

https://gist.github.com/dvinella/73e5e45a04c428f037bf


> Thanks for reporting!  Can you open a ticket?
>

Sure, I'll open it!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150326/b323bfab/attachment-0002.html>

From laurens at daemon.be  Thu Mar 26 12:18:29 2015
From: laurens at daemon.be (Laurens Vets)
Date: Thu, 26 Mar 2015 11:18:29 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every 5
	minutes
Message-ID: <f594959b983017043e9def26aaeabd11@daemon.be>

Hello,

I'm trying to get to know the Twisted framework by extending the 
ircLogBot.py example. I want to be able to get a list of all names in a 
channel (by sending NAMES) and I want to rerun this every 5 minutes.

I've been able to get the NAMES on a channel join by doing this in 
LogBot:

def joined(self, channel):
     self.names(channel)

def names(self, channel):
     self.sendLine("NAMES %s" % channel)

def irc_unknown(self, prefix, command, params):
     if command == 'RPL_NAMREPLY':
         self.handle_namereply(*params)

def handle_namereply(self, myname, channeltype, channelname, users):
     self.logger.log("Handling namereply %r %r %r %r" % (myname, 
channeltype, channelname, users))

The problem I face is that I have no idea where to put a LoopingCall to 
run this same command every 5 minutes. Where would be the best place to 
place this?

Thanks in advance!



From burak.arslan at arskom.com.tr  Thu Mar 26 12:20:06 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Thu, 26 Mar 2015 20:20:06 +0200
Subject: [Twisted-Python] Reporting total traffic that goes through an
 SSL socket
In-Reply-To: <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>
References: <55127351.9060204@arskom.com.tr>
 <D26A0921-0A48-4711-BAC1-5D9ABA49A9BE@twistedmatrix.com>
Message-ID: <55144DD6.90201@arskom.com.tr>

Hey Glyph,

On 03/25/15 22:20, Glyph Lefkowitz wrote:
>
> However, there is a ticket in
> progress: https://twistedmatrix.com/trac/ticket/5642 which has some
> code that demonstrates how to make the TLS stuff "purely" a wrapper
> all the way from the endpoint to your application code.
>
> What you need to do is write your own wrapper protocol and interpose
> it below the TLS transport (act as the transport for the TLS protocol,
> and the protocol for the TCP transport).
>
> If it is not obvious how to do this from the documentation for
> twisted.protocols.policies.ProtocolWrapper and the code in the
> aforementioned ticket, I (or someone else) can elaborate.
>

Thanks a bunch for the pointers, let me see what I can come up with.

Best regards,
Burak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150326/d1c6706c/attachment-0002.html>

From adi at roiban.ro  Thu Mar 26 12:24:53 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 26 Mar 2015 18:24:53 +0000
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
In-Reply-To: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
References: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
Message-ID: <CAFycZ9e1nSU7=KeqHWxDivuFxkgm-Mw5E7dvW8UnPQo6v4u8cg@mail.gmail.com>

Many thanks!

I find it of great help and happy to see more people talking about
Microsoft Visual C++ Compiler for Python 2.7.

Recently I had tried to fix a bug in iocp support and I failed to
build IOCP module on windows. I will try it again using your steps.

Looking forward for next posts!

On 25 March 2015 at 22:01, Christian Long <christianzlong2 at gmail.com> wrote:
> I'm writing up my experiences porting a Twisted application from Linux
> to Windows. Part 1 is up, covering how to install the requirements.
>
> http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html
>
> Part 2 will cover running Twisted as a Windows service.
>
> Part 3 will cover making your own binary distributions using wheel.
>
> Python packaging has improved a lot in recent years, especially on
> Windows. Glyph, thank you for pypiwin32.
>
> I'm trying to make these instructions as up-to-date as possible. Give
> it a look if you're interested, and please suggest improvements.
>
> Thanks,
>
> Christian Long
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Adi Roiban



From glyph at twistedmatrix.com  Thu Mar 26 16:56:45 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Mar 2015 15:56:45 -0700
Subject: [Twisted-Python] Twisted on Windows, 2015 edition
In-Reply-To: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
References: <CAP3KJdiK=DTg9FKWJkc5UUvo+cymk8sKXjO6ek83AupH2TJpDA@mail.gmail.com>
Message-ID: <F1F9A1CE-771D-4A86-BF8D-50985B0244D1@twistedmatrix.com>

> 
> On Mar 25, 2015, at 3:01 PM, Christian Long <christianzlong2 at gmail.com> wrote:
> 
> I'm writing up my experiences porting a Twisted application from Linux
> to Windows. Part 1 is up, covering how to install the requirements.
> 
> http://www.christianlong.com/blog/twisted-on-windows-2015-edition.html
> 
> Part 2 will cover running Twisted as a Windows service.
> 
> Part 3 will cover making your own binary distributions using wheel.
> 
> Python packaging has improved a lot in recent years, especially on
> Windows. Glyph, thank you for pypiwin32.

Thank you SO much for doing this, Christian.  I have had a half-finished draft of a blog post of this type for quite some time, which I have been feeling bad about not finishing.  Ever since cyli's tutorials fell out of date, we have been lacking something like this.

I haven't had time to review thoroughly, but it looks very good from a quick skim.

As you're writing these instructions, don't be shy about filing bugs for things that should work differently or better on Windows.  We should have documentation of the state of the art but we should also be striving to improve.

I am particularly looking forward to Part 2 - I'd really like to have our Windows buildbots come up automatically on boot, since I still VNC across a transcontinental network link every time one of them reboots ;-).

-glyph




From exarkun at twistedmatrix.com  Sat Mar 28 10:22:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Mar 2015 16:22:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
Message-ID: <20150328162226.6423.210098794.divmod.xquotient.61@top>

Hello all,

The Twisted issue tracker needs someone to pay attention to it for spam 
content and clean up that content.  I've been taking care of this for a 
while now but I'm going to step back from this position soon.

These days spam is primarily submitted as new tickets.  When a spam 
ticket is filed, it needs to be deleted.  There's a form in the trac web 
interface for deleting tickets.  Access needs to be specially granted, 
so you need a trac account to volunteer for this role.

Trac is configured with some automatic spam filtering software.  It 
catches some, but obviously not all, spam submissions.

The trac rss feed can be used to monitor new content for spam.  Total 
time commitment for this job is pretty minimal (perhaps a few minutes a 
week) but timely action on spam is preferred.

It's probably also possible for this responsibility to shared between 
multiple people (divided up however those people find works).

I'll continue covering this role for another week but after that I'll 
stop - so please volunteer before then!

Thanks,
Jean-Paul



From hawkowl at atleastfornow.net  Sat Mar 28 10:29:23 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 29 Mar 2015 00:29:23 +0800
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150328162226.6423.210098794.divmod.xquotient.61@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
Message-ID: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>

Hi exarkun,

I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and I'm usually around.

I'd also like to be able to reset passwords on trac -- there's been a few instances where people aren't able to reset their password and people with the power haven't been around.

- hawkie

> On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> 
> Hello all,
> 
> The Twisted issue tracker needs someone to pay attention to it for spam content and clean up that content.  I've been taking care of this for a while now but I'm going to step back from this position soon.
> 
> These days spam is primarily submitted as new tickets.  When a spam ticket is filed, it needs to be deleted.  There's a form in the trac web interface for deleting tickets.  Access needs to be specially granted, so you need a trac account to volunteer for this role.
> 
> Trac is configured with some automatic spam filtering software.  It catches some, but obviously not all, spam submissions.
> 
> The trac rss feed can be used to monitor new content for spam.  Total time commitment for this job is pretty minimal (perhaps a few minutes a week) but timely action on spam is preferred.
> 
> It's probably also possible for this responsibility to shared between multiple people (divided up however those people find works).
> 
> I'll continue covering this role for another week but after that I'll stop - so please volunteer before then!
> 
> Thanks,
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150329/5c8d17e5/attachment.sig>

From jerryguitarist at gmail.com  Sat Mar 28 10:38:58 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Sat, 28 Mar 2015 22:08:58 +0530
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>

Hello Mr. exarkun!

I would love to help out with this. I am from India. I have been making
some beginner bitesized contributions to Twisted (you have reviewed and
merged some of them) and I am looking forward to contribute in any way that
I possibly can. Please let me know what you think! Also, I'll be coming to
PyCon in Montreal this year and I hope to see you and learn from you there!

Regards,
Eeshan Garg

On Sat, Mar 28, 2015 at 9:59 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi exarkun,
>
> I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and
> I'm usually around.
>
> I'd also like to be able to reset passwords on trac -- there's been a few
> instances where people aren't able to reset their password and people with
> the power haven't been around.
>
> - hawkie
>
> > On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> >
> > Hello all,
> >
> > The Twisted issue tracker needs someone to pay attention to it for spam
> content and clean up that content.  I've been taking care of this for a
> while now but I'm going to step back from this position soon.
> >
> > These days spam is primarily submitted as new tickets.  When a spam
> ticket is filed, it needs to be deleted.  There's a form in the trac web
> interface for deleting tickets.  Access needs to be specially granted, so
> you need a trac account to volunteer for this role.
> >
> > Trac is configured with some automatic spam filtering software.  It
> catches some, but obviously not all, spam submissions.
> >
> > The trac rss feed can be used to monitor new content for spam.  Total
> time commitment for this job is pretty minimal (perhaps a few minutes a
> week) but timely action on spam is preferred.
> >
> > It's probably also possible for this responsibility to shared between
> multiple people (divided up however those people find works).
> >
> > I'll continue covering this role for another week but after that I'll
> stop - so please volunteer before then!
> >
> > Thanks,
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150328/6e8f2742/attachment-0002.html>

From ypercube at gmail.com  Sat Mar 28 10:41:48 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Sat, 28 Mar 2015 16:41:48 +0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>

I'll be happy to do this. Times: 09:00 to 20:00 GMT and often later.

ypercube

On Sat, Mar 28, 2015 at 4:29 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi exarkun,
>
> I'm happy to do this in my timezones (approx 02:00GMT to 16:00GMT), and
> I'm usually around.
>
> I'd also like to be able to reset passwords on trac -- there's been a few
> instances where people aren't able to reset their password and people with
> the power haven't been around.
>
> - hawkie
>
> > On 29 Mar 2015, at 00:22, exarkun at twistedmatrix.com wrote:
> >
> > Hello all,
> >
> > The Twisted issue tracker needs someone to pay attention to it for spam
> content and clean up that content.  I've been taking care of this for a
> while now but I'm going to step back from this position soon.
> >
> > These days spam is primarily submitted as new tickets.  When a spam
> ticket is filed, it needs to be deleted.  There's a form in the trac web
> interface for deleting tickets.  Access needs to be specially granted, so
> you need a trac account to volunteer for this role.
> >
> > Trac is configured with some automatic spam filtering software.  It
> catches some, but obviously not all, spam submissions.
> >
> > The trac rss feed can be used to monitor new content for spam.  Total
> time commitment for this job is pretty minimal (perhaps a few minutes a
> week) but timely action on spam is preferred.
> >
> > It's probably also possible for this responsibility to shared between
> multiple people (divided up however those people find works).
> >
> > I'll continue covering this role for another week but after that I'll
> stop - so please volunteer before then!
> >
> > Thanks,
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150328/b0e8f7d1/attachment-0002.html>

From trac at twistedmatrix.com  Sun Mar 29 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Mar 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1427609115.66.5060729686195389110@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150329/a11d53b9/attachment-0002.html>

From adi at roiban.ro  Sun Mar 29 06:22:59 2015
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 29 Mar 2015 13:22:59 +0100
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
Message-ID: <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>

Hi,

Without a Trac account you can not create a new ticket or update wiki page.

I just tried to create a new account named 'robot-spammer' and it
looks like it would be extremely easy to automate the process.

Observing notifications on IRC I saw that many spam comments were
posted by dedicated spam accounts.
Is there any effort in improving the registration process to prevent
spam accounts being created in the first place?
Email confirmation or reCAPTCHA or linking to external providers like GitHub?

Rather than hunting spam comments I prefer to work on preventing those comments.

Cheers,
Adi



From exarkun at twistedmatrix.com  Sun Mar 29 07:13:44 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 13:13:44 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CAE3TBxxzoSBepjCfAZgmAWnk=Lx4gh3tmzH51GQpC8tXn61kFg@mail.gmail.com>
 <CAFycZ9cfYOu9xQYfxRvhMvpFkWSmuTYXvE0ZVf6snzC7=ucaXQ@mail.gmail.com>
Message-ID: <20150329131344.6423.59683279.divmod.xquotient.89@top>

On 12:22 pm, adi at roiban.ro wrote:
>Hi,
>
>Without a Trac account you can not create a new ticket or update wiki 
>page.
>
>I just tried to create a new account named 'robot-spammer' and it
>looks like it would be extremely easy to automate the process.
>
>Observing notifications on IRC I saw that many spam comments were
>posted by dedicated spam accounts.
>Is there any effort in improving the registration process to prevent
>spam accounts being created in the first place?
>Email confirmation or reCAPTCHA or linking to external providers like 
>GitHub?
>
>Rather than hunting spam comments I prefer to work on preventing those 
>comments.

Feel free to work on that if you like.

My goal with this thread is only to find a replacement for myself 
performing the cleanup steps.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Mar 29 08:43:17 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 14:43:17 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
Message-ID: <20150329144317.6423.697858440.divmod.xquotient.94@top>

On 28 Mar, 04:29 pm, hawkowl at atleastfornow.net wrote:
>Hi exarkun,
>
>I'd also like to be able to reset passwords on trac -- there's been a 
>few instances where people aren't able to reset their password and 
>people with the power haven't been around.

I don't know how trac password reset works.  Presumably the ideal 
solution would be to fix trac's built-in self-service password reset 
feature?  As far as I know noone has managed to understand why (or even 
under what conditions) it is broken, though.

If you'd like to deal with this manually until that happens, I suggest 
adding an entry to the ProjectJobs wiki page describing the requirements 
and volunteering yourself for the job for some period of time.  If you 
can describe the trac permissions required I'm sure someone can grant 
them to you.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Mar 29 08:52:03 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 14:52:03 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150328162226.6423.210098794.divmod.xquotient.61@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
Message-ID: <20150329145203.6423.700890444.divmod.xquotient.109@top>

On 28 Mar, 04:22 pm, exarkun at twistedmatrix.com wrote:
>Hello all,
>
>The Twisted issue tracker needs someone to pay attention to it for spam 
>content and clean up that content.  I've been taking care of this for a 
>while now but I'm going to step back from this position soon.

Thanks for volunteering, Hawkowl, Eeshan Garg, and Pantelis Theodosiou.

I've updated the description of this position on the ProjectJobs wiki 
page:

    https://twistedmatrix.com/trac/wiki/ProjectJobs#TicketSpam

Please have a look and (if it still sounds good), add your trac username 
to the "Assigned to" field.  Since there are several of you and you each 
have different availability times, it might also make sense to record 
that information as well (so we can see what kind of coverage we have 
and know what we're losing when you've had enough).

I'll set up the necessary trac permissions in a few days.  Let me know 
if you have any questions about the job or the job description.

Thanks!
Jean-Paul



From exarkun at twistedmatrix.com  Sun Mar 29 09:00:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Mar 2015 15:00:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
Message-ID: <20150329150026.6423.1729699743.divmod.xquotient.123@top>

On 28 Mar, 04:38 pm, jerryguitarist at gmail.com wrote:
>Hello Mr. exarkun!
>
>I would love to help out with this. I am from India. I have been making
>some beginner bitesized contributions to Twisted (you have reviewed and
>merged some of them) and I am looking forward to contribute in any way 
>that
>I possibly can. Please let me know what you think! Also, I'll be coming 
>to
>PyCon in Montreal this year and I hope to see you and learn from you 
>there!

Hi Eeshan,

I'll be at PyCon too.  Looking forward to meeting you. :)

Jean-Paul



From adi at roiban.ro  Mon Mar 30 04:52:05 2015
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 30 Mar 2015 11:52:05 +0100
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
 <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
Message-ID: <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>

On 23 March 2015 at 15:29, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.
>
> Note that "Unhandled error in Deferred" is the default log message for
> log.err, and a lot (most?) of the code that logs a failure calls
> log.err without passing a different message.

I have no idea what you are talking about :(

I run deferred related tests using nose and standard pyunit 2.7.
Each time I see an  "Unhandled error in Deferred"  message in the log
it means that my test is poorly written and
does not make an explicit call to check the deferred value.. for
example using something similar to self.successResultOf()

If you say that it is ok to ignore those errors, fine by me.

I think that soon we should have trial on py3 and we will no longer
need to worry about this primitive test runner.

Cheers
-- 
Adi Roiban



From jerryguitarist at gmail.com  Mon Mar 30 11:32:44 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Mon, 30 Mar 2015 23:02:44 +0530
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150329150026.6423.1729699743.divmod.xquotient.123@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <6088F859-1842-4FEF-9102-5DD0869055FA@atleastfornow.net>
 <CA+2gYioi48Fu6tH+djAeqK5-0M+EM6tnZo0fVYS3r+uMmnqqsg@mail.gmail.com>
 <20150329150026.6423.1729699743.divmod.xquotient.123@top>
Message-ID: <CA+2gYipgfbirR60diOOXfLQd0d5d9QvkBio+0xtnRWC3uaYMdg@mail.gmail.com>

Hello Mr. exarkun!

I just added my Trac user name to the relevant "Assigned to" field. :-)

It is a huge honor for me to learn from you.

Regards,
Eeshan Garg

On Sun, Mar 29, 2015 at 8:30 PM, <exarkun at twistedmatrix.com> wrote:

> On 28 Mar, 04:38 pm, jerryguitarist at gmail.com wrote:
>
>> Hello Mr. exarkun!
>>
>> I would love to help out with this. I am from India. I have been making
>> some beginner bitesized contributions to Twisted (you have reviewed and
>> merged some of them) and I am looking forward to contribute in any way
>> that
>> I possibly can. Please let me know what you think! Also, I'll be coming to
>> PyCon in Montreal this year and I hope to see you and learn from you
>> there!
>>
>
> Hi Eeshan,
>
> I'll be at PyCon too.  Looking forward to meeting you. :)
>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150330/97ca58ea/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Mar 30 14:28:50 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Mar 2015 13:28:50 -0700
Subject: [Twisted-Python] Unhandled Error in python 3 test suite
In-Reply-To: <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>
References: <CAFycZ9f=OFs5Gp4S++iNXjXxu6Fjc83jmqzMDJKkwL65LMxCig@mail.gmail.com>
 <5E380110-3737-46B9-AC16-1B9D12711776@atleastfornow.net>
 <CAMcKhMRgbb33XhwQ5Y7RybhDpx8ep_3OYe-eOc37ZekjRh7U-A@mail.gmail.com>
 <CAFycZ9cMBOipKGk0EG46DaO7N38sF0iueO=nyDRyv-x-Nq36mA@mail.gmail.com>
Message-ID: <488A5704-11F1-47D9-8F3C-9AB988CBD0E2@twistedmatrix.com>


> On Mar 30, 2015, at 3:52 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 23 March 2015 at 15:29, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
>> On 23 March 2015 at 16:25, HawkOwl <hawkowl at atleastfornow.net> wrote:
>>> It's not really a bug -- it's just that the stderr isn't being captured like real Trial does. Twisted will reraise errors so they show up in logs, but will actually handle them (I think, anyway). The traceback formatting just says it's an unhandled error. That is, it was handled by Twisted, but it was unhandled by user code, and generated an errback or such.
>> 
>> Note that "Unhandled error in Deferred" is the default log message for
>> log.err, and a lot (most?) of the code that logs a failure calls
>> log.err without passing a different message.
> 
> I have no idea what you are talking about :(
> 
> I run deferred related tests using nose and standard pyunit 2.7.
> Each time I see an  "Unhandled error in Deferred"  message in the log
> it means that my test is poorly written and
> does not make an explicit call to check the deferred value.. for
> example using something similar to self.successResultOf()
> 
> If you say that it is ok to ignore those errors, fine by me.

If you run a test under trial that logs a traceback (whether the result of an unhandled error in a Deferred or any other `log.err´ call), the test will fail.

If you run a test under trial that logs a traceback and you call self.flushLoggedErrors() to clear that logged error, then it won't fail.

However, twisted cannot control what your other test runners do, so maybe nose (and definitely stdlib unittest) don't think logged errors are sufficient to fail a test.  Right now lots of tests on the py3 builder with the primitive test runner are spewing tracebacks which are _supposed_ to be logged, and which are properly being caught and "flushed".  When we switch to trial these will show up only in test.log and not on stderr.

> I think that soon we should have trial on py3 and we will no longer
> need to worry about this primitive test runner.


YES.  Thanks to HawkOwl for all her recent work which is going towards making this possible soon!!!

-glyph




From glyph at twistedmatrix.com  Mon Mar 30 14:39:15 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Mar 2015 13:39:15 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
	5 minutes
In-Reply-To: <f594959b983017043e9def26aaeabd11@daemon.be>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
Message-ID: <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>


> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
> 
> Hello,
> 
> I'm trying to get to know the Twisted framework by extending the ircLogBot.py example. I want to be able to get a list of all names in a channel (by sending NAMES) and I want to rerun this every 5 minutes.
> 
> I've been able to get the NAMES on a channel join by doing this in LogBot:
> 
> def joined(self, channel):
>    self.names(channel)
> 
> def names(self, channel):
>    self.sendLine("NAMES %s" % channel)
> 
> def irc_unknown(self, prefix, command, params):
>    if command == 'RPL_NAMREPLY':
>        self.handle_namereply(*params)
> 
> def handle_namereply(self, myname, channeltype, channelname, users):
>    self.logger.log("Handling namereply %r %r %r %r" % (myname, channeltype, channelname, users))
> 
> The problem I face is that I have no idea where to put a LoopingCall to run this same command every 5 minutes. Where would be the best place to place this?

I would probably start such a LoopingCall in LogBot.connectionMade, and make sure to stop it in LogBot.connectionLost.  That way only an active connection will attempt to send NAMES to itself.

Does that make sense for your application?

Thanks for using Twisted,

-glyph


From giacomo.tanganelli at iet.unipi.it  Tue Mar 31 07:07:23 2015
From: giacomo.tanganelli at iet.unipi.it (Giacomo Tanganelli)
Date: Tue, 31 Mar 2015 15:07:23 +0200
Subject: [Twisted-Python] Twisted CoAP implementation
Message-ID: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>

Hi,
I have recently implemented a CoAP open source library based on Twisted. I
noticed that in the web site there is a page regarding Twisted
sub-projects.  I'm wondering if I can add my project to such list, I think
it could help someone. Does anyone know ho to achieve this?

In any case the code is freely available at
https://github.com/Tanganelli/CoAPthon

Bests
Giacomo

-- 
Giacomo Tanganelli
PhD Student Dept. Information Engineering
Via Diotisalvi 2, I-56122 Pisa, ITALY
Phone (direct/switch/fax): +39 050 2217 472
E-mail: g.tanganelli at iet.unipi.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150331/7a334fe3/attachment-0002.html>

