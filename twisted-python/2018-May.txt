From trac at twistedmatrix.com  Sun May  6 00:05:41 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 06 May 2018 06:05:41 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1525586741.76.8596128171020934874@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180506/4e699e87/attachment.html>

From trac at twistedmatrix.com  Sun May 13 00:05:27 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 13 May 2018 06:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1526191527.81.8944886994107110866@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180513/192977ad/attachment.html>

From whalebot.helmsman at gmail.com  Tue May 15 03:53:50 2018
From: whalebot.helmsman at gmail.com (whalebot)
Date: Tue, 15 May 2018 12:53:50 +0300
Subject: [Twisted-Python] Release plans
Message-ID: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>

There is a regression in 18.4.0 release and fix already landed in trunk 
https://github.com/twisted/twisted/pull/1008. Have you plans to release 
new version with this fix?


From glyph at twistedmatrix.com  Tue May 15 20:18:37 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 May 2018 19:18:37 -0700
Subject: [Twisted-Python] Release plans
In-Reply-To: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
References: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
Message-ID: <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>

On May 15, 2018, at 2:53 AM, whalebot <whalebot.helmsman at gmail.com> wrote:
> 
> There is a regression in 18.4.0 release and fix already landed in trunk https://github.com/twisted/twisted/pull/1008. Have you plans to release new version with this fix?

The plan is always to do another release! :)

Given that releases are currently a volunteer effort, however, the timing is rarely that predictable.  If you are interested in volunteering to do the release process yourself you could probably make it happen sooner, but even that will require some knowledge transfer and effort on behalf of our current release manager.

My own 2¢ from someone who probably isn't going to do the release either: it also might be doing an 18.4.1 release that just addresses this regression and nothing else, since it does seem like a pretty clear-cut case, and we are also running this revision in production on twistedmatrix.com <http://twistedmatrix.com/> for this exact reason.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180515/2d3b7d33/attachment.html>

From hawkowl at atleastfornow.net  Wed May 16 08:26:15 2018
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Wed, 16 May 2018 10:26:15 -0400
Subject: [Twisted-Python] Release plans
In-Reply-To: <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>
References: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
 <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>
Message-ID: <CAMxb2iv8U5pF=5ULqFzm8FNFyY3thao71ONWktqPzWVwEUNQDw@mail.gmail.com>

I have to fix one other regression, and then I'm going to do a 18.4.1.

- Amber


On 15 May 2018 at 22:18, Glyph <glyph at twistedmatrix.com> wrote:

> On May 15, 2018, at 2:53 AM, whalebot <whalebot.helmsman at gmail.com> wrote:
>
>
> There is a regression in 18.4.0 release and fix already landed in trunk
> https://github.com/twisted/twisted/pull/1008. Have you plans to release
> new version with this fix?
>
>
> The plan is always to do another release! :)
>
> Given that releases are currently a volunteer effort, however, the timing
> is rarely that predictable.  If you are interested in volunteering to do
> the release process yourself you could probably make it happen sooner, but
> even that will require some knowledge transfer and effort on behalf of our
> current release manager.
>
> My own 2¢ from someone who probably isn't going to do the release either:
> it also might be doing an 18.4.1 release that just addresses this
> regression and nothing else, since it does seem like a pretty clear-cut
> case, and we are also running this revision in production on
> twistedmatrix.com for this exact reason.
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180516/5e8619f8/attachment.html>

From werner at thieprojects.ch  Fri May 18 00:51:30 2018
From: werner at thieprojects.ch (Werner Thie)
Date: Thu, 17 May 2018 20:51:30 -1000
Subject: [Twisted-Python] Canonical way to run trial with Python3
Message-ID: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>

Aloha

Are there any suggestions on how to run trial on a given package to be
ported to Python 3

Mahalo, Werner


From i at introo.me  Fri May 18 02:56:34 2018
From: i at introo.me (Shiyao MA)
Date: Fri, 18 May 2018 16:56:34 +0800
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
Message-ID: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>

Hi,

Running the following script prints "Unhandled Error", but doesn't
contain the traceback of where the exception is raised.  In a massive
codebase, it's hard to locate where is the malfunctioning code is.


from twisted.internet.defer import Deferred

def raiseErr(what):
    raise Exception(what)

d = Deferred()
d.addCallback(raiseErr)
d.callback("asdf")

# how to show the traceback without manually adding an errback at the end?
# adding at the *end* of a deferred is hard as we don't know when the
client stops adding callbacks.




-- 
Best,
Shiyao


From mrw at enotuniq.org  Fri May 18 20:40:07 2018
From: mrw at enotuniq.org (Mark Williams)
Date: Fri, 18 May 2018 19:40:07 -0700
Subject: [Twisted-Python] Canonical way to run trial with Python3
In-Reply-To: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
References: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
Message-ID: <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>

On Thu, May 17, 2018, at 11:51 PM, Werner Thie wrote:
> Aloha
> 
> Are there any suggestions on how to run trial on a given package to be
> ported to Python 3
>

Use an editable installation.  trial won't automatically find unported modules in an editable installation, but you run it against any package in src/twisted by specifying the fully-qualified pathname.

Perform an editable install of Twisted in a virtual environment within which you'll run trial:

$ mkvirtualenv -p /path/to/python3 /path/to/venv3/
$ /path/to/venv3/bin/pip install -e /path/to/twisted/checkout

Now that virtual environment's trial can test something that isn't ported to Python 3:

$ /path/to/venv3/bin/trial twisted.news
# Lots of failures 

Don't forget to remove the ported package and its tests from notPortedModules when you're done:

https://github.com/twisted/twisted/blob/2b61992249d7c628a2685456e5c1608d75657979/src/twisted/python/_setup.py#L380-L416

Good luck and thanks for your interest in porting more of Twisted to Python 3!

-- 
  Mark Williams
  mrw at enotuniq.org


From mrw at enotuniq.org  Fri May 18 20:53:13 2018
From: mrw at enotuniq.org (Mark Williams)
Date: Fri, 18 May 2018 19:53:13 -0700
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
Message-ID: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>

This is an unfortunate implementation detail that you can address by starting the logging system.

Try this:


from twisted.logger import globalLogBeginner, textFileLogObserver
from twisted.internet.defer import Deferred
import sys

globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])

def raiseErr(what):
    raise Exception(what)

d = Deferred()
d.addCallback(raiseErr)
d.callback("asdf")


You should see a traceback.

For future reference, the important lines are these:


from twisted.logger import globalLogBeginner, textFileLogObserver
import sys
globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])


They should be executed before any code that uses Deferreds.  twistd and the newer twist Twisted application runners automatically run these for you before starting your Service.  This is a great reason to write Twisted application plugins:

https://twistedmatrix.com/documents/current/core/howto/tap.html

Of course it would be better to not have to do anything at all to see important information related to errors; the default behavior of Deferred makes things harder to understand than they have to be.  Fortunately, good progress has been made on this issue:

https://twistedmatrix.com/trac/ticket/9333

The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?

On Fri, May 18, 2018, at 1:56 AM, Shiyao MA wrote:
> Hi,
> 
> Running the following script prints "Unhandled Error", but doesn't
> contain the traceback of where the exception is raised.  In a massive
> codebase, it's hard to locate where is the malfunctioning code is.
> 
> 
> from twisted.internet.defer import Deferred
> 
> def raiseErr(what):
>     raise Exception(what)
> 
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
> 
> # how to show the traceback without manually adding an errback at the end?
> # adding at the *end* of a deferred is hard as we don't know when the
> client stops adding callbacks.
> 
> 
> 
> 
> -- 
> Best,
> Shiyao
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
  Mark Williams
  mrw at enotuniq.org


From jlitzingerdev at gmail.com  Fri May 18 22:37:51 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Fri, 18 May 2018 22:37:51 -0600
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
 <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
Message-ID: <20180519043751.GA3444@arch-tinker.localdomain>

> Try this:
> 
> 
> from twisted.logger import globalLogBeginner, textFileLogObserver
> from twisted.internet.defer import Deferred
> import sys
> 
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
> 
> def raiseErr(what):
>     raise Exception(what)
> 
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
FWIW, I had some trouble (nothing printed) with Python 3.6 using the
example above.  Python 2 was fine, and PYTHONUNBUFFERED (or flush) didn't help.
I'll follow up should I figure out what's going on.  I had success on
Python3 with the STDLibLogObserver...which doesn't make any immediate
sense other than something flushing related.
> 
> 
> 
> https://twistedmatrix.com/trac/ticket/9333
> 
> The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?
Agree, given the recent tickets/regressions related to Unicode I'm going
to go back through my PR.  If it disappears from review...I found
something.
> > 
> > # how to show the traceback without manually adding an errback at the end?
> > # adding at the *end* of a deferred is hard as we don't know when the
> > client stops adding callbacks.
I've also found this advice from Jean-Paul very helpful:
https://twistedmatrix.com/pipermail/twisted-python/2018-March/031856.html

You'll get more detailed info:
CRITICAL:twisted:Unhandled error in Deferred:
CRITICAL:twisted:(debug:  C: Deferred was created:
 C:  File "foo.py", line 15, in <module>
 C:    d = defer.Deferred()
 I: First Invoker was:
 I:  File "foo.py", line 17, in <module>
 I:    d.callback("asdf")
)
Traceback (most recent call last):
  File "/home/jlitzing/dev/twisted/twisted-fork/src/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "foo.py", line 13, in raiseErr
    raise Exception(what)
Exception: asdf

Cheers,
-Jason


From i at introo.me  Sat May 19 00:16:06 2018
From: i at introo.me (Shiyao MA)
Date: Sat, 19 May 2018 14:16:06 +0800
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
 <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
Message-ID: <CAJQX3DxdHP45AmdtCe0vG=45ByxEYJ_TGthUTVDg5m0x6=7UHQ@mail.gmail.com>

Thanks,

That logger really helps.

Best,

On Sat, May 19, 2018 at 10:53 AM, Mark Williams <mrw at enotuniq.org> wrote:
> This is an unfortunate implementation detail that you can address by starting the logging system.
>
> Try this:
>
>
> from twisted.logger import globalLogBeginner, textFileLogObserver
> from twisted.internet.defer import Deferred
> import sys
>
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
>
> def raiseErr(what):
>     raise Exception(what)
>
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
>
>
> You should see a traceback.
>
> For future reference, the important lines are these:
>
>
> from twisted.logger import globalLogBeginner, textFileLogObserver
> import sys
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
>
>
> They should be executed before any code that uses Deferreds.  twistd and the newer twist Twisted application runners automatically run these for you before starting your Service.  This is a great reason to write Twisted application plugins:
>
> https://twistedmatrix.com/documents/current/core/howto/tap.html
>
> Of course it would be better to not have to do anything at all to see important information related to errors; the default behavior of Deferred makes things harder to understand than they have to be.  Fortunately, good progress has been made on this issue:
>
> https://twistedmatrix.com/trac/ticket/9333
>
> The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?
>
> On Fri, May 18, 2018, at 1:56 AM, Shiyao MA wrote:
>> Hi,
>>
>> Running the following script prints "Unhandled Error", but doesn't
>> contain the traceback of where the exception is raised.  In a massive
>> codebase, it's hard to locate where is the malfunctioning code is.
>>
>>
>> from twisted.internet.defer import Deferred
>>
>> def raiseErr(what):
>>     raise Exception(what)
>>
>> d = Deferred()
>> d.addCallback(raiseErr)
>> d.callback("asdf")
>>
>> # how to show the traceback without manually adding an errback at the end?
>> # adding at the *end* of a deferred is hard as we don't know when the
>> client stops adding callbacks.
>>
>>
>>
>>
>> --
>> Best,
>> Shiyao
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> --
>   Mark Williams
>   mrw at enotuniq.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Best,
Shiyao


From werner at thieprojects.ch  Sat May 19 00:32:48 2018
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 18 May 2018 20:32:48 -1000
Subject: [Twisted-Python] Canonical way to run trial with Python3
In-Reply-To: <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>
References: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
 <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>
Message-ID: <a09e2e4e-65bf-e2a9-f34f-0b5d633b5b8f@thieprojects.ch>

Mahalo Mark

just had some time to try to make some progress on porting twisted/nevow
to py3 on the fork of Markus Demleitner,

https://github.com/msdemlei/nevow.git

The tests don't run through but the current status is

FAILED (skips=22, expectedFailures=2, failures=1, errors=4, successes=827)

I'm currently looking into the tests involving nodejs on the JavaScript
side, trying to keep Livepage alive.

Werner


On 05/18/2018 04:40 PM, Mark Williams wrote:
> On Thu, May 17, 2018, at 11:51 PM, Werner Thie wrote:
>> Aloha
>>
>> Are there any suggestions on how to run trial on a given package to be
>> ported to Python 3
>>
> Use an editable installation.  trial won't automatically find unported modules in an editable installation, but you run it against any package in src/twisted by specifying the fully-qualified pathname.
>
> Perform an editable install of Twisted in a virtual environment within which you'll run trial:
>
> $ mkvirtualenv -p /path/to/python3 /path/to/venv3/
> $ /path/to/venv3/bin/pip install -e /path/to/twisted/checkout
>
> Now that virtual environment's trial can test something that isn't ported to Python 3:
>
> $ /path/to/venv3/bin/trial twisted.news
> # Lots of failures 
>
> Don't forget to remove the ported package and its tests from notPortedModules when you're done:
>
> https://github.com/twisted/twisted/blob/2b61992249d7c628a2685456e5c1608d75657979/src/twisted/python/_setup.py#L380-L416
>
> Good luck and thanks for your interest in porting more of Twisted to Python 3!
>


From rodrigc at crodrigues.org  Sat May 19 14:07:19 2018
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 19 May 2018 13:07:19 -0700
Subject: [Twisted-Python] Update Getting started with Pip
Message-ID: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>

In the top left-hand section of https://twistedmatrix.com, can someone with
edit permissions to the page change:

$ virtualenv try-twisted
$ . try-twisted/bin/activate
$ pip install twisted[tls]
$ twist --help


to something like:

On Python 2:
    $ python -m virtualenv try-twisted

On Python 3:
    $ python3 -m venv try-twisted

On Python 2 or 3:
     $ . try-twisted/bin/activtate
     $ pip install twisted[tls]
     $ twist --help

At least with base Python 3, using the venv module is preferred:
https://docs.python.org/3/library/venv.html

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180519/99f420ca/attachment.html>

From glyph at twistedmatrix.com  Sat May 19 22:11:08 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 19 May 2018 21:11:08 -0700
Subject: [Twisted-Python] Update Getting started with Pip
In-Reply-To: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>
References: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>
Message-ID: <DA1EB05D-89F5-46D8-AAAC-5E68C16F2423@twistedmatrix.com>



> On May 19, 2018, at 1:07 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> In the top left-hand section of https://twistedmatrix.com <https://twistedmatrix.com/>, can someone with
> edit permissions to the page change:
> 
> $ virtualenv try-twisted
> $ . try-twisted/bin/activate
> $ pip install twisted[tls]
> $ twist --help
> 
> 
> to something like:
> 
> On Python 2:
>     $ python -m virtualenv try-twisted
> 
> On Python 3:
>     $ python3 -m venv try-twisted
> 
> On Python 2 or 3:
>      $ . try-twisted/bin/activtate
>      $ pip install twisted[tls]
>      $ twist --help
> 
> At least with base Python 3, using the venv module is preferred: https://docs.python.org/3/library/venv.html <https://docs.python.org/3/library/venv.html>

The "pyenv" script referenced by that documentation was a script that came with Python itself, not "virtualenv".  Virtualenv is not deprecated, and behaves more consistently between 2 and 3.

I don't think that adding more complexity to these instructions is a good idea, especially with no clear benefit.  Let's not make the change.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180519/a536e943/attachment.html>

From trac at twistedmatrix.com  Sun May 20 00:05:23 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 20 May 2018 06:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1526796323.78.8127711532594765662@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180520/71438eaa/attachment.html>

From i at introo.me  Mon May 21 03:22:16 2018
From: i at introo.me (Shiyao MA)
Date: Mon, 21 May 2018 17:22:16 +0800
Subject: [Twisted-Python] How to combine two eventloops into one?
Message-ID: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>

Hi,

We are developing a network-facing GUI software.

One team member builds the GUI software, which is based on PyQT and
the eventloop is qt5reactor.

Another team member writes the network functions, which is based on
the https://github.com/bmuller/kademlia repo.  Again, our code is
built upon twisted, but to account for the kademila package, we switch
the underlying event loop to asyncio.

Now the problem comes as to how to integrate the GUI (qt5reactor) with
the network(aysncio) eventloop?

Possible to build a meta eventloop that combines qt5reactor and asyncio?
Otherwise, any better approach?


TIA.

-- 
Best,
Shiyao


From glyph at twistedmatrix.com  Tue May 22 23:50:09 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 22 May 2018 22:50:09 -0700
Subject: [Twisted-Python] How to combine two eventloops into one?
In-Reply-To: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>
References: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>
Message-ID: <47AE7EB0-74BA-41EF-9B85-481A03D2E51F@twistedmatrix.com>



> On May 21, 2018, at 2:22 AM, Shiyao MA <i at introo.me> wrote:
> 
> Hi,
> 
> We are developing a network-facing GUI software.
> 
> One team member builds the GUI software, which is based on PyQT and
> the eventloop is qt5reactor.
> 
> Another team member writes the network functions, which is based on
> the https://github.com/bmuller/kademlia repo.  Again, our code is
> built upon twisted, but to account for the kademila package, we switch
> the underlying event loop to asyncio.
> 
> Now the problem comes as to how to integrate the GUI (qt5reactor) with
> the network(aysncio) eventloop?
> 
> Possible to build a meta eventloop that combines qt5reactor and asyncio?
> Otherwise, any better approach?

It's definitely possible.

Right now, the integration we've implemented puts asyncio "on the bottom" and twisted "on top"; in the sense that twisted.internet.asyncioreactor implements the Twisted reactor API in terms of the native asyncio event loop.

It would also be possible to implement the asyncio event loop interface, as specified in https://www.python.org/dev/peps/pep-3156/#event-loop-interface-specification <https://www.python.org/dev/peps/pep-3156/#event-loop-interface-specification>, in terms of the Twisted reactor interfaces.  Many of the methods are quite similar.  If we had such a wrapper in Twisted already, you could wrap your qt5reactor instance in a ReactorLoop() and install that into asyncio using an event loop policy.

I hope someone will contribute this ;-).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180522/665bc144/attachment.html>

From xfrost11 at yahoo.com  Fri May 25 04:11:53 2018
From: xfrost11 at yahoo.com (Justin Frost)
Date: Fri, 25 May 2018 04:11:53 -0600
Subject: [Twisted-Python] =?utf-8?q?=28no_subject=29?=
Message-ID: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>



http://logo.ruoungonsaigon.com

Justin Frost
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180525/77964a95/attachment.html>

From trac at twistedmatrix.com  Sun May 27 00:05:28 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 27 May 2018 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1527401128.55.8506562079780404229@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180527/7b978773/attachment.html>

From glyph at twistedmatrix.com  Sun May 27 17:32:26 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 27 May 2018 16:32:26 -0700
Subject: [Twisted-Python] (no subject)
In-Reply-To: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>
References: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>
Message-ID: <0330A877-6345-4AAA-A9AE-4582F37467D8@twistedmatrix.com>

Sorry for the spam, folks.  I've unsubscribed Justin and let him know that his account was used to send this, hopefully we won't see more of it.

-g

> On May 25, 2018, at 3:11 AM, Justin Frost <xfrost11 at yahoo.com> wrote:

(some spam)

From jlitzingerdev at gmail.com  Wed May 30 23:04:08 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 30 May 2018 23:04:08 -0600
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error tb
Message-ID: <20180531050408.GA8999@arch-tinker.localdomain>

I've been looking at cleaning up cases where a traceback isn't printed
for deferreds with an unhandled error, and there is one strange case I'm
hoping someone might have thoughts about*.  For reference, some of this is part
of 7927 and related tickets.

Consider:
from __future__ import print_function

import sys

from twisted.internet import reactor, defer
from twisted.logger import (
    globalLogBeginner,
    textFileLogObserver,
)

def raiseException(res):
    raise Exception("I am a traceback!")


if sys.argv[1] == '1':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    d = defer.Deferred()
    d.addCallback(raiseException)
    d.callback(None)
elif sys.argv[1] == '2':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    def go():
        d = defer.Deferred()
        d.addCallback(raiseException)
        d.callback(None)

    go()
elif sys.argv[1] == '3':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    def go2():
        d = defer.Deferred()
        d.addCallback(raiseException)
        d.callback(None)
        reactor.stop()

    reactor.callWhenRunning(go2)
    reactor.run()

For '1' above, nothing will be printed for python3, python2 is fine.
All other cases print a traceback as expected.  While case 1 isn't
necessarily not a "normal" case of twisted usage, but it is a 
short and clear way to demonstrate the logger that has at least a few
examples:

https://twistedmatrix.com/trac/ticket/7927 (original description)
https://twistedmatrix.com/pipermail/twisted-python/2018-May/031922.html

After a little debugging, I did see a few places where an exception
complaining about sys.meta path being none and the interpreter
shutting down, but I'm not confident enough in my tests to know whether
that wasn't triggered by me.

Any thoughts on why no traceback is printed for case 1?  Is it even
worth worrying about?

Thanks,
-Jason Litzinger

* Tested with Python 3.6 on Arch Linux, Python 3.5.2 on ubuntu


From glyph at twistedmatrix.com  Wed May 30 23:33:45 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 May 2018 22:33:45 -0700
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error
 tb
In-Reply-To: <20180531050408.GA8999@arch-tinker.localdomain>
References: <20180531050408.GA8999@arch-tinker.localdomain>
Message-ID: <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>



> On May 30, 2018, at 10:04 PM, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
> Any thoughts on why no traceback is printed for case 1?  Is it even
> worth worrying about?

My guess is that since `d` is at the global scope, it doesn't get garbage collected until some unfortunately late phase in the interpreter tear-down where maybe stderr isn't even available any more.

I'd definitely ignore this case for now and fix the others, which are much more serious, and tractable to fix ;).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180530/8b1a8540/attachment.html>

From jlitzingerdev at gmail.com  Wed May 30 23:50:10 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 30 May 2018 23:50:10 -0600
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error
 tb
In-Reply-To: <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>
References: <20180531050408.GA8999@arch-tinker.localdomain>
 <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>
Message-ID: <20180531055010.GA12463@arch-tinker.localdomain>

> My guess is that since `d` is at the global scope, it doesn't get garbage collected until some unfortunately late phase in the interpreter tear-down where maybe stderr isn't even available any more.
Here be dragons.
> 
> I'd definitely ignore this case for now and fix the others, which are much more serious, and tractable to fix ;).
That's where I've been leaning, so I'll avoid this case for now.  I'll
probably reference this in #7927 for completeness.

Thanks!
-Jason


From trac at twistedmatrix.com  Sun May  6 00:05:41 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 06 May 2018 06:05:41 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1525586741.76.8596128171020934874@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180506/4e699e87/attachment-0002.html>

From trac at twistedmatrix.com  Sun May 13 00:05:27 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 13 May 2018 06:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1526191527.81.8944886994107110866@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180513/192977ad/attachment-0002.html>

From whalebot.helmsman at gmail.com  Tue May 15 03:53:50 2018
From: whalebot.helmsman at gmail.com (whalebot)
Date: Tue, 15 May 2018 12:53:50 +0300
Subject: [Twisted-Python] Release plans
Message-ID: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>

There is a regression in 18.4.0 release and fix already landed in trunk 
https://github.com/twisted/twisted/pull/1008. Have you plans to release 
new version with this fix?



From glyph at twistedmatrix.com  Tue May 15 20:18:37 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 May 2018 19:18:37 -0700
Subject: [Twisted-Python] Release plans
In-Reply-To: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
References: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
Message-ID: <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>

On May 15, 2018, at 2:53 AM, whalebot <whalebot.helmsman at gmail.com> wrote:
> 
> There is a regression in 18.4.0 release and fix already landed in trunk https://github.com/twisted/twisted/pull/1008. Have you plans to release new version with this fix?

The plan is always to do another release! :)

Given that releases are currently a volunteer effort, however, the timing is rarely that predictable.  If you are interested in volunteering to do the release process yourself you could probably make it happen sooner, but even that will require some knowledge transfer and effort on behalf of our current release manager.

My own 2¢ from someone who probably isn't going to do the release either: it also might be doing an 18.4.1 release that just addresses this regression and nothing else, since it does seem like a pretty clear-cut case, and we are also running this revision in production on twistedmatrix.com <http://twistedmatrix.com/> for this exact reason.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180515/2d3b7d33/attachment-0002.html>

From hawkowl at atleastfornow.net  Wed May 16 08:26:15 2018
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Wed, 16 May 2018 10:26:15 -0400
Subject: [Twisted-Python] Release plans
In-Reply-To: <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>
References: <ea834a1e-b96e-337c-74fe-2cebf609ca69@gmail.com>
 <F5FD3511-14A8-4FE7-B161-4AC2F9FB458B@twistedmatrix.com>
Message-ID: <CAMxb2iv8U5pF=5ULqFzm8FNFyY3thao71ONWktqPzWVwEUNQDw@mail.gmail.com>

I have to fix one other regression, and then I'm going to do a 18.4.1.

- Amber


On 15 May 2018 at 22:18, Glyph <glyph at twistedmatrix.com> wrote:

> On May 15, 2018, at 2:53 AM, whalebot <whalebot.helmsman at gmail.com> wrote:
>
>
> There is a regression in 18.4.0 release and fix already landed in trunk
> https://github.com/twisted/twisted/pull/1008. Have you plans to release
> new version with this fix?
>
>
> The plan is always to do another release! :)
>
> Given that releases are currently a volunteer effort, however, the timing
> is rarely that predictable.  If you are interested in volunteering to do
> the release process yourself you could probably make it happen sooner, but
> even that will require some knowledge transfer and effort on behalf of our
> current release manager.
>
> My own 2¢ from someone who probably isn't going to do the release either:
> it also might be doing an 18.4.1 release that just addresses this
> regression and nothing else, since it does seem like a pretty clear-cut
> case, and we are also running this revision in production on
> twistedmatrix.com for this exact reason.
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180516/5e8619f8/attachment-0002.html>

From werner at thieprojects.ch  Fri May 18 00:51:30 2018
From: werner at thieprojects.ch (Werner Thie)
Date: Thu, 17 May 2018 20:51:30 -1000
Subject: [Twisted-Python] Canonical way to run trial with Python3
Message-ID: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>

Aloha

Are there any suggestions on how to run trial on a given package to be
ported to Python 3

Mahalo, Werner



From i at introo.me  Fri May 18 02:56:34 2018
From: i at introo.me (Shiyao MA)
Date: Fri, 18 May 2018 16:56:34 +0800
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
Message-ID: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>

Hi,

Running the following script prints "Unhandled Error", but doesn't
contain the traceback of where the exception is raised.  In a massive
codebase, it's hard to locate where is the malfunctioning code is.


from twisted.internet.defer import Deferred

def raiseErr(what):
    raise Exception(what)

d = Deferred()
d.addCallback(raiseErr)
d.callback("asdf")

# how to show the traceback without manually adding an errback at the end?
# adding at the *end* of a deferred is hard as we don't know when the
client stops adding callbacks.




-- 
Best,
Shiyao



From mrw at enotuniq.org  Fri May 18 20:40:07 2018
From: mrw at enotuniq.org (Mark Williams)
Date: Fri, 18 May 2018 19:40:07 -0700
Subject: [Twisted-Python] Canonical way to run trial with Python3
In-Reply-To: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
References: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
Message-ID: <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>

On Thu, May 17, 2018, at 11:51 PM, Werner Thie wrote:
> Aloha
> 
> Are there any suggestions on how to run trial on a given package to be
> ported to Python 3
>

Use an editable installation.  trial won't automatically find unported modules in an editable installation, but you run it against any package in src/twisted by specifying the fully-qualified pathname.

Perform an editable install of Twisted in a virtual environment within which you'll run trial:

$ mkvirtualenv -p /path/to/python3 /path/to/venv3/
$ /path/to/venv3/bin/pip install -e /path/to/twisted/checkout

Now that virtual environment's trial can test something that isn't ported to Python 3:

$ /path/to/venv3/bin/trial twisted.news
# Lots of failures 

Don't forget to remove the ported package and its tests from notPortedModules when you're done:

https://github.com/twisted/twisted/blob/2b61992249d7c628a2685456e5c1608d75657979/src/twisted/python/_setup.py#L380-L416

Good luck and thanks for your interest in porting more of Twisted to Python 3!

-- 
  Mark Williams
  mrw at enotuniq.org



From mrw at enotuniq.org  Fri May 18 20:53:13 2018
From: mrw at enotuniq.org (Mark Williams)
Date: Fri, 18 May 2018 19:53:13 -0700
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
Message-ID: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>

This is an unfortunate implementation detail that you can address by starting the logging system.

Try this:


from twisted.logger import globalLogBeginner, textFileLogObserver
from twisted.internet.defer import Deferred
import sys

globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])

def raiseErr(what):
    raise Exception(what)

d = Deferred()
d.addCallback(raiseErr)
d.callback("asdf")


You should see a traceback.

For future reference, the important lines are these:


from twisted.logger import globalLogBeginner, textFileLogObserver
import sys
globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])


They should be executed before any code that uses Deferreds.  twistd and the newer twist Twisted application runners automatically run these for you before starting your Service.  This is a great reason to write Twisted application plugins:

https://twistedmatrix.com/documents/current/core/howto/tap.html

Of course it would be better to not have to do anything at all to see important information related to errors; the default behavior of Deferred makes things harder to understand than they have to be.  Fortunately, good progress has been made on this issue:

https://twistedmatrix.com/trac/ticket/9333

The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?

On Fri, May 18, 2018, at 1:56 AM, Shiyao MA wrote:
> Hi,
> 
> Running the following script prints "Unhandled Error", but doesn't
> contain the traceback of where the exception is raised.  In a massive
> codebase, it's hard to locate where is the malfunctioning code is.
> 
> 
> from twisted.internet.defer import Deferred
> 
> def raiseErr(what):
>     raise Exception(what)
> 
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
> 
> # how to show the traceback without manually adding an errback at the end?
> # adding at the *end* of a deferred is hard as we don't know when the
> client stops adding callbacks.
> 
> 
> 
> 
> -- 
> Best,
> Shiyao
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
  Mark Williams
  mrw at enotuniq.org



From jlitzingerdev at gmail.com  Fri May 18 22:37:51 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Fri, 18 May 2018 22:37:51 -0600
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
 <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
Message-ID: <20180519043751.GA3444@arch-tinker.localdomain>

> Try this:
> 
> 
> from twisted.logger import globalLogBeginner, textFileLogObserver
> from twisted.internet.defer import Deferred
> import sys
> 
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
> 
> def raiseErr(what):
>     raise Exception(what)
> 
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
FWIW, I had some trouble (nothing printed) with Python 3.6 using the
example above.  Python 2 was fine, and PYTHONUNBUFFERED (or flush) didn't help.
I'll follow up should I figure out what's going on.  I had success on
Python3 with the STDLibLogObserver...which doesn't make any immediate
sense other than something flushing related.
> 
> 
> 
> https://twistedmatrix.com/trac/ticket/9333
> 
> The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?
Agree, given the recent tickets/regressions related to Unicode I'm going
to go back through my PR.  If it disappears from review...I found
something.
> > 
> > # how to show the traceback without manually adding an errback at the end?
> > # adding at the *end* of a deferred is hard as we don't know when the
> > client stops adding callbacks.
I've also found this advice from Jean-Paul very helpful:
https://twistedmatrix.com/pipermail/twisted-python/2018-March/031856.html

You'll get more detailed info:
CRITICAL:twisted:Unhandled error in Deferred:
CRITICAL:twisted:(debug:  C: Deferred was created:
 C:  File "foo.py", line 15, in <module>
 C:    d = defer.Deferred()
 I: First Invoker was:
 I:  File "foo.py", line 17, in <module>
 I:    d.callback("asdf")
)
Traceback (most recent call last):
  File "/home/jlitzing/dev/twisted/twisted-fork/src/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "foo.py", line 13, in raiseErr
    raise Exception(what)
Exception: asdf

Cheers,
-Jason



From i at introo.me  Sat May 19 00:16:06 2018
From: i at introo.me (Shiyao MA)
Date: Sat, 19 May 2018 14:16:06 +0800
Subject: [Twisted-Python] How to show traceback of "Unhandled error"?
In-Reply-To: <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
References: <CAJQX3Dy6zWGd2GZ7k2ZJyZTF-s+PpeEPbJuSrtNoG4px2GLnjQ@mail.gmail.com>
 <1526698393.297902.1377455416.405F6E2B@webmail.messagingengine.com>
Message-ID: <CAJQX3DxdHP45AmdtCe0vG=45ByxEYJ_TGthUTVDg5m0x6=7UHQ@mail.gmail.com>

Thanks,

That logger really helps.

Best,

On Sat, May 19, 2018 at 10:53 AM, Mark Williams <mrw at enotuniq.org> wrote:
> This is an unfortunate implementation detail that you can address by starting the logging system.
>
> Try this:
>
>
> from twisted.logger import globalLogBeginner, textFileLogObserver
> from twisted.internet.defer import Deferred
> import sys
>
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
>
> def raiseErr(what):
>     raise Exception(what)
>
> d = Deferred()
> d.addCallback(raiseErr)
> d.callback("asdf")
>
>
> You should see a traceback.
>
> For future reference, the important lines are these:
>
>
> from twisted.logger import globalLogBeginner, textFileLogObserver
> import sys
> globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
>
>
> They should be executed before any code that uses Deferreds.  twistd and the newer twist Twisted application runners automatically run these for you before starting your Service.  This is a great reason to write Twisted application plugins:
>
> https://twistedmatrix.com/documents/current/core/howto/tap.html
>
> Of course it would be better to not have to do anything at all to see important information related to errors; the default behavior of Deferred makes things harder to understand than they have to be.  Fortunately, good progress has been made on this issue:
>
> https://twistedmatrix.com/trac/ticket/9333
>
> The associated PR needs a careful review to ensure its handling of unicode is correct.  Any takers?
>
> On Fri, May 18, 2018, at 1:56 AM, Shiyao MA wrote:
>> Hi,
>>
>> Running the following script prints "Unhandled Error", but doesn't
>> contain the traceback of where the exception is raised.  In a massive
>> codebase, it's hard to locate where is the malfunctioning code is.
>>
>>
>> from twisted.internet.defer import Deferred
>>
>> def raiseErr(what):
>>     raise Exception(what)
>>
>> d = Deferred()
>> d.addCallback(raiseErr)
>> d.callback("asdf")
>>
>> # how to show the traceback without manually adding an errback at the end?
>> # adding at the *end* of a deferred is hard as we don't know when the
>> client stops adding callbacks.
>>
>>
>>
>>
>> --
>> Best,
>> Shiyao
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> --
>   Mark Williams
>   mrw at enotuniq.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Best,
Shiyao



From werner at thieprojects.ch  Sat May 19 00:32:48 2018
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 18 May 2018 20:32:48 -1000
Subject: [Twisted-Python] Canonical way to run trial with Python3
In-Reply-To: <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>
References: <4612fae1-0d95-3863-2884-13843c26607c@thieprojects.ch>
 <1526697607.293439.1377437352.35DC1E50@webmail.messagingengine.com>
Message-ID: <a09e2e4e-65bf-e2a9-f34f-0b5d633b5b8f@thieprojects.ch>

Mahalo Mark

just had some time to try to make some progress on porting twisted/nevow
to py3 on the fork of Markus Demleitner,

https://github.com/msdemlei/nevow.git

The tests don't run through but the current status is

FAILED (skips=22, expectedFailures=2, failures=1, errors=4, successes=827)

I'm currently looking into the tests involving nodejs on the JavaScript
side, trying to keep Livepage alive.

Werner


On 05/18/2018 04:40 PM, Mark Williams wrote:
> On Thu, May 17, 2018, at 11:51 PM, Werner Thie wrote:
>> Aloha
>>
>> Are there any suggestions on how to run trial on a given package to be
>> ported to Python 3
>>
> Use an editable installation.  trial won't automatically find unported modules in an editable installation, but you run it against any package in src/twisted by specifying the fully-qualified pathname.
>
> Perform an editable install of Twisted in a virtual environment within which you'll run trial:
>
> $ mkvirtualenv -p /path/to/python3 /path/to/venv3/
> $ /path/to/venv3/bin/pip install -e /path/to/twisted/checkout
>
> Now that virtual environment's trial can test something that isn't ported to Python 3:
>
> $ /path/to/venv3/bin/trial twisted.news
> # Lots of failures 
>
> Don't forget to remove the ported package and its tests from notPortedModules when you're done:
>
> https://github.com/twisted/twisted/blob/2b61992249d7c628a2685456e5c1608d75657979/src/twisted/python/_setup.py#L380-L416
>
> Good luck and thanks for your interest in porting more of Twisted to Python 3!
>



From rodrigc at crodrigues.org  Sat May 19 14:07:19 2018
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sat, 19 May 2018 13:07:19 -0700
Subject: [Twisted-Python] Update Getting started with Pip
Message-ID: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>

In the top left-hand section of https://twistedmatrix.com, can someone with
edit permissions to the page change:

$ virtualenv try-twisted
$ . try-twisted/bin/activate
$ pip install twisted[tls]
$ twist --help


to something like:

On Python 2:
    $ python -m virtualenv try-twisted

On Python 3:
    $ python3 -m venv try-twisted

On Python 2 or 3:
     $ . try-twisted/bin/activtate
     $ pip install twisted[tls]
     $ twist --help

At least with base Python 3, using the venv module is preferred:
https://docs.python.org/3/library/venv.html

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180519/99f420ca/attachment-0002.html>

From glyph at twistedmatrix.com  Sat May 19 22:11:08 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 19 May 2018 21:11:08 -0700
Subject: [Twisted-Python] Update Getting started with Pip
In-Reply-To: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>
References: <CAG=rPVdtTnokrq7y1f9djxDSbQt2jrySSnkPOeuPxsh2PKMPDg@mail.gmail.com>
Message-ID: <DA1EB05D-89F5-46D8-AAAC-5E68C16F2423@twistedmatrix.com>



> On May 19, 2018, at 1:07 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> In the top left-hand section of https://twistedmatrix.com <https://twistedmatrix.com/>, can someone with
> edit permissions to the page change:
> 
> $ virtualenv try-twisted
> $ . try-twisted/bin/activate
> $ pip install twisted[tls]
> $ twist --help
> 
> 
> to something like:
> 
> On Python 2:
>     $ python -m virtualenv try-twisted
> 
> On Python 3:
>     $ python3 -m venv try-twisted
> 
> On Python 2 or 3:
>      $ . try-twisted/bin/activtate
>      $ pip install twisted[tls]
>      $ twist --help
> 
> At least with base Python 3, using the venv module is preferred: https://docs.python.org/3/library/venv.html <https://docs.python.org/3/library/venv.html>

The "pyenv" script referenced by that documentation was a script that came with Python itself, not "virtualenv".  Virtualenv is not deprecated, and behaves more consistently between 2 and 3.

I don't think that adding more complexity to these instructions is a good idea, especially with no clear benefit.  Let's not make the change.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180519/a536e943/attachment-0002.html>

From trac at twistedmatrix.com  Sun May 20 00:05:23 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 20 May 2018 06:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1526796323.78.8127711532594765662@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180520/71438eaa/attachment-0002.html>

From i at introo.me  Mon May 21 03:22:16 2018
From: i at introo.me (Shiyao MA)
Date: Mon, 21 May 2018 17:22:16 +0800
Subject: [Twisted-Python] How to combine two eventloops into one?
Message-ID: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>

Hi,

We are developing a network-facing GUI software.

One team member builds the GUI software, which is based on PyQT and
the eventloop is qt5reactor.

Another team member writes the network functions, which is based on
the https://github.com/bmuller/kademlia repo.  Again, our code is
built upon twisted, but to account for the kademila package, we switch
the underlying event loop to asyncio.

Now the problem comes as to how to integrate the GUI (qt5reactor) with
the network(aysncio) eventloop?

Possible to build a meta eventloop that combines qt5reactor and asyncio?
Otherwise, any better approach?


TIA.

-- 
Best,
Shiyao



From glyph at twistedmatrix.com  Tue May 22 23:50:09 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 22 May 2018 22:50:09 -0700
Subject: [Twisted-Python] How to combine two eventloops into one?
In-Reply-To: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>
References: <CAJQX3Dwuxs6nrO7ivxZe0_CjaGwmXPTVgubVOLg4dyKQFTZHtA@mail.gmail.com>
Message-ID: <47AE7EB0-74BA-41EF-9B85-481A03D2E51F@twistedmatrix.com>



> On May 21, 2018, at 2:22 AM, Shiyao MA <i at introo.me> wrote:
> 
> Hi,
> 
> We are developing a network-facing GUI software.
> 
> One team member builds the GUI software, which is based on PyQT and
> the eventloop is qt5reactor.
> 
> Another team member writes the network functions, which is based on
> the https://github.com/bmuller/kademlia repo.  Again, our code is
> built upon twisted, but to account for the kademila package, we switch
> the underlying event loop to asyncio.
> 
> Now the problem comes as to how to integrate the GUI (qt5reactor) with
> the network(aysncio) eventloop?
> 
> Possible to build a meta eventloop that combines qt5reactor and asyncio?
> Otherwise, any better approach?

It's definitely possible.

Right now, the integration we've implemented puts asyncio "on the bottom" and twisted "on top"; in the sense that twisted.internet.asyncioreactor implements the Twisted reactor API in terms of the native asyncio event loop.

It would also be possible to implement the asyncio event loop interface, as specified in https://www.python.org/dev/peps/pep-3156/#event-loop-interface-specification <https://www.python.org/dev/peps/pep-3156/#event-loop-interface-specification>, in terms of the Twisted reactor interfaces.  Many of the methods are quite similar.  If we had such a wrapper in Twisted already, you could wrap your qt5reactor instance in a ReactorLoop() and install that into asyncio using an event loop policy.

I hope someone will contribute this ;-).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180522/665bc144/attachment-0002.html>

From xfrost11 at yahoo.com  Fri May 25 04:11:53 2018
From: xfrost11 at yahoo.com (Justin Frost)
Date: Fri, 25 May 2018 04:11:53 -0600
Subject: [Twisted-Python] =?utf-8?q?=28no_subject=29?=
Message-ID: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>



http://logo.ruoungonsaigon.com

Justin Frost
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180525/77964a95/attachment-0002.html>

From trac at twistedmatrix.com  Sun May 27 00:05:28 2018
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 27 May 2018 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1527401128.55.8506562079780404229@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180527/7b978773/attachment-0002.html>

From glyph at twistedmatrix.com  Sun May 27 17:32:26 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 27 May 2018 16:32:26 -0700
Subject: [Twisted-Python] (no subject)
In-Reply-To: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>
References: <1527243122.M9hVfKnTawe1LM9hafFqHD@mf-smf-ucb034c3>
Message-ID: <0330A877-6345-4AAA-A9AE-4582F37467D8@twistedmatrix.com>

Sorry for the spam, folks.  I've unsubscribed Justin and let him know that his account was used to send this, hopefully we won't see more of it.

-g

> On May 25, 2018, at 3:11 AM, Justin Frost <xfrost11 at yahoo.com> wrote:

(some spam)


From jlitzingerdev at gmail.com  Wed May 30 23:04:08 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 30 May 2018 23:04:08 -0600
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error tb
Message-ID: <20180531050408.GA8999@arch-tinker.localdomain>

I've been looking at cleaning up cases where a traceback isn't printed
for deferreds with an unhandled error, and there is one strange case I'm
hoping someone might have thoughts about*.  For reference, some of this is part
of 7927 and related tickets.

Consider:
from __future__ import print_function

import sys

from twisted.internet import reactor, defer
from twisted.logger import (
    globalLogBeginner,
    textFileLogObserver,
)

def raiseException(res):
    raise Exception("I am a traceback!")


if sys.argv[1] == '1':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    d = defer.Deferred()
    d.addCallback(raiseException)
    d.callback(None)
elif sys.argv[1] == '2':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    def go():
        d = defer.Deferred()
        d.addCallback(raiseException)
        d.callback(None)

    go()
elif sys.argv[1] == '3':
    globalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])
    def go2():
        d = defer.Deferred()
        d.addCallback(raiseException)
        d.callback(None)
        reactor.stop()

    reactor.callWhenRunning(go2)
    reactor.run()

For '1' above, nothing will be printed for python3, python2 is fine.
All other cases print a traceback as expected.  While case 1 isn't
necessarily not a "normal" case of twisted usage, but it is a 
short and clear way to demonstrate the logger that has at least a few
examples:

https://twistedmatrix.com/trac/ticket/7927 (original description)
https://twistedmatrix.com/pipermail/twisted-python/2018-May/031922.html

After a little debugging, I did see a few places where an exception
complaining about sys.meta path being none and the interpreter
shutting down, but I'm not confident enough in my tests to know whether
that wasn't triggered by me.

Any thoughts on why no traceback is printed for case 1?  Is it even
worth worrying about?

Thanks,
-Jason Litzinger

* Tested with Python 3.6 on Arch Linux, Python 3.5.2 on ubuntu



From glyph at twistedmatrix.com  Wed May 30 23:33:45 2018
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 May 2018 22:33:45 -0700
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error
 tb
In-Reply-To: <20180531050408.GA8999@arch-tinker.localdomain>
References: <20180531050408.GA8999@arch-tinker.localdomain>
Message-ID: <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>



> On May 30, 2018, at 10:04 PM, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
> Any thoughts on why no traceback is printed for case 1?  Is it even
> worth worrying about?

My guess is that since `d` is at the global scope, it doesn't get garbage collected until some unfortunately late phase in the interpreter tear-down where maybe stderr isn't even available any more.

I'd definitely ignore this case for now and fix the others, which are much more serious, and tractable to fix ;).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20180530/8b1a8540/attachment-0002.html>

From jlitzingerdev at gmail.com  Wed May 30 23:50:10 2018
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 30 May 2018 23:50:10 -0600
Subject: [Twisted-Python] Python 3: Odd failure to print unhandled error
 tb
In-Reply-To: <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>
References: <20180531050408.GA8999@arch-tinker.localdomain>
 <9D071EBA-C250-417F-A2FC-2B5B38CEED94@twistedmatrix.com>
Message-ID: <20180531055010.GA12463@arch-tinker.localdomain>

> My guess is that since `d` is at the global scope, it doesn't get garbage collected until some unfortunately late phase in the interpreter tear-down where maybe stderr isn't even available any more.
Here be dragons.
> 
> I'd definitely ignore this case for now and fix the others, which are much more serious, and tractable to fix ;).
That's where I've been leaning, so I'll avoid this case for now.  I'll
probably reference this in #7927 for completeness.

Thanks!
-Jason



