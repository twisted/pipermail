From sank.daniel at gmail.com  Thu Jan  2 00:54:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 1 Jan 2014 23:54:43 -0800
Subject: [Twisted-Python] different import paths lead to insecureJelly
Message-ID: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>

I have a project in which various modules need to import a particular
module "util" which has the following content:

    # util.py
    class FooMaster(pb.Cacheable):
        ...

    class FooSlave(pb.RemoteCache):
        ...

    pb.setUnjellyableForClass(FooMaster, FooSlave)

Module "server" lives in the same directory as util and imports it like this
    # server.py
    import util

Module clent lives in an entirely different directory and imports util like
this
    # client.py
    import myproject.path.to.some.files.util as util

This leads to the infamous insecureJelly exception because the name of the
FooMaster class winds up being different due to the different import
statements. Specifically, server's copy of pb registers it as

"util.FooMaster"

but client's copy registers it as

"myproject.path.to.some.files.util.FooMaster"

1. Is it a bug that pb cares about how something was imported when
registering unjellyable classes?
2. If not, how am I supposed to work around this?
3. The problem goes away if I use the long, fully qualified import
statement everywhere. Is that what I'm supposed to do?

I read the howto and the on Stackoverflow question I could find regarding
this issue. In both cases, it says to not define names in a main file
precisely to avoid this issue, but not what to do in my case.

Thank you for any advice.

-- 
Daniel Sank
Department of Physics
Broida Hall
University of California
Santa Barbara, CA 93117
(805)893-3899
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140101/c9c53f5f/attachment.html>

From exarkun at twistedmatrix.com  Thu Jan  2 04:37:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Jan 2014 11:37:37 -0000
Subject: [Twisted-Python] different import paths lead to insecureJelly
In-Reply-To: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
References: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
Message-ID: <20140102113737.17936.1625910912.divmod.xquotient.23@top>

On 07:54 am, sank.daniel at gmail.com wrote:
>I have a project in which various modules need to import a particular
>module "util" which has the following content:
>
>    # util.py
>    class FooMaster(pb.Cacheable):
>        ...
>
>    class FooSlave(pb.RemoteCache):
>        ...
>
>    pb.setUnjellyableForClass(FooMaster, FooSlave)
>
>Module "server" lives in the same directory as util and imports it like 
>this
>    # server.py
>    import util
>
>Module clent lives in an entirely different directory and imports util 
>like
>this
>    # client.py
>    import myproject.path.to.some.files.util as util
>
>This leads to the infamous insecureJelly exception because the name of 
>the
>FooMaster class winds up being different due to the different import
>statements. Specifically, server's copy of pb registers it as
>
>"util.FooMaster"
>
>but client's copy registers it as
>
>"myproject.path.to.some.files.util.FooMaster"
>
>1. Is it a bug that pb cares about how something was imported when
>registering unjellyable classes?

No.  It's a bug in your application. ;)
>2. If not, how am I supposed to work around this?

Always refer to modules in the same way.  Never use relative imports.
>3. The problem goes away if I use the long, fully qualified import
>statement everywhere. Is that what I'm supposed to do?

Yep!

If you really had different classes on the client and the server 
representing the same abstract entity then you could explicitly register 
them as being related by registering them using a name instead of using 
a class object.  When you pass a class object, pb just computes that 
name for you.

However, you don't really have different classes here: just differently 
named copies of the same class.  Consistently importing the class using 
the correct, fully qualified package name will cause the classes to have 
the same name (and, if you load the client and server in once process, 
will cause only *one* copy of the module and class to be loaded, rather 
than two) and fix the PB issue.

Jean-Paul
>
>I read the howto and the on Stackoverflow question I could find 
>regarding
>this issue. In both cases, it says to not define names in a main file
>precisely to avoid this issue, but not what to do in my case.
>
>Thank you for any advice.
>
>--
>Daniel Sank
>Department of Physics
>Broida Hall
>University of California
>Santa Barbara, CA 93117
>(805)893-3899


From tobias.oberstein at tavendo.de  Thu Jan  2 06:26:34 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 2 Jan 2014 05:26:34 -0800
Subject: [Twisted-Python] Autobahn 0.7.0 released
Message-ID: <634914A010D0B943A035D226786325D4446BD1E6F4@EXVMBX020-12.exch020.serverdata.net>

Hi,

I am happy to announce the release of AutobahnPython 0.7.0

https://github.com/tavendo/AutobahnPython
https://pypi.python.org/pypi/autobahn

This release brings 4 major features:

1) full support for Twisted endpoints, a wrapping protocol/factory and a generic endpoint forwarder

https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/echo_endpoints
https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/wrapping

2) Support for Python 3

Autobahn now works with Twisted running on Python 3.

Note: Not all examples work with Twisted/Python3, since Python 3 support with Twisted is work-in-progress.

3) Support for asyncio

Asyncio (http://docs.python.org/3.4/library/asyncio.html) is a new networking framework that comes built
into Python 3.4, and that can be installed on Python 3.3.

Autobahn now fully (with all features) supports both Twisted (on Python 2 and 3) and asyncio (on Python 3.3+).

Here is an example that shows how to do WebSocket on both:

Twisted:
https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/echo

Asyncio:
https://github.com/tavendo/AutobahnPython/tree/master/examples/asyncio/websocket/echo

The application code is very similar or even identical.

Note: Support for 2) and 3) required major refactoring under the hood. But to upgrade existing code,
it should be sufficient to replace respective imports:

Autobahn < 0.7.0:
from autobahn.websocket import WebSocketServerProtocol

Autobahn 0.7.0:
from autobahn.twisted.websocket import WebSocketServerProtocol
or
from autobahn.asyncio.websocket import WebSocketServerProtocol

4) Use of Interfaces

The core Autobahn interfaces that applications are using are now properly
defined using "zope.interface" machinery:

http://autobahn.ws/static/reference/python/websocketintro.html#interface-definition

The interfaces are what we are committed to keep stable up from now.

==
Notes:

We've been working hard to make sure everything still works as previously, but the changes
in the code base are large. So please forgive if there are glitches popping up.

The upcoming WAMPv2 did not make it into this release (it's already the biggest release since a long time).
WAMPv2 will be introduced gradually over the coming weeks in point releases, and then a final 0.8 release
will be rolled out which deprecates WAMPv1.

Cheers,
/Tobias


From glyph at twistedmatrix.com  Fri Jan  3 02:06:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 3 Jan 2014 01:06:38 -0800
Subject: [Twisted-Python] different import paths lead to insecureJelly
In-Reply-To: <20140102113737.17936.1625910912.divmod.xquotient.23@top>
References: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
 <20140102113737.17936.1625910912.divmod.xquotient.23@top>
Message-ID: <14547FFA-0F46-48FA-B8F4-6F0224E7ABC6@twistedmatrix.com>


On Jan 2, 2014, at 3:37 AM, exarkun at twistedmatrix.com wrote:

> Always refer to modules in the same way.  Never use relative imports.

Explicit relative imports preserve the benefit of being able to re-name your packages without editing every file inside them, but will still give you errors rather than silent pathological if you end up with an implicit Python path entry in the wrong place.

(Here is an termcast that illustrates the distinction: <http://asciinema.org/a/7016>.)

Also, any absolute import in python 2 can accidentally become implicitly relative given a sufficiently unfortunate set of circumstances.  Consider using 'from __future__ import absolute_import' everywhere to make your imports less ambiguous.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140103/6bdeb019/attachment.html>

From glyph at twistedmatrix.com  Sat Jan  4 21:33:43 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 4 Jan 2014 20:33:43 -0800
Subject: [Twisted-Python] Make Contributing to Twisted Much Faster And More
	Fun With This One Weird Trick
Message-ID: <853550A3-44B1-4650-8D97-5DB6FC6C1A0A@twistedmatrix.com>

Hello fellow Twisted maintainers,

There are lots of things that could be done to make contributing to Twisted easier and more fun.  I know, because people are constantly buttonholing me to tell me about how we should use this or that source hosting or continuous integration website :).  However, there's one persistent problem - in my opinion, the largest problem - that I think we could address without revving any of our technology[1] or changing our process (as documented, anyway; there are some changes to it as it is practiced).

That problem is perfectionism; particularly perfectionism in code reviews, but also sometimes on the part of change authors.  The "one weird trick" I am referring to in the subject is trusting the process, and not attempting to second-guess it or add extraneous bells and whistles to it because you're worried it may not work.

According to our official code review process, in order to be acceptable to land on trunk, a change must have:

Coding-standard compliance.
Test coverage for all new or changed code.
Docstrings for new or changed code.
Narrative documentation for any new or changed user-visible features.
No backwards-incompatible changes.
A NEWS file.

I think most would agree that reviewers might also reasonably block a change for:

Exploits or other security issues introduced in any new or changed functionality, or
Performance regressions (ideally in existing benchmarks, and not in new performance criteria that the reviewer just invented!) in existing functionality.

Maybe those last two things should be added to the official process documentation.

However, these 8 things really ought to be the only things that ought to cause a reviewer to block a change.  Right now, reviewers also routinely check for, and block changes for:

A perfect, future-proof public API for everything new
Any un-handled use-cases
Hypothetical alternative approaches which would yield a more flexible implementation that could enable different functionality in the future
Optimal performance for new functionality
Re-factoring to use existing code if a change introduces duplication

Worse yet, multiple reviewers will sometimes show up on the same ticket, demanding increasingly intricate and sometimes conflicting implementation improvements.  This is understandably very frustrating for the author and can make changes get stalled for long periods of time.

So here are some suggestions:

First of all, we do not have to have a perfect public API for everything all the time.  You can deprecate stuff later.  You can remove stuff later.  We have a process to do this: trust it.  Sure, it takes a release cycle or two, but that is not nearly the hardship that it seems.  Experience has taught us that realistically, neither the reviewer nor the author of a change is going to have the energy to fix up new public APIs to be perfect within the time frame of a single release cycle anyway, so you might as well have people using the pretty-good-but-not-perfect API in the meanwhile.  So if you're authoring a change that you think might have a better public API but you don't know what it is, just submit for review anyway.  If you're reviewing a change that has a public API that you think might be made better with a bunch of additional work, just approve it and ask the author to file a ticket for improving it in the future.

Secondly, it's OK to do a code review that isn't perfect.  I suspect that one reason so many code reviews are so nitpicky is that nobody wants to be the one to approve a change that gets reverted.  My advice here is: don't worry about it.  If you're reviewing some code, make a good-faith effort to find the issues with it according to the documented criteria, but if you don't find any problems, just approve it, as the process says you should.  If you make a mistake, that's why we have a process for reverting changes.  If you want another reviewer to look at it after the fact, just ask.

Third, code review is not just about the formal requirements; of course there can be discussion about design, API, or implementation techniques.  As a reviewer, you may notice anything in my second list, or more, and you can definitely mention it to the author of the change.  But you should mention it in a clearly delineated separate section of your review feedback which you explicitly state is not required to accept the change.  Always feel free to say "file a ticket for X before landing this" so that we don't lose track of improvements for the future that occur to you as you're reviewing, but don't feel like you have to block a change for any possible flaw.

And finally, if you really don't know whether you want to commit to a public API, there's always the option of putting something in a private implementation module so that it can go into a release and users can start importing it with the understanding that they typed an underscore so they're on their own with regard to compatibility guarantees :-).

In closing, if you can think of a review you've done in the past that asked the author to do too much work above and beyond the requirements, consider going back and amending the review to separate the required stuff from suggestions and feedback you have.

-glyph

[1]: We're also making good progress towards revving that technology, but I'll have more to say about that in a separate post.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140104/1f6e7cd8/attachment.html>

From sank.daniel at gmail.com  Sat Jan  4 22:12:35 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 4 Jan 2014 21:12:35 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <52A85F15.4030103@itamarst.org>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
Message-ID: <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>

I really want to work on the perspective broker documentation as it is
fresh in my mind. I still can't log into the website. Has there been any
news in this area?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140104/26be6e84/attachment.html>

From trac at twistedmatrix.com  Sun Jan  5 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1388905515.35.4146267551371854879@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140105/1813f9ba/attachment.html>

From glyph at twistedmatrix.com  Sun Jan  5 00:34:36 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 4 Jan 2014 23:34:36 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
Message-ID: <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>


On Jan 4, 2014, at 9:12 PM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I really want to work on the perspective broker documentation as it is fresh in my mind. I still can't log into the website. Has there been any news in this area?

I guess I can try to re-set your password manually.  Are you on IRC?  I'd like to do it in real time.

-glyph



From sank.daniel at gmail.com  Sun Jan  5 01:48:46 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sun, 5 Jan 2014 00:48:46 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
Message-ID: <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>

> I guess I can try to re-set your password manually.  Are you on IRC?  I'd
like to do it in real time.

Never used IRC before. Is there a particular client program I should use?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140105/003500fc/attachment.html>

From glyph at twistedmatrix.com  Sun Jan  5 01:50:01 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Jan 2014 00:50:01 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
Message-ID: <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>


On Jan 5, 2014, at 12:48 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> > I guess I can try to re-set your password manually.  Are you on IRC?  I'd like to do it in real time.
> 
> Never used IRC before. Is there a particular client program I should use?

What platform?

-g



From sank.daniel at gmail.com  Sun Jan  5 11:52:30 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sun, 5 Jan 2014 10:52:30 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
Message-ID: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>

I have a windows computer and an Ubuntu computer that I use as a file
server. I'm reading about IRC now. How are we supposed to find each other?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140105/b2de9563/attachment.html>

From wasilak at gmail.com  Mon Jan  6 01:26:18 2014
From: wasilak at gmail.com (Maciej Wasilak)
Date: Mon, 6 Jan 2014 09:26:18 +0100
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
Message-ID: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>

Hello,

I've tried to use Twisted names.client.getHostByName() method to resolve
some addresses for my UDP based app. By default getHostByName() always
returns IPv6 address. I don't always have end-to-end IPv6 connectivity, so
it often causes communication to fail. I've found a solution to override
this behavior with monkey patching [1].

After Twisted 13.2 announcement I've checked the new HostnameEndpoint
implementation to find possible solution (it seems to be dedicated to solve
similar problems, but for TCP-based protocols). However it seems to use
deferToThread(), and built-in Python getaddrinfo().

My questions:
1. Is using deferToThread() a preferred solution?
2. Does someone know a less hacky solution to get IPv4 addresses with
getHostbyName()?

Best Regards
Maciej Wasilak

[1]
http://stackoverflow.com/questions/13820175/can-twisted-names-client-be-forced-to-return-ipv4-addresses-without-modifying
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140106/f751096c/attachment.html>

From glyph at twistedmatrix.com  Mon Jan  6 01:54:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Jan 2014 00:54:38 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <DDAD7465-87DB-4D9F-B0EC-8E11908E4E79@twistedmatrix.com>


On Jan 5, 2014, at 10:52 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I have a windows computer and an Ubuntu computer that I use as a file server. I'm reading about IRC now. How are we supposed to find each other?

If you're on Windows, mIRC is probably your best bet: http://www.mirc.com

I'm on chat.freenode.net as "glyph".  Drop me a message :).

-glyph




From glyph at twistedmatrix.com  Mon Jan  6 02:03:34 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Jan 2014 01:03:34 -0800
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
Message-ID: <5BC8F1AD-0A86-4556-BED4-D4032A8433F7@twistedmatrix.com>


On Jan 6, 2014, at 12:26 AM, Maciej Wasilak <wasilak at gmail.com> wrote:

> After Twisted 13.2 announcement I've checked the new HostnameEndpoint implementation to find possible solution (it seems to be dedicated to solve similar problems, but for TCP-based protocols). However it seems to use deferToThread(), and built-in Python getaddrinfo().

Sadly, the algorithm HostnameEndpoint uses to determine which host to actually send traffic to depends on TCP connection establishment; if you're doing UDP you're on your own with this.

> My questions:
> 1. Is using deferToThread() a preferred solution?

You kinda have to use it.  getaddrinfo is actually standardized in an RFC, and that RFC defines no asynchronous version of this API.  So if you want proper 6-or-4 behavior, deferToThread(getaddrinfo) is about as well as you can do for the general case.

(Now, in specific cases you can use the twisted.names DNS client and avoid the trip out to your operating system and also out to a thread, but this is for somewhat specialized configurations, only if the getaddrinfo approach is not scaling for you.)

-glyph



From hs at ox.cx  Mon Jan  6 02:12:06 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Mon, 06 Jan 2014 10:12:06 +0100
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <3CDF2949-7D3D-4BD6-82E5-93719982CDA3@ox.cx>

On 5 Jan 2014, at 19:52, Daniel Sank wrote:

> I have a windows computer and an Ubuntu computer that I use as a file
> server. I'm reading about IRC now. How are we supposed to find each 
> other?

You could try Freenode?s web chat: https://webchat.freenode.net so you 
don?t have to extra install software.


From p.mayers at imperial.ac.uk  Mon Jan  6 04:47:40 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 06 Jan 2014 11:47:40 +0000
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
 operation
In-Reply-To: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
Message-ID: <52CA97DC.8010704@imperial.ac.uk>

On 06/01/14 08:26, Maciej Wasilak wrote:
> Hello,
>
> I've tried to use Twisted names.client.getHostByName() method to resolve
> some addresses for my UDP based app. By default getHostByName() always
> returns IPv6 address. I don't always have end-to-end IPv6 connectivity,

I'm not sure if t.n.client implements the same stuff that getaddrinfo 
does, namely RFC 6724 address selection rules and behaviour, and in 
particular if it has an equivalent of the AI_ADDRCONFIG flag.

> After Twisted 13.2 announcement I've checked the new HostnameEndpoint
> implementation to find possible solution (it seems to be dedicated to
> solve similar problems, but for TCP-based protocols). However it seems
> to use deferToThread(), and built-in Python getaddrinfo().
>
> My questions:
> 1. Is using deferToThread() a preferred solution?

IMO *all* applications should *always* use getaddrinfo() for resolution 
of user-supplied names. It really really annoys me when people decide to 
re-invent it - this is hard to get right, and apps like Chrome having 
their own implementation precludes things like DHCP-based 6724 tables in 
the future.

So yes, use "deferToThread" and "getaddrinfo". Note that you should not, 
in general, specify the address family; let the AI_ADDRCONFIG flag sort 
that out for you.


From kevin.horn at gmail.com  Mon Jan  6 10:46:02 2014
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 6 Jan 2014 11:46:02 -0600
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>

I use Pidgin on Windows:
http://pidgin.im/

the webchat site that Hynek suggested also works well.


On Sun, Jan 5, 2014 at 12:52 PM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I have a windows computer and an Ubuntu computer that I use as a file
> server. I'm reading about IRC now. How are we supposed to find each other?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140106/029f7950/attachment.html>

From wulczer at wulczer.org  Mon Jan  6 14:32:16 2014
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Mon, 06 Jan 2014 22:32:16 +0100
Subject: [Twisted-Python] license for RetryingCall class posted here in Nov
	2009
Message-ID: <52CB20E0.7070502@wulczer.org>

Hello!

A code snippet implementing retrying calls got posted on this list in 
November of 2009, here's the thread in question:

http://twistedmatrix.com/pipermail/twisted-python/2009-November/020818.html

I wanted to use that snippet (slightly changed and with unit tests 
added) in txpostgres, the Postgres driver for Twisted - 
http://github.com/wulczer/txpostgres/

Now, txpostres is MIT-licensed and before going ahead and incorporating 
that code, I'd like to make sure its license is compatible,

I've taken the liberty of CC'ing Terry but perhaps someone else could 
also chime in.

Thanks,
Jan


From wasilak at gmail.com  Mon Jan  6 14:33:20 2014
From: wasilak at gmail.com (Maciej Wasilak)
Date: Mon, 6 Jan 2014 22:33:20 +0100
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <52CA97DC.8010704@imperial.ac.uk>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
Message-ID: <CAFUtXGxAfhacGSxZZ=BhqK1mvsMvst21CtcQyjrFUBBVm8qn9A@mail.gmail.com>

Hello,

6 sty 2014 12:50 "Phil Mayers" <p.mayers at imperial.ac.uk> napisa?(a):
> IMO *all* applications should *always* use getaddrinfo() for resolution
of user-supplied names. It really really annoys me when people decide to
re-invent it - this is hard to get right, and apps like Chrome having their
own implementation precludes things like DHCP-based 6724 tables in the
future.
>
> So yes, use "deferToThread" and "getaddrinfo". Note that you should not,
in general, specify the address family; let the AI_ADDRCONFIG flag sort
that out for you.
>

Thank you very much for your answers. DeferToThread works fine, I just had
the (wrong) impression that names is the preferred solution.
Best Regards
Maciej Wasilak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140106/2565788c/attachment.html>

From dustin at v.igoro.us  Mon Jan  6 19:17:07 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Mon, 6 Jan 2014 21:17:07 -0500
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
 <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
Message-ID: <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>

Can we shave this yak any more finely?

Dustin


From asaha at redhat.com  Mon Jan  6 23:06:25 2014
From: asaha at redhat.com (Amit Saha)
Date: Tue, 7 Jan 2014 01:06:25 -0500 (EST)
Subject: [Twisted-Python] Reliable way to check if Twisted has
	IPv6	support?
In-Reply-To: <52AAE468.9020801@imperial.ac.uk>
References: <1420744804.30417894.1386904970292.JavaMail.root@redhat.com>
 <52AAE468.9020801@imperial.ac.uk>
Message-ID: <594562680.44525666.1389074785546.JavaMail.root@redhat.com>



----- Original Message -----
> From: "Phil Mayers" <p.mayers at imperial.ac.uk>
> To: twisted-python at twistedmatrix.com
> Sent: Friday, December 13, 2013 8:41:44 PM
> Subject: Re: [Twisted-Python] Reliable way to check if Twisted has IPv6	support?
> 
> On 13/12/13 03:22, Amit Saha wrote:
> 
> > Is there a more reliable way (which works with the Twisted-8.0+) to check
> > this?
> 
> Check the Twisted version.
> 
> You should also note that IPv6 features have appeared in multiple
> versions; HostnameEndpoint was added in 13.2.0 for example, whereas
> basic "connectTCP to IPv6 address" was added in 12.1.0, with listenTCP
> in 12.0.0
> 
> So:
> 
> import twisted
> 
> vt = (twisted.version.major, twisted.version.minor)
> 
> if vt > (13,2):
>    def connectv6name(n):
>      return HostnameEndpoint(...)
> elif vt > (12,1):
>    def connectv6name(n):
>      d = myGetAddrInfo(...)
>      d.addCallback(reactor.connectTCP, ...)
> else:
>    def connectv6name(n):
>      raise Exception('twisted too old for IPv6')

Thanks a lot, Phil. I think using the version information is a more reliable way. I had a feeling
that the various bits and pieces may have been added incrementally. The functionality I need
present are listenTCP() and connectTCP() to work with IPv6, so I think checking for 12.1.0
will suit my needs.

Best,
Amit.

-- 
Amit Saha <http://echorand.me>


From sank.daniel at gmail.com  Tue Jan  7 11:33:31 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Tue, 7 Jan 2014 10:33:31 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
 <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
 <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>
Message-ID: <CAKN9TD+itdfk6dF8L7KXJ0F5sR-QFjdW5eGuOVwMsJ--8WzrPA@mail.gmail.com>

This has been resolved. Thanks to whoever it was (I didn't recognize your
IRC username) who reset my password, as that did the trick.

For the record I had tried using the password reset on the website and it
didn't seem to work. Others recently had similar problems.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140107/5672d461/attachment.html>

From glyph at twistedmatrix.com  Wed Jan  8 16:05:48 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Jan 2014 15:05:48 -0800
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <52CA97DC.8010704@imperial.ac.uk>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
Message-ID: <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>


On Jan 6, 2014, at 3:47 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 06/01/14 08:26, Maciej Wasilak wrote:
>> Hello,
>> 
>> I've tried to use Twisted names.client.getHostByName() method to resolve
>> some addresses for my UDP based app. By default getHostByName() always
>> returns IPv6 address. I don't always have end-to-end IPv6 connectivity,
> 
> I'm not sure if t.n.client implements the same stuff that getaddrinfo does, namely RFC 6724 address selection rules and behaviour, and in particular if it has an equivalent of the AI_ADDRCONFIG flag.
> 
>> After Twisted 13.2 announcement I've checked the new HostnameEndpoint
>> implementation to find possible solution (it seems to be dedicated to
>> solve similar problems, but for TCP-based protocols). However it seems
>> to use deferToThread(), and built-in Python getaddrinfo().
>> 
>> My questions:
>> 1. Is using deferToThread() a preferred solution?
> 
> IMO *all* applications should *always* use getaddrinfo() for resolution of user-supplied names. It really really annoys me when people decide to re-invent it - this is hard to get right, and apps like Chrome having their own implementation precludes things like DHCP-based 6724 tables in the future.
> 
> So yes, use "deferToThread" and "getaddrinfo". Note that you should not, in general, specify the address family; let the AI_ADDRCONFIG flag sort that out for you.

I have a minor quibble - all applications deployed to other people?s hardware ought to always use getaddrinfo, because the essence of GAI is that it respects local configuration of the platform.  No matter how ?hard? you try to get it ?right?, you can?t ever know what the platform is doing with hostname resolution because it simply isn?t exposed any other way, let alone any asynchronous way.[1]

However, if you?re building a big service to run in the cloud, or on a VPN, on specially-tuned machines that you configured, using twisted.names can be more scalable and allow you to react more reasonably to high load situations.  Or, at least, it will give you a level of control so that you can tune it, since just doing potentially blocking platform stuff in a thread is not amenable to tuning.

-glyph

[1]: Actually it is sometimes exposed, for example with platform-specific APIs like <https://developer.apple.com/library/mac/documentation/CoreFoundation/Reference/CFHostRef/Reference/reference.html> and <http://msdn.microsoft.com/en-us/library/windows/desktop/ms741522(v=vs.85).aspx>.  But you know, not on, like, Linux.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140108/6622508c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140108/6622508c/attachment.bin>

From keturn at keturn.net  Mon Jan  6 11:03:07 2014
From: keturn at keturn.net (Kevin Turner)
Date: Mon, 06 Jan 2014 10:03:07 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <1389031387.22139.67270761.44325675@webmail.messagingengine.com>

On Sun, Jan 5, 2014, at 10:52 AM, Daniel Sank wrote:

I have a windows computer and an Ubuntu computer that I use as a file
server. I'm reading about IRC now. How are we supposed to find each
other?



The channels relevant to Twisted development are listed
on [1]http://twistedmatrix.com/trac/wiki/TwistedCommunity



That's not really relevant if you're only looking to get a new password
from Glyph, because you'll want to do that over private message instead
of sharing your new password with the channel :), but it might be
otherwise useful.

References

1. http://twistedmatrix.com/trac/wiki/TwistedCommunity
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140106/43e0b6a4/attachment.html>

From p.mayers at imperial.ac.uk  Thu Jan  9 04:13:53 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 09 Jan 2014 11:13:53 +0000
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
 operation
In-Reply-To: <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
 <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>
Message-ID: <52CE8471.60700@imperial.ac.uk>

On 08/01/14 23:05, Glyph Lefkowitz wrote:

> However, if you?re building a big service to run in the cloud, or on a
> VPN, on specially-tuned machines that you configured, using
> twisted.names can be more scalable and allow you to react more
> reasonably to high load situations.  Or, at least, it will give you a
> level of control so that you can tune it, since just doing potentially
> blocking platform stuff in a thread is not amenable to tuning.

Sure, agreed - I folded those concerns into the "user-supplied names" 
bit ;o)

Using a resolver directly is totally appropriate in certain use-cases, 
and t.names is a good choice if you're using Twisted[1] but I think of 
it like "should I use UDP instead of TCP for my protocol" - if you have 
to ask, the answer is no.

(In fairness to the Chrome guys, they've probably got the chops to 
reimplement it properly and are doing enough innovative stuff in Chrome 
that having an in-browser resolver is reasonable, so my dig at them is 
probably unfair ;o)

[1] Modulo a couple of rather big holes that I know people are already 
working on, like source-port randomisation for Kaminsky-resistance, and 
so on.


From sank.daniel at gmail.com  Sat Jan 11 13:46:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 11 Jan 2014 12:46:43 -0800
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
Message-ID: <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>

> In other words, you don't have to log in on the *root* pb object.  Loginis just
> a PB method call.  You can have a second portal wrapping a different realm
> handing out different avatars and you can log in to that portal the
second time.

I look in t.s.pb to find out what methods are called during log in.
PBServerFactory is adapted to a pb root object by _PortalRoot which returns
a _PortalWrapper from rootObject(self, broker).

_PortalWrapper has a remote_login method with the following code

def remote_login(self, username):
        """
        Start of username/password login.
        """
        c = challenge()
        return c, _PortalAuthChallenger(self.portal, self.broker, username,
c)

I'm confused by this because I expect that attempting to return an instance
of _PortalAuthChallenger from the remote_login method should fail (ie.
insecureJelly). How does this work?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140111/09cb4616/attachment.html>

From exarkun at twistedmatrix.com  Sat Jan 11 13:59:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 11 Jan 2014 20:59:56 -0000
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
 <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
Message-ID: <20140111205956.17936.1032489926.divmod.xquotient.100@top>

On 08:46 pm, sank.daniel at gmail.com wrote:
>>In other words, you don't have to log in on the *root* pb object. 
>>Loginis just
>>a PB method call.  You can have a second portal wrapping a different 
>>realm
>>handing out different avatars and you can log in to that portal the
>second time.
>
>I look in t.s.pb to find out what methods are called during log in.
>PBServerFactory is adapted to a pb root object by _PortalRoot which 
>returns
>a _PortalWrapper from rootObject(self, broker).
>
>_PortalWrapper has a remote_login method with the following code
>
>def remote_login(self, username):
>        """
>        Start of username/password login.
>        """
>        c = challenge()
>        return c, _PortalAuthChallenger(self.portal, self.broker, 
>username,
>c)
>
>I'm confused by this because I expect that attempting to return an 
>instance
>of _PortalAuthChallenger from the remote_login method should fail (ie.
>insecureJelly). How does this work?

_PortalAuthChallenger is a Referenceable.  Any Referenceable is allowed 
by default.

See twisted.spread.jelly.SecurityOptions, in particular the `basicTypes` 
attribute and the `allowBasicTypes` method.

Jean-Paul


From sank.daniel at gmail.com  Sat Jan 11 22:06:48 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 11 Jan 2014 21:06:48 -0800
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <20140111205956.17936.1032489926.divmod.xquotient.100@top>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
 <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
 <20140111205956.17936.1032489926.divmod.xquotient.100@top>
Message-ID: <CAKN9TDLJ41kTTRrsN-F0goyn3JnW8aVSvRzhVyo3t+7XiZeQbw@mail.gmail.com>

> _PortalAuthChallenger is a Referenceable

Facepalm. Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140111/e3ab8ed9/attachment.html>

From trac at twistedmatrix.com  Sun Jan 12 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1389510315.82.4193194420775541783@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140112/dd130a36/attachment.html>

From johnnadre at zoho.com  Sun Jan 12 14:01:46 2014
From: johnnadre at zoho.com (johnnadre)
Date: Sun, 12 Jan 2014 13:01:46 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
Message-ID: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>


Hi,

I want to exit my application immediately when CTRL+C is pressed, however reactor hangs when there are running threads.
Some of these threads have blocking I/O, so I can't simply set a variable or wait for them to terminate. An example application would be:

from twisted.internet import reactor, threads
from time import sleep
import signal

def do():
    try:
        sleep(10)
    except KeyboardInterrupt:
        print "interrupt!"

#def cleanup(signum, stackframe):
def cleanup():
    d.cancel()
    reactor.callFromThread(reactor._stopThreadPool)
    reactor.callFromThread(reactor.stop) 

if __name__ == '__main__':
    d = threads.deferToThread(do)
    #signal.signal(signal.SIGINT, cleanup)
    reactor.addSystemEventTrigger('before', 'shutdown', cleanup)
    reactor.run()


How can I achieve this?

- John



From exarkun at twistedmatrix.com  Sun Jan 12 15:03:24 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jan 2014 22:03:24 -0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
Message-ID: <20140112220324.17936.1726525833.divmod.xquotient.104@top>

On 09:01 pm, johnnadre at zoho.com wrote:
>
>Hi,
>
>I want to exit my application immediately when CTRL+C is pressed, 
>however reactor hangs when there are running threads.
>Some of these threads have blocking I/O, so I can't simply set a 
>variable or wait for them to terminate. An example application would 
>be:

Python threads (being plain old operating systems; for example, POSIX 
threads) aren't generally interruptable.  You could try exiting the 
entire process using `os._exit`.

This is the case whether you're using Twisted or not.

Jean-Paul
>from twisted.internet import reactor, threads
>from time import sleep
>import signal
>
>def do():
>    try:
>        sleep(10)
>    except KeyboardInterrupt:
>        print "interrupt!"
>
>#def cleanup(signum, stackframe):
>def cleanup():
>    d.cancel()
>    reactor.callFromThread(reactor._stopThreadPool)
>    reactor.callFromThread(reactor.stop)
>
>if __name__ == '__main__':
>    d = threads.deferToThread(do)
>    #signal.signal(signal.SIGINT, cleanup)
>    reactor.addSystemEventTrigger('before', 'shutdown', cleanup)
>    reactor.run()
>
>
>How can I achieve this?
>
>- John
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From johnnadre at zoho.com  Sun Jan 12 17:42:37 2014
From: johnnadre at zoho.com (johnnadre)
Date: Sun, 12 Jan 2014 16:42:37 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <20140112220324.17936.1726525833.divmod.xquotient.104@top>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
Message-ID: <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>


---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> wrote ---- 

 > On 09:01 pm, johnnadre at zoho.com wrote: 
 > > 
 > >Hi, 
 > > 
 > >I want to exit my application immediately when CTRL+C is pressed,  
 > >however reactor hangs when there are running threads. 
 > >Some of these threads have blocking I/O, so I can't simply set a  
 > >variable or wait for them to terminate. An example application would  
 > >be: 
 >  
 > Python threads (being plain old operating systems; for example, POSIX  
 > threads) aren't generally interruptable.  You could try exiting the  
 > entire process using `os._exit`. 
 >  
 > This is the case whether you're using Twisted or not. 

Thanks! That's exactly what I was looking for.



From spuram at kiwiup.com  Mon Jan 13 06:28:01 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 13 Jan 2014 18:58:01 +0530
Subject: [Twisted-Python]  Maximum number of SSL connections to the server
Message-ID: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>

Hi all,

I am doing load testing on my twisted SSL server. I spawn threads(~2000)
from the application and each thread will act as a SSL client and connect
to the server.
Client code is straight forward. It creates a socket, does SSL wrap and
connects to the server. Once all threads connect to the server, every
thread closes its socket.

During my initial tests, I found that after 245 successful connections, all
remaining threads started to fail with this error on the client side.

*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*

Then I figured out that its an issue with number of open files which was by
default - 256. I changed the limit for server and client to 10000. It
successfully completed the 500 connections test.

Now it fails after 1010 successful connections. I checked the number of
open files of the server process it remains at 1010 and there are no stale
open files.

Client shows the same error
*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*

Twisted logs on the server shows that it connects first and then
disconnects with this error.

*<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
*<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
routines', 'SSL23_READ', 'ssl handshake failure')]*

How can I fix this ? How should I approach to debug ?

Thanks
-Sumanth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/d16c7e17/attachment.html>

From wolfgang at rohdewald.de  Mon Jan 13 06:44:08 2014
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 13 Jan 2014 14:44:08 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
Message-ID: <4900706.oOpxapxZh0@i5>

Am Montag, 13. Januar 2014, 18:58:01 schrieb Sumanth Puram:
> Now it fails after 1010 successful connections

which limit did you raise? Per process or systemwide?

1010 sound like you have a limit of 1024 somewhere

-- 
Wolfgang


From _ at lvh.io  Mon Jan 13 06:48:33 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 14:48:33 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <4900706.oOpxapxZh0@i5>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
Message-ID: <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>

Hi Sumanth,


Still sounds like an open file problem. What platform? How did you set the
number of files higher that 256? Take a look at /etc/security/limits.conf
:-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/797edd58/attachment.html>

From spuram at kiwiup.com  Mon Jan 13 07:07:43 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 13 Jan 2014 19:37:43 +0530
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
 <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
Message-ID: <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>

Yes, 1010 looks more like a 1024 limit.

I am using a Mac OSX 10.8. I have set the limit with 'ulimit -n 10000' for
the current shell where I was running the server and the same for client.

I have tried to increase the limit for number of files, but could not find
any other way than this.

sumanth$ ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
max locked memory       (kbytes, -l) unlimited
max memory size         (kbytes, -m) unlimited
open files                      (-n) 10000
pipe size            (512 bytes, -p) 1
stack size              (kbytes, -s) 65532
cpu time               (seconds, -t) unlimited
max user processes              (-u) 709
virtual memory          (kbytes, -v) unlimited



On Mon, Jan 13, 2014 at 7:18 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Sumanth,
>
>
> Still sounds like an open file problem. What platform? How did you set the
> number of files higher that 256? Take a look at /etc/security/limits.conf
> :-)
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/9e61c43d/attachment.html>

From _ at lvh.io  Mon Jan 13 07:18:21 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 15:18:21 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
 <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
 <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>
Message-ID: <CAE_Hg6ac2c8ZcEHp7JMJ337BctDzVZD=Tve_vSWDDLjVL2oQpQ@mail.gmail.com>

Hi Sumanth,


You probably want to look at the limits launchd is imposing. Consider:

launchctl limit maxfiles 5000 5000

You can make this permanent by pumping that line (minus launchctl) into
/etc/launchd.conf.

hth

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/85547cae/attachment-0001.html>

From exarkun at twistedmatrix.com  Mon Jan 13 07:19:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jan 2014 14:19:11 -0000
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
Message-ID: <20140113141911.17936.430116938.divmod.xquotient.122@top>

On 01:28 pm, spuram at kiwiup.com wrote:
>Hi all,
>
>I am doing load testing on my twisted SSL server. I spawn 
>threads(~2000)
>from the application and each thread will act as a SSL client and 
>connect
>to the server.
>
>[snip]
>
>Now it fails after 1010 successful connections. I checked the number of
>open files of the server process it remains at 1010 and there are no 
>stale
>open files.

select() has a hard limit that is often 1024.  Make sure you're not 
using the select()-based reactor (which I think is probably the default 
on OS X).

Jean-Paul
>Client shows the same error
>*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*
>
>Twisted logs on the server shows that it connects first and then
>disconnects with this error.
>
>*<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
>*<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
>routines', 'SSL23_READ', 'ssl handshake failure')]*
>
>How can I fix this ? How should I approach to debug ?
>
>Thanks
>-Sumanth


From _ at lvh.io  Mon Jan 13 07:22:51 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 15:22:51 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <20140113141911.17936.430116938.divmod.xquotient.122@top>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
Message-ID: <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>

On Mon, Jan 13, 2014 at 3:19 PM, <exarkun at twistedmatrix.com> wrote:

> select() has a hard limit that is often 1024.  Make sure you're not using
> the select()-based reactor (which I think is probably the default on OS X).
>
> Jean-Paul
>

What is the A-grade reactor on OS X? I thought it was cfreactor, but the
docs appear to brand it as a GUI reactor (that doesn't mean it can't be
better than select, of course); perhaps it's kqueuereactor but I hear
kqueue is kind of gimpy on OS X compared to FreeBSD (but I have no idea
what that actually entails).

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/a775b527/attachment.html>

From glyph at twistedmatrix.com  Mon Jan 13 16:31:37 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2014 15:31:37 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
Message-ID: <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>


On Jan 12, 2014, at 4:42 PM, johnnadre <johnnadre at zoho.com> wrote:

> 
> ---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> wrote ---- 
> 
>> On 09:01 pm, johnnadre at zoho.com wrote: 
>>> 
>>> Hi, 
>>> 
>>> I want to exit my application immediately when CTRL+C is pressed,  
>>> however reactor hangs when there are running threads. 
>>> Some of these threads have blocking I/O, so I can't simply set a  
>>> variable or wait for them to terminate. An example application would  
>>> be: 
>> 
>> Python threads (being plain old operating systems; for example, POSIX  
>> threads) aren't generally interruptable.  You could try exiting the  
>> entire process using `os._exit`. 

Well, there's always pthread_kill, now exposed as os.pthread_kill on Python 3.3, but ... don't do that.  Nothing good will come of it.

>> This is the case whether you're using Twisted or not. 
> 
> Thanks! That's exactly what I was looking for.

If you need to use os._exit, your application probably has a bug :-).

(Not to say you should never use it, but any time you use it you should be simultaneously looking into why you need to.)

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/4afdcc1a/attachment.bin>

From glyph at twistedmatrix.com  Mon Jan 13 16:37:19 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2014 15:37:19 -0800
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
 <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
Message-ID: <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>


On Jan 13, 2014, at 6:22 AM, Laurens Van Houtven <_ at lvh.io> wrote:

> On Mon, Jan 13, 2014 at 3:19 PM, <exarkun at twistedmatrix.com> wrote:
> select() has a hard limit that is often 1024.  Make sure you're not using the select()-based reactor (which I think is probably the default on OS X).
> 
> Jean-Paul
> 
> What is the A-grade reactor on OS X? I thought it was cfreactor, but the docs appear to brand it as a GUI reactor (that doesn't mean it can't be better than select, of course); perhaps it's kqueuereactor but I hear kqueue is kind of gimpy on OS X compared to FreeBSD (but I have no idea what that actually entails).

Actually, by default, cfreactor doesn't even support a GUI; you need to specifically install a different main loop (as the docs explain, "install(runner=PyObjCTools.AppHelper.runEventLoop)") in order to integrate with a GUI.  The reason the docs brand it as such is that you cannot have an OS X GUI cooperate with your Twisted main loop using a different reactor.

KQueue's gimpiness is entirely to do with deficiencies in its behavior with regard to weird file descriptor types, mostly PTYs.  (I've seen some people talking about difficulties with pipes, but I've never had an issue with them personally; I don't know what that's about.)  If all you need to do is talk to a lot of sockets, KQueue is just fine.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/9ce07350/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140113/9ce07350/attachment.bin>

From spuram at kiwiup.com  Tue Jan 14 02:05:20 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Tue, 14 Jan 2014 14:35:20 +0530
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <20140113141911.17936.430116938.divmod.xquotient.122@top>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
Message-ID: <CAEEwdo+x8QbbC5Tm3Gq6w+pxRwf6Y9B8G2FnysFQx+nC4EyJHg@mail.gmail.com>

Thanks Jean.

Changing reactor kQueue on OSX fixed this issue.


On Mon, Jan 13, 2014 at 7:49 PM, <exarkun at twistedmatrix.com> wrote:

> On 01:28 pm, spuram at kiwiup.com wrote:
>
>> Hi all,
>>
>> I am doing load testing on my twisted SSL server. I spawn threads(~2000)
>> from the application and each thread will act as a SSL client and connect
>> to the server.
>>
>> [snip]
>>
>>
>> Now it fails after 1010 successful connections. I checked the number of
>> open files of the server process it remains at 1010 and there are no stale
>> open files.
>>
>
> select() has a hard limit that is often 1024.  Make sure you're not using
> the select()-based reactor (which I think is probably the default on OS X).
>
> Jean-Paul
>
>> Client shows the same error
>> *SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*
>>
>>
>> Twisted logs on the server shows that it connects first and then
>> disconnects with this error.
>>
>> *<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
>> *<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
>> routines', 'SSL23_READ', 'ssl handshake failure')]*
>>
>>
>> How can I fix this ? How should I approach to debug ?
>>
>> Thanks
>> -Sumanth
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140114/5dfdc319/attachment.html>

From exarkun at twistedmatrix.com  Tue Jan 14 04:12:18 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jan 2014 11:12:18 -0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
Message-ID: <20140114111218.17936.1588265146.divmod.xquotient.129@top>

On 13 Jan, 11:31 pm, glyph at twistedmatrix.com wrote:
>
>On Jan 12, 2014, at 4:42 PM, johnnadre <johnnadre at zoho.com> wrote:
>>
>>---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> 
>>wrote ----
>>>On 09:01 pm, johnnadre at zoho.com wrote:
>>>>
>>>>Hi,
>>>>
>>>>I want to exit my application immediately when CTRL+C is pressed,
>>>>however reactor hangs when there are running threads.
>>>>Some of these threads have blocking I/O, so I can't simply set a
>>>>variable or wait for them to terminate. An example application would
>>>>be:
>>>
>>>Python threads (being plain old operating systems; for example, POSIX
>>>threads) aren't generally interruptable.  You could try exiting the
>>>entire process using `os._exit`.
>
>Well, there's always pthread_kill, now exposed as os.pthread_kill on 
>Python 3.3, but ... don't do that.  Nothing good will come of it.
>>>This is the case whether you're using Twisted or not.
>>
>>Thanks! That's exactly what I was looking for.
>
>If you need to use os._exit, your application probably has a bug :-).
>
>(Not to say you should never use it, but any time you use it you should 
>be simultaneously looking into why you need to.)
>
>-glyph

I think you may as well say the same about needing to use threads.  The 
needs are pretty closely related, anyway.

Consider an application that uses twisted.enterprise.adbapi to talk to a 
SQL server, is running when the network suffers a failure that leaves a 
cursor waiting for data from the server, and then the user decides they 
want to exit the application.

Most likely the cursor will block forever on a recv() call, the thread 
it runs in will never proceed, and the process will never exit.

Whether this is a bug or an unavoidable consequence of doing blocking 
I/O using POSIX threads or both...

Jean-Paul


From dustin at v.igoro.us  Tue Jan 14 07:27:23 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 09:27:23 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <20140114111218.17936.1588265146.divmod.xquotient.129@top>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
Message-ID: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>

There are two things wrong with your scenario.

First, in any production or production-ready environment, your
software needs to correctly handle stuck TCP connections.  With the
proliferation of "smart" network equipment (session-tracking
firewalls, etc.), this is much more common than it was five or ten
years ago.  Some DBAPI backends are better about this than others -
for example, MySQL-Python gets it right, but PyMySQL does not.

Second, this has nothing whatsoever to do with whether the I/O is
blocking or not.  Twisted apps can and, believe me from experience, do
suffer from stuck TCP connections.  Sure, the wasted resources in this
case are smaller (just a file descriptor, not a thread), but the user
experience is the same (part of the application hangs irreversibly).
In fact, this is about the only thing the manhole is used for at
Mozilla: running `os.close` on stuck fd's.

Dustin


From p.mayers at imperial.ac.uk  Tue Jan 14 08:05:49 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Jan 2014 15:05:49 +0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
Message-ID: <52D5524D.2060306@imperial.ac.uk>

On 14/01/14 14:27, Dustin J. Mitchell wrote:
> There are two things wrong with your scenario.
>
> First, in any production or production-ready environment, your
> software needs to correctly handle stuck TCP connections.  With the
> proliferation of "smart" network equipment (session-tracking
> firewalls, etc.), this is much more common than it was five or ten
> years ago.  Some DBAPI backends are better about this than others -
> for example, MySQL-Python gets it right, but PyMySQL does not.

That is certainly a fine sentiment with which I agree in principle, but 
an ENORMOUSLY LARGE amount of (really very expensive and business 
critical) software doesn't handle this *at all* as anyone who runs a 
firewall in front of an e-Business app can tell you.

[A well known vendor whose name rhymes with a type of traditional small 
boat used extensively in the British Isles is a particular offender]

So if you're handling this correctly, give yourself a pat on the back - 
there is software costing millions a year in licence fees that assumes 
TCP is as reliable as CPU->CPU cache communications :o(

> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.

I'm wondering if TCP keepalive isn't any use to you in this regard?

(and what do Mozilla do with Twisted? :o)


From dustin at v.igoro.us  Tue Jan 14 08:10:39 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 10:10:39 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <52D5524D.2060306@imperial.ac.uk>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <52D5524D.2060306@imperial.ac.uk>
Message-ID: <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>

On Tue, Jan 14, 2014 at 10:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I'm wondering if TCP keepalive isn't any use to you in this regard?

It is, but only in cases where we can tweak kernel parameters
appropriately so that the timeout is not >2h.

> (and what do Mozilla do with Twisted? :o)

Buildbot, among other things.

Dustin


From p.mayers at imperial.ac.uk  Tue Jan 14 08:22:20 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Jan 2014 15:22:20 +0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <52D5524D.2060306@imperial.ac.uk>
 <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>
Message-ID: <52D5562C.8020409@imperial.ac.uk>

On 14/01/14 15:10, Dustin J. Mitchell wrote:
> On Tue, Jan 14, 2014 at 10:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> I'm wondering if TCP keepalive isn't any use to you in this regard?
>
> It is, but only in cases where we can tweak kernel parameters
> appropriately so that the timeout is not >2h.

Hmm. I see Twisted has no API to set this using the socket options, 
which is unfortunate. I've opened #6897 for that.

Presumably there should be endpoint syntax for it too...

>> (and what do Mozilla do with Twisted? :o)
>
> Buildbot, among other things.

Doh yes of course.


From glyph at twistedmatrix.com  Tue Jan 14 12:06:35 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2014 11:06:35 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
Message-ID: <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>

On Jan 14, 2014, at 6:27 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.

The lack of 'abortConnection' was a pretty serious design flaw in Twisted's transport interface initially, but that's been resolved for quite some time now.  It should be possible to handle this at the application level on a per-connection basis quite gracefully now.

I mean, your point is correct; you can certainly have "stuck" event sources in Twisted too, without any threads.  And without any intervention it results in exactly the same bad user experience.  I've certainly seen it myself.

However, intervention is easier than with a stuck thread.  You can't interrupt an arbitrary thread; you don't know and can't tell what it is doing without pretty invasive debugging instrumentation.  And, as you note, even before the advent of abortConnection, an os.close() could easily deal with a stuck async FD on a per-connection basis, without need to bring the entire process down.

Finally, we have abortConnection now, so my main point stands; the point was not "never call os._exit" but rather "if you have to call os._exit, there's a bug".  The same is true here: if you have to manhole into your server to call os.close, there's a bug in your application where it's not timing something out and freeing a resource it otherwise could be freeing.

Unless your contention is that there are no bugs in buildbot? ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140114/bb6fc3ce/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140114/bb6fc3ce/attachment.bin>

From dustin at v.igoro.us  Tue Jan 14 12:37:50 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 14:37:50 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>
Message-ID: <CAJtE5vQphZZrHO3S65Z_DTtnmYJWSuVnGdtyy7-YZS2mVopw7g@mail.gmail.com>

You're absolutely right.  I wasn't arguing with you, but with JP :)

Dustin

On Tue, Jan 14, 2014 at 2:06 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> On Jan 14, 2014, at 6:27 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
>
> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.
>
>
> The lack of 'abortConnection' was a pretty serious design flaw in Twisted's
> transport interface initially, but that's been resolved for quite some time
> now.  It should be possible to handle this at the application level on a
> per-connection basis quite gracefully now.
>
> I mean, your point is correct; you can certainly have "stuck" event sources
> in Twisted too, without any threads.  And without any intervention it
> results in exactly the same bad user experience.  I've certainly seen it
> myself.
>
> However, intervention is easier than with a stuck thread.  You can't
> interrupt an arbitrary thread; you don't know and can't tell what it is
> doing without pretty invasive debugging instrumentation.  And, as you note,
> even before the advent of abortConnection, an os.close() could easily deal
> with a stuck async FD on a per-connection basis, without need to bring the
> entire process down.
>
> Finally, we have abortConnection now, so my main point stands; the point was
> not "never call os._exit" but rather "if you have to call os._exit, there's
> a bug".  The same is true here: if you have to manhole into your server to
> call os.close, there's a bug in your application where it's not timing
> something out and freeing a resource it otherwise could be freeing.
>
> Unless your contention is that there are no bugs in buildbot? ;-)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From glyph at twistedmatrix.com  Tue Jan 14 12:49:44 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2014 11:49:44 -0800
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
 <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
 <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>
Message-ID: <BE79CD31-F50E-4459-8BF8-8457FD6AEE73@twistedmatrix.com>


On Jan 13, 2014, at 3:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> KQueue's gimpiness is entirely to do with deficiencies in its behavior with regard to weird file descriptor types, mostly PTYs.

Hmm.  And actually, I believe, this was fixed on Mavericks but we haven't updated our test configuration yet.  I just enabled the kqueue reactor on my Mavericks machine, and:

  PTYProcessTestsBuilder_KQueueReactor
    test_changeGID ...                                                [SKIPPED]
    test_changeUID ...                                                [SKIPPED]
    test_openFileDescriptors ...                                           [OK]
    test_processExitedRaises ...                                           [OK]
    test_processExitedWithSignal ...                                       [OK]
    test_processTransportInterface ...                                     [OK]
    test_spawnProcessEarlyIsReaped ...                                     [OK]
    test_systemCallUninterruptedByChildExit ...                            [OK]
    test_timelyProcessExited ...                                           [OK]
    test_write ...                                                         [OK]
    test_writeSequence ...                                                 [OK]
    test_writeToChild ...                                                  [OK]
    test_writeToChildBadFileDescriptor ...                                 [OK]



-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140114/92393407/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140114/92393407/attachment-0001.bin>

From tmkasun at gmail.com  Fri Jan 17 11:06:10 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Fri, 17 Jan 2014 23:36:10 +0530
Subject: [Twisted-Python] starting point to contribute
Message-ID: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>

Hi all,
         I'm kasun from srilanka, and i'm developing a vehicle tracking
system for one of our government authorities,when i start coding for the
project, I used the support of basic python modules(socket,threading)[1],
then I got to know about the usability of Twisted and re-factored the
code[2] to use Twisted because it's a great python network framework.
so I have hands on experience with the framework.I'm happy to start
contributing to twisted community.and i have already gone through two
articles about the development process (ContributingToTwistedLabs and
TwistedDevelopment).So if you can suggest me a good starting point I would
be more than happy to contribute

reference:
[1]:
https://github.com/tmkasun/port/blob/kasun/server_Program/server_tcp.py
[2]:
https://github.com/tmkasun/port/blob/kasun/server_Program/server_twisting/gps_server.py

-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/e919289b/attachment.html>

From sank.daniel at gmail.com  Fri Jan 17 13:33:46 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Fri, 17 Jan 2014 12:33:46 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
Message-ID: <CAKN9TDJ5XfQBzuGBpdUBpGyEODLfqTD2Q0E9XmbJTodWNoRFcQ@mail.gmail.com>

I think the general idea is to find tickets on the webpage and just go
ahead and fix them. You can sort them by difficulty.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/022acc19/attachment.html>

From twisted-python at 2xlp.com  Fri Jan 17 13:43:11 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Fri, 17 Jan 2014 15:43:11 -0500
Subject: [Twisted-Python] strategies for tracking down memory issues
Message-ID: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>


some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!

looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs. 

i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.  

i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?

From werner at thieprojects.ch  Fri Jan 17 14:41:59 2014
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 17 Jan 2014 11:41:59 -1000
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
Message-ID: <52D9A3A7.3040703@thieprojects.ch>

On 1/17/14 10:43 AM, Jonathan Vanasco wrote:
>
> some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!
>
> looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs.
>
> i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.
>
> i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?

Hi

A few years ago I ran into the problem of non collectable cycles being 
produced by keeping references around in objects locally.

Please find attached a snippet of code I used over and over again for 
hunting down such cycles. It's for sure not a simple cure, but with a 
manhole service being run in your process of question, it gives you the 
telltale signs your looking for.

Use it like

from dumpObjects import dumpObjects

dumpObjects()

Various include/exclude sets should help you to narrow the search in 
consecutive runs.

As for the lifecycle of deferreds I never ever had a problem with 
deferreds not being cleaned up, it has always been me who produced those 
non collectable cycles, usually under the false assumption, that it was 
safe to keep a ref handy.

Werner

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dumpObjects.py
Type: text/x-python
Size: 1935 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/b3d0ad11/attachment.py>

From glyph at twistedmatrix.com  Fri Jan 17 16:29:17 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 15:29:17 -0800
Subject: [Twisted-Python] large features and code review
Message-ID: <16550848-92F8-420E-A69A-2B0C82506ED2@twistedmatrix.com>

I've just put the fancy new logging branch into review that wsanchez and I have been working on for several months now.  It's pretty big, and we've had difficulty with reviewing large changes in the past, so I suggested a novel review strategy:

	<https://twistedmatrix.com/trac/ticket/6750#comment:36>

I am hopeful that this can provide the benefits of reviewing a whole feature all at once, which is to say, the ability for a reviewer to understand all of the changes in context, and also the benefits of reviewing a sensibly-sized change, since we took some care to split the new logging package into, if not bite-sized, at least meal-sized separate private implementation modules.

Let me know if there's anything we can do to make this easier to review,

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/577ee9dc/attachment.bin>

From glyph at twistedmatrix.com  Fri Jan 17 17:02:27 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 16:02:27 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
Message-ID: <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>


On Jan 17, 2014, at 10:06 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:

> Hi all, 
>          I'm kasun from srilanka, and i'm developing a vehicle tracking system for one of our government authorities,when i start coding for the project, I used the support of basic python modules(socket,threading)[1], then I got to know about the usability of Twisted and re-factored the code[2] to use Twisted because it's a great python network framework.
> so I have hands on experience with the framework.I'm happy to start contributing to twisted community.and i have already gone through two articles about the development process (ContributingToTwistedLabs and TwistedDevelopment).So if you can suggest me a good starting point I would be more than happy to contribute 

Hi Kasun!

I'm so happy to hear that you've had a positive experience developing something with Twisted, and even happier to hear that you'd like to contribute.

There's a bit of a getting-started guide at <https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>, but please feel free to ask more questions as you work your way through it.

I would like to suggest something more specific but I don't know a lot about you yet, and there are a lot of potential things to suggest :-).  What are your interests?  What parts of Twisted would you like to contribute to?

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/78fa2619/attachment-0001.bin>

From glyph at twistedmatrix.com  Fri Jan 17 17:06:54 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 16:06:54 -0800
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
Message-ID: <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>


On Jan 17, 2014, at 12:43 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> 
> some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!
> 
> looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs. 
> 
> i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.  
> 
> i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?

First off, just manhole in and inspect gc.garbage :-).

Second, I've had pretty good luck with <http://www.aminus.net/wiki/Dowser>, although it would be nice if it were a little easier to set up without writing a weird little custom code hook and having to decide where to put it.

However, you can sort reachable objects by count and type, so you can see which of your classes or Twisted's classes are hanging around in memory and that will usually very quickly give you an idea of where the issue might be.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/c035de1b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/c035de1b/attachment.bin>

From kevin.horn at gmail.com  Fri Jan 17 18:32:10 2014
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 17 Jan 2014 19:32:10 -0600
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
 <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
Message-ID: <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>

On Fri, Jan 17, 2014 at 6:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 17, 2014, at 12:43 PM, Jonathan Vanasco <twisted-python at 2xlp.com>
> wrote:
>
>
> some recent changes to a very-happy twisted daemon have resulted in a
> process that grows in memory until it crashes the box.  boo!
>
> looking through the code and logs, i'm wondering if i''ve coded things in
> such a way that defferds or deferrd lists are somehow not getting cleaned
> up if an unhandled exception occurs.
>
> i've been looking through all my former notes and some questions on stack
> overflow, and I've seen a lot of info on using heapy and other tools to
> find issues on a function-by-function basis.
>
> i'm wondering if anyone has experience in simply monitoring the lifecycle
> of deferreds ?
>
>
> First off, just manhole in and inspect gc.garbage :-).
>
> <snip>

>
> -glyph
>

I had a similar situation several years ago, and messed around with heapy
and some other Python memory profiling tools, but the manhole + gc.garbage
was both the easiest and most effective.

One other thing I did was to set up a separate Twisted Service that would
run a memory profiling function periodically (I think it just looked at
gc.garbage, and sorted things nicely) and log it.

I used txScheduler (which I wrote) for that.  In fact that's part of why I
wrote it.

I can't give you much more detail than that, though.  It was over 5 years
ago, and I don't have access to that code any more.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/3a08f49d/attachment.html>

From glyph at twistedmatrix.com  Fri Jan 17 19:11:26 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 18:11:26 -0800
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
 <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
 <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>
Message-ID: <EA7889E9-6155-4F76-875E-B2C777831FCD@twistedmatrix.com>


On Jan 17, 2014, at 5:32 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> I used txScheduler (which I wrote) for that.

Available here: <https://bitbucket.org/khorn/txscheduler>.

> In fact that's part of why I wrote it.

Not to be confused with TxScheduling: <https://pypi.python.org/pypi/TxScheduling>.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/25a28b4a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/25a28b4a/attachment.bin>

From twisted-python at 2xlp.com  Fri Jan 17 19:22:52 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Fri, 17 Jan 2014 21:22:52 -0500
Subject: [Twisted-Python] possible error in twisted app
Message-ID: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>

a portion of my twisted app is having some problems.  i think i figured out the issue -- but if I'm right.. i'll be a bit lost.

this portion of the app is essentially a web scraper.  it grabs a batch of X urls from a data broker , and then updates a database with data about the URL ( which either comes from an oEmbed endpoint , a third party data provider, or scraping the page if needed )

there's a lot of code that would be messy to follow, so i'll just explain it as best as possible, and provide some highlights.

the underlying logic is basically this:

	reactor starts an UpdateLinksService, that checks for new batches every 30 seconds
	the UpdateLinksService has an internal marker to check if it's still processing the last batch - or if it's safe to process

	to process the urls, the UpdateLinksService runs them in a request wrapper , that is supposed to be run through a defer.DeferredSemaphore() service

	when i'm done with the batch, i clear out internal marker via a `deferred_list_finish` method.

looking at some aggressive debugging output, it looks like my work to process a url is happening /after/ i call deferred_list_finish.  

in other words, i've somehow structured this so that i'm instantly finished.  

i *thought* i was running out of memory because i had some phantom deferreds running around.  now i'm starting to think that i'm just stacking the queue faster than i work on it.

i've tried changing things around and using different return values, but then started getting "exceptions.AssertionError:" because "assert not isinstance(result, Deferred)" ( twisted/internet/defer.py", line 381, in callback )

the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  

thanks!

=================

class UpdateLinksService():

	def process_urls(self, urls):
		requests = []
		for url in urls:
			wrapper = requestWrapper( self.semaphoreService, dbPool ) 
			d = wrapper.queue_url(url)
			updates.append(d)
                self.d_list = defer.DeferredList( updates )\
                    .addCallback( self.deferred_list_finish )


class RequestWrapper():

	def __init__(self, semaphore_service, dbPool):
		self.semaphoreService=semaphore_service
     	self.dbPool = dbPool

    def queue_url( self, url ):
        self.url = url
        d = self.semaphoreService.run( self._to_thread )
        return d

    def _to_thread( self ):
        d = threads.deferToThread( self._thread_begin )
        return d

    def _thread_begin(self):
    	worker = UrlWorker()
        d = self.dbPool.runInteraction( worker.process_url , self.url )


class UrlWorker():

	def process_url(self,txn, url):
		#blocking stuff
		return True/False					
		
		
The reason why I have _to_thread + _thread_begin  as 2 functions, and UrlWoker separate is for code re-use.

The RequestWrapper functions are mostly all in a base class; i just subclass RequestWrapper and override _thread_begin and an error callback (not shown)

UrlWorker's various methods are used througout my twisted daemon.

From tmkasun at gmail.com  Fri Jan 17 20:57:17 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Sat, 18 Jan 2014 09:27:17 +0530
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
Message-ID: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>

Hi glyph, daniel

Thanks for your attention.  I'm more interested in GPS protocols and web
protocols.

Since the project I'm working on is more focused on GPS protocols, I have
already gone through GPS protocols in twisted[1]

Please excuse typing errors,

[1]: http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/gps/
On Sat, Jan 18, 2014 at 5:32 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 17, 2014, at 10:06 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:
>
> > Hi all,
> >          I'm kasun from srilanka, and i'm developing a vehicle tracking
> system for one of our government authorities,when i start coding for the
> project, I used the support of basic python modules(socket,threading)[1],
> then I got to know about the usability of Twisted and re-factored the
> code[2] to use Twisted because it's a great python network framework.
> > so I have hands on experience with the framework.I'm happy to start
> contributing to twisted community.and i have already gone through two
> articles about the development process (ContributingToTwistedLabs and
> TwistedDevelopment).So if you can suggest me a good starting point I would
> be more than happy to contribute
>
> Hi Kasun!
>
> I'm so happy to hear that you've had a positive experience developing
> something with Twisted, and even happier to hear that you'd like to
> contribute.
>
> There's a bit of a getting-started guide at <
> https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>, but
> please feel free to ask more questions as you work your way through it.
>
> I would like to suggest something more specific but I don't know a lot
> about you yet, and there are a lot of potential things to suggest :-).
>  What are your interests?  What parts of Twisted would you like to
> contribute to?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140118/bdc37a32/attachment.html>

From sank.daniel at gmail.com  Fri Jan 17 22:55:08 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Fri, 17 Jan 2014 21:55:08 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
Message-ID: <CAKN9TDK52C_Hw7mHC59y1-vjO3hmWOM8L92migUh+Za9xGPeUg@mail.gmail.com>

Kasun,

For the record I'm kind of a n00b myself.

-Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140117/a615ebd9/attachment.html>

From hs at ox.cx  Sat Jan 18 03:45:47 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 18 Jan 2014 11:45:47 +0100
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
Message-ID: <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>

Hi Kasun,

On 18 Jan 2014, at 4:57, Kasun Thennakoon wrote:

> Thanks for your attention.  I'm more interested in GPS protocols and 
> web
> protocols.

If you?re into GPS, you may enjoy helping 
https://twistedmatrix.com/trac/ticket/3926 getting merged at last!

Cheers,
?h


From tmkasun at gmail.com  Sat Jan 18 11:10:53 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Sat, 18 Jan 2014 23:40:53 +0530
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
 <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>
Message-ID: <CAP7UUeOea7TFtBHDvHCqOvWeod_1mTsg=QOXS_BJ9Ghna1ZSqQ@mail.gmail.com>

Hi Hynek

thank you so much , yes sure i'll do my best. start reading the thread and
still at the middle of it.
thanks again




On Sat, Jan 18, 2014 at 4:15 PM, Hynek Schlawack <hs at ox.cx> wrote:

> Hi Kasun,
>
>
> On 18 Jan 2014, at 4:57, Kasun Thennakoon wrote:
>
>  Thanks for your attention.  I'm more interested in GPS protocols and web
>> protocols.
>>
>
> If you?re into GPS, you may enjoy helping https://twistedmatrix.com/
> trac/ticket/3926 getting merged at last!
>
> Cheers,
>
> ?h
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140118/94bd7146/attachment.html>

From glyph at twistedmatrix.com  Sat Jan 18 17:17:01 2014
From: glyph at twistedmatrix.com (GMail)
Date: Sat, 18 Jan 2014 16:17:01 -0800
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
Message-ID: <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>

Hi Jonathan,

On Jan 17, 2014, at 6:22 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  

I'd love to help, but a "rough composite" is hard to make guesses about, especially since you're talking about hard-to-predict memory-consumption behavior.

Can you attach a <http://sscce.org/> which is actually runnable, for example, with a canned list of input URLs (or better yet with an included web server so the URLs can be localhost and more predictable), so we can debug and diagnose a running program instead of ideas about the outline of one?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140118/510646bb/attachment.html>

From trac at twistedmatrix.com  Sun Jan 19 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1390115115.35.4007620590577802638@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140119/735e1403/attachment.html>

From twisted-python at 2xlp.com  Sun Jan 19 14:27:05 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Sun, 19 Jan 2014 16:27:05 -0500
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
Message-ID: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>

Thanks for the offer to help.

I was hoping someone would see an apparent bug in the outline, so i wouldn't have to build a a SSCCE

unfortunately, that wasn't going to fly, so I built out a self-contained version of the issue 

Before sharing it, I added in some docs references to the example...

and then I noticed something peculiar, and seemed to have solved the problem !  

the issue was this:

1. I used twisted.internet.defer.DeferredSemaphore to set up a semaphore service
2. I queued tasks with `semaphoreService.run( to_thread_function )`
3. `to_thread_function` ran a configurable method through `threads.deferToThread`
4. the configurable method ran something in twisted.enterprise.adbapi.ConnectionPool's `runInteraction`

when copying docs, i realized that I was running `toThread` and then `runInteraction` , which uses it's own thread.  so i had threads spawning threads.

the base 'scaffold' for this daemon has been modified and patched since 2005 , so at some point i made an improvement and left some semi-functional legacy cruft in there.

i'm not sure of the specifics on how / why this manifests, but if I just use runInteraction and bypass using `deferToThread`, everything works out perfect.

if you're curious , i tossed the example online here

	https://github.com/jvanasco/twisted_gist_001

	`constants.py` has some toggles for playing with the return values of the various functions ( controls the base class and subclass )

	it also lets you toggle to use the broken functionality ( thread within a thread ) or what seems to work fine now


happy i seemed to have solved this myself.  still confused why the issue happened , but this fix ( only 1 thread ) seems to be fine and the more ideal approach








On Jan 18, 2014, at 7:17 PM, GMail wrote:

> Hi Jonathan,
> 
> On Jan 17, 2014, at 6:22 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
>> the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  
> 
> I'd love to help, but a "rough composite" is hard to make guesses about, especially since you're talking about hard-to-predict memory-consumption behavior.
> 
> Can you attach a <http://sscce.org/> which is actually runnable, for example, with a canned list of input URLs (or better yet with an included web server so the URLs can be localhost and more predictable), so we can debug and diagnose a running program instead of ideas about the outline of one?
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140119/acb3c186/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 19 15:46:53 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 19 Jan 2014 14:46:53 -0800
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
 <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
Message-ID: <1F85B3B7-D717-4327-BD5D-F59C6CBFC175@twistedmatrix.com>

On Jan 19, 2014, at 1:27 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> Before sharing it, I added in some docs references to the example...
> 
> and then I noticed something peculiar, and seemed to have solved the problem !  

.... aaaaand that right there is a major reason we ask people for SSCCEs when they ask questions ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140119/8eb4ca05/attachment.html>

From bob.novas at shinkuro.com  Sun Jan 19 16:34:51 2014
From: bob.novas at shinkuro.com (Bob Novas)
Date: Sun, 19 Jan 2014 18:34:51 -0500
Subject: [Twisted-Python] Question on log time stamp precision
Message-ID: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>

 

The log is very valuable to me for debugging, but I'd love to know how to
improve the precision of the time stamp.  My log shows stuff like this:

 

2014-01-19 12:44:37-0500 [-] 'SCPProtocol.ackNotReceived:
aa23827e20547c6aca71ecfcdeb486a99fe6cf314e1b84e687296821a8ca423a'

2014-01-19 12:44:37-0500 [-] "doSCPInitiation.noResponseReceived:
err=[Failure instance: Traceback (failure with no frames): <class
'communication.scp.scp.AckReceivingFailed'>: ACKNOTRECEIVED\n]"

2014-01-19 12:44:37-0500 [-]

 

>From calling twisted.python.log.msg( "stuff to log" )

 

How can I change the time in the logged message to get, say, milliseconds
resolution?

Thanks,
Bob 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140119/7cabefb6/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 6085 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140119/7cabefb6/attachment-0001.bin>

From dustin at v.igoro.us  Sun Jan 19 16:47:24 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 19 Jan 2014 18:47:24 -0500
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
Message-ID: <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>

>From what I can tell in a few old bugs and the API docs, the key is to
monkey-patch log.FileLogObserver.timeFormat.

Dustin


From exarkun at twistedmatrix.com  Sun Jan 19 18:54:27 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 01:54:27 -0000
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
 <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
Message-ID: <20140120015427.17936.1534192133.divmod.xquotient.171@top>

On 19 Jan, 09:27 pm, twisted-python at 2xlp.com wrote:
>Thanks for the offer to help.
>
>
>i'm not sure of the specifics on how / why this manifests, but if I 
>just use runInteraction and bypass using `deferToThread`, everything 
>works out perfect.

To intentionally slightly misinterpret you, the specifics might not be 
as interesting in this case as this general principle:

Twisted APIs are not safe to call except from the thread the reactor is 
running in.

There are exceptions, most notably `reactor.callFromThread`, but they 
are *extremely* rare.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Jan 19 18:55:44 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 01:55:44 -0000
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
Message-ID: <20140120015544.17936.330118184.divmod.xquotient.173@top>

On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>> From what I can tell in a few old bugs and the API docs, the key is to
>monkey-patch log.FileLogObserver.timeFormat.

Or just politely set it on the instance of FileLogObserver your 
application creates so as to avoid global side-effects. :)

Jean-Paul


From dustin at v.igoro.us  Sun Jan 19 19:16:33 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 19 Jan 2014 21:16:33 -0500
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <20140120015544.17936.330118184.divmod.xquotient.173@top>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
 <20140120015544.17936.330118184.divmod.xquotient.173@top>
Message-ID: <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>

On Sun, Jan 19, 2014 at 8:55 PM,  <exarkun at twistedmatrix.com> wrote:
> On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>>>
>>> From what I can tell in a few old bugs and the API docs, the key is to
>>
>> monkey-patch log.FileLogObserver.timeFormat.
>
>
> Or just politely set it on the instance of FileLogObserver your application
> creates so as to avoid global side-effects. :)

Ah, which is returned from startLogging, so

--
from twisted.python import log

lo = log.startLogging(sys.stdout)
lo.formatTime = lambda when:
datetime.datetime.fromtimestamp(when).strftime("%H:%M:%S.%f")

log.msg("Hello!")
--

I'm not sure how you'd find that object under Twistd, though.

Dustin


From spuram at kiwiup.com  Mon Jan 20 02:15:37 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 20 Jan 2014 14:45:37 +0530
Subject: [Twisted-Python]  Better usage of Twisted on multi core processor
Message-ID: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>

Hi all,

I have a twisted TCP server to listens to client, processes requests, do
mysql database operations if needed (using adbapi Connection pool) and
return the result. Before deploying this in production, I want to know
right way to configure the server.

Since twisted is single threaded, how can I leverage multiple cores of my
production machine (which has 6 cores and 16 GB RAM) ?

One approach that I thought of was to start multiple instances of twisted
server on different ports. This would help in using the other cores as
well. What do you guys suggest ?

Thanks
-Sumanth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140120/d288c512/attachment.html>

From _ at lvh.io  Mon Jan 20 07:30:39 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 20 Jan 2014 15:30:39 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
Message-ID: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>

Hi Sumanth,


The first answer by JP Calderone (exarkun) on the following stackoverflow
question may be of some assistance.

http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor

This answer is from 2012; the good news is that the good API that JP talks
about in his answer is now available in released Twisteds IIUC :)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140120/cd40cc83/attachment.html>

From exarkun at twistedmatrix.com  Mon Jan 20 12:35:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 19:35:56 -0000
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
 <20140120015544.17936.330118184.divmod.xquotient.173@top>
 <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>
Message-ID: <20140120193556.17936.628550854.divmod.xquotient.175@top>

On 02:16 am, dustin at v.igoro.us wrote:
>On Sun, Jan 19, 2014 at 8:55 PM,  <exarkun at twistedmatrix.com> wrote:
>>On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>>>>
>>>> From what I can tell in a few old bugs and the API docs, the key is 
>>>>to
>>>
>>>monkey-patch log.FileLogObserver.timeFormat.
>>
>>
>>Or just politely set it on the instance of FileLogObserver your 
>>application
>>creates so as to avoid global side-effects. :)
>
>Ah, which is returned from startLogging, so
>
>--
>from twisted.python import log
>
>lo = log.startLogging(sys.stdout)
>lo.formatTime = lambda when:
>datetime.datetime.fromtimestamp(when).strftime("%H:%M:%S.%f")
>
>log.msg("Hello!")
>--
>
>I'm not sure how you'd find that object under Twistd, though.

If you have a tac file, set it yourself.  If you're using a twistd 
plugin, use the `--logger` option:

https://twistedmatrix.com/documents/current/core/howto/application.html#auto5

Jean-Paul


From exarkun at twistedmatrix.com  Tue Jan 21 05:22:41 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 12:22:41 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
Message-ID: <20140121122241.17936.754080051.divmod.xquotient.195@top>

Hello all,

I'm happy to announce the third alpha leading up to the release of 
pyOpenSSL 0.14.

pyOpenSSL is the library Twisted uses for all of its SSL functionality.

pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL 
0.13.  Any and all testing is greatly appreciated.

You can read more about the changes and download the source tarball from 
the github release page:

  https://github.com/pyca/pyopenssl/releases/tag/0.14a3

Feel free to leave feedback here, on a github issue, or on the pyOpenSSL 
mailing list.

Thanks!
Jean-Paul


From _ at lvh.io  Tue Jan 21 05:44:18 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 13:44:18 +0100
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121122241.17936.754080051.divmod.xquotient.195@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
Message-ID: <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>

Hi JP,


FWIW, clarent appears to work fine against twisted and pyopenssl trunk. Is
there a significant difference between the alpha and trunk (so that I
should also test against the alpha specifically)?

merlyn blows up, but that appears to be only because Axiom uses unsignedID,
which has been removed from twisted apparently :)

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/effa721c/attachment.html>

From jon at multani.info  Tue Jan 21 06:25:36 2014
From: jon at multani.info (Jonathan Ballet)
Date: Tue, 21 Jan 2014 21:25:36 +0800
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121122241.17936.754080051.divmod.xquotient.195@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
Message-ID: <20140121132534.GA27733@danio.home>

On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.com wrote:
> Hello all,
>
> I'm happy to announce the third alpha leading up to the release of
> pyOpenSSL 0.14.
>
> pyOpenSSL is the library Twisted uses for all of its SSL functionality.
>
> pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
> 0.13.  Any and all testing is greatly appreciated.

I'm glad to see the new documentation will finally show up!

 Jonathan


From exarkun at twistedmatrix.com  Tue Jan 21 06:26:52 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 13:26:52 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
Message-ID: <20140121132652.17936.1265870595.divmod.xquotient.200@top>

On 12:44 pm, _ at lvh.io wrote:
>Hi JP,
>
>
>FWIW, clarent appears to work fine against twisted and pyopenssl trunk. 
>Is
>there a significant difference between the alpha and trunk (so that I
>should also test against the alpha specifically)?
>
>merlyn blows up, but that appears to be only because Axiom uses 
>unsignedID,
>which has been removed from twisted apparently :)

Hi Laurens,

Right now pyOpenSSL trunk and the release branch only differ in the 
version number they report.  There are some important differences 
between a2 and a3 though (so if you tested trunk before I announced a3 
you might not have tested the latest code - of course, I hope those 
changes only fixed things, not introduced any new bugs ;).

Thanks!
Jean-Paul


From _ at lvh.io  Tue Jan 21 06:30:12 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 14:30:12 +0100
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121132652.17936.1265870595.divmod.xquotient.200@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
 <20140121132652.17936.1265870595.divmod.xquotient.200@top>
Message-ID: <CAE_Hg6YNgAvjDxvjbT+j8L7c0b6MTu6JTb_tinGs67sSVaqFCA@mail.gmail.com>

On Tue, Jan 21, 2014 at 2:26 PM, <exarkun at twistedmatrix.com> wrote:

> Hi Laurens,
>
> Right now pyOpenSSL trunk and the release branch only differ in the
> version number they report.  There are some important differences between
> a2 and a3 though (so if you tested trunk before I announced a3 you might
> not have tested the latest code - of course, I hope those changes only
> fixed things, not introduced any new bugs ;).


Yep, I've been testing against trunk pretty much continuously over the last
few days, so I think we're good.

Anyway, all systems green AFAICT, at least no PyOpenSSL bugs..

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/1dc9b122/attachment.html>

From exarkun at twistedmatrix.com  Tue Jan 21 06:32:43 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 13:32:43 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121132534.GA27733@danio.home>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
Message-ID: <20140121133243.17936.1954928131.divmod.xquotient.202@top>

On 01:25 pm, jon at multani.info wrote:
>On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>Hello all,
>>
>>I'm happy to announce the third alpha leading up to the release of
>>pyOpenSSL 0.14.
>>
>>pyOpenSSL is the library Twisted uses for all of its SSL 
>>functionality.
>>
>>pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
>>0.13.  Any and all testing is greatly appreciated.
>
>I'm glad to see the new documentation will finally show up!

Indeed. :)  Sorry about the long delay in publishing this and thank you 
for doing the conversion. :)

Jean-Paul


From spuram at kiwiup.com  Tue Jan 21 07:21:51 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Tue, 21 Jan 2014 19:51:51 +0530
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
Message-ID: <CAEEwdoLRxg1Hj+O0KrD19Vej+E+ZvPdAgtkT55-Png2kZJpW7A@mail.gmail.com>

Nice.
Thanks for the info.
On Jan 20, 2014 8:02 PM, "Laurens Van Houtven" <_ at lvh.io> wrote:

> Hi Sumanth,
>
>
> The first answer by JP Calderone (exarkun) on the following stackoverflow
> question may be of some assistance.
>
>
> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
>
> This answer is from 2012; the good news is that the good API that JP talks
> about in his answer is now available in released Twisteds IIUC :)
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/a145957e/attachment.html>

From toph_ut at yahoo.de  Tue Jan 21 08:14:10 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Tue, 21 Jan 2014 15:14:10 +0000 (GMT)
Subject: [Twisted-Python] Twisted and symlink
Message-ID: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>

Hello everyone,

i was trying to port Python, Twisted, etc.. to VxWorks.
My Problem now is: twisted/python/lockfile.py (import symlink).
VxWorks doenst support symlink.

My Questions are:?
* For what is the symlink used?
* Can i disable them?
* Is there an old version without symlink?

Is there any other alternative or solution for the symlink?

Best regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/09957340/attachment-0001.html>

From _ at lvh.io  Tue Jan 21 12:41:08 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 20:41:08 +0100
Subject: [Twisted-Python] Twisted and symlink
In-Reply-To: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>
References: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>
Message-ID: <CAE_Hg6bcjcmw8UiMt7pP0TLiNr6UOYq7TJngY58GwDgXy4ao3A@mail.gmail.com>

Hi Toph,

On Tue, Jan 21, 2014 at 4:14 PM, Toph Bei Fong <toph_ut at yahoo.de> wrote:

> i was trying to port Python, Twisted, etc.. to VxWorks.
>

Ooh, exciting :)


>  My Problem now is: twisted/python/lockfile.py (import symlink).
> VxWorks doenst support symlink.
>
> My Questions are:
> * For what is the symlink used?
>

Symlinks are used for lockfiles.


>  * Can i disable them?
>

Well, maybe. Is there some way to create an atomic filesystem lock on
VxWorks?


> * Is there an old version without symlink?
>

Probably not a reasonable version, no.

Is there any other alternative or solution for the symlink?
>

Sure. That module implements an alternative for Windows. I would guess that
you would need one for VxWorks as well.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/eb9418d3/attachment.html>

From glyph at twistedmatrix.com  Tue Jan 21 14:45:32 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jan 2014 13:45:32 -0800
Subject: [Twisted-Python] PLEASE TEST: the new pyOpenSSL alpha release is a
	major change,
	and if you use TLS at all with Twisted you should test it
Message-ID: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>

Hi everyone,

Since this particular detail was in the middle of Jean-Paul's release announcement, I feel like it's important to draw attention to it.

The new pyOpenSSL v0.14 is a substantial rewrite of all of pyOpenSSL's bindings to OpenSSL: while this rewrite should be a vast improvement, because eliminates lots of error-prone hand-written C code, replacing it with much smaller, much safer declarative C bindings via cffi, it also means that things are different now.

Different means ?possibly broken? so please test any Twisted applications that use TLS with this pre-release.

Sorry for all the bold text and capital letters, but this is both a big change and also a change to a particularly security-sensitive area of the Twisted stack.  If there were ever a change that you should really test before it's marked as ?final release?, this is it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/a4f149fd/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140121/a4f149fd/attachment.bin>

From haggardii at gmail.com  Tue Jan 21 15:56:06 2014
From: haggardii at gmail.com (Matt Haggard)
Date: Tue, 21 Jan 2014 15:56:06 -0700
Subject: [Twisted-Python] PLEASE TEST: the new pyOpenSSL alpha release
 is a major change, and if you use TLS at all with Twisted you should test it
In-Reply-To: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>
References: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>
Message-ID: <CAL+xXwNhvoByxxUeQE_brVecoDAdLSS5KbgoSNFHdFnz+DkMzw@mail.gmail.com>

Okay, glyph, since you're shouting :)

When installing, I ran into not having libffi-dev installed (ubuntu).
It wasn't hard to overcome -- just a new dependency I don't typically
install.  (I'm not even gonna try on OS X 10.6.8)

I ran the functional tests of some of our stuff here at work with the
new version and didn't have any failures/changes.  We don't do
anything beyond listenSSL and connectSSL though.

Thanks for doing this.

Matt

On Tue, Jan 21, 2014 at 2:45 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> Hi everyone,
>
> Since this particular detail was in the middle of Jean-Paul's release
> announcement, I feel like it's important to draw attention to it.
>
> The new pyOpenSSL v0.14 is a substantial rewrite of all of pyOpenSSL's
> bindings to OpenSSL: while this rewrite should be a vast improvement,
> because eliminates lots of error-prone hand-written C code, replacing it
> with much smaller, much safer declarative C bindings via cffi, it also means
> that things are different now.
>
> Different means ?possibly broken? so please test any Twisted applications
> that use TLS with this pre-release.
>
> Sorry for all the bold text and capital letters, but this is both a big
> change and also a change to a particularly security-sensitive area of the
> Twisted stack.  If there were ever a change that you should really test
> before it's marked as ?final release?, this is it.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From adi at roiban.ro  Wed Jan 22 05:15:27 2014
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Jan 2014 14:15:27 +0200
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
Message-ID: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>

Hi,

I have checked twisted.web.http.HTTPChannel and I see that it limits the
headers by number and not by size.

https://github.com/twisted/twisted/blob/trunk/twisted/web/http.py#L1596

Maybe I don't see the big picture, but wouldn't this allow the server to
load in memory a request with a single header of 1G ?

Other than changing the HTTPChannel.lineReceived() implementation, is there
a way to limit header size?

I did a quick test and the server accepted an 1M cookie value without any
problem.

curl --cookie cookies.txt http://localhost:8080
cookies.txt in in this format https://gist.github.com/adiroiban/8557725

It this a feature or a bug?

Many thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140122/c1050e15/attachment.html>

From _ at lvh.io  Wed Jan 22 05:48:28 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 22 Jan 2014 13:48:28 +0100
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
Message-ID: <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>

Hi Adi,

I'm assuming this is somewhat related to
http://homakov.blogspot.be/2014/01/cookie-bomb-or-lets-break-internet.html:)

I don't know of any mechanisms to limit cookie size. It's probably a good
feature to have, and perhaps even enable by default.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140122/d4912a54/attachment-0001.html>

From adi at roiban.ro  Wed Jan 22 06:37:06 2014
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Jan 2014 15:37:06 +0200
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
 <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
Message-ID: <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>

Thanks!

This is somehow related to ticket https://twistedmatrix.com/trac/ticket/288 ,
where things are complicated.

I am worried about malicious HTTP clients sending huge data which ends in
memory.

My previous example is bad since curl will truncate cookies at 8K.

I checked the code deep and twisted.protocols.basic.LineRecever has a
default line size of  16384.
Together with the default headers count, this gives a default limit of
about 7.8MB.

I have created a ticket and we can continue there:
https://twistedmatrix.com/trac/ticket/6927

Thanks!

On 22 January 2014 14:48, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Adi,
>
> I'm assuming this is somewhat related to
> http://homakov.blogspot.be/2014/01/cookie-bomb-or-lets-break-internet.html:)
>
> I don't know of any mechanisms to limit cookie size. It's probably a good
> feature to have, and perhaps even enable by default.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140122/b4c8065f/attachment.html>

From _ at lvh.io  Wed Jan 22 06:46:33 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 22 Jan 2014 14:46:33 +0100
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
 <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
 <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>
Message-ID: <CAE_Hg6ZU=6eQFfHCubaz+ZkNEjwu2r7yM17A=4RTESvbGBTnbQ@mail.gmail.com>

Hi Adi,

Awesome! Thank you for your research & contribution.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140122/823c7f8c/attachment.html>

From adi at roiban.ro  Thu Jan 23 07:03:37 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 23 Jan 2014 16:03:37 +0200
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121133243.17936.1954928131.divmod.xquotient.202@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
 <20140121133243.17936.1954928131.divmod.xquotient.202@top>
Message-ID: <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>

Thanks for working on this!

Do you know if there are binary eggs for Windows Python 2.7 32bit for
criptography and cffi ?
This would make testing easier for people like me who don't have a Windows
development environment but have access to a default installation of
Windows.
A package containing OpenSSL as in previous pyOpenSSL distributions for
Windows would be of  great help.

I noticed that the new API no longer accepts unicode strings. As long as it
does not touches the OS filesystem this should be fine.

I checked the tests for Context.load_verify_locations() and I see that
there is no test for Unicode paths.
Linux filesystem access will accept any file name and works with UTF-8
encoded byte strings. I have tested this and it works.

But I remember that on Windows for paths containing unicode chars you
always need to pass the path as Unicode.
Maybe this is not a problem since filesystem access is handled by OpenSSL
and not by Python

--------

No problems with HTTPS support on Twisted 12.2, but I have only basic usage.

I have tested the new pyOpenSSL with my messy Implicit and Explicit FTPS
implementation and there was a single major problem with
Context.set_info_callback..

I have reported all problems in GitHub.

Thanks!


On 21 January 2014 15:32, <exarkun at twistedmatrix.com> wrote:

> On 01:25 pm, jon at multani.info wrote:
>
>> On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.comwrote:
>>
>>> Hello all,
>>>
>>> I'm happy to announce the third alpha leading up to the release of
>>> pyOpenSSL 0.14.
>>>
>>> pyOpenSSL is the library Twisted uses for all of its SSL functionality.
>>>
>>> pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
>>> 0.13.  Any and all testing is greatly appreciated.
>>>
>>
>> I'm glad to see the new documentation will finally show up!
>>
>
> Indeed. :)  Sorry about the long delay in publishing this and thank you
> for doing the conversion. :)
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140123/87057341/attachment.html>

From exarkun at twistedmatrix.com  Thu Jan 23 08:08:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Jan 2014 15:08:37 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
 <20140121133243.17936.1954928131.divmod.xquotient.202@top>
 <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>
Message-ID: <20140123150837.6683.1776215513.divmod.xquotient.2@top>

On 02:03 pm, adi at roiban.ro wrote:
>Thanks for working on this!

Thanks for the feedback!
>Do you know if there are binary eggs for Windows Python 2.7 32bit for
>criptography and cffi ?

I've asked the cryptography team about this.  Apparently not yet, but I 
reminded them Windows users would have a pretty hard time benefiting 
from any of this work until there is a binary Windows distribution.

Thanks for the bug reports.  I'll respond to those in the issue tracker 
in due time. :)

Jean-Paul


From andrewfr_ice at yahoo.com  Sat Jan 25 11:42:02 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 25 Jan 2014 10:42:02 -0800 (PST)
Subject: [Twisted-Python] Protocol for socket.io
Message-ID: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi:

I searched the archive but couldn't find an answer so here goes:
I am also new to all this

I need to write a server that receives socket.io requests. I see Twisted has support for WebSocket. I also see that the Tornado2 socket.io is used alongside Twisted (I didn't know that this was possible). I read that socket.io uses WebSocket whenever possible. I have just started to look at the js implementation of socket.io and the specification. I am trying to gauge how hard is it to write a socket.io protocol/handler. Am I barking up the wrong tree? Or do I really need to learn Tornado?

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140125/c2d6d705/attachment.html>

From _ at lvh.io  Sat Jan 25 11:52:09 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 25 Jan 2014 19:52:09 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>

Hi Andrew,


No idea about socket.io, but if you're free to pick whatever you want, and
you just want "websockets, damnit!" then sockjs is actually better, and has
excellent twisted support.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140125/41838b98/attachment.html>

From dustin at v.igoro.us  Sat Jan 25 13:21:34 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 25 Jan 2014 15:21:34 -0500
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>

As I understand it, socket.io is a browser-side library that uses any
of a number of technologies, depending on its environment, to
communicate with the server.  SSE, Websockets, and long polling are
all on the list.  Last I looked, though, I didn't see any support for
the negotiation of which of these protocols to use with a Twisted
server.

If that's changed, I'd certainly be interested!

Dustin

On Sat, Jan 25, 2014 at 1:42 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> Hi:
>
> I searched the archive but couldn't find an answer so here goes:
> I am also new to all this
>
> I need to write a server that receives socket.io requests. I see Twisted has
> support for WebSocket. I also see that the Tornado2 socket.io is used
> alongside Twisted (I didn't know that this was possible). I read that
> socket.io uses WebSocket whenever possible. I have just started to look at
> the js implementation of socket.io and the specification. I am trying to
> gauge how hard is it to write a socket.io protocol/handler. Am I barking up
> the wrong tree? Or do I really need to learn Tornado?
>
> Cheers,
> Andrew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From akersof at gmail.com  Sat Jan 25 14:17:05 2014
From: akersof at gmail.com (Sofiane Akermoun)
Date: Sat, 25 Jan 2014 22:17:05 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
Message-ID: <CAN0_x-LxoF1ztKhS0fn_O=QMqWUA1rJMN-aNgfZHvoLer4_xow@mail.gmail.com>

Hello,
I looked for something that fit your needs few days ago and i came
across txsockjs and i create a server based on twisted and the
https://pypi.python.org/pypi/txsockjs module and i made it in few
minutes. really good stuff.
Of course the client part have to be written in javascript with sockjs
object/api.
If you are sure that you just need websocket and websocket only, there
are also some pure "websocket" implementation in twisted, or you can
probably write your own following the RFC.

For you information there is a kind of flame war on socket.io vs
sockjs, i am not sure which one won the fight, but from my read, and
only from what i have read, sockjs is more promissing and more
supported and more actively maintained.

But as i said and based on my experience and preference only, i did a
lot of research about what i could use to write web app with websocket
support + ajax/comet/long polling technologies and i choose txsockjs.

regards.

Sofiane Akermoun

2014-01-25 Dustin J. Mitchell <dustin at v.igoro.us>:
> As I understand it, socket.io is a browser-side library that uses any
> of a number of technologies, depending on its environment, to
> communicate with the server.  SSE, Websockets, and long polling are
> all on the list.  Last I looked, though, I didn't see any support for
> the negotiation of which of these protocols to use with a Twisted
> server.
>
> If that's changed, I'd certainly be interested!
>
> Dustin
>
> On Sat, Jan 25, 2014 at 1:42 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>> Hi:
>>
>> I searched the archive but couldn't find an answer so here goes:
>> I am also new to all this
>>
>> I need to write a server that receives socket.io requests. I see Twisted has
>> support for WebSocket. I also see that the Tornado2 socket.io is used
>> alongside Twisted (I didn't know that this was possible). I read that
>> socket.io uses WebSocket whenever possible. I have just started to look at
>> the js implementation of socket.io and the specification. I am trying to
>> gauge how hard is it to write a socket.io protocol/handler. Am I barking up
>> the wrong tree? Or do I really need to learn Tornado?
>>
>> Cheers,
>> Andrew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Sofiane AKERMOUN
akersof at gmail.com


From trac at twistedmatrix.com  Sun Jan 26 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1390719915.5.2440699980525461497@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/3df32628/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 26 02:46:44 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Jan 2014 01:46:44 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
Message-ID: <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>


On Jan 25, 2014, at 12:21 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> As I understand it, socket.io is a browser-side library that uses any
> of a number of technologies, depending on its environment, to
> communicate with the server.  SSE, Websockets, and long polling are
> all on the list.  Last I looked, though, I didn't see any support for
> the negotiation of which of these protocols to use with a Twisted
> server.
> 
> If that's changed, I'd certainly be interested!

It would be great if someone built a package to do this (more interop is always better), but I think interest has generally fizzled on Socket.IO implementations in the past because SockJS does pretty much exactly the same thing, and as Laurens said, our friends over at Desert Bus for Hope maintain great Twisted support for it <https://github.com/DesertBus/sockjs-twisted> <https://pypi.python.org/pypi/txsockjs>.

It even has endpoints support, including a string parser!  <https://github.com/DesertBus/sockjs-twisted#endpoints>.

Socket.IO is just a negotiation protocol for deciding whether to use websockets though.  If you started with Autobahn I can't imagine it would be more than a day or two of work to implement.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/b6fd5d78/attachment-0001.html>

From _ at lvh.io  Sun Jan 26 02:53:47 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 10:53:47 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
Message-ID: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>

On Sun, Jan 26, 2014 at 10:46 AM, Glyph <glyph at twistedmatrix.com> wrote:

> It would be great if someone built a package to do this (more interop is
> always better), but I think interest has generally fizzled on Socket.IO
> implementations in the past because SockJS does pretty much exactly the
> same thing, and as Laurens said, our friends over at Desert Bus for Hope
> maintain great Twisted support for it <
> https://github.com/DesertBus/sockjs-twisted> <
> https://pypi.python.org/pypi/txsockjs>.
>

socket.io adds a few things like "RPC support" and "pubsub", both those are
things that should be spoken over some transport, not part of some
transport, and are trivial to layer over an existing browser transport.

I like SockJS because it's literally just "websockets damnit!". Also, it
doesn't use Flash, which has excellent benefits including no gnarly XML
files to server and not having to wait three seconds to figure out if a
connection works or not (yes, really).

Also: protip, speak SockJS over TLS exclusively. It's not even a security
thing (except yes, that too), but if you do end up speaking websockets
you'd be amazed how much Enterprise Quality Web Middleware Server Hardware
Firewall(TM) screws up websocket connections. TLS, OTOH, they just leave be.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/0242213d/attachment.html>

From glyph at twistedmatrix.com  Sun Jan 26 02:57:29 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Jan 2014 01:57:29 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
Message-ID: <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>


On Jan 26, 2014, at 1:53 AM, Laurens Van Houtven <_ at lvh.io> wrote:

> you'd be amazed how much Enterprise Quality Web Middleware Server Hardware Firewall(TM) screws up websocket connections

Having had the life-transforming experience of supporting customers using Government-Quality Web Middleware Server Hardware Firewall?, in a pre-websockets world, with a two-way web application...

No, no I probably wouldn't.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/5642fe3f/attachment.html>

From _ at lvh.io  Sun Jan 26 03:07:01 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 11:07:01 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>
Message-ID: <CAE_Hg6ZQJHqphAMpHzejjk2uCruVNUpees3O2UKtF3TTmK+k=Q@mail.gmail.com>

On Sun, Jan 26, 2014 at 10:57 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
> Having had the life-transforming experience of supporting customers using
> *Government-*Quality Web Middleware Server Hardware Firewall?, in a
> pre-websockets world, with a two-way web application...
>
> No, no I probably wouldn't.
>

Hah; okay, fair enough: that was just a generic warning to those of us who
have not had to stare into the Black Goat of the Rack with a Thousand
Permanently Quiet Sockets...

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/7d37ec27/attachment.html>

From adi at roiban.ro  Sun Jan 26 03:13:55 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Jan 2014 12:13:55 +0200
Subject: [Twisted-Python] twisted.web secured session cookies and multiple
	sites on same host
Message-ID: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>

Hi,

I am looking for the followings:
* Force twisted.web to set session cookie as secured when HTTPS is used.
* Allow 2 separate twisted.web Sites to run on same host/IP but with
different sessions.

I have checked the current code for getSession() [1] but i can see that
session cookie is harcoded and I don't know how to use self.sitepath .

I tried to search the code for sitepath, but I only got this comment, which
I things is used to suppport some some sort of load balancing / high
availability.

# Sitepath is used to determine cookie names between distributed
# servers and disconnected sites.

Can this be done with current code?

If not, I am happy to submit a ticket and a patch.

To solve my problems I rewrote getSession to not use harcoded session name
and to check for self.isSecure before setting a new session cookie.

Many thanks!

[1] https://github.com/twisted/twisted/blob/trunk/twisted/web/server.py#L384
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/e433fe8c/attachment.html>

From tobias.oberstein at tavendo.de  Sun Jan 26 04:06:22 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 26 Jan 2014 03:06:22 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>

>socket.io adds a few things like "RPC support" and "pubsub", ...

Do you have pointers for that?

I can see socket.io supports "topic based pubsub" like functionality via "rooms" : https://github.com/LearnBoost/socket.io/wiki/Rooms

What about RPC?

/Tobias



From _ at lvh.io  Sun Jan 26 04:16:43 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 12:16:43 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>

Hi Tobias,


Hm. I can't find it in the current version. Either I am misremembering, or
they expect you to use the pubsub thing as an RPC mechanism somehow (i.e.
the room name is the procedure name).

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140126/f0e53baf/attachment.html>

From tobias.oberstein at tavendo.de  Sun Jan 26 04:42:39 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 26 Jan 2014 03:42:39 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
 <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4446C13B462@EXVMBX020-12.exch020.serverdata.net>

Hi Laurens,

>Hm. I can't find it in the current version. Either I am misremembering, or they expect you to use the pubsub thing as an RPC mechanism somehow (i.e. the room name is the procedure name).

I see. Using PubSub to implement RPC seems hackish at best, if it works at all. E.g. how to make sure only 1 implementing endpoint subscribes to the Room (to receive procedure calls), how to direct call results to calling clients (since only the caller should receive his result), etc etc

Unsurprisingly (probably), I'd like to point to WAMP: http://wamp.ws/

Which was designed from the ground up for exactly this: 1 protocol that covers _both_ RPC and PubSub, and runs over WebSocket.

Autobahn|Python implements both WebSocket and WAMP (https://github.com/tavendo/AutobahnPython)

End of marketing message;)

/Tobias


From flaviogrossi at gmail.com  Mon Jan 27 01:32:28 2014
From: flaviogrossi at gmail.com (Flavio Grossi)
Date: Mon, 27 Jan 2014 08:32:28 +0000 (UTC)
Subject: [Twisted-Python] Protocol for socket.io
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
Message-ID: <loom.20140127T092501-425@post.gmane.org>

Laurens Van Houtven <_ <at> lvh.io> writes:

> 
> 
> Hi Andrew,
> No idea about socket.io, but if you're free to pick whatever you want, and 
you just want "websockets, damnit!" then sockjs is actually better, and has 
excellent twisted support.hthlvh



Agreed on using sockjs.

There are at least two sockjs server implementation using twisted that i know 
of: sockjs-twisted [1] and (shameless plug) sockjs-cyclone [2]

As per rpc and pubsub support i have personally used wamp [3] and websocket-
multiplex [4] with great success.

Hope this helps,

Flavio


[1] https://github.com/DesertBus/sockjs-twisted
[2] https://github.com/flaviogrossi/sockjs-cyclone
[3] http://wamp.ws/
[4] https://github.com/sockjs/websocket-multiplex




From glyph at twistedmatrix.com  Tue Jan 28 12:06:53 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Jan 2014 11:06:53 -0800
Subject: [Twisted-Python] twisted.web secured session cookies and
	multiple sites on same host
In-Reply-To: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
References: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
Message-ID: <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>


On Jan 26, 2014, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:

> Can this be done with current code?
> 
> If not, I am happy to submit a ticket and a patch.

Even if it's currently possible to achieve, it seems to me that there ought to be an easy way to get this (much more secure) behavior by default.  I'd appreciate it if you'd contribute a patch.

Thanks!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140128/3a1a0797/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140128/3a1a0797/attachment.bin>

From adi at roiban.ro  Tue Jan 28 13:56:46 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 28 Jan 2014 22:56:46 +0200
Subject: [Twisted-Python] twisted.web secured session cookies and
 multiple sites on same host
In-Reply-To: <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>
References: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
 <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>
Message-ID: <CAFycZ9cmiNvumjsnagbQ4-dcfgiwzZCupdt+gOKbOdUcocQx0Q@mail.gmail.com>

On 28 January 2014 21:06, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> On Jan 26, 2014, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Can this be done with current code?
>
> If not, I am happy to submit a ticket and a patch.
>
>
> Even if it's currently *possible* to achieve, it seems to me that there
> ought to be an easy way to get this (much more secure) behavior by default.
>  I'd appreciate it if you'd contribute a patch.
>
> Thanks!
>
> -glyph
>

Done. Tickest for review are here

 https://twistedmatrix.com/trac/ticket/6932
 https://twistedmatrix.com/trac/ticket/6933

Thanks Jean Paul for your guidance, I fully agree that each ticket should
solve a single problem.

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140128/285409d2/attachment.html>

From _ at lvh.io  Wed Jan 29 03:57:20 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 29 Jan 2014 11:57:20 +0100
Subject: [Twisted-Python] Python Events Calendar (Now with Twitter feed)
Message-ID: <CAE_Hg6aKsKF15qaFZ27cTYRJEY4=gy4v5CycXVQgY+dw1=oF0w@mail.gmail.com>

Hi Twisters,


Marc-Andre Lemburg from the PSF has been taking care of a Python events
calendar for a while. It now has a twitter feed making it easier to find
new events.

If you're doing any Python-related events, such as of course Twisted
sprints, or maybe Python user group meetups, please don't hesitate to
contact the PSF to get your event added.

M.-A.'s e-mail as been forwarded below.

hth
lvh


---------- Forwarded message ----------
From: M.-A. Lemburg <mal at python.org>
Date: Wed, Jan 29, 2014 at 11:20 AM
Subject: [psf-members-ann] ANN: Python Events Calendar - Now with Twitter
feed
To: PSF Members Announcements <psf-members-announce at python.org>


[Please help spread the word by forwarding to other relevant mailing lists,
 user groups, etc. world-wide; thanks :-)]

________________________________________________________________________
ANNOUNCING

           Python Events Calendars - Now with Twitter feed

           maintained by the Python Software Foundation (PSF)
                    and a group of volunteers

________________________________________________________________________
INTRODUCTION

As some of you may know, the PSF has put together a team of volunteers
who are maintaining a central Python events calendar. We currently have
two calendars in place:

 * Python Events Calendar - meant for conferences and larger gatherings
   focusing on Python or a related technology (in whole or in part)

 * Python User Group Calendar - meant for user group events and other
   smaller local events

The calendars are displayed on http://pycon.org/ and in a smaller
version in the sidebar of the http://python.org/ website.

You can subscribe to the calendars using iCal and RSS feeds and
also embed the calendar widgets on your sites. Please see our wiki
page for details:

    https://wiki.python.org/moin/PythonEventsCalendar

The calendars are open to the world-wide Python community, so you
can have local user group events, as well as regional and international
conference events added to the calendars.

________________________________________________________________________
NEWS

We have now created a Twitter feed for the calendars, which you can
follow to get updates on all newly added events:

    https://twitter.com/pythonevents

The tweets come with links to the event listings, which you can
add to your own Google calendars with a single click.

________________________________________________________________________
ADDING EVENTS

If you want to have entries added to those calendars, please write
to events at python.org and include the following information:

 * Name of the event
 * Type of the event (conference, bar camp, user group, etc)
 * Focus on Python and approximate size
 * URL
 * Location and country
 * Date and time (if relevant)

For recurring events, please also include a description of the
recurrence in a way that's compatible and supported by Google
calendars.

________________________________________________________________________
MORE INFORMATION

More information on the calendars, the URLs, feed links, IDs, embedding,
etc. is available on the wiki:

    https://wiki.python.org/moin/PythonEventsCalendar

Enjoy,
--
Marc-Andre Lemburg
Director
Python Software Foundation
http://www.python.org/psf/
_______________________________________________
psf-members-announce mailing list
psf-members-announce at python.org
https://mail.python.org/mailman/listinfo/psf-members-announce
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140129/1454f067/attachment.html>

From andrewfr_ice at yahoo.com  Wed Jan 29 14:46:44 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 29 Jan 2014 13:46:44 -0800 (PST)
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
Message-ID: <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi Laurens and Folks:

Thanks for all the replies. I'll try desert-sockjs first. Looking through the documentation, it is not clear to me how I would handle socket.io events (unfortunately I am new to socket.io). There doesn't seem to be an event decorator like Socket.io for Tornadio2. I am looking the documentation describing what an event looks like at the HTTP level.

Cheers,
Andrew



On Saturday, January 25, 2014 1:52 PM, Laurens Van Houtven <_ at lvh.io> wrote:
 
Hi Andrew,


No idea about socket.io, but if you're free to pick whatever you want, and you just want "websockets, damnit!" then sockjs is actually better, and has excellent twisted support.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140129/8eaca10f/attachment.html>

From _ at lvh.io  Wed Jan 29 15:03:40 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 29 Jan 2014 23:03:40 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
 <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6YnLKRYGoPUYmh84xzsk+Lu2ASoYDhVu2qKa8fepthUPg@mail.gmail.com>

Hi Andrew,


SockJS is a different project from socket.io; it just tries to solve a
similar problem (WebSockets everywhere).

If you literally need socket.io and not a similar thing in the same problem
space, then SockJS will not help you.

You can read about the spec for SockJS here:
https://github.com/sockjs/sockjs-protocol

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140129/e4881246/attachment.html>

From andrewfr_ice at yahoo.com  Wed Jan 29 15:11:31 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 29 Jan 2014 14:11:31 -0800 (PST)
Subject: [Twisted-Python] Problem with txampq_helper ampqFactory: closing
	connections
Message-ID: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>

Hi Folks:

I need to maintain a programme that uses txampq_helper library ampqFactory. The current program does not close the connection to the underlying rabbitmq (the code is a mess).?

Can I simple call theampqFactory.protocol.transport.loseConnection()?
Do I need to unregisterProducer() first (in ampqFactory, i see stuff like resumeProducing() so I assume it is a producer)

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140129/5ddcdf3c/attachment.html>

From toph_ut at yahoo.de  Thu Jan 30 02:48:36 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 30 Jan 2014 09:48:36 +0000 (GMT)
Subject: [Twisted-Python] Twisted VxWorks PBConnectionLost
Message-ID: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>

Hello,

I started few days ago to make Buildbot under VxWorks run.
I ported Python and made a few changes in Buildbot and Twisted to make everything run.
I'm using Twisted 9.0.0 and Python 2.7.6
Twisted version is a bit old because its not complex as the 13.0.0 and it made the work under QNX for example.
In Buildbot there are few possibilities?to make a Step:
	* FileUpload
	* FileDownload
	* ShellCommand
	* MasterShellCommand
MasterShellCommand doesnt make any difference here since its executed on the Master.
FileUpload and FileDownload (filetransfer between Master and Slave) works fine.

My Problem is the ShellCommand.
It executes a command on the Slave.
Im using the posix part on the Slave BUT fork() and exec() are not supported in VxWorks.
So i changed for _fork methode in twisted/internet/process.py to avoid the fork()-part [self.pid = fork()].
I didnt change the exec part in Twisted. I did in the Python .. (in os.py i changed the exec methode to call another methode .. so i didnt made a huge change there).

Now when i want to execute a ShellCommand, my buildbot/twisted/python crashes and i have an exception:
remoteFailed: [Failure instance: Traceback (failure with no frames): <class 'twisted.spread.pb.PBConnectionLost'>: [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.]

twisted.spread.pb.PBConnectionLost:?[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly. ]
twisted.spread.pb.PBConnectionLost:?[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly. ]

There are the two things i have.

My question after writing 40 lines here:
What could be the problem??
Why does it just crash without any "real" exception or error.
Could someone point me to the right direction?

Thanks.

Best regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140130/d4f96b9f/attachment-0001.html>

From exarkun at twistedmatrix.com  Thu Jan 30 05:04:06 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 12:04:06 -0000
Subject: [Twisted-Python] Twisted VxWorks PBConnectionLost
In-Reply-To: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>
References: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>
Message-ID: <20140130120406.6683.1503909403.divmod.xquotient.23@top>

On 09:48 am, toph_ut at yahoo.de wrote:
>Hello,
>
>[snip]
>
>Now when i want to execute a ShellCommand, my buildbot/twisted/python 
>crashes and i have an exception:
>remoteFailed: [Failure instance: Traceback (failure with no frames): 
><class 'twisted.spread.pb.PBConnectionLost'>: [Failure instance: 
>Traceback (failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly.]
>
>twisted.spread.pb.PBConnectionLost:?[Failure instance: Traceback 
>(failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly. ]
>twisted.spread.pb.PBConnectionLost:?[Failure instance: Traceback 
>(failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly. ]

This looks like maybe it's the server-side log.  Read the client-side 
log to see if there are any more useful exceptions/tracebacks logged.

Jean-Paul


From exarkun at twistedmatrix.com  Thu Jan 30 05:06:54 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 12:06:54 -0000
Subject: [Twisted-Python] Problem with txampq_helper ampqFactory:
 closing connections
In-Reply-To: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>
References: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>
Message-ID: <20140130120654.6683.1751917336.divmod.xquotient.29@top>

On 29 Jan, 10:11 pm, andrewfr_ice at yahoo.com wrote:
>Hi Folks:
>
>I need to maintain a programme that uses txampq_helper library 
>ampqFactory. The current program does not close the connection to the 
>underlying rabbitmq (the code is a mess).
>
>Can I simple call theampqFactory.protocol.transport.loseConnection()?

Does this factory keep a reference to a connected protocol as its 
`protocol` attribute?  Most factories keep a reference to their protocol 
class there.

If it isn't keeping a reference to the instance then you won't be able 
to disconnect it this way, you'll have to find a reference to it some 
other way.

One easy way to do this is to wrap the factory with `WrappingFactory` 
from `twisted.protocols.policies`.  This factory keeps a `protocols` 
dictionary on itself tracking all of the currently-connected protocols 
it (and the wrapped factory) have been used to create.
>Do I need to unregisterProducer() first (in ampqFactory, i see stuff 
>like resumeProducing() so I assume it is a producer)

You do need to unregister, yes.  Alternatively, you can use 
`abortConnection` as long as the transport you're using has implemented 
that method (and as long as you don't care if some bytes in the send 
buffer get dropped).
Jean-Paul


From exarkun at twistedmatrix.com  Thu Jan 30 15:48:26 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 22:48:26 -0000
Subject: [Twisted-Python] Declaring some new supported builders (platforms)
Message-ID: <20140130224826.6683.1313948342.divmod.xquotient.33@top>

Hey guys,

Please comment on <https://github.com/twisted-infra/twisted-buildbot- 
configuration/pull/4>.  It changes the following builders/configurations 
from unsupported to supported:

    debian6-x86_64-py2.6
    debian6-x86_64-py2.6-glib
    ubuntu-12.04-x86_64-py2.7
    ubuntu-12.04-x86_64-py2.7-glib
    fedora19-x86_64-py2.7

Jean-Paul


From sank.daniel at gmail.com  Thu Jan  2 00:54:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 1 Jan 2014 23:54:43 -0800
Subject: [Twisted-Python] different import paths lead to insecureJelly
Message-ID: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>

I have a project in which various modules need to import a particular
module "util" which has the following content:

    # util.py
    class FooMaster(pb.Cacheable):
        ...

    class FooSlave(pb.RemoteCache):
        ...

    pb.setUnjellyableForClass(FooMaster, FooSlave)

Module "server" lives in the same directory as util and imports it like this
    # server.py
    import util

Module clent lives in an entirely different directory and imports util like
this
    # client.py
    import myproject.path.to.some.files.util as util

This leads to the infamous insecureJelly exception because the name of the
FooMaster class winds up being different due to the different import
statements. Specifically, server's copy of pb registers it as

"util.FooMaster"

but client's copy registers it as

"myproject.path.to.some.files.util.FooMaster"

1. Is it a bug that pb cares about how something was imported when
registering unjellyable classes?
2. If not, how am I supposed to work around this?
3. The problem goes away if I use the long, fully qualified import
statement everywhere. Is that what I'm supposed to do?

I read the howto and the on Stackoverflow question I could find regarding
this issue. In both cases, it says to not define names in a main file
precisely to avoid this issue, but not what to do in my case.

Thank you for any advice.

-- 
Daniel Sank
Department of Physics
Broida Hall
University of California
Santa Barbara, CA 93117
(805)893-3899
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140101/c9c53f5f/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jan  2 04:37:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Jan 2014 11:37:37 -0000
Subject: [Twisted-Python] different import paths lead to insecureJelly
In-Reply-To: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
References: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
Message-ID: <20140102113737.17936.1625910912.divmod.xquotient.23@top>

On 07:54 am, sank.daniel at gmail.com wrote:
>I have a project in which various modules need to import a particular
>module "util" which has the following content:
>
>    # util.py
>    class FooMaster(pb.Cacheable):
>        ...
>
>    class FooSlave(pb.RemoteCache):
>        ...
>
>    pb.setUnjellyableForClass(FooMaster, FooSlave)
>
>Module "server" lives in the same directory as util and imports it like 
>this
>    # server.py
>    import util
>
>Module clent lives in an entirely different directory and imports util 
>like
>this
>    # client.py
>    import myproject.path.to.some.files.util as util
>
>This leads to the infamous insecureJelly exception because the name of 
>the
>FooMaster class winds up being different due to the different import
>statements. Specifically, server's copy of pb registers it as
>
>"util.FooMaster"
>
>but client's copy registers it as
>
>"myproject.path.to.some.files.util.FooMaster"
>
>1. Is it a bug that pb cares about how something was imported when
>registering unjellyable classes?

No.  It's a bug in your application. ;)
>2. If not, how am I supposed to work around this?

Always refer to modules in the same way.  Never use relative imports.
>3. The problem goes away if I use the long, fully qualified import
>statement everywhere. Is that what I'm supposed to do?

Yep!

If you really had different classes on the client and the server 
representing the same abstract entity then you could explicitly register 
them as being related by registering them using a name instead of using 
a class object.  When you pass a class object, pb just computes that 
name for you.

However, you don't really have different classes here: just differently 
named copies of the same class.  Consistently importing the class using 
the correct, fully qualified package name will cause the classes to have 
the same name (and, if you load the client and server in once process, 
will cause only *one* copy of the module and class to be loaded, rather 
than two) and fix the PB issue.

Jean-Paul
>
>I read the howto and the on Stackoverflow question I could find 
>regarding
>this issue. In both cases, it says to not define names in a main file
>precisely to avoid this issue, but not what to do in my case.
>
>Thank you for any advice.
>
>--
>Daniel Sank
>Department of Physics
>Broida Hall
>University of California
>Santa Barbara, CA 93117
>(805)893-3899



From tobias.oberstein at tavendo.de  Thu Jan  2 06:26:34 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 2 Jan 2014 05:26:34 -0800
Subject: [Twisted-Python] Autobahn 0.7.0 released
Message-ID: <634914A010D0B943A035D226786325D4446BD1E6F4@EXVMBX020-12.exch020.serverdata.net>

Hi,

I am happy to announce the release of AutobahnPython 0.7.0

https://github.com/tavendo/AutobahnPython
https://pypi.python.org/pypi/autobahn

This release brings 4 major features:

1) full support for Twisted endpoints, a wrapping protocol/factory and a generic endpoint forwarder

https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/echo_endpoints
https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/wrapping

2) Support for Python 3

Autobahn now works with Twisted running on Python 3.

Note: Not all examples work with Twisted/Python3, since Python 3 support with Twisted is work-in-progress.

3) Support for asyncio

Asyncio (http://docs.python.org/3.4/library/asyncio.html) is a new networking framework that comes built
into Python 3.4, and that can be installed on Python 3.3.

Autobahn now fully (with all features) supports both Twisted (on Python 2 and 3) and asyncio (on Python 3.3+).

Here is an example that shows how to do WebSocket on both:

Twisted:
https://github.com/tavendo/AutobahnPython/tree/master/examples/twisted/websocket/echo

Asyncio:
https://github.com/tavendo/AutobahnPython/tree/master/examples/asyncio/websocket/echo

The application code is very similar or even identical.

Note: Support for 2) and 3) required major refactoring under the hood. But to upgrade existing code,
it should be sufficient to replace respective imports:

Autobahn < 0.7.0:
from autobahn.websocket import WebSocketServerProtocol

Autobahn 0.7.0:
from autobahn.twisted.websocket import WebSocketServerProtocol
or
from autobahn.asyncio.websocket import WebSocketServerProtocol

4) Use of Interfaces

The core Autobahn interfaces that applications are using are now properly
defined using "zope.interface" machinery:

http://autobahn.ws/static/reference/python/websocketintro.html#interface-definition

The interfaces are what we are committed to keep stable up from now.

==
Notes:

We've been working hard to make sure everything still works as previously, but the changes
in the code base are large. So please forgive if there are glitches popping up.

The upcoming WAMPv2 did not make it into this release (it's already the biggest release since a long time).
WAMPv2 will be introduced gradually over the coming weeks in point releases, and then a final 0.8 release
will be rolled out which deprecates WAMPv1.

Cheers,
/Tobias



From glyph at twistedmatrix.com  Fri Jan  3 02:06:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 3 Jan 2014 01:06:38 -0800
Subject: [Twisted-Python] different import paths lead to insecureJelly
In-Reply-To: <20140102113737.17936.1625910912.divmod.xquotient.23@top>
References: <CAKN9TDKvXhevxPRW9Ed1WfMBBC+F9UKnYK50zQg3kLaFyAVsag@mail.gmail.com>
 <20140102113737.17936.1625910912.divmod.xquotient.23@top>
Message-ID: <14547FFA-0F46-48FA-B8F4-6F0224E7ABC6@twistedmatrix.com>


On Jan 2, 2014, at 3:37 AM, exarkun at twistedmatrix.com wrote:

> Always refer to modules in the same way.  Never use relative imports.

Explicit relative imports preserve the benefit of being able to re-name your packages without editing every file inside them, but will still give you errors rather than silent pathological if you end up with an implicit Python path entry in the wrong place.

(Here is an termcast that illustrates the distinction: <http://asciinema.org/a/7016>.)

Also, any absolute import in python 2 can accidentally become implicitly relative given a sufficiently unfortunate set of circumstances.  Consider using 'from __future__ import absolute_import' everywhere to make your imports less ambiguous.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140103/6bdeb019/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Jan  4 21:33:43 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 4 Jan 2014 20:33:43 -0800
Subject: [Twisted-Python] Make Contributing to Twisted Much Faster And More
	Fun With This One Weird Trick
Message-ID: <853550A3-44B1-4650-8D97-5DB6FC6C1A0A@twistedmatrix.com>

Hello fellow Twisted maintainers,

There are lots of things that could be done to make contributing to Twisted easier and more fun.  I know, because people are constantly buttonholing me to tell me about how we should use this or that source hosting or continuous integration website :).  However, there's one persistent problem - in my opinion, the largest problem - that I think we could address without revving any of our technology[1] or changing our process (as documented, anyway; there are some changes to it as it is practiced).

That problem is perfectionism; particularly perfectionism in code reviews, but also sometimes on the part of change authors.  The "one weird trick" I am referring to in the subject is trusting the process, and not attempting to second-guess it or add extraneous bells and whistles to it because you're worried it may not work.

According to our official code review process, in order to be acceptable to land on trunk, a change must have:

Coding-standard compliance.
Test coverage for all new or changed code.
Docstrings for new or changed code.
Narrative documentation for any new or changed user-visible features.
No backwards-incompatible changes.
A NEWS file.

I think most would agree that reviewers might also reasonably block a change for:

Exploits or other security issues introduced in any new or changed functionality, or
Performance regressions (ideally in existing benchmarks, and not in new performance criteria that the reviewer just invented!) in existing functionality.

Maybe those last two things should be added to the official process documentation.

However, these 8 things really ought to be the only things that ought to cause a reviewer to block a change.  Right now, reviewers also routinely check for, and block changes for:

A perfect, future-proof public API for everything new
Any un-handled use-cases
Hypothetical alternative approaches which would yield a more flexible implementation that could enable different functionality in the future
Optimal performance for new functionality
Re-factoring to use existing code if a change introduces duplication

Worse yet, multiple reviewers will sometimes show up on the same ticket, demanding increasingly intricate and sometimes conflicting implementation improvements.  This is understandably very frustrating for the author and can make changes get stalled for long periods of time.

So here are some suggestions:

First of all, we do not have to have a perfect public API for everything all the time.  You can deprecate stuff later.  You can remove stuff later.  We have a process to do this: trust it.  Sure, it takes a release cycle or two, but that is not nearly the hardship that it seems.  Experience has taught us that realistically, neither the reviewer nor the author of a change is going to have the energy to fix up new public APIs to be perfect within the time frame of a single release cycle anyway, so you might as well have people using the pretty-good-but-not-perfect API in the meanwhile.  So if you're authoring a change that you think might have a better public API but you don't know what it is, just submit for review anyway.  If you're reviewing a change that has a public API that you think might be made better with a bunch of additional work, just approve it and ask the author to file a ticket for improving it in the future.

Secondly, it's OK to do a code review that isn't perfect.  I suspect that one reason so many code reviews are so nitpicky is that nobody wants to be the one to approve a change that gets reverted.  My advice here is: don't worry about it.  If you're reviewing some code, make a good-faith effort to find the issues with it according to the documented criteria, but if you don't find any problems, just approve it, as the process says you should.  If you make a mistake, that's why we have a process for reverting changes.  If you want another reviewer to look at it after the fact, just ask.

Third, code review is not just about the formal requirements; of course there can be discussion about design, API, or implementation techniques.  As a reviewer, you may notice anything in my second list, or more, and you can definitely mention it to the author of the change.  But you should mention it in a clearly delineated separate section of your review feedback which you explicitly state is not required to accept the change.  Always feel free to say "file a ticket for X before landing this" so that we don't lose track of improvements for the future that occur to you as you're reviewing, but don't feel like you have to block a change for any possible flaw.

And finally, if you really don't know whether you want to commit to a public API, there's always the option of putting something in a private implementation module so that it can go into a release and users can start importing it with the understanding that they typed an underscore so they're on their own with regard to compatibility guarantees :-).

In closing, if you can think of a review you've done in the past that asked the author to do too much work above and beyond the requirements, consider going back and amending the review to separate the required stuff from suggestions and feedback you have.

-glyph

[1]: We're also making good progress towards revving that technology, but I'll have more to say about that in a separate post.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140104/1f6e7cd8/attachment-0002.html>

From sank.daniel at gmail.com  Sat Jan  4 22:12:35 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 4 Jan 2014 21:12:35 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <52A85F15.4030103@itamarst.org>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
Message-ID: <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>

I really want to work on the perspective broker documentation as it is
fresh in my mind. I still can't log into the website. Has there been any
news in this area?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140104/26be6e84/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan  5 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1388905515.35.4146267551371854879@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140105/1813f9ba/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan  5 00:34:36 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 4 Jan 2014 23:34:36 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
Message-ID: <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>


On Jan 4, 2014, at 9:12 PM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I really want to work on the perspective broker documentation as it is fresh in my mind. I still can't log into the website. Has there been any news in this area?

I guess I can try to re-set your password manually.  Are you on IRC?  I'd like to do it in real time.

-glyph




From sank.daniel at gmail.com  Sun Jan  5 01:48:46 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sun, 5 Jan 2014 00:48:46 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
Message-ID: <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>

> I guess I can try to re-set your password manually.  Are you on IRC?  I'd
like to do it in real time.

Never used IRC before. Is there a particular client program I should use?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140105/003500fc/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan  5 01:50:01 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Jan 2014 00:50:01 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
Message-ID: <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>


On Jan 5, 2014, at 12:48 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> > I guess I can try to re-set your password manually.  Are you on IRC?  I'd like to do it in real time.
> 
> Never used IRC before. Is there a particular client program I should use?

What platform?

-g




From sank.daniel at gmail.com  Sun Jan  5 11:52:30 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sun, 5 Jan 2014 10:52:30 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
Message-ID: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>

I have a windows computer and an Ubuntu computer that I use as a file
server. I'm reading about IRC now. How are we supposed to find each other?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140105/b2de9563/attachment-0002.html>

From wasilak at gmail.com  Mon Jan  6 01:26:18 2014
From: wasilak at gmail.com (Maciej Wasilak)
Date: Mon, 6 Jan 2014 09:26:18 +0100
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
Message-ID: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>

Hello,

I've tried to use Twisted names.client.getHostByName() method to resolve
some addresses for my UDP based app. By default getHostByName() always
returns IPv6 address. I don't always have end-to-end IPv6 connectivity, so
it often causes communication to fail. I've found a solution to override
this behavior with monkey patching [1].

After Twisted 13.2 announcement I've checked the new HostnameEndpoint
implementation to find possible solution (it seems to be dedicated to solve
similar problems, but for TCP-based protocols). However it seems to use
deferToThread(), and built-in Python getaddrinfo().

My questions:
1. Is using deferToThread() a preferred solution?
2. Does someone know a less hacky solution to get IPv4 addresses with
getHostbyName()?

Best Regards
Maciej Wasilak

[1]
http://stackoverflow.com/questions/13820175/can-twisted-names-client-be-forced-to-return-ipv4-addresses-without-modifying
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140106/f751096c/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan  6 01:54:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Jan 2014 00:54:38 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <DDAD7465-87DB-4D9F-B0EC-8E11908E4E79@twistedmatrix.com>


On Jan 5, 2014, at 10:52 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I have a windows computer and an Ubuntu computer that I use as a file server. I'm reading about IRC now. How are we supposed to find each other?

If you're on Windows, mIRC is probably your best bet: http://www.mirc.com

I'm on chat.freenode.net as "glyph".  Drop me a message :).

-glyph





From glyph at twistedmatrix.com  Mon Jan  6 02:03:34 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Jan 2014 01:03:34 -0800
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
Message-ID: <5BC8F1AD-0A86-4556-BED4-D4032A8433F7@twistedmatrix.com>


On Jan 6, 2014, at 12:26 AM, Maciej Wasilak <wasilak at gmail.com> wrote:

> After Twisted 13.2 announcement I've checked the new HostnameEndpoint implementation to find possible solution (it seems to be dedicated to solve similar problems, but for TCP-based protocols). However it seems to use deferToThread(), and built-in Python getaddrinfo().

Sadly, the algorithm HostnameEndpoint uses to determine which host to actually send traffic to depends on TCP connection establishment; if you're doing UDP you're on your own with this.

> My questions:
> 1. Is using deferToThread() a preferred solution?

You kinda have to use it.  getaddrinfo is actually standardized in an RFC, and that RFC defines no asynchronous version of this API.  So if you want proper 6-or-4 behavior, deferToThread(getaddrinfo) is about as well as you can do for the general case.

(Now, in specific cases you can use the twisted.names DNS client and avoid the trip out to your operating system and also out to a thread, but this is for somewhat specialized configurations, only if the getaddrinfo approach is not scaling for you.)

-glyph




From hs at ox.cx  Mon Jan  6 02:12:06 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Mon, 06 Jan 2014 10:12:06 +0100
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <3CDF2949-7D3D-4BD6-82E5-93719982CDA3@ox.cx>

On 5 Jan 2014, at 19:52, Daniel Sank wrote:

> I have a windows computer and an Ubuntu computer that I use as a file
> server. I'm reading about IRC now. How are we supposed to find each 
> other?

You could try Freenode’s web chat: https://webchat.freenode.net so you 
don’t have to extra install software.



From p.mayers at imperial.ac.uk  Mon Jan  6 04:47:40 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 06 Jan 2014 11:47:40 +0000
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
 operation
In-Reply-To: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
Message-ID: <52CA97DC.8010704@imperial.ac.uk>

On 06/01/14 08:26, Maciej Wasilak wrote:
> Hello,
>
> I've tried to use Twisted names.client.getHostByName() method to resolve
> some addresses for my UDP based app. By default getHostByName() always
> returns IPv6 address. I don't always have end-to-end IPv6 connectivity,

I'm not sure if t.n.client implements the same stuff that getaddrinfo 
does, namely RFC 6724 address selection rules and behaviour, and in 
particular if it has an equivalent of the AI_ADDRCONFIG flag.

> After Twisted 13.2 announcement I've checked the new HostnameEndpoint
> implementation to find possible solution (it seems to be dedicated to
> solve similar problems, but for TCP-based protocols). However it seems
> to use deferToThread(), and built-in Python getaddrinfo().
>
> My questions:
> 1. Is using deferToThread() a preferred solution?

IMO *all* applications should *always* use getaddrinfo() for resolution 
of user-supplied names. It really really annoys me when people decide to 
re-invent it - this is hard to get right, and apps like Chrome having 
their own implementation precludes things like DHCP-based 6724 tables in 
the future.

So yes, use "deferToThread" and "getaddrinfo". Note that you should not, 
in general, specify the address family; let the AI_ADDRCONFIG flag sort 
that out for you.



From kevin.horn at gmail.com  Mon Jan  6 10:46:02 2014
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 6 Jan 2014 11:46:02 -0600
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>

I use Pidgin on Windows:
http://pidgin.im/

the webchat site that Hynek suggested also works well.


On Sun, Jan 5, 2014 at 12:52 PM, Daniel Sank <sank.daniel at gmail.com> wrote:

> I have a windows computer and an Ubuntu computer that I use as a file
> server. I'm reading about IRC now. How are we supposed to find each other?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140106/029f7950/attachment-0002.html>

From wulczer at wulczer.org  Mon Jan  6 14:32:16 2014
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Mon, 06 Jan 2014 22:32:16 +0100
Subject: [Twisted-Python] license for RetryingCall class posted here in Nov
	2009
Message-ID: <52CB20E0.7070502@wulczer.org>

Hello!

A code snippet implementing retrying calls got posted on this list in 
November of 2009, here's the thread in question:

http://twistedmatrix.com/pipermail/twisted-python/2009-November/020818.html

I wanted to use that snippet (slightly changed and with unit tests 
added) in txpostgres, the Postgres driver for Twisted - 
http://github.com/wulczer/txpostgres/

Now, txpostres is MIT-licensed and before going ahead and incorporating 
that code, I'd like to make sure its license is compatible,

I've taken the liberty of CC'ing Terry but perhaps someone else could 
also chime in.

Thanks,
Jan



From wasilak at gmail.com  Mon Jan  6 14:33:20 2014
From: wasilak at gmail.com (Maciej Wasilak)
Date: Mon, 6 Jan 2014 22:33:20 +0100
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <52CA97DC.8010704@imperial.ac.uk>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
Message-ID: <CAFUtXGxAfhacGSxZZ=BhqK1mvsMvst21CtcQyjrFUBBVm8qn9A@mail.gmail.com>

Hello,

6 sty 2014 12:50 "Phil Mayers" <p.mayers at imperial.ac.uk> napisał(a):
> IMO *all* applications should *always* use getaddrinfo() for resolution
of user-supplied names. It really really annoys me when people decide to
re-invent it - this is hard to get right, and apps like Chrome having their
own implementation precludes things like DHCP-based 6724 tables in the
future.
>
> So yes, use "deferToThread" and "getaddrinfo". Note that you should not,
in general, specify the address family; let the AI_ADDRCONFIG flag sort
that out for you.
>

Thank you very much for your answers. DeferToThread works fine, I just had
the (wrong) impression that names is the preferred solution.
Best Regards
Maciej Wasilak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140106/2565788c/attachment-0002.html>

From dustin at v.igoro.us  Mon Jan  6 19:17:07 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Mon, 6 Jan 2014 21:17:07 -0500
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
 <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
Message-ID: <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>

Can we shave this yak any more finely?

Dustin



From asaha at redhat.com  Mon Jan  6 23:06:25 2014
From: asaha at redhat.com (Amit Saha)
Date: Tue, 7 Jan 2014 01:06:25 -0500 (EST)
Subject: [Twisted-Python] Reliable way to check if Twisted has
	IPv6	support?
In-Reply-To: <52AAE468.9020801@imperial.ac.uk>
References: <1420744804.30417894.1386904970292.JavaMail.root@redhat.com>
 <52AAE468.9020801@imperial.ac.uk>
Message-ID: <594562680.44525666.1389074785546.JavaMail.root@redhat.com>



----- Original Message -----
> From: "Phil Mayers" <p.mayers at imperial.ac.uk>
> To: twisted-python at twistedmatrix.com
> Sent: Friday, December 13, 2013 8:41:44 PM
> Subject: Re: [Twisted-Python] Reliable way to check if Twisted has IPv6	support?
> 
> On 13/12/13 03:22, Amit Saha wrote:
> 
> > Is there a more reliable way (which works with the Twisted-8.0+) to check
> > this?
> 
> Check the Twisted version.
> 
> You should also note that IPv6 features have appeared in multiple
> versions; HostnameEndpoint was added in 13.2.0 for example, whereas
> basic "connectTCP to IPv6 address" was added in 12.1.0, with listenTCP
> in 12.0.0
> 
> So:
> 
> import twisted
> 
> vt = (twisted.version.major, twisted.version.minor)
> 
> if vt > (13,2):
>    def connectv6name(n):
>      return HostnameEndpoint(...)
> elif vt > (12,1):
>    def connectv6name(n):
>      d = myGetAddrInfo(...)
>      d.addCallback(reactor.connectTCP, ...)
> else:
>    def connectv6name(n):
>      raise Exception('twisted too old for IPv6')

Thanks a lot, Phil. I think using the version information is a more reliable way. I had a feeling
that the various bits and pieces may have been added incrementally. The functionality I need
present are listenTCP() and connectTCP() to work with IPv6, so I think checking for 12.1.0
will suit my needs.

Best,
Amit.

-- 
Amit Saha <http://echorand.me>



From sank.daniel at gmail.com  Tue Jan  7 11:33:31 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Tue, 7 Jan 2014 10:33:31 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
 <CA+U=zK2z6pEoCXLzqmr7WsANo7kUmMsVGDqi8D8vjTh1qcMS8A@mail.gmail.com>
 <CAJtE5vTUicv7uPyn=GMedJv69MOq1hHc97PFqEFTo58w3AX3CQ@mail.gmail.com>
Message-ID: <CAKN9TD+itdfk6dF8L7KXJ0F5sR-QFjdW5eGuOVwMsJ--8WzrPA@mail.gmail.com>

This has been resolved. Thanks to whoever it was (I didn't recognize your
IRC username) who reset my password, as that did the trick.

For the record I had tried using the password reset on the website and it
didn't seem to work. Others recently had similar problems.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140107/5672d461/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Jan  8 16:05:48 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Jan 2014 15:05:48 -0800
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
	operation
In-Reply-To: <52CA97DC.8010704@imperial.ac.uk>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
Message-ID: <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>


On Jan 6, 2014, at 3:47 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 06/01/14 08:26, Maciej Wasilak wrote:
>> Hello,
>> 
>> I've tried to use Twisted names.client.getHostByName() method to resolve
>> some addresses for my UDP based app. By default getHostByName() always
>> returns IPv6 address. I don't always have end-to-end IPv6 connectivity,
> 
> I'm not sure if t.n.client implements the same stuff that getaddrinfo does, namely RFC 6724 address selection rules and behaviour, and in particular if it has an equivalent of the AI_ADDRCONFIG flag.
> 
>> After Twisted 13.2 announcement I've checked the new HostnameEndpoint
>> implementation to find possible solution (it seems to be dedicated to
>> solve similar problems, but for TCP-based protocols). However it seems
>> to use deferToThread(), and built-in Python getaddrinfo().
>> 
>> My questions:
>> 1. Is using deferToThread() a preferred solution?
> 
> IMO *all* applications should *always* use getaddrinfo() for resolution of user-supplied names. It really really annoys me when people decide to re-invent it - this is hard to get right, and apps like Chrome having their own implementation precludes things like DHCP-based 6724 tables in the future.
> 
> So yes, use "deferToThread" and "getaddrinfo". Note that you should not, in general, specify the address family; let the AI_ADDRCONFIG flag sort that out for you.

I have a minor quibble - all applications deployed to other people’s hardware ought to always use getaddrinfo, because the essence of GAI is that it respects local configuration of the platform.  No matter how “hard” you try to get it “right”, you can’t ever know what the platform is doing with hostname resolution because it simply isn’t exposed any other way, let alone any asynchronous way.[1]

However, if you’re building a big service to run in the cloud, or on a VPN, on specially-tuned machines that you configured, using twisted.names can be more scalable and allow you to react more reasonably to high load situations.  Or, at least, it will give you a level of control so that you can tune it, since just doing potentially blocking platform stuff in a thread is not amenable to tuning.

-glyph

[1]: Actually it is sometimes exposed, for example with platform-specific APIs like <https://developer.apple.com/library/mac/documentation/CoreFoundation/Reference/CFHostRef/Reference/reference.html> and <http://msdn.microsoft.com/en-us/library/windows/desktop/ms741522(v=vs.85).aspx>.  But you know, not on, like, Linux.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140108/6622508c/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140108/6622508c/attachment-0002.bin>

From keturn at keturn.net  Mon Jan  6 11:03:07 2014
From: keturn at keturn.net (Kevin Turner)
Date: Mon, 06 Jan 2014 10:03:07 -0800
Subject: [Twisted-Python] Filing Bugs
In-Reply-To: <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
References: <25CB87184063F24C9BDD8C5E3566EA257AEC698A@kit-ex01.coldstorage.com>
 <CAKN9TD+FVxds6_WFqi7-h_+_a9kd2ReOeuD0UkhbkX8UETKBig@mail.gmail.com>
 <25CB87184063F24C9BDD8C5E3566EA257AEC69D2@kit-ex01.coldstorage.com>
 <87txemjsvf.fsf@loki.hocat.ca>
 <25CB87184063F24C9BDD8C5E3566EA257AEC6CA8@kit-ex01.coldstorage.com>
 <CAKN9TDKJRcma_irLeE-YG6zuLoVnQ2ab5X+Yoga30rDLB+9zdg@mail.gmail.com>
 <52A7BFC6.1060607@itamarst.org>
 <CAKN9TDJaOAkcyee2AF53-yBzbP3gXBA7utc8PTVEAO2NVED_Ww@mail.gmail.com>
 <52A85F15.4030103@itamarst.org>
 <CAKN9TDKVqoEjKnDivxxLoTK5HnroNw4o3Ccw4L=jYVTWRvb_dQ@mail.gmail.com>
 <B2EE71FB-9E66-4E8F-972F-5589DF583142@twistedmatrix.com>
 <CAKN9TDLQSdTjX8mJX+o4DwuVxWFwP8QSORV9P-wz3JmJEr_gmw@mail.gmail.com>
 <2822AC00-3955-4879-AD89-C0CF7610527B@twistedmatrix.com>
 <CAKN9TD+4G6diuHjb2+mJJDd4Qnv7WeMw-RvYGYyp14B+JNoTtw@mail.gmail.com>
Message-ID: <1389031387.22139.67270761.44325675@webmail.messagingengine.com>

On Sun, Jan 5, 2014, at 10:52 AM, Daniel Sank wrote:

I have a windows computer and an Ubuntu computer that I use as a file
server. I'm reading about IRC now. How are we supposed to find each
other?



The channels relevant to Twisted development are listed
on [1]http://twistedmatrix.com/trac/wiki/TwistedCommunity



That's not really relevant if you're only looking to get a new password
from Glyph, because you'll want to do that over private message instead
of sharing your new password with the channel :), but it might be
otherwise useful.

References

1. http://twistedmatrix.com/trac/wiki/TwistedCommunity
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140106/43e0b6a4/attachment-0002.html>

From p.mayers at imperial.ac.uk  Thu Jan  9 04:13:53 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 09 Jan 2014 11:13:53 +0000
Subject: [Twisted-Python] Twisted names client.getHostbyName dual-stack
 operation
In-Reply-To: <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>
References: <CAFUtXGw5a71OBj6D6wjFk9KOBObK-e0La9rdUY5Ly6_z9n8A6g@mail.gmail.com>
 <52CA97DC.8010704@imperial.ac.uk>
 <E9651256-F9F4-4A56-B75F-88C15F01266D@twistedmatrix.com>
Message-ID: <52CE8471.60700@imperial.ac.uk>

On 08/01/14 23:05, Glyph Lefkowitz wrote:

> However, if you’re building a big service to run in the cloud, or on a
> VPN, on specially-tuned machines that you configured, using
> twisted.names can be more scalable and allow you to react more
> reasonably to high load situations.  Or, at least, it will give you a
> level of control so that you can tune it, since just doing potentially
> blocking platform stuff in a thread is not amenable to tuning.

Sure, agreed - I folded those concerns into the "user-supplied names" 
bit ;o)

Using a resolver directly is totally appropriate in certain use-cases, 
and t.names is a good choice if you're using Twisted[1] but I think of 
it like "should I use UDP instead of TCP for my protocol" - if you have 
to ask, the answer is no.

(In fairness to the Chrome guys, they've probably got the chops to 
reimplement it properly and are doing enough innovative stuff in Chrome 
that having an in-browser resolver is reasonable, so my dig at them is 
probably unfair ;o)

[1] Modulo a couple of rather big holes that I know people are already 
working on, like source-port randomisation for Kaminsky-resistance, and 
so on.



From sank.daniel at gmail.com  Sat Jan 11 13:46:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 11 Jan 2014 12:46:43 -0800
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
Message-ID: <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>

> In other words, you don't have to log in on the *root* pb object.  Loginis just
> a PB method call.  You can have a second portal wrapping a different realm
> handing out different avatars and you can log in to that portal the
second time.

I look in t.s.pb to find out what methods are called during log in.
PBServerFactory is adapted to a pb root object by _PortalRoot which returns
a _PortalWrapper from rootObject(self, broker).

_PortalWrapper has a remote_login method with the following code

def remote_login(self, username):
        """
        Start of username/password login.
        """
        c = challenge()
        return c, _PortalAuthChallenger(self.portal, self.broker, username,
c)

I'm confused by this because I expect that attempting to return an instance
of _PortalAuthChallenger from the remote_login method should fail (ie.
insecureJelly). How does this work?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140111/09cb4616/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Jan 11 13:59:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 11 Jan 2014 20:59:56 -0000
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
 <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
Message-ID: <20140111205956.17936.1032489926.divmod.xquotient.100@top>

On 08:46 pm, sank.daniel at gmail.com wrote:
>>In other words, you don't have to log in on the *root* pb object. 
>>Loginis just
>>a PB method call.  You can have a second portal wrapping a different 
>>realm
>>handing out different avatars and you can log in to that portal the
>second time.
>
>I look in t.s.pb to find out what methods are called during log in.
>PBServerFactory is adapted to a pb root object by _PortalRoot which 
>returns
>a _PortalWrapper from rootObject(self, broker).
>
>_PortalWrapper has a remote_login method with the following code
>
>def remote_login(self, username):
>        """
>        Start of username/password login.
>        """
>        c = challenge()
>        return c, _PortalAuthChallenger(self.portal, self.broker, 
>username,
>c)
>
>I'm confused by this because I expect that attempting to return an 
>instance
>of _PortalAuthChallenger from the remote_login method should fail (ie.
>insecureJelly). How does this work?

_PortalAuthChallenger is a Referenceable.  Any Referenceable is allowed 
by default.

See twisted.spread.jelly.SecurityOptions, in particular the `basicTypes` 
attribute and the `allowBasicTypes` method.

Jean-Paul



From sank.daniel at gmail.com  Sat Jan 11 22:06:48 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Sat, 11 Jan 2014 21:06:48 -0800
Subject: [Twisted-Python] multiple log-in / perspective broker
In-Reply-To: <20140111205956.17936.1032489926.divmod.xquotient.100@top>
References: <CAKN9TDLyeBCZj+RoBZhKMAuhJSyZzYfJBmpZ-Zhu4KQu1HkWHg@mail.gmail.com>
 <CAKN9TDL7DBr_kJrdQk6t3S4eOHUkBKviu0UWwVqA4M5WDXj2FA@mail.gmail.com>
 <e277f3edf470d60c446a59844356a7a8@itamarst.org>
 <CAKN9TDKcba4f8iUfEPkz2n0+gWy4ZgCJ3UDHogcNH=QMX6DRwQ@mail.gmail.com>
 <e844d2218d9b16d099e2bce77fcd92f3@itamarst.org>
 <20131228175210.17936.440002209.divmod.xquotient.1@top>
 <CAKN9TD+AaAu_cAM_06C4yH=5vOvEABz6yO6QeE2CQSpTDFyLxA@mail.gmail.com>
 <CAKN9TDLccSMVcgJ7vnSRBbWQCwqrQx0eVYF9pEiRE03kkTCWpQ@mail.gmail.com>
 <20140111205956.17936.1032489926.divmod.xquotient.100@top>
Message-ID: <CAKN9TDLJ41kTTRrsN-F0goyn3JnW8aVSvRzhVyo3t+7XiZeQbw@mail.gmail.com>

> _PortalAuthChallenger is a Referenceable

Facepalm. Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140111/e3ab8ed9/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan 12 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1389510315.82.4193194420775541783@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140112/dd130a36/attachment-0002.html>

From johnnadre at zoho.com  Sun Jan 12 14:01:46 2014
From: johnnadre at zoho.com (johnnadre)
Date: Sun, 12 Jan 2014 13:01:46 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
Message-ID: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>


Hi,

I want to exit my application immediately when CTRL+C is pressed, however reactor hangs when there are running threads.
Some of these threads have blocking I/O, so I can't simply set a variable or wait for them to terminate. An example application would be:

from twisted.internet import reactor, threads
from time import sleep
import signal

def do():
    try:
        sleep(10)
    except KeyboardInterrupt:
        print "interrupt!"

#def cleanup(signum, stackframe):
def cleanup():
    d.cancel()
    reactor.callFromThread(reactor._stopThreadPool)
    reactor.callFromThread(reactor.stop) 

if __name__ == '__main__':
    d = threads.deferToThread(do)
    #signal.signal(signal.SIGINT, cleanup)
    reactor.addSystemEventTrigger('before', 'shutdown', cleanup)
    reactor.run()


How can I achieve this?

- John




From exarkun at twistedmatrix.com  Sun Jan 12 15:03:24 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jan 2014 22:03:24 -0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
Message-ID: <20140112220324.17936.1726525833.divmod.xquotient.104@top>

On 09:01 pm, johnnadre at zoho.com wrote:
>
>Hi,
>
>I want to exit my application immediately when CTRL+C is pressed, 
>however reactor hangs when there are running threads.
>Some of these threads have blocking I/O, so I can't simply set a 
>variable or wait for them to terminate. An example application would 
>be:

Python threads (being plain old operating systems; for example, POSIX 
threads) aren't generally interruptable.  You could try exiting the 
entire process using `os._exit`.

This is the case whether you're using Twisted or not.

Jean-Paul
>from twisted.internet import reactor, threads
>from time import sleep
>import signal
>
>def do():
>    try:
>        sleep(10)
>    except KeyboardInterrupt:
>        print "interrupt!"
>
>#def cleanup(signum, stackframe):
>def cleanup():
>    d.cancel()
>    reactor.callFromThread(reactor._stopThreadPool)
>    reactor.callFromThread(reactor.stop)
>
>if __name__ == '__main__':
>    d = threads.deferToThread(do)
>    #signal.signal(signal.SIGINT, cleanup)
>    reactor.addSystemEventTrigger('before', 'shutdown', cleanup)
>    reactor.run()
>
>
>How can I achieve this?
>
>- John
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From johnnadre at zoho.com  Sun Jan 12 17:42:37 2014
From: johnnadre at zoho.com (johnnadre)
Date: Sun, 12 Jan 2014 16:42:37 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <20140112220324.17936.1726525833.divmod.xquotient.104@top>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
Message-ID: <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>


---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> wrote ---- 

 > On 09:01 pm, johnnadre at zoho.com wrote: 
 > > 
 > >Hi, 
 > > 
 > >I want to exit my application immediately when CTRL+C is pressed,  
 > >however reactor hangs when there are running threads. 
 > >Some of these threads have blocking I/O, so I can't simply set a  
 > >variable or wait for them to terminate. An example application would  
 > >be: 
 >  
 > Python threads (being plain old operating systems; for example, POSIX  
 > threads) aren't generally interruptable.  You could try exiting the  
 > entire process using `os._exit`. 
 >  
 > This is the case whether you're using Twisted or not. 

Thanks! That's exactly what I was looking for.




From spuram at kiwiup.com  Mon Jan 13 06:28:01 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 13 Jan 2014 18:58:01 +0530
Subject: [Twisted-Python]  Maximum number of SSL connections to the server
Message-ID: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>

Hi all,

I am doing load testing on my twisted SSL server. I spawn threads(~2000)
from the application and each thread will act as a SSL client and connect
to the server.
Client code is straight forward. It creates a socket, does SSL wrap and
connects to the server. Once all threads connect to the server, every
thread closes its socket.

During my initial tests, I found that after 245 successful connections, all
remaining threads started to fail with this error on the client side.

*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*

Then I figured out that its an issue with number of open files which was by
default - 256. I changed the limit for server and client to 10000. It
successfully completed the 500 connections test.

Now it fails after 1010 successful connections. I checked the number of
open files of the server process it remains at 1010 and there are no stale
open files.

Client shows the same error
*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*

Twisted logs on the server shows that it connects first and then
disconnects with this error.

*<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
*<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
routines', 'SSL23_READ', 'ssl handshake failure')]*

How can I fix this ? How should I approach to debug ?

Thanks
-Sumanth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/d16c7e17/attachment-0002.html>

From wolfgang at rohdewald.de  Mon Jan 13 06:44:08 2014
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 13 Jan 2014 14:44:08 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
Message-ID: <4900706.oOpxapxZh0@i5>

Am Montag, 13. Januar 2014, 18:58:01 schrieb Sumanth Puram:
> Now it fails after 1010 successful connections

which limit did you raise? Per process or systemwide?

1010 sound like you have a limit of 1024 somewhere

-- 
Wolfgang



From _ at lvh.io  Mon Jan 13 06:48:33 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 14:48:33 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <4900706.oOpxapxZh0@i5>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
Message-ID: <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>

Hi Sumanth,


Still sounds like an open file problem. What platform? How did you set the
number of files higher that 256? Take a look at /etc/security/limits.conf
:-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/797edd58/attachment-0002.html>

From spuram at kiwiup.com  Mon Jan 13 07:07:43 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 13 Jan 2014 19:37:43 +0530
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
 <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
Message-ID: <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>

Yes, 1010 looks more like a 1024 limit.

I am using a Mac OSX 10.8. I have set the limit with 'ulimit -n 10000' for
the current shell where I was running the server and the same for client.

I have tried to increase the limit for number of files, but could not find
any other way than this.

sumanth$ ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
max locked memory       (kbytes, -l) unlimited
max memory size         (kbytes, -m) unlimited
open files                      (-n) 10000
pipe size            (512 bytes, -p) 1
stack size              (kbytes, -s) 65532
cpu time               (seconds, -t) unlimited
max user processes              (-u) 709
virtual memory          (kbytes, -v) unlimited



On Mon, Jan 13, 2014 at 7:18 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Sumanth,
>
>
> Still sounds like an open file problem. What platform? How did you set the
> number of files higher that 256? Take a look at /etc/security/limits.conf
> :-)
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/9e61c43d/attachment-0002.html>

From _ at lvh.io  Mon Jan 13 07:18:21 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 15:18:21 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <4900706.oOpxapxZh0@i5>
 <CAE_Hg6beJx4tyQa9cpv3pQEk81-iWXEFz_ougT_i0yBG90Fqzw@mail.gmail.com>
 <CAEEwdoKqyLKnGNxm_=8A1SZZk+qAvhOVicfeCzwm86rhtVDEcw@mail.gmail.com>
Message-ID: <CAE_Hg6ac2c8ZcEHp7JMJ337BctDzVZD=Tve_vSWDDLjVL2oQpQ@mail.gmail.com>

Hi Sumanth,


You probably want to look at the limits launchd is imposing. Consider:

launchctl limit maxfiles 5000 5000

You can make this permanent by pumping that line (minus launchctl) into
/etc/launchd.conf.

hth

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/85547cae/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan 13 07:19:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jan 2014 14:19:11 -0000
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
Message-ID: <20140113141911.17936.430116938.divmod.xquotient.122@top>

On 01:28 pm, spuram at kiwiup.com wrote:
>Hi all,
>
>I am doing load testing on my twisted SSL server. I spawn 
>threads(~2000)
>from the application and each thread will act as a SSL client and 
>connect
>to the server.
>
>[snip]
>
>Now it fails after 1010 successful connections. I checked the number of
>open files of the server process it remains at 1010 and there are no 
>stale
>open files.

select() has a hard limit that is often 1024.  Make sure you're not 
using the select()-based reactor (which I think is probably the default 
on OS X).

Jean-Paul
>Client shows the same error
>*SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*
>
>Twisted logs on the server shows that it connects first and then
>disconnects with this error.
>
>*<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
>*<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
>routines', 'SSL23_READ', 'ssl handshake failure')]*
>
>How can I fix this ? How should I approach to debug ?
>
>Thanks
>-Sumanth



From _ at lvh.io  Mon Jan 13 07:22:51 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 13 Jan 2014 15:22:51 +0100
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <20140113141911.17936.430116938.divmod.xquotient.122@top>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
Message-ID: <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>

On Mon, Jan 13, 2014 at 3:19 PM, <exarkun at twistedmatrix.com> wrote:

> select() has a hard limit that is often 1024.  Make sure you're not using
> the select()-based reactor (which I think is probably the default on OS X).
>
> Jean-Paul
>

What is the A-grade reactor on OS X? I thought it was cfreactor, but the
docs appear to brand it as a GUI reactor (that doesn't mean it can't be
better than select, of course); perhaps it's kqueuereactor but I hear
kqueue is kind of gimpy on OS X compared to FreeBSD (but I have no idea
what that actually entails).

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/a775b527/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jan 13 16:31:37 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2014 15:31:37 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
Message-ID: <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>


On Jan 12, 2014, at 4:42 PM, johnnadre <johnnadre at zoho.com> wrote:

> 
> ---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> wrote ---- 
> 
>> On 09:01 pm, johnnadre at zoho.com wrote: 
>>> 
>>> Hi, 
>>> 
>>> I want to exit my application immediately when CTRL+C is pressed,  
>>> however reactor hangs when there are running threads. 
>>> Some of these threads have blocking I/O, so I can't simply set a  
>>> variable or wait for them to terminate. An example application would  
>>> be: 
>> 
>> Python threads (being plain old operating systems; for example, POSIX  
>> threads) aren't generally interruptable.  You could try exiting the  
>> entire process using `os._exit`. 

Well, there's always pthread_kill, now exposed as os.pthread_kill on Python 3.3, but ... don't do that.  Nothing good will come of it.

>> This is the case whether you're using Twisted or not. 
> 
> Thanks! That's exactly what I was looking for.

If you need to use os._exit, your application probably has a bug :-).

(Not to say you should never use it, but any time you use it you should be simultaneously looking into why you need to.)

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140113/4afdcc1a/attachment-0002.bin>

From glyph at twistedmatrix.com  Mon Jan 13 16:37:19 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2014 15:37:19 -0800
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
 <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
Message-ID: <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>


On Jan 13, 2014, at 6:22 AM, Laurens Van Houtven <_ at lvh.io> wrote:

> On Mon, Jan 13, 2014 at 3:19 PM, <exarkun at twistedmatrix.com> wrote:
> select() has a hard limit that is often 1024.  Make sure you're not using the select()-based reactor (which I think is probably the default on OS X).
> 
> Jean-Paul
> 
> What is the A-grade reactor on OS X? I thought it was cfreactor, but the docs appear to brand it as a GUI reactor (that doesn't mean it can't be better than select, of course); perhaps it's kqueuereactor but I hear kqueue is kind of gimpy on OS X compared to FreeBSD (but I have no idea what that actually entails).

Actually, by default, cfreactor doesn't even support a GUI; you need to specifically install a different main loop (as the docs explain, "install(runner=PyObjCTools.AppHelper.runEventLoop)") in order to integrate with a GUI.  The reason the docs brand it as such is that you cannot have an OS X GUI cooperate with your Twisted main loop using a different reactor.

KQueue's gimpiness is entirely to do with deficiencies in its behavior with regard to weird file descriptor types, mostly PTYs.  (I've seen some people talking about difficulties with pipes, but I've never had an issue with them personally; I don't know what that's about.)  If all you need to do is talk to a lot of sockets, KQueue is just fine.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140113/9ce07350/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140113/9ce07350/attachment-0002.bin>

From spuram at kiwiup.com  Tue Jan 14 02:05:20 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Tue, 14 Jan 2014 14:35:20 +0530
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <20140113141911.17936.430116938.divmod.xquotient.122@top>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
Message-ID: <CAEEwdo+x8QbbC5Tm3Gq6w+pxRwf6Y9B8G2FnysFQx+nC4EyJHg@mail.gmail.com>

Thanks Jean.

Changing reactor kQueue on OSX fixed this issue.


On Mon, Jan 13, 2014 at 7:49 PM, <exarkun at twistedmatrix.com> wrote:

> On 01:28 pm, spuram at kiwiup.com wrote:
>
>> Hi all,
>>
>> I am doing load testing on my twisted SSL server. I spawn threads(~2000)
>> from the application and each thread will act as a SSL client and connect
>> to the server.
>>
>> [snip]
>>
>>
>> Now it fails after 1010 successful connections. I checked the number of
>> open files of the server process it remains at 1010 and there are no stale
>> open files.
>>
>
> select() has a hard limit that is often 1024.  Make sure you're not using
> the select()-based reactor (which I think is probably the default on OS X).
>
> Jean-Paul
>
>> Client shows the same error
>> *SSLError: [Errno 8] _ssl.c:503: EOF occurred in violation of protocol*
>>
>>
>> Twisted logs on the server shows that it connects first and then
>> disconnects with this error.
>>
>> *<127.0.0.1:5549 <http://127.0.0.1:5549>>  connected*
>> *<127.0.0.1:55249 <http://127.0.0.1:55249>>  lost connection: [('SSL
>> routines', 'SSL23_READ', 'ssl handshake failure')]*
>>
>>
>> How can I fix this ? How should I approach to debug ?
>>
>> Thanks
>> -Sumanth
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140114/5dfdc319/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jan 14 04:12:18 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jan 2014 11:12:18 -0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@[172.29.241.231]>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@[172.29.241.231]>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
Message-ID: <20140114111218.17936.1588265146.divmod.xquotient.129@top>

On 13 Jan, 11:31 pm, glyph at twistedmatrix.com wrote:
>
>On Jan 12, 2014, at 4:42 PM, johnnadre <johnnadre at zoho.com> wrote:
>>
>>---- On Sun, 12 Jan 2014 14:03:24 -0800 <exarkun at twistedmatrix.com> 
>>wrote ----
>>>On 09:01 pm, johnnadre at zoho.com wrote:
>>>>
>>>>Hi,
>>>>
>>>>I want to exit my application immediately when CTRL+C is pressed,
>>>>however reactor hangs when there are running threads.
>>>>Some of these threads have blocking I/O, so I can't simply set a
>>>>variable or wait for them to terminate. An example application would
>>>>be:
>>>
>>>Python threads (being plain old operating systems; for example, POSIX
>>>threads) aren't generally interruptable.  You could try exiting the
>>>entire process using `os._exit`.
>
>Well, there's always pthread_kill, now exposed as os.pthread_kill on 
>Python 3.3, but ... don't do that.  Nothing good will come of it.
>>>This is the case whether you're using Twisted or not.
>>
>>Thanks! That's exactly what I was looking for.
>
>If you need to use os._exit, your application probably has a bug :-).
>
>(Not to say you should never use it, but any time you use it you should 
>be simultaneously looking into why you need to.)
>
>-glyph

I think you may as well say the same about needing to use threads.  The 
needs are pretty closely related, anyway.

Consider an application that uses twisted.enterprise.adbapi to talk to a 
SQL server, is running when the network suffers a failure that leaves a 
cursor waiting for data from the server, and then the user decides they 
want to exit the application.

Most likely the cursor will block forever on a recv() call, the thread 
it runs in will never proceed, and the process will never exit.

Whether this is a bug or an unavoidable consequence of doing blocking 
I/O using POSIX threads or both...

Jean-Paul



From dustin at v.igoro.us  Tue Jan 14 07:27:23 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 09:27:23 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <20140114111218.17936.1588265146.divmod.xquotient.129@top>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
Message-ID: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>

There are two things wrong with your scenario.

First, in any production or production-ready environment, your
software needs to correctly handle stuck TCP connections.  With the
proliferation of "smart" network equipment (session-tracking
firewalls, etc.), this is much more common than it was five or ten
years ago.  Some DBAPI backends are better about this than others -
for example, MySQL-Python gets it right, but PyMySQL does not.

Second, this has nothing whatsoever to do with whether the I/O is
blocking or not.  Twisted apps can and, believe me from experience, do
suffer from stuck TCP connections.  Sure, the wasted resources in this
case are smaller (just a file descriptor, not a thread), but the user
experience is the same (part of the application hangs irreversibly).
In fact, this is about the only thing the manhole is used for at
Mozilla: running `os.close` on stuck fd's.

Dustin



From p.mayers at imperial.ac.uk  Tue Jan 14 08:05:49 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Jan 2014 15:05:49 +0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
Message-ID: <52D5524D.2060306@imperial.ac.uk>

On 14/01/14 14:27, Dustin J. Mitchell wrote:
> There are two things wrong with your scenario.
>
> First, in any production or production-ready environment, your
> software needs to correctly handle stuck TCP connections.  With the
> proliferation of "smart" network equipment (session-tracking
> firewalls, etc.), this is much more common than it was five or ten
> years ago.  Some DBAPI backends are better about this than others -
> for example, MySQL-Python gets it right, but PyMySQL does not.

That is certainly a fine sentiment with which I agree in principle, but 
an ENORMOUSLY LARGE amount of (really very expensive and business 
critical) software doesn't handle this *at all* as anyone who runs a 
firewall in front of an e-Business app can tell you.

[A well known vendor whose name rhymes with a type of traditional small 
boat used extensively in the British Isles is a particular offender]

So if you're handling this correctly, give yourself a pat on the back - 
there is software costing millions a year in licence fees that assumes 
TCP is as reliable as CPU->CPU cache communications :o(

> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.

I'm wondering if TCP keepalive isn't any use to you in this regard?

(and what do Mozilla do with Twisted? :o)



From dustin at v.igoro.us  Tue Jan 14 08:10:39 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 10:10:39 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <52D5524D.2060306@imperial.ac.uk>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <52D5524D.2060306@imperial.ac.uk>
Message-ID: <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>

On Tue, Jan 14, 2014 at 10:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I'm wondering if TCP keepalive isn't any use to you in this regard?

It is, but only in cases where we can tweak kernel parameters
appropriately so that the timeout is not >2h.

> (and what do Mozilla do with Twisted? :o)

Buildbot, among other things.

Dustin



From p.mayers at imperial.ac.uk  Tue Jan 14 08:22:20 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Jan 2014 15:22:20 +0000
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <52D5524D.2060306@imperial.ac.uk>
 <CAJtE5vS-ojv_EYEXWuSOb7X0mWNA656YzHutCZ=A=wTUXTJqrQ@mail.gmail.com>
Message-ID: <52D5562C.8020409@imperial.ac.uk>

On 14/01/14 15:10, Dustin J. Mitchell wrote:
> On Tue, Jan 14, 2014 at 10:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> I'm wondering if TCP keepalive isn't any use to you in this regard?
>
> It is, but only in cases where we can tweak kernel parameters
> appropriately so that the timeout is not >2h.

Hmm. I see Twisted has no API to set this using the socket options, 
which is unfortunate. I've opened #6897 for that.

Presumably there should be endpoint syntax for it too...

>> (and what do Mozilla do with Twisted? :o)
>
> Buildbot, among other things.

Doh yes of course.



From glyph at twistedmatrix.com  Tue Jan 14 12:06:35 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2014 11:06:35 -0800
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
Message-ID: <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>

On Jan 14, 2014, at 6:27 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.

The lack of 'abortConnection' was a pretty serious design flaw in Twisted's transport interface initially, but that's been resolved for quite some time now.  It should be possible to handle this at the application level on a per-connection basis quite gracefully now.

I mean, your point is correct; you can certainly have "stuck" event sources in Twisted too, without any threads.  And without any intervention it results in exactly the same bad user experience.  I've certainly seen it myself.

However, intervention is easier than with a stuck thread.  You can't interrupt an arbitrary thread; you don't know and can't tell what it is doing without pretty invasive debugging instrumentation.  And, as you note, even before the advent of abortConnection, an os.close() could easily deal with a stuck async FD on a per-connection basis, without need to bring the entire process down.

Finally, we have abortConnection now, so my main point stands; the point was not "never call os._exit" but rather "if you have to call os._exit, there's a bug".  The same is true here: if you have to manhole into your server to call os.close, there's a bug in your application where it's not timing something out and freeing a resource it otherwise could be freeing.

Unless your contention is that there are no bugs in buildbot? ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140114/bb6fc3ce/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140114/bb6fc3ce/attachment-0002.bin>

From dustin at v.igoro.us  Tue Jan 14 12:37:50 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 14 Jan 2014 14:37:50 -0500
Subject: [Twisted-Python] Exit all threads upon KeyboardInterrupt
In-Reply-To: <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>
References: <786851029.170813.1389560506232.JavaMail.sas1@172.29.241.231>
 <20140112220324.17936.1726525833.divmod.xquotient.104@top>
 <934484641.180600.1389573757913.JavaMail.sas1@172.29.241.231>
 <9C9D77B6-DD1C-431D-B250-96E297337BBD@twistedmatrix.com>
 <20140114111218.17936.1588265146.divmod.xquotient.129@top>
 <CAJtE5vQVewWATzqZiQ_jssp6SZEdm8ZXXSU45C58MC1+6EQ_1A@mail.gmail.com>
 <A21318A0-2959-4B10-A9C3-258448FC176A@twistedmatrix.com>
Message-ID: <CAJtE5vQphZZrHO3S65Z_DTtnmYJWSuVnGdtyy7-YZS2mVopw7g@mail.gmail.com>

You're absolutely right.  I wasn't arguing with you, but with JP :)

Dustin

On Tue, Jan 14, 2014 at 2:06 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> On Jan 14, 2014, at 6:27 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
>
> Second, this has nothing whatsoever to do with whether the I/O is
> blocking or not.  Twisted apps can and, believe me from experience, do
> suffer from stuck TCP connections.  Sure, the wasted resources in this
> case are smaller (just a file descriptor, not a thread), but the user
> experience is the same (part of the application hangs irreversibly).
> In fact, this is about the only thing the manhole is used for at
> Mozilla: running `os.close` on stuck fd's.
>
>
> The lack of 'abortConnection' was a pretty serious design flaw in Twisted's
> transport interface initially, but that's been resolved for quite some time
> now.  It should be possible to handle this at the application level on a
> per-connection basis quite gracefully now.
>
> I mean, your point is correct; you can certainly have "stuck" event sources
> in Twisted too, without any threads.  And without any intervention it
> results in exactly the same bad user experience.  I've certainly seen it
> myself.
>
> However, intervention is easier than with a stuck thread.  You can't
> interrupt an arbitrary thread; you don't know and can't tell what it is
> doing without pretty invasive debugging instrumentation.  And, as you note,
> even before the advent of abortConnection, an os.close() could easily deal
> with a stuck async FD on a per-connection basis, without need to bring the
> entire process down.
>
> Finally, we have abortConnection now, so my main point stands; the point was
> not "never call os._exit" but rather "if you have to call os._exit, there's
> a bug".  The same is true here: if you have to manhole into your server to
> call os.close, there's a bug in your application where it's not timing
> something out and freeing a resource it otherwise could be freeing.
>
> Unless your contention is that there are no bugs in buildbot? ;-)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From glyph at twistedmatrix.com  Tue Jan 14 12:49:44 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2014 11:49:44 -0800
Subject: [Twisted-Python] Maximum number of SSL connections to the server
In-Reply-To: <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>
References: <CAEEwdo+vk3f=-wCv6p9gSurE0xWdVJPDubro55wz1UvkOz0n9w@mail.gmail.com>
 <20140113141911.17936.430116938.divmod.xquotient.122@top>
 <CAE_Hg6Y++w56rySD0tXrJ2Rp8352KUEX6gHadbB=H+2LoQk1KQ@mail.gmail.com>
 <D050DCCE-7965-4006-B3D4-19BDC2C1746F@twistedmatrix.com>
Message-ID: <BE79CD31-F50E-4459-8BF8-8457FD6AEE73@twistedmatrix.com>


On Jan 13, 2014, at 3:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> KQueue's gimpiness is entirely to do with deficiencies in its behavior with regard to weird file descriptor types, mostly PTYs.

Hmm.  And actually, I believe, this was fixed on Mavericks but we haven't updated our test configuration yet.  I just enabled the kqueue reactor on my Mavericks machine, and:

  PTYProcessTestsBuilder_KQueueReactor
    test_changeGID ...                                                [SKIPPED]
    test_changeUID ...                                                [SKIPPED]
    test_openFileDescriptors ...                                           [OK]
    test_processExitedRaises ...                                           [OK]
    test_processExitedWithSignal ...                                       [OK]
    test_processTransportInterface ...                                     [OK]
    test_spawnProcessEarlyIsReaped ...                                     [OK]
    test_systemCallUninterruptedByChildExit ...                            [OK]
    test_timelyProcessExited ...                                           [OK]
    test_write ...                                                         [OK]
    test_writeSequence ...                                                 [OK]
    test_writeToChild ...                                                  [OK]
    test_writeToChildBadFileDescriptor ...                                 [OK]



-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140114/92393407/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140114/92393407/attachment-0002.bin>

From tmkasun at gmail.com  Fri Jan 17 11:06:10 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Fri, 17 Jan 2014 23:36:10 +0530
Subject: [Twisted-Python] starting point to contribute
Message-ID: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>

Hi all,
         I'm kasun from srilanka, and i'm developing a vehicle tracking
system for one of our government authorities,when i start coding for the
project, I used the support of basic python modules(socket,threading)[1],
then I got to know about the usability of Twisted and re-factored the
code[2] to use Twisted because it's a great python network framework.
so I have hands on experience with the framework.I'm happy to start
contributing to twisted community.and i have already gone through two
articles about the development process (ContributingToTwistedLabs and
TwistedDevelopment).So if you can suggest me a good starting point I would
be more than happy to contribute

reference:
[1]:
https://github.com/tmkasun/port/blob/kasun/server_Program/server_tcp.py
[2]:
https://github.com/tmkasun/port/blob/kasun/server_Program/server_twisting/gps_server.py

-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/e919289b/attachment-0002.html>

From sank.daniel at gmail.com  Fri Jan 17 13:33:46 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Fri, 17 Jan 2014 12:33:46 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
Message-ID: <CAKN9TDJ5XfQBzuGBpdUBpGyEODLfqTD2Q0E9XmbJTodWNoRFcQ@mail.gmail.com>

I think the general idea is to find tickets on the webpage and just go
ahead and fix them. You can sort them by difficulty.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/022acc19/attachment-0002.html>

From twisted-python at 2xlp.com  Fri Jan 17 13:43:11 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Fri, 17 Jan 2014 15:43:11 -0500
Subject: [Twisted-Python] strategies for tracking down memory issues
Message-ID: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>


some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!

looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs. 

i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.  

i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?


From werner at thieprojects.ch  Fri Jan 17 14:41:59 2014
From: werner at thieprojects.ch (Werner Thie)
Date: Fri, 17 Jan 2014 11:41:59 -1000
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
Message-ID: <52D9A3A7.3040703@thieprojects.ch>

On 1/17/14 10:43 AM, Jonathan Vanasco wrote:
>
> some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!
>
> looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs.
>
> i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.
>
> i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?

Hi

A few years ago I ran into the problem of non collectable cycles being 
produced by keeping references around in objects locally.

Please find attached a snippet of code I used over and over again for 
hunting down such cycles. It's for sure not a simple cure, but with a 
manhole service being run in your process of question, it gives you the 
telltale signs your looking for.

Use it like

from dumpObjects import dumpObjects

dumpObjects()

Various include/exclude sets should help you to narrow the search in 
consecutive runs.

As for the lifecycle of deferreds I never ever had a problem with 
deferreds not being cleaned up, it has always been me who produced those 
non collectable cycles, usually under the false assumption, that it was 
safe to keep a ref handy.

Werner

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dumpObjects.py
Type: text/x-python
Size: 1935 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140117/b3d0ad11/attachment-0002.py>

From glyph at twistedmatrix.com  Fri Jan 17 16:29:17 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 15:29:17 -0800
Subject: [Twisted-Python] large features and code review
Message-ID: <16550848-92F8-420E-A69A-2B0C82506ED2@twistedmatrix.com>

I've just put the fancy new logging branch into review that wsanchez and I have been working on for several months now.  It's pretty big, and we've had difficulty with reviewing large changes in the past, so I suggested a novel review strategy:

	<https://twistedmatrix.com/trac/ticket/6750#comment:36>

I am hopeful that this can provide the benefits of reviewing a whole feature all at once, which is to say, the ability for a reviewer to understand all of the changes in context, and also the benefits of reviewing a sensibly-sized change, since we took some care to split the new logging package into, if not bite-sized, at least meal-sized separate private implementation modules.

Let me know if there's anything we can do to make this easier to review,

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140117/577ee9dc/attachment-0002.bin>

From glyph at twistedmatrix.com  Fri Jan 17 17:02:27 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 16:02:27 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
Message-ID: <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>


On Jan 17, 2014, at 10:06 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:

> Hi all, 
>          I'm kasun from srilanka, and i'm developing a vehicle tracking system for one of our government authorities,when i start coding for the project, I used the support of basic python modules(socket,threading)[1], then I got to know about the usability of Twisted and re-factored the code[2] to use Twisted because it's a great python network framework.
> so I have hands on experience with the framework.I'm happy to start contributing to twisted community.and i have already gone through two articles about the development process (ContributingToTwistedLabs and TwistedDevelopment).So if you can suggest me a good starting point I would be more than happy to contribute 

Hi Kasun!

I'm so happy to hear that you've had a positive experience developing something with Twisted, and even happier to hear that you'd like to contribute.

There's a bit of a getting-started guide at <https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>, but please feel free to ask more questions as you work your way through it.

I would like to suggest something more specific but I don't know a lot about you yet, and there are a lot of potential things to suggest :-).  What are your interests?  What parts of Twisted would you like to contribute to?

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140117/78fa2619/attachment-0002.bin>

From glyph at twistedmatrix.com  Fri Jan 17 17:06:54 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 16:06:54 -0800
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
Message-ID: <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>


On Jan 17, 2014, at 12:43 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> 
> some recent changes to a very-happy twisted daemon have resulted in a process that grows in memory until it crashes the box.  boo!
> 
> looking through the code and logs, i'm wondering if i''ve coded things in such a way that defferds or deferrd lists are somehow not getting cleaned up if an unhandled exception occurs. 
> 
> i've been looking through all my former notes and some questions on stack overflow, and I've seen a lot of info on using heapy and other tools to find issues on a function-by-function basis.  
> 
> i'm wondering if anyone has experience in simply monitoring the lifecycle of deferreds ?

First off, just manhole in and inspect gc.garbage :-).

Second, I've had pretty good luck with <http://www.aminus.net/wiki/Dowser>, although it would be nice if it were a little easier to set up without writing a weird little custom code hook and having to decide where to put it.

However, you can sort reachable objects by count and type, so you can see which of your classes or Twisted's classes are hanging around in memory and that will usually very quickly give you an idea of where the issue might be.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/c035de1b/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140117/c035de1b/attachment-0002.bin>

From kevin.horn at gmail.com  Fri Jan 17 18:32:10 2014
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 17 Jan 2014 19:32:10 -0600
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
 <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
Message-ID: <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>

On Fri, Jan 17, 2014 at 6:06 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 17, 2014, at 12:43 PM, Jonathan Vanasco <twisted-python at 2xlp.com>
> wrote:
>
>
> some recent changes to a very-happy twisted daemon have resulted in a
> process that grows in memory until it crashes the box.  boo!
>
> looking through the code and logs, i'm wondering if i''ve coded things in
> such a way that defferds or deferrd lists are somehow not getting cleaned
> up if an unhandled exception occurs.
>
> i've been looking through all my former notes and some questions on stack
> overflow, and I've seen a lot of info on using heapy and other tools to
> find issues on a function-by-function basis.
>
> i'm wondering if anyone has experience in simply monitoring the lifecycle
> of deferreds ?
>
>
> First off, just manhole in and inspect gc.garbage :-).
>
> <snip>

>
> -glyph
>

I had a similar situation several years ago, and messed around with heapy
and some other Python memory profiling tools, but the manhole + gc.garbage
was both the easiest and most effective.

One other thing I did was to set up a separate Twisted Service that would
run a memory profiling function periodically (I think it just looked at
gc.garbage, and sorted things nicely) and log it.

I used txScheduler (which I wrote) for that.  In fact that's part of why I
wrote it.

I can't give you much more detail than that, though.  It was over 5 years
ago, and I don't have access to that code any more.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/3a08f49d/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jan 17 19:11:26 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2014 18:11:26 -0800
Subject: [Twisted-Python] strategies for tracking down memory issues
In-Reply-To: <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>
References: <BE6035A7-B097-439A-A5C1-0296504DB602@2xlp.com>
 <A59B874E-840C-484D-A526-2A9B598F0501@twistedmatrix.com>
 <CA+U=zK2FDobA42J4iNJwhgLppiGxvkqWvV7yjpo0bCOz+aRspA@mail.gmail.com>
Message-ID: <EA7889E9-6155-4F76-875E-B2C777831FCD@twistedmatrix.com>


On Jan 17, 2014, at 5:32 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> I used txScheduler (which I wrote) for that.

Available here: <https://bitbucket.org/khorn/txscheduler>.

> In fact that's part of why I wrote it.

Not to be confused with TxScheduling: <https://pypi.python.org/pypi/TxScheduling>.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/25a28b4a/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140117/25a28b4a/attachment-0002.bin>

From twisted-python at 2xlp.com  Fri Jan 17 19:22:52 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Fri, 17 Jan 2014 21:22:52 -0500
Subject: [Twisted-Python] possible error in twisted app
Message-ID: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>

a portion of my twisted app is having some problems.  i think i figured out the issue -- but if I'm right.. i'll be a bit lost.

this portion of the app is essentially a web scraper.  it grabs a batch of X urls from a data broker , and then updates a database with data about the URL ( which either comes from an oEmbed endpoint , a third party data provider, or scraping the page if needed )

there's a lot of code that would be messy to follow, so i'll just explain it as best as possible, and provide some highlights.

the underlying logic is basically this:

	reactor starts an UpdateLinksService, that checks for new batches every 30 seconds
	the UpdateLinksService has an internal marker to check if it's still processing the last batch - or if it's safe to process

	to process the urls, the UpdateLinksService runs them in a request wrapper , that is supposed to be run through a defer.DeferredSemaphore() service

	when i'm done with the batch, i clear out internal marker via a `deferred_list_finish` method.

looking at some aggressive debugging output, it looks like my work to process a url is happening /after/ i call deferred_list_finish.  

in other words, i've somehow structured this so that i'm instantly finished.  

i *thought* i was running out of memory because i had some phantom deferreds running around.  now i'm starting to think that i'm just stacking the queue faster than i work on it.

i've tried changing things around and using different return values, but then started getting "exceptions.AssertionError:" because "assert not isinstance(result, Deferred)" ( twisted/internet/defer.py", line 381, in callback )

the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  

thanks!

=================

class UpdateLinksService():

	def process_urls(self, urls):
		requests = []
		for url in urls:
			wrapper = requestWrapper( self.semaphoreService, dbPool ) 
			d = wrapper.queue_url(url)
			updates.append(d)
                self.d_list = defer.DeferredList( updates )\
                    .addCallback( self.deferred_list_finish )


class RequestWrapper():

	def __init__(self, semaphore_service, dbPool):
		self.semaphoreService=semaphore_service
     	self.dbPool = dbPool

    def queue_url( self, url ):
        self.url = url
        d = self.semaphoreService.run( self._to_thread )
        return d

    def _to_thread( self ):
        d = threads.deferToThread( self._thread_begin )
        return d

    def _thread_begin(self):
    	worker = UrlWorker()
        d = self.dbPool.runInteraction( worker.process_url , self.url )


class UrlWorker():

	def process_url(self,txn, url):
		#blocking stuff
		return True/False					
		
		
The reason why I have _to_thread + _thread_begin  as 2 functions, and UrlWoker separate is for code re-use.

The RequestWrapper functions are mostly all in a base class; i just subclass RequestWrapper and override _thread_begin and an error callback (not shown)

UrlWorker's various methods are used througout my twisted daemon.


From tmkasun at gmail.com  Fri Jan 17 20:57:17 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Sat, 18 Jan 2014 09:27:17 +0530
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
Message-ID: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>

Hi glyph, daniel

Thanks for your attention.  I'm more interested in GPS protocols and web
protocols.

Since the project I'm working on is more focused on GPS protocols, I have
already gone through GPS protocols in twisted[1]

Please excuse typing errors,

[1]: http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/gps/
On Sat, Jan 18, 2014 at 5:32 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 17, 2014, at 10:06 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:
>
> > Hi all,
> >          I'm kasun from srilanka, and i'm developing a vehicle tracking
> system for one of our government authorities,when i start coding for the
> project, I used the support of basic python modules(socket,threading)[1],
> then I got to know about the usability of Twisted and re-factored the
> code[2] to use Twisted because it's a great python network framework.
> > so I have hands on experience with the framework.I'm happy to start
> contributing to twisted community.and i have already gone through two
> articles about the development process (ContributingToTwistedLabs and
> TwistedDevelopment).So if you can suggest me a good starting point I would
> be more than happy to contribute
>
> Hi Kasun!
>
> I'm so happy to hear that you've had a positive experience developing
> something with Twisted, and even happier to hear that you'd like to
> contribute.
>
> There's a bit of a getting-started guide at <
> https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>, but
> please feel free to ask more questions as you work your way through it.
>
> I would like to suggest something more specific but I don't know a lot
> about you yet, and there are a lot of potential things to suggest :-).
>  What are your interests?  What parts of Twisted would you like to
> contribute to?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140118/bdc37a32/attachment-0002.html>

From sank.daniel at gmail.com  Fri Jan 17 22:55:08 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Fri, 17 Jan 2014 21:55:08 -0800
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
Message-ID: <CAKN9TDK52C_Hw7mHC59y1-vjO3hmWOM8L92migUh+Za9xGPeUg@mail.gmail.com>

Kasun,

For the record I'm kind of a n00b myself.

-Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140117/a615ebd9/attachment-0002.html>

From hs at ox.cx  Sat Jan 18 03:45:47 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 18 Jan 2014 11:45:47 +0100
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
Message-ID: <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>

Hi Kasun,

On 18 Jan 2014, at 4:57, Kasun Thennakoon wrote:

> Thanks for your attention.  I'm more interested in GPS protocols and 
> web
> protocols.

If you’re into GPS, you may enjoy helping 
https://twistedmatrix.com/trac/ticket/3926 getting merged at last!

Cheers,
—h



From tmkasun at gmail.com  Sat Jan 18 11:10:53 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Sat, 18 Jan 2014 23:40:53 +0530
Subject: [Twisted-Python] starting point to contribute
In-Reply-To: <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>
References: <CAP7UUeNOTjzW_8GDeY_z=EbZj+eHqn+Z9ur-1RQ-tc7+A+e50g@mail.gmail.com>
 <2A731F19-7C91-4AE6-91DC-091595A2ADB1@twistedmatrix.com>
 <CAP7UUeNvmH+STTiyFS2Q5h08-EoMPFZd3_oEDVhDXqcHPmPRQg@mail.gmail.com>
 <73D1B365-D5EB-4F53-8C12-7EC5A9A1F6BF@ox.cx>
Message-ID: <CAP7UUeOea7TFtBHDvHCqOvWeod_1mTsg=QOXS_BJ9Ghna1ZSqQ@mail.gmail.com>

Hi Hynek

thank you so much , yes sure i'll do my best. start reading the thread and
still at the middle of it.
thanks again




On Sat, Jan 18, 2014 at 4:15 PM, Hynek Schlawack <hs at ox.cx> wrote:

> Hi Kasun,
>
>
> On 18 Jan 2014, at 4:57, Kasun Thennakoon wrote:
>
>  Thanks for your attention.  I'm more interested in GPS protocols and web
>> protocols.
>>
>
> If you’re into GPS, you may enjoy helping https://twistedmatrix.com/
> trac/ticket/3926 getting merged at last!
>
> Cheers,
>
> —h
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140118/94bd7146/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Jan 18 17:17:01 2014
From: glyph at twistedmatrix.com (GMail)
Date: Sat, 18 Jan 2014 16:17:01 -0800
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
Message-ID: <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>

Hi Jonathan,

On Jan 17, 2014, at 6:22 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  

I'd love to help, but a "rough composite" is hard to make guesses about, especially since you're talking about hard-to-predict memory-consumption behavior.

Can you attach a <http://sscce.org/> which is actually runnable, for example, with a canned list of input URLs (or better yet with an included web server so the URLs can be localhost and more predictable), so we can debug and diagnose a running program instead of ideas about the outline of one?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140118/510646bb/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jan 19 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1390115115.35.4007620590577802638@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140119/735e1403/attachment-0002.html>

From twisted-python at 2xlp.com  Sun Jan 19 14:27:05 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Sun, 19 Jan 2014 16:27:05 -0500
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
Message-ID: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>

Thanks for the offer to help.

I was hoping someone would see an apparent bug in the outline, so i wouldn't have to build a a SSCCE

unfortunately, that wasn't going to fly, so I built out a self-contained version of the issue 

Before sharing it, I added in some docs references to the example...

and then I noticed something peculiar, and seemed to have solved the problem !  

the issue was this:

1. I used twisted.internet.defer.DeferredSemaphore to set up a semaphore service
2. I queued tasks with `semaphoreService.run( to_thread_function )`
3. `to_thread_function` ran a configurable method through `threads.deferToThread`
4. the configurable method ran something in twisted.enterprise.adbapi.ConnectionPool's `runInteraction`

when copying docs, i realized that I was running `toThread` and then `runInteraction` , which uses it's own thread.  so i had threads spawning threads.

the base 'scaffold' for this daemon has been modified and patched since 2005 , so at some point i made an improvement and left some semi-functional legacy cruft in there.

i'm not sure of the specifics on how / why this manifests, but if I just use runInteraction and bypass using `deferToThread`, everything works out perfect.

if you're curious , i tossed the example online here

	https://github.com/jvanasco/twisted_gist_001

	`constants.py` has some toggles for playing with the return values of the various functions ( controls the base class and subclass )

	it also lets you toggle to use the broken functionality ( thread within a thread ) or what seems to work fine now


happy i seemed to have solved this myself.  still confused why the issue happened , but this fix ( only 1 thread ) seems to be fine and the more ideal approach








On Jan 18, 2014, at 7:17 PM, GMail wrote:

> Hi Jonathan,
> 
> On Jan 17, 2014, at 6:22 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
> 
>> the following is a rough composite of what is going on.  if anyone sees an obvious fix, i'd be greatly appreciative.  
> 
> I'd love to help, but a "rough composite" is hard to make guesses about, especially since you're talking about hard-to-predict memory-consumption behavior.
> 
> Can you attach a <http://sscce.org/> which is actually runnable, for example, with a canned list of input URLs (or better yet with an included web server so the URLs can be localhost and more predictable), so we can debug and diagnose a running program instead of ideas about the outline of one?
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140119/acb3c186/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 19 15:46:53 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 19 Jan 2014 14:46:53 -0800
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
 <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
Message-ID: <1F85B3B7-D717-4327-BD5D-F59C6CBFC175@twistedmatrix.com>

On Jan 19, 2014, at 1:27 PM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> Before sharing it, I added in some docs references to the example...
> 
> and then I noticed something peculiar, and seemed to have solved the problem !  

.... aaaaand that right there is a major reason we ask people for SSCCEs when they ask questions ;-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140119/8eb4ca05/attachment-0002.html>

From bob.novas at shinkuro.com  Sun Jan 19 16:34:51 2014
From: bob.novas at shinkuro.com (Bob Novas)
Date: Sun, 19 Jan 2014 18:34:51 -0500
Subject: [Twisted-Python] Question on log time stamp precision
Message-ID: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>

 

The log is very valuable to me for debugging, but I'd love to know how to
improve the precision of the time stamp.  My log shows stuff like this:

 

2014-01-19 12:44:37-0500 [-] 'SCPProtocol.ackNotReceived:
aa23827e20547c6aca71ecfcdeb486a99fe6cf314e1b84e687296821a8ca423a'

2014-01-19 12:44:37-0500 [-] "doSCPInitiation.noResponseReceived:
err=[Failure instance: Traceback (failure with no frames): <class
'communication.scp.scp.AckReceivingFailed'>: ACKNOTRECEIVED\n]"

2014-01-19 12:44:37-0500 [-]

 

>From calling twisted.python.log.msg( "stuff to log" )

 

How can I change the time in the logged message to get, say, milliseconds
resolution?

Thanks,
Bob 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140119/7cabefb6/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 6085 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140119/7cabefb6/attachment-0002.bin>

From dustin at v.igoro.us  Sun Jan 19 16:47:24 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 19 Jan 2014 18:47:24 -0500
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
Message-ID: <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>

>From what I can tell in a few old bugs and the API docs, the key is to
monkey-patch log.FileLogObserver.timeFormat.

Dustin



From exarkun at twistedmatrix.com  Sun Jan 19 18:54:27 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 01:54:27 -0000
Subject: [Twisted-Python] possible error in twisted app
In-Reply-To: <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
References: <8502E475-AD3F-45B5-9B74-469927658C59@2xlp.com>
 <E3B43404-DA9F-4C1F-BE8E-FC4BB90D5FC2@twistedmatrix.com>
 <A1CFF057-8BDE-4230-A8AC-FEDDF5A69161@2xlp.com>
Message-ID: <20140120015427.17936.1534192133.divmod.xquotient.171@top>

On 19 Jan, 09:27 pm, twisted-python at 2xlp.com wrote:
>Thanks for the offer to help.
>
>
>i'm not sure of the specifics on how / why this manifests, but if I 
>just use runInteraction and bypass using `deferToThread`, everything 
>works out perfect.

To intentionally slightly misinterpret you, the specifics might not be 
as interesting in this case as this general principle:

Twisted APIs are not safe to call except from the thread the reactor is 
running in.

There are exceptions, most notably `reactor.callFromThread`, but they 
are *extremely* rare.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jan 19 18:55:44 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 01:55:44 -0000
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
Message-ID: <20140120015544.17936.330118184.divmod.xquotient.173@top>

On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>> From what I can tell in a few old bugs and the API docs, the key is to
>monkey-patch log.FileLogObserver.timeFormat.

Or just politely set it on the instance of FileLogObserver your 
application creates so as to avoid global side-effects. :)

Jean-Paul



From dustin at v.igoro.us  Sun Jan 19 19:16:33 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 19 Jan 2014 21:16:33 -0500
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <20140120015544.17936.330118184.divmod.xquotient.173@top>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
 <20140120015544.17936.330118184.divmod.xquotient.173@top>
Message-ID: <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>

On Sun, Jan 19, 2014 at 8:55 PM,  <exarkun at twistedmatrix.com> wrote:
> On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>>>
>>> From what I can tell in a few old bugs and the API docs, the key is to
>>
>> monkey-patch log.FileLogObserver.timeFormat.
>
>
> Or just politely set it on the instance of FileLogObserver your application
> creates so as to avoid global side-effects. :)

Ah, which is returned from startLogging, so

--
from twisted.python import log

lo = log.startLogging(sys.stdout)
lo.formatTime = lambda when:
datetime.datetime.fromtimestamp(when).strftime("%H:%M:%S.%f")

log.msg("Hello!")
--

I'm not sure how you'd find that object under Twistd, though.

Dustin



From spuram at kiwiup.com  Mon Jan 20 02:15:37 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Mon, 20 Jan 2014 14:45:37 +0530
Subject: [Twisted-Python]  Better usage of Twisted on multi core processor
Message-ID: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>

Hi all,

I have a twisted TCP server to listens to client, processes requests, do
mysql database operations if needed (using adbapi Connection pool) and
return the result. Before deploying this in production, I want to know
right way to configure the server.

Since twisted is single threaded, how can I leverage multiple cores of my
production machine (which has 6 cores and 16 GB RAM) ?

One approach that I thought of was to start multiple instances of twisted
server on different ports. This would help in using the other cores as
well. What do you guys suggest ?

Thanks
-Sumanth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140120/d288c512/attachment-0002.html>

From _ at lvh.io  Mon Jan 20 07:30:39 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Mon, 20 Jan 2014 15:30:39 +0100
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
Message-ID: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>

Hi Sumanth,


The first answer by JP Calderone (exarkun) on the following stackoverflow
question may be of some assistance.

http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor

This answer is from 2012; the good news is that the good API that JP talks
about in his answer is now available in released Twisteds IIUC :)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140120/cd40cc83/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Jan 20 12:35:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Jan 2014 19:35:56 -0000
Subject: [Twisted-Python] Question on log time stamp precision
In-Reply-To: <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>
References: <027b01cf156f$0cedd4e0$26c97ea0$@shinkuro.com>
 <CAJtE5vSRXRH9yS5UTCt2pa-n4PwA8V9ssSjgfAMWLBGqQ=e-4w@mail.gmail.com>
 <20140120015544.17936.330118184.divmod.xquotient.173@top>
 <CAJtE5vS5sBY4afMUp7Yo8Y_b67EPknfvmX1-NztSs80yj3SfKA@mail.gmail.com>
Message-ID: <20140120193556.17936.628550854.divmod.xquotient.175@top>

On 02:16 am, dustin at v.igoro.us wrote:
>On Sun, Jan 19, 2014 at 8:55 PM,  <exarkun at twistedmatrix.com> wrote:
>>On 19 Jan, 11:47 pm, dustin at v.igoro.us wrote:
>>>>
>>>> From what I can tell in a few old bugs and the API docs, the key is 
>>>>to
>>>
>>>monkey-patch log.FileLogObserver.timeFormat.
>>
>>
>>Or just politely set it on the instance of FileLogObserver your 
>>application
>>creates so as to avoid global side-effects. :)
>
>Ah, which is returned from startLogging, so
>
>--
>from twisted.python import log
>
>lo = log.startLogging(sys.stdout)
>lo.formatTime = lambda when:
>datetime.datetime.fromtimestamp(when).strftime("%H:%M:%S.%f")
>
>log.msg("Hello!")
>--
>
>I'm not sure how you'd find that object under Twistd, though.

If you have a tac file, set it yourself.  If you're using a twistd 
plugin, use the `--logger` option:

https://twistedmatrix.com/documents/current/core/howto/application.html#auto5

Jean-Paul



From exarkun at twistedmatrix.com  Tue Jan 21 05:22:41 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 12:22:41 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
Message-ID: <20140121122241.17936.754080051.divmod.xquotient.195@top>

Hello all,

I'm happy to announce the third alpha leading up to the release of 
pyOpenSSL 0.14.

pyOpenSSL is the library Twisted uses for all of its SSL functionality.

pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL 
0.13.  Any and all testing is greatly appreciated.

You can read more about the changes and download the source tarball from 
the github release page:

  https://github.com/pyca/pyopenssl/releases/tag/0.14a3

Feel free to leave feedback here, on a github issue, or on the pyOpenSSL 
mailing list.

Thanks!
Jean-Paul



From _ at lvh.io  Tue Jan 21 05:44:18 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 13:44:18 +0100
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121122241.17936.754080051.divmod.xquotient.195@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
Message-ID: <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>

Hi JP,


FWIW, clarent appears to work fine against twisted and pyopenssl trunk. Is
there a significant difference between the alpha and trunk (so that I
should also test against the alpha specifically)?

merlyn blows up, but that appears to be only because Axiom uses unsignedID,
which has been removed from twisted apparently :)

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/effa721c/attachment-0002.html>

From jon at multani.info  Tue Jan 21 06:25:36 2014
From: jon at multani.info (Jonathan Ballet)
Date: Tue, 21 Jan 2014 21:25:36 +0800
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121122241.17936.754080051.divmod.xquotient.195@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
Message-ID: <20140121132534.GA27733@danio.home>

On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.com wrote:
> Hello all,
>
> I'm happy to announce the third alpha leading up to the release of
> pyOpenSSL 0.14.
>
> pyOpenSSL is the library Twisted uses for all of its SSL functionality.
>
> pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
> 0.13.  Any and all testing is greatly appreciated.

I'm glad to see the new documentation will finally show up!

 Jonathan



From exarkun at twistedmatrix.com  Tue Jan 21 06:26:52 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 13:26:52 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
Message-ID: <20140121132652.17936.1265870595.divmod.xquotient.200@top>

On 12:44 pm, _ at lvh.io wrote:
>Hi JP,
>
>
>FWIW, clarent appears to work fine against twisted and pyopenssl trunk. 
>Is
>there a significant difference between the alpha and trunk (so that I
>should also test against the alpha specifically)?
>
>merlyn blows up, but that appears to be only because Axiom uses 
>unsignedID,
>which has been removed from twisted apparently :)

Hi Laurens,

Right now pyOpenSSL trunk and the release branch only differ in the 
version number they report.  There are some important differences 
between a2 and a3 though (so if you tested trunk before I announced a3 
you might not have tested the latest code - of course, I hope those 
changes only fixed things, not introduced any new bugs ;).

Thanks!
Jean-Paul



From _ at lvh.io  Tue Jan 21 06:30:12 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 14:30:12 +0100
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121132652.17936.1265870595.divmod.xquotient.200@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <CAE_Hg6ap7SL1_9haHmf=WScPadKsiBJEyo3Z9msct9tXhk_ZEA@mail.gmail.com>
 <20140121132652.17936.1265870595.divmod.xquotient.200@top>
Message-ID: <CAE_Hg6YNgAvjDxvjbT+j8L7c0b6MTu6JTb_tinGs67sSVaqFCA@mail.gmail.com>

On Tue, Jan 21, 2014 at 2:26 PM, <exarkun at twistedmatrix.com> wrote:

> Hi Laurens,
>
> Right now pyOpenSSL trunk and the release branch only differ in the
> version number they report.  There are some important differences between
> a2 and a3 though (so if you tested trunk before I announced a3 you might
> not have tested the latest code - of course, I hope those changes only
> fixed things, not introduced any new bugs ;).


Yep, I've been testing against trunk pretty much continuously over the last
few days, so I think we're good.

Anyway, all systems green AFAICT, at least no PyOpenSSL bugs..

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/1dc9b122/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jan 21 06:32:43 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jan 2014 13:32:43 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121132534.GA27733@danio.home>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
Message-ID: <20140121133243.17936.1954928131.divmod.xquotient.202@top>

On 01:25 pm, jon at multani.info wrote:
>On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>Hello all,
>>
>>I'm happy to announce the third alpha leading up to the release of
>>pyOpenSSL 0.14.
>>
>>pyOpenSSL is the library Twisted uses for all of its SSL 
>>functionality.
>>
>>pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
>>0.13.  Any and all testing is greatly appreciated.
>
>I'm glad to see the new documentation will finally show up!

Indeed. :)  Sorry about the long delay in publishing this and thank you 
for doing the conversion. :)

Jean-Paul



From spuram at kiwiup.com  Tue Jan 21 07:21:51 2014
From: spuram at kiwiup.com (Sumanth Puram)
Date: Tue, 21 Jan 2014 19:51:51 +0530
Subject: [Twisted-Python] Better usage of Twisted on multi core processor
In-Reply-To: <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
References: <CAEEwdoKR8EuCKV8rGNzXDyzoCwQHj86xBu8_u1WvUJTAXNnmpw@mail.gmail.com>
 <CAE_Hg6ZMdDKDdNbnqYMXBiPbgSBcP49_X0-Nbf0mcwtLcMG8Rw@mail.gmail.com>
Message-ID: <CAEEwdoLRxg1Hj+O0KrD19Vej+E+ZvPdAgtkT55-Png2kZJpW7A@mail.gmail.com>

Nice.
Thanks for the info.
On Jan 20, 2014 8:02 PM, "Laurens Van Houtven" <_ at lvh.io> wrote:

> Hi Sumanth,
>
>
> The first answer by JP Calderone (exarkun) on the following stackoverflow
> question may be of some assistance.
>
>
> http://stackoverflow.com/questions/10077745/twistedweb-on-multicore-multiprocessor
>
> This answer is from 2012; the good news is that the good API that JP talks
> about in his answer is now available in released Twisteds IIUC :)
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/a145957e/attachment-0002.html>

From toph_ut at yahoo.de  Tue Jan 21 08:14:10 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Tue, 21 Jan 2014 15:14:10 +0000 (GMT)
Subject: [Twisted-Python] Twisted and symlink
Message-ID: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>

Hello everyone,

i was trying to port Python, Twisted, etc.. to VxWorks.
My Problem now is: twisted/python/lockfile.py (import symlink).
VxWorks doenst support symlink.

My Questions are: 
* For what is the symlink used?
* Can i disable them?
* Is there an old version without symlink?

Is there any other alternative or solution for the symlink?

Best regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/09957340/attachment-0002.html>

From _ at lvh.io  Tue Jan 21 12:41:08 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 21 Jan 2014 20:41:08 +0100
Subject: [Twisted-Python] Twisted and symlink
In-Reply-To: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>
References: <1390317250.4303.YahooMailNeo@web171705.mail.ir2.yahoo.com>
Message-ID: <CAE_Hg6bcjcmw8UiMt7pP0TLiNr6UOYq7TJngY58GwDgXy4ao3A@mail.gmail.com>

Hi Toph,

On Tue, Jan 21, 2014 at 4:14 PM, Toph Bei Fong <toph_ut at yahoo.de> wrote:

> i was trying to port Python, Twisted, etc.. to VxWorks.
>

Ooh, exciting :)


>  My Problem now is: twisted/python/lockfile.py (import symlink).
> VxWorks doenst support symlink.
>
> My Questions are:
> * For what is the symlink used?
>

Symlinks are used for lockfiles.


>  * Can i disable them?
>

Well, maybe. Is there some way to create an atomic filesystem lock on
VxWorks?


> * Is there an old version without symlink?
>

Probably not a reasonable version, no.

Is there any other alternative or solution for the symlink?
>

Sure. That module implements an alternative for Windows. I would guess that
you would need one for VxWorks as well.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/eb9418d3/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jan 21 14:45:32 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jan 2014 13:45:32 -0800
Subject: [Twisted-Python] PLEASE TEST: the new pyOpenSSL alpha release is a
	major change,
	and if you use TLS at all with Twisted you should test it
Message-ID: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>

Hi everyone,

Since this particular detail was in the middle of Jean-Paul's release announcement, I feel like it's important to draw attention to it.

The new pyOpenSSL v0.14 is a substantial rewrite of all of pyOpenSSL's bindings to OpenSSL: while this rewrite should be a vast improvement, because eliminates lots of error-prone hand-written C code, replacing it with much smaller, much safer declarative C bindings via cffi, it also means that things are different now.

Different means “possibly broken” so please test any Twisted applications that use TLS with this pre-release.

Sorry for all the bold text and capital letters, but this is both a big change and also a change to a particularly security-sensitive area of the Twisted stack.  If there were ever a change that you should really test before it's marked as “final release”, this is it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140121/a4f149fd/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140121/a4f149fd/attachment-0002.bin>

From haggardii at gmail.com  Tue Jan 21 15:56:06 2014
From: haggardii at gmail.com (Matt Haggard)
Date: Tue, 21 Jan 2014 15:56:06 -0700
Subject: [Twisted-Python] PLEASE TEST: the new pyOpenSSL alpha release
 is a major change, and if you use TLS at all with Twisted you should test it
In-Reply-To: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>
References: <2DD656DF-649D-40BB-97F1-891FCFDF984A@twistedmatrix.com>
Message-ID: <CAL+xXwNhvoByxxUeQE_brVecoDAdLSS5KbgoSNFHdFnz+DkMzw@mail.gmail.com>

Okay, glyph, since you're shouting :)

When installing, I ran into not having libffi-dev installed (ubuntu).
It wasn't hard to overcome -- just a new dependency I don't typically
install.  (I'm not even gonna try on OS X 10.6.8)

I ran the functional tests of some of our stuff here at work with the
new version and didn't have any failures/changes.  We don't do
anything beyond listenSSL and connectSSL though.

Thanks for doing this.

Matt

On Tue, Jan 21, 2014 at 2:45 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> Hi everyone,
>
> Since this particular detail was in the middle of Jean-Paul's release
> announcement, I feel like it's important to draw attention to it.
>
> The new pyOpenSSL v0.14 is a substantial rewrite of all of pyOpenSSL's
> bindings to OpenSSL: while this rewrite should be a vast improvement,
> because eliminates lots of error-prone hand-written C code, replacing it
> with much smaller, much safer declarative C bindings via cffi, it also means
> that things are different now.
>
> Different means “possibly broken” so please test any Twisted applications
> that use TLS with this pre-release.
>
> Sorry for all the bold text and capital letters, but this is both a big
> change and also a change to a particularly security-sensitive area of the
> Twisted stack.  If there were ever a change that you should really test
> before it's marked as “final release”, this is it.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From adi at roiban.ro  Wed Jan 22 05:15:27 2014
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Jan 2014 14:15:27 +0200
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
Message-ID: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>

Hi,

I have checked twisted.web.http.HTTPChannel and I see that it limits the
headers by number and not by size.

https://github.com/twisted/twisted/blob/trunk/twisted/web/http.py#L1596

Maybe I don't see the big picture, but wouldn't this allow the server to
load in memory a request with a single header of 1G ?

Other than changing the HTTPChannel.lineReceived() implementation, is there
a way to limit header size?

I did a quick test and the server accepted an 1M cookie value without any
problem.

curl --cookie cookies.txt http://localhost:8080
cookies.txt in in this format https://gist.github.com/adiroiban/8557725

It this a feature or a bug?

Many thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140122/c1050e15/attachment-0002.html>

From _ at lvh.io  Wed Jan 22 05:48:28 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 22 Jan 2014 13:48:28 +0100
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
Message-ID: <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>

Hi Adi,

I'm assuming this is somewhat related to
http://homakov.blogspot.be/2014/01/cookie-bomb-or-lets-break-internet.html:)

I don't know of any mechanisms to limit cookie size. It's probably a good
feature to have, and perhaps even enable by default.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140122/d4912a54/attachment-0002.html>

From adi at roiban.ro  Wed Jan 22 06:37:06 2014
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Jan 2014 15:37:06 +0200
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
 <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
Message-ID: <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>

Thanks!

This is somehow related to ticket https://twistedmatrix.com/trac/ticket/288 ,
where things are complicated.

I am worried about malicious HTTP clients sending huge data which ends in
memory.

My previous example is bad since curl will truncate cookies at 8K.

I checked the code deep and twisted.protocols.basic.LineRecever has a
default line size of  16384.
Together with the default headers count, this gives a default limit of
about 7.8MB.

I have created a ticket and we can continue there:
https://twistedmatrix.com/trac/ticket/6927

Thanks!

On 22 January 2014 14:48, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Adi,
>
> I'm assuming this is somewhat related to
> http://homakov.blogspot.be/2014/01/cookie-bomb-or-lets-break-internet.html:)
>
> I don't know of any mechanisms to limit cookie size. It's probably a good
> feature to have, and perhaps even enable by default.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140122/b4c8065f/attachment-0002.html>

From _ at lvh.io  Wed Jan 22 06:46:33 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 22 Jan 2014 14:46:33 +0100
Subject: [Twisted-Python] Limit headers by size and not by number in
	twisted.web
In-Reply-To: <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>
References: <CAFycZ9cjHs5eKkS=5SjDeOSRjanzZXXoR1-bhg0f5bG9D9p-fw@mail.gmail.com>
 <CAE_Hg6bJpm1k4A+JoO1Dp1WAyBsZ9X4M8NxfK3KVy2wmPNgmHA@mail.gmail.com>
 <CAFycZ9c5mPZEpA2AwL_H_DrhnUtGd341JTMxrO_oiCvUN4j=5Q@mail.gmail.com>
Message-ID: <CAE_Hg6ZU=6eQFfHCubaz+ZkNEjwu2r7yM17A=4RTESvbGBTnbQ@mail.gmail.com>

Hi Adi,

Awesome! Thank you for your research & contribution.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140122/823c7f8c/attachment-0002.html>

From adi at roiban.ro  Thu Jan 23 07:03:37 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 23 Jan 2014 16:03:37 +0200
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <20140121133243.17936.1954928131.divmod.xquotient.202@top>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
 <20140121133243.17936.1954928131.divmod.xquotient.202@top>
Message-ID: <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>

Thanks for working on this!

Do you know if there are binary eggs for Windows Python 2.7 32bit for
criptography and cffi ?
This would make testing easier for people like me who don't have a Windows
development environment but have access to a default installation of
Windows.
A package containing OpenSSL as in previous pyOpenSSL distributions for
Windows would be of  great help.

I noticed that the new API no longer accepts unicode strings. As long as it
does not touches the OS filesystem this should be fine.

I checked the tests for Context.load_verify_locations() and I see that
there is no test for Unicode paths.
Linux filesystem access will accept any file name and works with UTF-8
encoded byte strings. I have tested this and it works.

But I remember that on Windows for paths containing unicode chars you
always need to pass the path as Unicode.
Maybe this is not a problem since filesystem access is handled by OpenSSL
and not by Python

--------

No problems with HTTPS support on Twisted 12.2, but I have only basic usage.

I have tested the new pyOpenSSL with my messy Implicit and Explicit FTPS
implementation and there was a single major problem with
Context.set_info_callback..

I have reported all problems in GitHub.

Thanks!


On 21 January 2014 15:32, <exarkun at twistedmatrix.com> wrote:

> On 01:25 pm, jon at multani.info wrote:
>
>> On Tue, Jan 21, 2014 at 12:22:41PM -0000, exarkun at twistedmatrix.comwrote:
>>
>>> Hello all,
>>>
>>> I'm happy to announce the third alpha leading up to the release of
>>> pyOpenSSL 0.14.
>>>
>>> pyOpenSSL is the library Twisted uses for all of its SSL functionality.
>>>
>>> pyOpenSSL 0.14 is bringing some major changes compared to pyOpenSSL
>>> 0.13.  Any and all testing is greatly appreciated.
>>>
>>
>> I'm glad to see the new documentation will finally show up!
>>
>
> Indeed. :)  Sorry about the long delay in publishing this and thank you
> for doing the conversion. :)
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140123/87057341/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jan 23 08:08:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Jan 2014 15:08:37 -0000
Subject: [Twisted-Python] Announcing pyOpenSSL 0.14a3
In-Reply-To: <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>
References: <20140121122241.17936.754080051.divmod.xquotient.195@top>
 <20140121132534.GA27733@danio.home>
 <20140121133243.17936.1954928131.divmod.xquotient.202@top>
 <CAFycZ9e7=NSpZi4AsOC5XqBW=JPofc_wgPysA6n_gQjNbxkWVA@mail.gmail.com>
Message-ID: <20140123150837.6683.1776215513.divmod.xquotient.2@top>

On 02:03 pm, adi at roiban.ro wrote:
>Thanks for working on this!

Thanks for the feedback!
>Do you know if there are binary eggs for Windows Python 2.7 32bit for
>criptography and cffi ?

I've asked the cryptography team about this.  Apparently not yet, but I 
reminded them Windows users would have a pretty hard time benefiting 
from any of this work until there is a binary Windows distribution.

Thanks for the bug reports.  I'll respond to those in the issue tracker 
in due time. :)

Jean-Paul



From andrewfr_ice at yahoo.com  Sat Jan 25 11:42:02 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 25 Jan 2014 10:42:02 -0800 (PST)
Subject: [Twisted-Python] Protocol for socket.io
Message-ID: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi:

I searched the archive but couldn't find an answer so here goes:
I am also new to all this

I need to write a server that receives socket.io requests. I see Twisted has support for WebSocket. I also see that the Tornado2 socket.io is used alongside Twisted (I didn't know that this was possible). I read that socket.io uses WebSocket whenever possible. I have just started to look at the js implementation of socket.io and the specification. I am trying to gauge how hard is it to write a socket.io protocol/handler. Am I barking up the wrong tree? Or do I really need to learn Tornado?

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140125/c2d6d705/attachment-0002.html>

From _ at lvh.io  Sat Jan 25 11:52:09 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 25 Jan 2014 19:52:09 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>

Hi Andrew,


No idea about socket.io, but if you're free to pick whatever you want, and
you just want "websockets, damnit!" then sockjs is actually better, and has
excellent twisted support.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140125/41838b98/attachment-0002.html>

From dustin at v.igoro.us  Sat Jan 25 13:21:34 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 25 Jan 2014 15:21:34 -0500
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>

As I understand it, socket.io is a browser-side library that uses any
of a number of technologies, depending on its environment, to
communicate with the server.  SSE, Websockets, and long polling are
all on the list.  Last I looked, though, I didn't see any support for
the negotiation of which of these protocols to use with a Twisted
server.

If that's changed, I'd certainly be interested!

Dustin

On Sat, Jan 25, 2014 at 1:42 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> Hi:
>
> I searched the archive but couldn't find an answer so here goes:
> I am also new to all this
>
> I need to write a server that receives socket.io requests. I see Twisted has
> support for WebSocket. I also see that the Tornado2 socket.io is used
> alongside Twisted (I didn't know that this was possible). I read that
> socket.io uses WebSocket whenever possible. I have just started to look at
> the js implementation of socket.io and the specification. I am trying to
> gauge how hard is it to write a socket.io protocol/handler. Am I barking up
> the wrong tree? Or do I really need to learn Tornado?
>
> Cheers,
> Andrew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From akersof at gmail.com  Sat Jan 25 14:17:05 2014
From: akersof at gmail.com (Sofiane Akermoun)
Date: Sat, 25 Jan 2014 22:17:05 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
Message-ID: <CAN0_x-LxoF1ztKhS0fn_O=QMqWUA1rJMN-aNgfZHvoLer4_xow@mail.gmail.com>

Hello,
I looked for something that fit your needs few days ago and i came
across txsockjs and i create a server based on twisted and the
https://pypi.python.org/pypi/txsockjs module and i made it in few
minutes. really good stuff.
Of course the client part have to be written in javascript with sockjs
object/api.
If you are sure that you just need websocket and websocket only, there
are also some pure "websocket" implementation in twisted, or you can
probably write your own following the RFC.

For you information there is a kind of flame war on socket.io vs
sockjs, i am not sure which one won the fight, but from my read, and
only from what i have read, sockjs is more promissing and more
supported and more actively maintained.

But as i said and based on my experience and preference only, i did a
lot of research about what i could use to write web app with websocket
support + ajax/comet/long polling technologies and i choose txsockjs.

regards.

Sofiane Akermoun

2014-01-25 Dustin J. Mitchell <dustin at v.igoro.us>:
> As I understand it, socket.io is a browser-side library that uses any
> of a number of technologies, depending on its environment, to
> communicate with the server.  SSE, Websockets, and long polling are
> all on the list.  Last I looked, though, I didn't see any support for
> the negotiation of which of these protocols to use with a Twisted
> server.
>
> If that's changed, I'd certainly be interested!
>
> Dustin
>
> On Sat, Jan 25, 2014 at 1:42 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>> Hi:
>>
>> I searched the archive but couldn't find an answer so here goes:
>> I am also new to all this
>>
>> I need to write a server that receives socket.io requests. I see Twisted has
>> support for WebSocket. I also see that the Tornado2 socket.io is used
>> alongside Twisted (I didn't know that this was possible). I read that
>> socket.io uses WebSocket whenever possible. I have just started to look at
>> the js implementation of socket.io and the specification. I am trying to
>> gauge how hard is it to write a socket.io protocol/handler. Am I barking up
>> the wrong tree? Or do I really need to learn Tornado?
>>
>> Cheers,
>> Andrew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Sofiane AKERMOUN
akersof at gmail.com



From trac at twistedmatrix.com  Sun Jan 26 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Jan 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1390719915.5.2440699980525461497@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/3df32628/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 26 02:46:44 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Jan 2014 01:46:44 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
Message-ID: <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>


On Jan 25, 2014, at 12:21 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> As I understand it, socket.io is a browser-side library that uses any
> of a number of technologies, depending on its environment, to
> communicate with the server.  SSE, Websockets, and long polling are
> all on the list.  Last I looked, though, I didn't see any support for
> the negotiation of which of these protocols to use with a Twisted
> server.
> 
> If that's changed, I'd certainly be interested!

It would be great if someone built a package to do this (more interop is always better), but I think interest has generally fizzled on Socket.IO implementations in the past because SockJS does pretty much exactly the same thing, and as Laurens said, our friends over at Desert Bus for Hope maintain great Twisted support for it <https://github.com/DesertBus/sockjs-twisted> <https://pypi.python.org/pypi/txsockjs>.

It even has endpoints support, including a string parser!  <https://github.com/DesertBus/sockjs-twisted#endpoints>.

Socket.IO is just a negotiation protocol for deciding whether to use websockets though.  If you started with Autobahn I can't imagine it would be more than a day or two of work to implement.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/b6fd5d78/attachment-0002.html>

From _ at lvh.io  Sun Jan 26 02:53:47 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 10:53:47 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
Message-ID: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>

On Sun, Jan 26, 2014 at 10:46 AM, Glyph <glyph at twistedmatrix.com> wrote:

> It would be great if someone built a package to do this (more interop is
> always better), but I think interest has generally fizzled on Socket.IO
> implementations in the past because SockJS does pretty much exactly the
> same thing, and as Laurens said, our friends over at Desert Bus for Hope
> maintain great Twisted support for it <
> https://github.com/DesertBus/sockjs-twisted> <
> https://pypi.python.org/pypi/txsockjs>.
>

socket.io adds a few things like "RPC support" and "pubsub", both those are
things that should be spoken over some transport, not part of some
transport, and are trivial to layer over an existing browser transport.

I like SockJS because it's literally just "websockets damnit!". Also, it
doesn't use Flash, which has excellent benefits including no gnarly XML
files to server and not having to wait three seconds to figure out if a
connection works or not (yes, really).

Also: protip, speak SockJS over TLS exclusively. It's not even a security
thing (except yes, that too), but if you do end up speaking websockets
you'd be amazed how much Enterprise Quality Web Middleware Server Hardware
Firewall(TM) screws up websocket connections. TLS, OTOH, they just leave be.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/0242213d/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jan 26 02:57:29 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Jan 2014 01:57:29 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
Message-ID: <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>


On Jan 26, 2014, at 1:53 AM, Laurens Van Houtven <_ at lvh.io> wrote:

> you'd be amazed how much Enterprise Quality Web Middleware Server Hardware Firewall(TM) screws up websocket connections

Having had the life-transforming experience of supporting customers using Government-Quality Web Middleware Server Hardware Firewall™, in a pre-websockets world, with a two-way web application...

No, no I probably wouldn't.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/5642fe3f/attachment-0002.html>

From _ at lvh.io  Sun Jan 26 03:07:01 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 11:07:01 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <9CC0D0E2-D207-4A92-89E9-C2AEA7BFD1F0@twistedmatrix.com>
Message-ID: <CAE_Hg6ZQJHqphAMpHzejjk2uCruVNUpees3O2UKtF3TTmK+k=Q@mail.gmail.com>

On Sun, Jan 26, 2014 at 10:57 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
> Having had the life-transforming experience of supporting customers using
> *Government-*Quality Web Middleware Server Hardware Firewall™, in a
> pre-websockets world, with a two-way web application...
>
> No, no I probably wouldn't.
>

Hah; okay, fair enough: that was just a generic warning to those of us who
have not had to stare into the Black Goat of the Rack with a Thousand
Permanently Quiet Sockets...

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/7d37ec27/attachment-0002.html>

From adi at roiban.ro  Sun Jan 26 03:13:55 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Jan 2014 12:13:55 +0200
Subject: [Twisted-Python] twisted.web secured session cookies and multiple
	sites on same host
Message-ID: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>

Hi,

I am looking for the followings:
* Force twisted.web to set session cookie as secured when HTTPS is used.
* Allow 2 separate twisted.web Sites to run on same host/IP but with
different sessions.

I have checked the current code for getSession() [1] but i can see that
session cookie is harcoded and I don't know how to use self.sitepath .

I tried to search the code for sitepath, but I only got this comment, which
I things is used to suppport some some sort of load balancing / high
availability.

# Sitepath is used to determine cookie names between distributed
# servers and disconnected sites.

Can this be done with current code?

If not, I am happy to submit a ticket and a patch.

To solve my problems I rewrote getSession to not use harcoded session name
and to check for self.isSecure before setting a new session cookie.

Many thanks!

[1] https://github.com/twisted/twisted/blob/trunk/twisted/web/server.py#L384
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/e433fe8c/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sun Jan 26 04:06:22 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 26 Jan 2014 03:06:22 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>

>socket.io adds a few things like "RPC support" and "pubsub", ...

Do you have pointers for that?

I can see socket.io supports "topic based pubsub" like functionality via "rooms" : https://github.com/LearnBoost/socket.io/wiki/Rooms

What about RPC?

/Tobias




From _ at lvh.io  Sun Jan 26 04:16:43 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sun, 26 Jan 2014 12:16:43 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>

Hi Tobias,


Hm. I can't find it in the current version. Either I am misremembering, or
they expect you to use the pubsub thing as an RPC mechanism somehow (i.e.
the room name is the procedure name).

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140126/f0e53baf/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sun Jan 26 04:42:39 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 26 Jan 2014 03:42:39 -0800
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAJtE5vTm+9uwaF6Sbzm0k8myVT4j+LD8M77Uu_T43FjXbTCwPg@mail.gmail.com>
 <F4B17EE2-1B50-427D-AB26-E594E7843230@twistedmatrix.com>
 <CAE_Hg6bT_bsaPPZkyENetcomP08N99MQna=n7MPyasmvKvyE6w@mail.gmail.com>
 <634914A010D0B943A035D226786325D4446C13B461@EXVMBX020-12.exch020.serverdata.net>
 <CAE_Hg6aYrwW9hCUhxn1_hHGYzBVsEuL+BH_2cBLJ09avZx15Wg@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4446C13B462@EXVMBX020-12.exch020.serverdata.net>

Hi Laurens,

>Hm. I can't find it in the current version. Either I am misremembering, or they expect you to use the pubsub thing as an RPC mechanism somehow (i.e. the room name is the procedure name).

I see. Using PubSub to implement RPC seems hackish at best, if it works at all. E.g. how to make sure only 1 implementing endpoint subscribes to the Room (to receive procedure calls), how to direct call results to calling clients (since only the caller should receive his result), etc etc

Unsurprisingly (probably), I'd like to point to WAMP: http://wamp.ws/

Which was designed from the ground up for exactly this: 1 protocol that covers _both_ RPC and PubSub, and runs over WebSocket.

Autobahn|Python implements both WebSocket and WAMP (https://github.com/tavendo/AutobahnPython)

End of marketing message;)

/Tobias



From flaviogrossi at gmail.com  Mon Jan 27 01:32:28 2014
From: flaviogrossi at gmail.com (Flavio Grossi)
Date: Mon, 27 Jan 2014 08:32:28 +0000 (UTC)
Subject: [Twisted-Python] Protocol for socket.io
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
Message-ID: <loom.20140127T092501-425@post.gmane.org>

Laurens Van Houtven <_ <at> lvh.io> writes:

> 
> 
> Hi Andrew,
> No idea about socket.io, but if you're free to pick whatever you want, and 
you just want "websockets, damnit!" then sockjs is actually better, and has 
excellent twisted support.hthlvh



Agreed on using sockjs.

There are at least two sockjs server implementation using twisted that i know 
of: sockjs-twisted [1] and (shameless plug) sockjs-cyclone [2]

As per rpc and pubsub support i have personally used wamp [3] and websocket-
multiplex [4] with great success.

Hope this helps,

Flavio


[1] https://github.com/DesertBus/sockjs-twisted
[2] https://github.com/flaviogrossi/sockjs-cyclone
[3] http://wamp.ws/
[4] https://github.com/sockjs/websocket-multiplex





From glyph at twistedmatrix.com  Tue Jan 28 12:06:53 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Jan 2014 11:06:53 -0800
Subject: [Twisted-Python] twisted.web secured session cookies and
	multiple sites on same host
In-Reply-To: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
References: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
Message-ID: <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>


On Jan 26, 2014, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:

> Can this be done with current code?
> 
> If not, I am happy to submit a ticket and a patch.

Even if it's currently possible to achieve, it seems to me that there ought to be an easy way to get this (much more secure) behavior by default.  I'd appreciate it if you'd contribute a patch.

Thanks!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140128/3a1a0797/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140128/3a1a0797/attachment-0002.bin>

From adi at roiban.ro  Tue Jan 28 13:56:46 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 28 Jan 2014 22:56:46 +0200
Subject: [Twisted-Python] twisted.web secured session cookies and
 multiple sites on same host
In-Reply-To: <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>
References: <CAFycZ9cnq6mnkHH1BZ8GFCKWUguf==AzYjPt0aKXN9022USbRg@mail.gmail.com>
 <24FE0BD9-0F76-403D-B9FA-7E5BD617586A@twistedmatrix.com>
Message-ID: <CAFycZ9cmiNvumjsnagbQ4-dcfgiwzZCupdt+gOKbOdUcocQx0Q@mail.gmail.com>

On 28 January 2014 21:06, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> On Jan 26, 2014, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Can this be done with current code?
>
> If not, I am happy to submit a ticket and a patch.
>
>
> Even if it's currently *possible* to achieve, it seems to me that there
> ought to be an easy way to get this (much more secure) behavior by default.
>  I'd appreciate it if you'd contribute a patch.
>
> Thanks!
>
> -glyph
>

Done. Tickest for review are here

 https://twistedmatrix.com/trac/ticket/6932
 https://twistedmatrix.com/trac/ticket/6933

Thanks Jean Paul for your guidance, I fully agree that each ticket should
solve a single problem.

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140128/285409d2/attachment-0002.html>

From _ at lvh.io  Wed Jan 29 03:57:20 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 29 Jan 2014 11:57:20 +0100
Subject: [Twisted-Python] Python Events Calendar (Now with Twitter feed)
Message-ID: <CAE_Hg6aKsKF15qaFZ27cTYRJEY4=gy4v5CycXVQgY+dw1=oF0w@mail.gmail.com>

Hi Twisters,


Marc-Andre Lemburg from the PSF has been taking care of a Python events
calendar for a while. It now has a twitter feed making it easier to find
new events.

If you're doing any Python-related events, such as of course Twisted
sprints, or maybe Python user group meetups, please don't hesitate to
contact the PSF to get your event added.

M.-A.'s e-mail as been forwarded below.

hth
lvh


---------- Forwarded message ----------
From: M.-A. Lemburg <mal at python.org>
Date: Wed, Jan 29, 2014 at 11:20 AM
Subject: [psf-members-ann] ANN: Python Events Calendar - Now with Twitter
feed
To: PSF Members Announcements <psf-members-announce at python.org>


[Please help spread the word by forwarding to other relevant mailing lists,
 user groups, etc. world-wide; thanks :-)]

________________________________________________________________________
ANNOUNCING

           Python Events Calendars - Now with Twitter feed

           maintained by the Python Software Foundation (PSF)
                    and a group of volunteers

________________________________________________________________________
INTRODUCTION

As some of you may know, the PSF has put together a team of volunteers
who are maintaining a central Python events calendar. We currently have
two calendars in place:

 * Python Events Calendar - meant for conferences and larger gatherings
   focusing on Python or a related technology (in whole or in part)

 * Python User Group Calendar - meant for user group events and other
   smaller local events

The calendars are displayed on http://pycon.org/ and in a smaller
version in the sidebar of the http://python.org/ website.

You can subscribe to the calendars using iCal and RSS feeds and
also embed the calendar widgets on your sites. Please see our wiki
page for details:

    https://wiki.python.org/moin/PythonEventsCalendar

The calendars are open to the world-wide Python community, so you
can have local user group events, as well as regional and international
conference events added to the calendars.

________________________________________________________________________
NEWS

We have now created a Twitter feed for the calendars, which you can
follow to get updates on all newly added events:

    https://twitter.com/pythonevents

The tweets come with links to the event listings, which you can
add to your own Google calendars with a single click.

________________________________________________________________________
ADDING EVENTS

If you want to have entries added to those calendars, please write
to events at python.org and include the following information:

 * Name of the event
 * Type of the event (conference, bar camp, user group, etc)
 * Focus on Python and approximate size
 * URL
 * Location and country
 * Date and time (if relevant)

For recurring events, please also include a description of the
recurrence in a way that's compatible and supported by Google
calendars.

________________________________________________________________________
MORE INFORMATION

More information on the calendars, the URLs, feed links, IDs, embedding,
etc. is available on the wiki:

    https://wiki.python.org/moin/PythonEventsCalendar

Enjoy,
--
Marc-Andre Lemburg
Director
Python Software Foundation
http://www.python.org/psf/
_______________________________________________
psf-members-announce mailing list
psf-members-announce at python.org
https://mail.python.org/mailman/listinfo/psf-members-announce
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140129/1454f067/attachment-0002.html>

From andrewfr_ice at yahoo.com  Wed Jan 29 14:46:44 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 29 Jan 2014 13:46:44 -0800 (PST)
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
Message-ID: <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi Laurens and Folks:

Thanks for all the replies. I'll try desert-sockjs first. Looking through the documentation, it is not clear to me how I would handle socket.io events (unfortunately I am new to socket.io). There doesn't seem to be an event decorator like Socket.io for Tornadio2. I am looking the documentation describing what an event looks like at the HTTP level.

Cheers,
Andrew



On Saturday, January 25, 2014 1:52 PM, Laurens Van Houtven <_ at lvh.io> wrote:
 
Hi Andrew,


No idea about socket.io, but if you're free to pick whatever you want, and you just want "websockets, damnit!" then sockjs is actually better, and has excellent twisted support.

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140129/8eaca10f/attachment-0002.html>

From _ at lvh.io  Wed Jan 29 15:03:40 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 29 Jan 2014 23:03:40 +0100
Subject: [Twisted-Python] Protocol for socket.io
In-Reply-To: <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1390675322.65905.YahooMailNeo@web140704.mail.bf1.yahoo.com>
 <CAE_Hg6b1m9cwtCOmXerDqBvNmKFwHGRoygNoCTn+Yj2g606QuQ@mail.gmail.com>
 <1391032004.37753.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6YnLKRYGoPUYmh84xzsk+Lu2ASoYDhVu2qKa8fepthUPg@mail.gmail.com>

Hi Andrew,


SockJS is a different project from socket.io; it just tries to solve a
similar problem (WebSockets everywhere).

If you literally need socket.io and not a similar thing in the same problem
space, then SockJS will not help you.

You can read about the spec for SockJS here:
https://github.com/sockjs/sockjs-protocol

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140129/e4881246/attachment-0002.html>

From andrewfr_ice at yahoo.com  Wed Jan 29 15:11:31 2014
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 29 Jan 2014 14:11:31 -0800 (PST)
Subject: [Twisted-Python] Problem with txampq_helper ampqFactory: closing
	connections
Message-ID: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>

Hi Folks:

I need to maintain a programme that uses txampq_helper library ampqFactory. The current program does not close the connection to the underlying rabbitmq (the code is a mess). 

Can I simple call theampqFactory.protocol.transport.loseConnection()?
Do I need to unregisterProducer() first (in ampqFactory, i see stuff like resumeProducing() so I assume it is a producer)

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140129/5ddcdf3c/attachment-0002.html>

From toph_ut at yahoo.de  Thu Jan 30 02:48:36 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 30 Jan 2014 09:48:36 +0000 (GMT)
Subject: [Twisted-Python] Twisted VxWorks PBConnectionLost
Message-ID: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>

Hello,

I started few days ago to make Buildbot under VxWorks run.
I ported Python and made a few changes in Buildbot and Twisted to make everything run.
I'm using Twisted 9.0.0 and Python 2.7.6
Twisted version is a bit old because its not complex as the 13.0.0 and it made the work under QNX for example.
In Buildbot there are few possibilities to make a Step:
	* FileUpload
	* FileDownload
	* ShellCommand
	* MasterShellCommand
MasterShellCommand doesnt make any difference here since its executed on the Master.
FileUpload and FileDownload (filetransfer between Master and Slave) works fine.

My Problem is the ShellCommand.
It executes a command on the Slave.
Im using the posix part on the Slave BUT fork() and exec() are not supported in VxWorks.
So i changed for _fork methode in twisted/internet/process.py to avoid the fork()-part [self.pid = fork()].
I didnt change the exec part in Twisted. I did in the Python .. (in os.py i changed the exec methode to call another methode .. so i didnt made a huge change there).

Now when i want to execute a ShellCommand, my buildbot/twisted/python crashes and i have an exception:
remoteFailed: [Failure instance: Traceback (failure with no frames): <class 'twisted.spread.pb.PBConnectionLost'>: [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.]

twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly. ]
twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly. ]

There are the two things i have.

My question after writing 40 lines here:
What could be the problem? 
Why does it just crash without any "real" exception or error.
Could someone point me to the right direction?

Thanks.

Best regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140130/d4f96b9f/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jan 30 05:04:06 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 12:04:06 -0000
Subject: [Twisted-Python] Twisted VxWorks PBConnectionLost
In-Reply-To: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>
References: <1391075316.31636.YahooMailNeo@web171705.mail.ir2.yahoo.com>
Message-ID: <20140130120406.6683.1503909403.divmod.xquotient.23@top>

On 09:48 am, toph_ut at yahoo.de wrote:
>Hello,
>
>[snip]
>
>Now when i want to execute a ShellCommand, my buildbot/twisted/python 
>crashes and i have an exception:
>remoteFailed: [Failure instance: Traceback (failure with no frames): 
><class 'twisted.spread.pb.PBConnectionLost'>: [Failure instance: 
>Traceback (failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly.]
>
>twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
>(failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly. ]
>twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
>(failure with no frames): <class 
>'twisted.internet.error.ConnectionDone'>: Connection was closed 
>cleanly. ]

This looks like maybe it's the server-side log.  Read the client-side 
log to see if there are any more useful exceptions/tracebacks logged.

Jean-Paul



From exarkun at twistedmatrix.com  Thu Jan 30 05:06:54 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 12:06:54 -0000
Subject: [Twisted-Python] Problem with txampq_helper ampqFactory:
 closing connections
In-Reply-To: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>
References: <1391033491.46944.YahooMailNeo@web140705.mail.bf1.yahoo.com>
Message-ID: <20140130120654.6683.1751917336.divmod.xquotient.29@top>

On 29 Jan, 10:11 pm, andrewfr_ice at yahoo.com wrote:
>Hi Folks:
>
>I need to maintain a programme that uses txampq_helper library 
>ampqFactory. The current program does not close the connection to the 
>underlying rabbitmq (the code is a mess).
>
>Can I simple call theampqFactory.protocol.transport.loseConnection()?

Does this factory keep a reference to a connected protocol as its 
`protocol` attribute?  Most factories keep a reference to their protocol 
class there.

If it isn't keeping a reference to the instance then you won't be able 
to disconnect it this way, you'll have to find a reference to it some 
other way.

One easy way to do this is to wrap the factory with `WrappingFactory` 
from `twisted.protocols.policies`.  This factory keeps a `protocols` 
dictionary on itself tracking all of the currently-connected protocols 
it (and the wrapped factory) have been used to create.
>Do I need to unregisterProducer() first (in ampqFactory, i see stuff 
>like resumeProducing() so I assume it is a producer)

You do need to unregister, yes.  Alternatively, you can use 
`abortConnection` as long as the transport you're using has implemented 
that method (and as long as you don't care if some bytes in the send 
buffer get dropped).
Jean-Paul



From exarkun at twistedmatrix.com  Thu Jan 30 15:48:26 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jan 2014 22:48:26 -0000
Subject: [Twisted-Python] Declaring some new supported builders (platforms)
Message-ID: <20140130224826.6683.1313948342.divmod.xquotient.33@top>

Hey guys,

Please comment on <https://github.com/twisted-infra/twisted-buildbot- 
configuration/pull/4>.  It changes the following builders/configurations 
from unsupported to supported:

    debian6-x86_64-py2.6
    debian6-x86_64-py2.6-glib
    ubuntu-12.04-x86_64-py2.7
    ubuntu-12.04-x86_64-py2.7-glib
    fedora19-x86_64-py2.7

Jean-Paul



