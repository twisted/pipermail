From mithrandi at mithrandi.net  Wed Apr  1 19:48:10 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 2 Apr 2015 03:48:10 +0200
Subject: [Twisted-Python] [ANN] clj-amp 0.9.0
Message-ID: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>

I am pleased to announce the release of clj-amp 0.9.0[1][2], a Clojure
implementation of the AMP[3] protocol (a reference implementation of
which is found in Twisted). While slightly off-topic for this list,
this project may be of interest to anyone with AMP services they would
like to interoperate with from Clojure code. Also, this is the closest
thing to an AMP mailing list that exists (at least as far as I'm
aware).

Despite this being the first release, clj-amp is essentially feature
complete. The 0.9.0 version number reflects my reluctance to designate
this 1.0.0 for the following reasons:

 * Lack of users and real-world testing: the project was just released.

 * API instability: while I do not have any immediate plans to break
API compatibility, I would like to reserve the right to make API
changes based on initial feedback from users (assuming anyone uses
it...) in order to correct any glaring issues with the API that may be
discovered.

 * Minimal test coverage and documentation: I would still like to
expand the test coverage to include more specimens of AMP encodings,
as well as expand the documentation.

Any feedback on the API as well as the documentation would be greatly
appreciated.

[1] https://github.com/mithrandi/clj-amp

[2] https://clojars.org/clj-amp

[3] http://amp-protocol.net/
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From adi at roiban.ro  Thu Apr  2 06:28:31 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Apr 2015 13:28:31 +0100
Subject: [Twisted-Python] Twisted CoAP implementation
In-Reply-To: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>
References: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>
Message-ID: <CAFycZ9dBQZZsAXyuc-OcrJiqJDaJ9PFNL=fY3RijXpFGq=VyRg@mail.gmail.com>

On 31 March 2015 at 14:07, Giacomo Tanganelli
<giacomo.tanganelli at iet.unipi.it> wrote:
> Hi,
> I have recently implemented a CoAP open source library based on Twisted. I
> noticed that in the web site there is a page regarding Twisted sub-projects.

Can you please provide the link to that page ? :) Thanks!

In case you want your code to be part of the official/default Twisted
distribution you should submit it based on the general Twisted
Development Process
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

> I'm wondering if I can add my project to such list, I think it could help
> someone. Does anyone know ho to achieve this?
>
> In any case the code is freely available at
> https://github.com/Tanganelli/CoAPthon

Some people tend to prefix ther project with 'tx` to hint that project
is based on twisted... txjsonprc txmongo so maybe you can rename it to
txcoap to make it easier for people to discover it.

-- 
Adi Roiban


From adi at roiban.ro  Thu Apr  2 06:37:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Apr 2015 13:37:14 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on GitHub
Message-ID: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>

Hi,

I would like suggest the following changes regarding the way repos are
organized in GitHub.

Move all twisted-infra repos into Twisted organization.. and maybe
merge many twisted-infra repos into braid.

Move treq, klein, txmongo, filepath... divmod projects into a new
organization dedicated to projects which are part of Twisted
ecosystem. Any project which imports Twisted can be part of it.

What do you say?
-- 
Adi Roiban


From burak.arslan at arskom.com.tr  Thu Apr  2 17:03:36 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Fri, 03 Apr 2015 02:03:36 +0300
Subject: [Twisted-Python] LimitedHistoryLogObserver is considered harmful ?
Message-ID: <551DCAC8.5060109@arskom.com.tr>

Hi,

I happen to have the new logging hotness(tm) running in production as
the backend to python's own logging module in one of the daemons that
I'm responsible for.

I also have dowser[1] integrated with this one so tryng to optimize
memory usage is almost fun :) So I noticed one day
LimitedHistoryObserver was responsible for holding on to ~30k dict
instances. I fixed this with [2]. Resident set size with 48hrs uptime is
now down ~300M   thanks to that function (and is flat).

That's a bit too much for my tastes so I thought maybe you can
reconsider that 64 * 1024 entry limit or choose to get rid of the
default observer automatically once the global observer has a proper
user-supplied sink.

Best regards,
Burak

PS: Neurons will be a web framework that ties a lot of stuff like
sqlalchemy, spyne and twisted together. Currently it does only two
things quite well: Forking and rendering html forms :)

[1] https://github.com/plq/neurons/tree/master/neurons/daemon/dowser
[2]
https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623



From exarkun at twistedmatrix.com  Thu Apr  2 18:43:29 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Apr 2015 00:43:29 -0000
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
Message-ID: <20150403004329.6423.375338749.divmod.xquotient.129@top>

On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>Hi,
>
>I would like suggest the following changes regarding the way repos are
>organized in GitHub.
>
>Move all twisted-infra repos into Twisted organization.. and maybe
>merge many twisted-infra repos into braid.
>
>Move treq, klein, txmongo, filepath... divmod projects into a new
>organization dedicated to projects which are part of Twisted
>ecosystem. Any project which imports Twisted can be part of it.
>
>What do you say?

Perhaps you can explain why someone would want to do this.  As is, it 
sounds like a lot of busy work that, at best, will confuse and disrupt 
people.  If you explain what benefit would come from making this change, 
maybe it will be easier to see why it's a good idea.

Jean-Paul


From glyph at twistedmatrix.com  Thu Apr  2 20:07:56 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 2 Apr 2015 19:07:56 -0700
Subject: [Twisted-Python] [ANN] clj-amp 0.9.0
In-Reply-To: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>
References: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>
Message-ID: <B243D47B-B54C-4CD5-878F-D275E8F2DA4A@twistedmatrix.com>


> On Apr 1, 2015, at 6:48 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> I am pleased to announce the release of clj-amp 0.9.0[1][2], a Clojure
> implementation of the AMP[3] protocol (a reference implementation of
> which is found in Twisted)

Congrats on the release!  Always glad to see implementations in more different languages, making it easy to integrate Twisted with things :).



From glyph at twistedmatrix.com  Thu Apr  2 20:16:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 2 Apr 2015 19:16:16 -0700
Subject: [Twisted-Python] LimitedHistoryLogObserver is considered
	harmful ?
In-Reply-To: <551DCAC8.5060109@arskom.com.tr>
References: <551DCAC8.5060109@arskom.com.tr>
Message-ID: <13F91F86-8A5F-4070-8D6C-FF50E04F3342@twistedmatrix.com>


> On Apr 2, 2015, at 4:03 PM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hi,
> 
> I happen to have the new logging hotness(tm) running in production as
> the backend to python's own logging module in one of the daemons that
> I'm responsible for.

Thanks for trying out this code and helping us validate it!

> I also have dowser[1] integrated with this one so tryng to optimize
> memory usage is almost fun :) So I noticed one day
> LimitedHistoryObserver was responsible for holding on to ~30k dict
> instances. I fixed this with [2]. Resident set size with 48hrs uptime is
> now down ~300M   thanks to that function (and is flat).

That's... a lot of dict instances :).  I guess not a very "limited" history observer ;-).

> That's a bit too much for my tastes so I thought maybe you can
> reconsider that 64 * 1024 entry limit or choose to get rid of the
> default observer automatically once the global observer has a proper
> user-supplied sink.

Can you file this bug on the Twisted tracker so we don't lose it?  I am pretty sure that 300M of memory for buffered logs is not something anybody really wants.

> Best regards,
> Burak
> 
> PS: Neurons will be a web framework that ties a lot of stuff like
> sqlalchemy, spyne and twisted together. Currently it does only two
> things quite well: Forking and rendering html forms :)
> 
> [1] https://github.com/plq/neurons/tree/master/neurons/daemon/dowser
> [2]
> https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623 <https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623>

Awesome, I can't wait to see the results.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150402/70274616/attachment.html>

From meejah at meejah.ca  Fri Apr  3 15:18:32 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 04 Apr 2015 01:18:32 +0400
Subject: [Twisted-Python] txaio: write code for both asyncio + twisted
Message-ID: <864mowq5av.fsf@atlantis.meejah.ca>


I recently factored some Twisted/asyncio compatibility code out of
AutobahnPython (http://autobahn.ws/python/) and the result thus far is
"txaio", available on GitHub: https://github.com/tavendo/txaio

Similar to "six" (but for event-based Python) this allows you to write
code (presumably for a library) that can work unmodified on either 
asyncio or Twisted. In other words, users of your library can choose 
whether they want a Twisted dependency or not (and, e.g., get plain
Deferreds or Futures as appropriate from any async methods your API
reveals).

Basically, it's just a thin wrapper over the appropriate calls into
asyncio or Twisted providing a "lowest-common-denominator" interface.
This does mean limiting yourself a little (e.g. many DeferredList
options aren't available). So you feel this pain as a library author,
but then give *users* of your library a choice as to whether they wish
to write asyncio (with no Twisted dependency) or Twisted.

What I mean is: txaio isn't trying to be full event-loop interop like
txtulip (https://github.com/itamarst/txtulip)

This isn't "released" yet (e.g. not on PyPI) but I'm posting about it
because I'm interested in any early feedback.

Here's most of the API, using the example from the README:

    import txaio  # auto-selects twisted > asyncio > trollius
    f0 = txaio.create_future()
    f1 = txaio.as_future(some_func, 1, 2, key='word')
    txaio.add_callbacks(f0, callback, errback)  # either can be None
    txaio.add_callbacks(f1, callback, errback)
    # ...
    txaio.resolve(f0, "value")
    txaio.reject(f1, RuntimeError("it failed"))

-- 
meejah




From exarkun at twistedmatrix.com  Sat Apr  4 19:56:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Apr 2015 01:56:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150329145203.6423.700890444.divmod.xquotient.109@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <20150329145203.6423.700890444.divmod.xquotient.109@top>
Message-ID: <20150405015626.6423.1376505887.divmod.xquotient.288@top>

On 29 Mar, 02:52 pm, exarkun at twistedmatrix.com wrote:
>On 28 Mar, 04:22 pm, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>The Twisted issue tracker needs someone to pay attention to it for 
>>spam content and clean up that content.  I've been taking care of this 
>>for a while now but I'm going to step back from this position soon.
>
>Thanks for volunteering, Hawkowl, Eeshan Garg, and Pantelis Theodosiou.

I've granted these permissions to Hawkowl and Eeshan now (I didn't see 
Pantelis' trac username on the ProjectJobs page).

https://twistedmatrix.com/trac/ticket/7837 would be a good ticket to 
start with.

Let me know if you have any questions - otherwise, I'm officially hands- 
off now.

Thanks,
Jean-Paul


From trac at twistedmatrix.com  Sun Apr  5 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Apr 2015 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1428213916.21.1191464659413056070@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150405/0af68477/attachment.html>

From laurens at daemon.be  Mon Apr  6 18:27:50 2015
From: laurens at daemon.be (Laurens Vets)
Date: Mon, 06 Apr 2015 17:27:50 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
 5 minutes
In-Reply-To: <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
 <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
Message-ID: <efa017011e9794071ad208014c43d815@daemon.be>

On 2015-03-30 13:39, Glyph Lefkowitz wrote:
>> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
>> 
>> Hello,
>> 
>> I'm trying to get to know the Twisted framework by extending the 
>> ircLogBot.py example. I want to be able to get a list of all names in 
>> a channel (by sending NAMES) and I want to rerun this every 5 minutes.
>> 
>> I've been able to get the NAMES on a channel join by doing this in 
>> LogBot:
>> 
>> def joined(self, channel):
>>    self.names(channel)
>> 
>> def names(self, channel):
>>    self.sendLine("NAMES %s" % channel)
>> 
>> def irc_unknown(self, prefix, command, params):
>>    if command == 'RPL_NAMREPLY':
>>        self.handle_namereply(*params)
>> 
>> def handle_namereply(self, myname, channeltype, channelname, users):
>>    self.logger.log("Handling namereply %r %r %r %r" % (myname, 
>> channeltype, channelname, users))
>> 
>> The problem I face is that I have no idea where to put a LoopingCall 
>> to run this same command every 5 minutes. Where would be the best 
>> place to place this?
> 
> I would probably start such a LoopingCall in LogBot.connectionMade,
> and make sure to stop it in LogBot.connectionLost.  That way only an
> active connection will attempt to send NAMES to itself.
> 
> Does that make sense for your application?
> 
> Thanks for using Twisted,

I created the call in LogBot.joined as I need to be joined in a channel 
before I can send the NAMES command. Does that sound right? I'll also 
stop it in in connectionLost. I did not think of that, thanks! :)

Next stop: adding a database connection.

Thank you for making Twisted! :)

-Laurens


From oliverpalmer at opalmer.com  Mon Apr  6 20:44:40 2015
From: oliverpalmer at opalmer.com (Oliver Palmer)
Date: Mon, 6 Apr 2015 22:44:40 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
Message-ID: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>

Hi,

I've been using Twisted for a while now and for the most part I've been
quite pleased with it.  Perhaps the one exception to this is when it comes
to Windows, but that's only because of pywin32.  For those unaware, there's
essentially two options right now.  Install pywin32 manually or add
the pypywin32 package to your project as a requirement.  So long as the
wheel package is installed...it's pretty easy to work around pywin32's
installer issues.

But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away
on Windows.  Pywin32 can be difficult to get working sometimes and it's
unfortunate that the Windows install can sometimes require a couple of
manual steps when working with Twisted.  So far as I can tell, Twisted
itself does not use a great deal of the pywin32 library and there's even a
ticket open that seems to indicate it's on the list of things to eventually
do and it's been mentioned at least a few times outside of this ticket:

    https://twistedmatrix.com/trac/ticket/7477

So my question is, does anyone know if any work has been done along the
lines of removing the pywin32 dependency and converting to cffi?  Outside
of the link above, I'm not seeing much so far and based on some rudimentary
testing
<https://github.com/opalmer/twisted/blob/02c0c56382f25b239fe177807541528cc940dadf/scratch.py>
it
seems like it's worth picking up since I've had to work around
<https://github.com/pyfarm/pyfarm-agent/pull/250/files> this problem
before.

Would anyone object to me doing some work on this?  I can't promise
anything yet since I'm still investigating it but I figured it would be a
good time to reach out for some input before moving forward.

Thanks,
Oliver Palmer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150406/46267815/attachment.html>

From zookog at gmail.com  Tue Apr  7 11:56:11 2015
From: zookog at gmail.com (Zooko Wilcox-O'Hearn)
Date: Tue, 7 Apr 2015 17:56:11 +0000
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
Message-ID: <CANdZDc6zd7cW-FRbv2xVo=cBTzHJWdNLM+iFr1V5RFA4xwu=Qg@mail.gmail.com>

Dear Oliver Palmer:

Thanks for the note! It inspired me to add a few comments:

https://twistedmatrix.com/trac/ticket/7477#comment:3

In short: yes please! Replace pywin32, please. Thanks!

Regards,

Zooko


From glyph at twistedmatrix.com  Tue Apr  7 15:45:01 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Apr 2015 17:45:01 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
Message-ID: <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>


> On Apr 6, 2015, at 22:44, Oliver Palmer <oliverpalmer at opalmer.com> wrote:
> 
> Hi,
> 
> I've been using Twisted for a while now and for the most part I've been quite pleased with it. 

Glad to hear it!

> But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away on Windows.

	.

	.

	.

>     https://twistedmatrix.com/trac/ticket/7477 <https://twistedmatrix.com/trac/ticket/7477>
	.

	.

	.

> Would anyone object to me doing some work on this?

This is the default answer for any ticket in Twisted, but: absolutely not.  Please go ahead and work away.

The ideal end-state here would be to replace not only the dependency on pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for whatever Windows APIs we need.

In the meanwhile, hopefully the new "extras" support (arriving in a release any minute now) will mitigate the symptoms while we work on the root cause.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150407/0a9352f1/attachment.html>

From glyph at twistedmatrix.com  Tue Apr  7 16:28:50 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Apr 2015 18:28:50 -0400
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
	5 minutes
In-Reply-To: <efa017011e9794071ad208014c43d815@daemon.be>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
 <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
 <efa017011e9794071ad208014c43d815@daemon.be>
Message-ID: <1FB39A96-3D4F-499C-A45B-C4AF8BFF025E@twistedmatrix.com>


> On Apr 6, 2015, at 20:27, Laurens Vets <laurens at daemon.be> wrote:
> 
> On 2015-03-30 13:39, Glyph Lefkowitz wrote:
>>> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
>>> Hello,
>>> I'm trying to get to know the Twisted framework by extending the ircLogBot.py example. I want to be able to get a list of all names in a channel (by sending NAMES) and I want to rerun this every 5 minutes.
>>> I've been able to get the NAMES on a channel join by doing this in LogBot:
>>> def joined(self, channel):
>>>   self.names(channel)
>>> def names(self, channel):
>>>   self.sendLine("NAMES %s" % channel)
>>> def irc_unknown(self, prefix, command, params):
>>>   if command == 'RPL_NAMREPLY':
>>>       self.handle_namereply(*params)
>>> def handle_namereply(self, myname, channeltype, channelname, users):
>>>   self.logger.log("Handling namereply %r %r %r %r" % (myname, channeltype, channelname, users))
>>> The problem I face is that I have no idea where to put a LoopingCall to run this same command every 5 minutes. Where would be the best place to place this?
>> I would probably start such a LoopingCall in LogBot.connectionMade,
>> and make sure to stop it in LogBot.connectionLost.  That way only an
>> active connection will attempt to send NAMES to itself.
>> Does that make sense for your application?
>> Thanks for using Twisted,
> 
> I created the call in LogBot.joined as I need to be joined in a channel before I can send the NAMES command. Does that sound right? I'll also stop it in in connectionLost. I did not think of that, thanks! :)

Yup, that all sounds right.

> Next stop: adding a database connection.

Good luck!

> Thank you for making Twisted! :)

Thank you for using it!

-glyph



From oliverpalmer at opalmer.com  Tue Apr  7 23:33:12 2015
From: oliverpalmer at opalmer.com (Oliver Palmer)
Date: Wed, 8 Apr 2015 01:33:12 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
 <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>
Message-ID: <CAEgpGv72f_bZ8BxeXZDLW3oqyOSB80yhKKThuyx2jLMq0SZFOQ@mail.gmail.com>

> This is the default answer for any ticket in Twisted, but: *absolutely
not*.  Please go ahead and work away.

Forging ahead then heh.  I'll probably assign the actual ticket to myself
once I've delved into this a little bit further and am decently close to a
patch.  I was mainly asking to see if anyone else had made an attempt yet
so I didn't duplicate anything.


> The ideal end-state here would be to replace not only the dependency on
pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for
whatever Windows APIs we need.

That's what I'd like to see too I think.  I'm going to start out with
trying to replace pywin32 since that seems to be the bigger pain point for
consumers of Twisted based on Zooko's input and my own experiences as
well.  I'll have a look at replacing/updating the IOCP Pyrex code as well
while I'm at it.


> In the meanwhile, hopefully the new "extras" support (arriving in a
release any minute now) will mitigate the symptoms while we work on the
root cause.

Nice just read up on this in the repo, looking forward to the release
already.  Thanks!


---Oliver

On Tue, Apr 7, 2015 at 5:45 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 6, 2015, at 22:44, Oliver Palmer <oliverpalmer at opalmer.com> wrote:
>
> Hi,
>
> I've been using Twisted for a while now and for the most part I've been
> quite pleased with it.
>
>
> Glad to hear it!
>
> But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away
> on Windows.
>
>
> .
>
> .
>
> .
>
>     https://twistedmatrix.com/trac/ticket/7477
>
>
> .
>
> .
>
> .
>
> Would anyone object to me doing some work on this?
>
>
> This is the default answer for any ticket in Twisted, but: *absolutely
> not*.  Please go ahead and work away.
>
> The ideal end-state here would be to replace not only the dependency on
> pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for
> whatever Windows APIs we need.
>
> In the meanwhile, hopefully the new "extras" support (arriving in a
> release any minute now) will mitigate the symptoms while we work on the
> root cause.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150408/e023940f/attachment.html>

From ashfall at twistedmatrix.com  Sat Apr 11 12:58:25 2015
From: ashfall at twistedmatrix.com (Ashwini Oruganti)
Date: Sat, 11 Apr 2015 14:58:25 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
Message-ID: <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>

Everyone is invited! Let's meet near the registration desk at 6:30pm

Pullman
3424, Avenue du Parc
Montreal, QC H2X 2H5
Canada
(514) 288-7779

http://www.yelp.com/biz/pullman-montr%C3%A9al-3

-Ashwini
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150411/075e9a72/attachment.html>

From hs at ox.cx  Sat Apr 11 14:17:19 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 11 Apr 2015 16:17:19 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
 <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
Message-ID: <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>

That clashes with the PyLadies auction.  :-/

I'm not sure I can attend anyway but it's unfortunate nevertheless. 

Sent from my phone.

> Am 11.04.2015 um 14:58 schrieb Ashwini Oruganti <ashfall at twistedmatrix.com>:
> 
> Everyone is invited! Let's meet near the registration desk at 6:30pm
> 
> Pullman
> 3424, Avenue du Parc
> Montreal, QC H2X 2H5
> Canada
> (514) 288-7779
> 
> http://www.yelp.com/biz/pullman-montr%C3%A9al-3
> 
> -Ashwini
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150411/3a74f553/attachment.html>

From ashfall at twistedmatrix.com  Sat Apr 11 14:49:03 2015
From: ashfall at twistedmatrix.com (Ashwini Oruganti)
Date: Sat, 11 Apr 2015 16:49:03 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
 <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
 <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>
Message-ID: <CAMFCZ-24F2OftaVXHz-WYH+GvW2MM6r1NYAk6AWLxNx=t2JGAw@mail.gmail.com>

Apologies, that was unintentional.

Time changed to 8:00pm. Same place, meet near registration.
On Apr 11, 2015 4:17 PM, "Hynek Schlawack" <hs at ox.cx> wrote:

> That clashes with the PyLadies auction.  :-/
>
> I'm not sure I can attend anyway but it's unfortunate nevertheless.
>
> Sent from my phone.
>
> Am 11.04.2015 um 14:58 schrieb Ashwini Oruganti <ashfall at twistedmatrix.com
> >:
>
> Everyone is invited! Let's meet near the registration desk at 6:30pm
>
> Pullman
> 3424, Avenue du Parc
> Montreal, QC H2X 2H5
> Canada
> (514) 288-7779
>
> http://www.yelp.com/biz/pullman-montr%C3%A9al-3
>
> -Ashwini
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150411/db44a422/attachment.html>

From trac at twistedmatrix.com  Sun Apr 12 00:05:29 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Apr 2015 06:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1428818729.42.2779187376380109460@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150412/57d90e4c/attachment.html>

From hawkowl at atleastfornow.net  Mon Apr 13 02:17:24 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 13 Apr 2015 16:17:24 +0800
Subject: [Twisted-Python] Twisted 15.1 Release Announcement
Message-ID: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!

This is not a big release, but does have some nice-to-haves:

- You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
- twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
- Twisted's MSN support is now deprecated.
- More documentation has been added on how Trial finds tests.
- ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
<https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Hawkie Owl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150413/6f5ac047/attachment.pgp>

From fehrist at codeghar.com  Mon Apr 13 22:22:14 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 13 Apr 2015 21:22:14 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
Message-ID: <552C95F6.4060408@codeghar.com>

I am new to Twisted and its community and exploring adding Diameter 
support. I have experience with Python but as I learn more I realize how 
little I know. This is my first foray contributing to a real open source 
project. I'm basically looking for mentors to guide me when I have 
questions about:

* Async code
* Wiring code to support both Python 2.x and 3.x
* Style guides
* Other things

If dedicated mentors are hard to come by I'd be grateful for this ML to 
help with answers. Looking forward to working with the community on a 
great project.

--
Hamza "@aikchar" Sheikh


From glyph at twistedmatrix.com  Mon Apr 13 23:23:32 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 14 Apr 2015 01:23:32 -0400
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
Message-ID: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>


> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!
> 
> This is not a big release, but does have some nice-to-haves:
> 
> - You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
> - twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
> - Twisted's MSN support is now deprecated.
> - More documentation has been added on how Trial finds tests.
> - ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
> <https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> Twisted Regards,
> Hawkie Owl

This is very exciting.  I am SUPER PUMPED to start telling people to `pip install twisted[tls]? instead of the whole mess it used to be.  Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and brought twisted stickers to PyCon!)

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 630 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/37b6e721/attachment.pgp>

From hawkowl at atleastfornow.net  Mon Apr 13 23:28:31 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 14 Apr 2015 13:28:31 +0800
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
Message-ID: <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>

zomg twisted stickers!!!

Chris, let me know how much it is for you to send me some -- my laptop has Django stickers, but no Twisted. FOR SHAME

- hawkie

> On 14 Apr 2015, at 13:23, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!
>> 
>> This is not a big release, but does have some nice-to-haves:
>> 
>> - You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
>> - twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
>> - Twisted's MSN support is now deprecated.
>> - More documentation has been added on how Trial finds tests.
>> - ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.
>> 
>> For more information, check the NEWS file (link provided below).
>> 
>> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
>> <https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.
>> 
>> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
>> 
>> Twisted Regards,
>> Hawkie Owl
> 
> This is very exciting.  I am SUPER PUMPED to start telling people to `pip install twisted[tls]? instead of the whole mess it used to be.  Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and brought twisted stickers to PyCon!)
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/7d0dcc66/attachment.pgp>

From glyph at twistedmatrix.com  Mon Apr 13 23:42:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 14 Apr 2015 01:42:06 -0400
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <552C95F6.4060408@codeghar.com>
References: <552C95F6.4060408@codeghar.com>
Message-ID: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>


> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com> wrote:
> 
> I am new to Twisted and its community

Welcome, we are happy to have you!

> and exploring adding Diameter support.

What is Diameter?

> I have experience with Python but as I learn more I realize how little I know. This is my first foray contributing to a real open source project. I'm basically looking for mentors to guide me when I have questions about:
> 
> * Async code
> * Wiring code to support both Python 2.x and 3.x
> * Style guides
> * Other things
> 
> If dedicated mentors are hard to come by I'd be grateful for this ML to help with answers. Looking forward to working with the community on a great project.

I don't mean to discourage anyone from volunteering - if you get a direct answer from someone else then great :) - but it would probably be easiest for you to begin just by asking questions of the mailing list, and perhaps formalizing a mentorship relationship later.  Most twisted core team members tend to be very busy, but the community as a whole does a pretty good job of keeping up with the questions here.  Personally I'd love to offer to mentor you, but I am fairly overloaded as it is and would not be able to give you the attention you deserve.

You might want to check this out as a resource to get started on the development process, just to close a few trivial bugs to get the hang of it before starting the larger project of Diameter support:

http://bitly.com/easy-twisted-tickets <http://bitly.com/easy-twisted-tickets>

Please feel free to ask any and all questions on this list.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/740adebe/attachment.html>

From sank.daniel at gmail.com  Mon Apr 13 23:57:13 2015
From: sank.daniel at gmail.com (Daniel Sank)
Date: Mon, 13 Apr 2015 22:57:13 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>

Hey Hamza,

I learned how to write asynchronous code more "recently" than a lot of the
core devs and I'd be happy to guide you. As glyph says, the best way is to
simply ask questions as you have them.

Of course, a good tutorial is invaluable. Without any doubt the best
starting point is David Peticolas's tutorial found here:
http://krondo.com/?page_id=1327.


On Mon, Apr 13, 2015 at 10:42 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com> wrote:
>
> I am new to Twisted and its community
>
>
> Welcome, we are happy to have you!
>
> and exploring adding Diameter support.
>
>
> What is Diameter?
>
> I have experience with Python but as I learn more I realize how little I
> know. This is my first foray contributing to a real open source project.
> I'm basically looking for mentors to guide me when I have questions about:
>
> * Async code
> * Wiring code to support both Python 2.x and 3.x
> * Style guides
> * Other things
>
> If dedicated mentors are hard to come by I'd be grateful for this ML to
> help with answers. Looking forward to working with the community on a great
> project.
>
>
> I don't mean to discourage anyone from volunteering - if you get a direct
> answer from someone else then great :) - but it would probably be easiest
> for you to begin just by asking questions of the mailing list, and perhaps
> formalizing a mentorship relationship later.  Most twisted core team
> members tend to be very busy, but the community as a whole does a pretty
> good job of keeping up with the questions here.  Personally I'd love to
> offer to mentor you, but I am fairly overloaded as it is and would not be
> able to give you the attention you deserve.
>
> You might want to check this out as a resource to get started on the
> development process, just to close a few trivial bugs to get the hang of it
> before starting the larger project of Diameter support:
>
> http://bitly.com/easy-twisted-tickets
>
> Please feel free to ask any and all questions on this list.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Daniel Sank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150413/2fe6220c/attachment-0001.html>

From p.mayers at imperial.ac.uk  Tue Apr 14 04:15:36 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Apr 2015 11:15:36 +0100
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <552CE8C8.3000104@imperial.ac.uk>

On 14/04/15 06:42, Glyph wrote:
>
>> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com
>> <mailto:fehrist at codeghar.com>> wrote:
>>
>> I am new to Twisted and its community
>
> Welcome, we are happy to have you!
>
>> and exploring adding Diameter support.
>
> What is Diameter?

<offtopic>

It's a bit like RADIUS-over-TCP but with knobs on.

The only place it really took off - though it's a big place - is 
3G/mobile network AAA.

RADIUS has such a large installed user-base that DIAMETER had trouble 
reaching a critical mass anywhere that backwards compatibility was needed.

Kind of a shame, since it means AAA signalling for most encrypted 
wireless networks takes place over a crufty old protocol with a bunch of 
problems, not least lack of reliable transport, which got solved by... 
running radius-over-TLS-over-TCP, thus proving:

https://xkcd.com/927/

</offtopic>

;o)


From sanfo.halidou at yahoo.fr  Tue Apr 14 05:47:10 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Tue, 14 Apr 2015 11:47:10 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
Message-ID: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>

Hi everybody,I am student and need help of any one.I am working on internship and I have to implement a SFTP client usign twisted conch module.I have program thoe code to establish th ssh tunnel using password authentication. I arrive to create directory with "MakeDirectory" method of FileTransfertClient class.But my objective is to upload and download files and the FileTransfertClient ?class has no method [or as I konw ] to do that.
Can you help me with way to do the uploading and the downloding with twisted conch?
Here is my program.<code>'''Created on 8 avr. 2015
@author: hsanfo'''
from sys import stdout
from twisted.python.log import startLogging, err
from twisted.internet import reactorfrom twisted.internet.defer import Deferred
from twisted.conch.ssh.common import NSimport twisted.conch.scripts.cftp.ClientOptionsfrom twisted.conch.scripts.cftp import ClientOptionsfrom twisted.conch.ssh.filetransfer import FileTransferClientfrom twisted.conch.client.connect import connectfrom twisted.conch.client.default import SSHUserAuthClient, verifyHostKeyfrom twisted.conch.ssh.connection import SSHConnectionfrom twisted.conch.ssh.channel import SSHChannel
from twisted.conch.ssh import keys, userauthfrom twisted.internet import defer
class SFTPSession(SSHChannel):? ? name = 'session'
? ? def channelOpen(self, whatever):? ? ? ? d = self.conn.sendRequest(? ? ? ? ? ? self, 'subsystem', NS('sftp'), wantReply=True)? ? ? ? d.addCallbacks(self._cbSFTP)

? ? def _cbSFTP(self, result):? ? ? ? client = FileTransferClient()? ? ? ? client.makeConnection(self)? ? ? ? self.dataReceived = client.dataReceived? ? ? ? self.conn._sftp.callback(client)


class SFTPConnection(SSHConnection):? ??? ? def serviceStarted(self):? ? ? ? self.openChannel(SFTPSession())

class ClientUserAuth(userauth.SSHUserAuthClient):? ? def getPassword(self, prompt = None):? ? ? ? #normal password authentication? ? ? ? print "PASSWORD AUTH"? ? ? ? return defer.succeed('test') # <-- YOUR PASSWORD
? ? def getGenericAnswers(self, name, instruction, prompts):? ? ? ? #interactive password authentication? ? ? ? print "INTERACTIVE AUTH"? ? ? ? response = ['']*len(prompts)? ? ? ? for i, p in enumerate(prompts):? ? ? ? ? ? try:? ? ? ? ? ? ? ? if('password' in p[0].lower()):? ? ? ? ? ? ? ? ? ? response[i] = 'test' # <-- YOUR PASSWORD? ? ? ? ? ? except:? ? ? ? ? ? ? ? pass? ? ? ? #The response is always a sequence, and the length of it is always? ? ? ? #identical to the length of prompts? ? ? ? return defer.succeed(response) ??? ??
def sftp(user, host, port):? ? options = ClientOptions()? ??? ? options['host'] = host? ? options['port'] = port? ? conn = SFTPConnection()? ? conn._sftp = Deferred()? ? auth = SSHUserAuthClient(user, options, conn)? ? #auth = ClientUserAuth(user, options, conn)? ? #connect(host, port, options, verifyHostKey, auth)? ? connect(host, port, options, None, auth)? ??? ? return conn._sftp

def transfer(client):? ? d = client.makeDirectory('foobarbaz', {})? ? def cbDir(ignored):? ? ? ? print 'Made directory'? ? d.addCallback(cbDir)? ? return d

def main():? ? startLogging(stdout)
? ? user = 'test'? ? host = '192.168.29.129'? ? port = 22? ? d = sftp(user, host, port)? ? d.addCallback(transfer)? ? d.addErrback(err, "Problem with SFTP transfer")? ? d.addCallback(lambda ignored: reactor.stop())? ? reactor.run()

if __name__ == '__main__':? ? main()<code>?Best regards
SANFO

? ? ? ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/69aac660/attachment.html>

From chriswwolfe at gmail.com  Tue Apr 14 08:36:55 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Tue, 14 Apr 2015 09:36:55 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
 <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>
Message-ID: <CAEKSqktQtGs4-M4bfqttnREQ8+v0XSy_hZL0a836=1MxBT_dMQ@mail.gmail.com>

Hey Hawkie!

I gave Glyph all of the stickers that I had, as I thought he'd come into
contact with more Twisted people than I do. As such, you might want ping
him to get a hold of one.

Thanks for all your hard work!

Best,
Chris // herrwolfe

On Tue, Apr 14, 2015 at 12:28 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> zomg twisted stickers!!!
>
> Chris, let me know how much it is for you to send me some -- my laptop has
> Django stickers, but no Twisted. FOR SHAME
>
> - hawkie
>
> > On 14 Apr 2015, at 13:23, Glyph <glyph at twistedmatrix.com> wrote:
> >
> >
> >> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
> >>
> >> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 15.1.0 -- just in time for the PyCon sprints!
> >>
> >> This is not a big release, but does have some nice-to-haves:
> >>
> >> - You can now install Twisted's optional dependencies easier -- for
> example, `pip install twisted[tls]` installs Twisted with TLS support.
> >> - twisted.web.static.File allows defining a custom resource for
> rendering forbidden pages.
> >> - Twisted's MSN support is now deprecated.
> >> - More documentation has been added on how Trial finds tests.
> >> - ...and 26 other closed tickets containing bug fixes, feature
> enhancements, and documentation.
> >>
> >> For more information, check the NEWS file (link provided below).
> >>
> >> You can find the downloads at <https://pypi.python.org/pypi/Twisted>
> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The
> NEWS file is also available at
> >> <
> https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS
> >.
> >>
> >> Many thanks to everyone who had a part in this release - the supporters
> of the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
> >>
> >> Twisted Regards,
> >> Hawkie Owl
> >
> > This is very exciting.  I am SUPER PUMPED to start telling people to
> `pip install twisted[tls]? instead of the whole mess it used to be.  Thanks
> in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and
> brought twisted stickers to PyCon!)
> >
> > -glyph
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/e9840f0e/attachment-0001.html>

From hs at ox.cx  Tue Apr 14 10:54:00 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 14 Apr 2015 12:54:00 -0400
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.15
Message-ID: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>

Greetings fellow Pythoneers,

I'm happy to announce that pyOpenSSL 0.15 is now available.

pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
low-level cryptography APIs but is primarily focused on providing an API 
for using the TLS protocol from Python.

Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
downloads.

***

This is the last release under the stewardship of Jean-Paul Calderone 
and the maintainership is now taken over by the Python Cryptography 
Authority (PyCA) which has been developing the C-bindings for pyOpenSSL 
for a while (aka cryptography).

We?d like to thank him for his great work over the past years and hope 
to be able to keep moving the project into a direction that will make 
him only slightly sad.

***

The highlights of this release include:

- Support to ECDHE,
- NPN and ALPN support,
- ?many bug fixes!

It?s worth pointing out that OpenSSL functions generally work on *byte 
strings* because they mirror OpenSSL APIs and OpenSSL is not 
Unicode-aware.  Passing Unicode strings tends to accidentally work due 
do implicit decodes on Python 2 but they emit a DeprecationWarning now.  
Please note that DeprecationWarnings are silenced by default on Python 
2.7.

See the ChangeLog at 
<https://github.com/pyca/pyopenssl/blob/0.15/ChangeLog> for more 
details!

On behalf of PyCA,
Hynek Schlawack


From hs at ox.cx  Tue Apr 14 17:06:21 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 14 Apr 2015 19:06:21 -0400
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.15*.1*
In-Reply-To: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
References: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
Message-ID: <EE3E29B9-3E0B-4CAF-AF62-17561C1561AE@ox.cx>

Hello again,

since releasing software is so much fun, 0.15.1 is out on PyPI too.

It fixes a small regression that shouldn?t affect you in practice but 
breaks the Twisted test suite.

See https://github.com/pyca/pyopenssl/pull/225 for details.

Brown baggily yours,
?h

On 14 Apr 2015, at 12:54, Hynek Schlawack wrote:

> Greetings fellow Pythoneers,
>
> I'm happy to announce that pyOpenSSL 0.15 is now available.
>
> pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
> low-level cryptography APIs but is primarily focused on providing an 
> API for using the TLS protocol from Python.
>
> Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
> downloads.
>
> ***
>
> This is the last release under the stewardship of Jean-Paul Calderone 
> and the maintainership is now taken over by the Python Cryptography 
> Authority (PyCA) which has been developing the C-bindings for 
> pyOpenSSL for a while (aka cryptography).
>
> We?d like to thank him for his great work over the past years and 
> hope to be able to keep moving the project into a direction that will 
> make him only slightly sad.
>
> ***
>
> The highlights of this release include:
>
> - Support to ECDHE,
> - NPN and ALPN support,
> - ?many bug fixes!
>
> It?s worth pointing out that OpenSSL functions generally work on 
> *byte strings* because they mirror OpenSSL APIs and OpenSSL is not 
> Unicode-aware.  Passing Unicode strings tends to accidentally work due 
> do implicit decodes on Python 2 but they emit a DeprecationWarning 
> now.  Please note that DeprecationWarnings are silenced by default on 
> Python 2.7.
>
> See the ChangeLog at 
> <https://github.com/pyca/pyopenssl/blob/0.15/ChangeLog> for more 
> details!
>
> On behalf of PyCA,
> Hynek Schlawack
> -- 
> https://mail.python.org/mailman/listinfo/python-announce-list
>
>     Support the Python Software Foundation:
>     http://www.python.org/psf/donations/


From kevin.horn at gmail.com  Tue Apr 14 21:07:35 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Apr 2015 22:07:35 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
Message-ID: <CA+U=zK0BcXmnXo2XFk26sBbnULpt+SzLR-8iLbmhnHAZK0=+dA@mail.gmail.com>

On Tue, Apr 14, 2015 at 12:23 AM, Glyph <glyph at twistedmatrix.com> wrote:

> I am SUPER PUMPED to start telling people to `pip install twisted[tls]?
> instead of the whole mess it used to be.
>

This. This. SO MUCH THIS!


> Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that
> patch
>

Yes.  Many thanks are due!


> (and brought twisted stickers to PyCon!)
>

Somebody finally made stickers?!?!  I knew I should have gone this year...




--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/0d888027/attachment.html>

From fehrist at codeghar.com  Tue Apr 14 21:58:31 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Tue, 14 Apr 2015 20:58:31 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <552DE1E7.2060802@codeghar.com>

On 4/13/15, 10:42 PM, Glyph wrote:

> What is Diameter?

Diameter is part of the Authentication, Authorization, and Accounting 
(AAA) family. It's a successor to RADIUS and is widely used in the 
telecommunications/mobile industry.

> I don't mean to discourage anyone from volunteering - if you get a
> direct answer from someone else then great :) - but it would probably be
> easiest for you to begin just by asking questions of the mailing list,
> and perhaps formalizing a mentorship relationship later.  Most twisted
> core team members tend to be very busy, but the community as a whole
> does a pretty good job of keeping up with the questions here.
>   Personally I'd love to offer to mentor you, but I am fairly overloaded
> as it is and would not be able to give you the attention you deserve.

I understand.

> You might want to check this out as a resource to get started on the
> development process, just to close a few trivial bugs to get the hang of
> it before starting the larger project of Diameter support:
>
> http://bitly.com/easy-twisted-tickets

Starting with fixing easy bugs is a fantastic idea. I'll browse to see 
where I can contribute.

Thank you for the warm welcome.

--
Hamza Sheikh
Twitter: @aikchar


From fehrist at codeghar.com  Tue Apr 14 22:04:39 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Tue, 14 Apr 2015 21:04:39 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
 <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>
Message-ID: <552DE357.1030508@codeghar.com>

On 4/13/15, 10:57 PM, Daniel Sank wrote:

> I learned how to write asynchronous code more "recently" than a lot of
> the core devs and I'd be happy to guide you. As glyph says, the best way
> is to simply ask questions as you have them.

Thanks. I'm sure there will be a lot of questions.

> Of course, a good tutorial is invaluable. Without any doubt the best
> starting point is David Peticolas's tutorial found here:
> http://krondo.com/?page_id=1327.

Thanks for the tutorial link.

--
Hamza Sheikh
Twitter: @aikchar



From kevin.horn at gmail.com  Tue Apr 14 22:19:01 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Apr 2015 23:19:01 -0500
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
References: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>

On Tue, Apr 14, 2015 at 6:47 AM, halidou SANFO <sanfo.halidou at yahoo.fr>
wrote:

> Hi everybody,
> I am student and need help of any one.
> I am working on internship and I have to implement a SFTP client usign
> twisted conch module.
> I have program thoe code to establish th ssh tunnel using password
> authentication. I arrive to create directory with "MakeDirectory" method of
> FileTransfertClient class.
> But my objective is to upload and download files and the
> FileTransfertClient  class has no method [or as I konw ] to do that.
>
> Can you help me with way to do the uploading and the downloding with
> twisted conch?
>
> Here is my program.
> <code>
> '''
> Created on 8 avr. 2015
>
> @author: hsanfo
> '''
>
> from sys import stdout
>
> from twisted.python.log import startLogging, err
>
> from twisted.internet import reactor
> from twisted.internet.defer import Deferred
>
> from twisted.conch.ssh.common import NS
> import twisted.conch.scripts.cftp.ClientOptions
> from twisted.conch.scripts.cftp import ClientOptions
> from twisted.conch.ssh.filetransfer import FileTransferClient
> from twisted.conch.client.connect import connect
> from twisted.conch.client.default import SSHUserAuthClient, verifyHostKey
> from twisted.conch.ssh.connection import SSHConnection
> from twisted.conch.ssh.channel import SSHChannel
>
> from twisted.conch.ssh import keys, userauth
> from twisted.internet import defer
>
> class SFTPSession(SSHChannel):
>     name = 'session'
>
>     def channelOpen(self, whatever):
>         d = self.conn.sendRequest(
>             self, 'subsystem', NS('sftp'), wantReply=True)
>         d.addCallbacks(self._cbSFTP)
>
>
>     def _cbSFTP(self, result):
>         client = FileTransferClient()
>         client.makeConnection(self)
>         self.dataReceived = client.dataReceived
>         self.conn._sftp.callback(client)
>
>
>
> class SFTPConnection(SSHConnection):
>
>     def serviceStarted(self):
>         self.openChannel(SFTPSession())
>
>
> class ClientUserAuth(userauth.SSHUserAuthClient):
>     def getPassword(self, prompt = None):
>         #normal password authentication
>         print "PASSWORD AUTH"
>         return defer.succeed('test') # <-- YOUR PASSWORD
>
>     def getGenericAnswers(self, name, instruction, prompts):
>         #interactive password authentication
>         print "INTERACTIVE AUTH"
>         response = ['']*len(prompts)
>         for i, p in enumerate(prompts):
>             try:
>                 if('password' in p[0].lower()):
>                     response[i] = 'test' # <-- YOUR PASSWORD
>             except:
>                 pass
>         #The response is always a sequence, and the length of it is always
>         #identical to the length of prompts
>         return defer.succeed(response)
>
>
> def sftp(user, host, port):
>     options = ClientOptions()
>
>     options['host'] = host
>     options['port'] = port
>     conn = SFTPConnection()
>     conn._sftp = Deferred()
>     auth = SSHUserAuthClient(user, options, conn)
>     #auth = ClientUserAuth(user, options, conn)
>     #connect(host, port, options, verifyHostKey, auth)
>     connect(host, port, options, None, auth)
>
>     return conn._sftp
>
>
> def transfer(client):
>     d = client.makeDirectory('foobarbaz', {})
>     def cbDir(ignored):
>         print 'Made directory'
>     d.addCallback(cbDir)
>     return d
>
>
> def main():
>     startLogging(stdout)
>
>     user = 'test'
>     host = '192.168.29.129'
>     port = 22
>     d = sftp(user, host, port)
>     d.addCallback(transfer)
>     d.addErrback(err, "Problem with SFTP transfer")
>     d.addCallback(lambda ignored: reactor.stop())
>     reactor.run()
>
>
> if __name__ == '__main__':
>     main()
> <code>
>
> Best regards
>
> SANFO
>
>
>
>
This is a multi-step process.

1) Open the StackOverflow page that you copied the above code from.
2) Actually read the whole answer.
3) Read the documentation for the FileTransferClient class.  It's in the
Twisted API documentation.  It does have an openFile method.
4) Use the openFile method.
5) read and/or write using the returned object, which (as explained in the
SO answer) will adhere to the ISFTPFile interface.  That also has
documentation, which you should probably read.
6) Once you have done all those things, if you still have questions about
_specific_ problems, feel free to ask them.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150414/7ccaa96d/attachment-0001.html>

From sanfo.halidou at yahoo.fr  Wed Apr 15 01:11:13 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Wed, 15 Apr 2015 07:11:13 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>
References: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>
Message-ID: <151872264.3657221.1429081873514.JavaMail.yahoo@mail.yahoo.com>

Thank you for your reply.In fact I found this code in many forums like S.O and I tried to understand it, by doing exactly ?all steps you recommend in you response. The difficulty I have found is with the method of the returned object of openFile method of the FileTransferClient class. This returned object that adhere to ISFTP interface; has two methods to write and read: "writeChunk" and "readChunk". My problem is to use these last functions or methods to perform a file transfert (uploading and downloading) ?from my local machine running twisted to a SFTP server and vise-versa.Can you give me an code example to perform this task? with the methods of the openFile object.
Sanfo

?


? ? ? ? 


     Le Mercredi 15 avril 2015 6h22, Kevin Horn <kevin.horn at gmail.com> a ?crit :
   

 On Tue, Apr 14, 2015 at 6:47 AM, halidou SANFO <sanfo.halidou at yahoo.fr> wrote:

Hi everybody,I am student and need help of any one.I am working on internship and I have to implement a SFTP client usign twisted conch module.I have program thoe code to establish th ssh tunnel using password authentication. I arrive to create directory with "MakeDirectory" method of FileTransfertClient class.But my objective is to upload and download files and the FileTransfertClient ?class has no method [or as I konw ] to do that.
Can you help me with way to do the uploading and the downloding with twisted conch?
Here is my program.<code>'''Created on 8 avr. 2015
@author: hsanfo'''
from sys import stdout
from twisted.python.log import startLogging, err
from twisted.internet import reactorfrom twisted.internet.defer import Deferred
from twisted.conch.ssh.common import NSimport twisted.conch.scripts.cftp.ClientOptionsfrom twisted.conch.scripts.cftp import ClientOptionsfrom twisted.conch.ssh.filetransfer import FileTransferClientfrom twisted.conch.client.connect import connectfrom twisted.conch.client.default import SSHUserAuthClient, verifyHostKeyfrom twisted.conch.ssh.connection import SSHConnectionfrom twisted.conch.ssh.channel import SSHChannel
from twisted.conch.ssh import keys, userauthfrom twisted.internet import defer
class SFTPSession(SSHChannel):? ? name = 'session'
? ? def channelOpen(self, whatever):? ? ? ? d = self.conn.sendRequest(? ? ? ? ? ? self, 'subsystem', NS('sftp'), wantReply=True)? ? ? ? d.addCallbacks(self._cbSFTP)

? ? def _cbSFTP(self, result):? ? ? ? client = FileTransferClient()? ? ? ? client.makeConnection(self)? ? ? ? self.dataReceived = client.dataReceived? ? ? ? self.conn._sftp.callback(client)


class SFTPConnection(SSHConnection):? ??? ? def serviceStarted(self):? ? ? ? self.openChannel(SFTPSession())

class ClientUserAuth(userauth.SSHUserAuthClient):? ? def getPassword(self, prompt = None):? ? ? ? #normal password authentication? ? ? ? print "PASSWORD AUTH"? ? ? ? return defer.succeed('test') # <-- YOUR PASSWORD
? ? def getGenericAnswers(self, name, instruction, prompts):? ? ? ? #interactive password authentication? ? ? ? print "INTERACTIVE AUTH"? ? ? ? response = ['']*len(prompts)? ? ? ? for i, p in enumerate(prompts):? ? ? ? ? ? try:? ? ? ? ? ? ? ? if('password' in p[0].lower()):? ? ? ? ? ? ? ? ? ? response[i] = 'test' # <-- YOUR PASSWORD? ? ? ? ? ? except:? ? ? ? ? ? ? ? pass? ? ? ? #The response is always a sequence, and the length of it is always? ? ? ? #identical to the length of prompts? ? ? ? return defer.succeed(response) ??? ??
def sftp(user, host, port):? ? options = ClientOptions()? ??? ? options['host'] = host? ? options['port'] = port? ? conn = SFTPConnection()? ? conn._sftp = Deferred()? ? auth = SSHUserAuthClient(user, options, conn)? ? #auth = ClientUserAuth(user, options, conn)? ? #connect(host, port, options, verifyHostKey, auth)? ? connect(host, port, options, None, auth)? ??? ? return conn._sftp

def transfer(client):? ? d = client.makeDirectory('foobarbaz', {})? ? def cbDir(ignored):? ? ? ? print 'Made directory'? ? d.addCallback(cbDir)? ? return d

def main():? ? startLogging(stdout)
? ? user = 'test'? ? host = '192.168.29.129'? ? port = 22? ? d = sftp(user, host, port)? ? d.addCallback(transfer)? ? d.addErrback(err, "Problem with SFTP transfer")? ? d.addCallback(lambda ignored: reactor.stop())? ? reactor.run()

if __name__ == '__main__':? ? main()<code>?Best regards
SANFO




This is a multi-step process.?
1) Open the StackOverflow page that you copied the above code from.2) Actually read the whole answer.3) Read the documentation for the FileTransferClient class.? It's in the Twisted API documentation.? It does have an openFile method.4) Use the openFile method.5) read and/or write using the returned object, which (as explained in the SO answer) will adhere to the ISFTPFile interface.? That also has documentation, which you should probably read.6) Once you have done all those things, if you still have questions about _specific_ problems, feel free to ask them.


--Kevin Horn
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150415/431c91f7/attachment.html>

From exarkun at twistedmatrix.com  Wed Apr 15 05:13:33 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Apr 2015 11:13:33 -0000
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
References: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <20150415111333.6423.1329137704.divmod.xquotient.324@top>

On 14 Apr, 11:47 am, sanfo.halidou at yahoo.fr wrote:
>Hi everybody,I am student and need help of any one.I am working on 
>internship and I have to implement a SFTP client usign twisted conch 
>module.I have program thoe code to establish th ssh tunnel using 
>password authentication. I arrive to create directory with 
>"MakeDirectory" method of FileTransfertClient class.But my objective is 
>to upload and download files and the FileTransfertClient ?class has no 
>method [or as I konw ] to do that.
>Can you help me with way to do the uploading and the downloding with 
>twisted conch?
>Here is my program.<code>'''Created on 8 avr. 2015
>@author: hsanfo'''

Hi Sanfo,

You may want to be a little more careful to preserve 
ownership/authorship information.  Your presentation of this code, 
particularly with an "author" tag including only your name, gives a 
strong impression that you are the author and copyright holder of this 
program.

Doing this sort of thing can get you into some trouble.  You may want to 
familiarise yourself with stackoverflow's terms of service and ask 
someone where you're interning to give you a basic overview of copyright 
law as it pertains to software.

Good luck,
Jean-Paul


From sanfo.halidou at yahoo.fr  Wed Apr 15 07:41:50 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Wed, 15 Apr 2015 13:41:50 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <20150415111333.6423.1329137704.divmod.xquotient.324@top>
References: <20150415111333.6423.1329137704.divmod.xquotient.324@top>
Message-ID: <1547102394.4138386.1429105310284.JavaMail.yahoo@mail.yahoo.com>

?HiThank you.I forgot to delete the default add of eclipse.Sorry!!
sanfo

? ? ? ? 


     Le Mercredi 15 avril 2015 13h13, "exarkun at twistedmatrix.com" <exarkun at twistedmatrix.com> a ?crit :
   

 On 14 Apr, 11:47 am, sanfo.halidou at yahoo.fr wrote:
>Hi everybody,I am student and need help of any one.I am working on 
>internship and I have to implement a SFTP client usign twisted conch 
>module.I have program thoe code to establish th ssh tunnel using 
>password authentication. I arrive to create directory with 
>"MakeDirectory" method of FileTransfertClient class.But my objective is 
>to upload and download files and the FileTransfertClient ?class has no 
>method [or as I konw ] to do that.
>Can you help me with way to do the uploading and the downloding with 
>twisted conch?
>Here is my program.<code>'''Created on 8 avr. 2015
>@author: hsanfo'''

Hi Sanfo,

You may want to be a little more careful to preserve 
ownership/authorship information.? Your presentation of this code, 
particularly with an "author" tag including only your name, gives a 
strong impression that you are the author and copyright holder of this 
program.

Doing this sort of thing can get you into some trouble.? You may want to 
familiarise yourself with stackoverflow's terms of service and ask 
someone where you're interning to give you a basic overview of copyright 
law as it pertains to software.

Good luck,
Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150415/56ad92f5/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Apr 15 21:09:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 15 Apr 2015 23:09:06 -0400
Subject: [Twisted-Python] [Cryptography-dev] [ANN] pyOpenSSL 0.15
In-Reply-To: <CAFRnB2UgfLHx47ScAH=VUFz14wE32aXstaOHNSzzutmaEYP-hw@mail.gmail.com>
References: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
 <CABi-WVw83sxK2quJGgMnQvkO+Go0k-EKSCOxnbza0f1bhmKMcg@mail.gmail.com>
 <CAFRnB2UgfLHx47ScAH=VUFz14wE32aXstaOHNSzzutmaEYP-hw@mail.gmail.com>
Message-ID: <FF5ABF60-1D40-4149-9420-DCD91CF2D7D7@twistedmatrix.com>

Thank you very much to Jean-Paul and Hynek for getting out this most recent release! (And thanks to Hynek for my opportunity to contribute my first patch to pyOpenSSL ;-)).

-glyph

> On Apr 15, 2015, at 14:10, Alex Gaynor <alex.gaynor at gmail.com> wrote:
> 
> Thank you for your years of maintenance of pyOpenSSL!
> 
> Alex
> 
> On Wed, Apr 15, 2015 at 2:02 PM, Jean-Paul Calderone <jean-paul at clusterhq.com <mailto:jean-paul at clusterhq.com>> wrote:
> On Tue, Apr 14, 2015 at 12:54 PM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> Greetings fellow Pythoneers,
> 
> I'm happy to announce that pyOpenSSL 0.15 is now available.
> 
> 
> Congrats on getting the release out, Hynek.  Thanks once again for stepping in to take over the lead role on the pyOpenSSL project.  Thanks also to all of the PyCA folks at the PyCon sprints on Monday to prepare for this release.
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Cryptography-dev mailing list
> Cryptography-dev at python.org <mailto:Cryptography-dev at python.org>
> https://mail.python.org/mailman/listinfo/cryptography-dev <https://mail.python.org/mailman/listinfo/cryptography-dev>
> 
> 
> 
> 
> -- 
> "I disapprove of what you say, but I will defend to the death your right to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
> "The people's good is the highest law." -- Cicero
> GPG Key fingerprint: 125F 5C67 DFE9 4084
> _______________________________________________
> Cryptography-dev mailing list
> Cryptography-dev at python.org
> https://mail.python.org/mailman/listinfo/cryptography-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150415/233e0612/attachment.html>

From trac at twistedmatrix.com  Sun Apr 19 00:05:28 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Apr 2015 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1429423528.23.46657603101031429@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150419/c296cd9c/attachment.html>

From adi at roiban.ro  Tue Apr 21 09:25:29 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 21 Apr 2015 16:25:29 +0100
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
 Application Layer Protocol Negotiation
Message-ID: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>

Hi,

I just want to let you know about this patch which is in work :
https://twistedmatrix.com/trac/ticket/7860

I did an initial review but it would help to get more feedback for this new API.

Also it depends on a new pyOpenSSL 0.15 version. Do we have a
buildslave with this version?
What is the process of testing / reviewing this kind of patches?

Many thanks!
-- 
Adi Roiban


From hawkowl at atleastfornow.net  Tue Apr 21 09:47:36 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 21 Apr 2015 23:47:36 +0800
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
	Application Layer Protocol Negotiation
In-Reply-To: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
References: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
Message-ID: <5AB2AFD2-5AD6-40FE-A935-B73C326C6E97@atleastfornow.net>


> On 21 Apr 2015, at 23:25, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I just want to let you know about this patch which is in work :
> https://twistedmatrix.com/trac/ticket/7860
> 
> I did an initial review but it would help to get more feedback for this new API.
> 
> Also it depends on a new pyOpenSSL 0.15 version. Do we have a
> buildslave with this version?
> What is the process of testing / reviewing this kind of patches?
> 
> Many thanks!
> --
> Adi Roiban

Oooh, exciting.

I do not think we have a buildslave with this version. My Debian 7 2.7/3.3/3.4/3.5a4 builders, when I get them up, will have 0.15, with an OpenSSL supporting NPN but not ALPN (1.0.2 or greater for ALPN, Debian 7 has 1.0.1.).

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150421/fa85b3f3/attachment.pgp>

From p.mayers at imperial.ac.uk  Tue Apr 21 10:10:33 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 21 Apr 2015 17:10:33 +0100
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
 Application Layer Protocol Negotiation
In-Reply-To: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
References: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
Message-ID: <55367679.50209@imperial.ac.uk>

On 21/04/15 16:25, Adi Roiban wrote:
> Hi,
>
> I just want to let you know about this patch which is in work :
> https://twistedmatrix.com/trac/ticket/7860

Nice.

>
> I did an initial review but it would help to get more feedback for this new API.

I would very, very much like to see something along the lines of a 
factory-of-factories which handles creating the protocol instances on 
connections automatically.

Straw-man API:

class NegoFactory(tls.NegoFactory):
     nextProtocols = ('h2', 'http/1.1')

     def buildProtocol(self, addr, nextproto):
       if nextproto=='h2':
         return H2Proto()
       elif nextproto=='http/1.1':
         return HttpProto()
       else:
         raise NotImplemented()

f = NegoFactory()
listenSSL(port, f)

The basic protocol level support is great, but it'll be much easier to 
use if there's a Twisted-like API on top of it.

But don't block the main ticket - open another one up maybe?


From hawkowl at atleastfornow.net  Wed Apr 22 02:04:05 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 16:04:05 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
Message-ID: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>

Hi,

I think that Twisted should deprecate subproject packaging -- they aren't uploaded to pip, don't support Python 3, I don't think we have docs for using them anywhere, and when included in downstream they usually only end up in confusion as various imports fail but some succeed due to only some subprojects being installed. Eventuall removing them means we have less code (and only one setup.py + setup3.py), less packages, and simplifies things.

It does mean that you can't *just* get Twisted Web, but Twisted Core is so big (internet, trial, amp, python, logger, cred, protocols -- even positioning is in there) that the size difference is marginal. For example, uncompressed Twisted (without the docs) is 14MB, while Core alone is 7MB. Assuming that you want to use Twisted Web, you'll need Twisted-Web and Twisted-Names (because not using Twisted Names in web.http.Request is deprecated), which is ~9MB. The difference in tarball size is even less -- Twisted without docs being 2.2MB and Twisted Core + Web + Names being 1.4MB.

Plus, I am not sure that there is "subprojects" really, anymore -- it's all just Twisted.

So, I think we should:

- Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
- Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
- Migrate Twisted's source dist to being done by "python setup.py sdist" instead of manually assembling the tarball. This means we can generate the requisite PKG-INFO metadata automatically. This should be done for the main tarball (which is uploaded to PyPI) in maybe 15.2, but not the subproject tarballs (Twisted Core + rest) which will remain the same until they are removed in 16.0.
- Replace manually uploading these distributions to PyPI and use twine to automate it for 15.2, when Twisted's tarball has the needed PKG-INFO (from being generated by sdist). Twine doesn't support uploading .msis, but as we now have Python wheels on PyPI, I think we can do without uploading MSIs, and just have them on the website.

Keeping the projects topfiles as they are I think is good -- although I am not sure if having a NEWS in each subproject is useful. Maybe we should just have the one NEWS file once 16.0 lands, since the other ones wouldn't be packaged, and are therefore less useful.

As for downstream:
- Apple includes all of Twisted, so I don't think this will affect them.
- Ubuntu and Debian package the subprojects separately. I guess they would have to make dummy packages that depend on the monolithic python-twisted instead.
- Fedora (so Red Hat too?) have obsoleted the subprojects and point them at python-twisted instead, so they don't package the subprojects.
- FreeBSD packages the Twisted subprojects separately, so they would have to do the same as Debian to migrate.

Overall, I don't think this adversely affects downstream in the long term -- it does what Red Hat did as of Fedora 21, and it'll end up being less packages overall.

I think this is a good idea and am willing to put the work in to implement this. Does anyone object to this? Is there a use case for keeping the subprojects packagable that I don't know about?

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/4db276c1/attachment.pgp>

From hs at ox.cx  Wed Apr 22 02:20:33 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Apr 2015 10:20:33 +0200
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <B38ABD39-02F8-4F89-8C41-FF9256C673DA@ox.cx>

> I think this is a good idea and am willing to put the work in to implement this. Does anyone object to this? Is there a use case for keeping the subprojects packagable that I don't know about?

+10

1. The split is due to Twisted not fitting on actual diskettes in ancient times.
2. It adds a frustrating amount of complexity.

?h

From p.mayers at imperial.ac.uk  Wed Apr 22 05:00:36 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Apr 2015 12:00:36 +0100
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <55377F54.9060903@imperial.ac.uk>

On 22/04/15 09:04, HawkOwl wrote:
> Hi,
>
> I think that Twisted should deprecate subproject packaging -- they

Agreed. It's largely pointless.


From glyph at twistedmatrix.com  Wed Apr 22 05:46:53 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Apr 2015 07:46:53 -0400
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>


> On Apr 22, 2015, at 04:04, HawkOwl <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:

> So, I think we should:
> 
> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.

If anything, this seems like too generous a timeline to me.  We have the deprecation process to preserve API stability.  Do the subproject setup.py's expose any API surface?  "from twisted.web import setup" already appears to be an ImportError to me.  I don't think that the subproject release process has helped anyone in a long time.  Is there any reason why we can't just drop it from the next release, other than "the change might not land in time"?

One word of warning - do try to reach out and contact the package maintainers directly, as they may not follow this list closely, and for some reason they seem keen on separated release tarballs.  They might have a compelling use-case (though I doubt it), but at least they should be notified so that unified packages show up promptly after the release where we first issue them.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/697582a8/attachment.html>

From exarkun at twistedmatrix.com  Wed Apr 22 05:49:59 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Apr 2015 11:49:59 -0000
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <20150422114959.6203.778518084.divmod.xquotient.6@top>

On 08:04 am, hawkowl at atleastfornow.net wrote:
>Hi,
>
>I think that Twisted should deprecate subproject packaging

You probably won't hear much if any disagreement with this proposal on 
this list.

The sub-projects were never for people who like and are into Twisted. 
They were a tool to help convince people who don't use Twisted yet that 
it's not an unapproachable monolith.

We could discuss whether they have been effective in this regard but if 
you want to hear from people who *might* actually benefit from the 
split, you probably need to talk to people who aren't using Twisted.

Jean-Paul


From hawkowl at atleastfornow.net  Wed Apr 22 05:55:48 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 19:55:48 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
Message-ID: <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>


> On 22 Apr 2015, at 19:46, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Apr 22, 2015, at 04:04, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> So, I think we should:
>> 
>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
> 
> If anything, this seems like too generous a timeline to me.  We have the deprecation process to preserve API stability.  Do the subproject setup.py's expose any API surface?  "from twisted.web import setup" already appears to be an ImportError to me.  I don't think that the subproject release process has helped anyone in a long time.  Is there any reason why we can't just drop it from the next release, other than "the change might not land in time"?
> 
> One word of warning - do try to reach out and contact the package maintainers directly, as they may not follow this list closely, and for some reason they seem keen on separated release tarballs.  They might have a compelling use-case (though I doubt it), but at least they should be notified so that unified packages show up promptly after the release where we first issue them.
> 
> -glyph

The timeline generosity is simply so that downstream maintainers can get their stuff sorted before we drop it. I'm not sure how fast they move, and if all the major ones do it before that, I guess we can drop it early.

Since there doesn't seem to be any "omg no Hawkie what are you doing" from either you or JP, and otherwise "yes" from people I've asked/on this list so far, I'm guessing that I'll take the initiative and reach out to the downstream maintainers with some degree of "this is what we're doing now unless there's a very good reason".

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/84beead3/attachment.pgp>

From hawkowl at atleastfornow.net  Wed Apr 22 06:38:07 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 20:38:07 +0800
Subject: [Twisted-Python] Notice for downstream package maintainers:
	Subproject packages are going away
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <2411246C-6FAD-4A33-8B89-93F2B89BE2BF@atleastfornow.net>

Hi,

As discussed in the ML thread (http://twistedmatrix.com/pipermail/twisted-python/2015-April/029386.html), and with general "yes"ness, I think I should make it official -- Twisted subproject packages are going away.

Downstream packagers that package Twisted as multiple subprojects (core+[mail,conch,names,etc]) should replace them with one Twisted package, from the source tarball released under `http://twistedmatrix.com/Releases/Twisted/{VERSION}/Twisted-{VERSION}.tar.bz2`.

The roadmap for this is to completely drop the subproject packages at 16.0 at the latest, to give downstream packagers time to update. If the major distributions that package Twisted by using the subprojects[1] (FreeBSD, Debian, Gentoo) migrate to the one Twisted package before then, there is no use releasing the subproject packages and they will be dropped that release.

- Hawkie

[1] Fedora and Arch already just have the one python-twisted package.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/229989ed/attachment-0001.pgp>

From adi at roiban.ro  Wed Apr 22 07:28:22 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Apr 2015 14:28:22 +0100
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
Message-ID: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>

>>> So, I think we should:
>>>
>>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.

I am ok with deprecating this ... but I hope that this will not
discourage the effort to decouple the Twisted subprojects.

I would like to see the subproject developed as independent
projects... this should help enforcing the decoupling and would speed
up the test suite.

Right now if you make a change in twisted.positioning, buildbot will
run all tests :(

-- 
Adi Roiban


From kevin.horn at gmail.com  Wed Apr 22 11:37:56 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 22 Apr 2015 12:37:56 -0500
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
Message-ID: <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>

Agreed that this is a good idea, though I'd still like to see NEWS broken
out by "subproject" (or maybe we should say "topic" now?).  I don't care
whether it's in the same file or not, but when a new Twisted release comes
out I find reviewing changes much easier if I can think about one "topic"
at a time.

Otherwise +100.  I'm annoyed every time I have to install a downstream
Twisted package and it isn't _all_ of Twisted.

On Wed, Apr 22, 2015 at 8:28 AM, Adi Roiban <adi at roiban.ro> wrote:

> >>> So, I think we should:
> >>>
> >>> - Deprecate the subproject setup.pys starting with 15.2 and stop
> packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July,
> 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases
> + 1 major release notice).
> >>> - Remove the support code for subprojects in twisted.python._release +
> the release scripts in the 16.0 release.
>
> I am ok with deprecating this ... but I hope that this will not
> discourage the effort to decouple the Twisted subprojects.
>
> I would like to see the subproject developed as independent
> projects... this should help enforcing the decoupling and would speed
> up the test suite.
>
> Right now if you make a change in twisted.positioning, buildbot will
> run all tests :(
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/892142bb/attachment.html>

From hawkowl at atleastfornow.net  Wed Apr 22 13:31:48 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 23 Apr 2015 03:31:48 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
Message-ID: <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>


> On 23 Apr 2015, at 01:37, Kevin Horn <kevin.horn at gmail.com> wrote:
> 
> Agreed that this is a good idea, though I'd still like to see NEWS broken out by "subproject" (or maybe we should say "topic" now?).  I don't care whether it's in the same file or not, but when a new Twisted release comes out I find reviewing changes much easier if I can think about one "topic" at a time.

Do you mean keeping the NEWS file as-is currently? I think that's a good idea. It's a nice, logical grouping.

I personally think that it should pruned down a little -- Twisted Runner & Pair don't really need their own sections, and Twisted News & Conch could probably be rolled into the core changelist as well. Not sure, I guess we'll come to that when there's tickets in review for it. :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150423/4ae23db2/attachment.pgp>

From glyph at twistedmatrix.com  Wed Apr 22 18:01:52 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Apr 2015 20:01:52 -0400
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
Message-ID: <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>


> On Apr 22, 2015, at 09:28, Adi Roiban <adi at roiban.ro> wrote:
> 
>>>> So, I think we should:
>>>> 
>>>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>>>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
> 
> I am ok with deprecating this ... but I hope that this will not
> discourage the effort to decouple the Twisted subprojects.

There is not really any such effort underway.  However, if anything, this change would make such an effort easier.  If we want to release the projects separately, we should maintain them separately; the lesson of this "subproject" split is that what users want, to perceive that projects are more "lightweight", is a different "front door" to each project - different websites, different documentation indexes, different bug trackers - and not necessarily just a smaller download.  I'm pretty sure that if we split everything up but the actual releases we'd have better luck convincing people twisted is not hard to understand.

One immediate thing I think we should decouple, though, are our native dependencies.  IOCPReactor should remain in Twisted, but iocpsupport should be a separate, optional dependency, available as an extra.  Similarly, _initgroups, sendmsg, portmap, and raiser should all be optional dependencies, so that Twisted itself can be a pure wheel, and you can opt in to enhanced functionality by installing extras.

> I would like to see the subproject developed as independent
> projects... this should help enforcing the decoupling and would speed
> up the test suite.

Speeding up the test suite should be accomplished by actually fixing and optimizing the tests, not by chopping big sections of it off.  The amount of tests we have right now can run very quickly; but there are two immediate problems:

1. we are not leveraging twistd -j, and since we have no buildbots that run it, we keep making changes that break it for our test suite.  We should introduce a builder that runs the tests in parallel.
2. many of the tests still return Deferreds when they should not, spin the reactor, wait for real timeouts, and so on.  we should endeavor to reduce the number of real-IO tests as much as possible.

> Right now if you make a change in twisted.positioning, buildbot will
> run all tests :(

Maybe we could speed up twisted.positioning's tests without sacrificing quality, but we would need to continue to run twisted.positioning's tests for every change to twisted core regardless, even if they were separate projects, or we would be reducing the amount of integration coverage received by twisted core.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150422/94056d21/attachment.html>

From hawkowl at atleastfornow.net  Wed Apr 22 23:45:56 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 23 Apr 2015 13:45:56 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>
Message-ID: <FFF99C5E-C405-4C13-B178-DEBAE7A48364@atleastfornow.net>


> On 23 Apr 2015, at 08:01, Glyph <glyph at twistedmatrix.com> wrote:
> 
> One immediate thing I think we should decouple, though, are our native dependencies.  IOCPReactor should remain in Twisted, but iocpsupport should be a separate, optional dependency, available as an extra.  Similarly, _initgroups, sendmsg, portmap, and raiser should all be optional dependencies, so that Twisted itself can be a pure wheel, and you can opt in to enhanced functionality by installing extras.
> 

Also worth noting, pulling twisted.python.constants out into a separate package has a PR open so that part of this can become reality: https://github.com/twisted/constantly/pull/1

- Hawkie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150423/c0b048e3/attachment.pgp>

From adi at roiban.ro  Fri Apr 24 00:41:31 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 07:41:31 +0100
Subject: [Twisted-Python] Using six for Python3 porting
Message-ID: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>

Hi,

I feel that twisted.python.compat is slowly duplicating / reinventing
an important part of the six code.

Code which does not import from  twisted.python.compat will have all
kind of ad-hoc / in module code to handle differences between py2 and
py3 and many if _PY3 conditional blocks.

What do you say if we add six as dependency for twisted ?

In case you don't want six as a dependency, it can be copied in
twisted code base and make it available from twisted.python.six or a
similar package.

-- 
Adi Roiban


From glyph at twistedmatrix.com  Fri Apr 24 01:00:21 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Apr 2015 03:00:21 -0400
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>


> On Apr 24, 2015, at 02:41, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.
> 
> Code which does not import from  twisted.python.compat will have all
> kind of ad-hoc / in module code to handle differences between py2 and
> py3 and many if _PY3 conditional blocks.
> 
> What do you say if we add six as dependency for twisted ?
> 
> In case you don't want six as a dependency, it can be copied in
> twisted code base and make it available from twisted.python.six or a
> similar package.

I think that this is basically the right thing to do, since almost all of our optional dependencies depend on it.  I'm somewhat surprised that zope.interface hasn't forced this on us already, honestly; what are they doing for a compatibility layer?

I don't want to ssh in to 25 builders and manually install six on each one though.  We should figure out a better dependency management solution for the build fleet so this doesn't have to be a hassle.  (And also to make coverage of certain things easier; for example, the tests fail currently if you install sphinx.)  The first step in this is probably removing me as a bottleneck for administrative tasks, which we are already working on (thank you adi and hawkowl).

-g

From adi at roiban.ro  Fri Apr 24 01:10:30 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:10:30 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <20150403004329.6423.375338749.divmod.xquotient.129@top>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
Message-ID: <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>

On 3 April 2015 at 01:43,  <exarkun at twistedmatrix.com> wrote:
> On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>>
>> Hi,
>>
>> I would like suggest the following changes regarding the way repos are
>> organized in GitHub.
>>
>> Move all twisted-infra repos into Twisted organization.. and maybe
>> merge many twisted-infra repos into braid.
>>
>> Move treq, klein, txmongo, filepath... divmod projects into a new
>> organization dedicated to projects which are part of Twisted
>> ecosystem. Any project which imports Twisted can be part of it.
>>
>> What do you say?
>
>
> Perhaps you can explain why someone would want to do this.  As is, it sounds
> like a lot of busy work that, at best, will confuse and disrupt people.  If
> you explain what benefit would come from making this change, maybe it will
> be easier to see why it's a good idea.

The goal is for Twisted developers to monitor a single organization.

Right now, if I check all issues [1] or pull request from Twisted
organization I have filter a lot of repos.

When wearing the Twisted core dev hat I should only care about twisted
/ twistedcheckers / twisted-dev-tools / news-builder / pydoctor.

Why should I care about txmongo or need to create a custom filter to
exclude such projects?

As a twisted core dev I should also care for the twisted-infra since
it its results are used by every dev.

[1] https://github.com/issues?user=twisted

-- 
Adi Roiban


From glyph at twistedmatrix.com  Fri Apr 24 01:25:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Apr 2015 03:25:14 -0400
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
Message-ID: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>


> On Apr 24, 2015, at 03:10, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 3 April 2015 at 01:43,  <exarkun at twistedmatrix.com> wrote:
>> On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>>> 
>>> Hi,
>>> 
>>> I would like suggest the following changes regarding the way repos are
>>> organized in GitHub.
>>> 
>>> Move all twisted-infra repos into Twisted organization.. and maybe
>>> merge many twisted-infra repos into braid.
>>> 
>>> Move treq, klein, txmongo, filepath... divmod projects into a new
>>> organization dedicated to projects which are part of Twisted
>>> ecosystem. Any project which imports Twisted can be part of it.
>>> 
>>> What do you say?
>> 
>> 
>> Perhaps you can explain why someone would want to do this.  As is, it sounds
>> like a lot of busy work that, at best, will confuse and disrupt people.  If
>> you explain what benefit would come from making this change, maybe it will
>> be easier to see why it's a good idea.
> 
> The goal is for Twisted developers to monitor a single organization.
> 
> Right now, if I check all issues [1] or pull request from Twisted
> organization I have filter a lot of repos.
> 
> When wearing the Twisted core dev hat I should only care about twisted
> / twistedcheckers / twisted-dev-tools / news-builder / pydoctor.
> 
> Why should I care about txmongo or need to create a custom filter to
> exclude such projects?
> 
> As a twisted core dev I should also care for the twisted-infra since
> it its results are used by every dev.
> 
> [1] https://github.com/issues?user=twisted <https://github.com/issues?user=twisted>

Many developers don't care about working on the tooling themselves either.  Why should they have to create a custom filter rather than you?

This is not to be dismissive of your interest in our development tooling.  The fact that you are working on maintaining it is of great benefit to all other twisted developers, but the reason it is of great benefit is expressly because they do not have to care so much about it any more :).

The idea behind the current structure is that the twisted org includes application code that users use, so if a user looks at it they get a coherent listing of things (including twisted itself) that they might want to use.  The infra repository lists tools that we use to develop twisted, not things that users would be interested in downloading themselves, unless they want to develop another project like Twisted (which is quite a different thing from _using_ twisted or its ecosystem).

In any case, while I hate to say this because, again, it sounds really dismissive, it sounds to me like you need to configure your github client somehow to match your personal tastes, rather than restructure the project to accommodate them.  The alternative sounds like a terrible confusing mess to me for first-time contributors and new users, and I think they are inherently less able to create filters and customize their experience, so they should see the orgs as they are presently.

(There may still be some call for an "ecosystem" repository; I don't know how many Twisted developers really care about txmongo at all.  But I think it's nice to see so much ecosystem stuff in one place.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150424/be2e2ed7/attachment.html>

From adi at roiban.ro  Fri Apr 24 01:33:13 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:33:13 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
Message-ID: <CAFycZ9dJpWf22iC+oiz2UuW7r2cds5k-+9MexAOHQj5j3EZQvw@mail.gmail.com>

On 24 April 2015 at 08:25, Glyph <glyph at twistedmatrix.com> wrote:
>
> Many developers don't care about working on the tooling themselves either.
> Why should they have to create a custom filter rather than you?

[snip]

Thanks. No problem!

-- 
Adi Roiban


From adi at roiban.ro  Fri Apr 24 01:49:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:49:14 +0100
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
 <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>
Message-ID: <CAFycZ9cm_1ksd+Xpcq_9PTBruawa5-vDFiD2KCerg-38k9c_RQ@mail.gmail.com>

On 24 April 2015 at 08:00, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Apr 24, 2015, at 02:41, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> I feel that twisted.python.compat is slowly duplicating / reinventing
>> an important part of the six code.
>>
>> Code which does not import from  twisted.python.compat will have all
>> kind of ad-hoc / in module code to handle differences between py2 and
>> py3 and many if _PY3 conditional blocks.
>>
>> What do you say if we add six as dependency for twisted ?
>>
>> In case you don't want six as a dependency, it can be copied in
>> twisted code base and make it available from twisted.python.six or a
>> similar package.
>
> I think that this is basically the right thing to do, since almost all of our optional dependencies depend on it.  I'm somewhat surprised that zope.interface hasn't forced this on us already, honestly; what are they doing for a compatibility layer?

They have this:
https://github.com/zopefoundation/zope.interface/blob/master/src/zope/interface/_compat.py

> I don't want to ssh in to 25 builders and manually install six on each one though.  We should figure out a better dependency management solution for the build fleet so this doesn't have to be a hassle.  (And also to make coverage of certain things easier; for example, the tests fail currently if you install sphinx.)  The first step in this is probably removing me as a bottleneck for administrative tasks, which we are already working on (thank you adi and hawkowl).

I am happy to help with updating the builders as long as there is
someone willing to review the changes.

At this stage I just want to know if we want six in Twisted.

We can also start with distributing six together with Twisted code and
move it outside twisted once builders are fixed.

-- 
Adi Roiban


From dynamicgl at gmail.com  Fri Apr 24 02:54:01 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Fri, 24 Apr 2015 16:54:01 +0800
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
Message-ID: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>

>
>
> Many developers don't care about working on the tooling themselves
> either.  Why should they have to create a custom filter rather than you?
>
> This is not to be dismissive of your interest in our development tooling.
> The fact that you are working on maintaining it is of *great* benefit to
> all other twisted developers, but the *reason* it is of great benefit is
> expressly because they do not have to care so much about it any more :).
>
> The idea behind the current structure is that the twisted org includes
> application code that users use, so if a user looks at it they get a
> coherent listing of things (including twisted itself) that they might want
> to use.  The infra repository lists tools that we use to develop twisted,
> not things that users would be interested in downloading themselves, unless
> they want to develop another project like Twisted (which is quite a
> different thing from _using_ twisted or its ecosystem).
>
> In any case, while I hate to say this because, again, it sounds really
> dismissive, it sounds to me like you need to configure your github client
> somehow to match your personal tastes, rather than restructure the project
> to accommodate them.  The alternative sounds like a terrible confusing mess
> to me for first-time contributors and new users, and I think they are
> inherently less able to create filters and customize their experience, so
> they should see the orgs as they are presently.
>
> (There may still be some call for an "ecosystem" repository; I don't know
> how many Twisted developers really care about txmongo at all.  But I think
> it's nice to see so much ecosystem stuff in one place.)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

     off-topic a bit. I care about txmongo. I actually plan to use it in
production soon.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150424/5f36873b/attachment-0001.html>

From hs at ox.cx  Fri Apr 24 04:26:55 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 24 Apr 2015 12:26:55 +0200
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <C7EFFF41-162F-4DF2-9D61-C7E62A6C5F99@ox.cx>

On 24 Apr 2015, at 8:41, Adi Roiban wrote:

> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.

I?m +1 on this too.  I was a bit hesitant in the past but duplicating 
compatibility code everywhere is becoming ridiculous and a hassle.


From ralphm at ik.nu  Fri Apr 24 05:57:26 2015
From: ralphm at ik.nu (Ralph Meijer)
Date: Fri, 24 Apr 2015 13:57:26 +0200
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <553A2FA6.6060702@ik.nu>

On 2015-04-24 08:41, Adi Roiban wrote:
> Hi,
> 
> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.
> 
> Code which does not import from  twisted.python.compat will have all
> kind of ad-hoc / in module code to handle differences between py2 and
> py3 and many if _PY3 conditional blocks.
> 
> What do you say if we add six as dependency for twisted ?
> 
> In case you don't want six as a dependency, it can be copied in
> twisted code base and make it available from twisted.python.six or a
> similar package.

I vaguely remembered working on this at PyCon in 2014:
https://twistedmatrix.com/trac/ticket/7177

-- 
ralphm


From kevin.horn at gmail.com  Sat Apr 25 12:32:19 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 25 Apr 2015 13:32:19 -0500
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
 <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>
Message-ID: <CA+U=zK04q4=Cj4KX2T_NDEh6JABMYdreuKdGToLW_RYXz9qYfw@mail.gmail.com>

On Wed, Apr 22, 2015 at 2:31 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

>
> > On 23 Apr 2015, at 01:37, Kevin Horn <kevin.horn at gmail.com> wrote:
> >
> > Agreed that this is a good idea, though I'd still like to see NEWS
> broken out by "subproject" (or maybe we should say "topic" now?).  I don't
> care whether it's in the same file or not, but when a new Twisted release
> comes out I find reviewing changes much easier if I can think about one
> "topic" at a time.
>
> Do you mean keeping the NEWS file as-is currently? I think that's a good
> idea. It's a nice, logical grouping.
>
> I personally think that it should pruned down a little -- Twisted Runner &
> Pair don't really need their own sections, and Twisted News & Conch could
> probably be rolled into the core changelist as well. Not sure, I guess
> we'll come to that when there's tickets in review for it. :)
>

Yes, pretty much this.  Runner and Pair could maybe be rolled into Core,
but I think News and Conch should remain separate.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150425/10ff3448/attachment.html>

From glyph at twistedmatrix.com  Sat Apr 25 18:15:43 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Apr 2015 17:15:43 -0700
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
Message-ID: <A6783F12-8066-4823-8224-4636570CC564@twistedmatrix.com>


> On Apr 24, 2015, at 01:54, Gelin Yan <dynamicgl at gmail.com> wrote:
> 
> 
> Many developers don't care about working on the tooling themselves either.  Why should they have to create a custom filter rather than you?
> 
> This is not to be dismissive of your interest in our development tooling.  The fact that you are working on maintaining it is of great benefit to all other twisted developers, but the reason it is of great benefit is expressly because they do not have to care so much about it any more :).
> 
> The idea behind the current structure is that the twisted org includes application code that users use, so if a user looks at it they get a coherent listing of things (including twisted itself) that they might want to use.  The infra repository lists tools that we use to develop twisted, not things that users would be interested in downloading themselves, unless they want to develop another project like Twisted (which is quite a different thing from _using_ twisted or its ecosystem).
> 
> In any case, while I hate to say this because, again, it sounds really dismissive, it sounds to me like you need to configure your github client somehow to match your personal tastes, rather than restructure the project to accommodate them.  The alternative sounds like a terrible confusing mess to me for first-time contributors and new users, and I think they are inherently less able to create filters and customize their experience, so they should see the orgs as they are presently.
> 
> (There may still be some call for an "ecosystem" repository; I don't know how many Twisted developers really care about txmongo at all.  But I think it's nice to see so much ecosystem stuff in one place.)
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> Hi Glyph
> 
>      off-topic a bit. I care about txmongo. I actually plan to use it in production soon.

Nice to know that there are people out there who do care about stuff like this :)

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150425/0e436b3a/attachment.html>

From trac at twistedmatrix.com  Sun Apr 26 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Apr 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1430028315.71.6015899669236836933@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150426/b9835c05/attachment.html>

From psi29a at gmail.com  Mon Apr 27 01:22:15 2015
From: psi29a at gmail.com (bret curtis)
Date: Mon, 27 Apr 2015 09:22:15 +0200
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
Message-ID: <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>

On Fri, Apr 24, 2015 at 10:54 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
> Hi Glyph
>
>      off-topic a bit. I care about txmongo. I actually plan to use it in
> production soon.
>
> Regards
>
> gelin yan
>
>
Glad you do! :D  We use it in production as well!  Just landed MongoDB 3.x
support, but we've still have a way to go to make it 1:1 with PyMongo.

As for an apart ecosystem organization, I don't see any problems with
moving yet again. ;)  I just question the necessity of it right now, it
isn't like we are endlessly scrolling through pypi packages.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/52e20305/attachment.html>

From jerryguitarist at gmail.com  Mon Apr 27 11:57:36 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Mon, 27 Apr 2015 23:27:36 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
Message-ID: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>

Hi everyone!

I have gone through <
http://twisted.readthedocs.org/en/latest/core/howto/logging.html> and <
http://twisted.readthedocs.org/en/latest/core/howto/logger.html>. And I
want to get started helping out with making the move to the new logging
system.

I talked to Glyph and ralphm about this at the PyCon sprints. The main
purpose of this email is that I would like some advice as to how to move
forward. Are there any other docs that I should read? Also, where should I
start? What should be the scope of each individual ticket?

I was talking to adiroiban and hawkowl on IRC about this, and they also
recommended that I send an email to the mailing list before getting
started, so here I am. I would really appreciate it if you could give me
some advice and guidance regarding this. :-)

Thanks,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/6a7a68df/attachment.html>

From brian.costlow at gmail.com  Mon Apr 27 14:05:19 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Mon, 27 Apr 2015 16:05:19 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
Message-ID: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>

Summary: I am having an issue writing data from an object based on
twisted's LineReceiver. Calling self.transport.write from the protocol,
some data makes it through, some does not. Using tcpdump, I am not seeing
the missing data cross the network interface.

Ubuntu LTS 14.04
Python 2.7.6
Twisted 15.0.0

The app recieves a bunch of messages from various upstream servers (not
mine) and either discards?or bends, folds, spindles and muilates and sends
the modified message to a downstream server. The message format is
text-based, proprietary and not mine.

The way it works:

1. The app puts messages, consisting of a tuple of two strings: an id and
the message data, on a queue. The queue is actually a deque on the factory.
2. There's one client protocol instance for sending, it holds a connection
to downstream server. The factory is a reconnecting one, but only if the
connection drops. (I'm not creating a new protocol instance/connection per
message)
3. There's a method on the protocol that checks for messages in the
factory's queue, and sends them, one at a time. It waits for a short ack
text message back from the receiving end, or times out (my app's timeout,
not a network stack one) before sending the next message, if any. Code for
the sending piece is below.
4. The downstream end (an app not under my control) is not getting all the
messages. If my timeout check runs, and there's not been a returned ack
message yet, invariably the sysadmins for the downstream system report they
never got that message.

def check_for_send(self):
    if not self.in_send_message:
        try:
            self.in_send_message = True
            msg = self.factory.queue.popleft()
            try:
                self.waiting_id = msg[0]
                log.msg("Sending Message: {0}".format(msg[0]))
                raw_msg = "".join([self.MSG_START, msg[1], self.MSG_END,
self.delimiter])
                threads.deferToThread(self._dump_raw_message, msg[0],
raw_msg)
                self.transport.write(raw_msg)
                reactor.callLater(30, self.check_for_timeout, msg[0])
            except:
                log.msg("Error sending Message: {0}".format(msg[0]))
                log.err()
                self.factory.add_message(msg)
                self.waiting_id = ""
                self.in_send_message = False
        except IndexError:
            self.in_send_message = False
        finally:
            reactor.callLater(0, self.check_for_send)
    else:
        reactor.callLater(1, self.check_for_send)

Mostly looking for some advice on further debugging this, as whenever I've
called self.transport.write on a lineReceiver over tcp before, it "just
worked."

Observations.

1. The event loop doesn't appear to be getting stuck. Messages that don't
arrive downstream are interleaved with those that do. And the other part of
the app that is receiving messages from upstream keeps right on trucking.

2. I am now writing copies of the messages to disk, that call is right
before the transport.write call, and all the "missing" messages do end up
on disk.

3. I also fire the callLater for the timeout function on each message. The
disk write and the callLater both happen for missing messages.

4. I ran tcpdump on the interface for about 30 minutes and matched up with
log statements. If I see my protocol timed out waiting for an ack message
in my app's log, I can't find the outgoing message on the interface.

5. I am not seeing any errors in my logs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/c84aa1e0/attachment.html>

From glyph at twistedmatrix.com  Mon Apr 27 14:29:42 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Apr 2015 13:29:42 -0700
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
In-Reply-To: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
Message-ID: <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>


> On Apr 27, 2015, at 10:57 AM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hi everyone!
> 
> I have gone through <http://twisted.readthedocs.org/en/latest/core/howto/logging.html <http://twisted.readthedocs.org/en/latest/core/howto/logging.html>> and <http://twisted.readthedocs.org/en/latest/core/howto/logger.html <http://twisted.readthedocs.org/en/latest/core/howto/logger.html>>. And I want to get started helping out with making the move to the new logging system.
> 
> I talked to Glyph and ralphm about this at the PyCon sprints. The main purpose of this email is that I would like some advice as to how to move forward. Are there any other docs that I should read? Also, where should I start? What should be the scope of each individual ticket? 

My initial suggestion - don't take this too authoritatively, I'd be happy for input from anyone else - would be that the next step would be to simply identify a module that has some interesting log events, make a ticket for logging them using the new system, and then write a patch for that ticket.

The scope of each ticket should be as small as possible, given that small tickets get through review faster.  Keep in mind though that there is probably insufficient test coverage for log statements as it is, so you'll almost certainly have to add tests which assert things about the new messages even if the logging statements themselves were covered by HTTP/1.1.

One good place to start would either be in twisted.web, or in some of the "core" logging messages we see all of the time, like twisted.internet.protocol.Factory.doStart.  Right now the only way to control that particular message is to set the 'noisy' attribute on Factory, but the new logging system has an explicit filtering step which can start to provide better support for controlling chatty subsystems.

Another thing to keep an eye on as you do this is to make sure that you convert any string-formatting you find in log messages - like, for example, the '"Starting factory %r" % self' in the message I referenced - and replace it with structured formatting, like self.logger.info("Starting factory {self}").

> I was talking to adiroiban and hawkowl on IRC about this, and they also recommended that I send an email to the mailing list before getting started, so here I am. I would really appreciate it if you could give me some advice and guidance regarding this. :-)

Sounds like good advice.

Good luck, and feel free to keep asking questions,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/2c2e3683/attachment.html>

From glyph at twistedmatrix.com  Mon Apr 27 14:55:35 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Apr 2015 13:55:35 -0700
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
In-Reply-To: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
Message-ID: <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>


> On Apr 27, 2015, at 1:05 PM, Brian Costlow <brian.costlow at gmail.com> wrote:
> 
> Summary: I am having an issue writing data from an object based on twisted's LineReceiver. Calling self.transport.write from the protocol, some data makes it through, some does not. Using tcpdump, I am not seeing the missing data cross the network interface. 


Nothing strikes me as obviously wrong about this code (except the "deferToThread" which seems slightly
suspicious, since nothing in the example appears to have anything to do with threads, and whenever you get threads involved things get complicated).

This seems to be a hugely complex example though, full of interactions with other systems, and nothing resembling a minimal example which demonstrates the behavior.  I hope someone else has better luck diagnosing it, but it looks like your problem is well outside of Twisted, and you are unlikely to get an answer here unless you can provide more relevant details.  I appreciate that you tried to provide lots of diagnostic information in your question, but in the absence of a program I can run, I can't tell if most of it is important or not :-\.

Sending data with transport.write should, as you say, "just work".

Sorry I couldn't be more helpful, and good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/84d76925/attachment.html>

From itamar at itamarst.org  Mon Apr 27 18:26:54 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 27 Apr 2015 20:26:54 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
Message-ID: <0e8ebe46990519c614850d758461130d@itamarst.org>

 

self.in_send_message seems like a potential source of bugs (can't see it
being set to False on all branches here) and is also likely unnecessary.


General advice: 

1. Simplify, simplify, simplify. 

2. Unit tests (see
https://twistedmatrix.com/documents/current/core/howto/trial.html). 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/2fe6a7a4/attachment-0001.html>

From chriswwolfe at gmail.com  Mon Apr 27 19:04:15 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Mon, 27 Apr 2015 20:04:15 -0500
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <8761bcxxak.fsf@hermes.hocat.ca>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
Message-ID: <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>

Hi,

Has this proposal been accepted? Is there anything I can do to help
implement it?

-Chris

On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net> wrote:

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
>
> > So I have a proposal for a scaled back process that nevertheless would
> give us something official-ish:
> > <..details...>
>
> I support this proposal.
>
>   Tom
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150427/fec6cef8/attachment.html>

From jerryguitarist at gmail.com  Mon Apr 27 22:12:36 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 28 Apr 2015 09:42:36 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
 logging system
In-Reply-To: <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
Message-ID: <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>

Hello, Glyph! :-)


> My initial suggestion - don't take this too authoritatively, I'd be happy
> for input from anyone else - would be that the next step would be to simply
> identify a module that has some interesting log events, make a ticket for
> logging them using the new system, and then write a patch for that ticket.
>

There is a possibility that I misunderstood what you had actually meant,
but I assure you that I was not being or even trying to be authoritative,
however, if it seemed like I was, I sincerely apologize. Also, if you felt
inclined to point this out to me, then it probably means it is another one
of those things about myself that I need to work on and rectify. :-) Also,
I'd be more than glad for input from anyone else as well. I did not intend
for this email to be addressed exclusively to one or two person(s),
however, if it seemed like that, again I apologize. And I'll make sure
these things don't happen again. :-)

One more thing I would like to say, when I said "advice and guidance
regarding this" below:

I was talking to adiroiban and hawkowl on IRC about this, and they also
recommended that I send an email to the mailing list before getting
started, so here I am. I would really appreciate it if you could give me
some advice and guidance regarding this. :-)


> Sounds like good advice.
>
> Good luck, and feel free to keep asking questions,
>
> -glyph
>

"regarding this" in that sentence refers to guidance and advice regarding
all of my questions that I had asked in the previous paragraph; these words
did not imply that I needed guidance regarding what hawkowl and adiroiban
had already advised me to do. But now when I go back and read my initial
email, I admit that my first email could have been more well-structured and
I can see gaping holes in my structure of writing and writing in general
that I plan on improving. ;-)

Warm regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/290b5d4e/attachment.html>

From brian.costlow at gmail.com  Mon Apr 27 23:26:15 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 01:26:15 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <0e8ebe46990519c614850d758461130d@itamarst.org>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <0e8ebe46990519c614850d758461130d@itamarst.org>
Message-ID: <CACLJ_dEFdva0sZZvWjs5cHdE3_z1fCDuOUSs+B0=YaYoSCW6KQ@mail.gmail.com>

On Mon, Apr 27, 2015 at 8:26 PM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> self.in_send_message seems like a potential source of bugs (can't see it
> being set to False on all branches here) and is also likely unnecessary.
>

self.in_send_message is redundant with self.waiting_id, which was added
later, and will be refactored out next iteration.

But, after a message removed from the queue and sent, we can't send another
until either we get an ack message back, or the timeout fires. Those bits
of code omitted here, are what resets self.in_send_message back to False.
(Or eventually, self.waiting_id to None).

Suggestions on a better way to do this are most welcome. I thought about
only having check_for_send push itself back on the reactor loop if the
queue is empty, and having the ack and/or timeout code fire check_for_send
in other cases, instead of setting the variable. Not sure that's terribly
simpler, though.
>
> General advice:
>
> 1. Simplify, simplify, simplify.
>
> 2. Unit tests (see
> https://twistedmatrix.com/documents/current/core/howto/trial.html).
>

There actually is a test around this, although ugly, as it has to simulate
the protocol and the factory's queue. It passes. This also works when we
run integration tests with some 3rd party open source apps, but breaks in
production at one location.

#1 well taken though, I should break check_for_send up and make it easier
to write simple tests.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/8085e6f4/attachment.html>

From brian.costlow at gmail.com  Tue Apr 28 05:43:08 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 07:43:08 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
Message-ID: <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>

On Mon, Apr 27, 2015 at 4:55 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Nothing strikes me as obviously wrong about this code (except the
> "deferToThread" which seems *slightly*
> suspicious, since nothing in the example appears to have anything to do
> with threads, and whenever you get threads involved things get complicated).
>
>
 The deferToThread just shoves the write of the message string to file into
the thread pool. It was added after this issue was observed. Using
deferToThread
is a hangover from attaching a logging callback when the file wrote, since
removed, so callInThread would work also. I didn't want to add the file
write onto the reactor thread here.

I wish I could find a simpler case, but frankly, I have an integration test
system that uses a test app to generate upstream messages, and an open
source java app to simulate the downstream server. I can't reproduce this
there even with all the moving parts.

Happening "in the wild" at one location, was hoping for some advice on
troubleshooting what happens between calling transport.write and seeing
bytes on the wire. I guess it's time to go digging into parts of twisted
I've always taken for granted, and learn something new. ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/19d67725/attachment.html>

From jesadjust at gmail.com  Tue Apr 28 09:14:36 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Tue, 28 Apr 2015 23:14:36 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
	factory to send data to another
Message-ID: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>

I am working on this messaging app and I would like to pass data from one
factory to another. I have been referencing to other answers provided in
other similar questions by trying to add a variable storing the data from
one factory then initiate another factory and write the data to it.
Unfortunately there is an error when i call the other class, and I cannot
figure out why. Is there anything I can do to fix it? I have been stuck in
here for quite a while

this is the error:

 receivermessage = self.factory.app.handle_message2(data)
 exceptions.AttributeError: MultiEcho instance has no attribute 'factory'

Here is the code:


import kivyfrom kivy.app import Appfrom kivy.uix.label import
Labelfrom kivy.uix.scatter import Scatterfrom kivy.uix.boxlayout
import BoxLayoutfrom kivy.uix.scrollview import ScrollViewfrom
kivy.uix.button import Buttonfrom kivy.graphics.vertex_instructions
import Rectanglefrom kivy.graphics.context_instructions import
Colorfrom kivy.graphics.instructions import Instructionfrom kivy.base
import runTouchAppfrom kivy.lang import Builderimport socketfrom
kivy.core.window import Windowimport pygameimport randomfrom
kivy.support import install_twisted_reactor

install_twisted_reactor()from twisted.internet import reactor, protocol
Window.size = (550, 400)
# monitoring wordlistwith open("wordlist.txt") as word_file:
    wordlist = list(word.strip().lower() for word in word_file)
# protocols for senderclass EchoProtocol(protocol.Protocol):
    """This is just about the simplest possible protocol"""

    def dataReceived(self, data):
        "As soon as any data is received, write it back."
        sendermessage = self.factory.app.handle_message(data)
        if sendermessage:
            self.transport.write(data)

            #this line here is the trouble maker that caused the error

MultiEcho().dataReceived(sendermessage) class EchoFactory(protocol.Factory):
protocol = EchoProtocol def __init__(self, app): self.app = app # protocols
for receiver class MultiEcho(protocol.Protocol): def connectionMade(self):
self.factory.echoers.append(self) def dataReceived(self, data):
receivermessage = self.factory.app.handle_message2(data) if receivermessage:
self.transport.write(data)

            #this line here is the trouble maker that caused the error
            EchoProtocol().dataReceived(receivermessage)

class MultiEchoFactory(protocol.Factory):
    protocol = MultiEcho

    def __init__(self, app):
        self.echoers = []
        self.app = app

class ServerApp(App):
    def build(self):
        self.layout = BoxLayout(orientation='vertical', spacing=10)

        self.label = Button(text='Censoring process begin\nBeware of
keyword "umbrella"\n ', color=[1.0, 1.0, 1.0, 1.0])
        self.label.color = [0.9, 0.2, 0.2, 1.0]

        self.upperscroll = Button(pos_hint={'x': 0, 'center_y': .5},
size_hint=(None, None))

        self.scatter = Scatter()

        self.displaybox = Label()
        self.displaybox.color = [0.4, 0.9, 0.4, 1.0]

        reactor.listenTCP(8000, EchoFactory(self))  # for sender
        reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver

        self.layout.add_widget(self.label)
        self.layout.add_widget(self.scatter)

        self.scatter.add_widget(self.displaybox)

        return self.layout

    def handle_message(self, msg):

        if any(word in msg.lower() for word in wordlist):

            self.displaybox.color = [0.9, 0.4, 0.4, 1.0]
            self.displaybox.text = "content blocked"
            self.label.text += "Alert! Sender posts %s \n" % msg


        else:
            self.label.text += "Safe - sender posts %s \n" % msg
            self.displaybox.color = [0.4, 0.9, 0.4, 1.0]
            self.displaybox.text = "%s" % msg

        msg = msg

        return msg

    def handle_message2(self, msg):

        if any(word in msg.lower() for word in wordlist):
            self.label.color = [0.8, 0.8, 0.5, 1.0]
            self.label.text += "Alert! Receiver got %s \n" % msg
        else:
            self.label.color = [0.2, 0.2, 1.0, 1.0]
            self.label.text += "Safe - receiver sends %s \n" % msg

        msg = msg

        return msg

if __name__ == '__main__':
    ServerApp().run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/832941fd/attachment-0001.html>

From ldanielburr at me.com  Tue Apr 28 10:33:25 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Tue, 28 Apr 2015 11:33:25 -0500
Subject: [Twisted-Python] attribute error when I am trying to make
	one	factory to send data to another
In-Reply-To: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
Message-ID: <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>

Hi Jessica,

> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
SNIP
>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
SNIP
> MultiEcho().dataReceived(sendermessage)
Here you create an instance of the protocol directly, i.e., without having instantiated a MutilEchoFactory.  The factory?s buildProtocol method is what assigns the factory instance as a member of the protocol (self.factory), and since you didn?t create the protocol via a factory, you have no factory attribute on your protocol instance.

There are a number of ways to fix this, but generally speaking, you need to provide a way for your factories and their protocols to be aware of each other.

Hope this helps,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/d6a87573/attachment.html>

From jesadjust at gmail.com  Tue Apr 28 11:28:53 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 01:28:53 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
Message-ID: <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>

Hi Daniel,

  Thank you so much for your suggestion. I am quite new to python and
twisted so I am not very certain about how to make it work well. Does that
mean if I change the dataReceived by adding a line to instantiate the
MultiEchoFactory like this, it will work?

def dataReceived(self, data):
    "As soon as any data is received, write it back."
    handlesendermessage = self.factory.app.handle_message(data)

    if handlesendermessage:
        self.transport.write(data)
        MultiEchoFactory()
        MultiEcho().dataReceived(data)


2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:

> Hi Jessica,
>
> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> SNIP
>
>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
>
> SNIP
>
> MultiEcho().dataReceived(sendermessage)
>
> Here you create an instance of the protocol directly, i.e., without having
> instantiated a MutilEchoFactory.  The factory?s buildProtocol method is
> what assigns the factory instance as a member of the protocol
> (self.factory), and since you didn?t create the protocol via a factory, you
> have no factory attribute on your protocol instance.
>
> There are a number of ways to fix this, but generally speaking, you need
> to provide a way for your factories and their protocols to be aware of each
> other.
>
> Hope this helps,
>
> Daniel
> --
> L. Daniel Burr
> ldanielburr at me.com
> (312) 656-8387
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/3e92827a/attachment.html>

From ypercube at gmail.com  Tue Apr 28 11:46:31 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 18:46:31 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
Message-ID: <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>

No, I don't think that would work.

You would need something like changing these lines:

        reactor.listenTCP(8000, EchoFactory(self))  # for sender
        reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver

to:

        self.echofactory = EchoFactory(self)
        self.multiechofactory = MultiEchoFactory(self)
        reactor.listenTCP(8000, self.echofactory)  # for sender
        reactor.listenTCP(8001, self.multiechofactory)  # for receiver

so, your "app" object (which is just a normal Python object) knows the
other two objects (the instances of the 2 factories).

Then, your calls:

        if sendermessage:
            self.transport.write(data)
            #this line here is the trouble maker that caused the error
            MultiEcho().dataReceived(sendermessage)

could be written:

        if sendermessage:
            self.transport.write(data)

            self.app.multiechofactory.dataReceived(sendermessage)

On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com> wrote:

> Hi Daniel,
>
>   Thank you so much for your suggestion. I am quite new to python and
> twisted so I am not very certain about how to make it work well. Does that
> mean if I change the dataReceived by adding a line to instantiate the
> MultiEchoFactory like this, it will work?
>
> def dataReceived(self, data):
>     "As soon as any data is received, write it back."
>     handlesendermessage = self.factory.app.handle_message(data)
>
>     if handlesendermessage:
>         self.transport.write(data)
>         MultiEchoFactory()
>         MultiEcho().dataReceived(data)
>
>
> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>
>> Hi Jessica,
>>
>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>
>> SNIP
>>
>>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
>>
>> SNIP
>>
>> MultiEcho().dataReceived(sendermessage)
>>
>> Here you create an instance of the protocol directly, i.e., without
>> having instantiated a MutilEchoFactory.  The factory?s buildProtocol method
>> is what assigns the factory instance as a member of the protocol
>> (self.factory), and since you didn?t create the protocol via a factory, you
>> have no factory attribute on your protocol instance.
>>
>> There are a number of ways to fix this, but generally speaking, you need
>> to provide a way for your factories and their protocols to be aware of each
>> other.
>>
>> Hope this helps,
>>
>> Daniel
>> --
>> L. Daniel Burr
>> ldanielburr at me.com
>> (312) 656-8387
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/bf3e5103/attachment-0001.html>

From ypercube at gmail.com  Tue Apr 28 11:55:03 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 18:55:03 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
Message-ID: <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>

On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
wrote:

> No, I don't think that would work.
>
> You would need something like changing these lines:
>
>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>
> to:
>
>         self.echofactory = EchoFactory(self)
>         self.multiechofactory = MultiEchoFactory(self)
>         reactor.listenTCP(8000, self.echofactory)  # for sender
>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>
> so, your "app" object (which is just a normal Python object) knows the
> other two objects (the instances of the 2 factories).
>
> Then, your calls:
>
>         if sendermessage:
>             self.transport.write(data)
>             #this line here is the trouble maker that caused the error
>             MultiEcho().dataReceived(sendermessage)
>
> could be written:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             self.app.multiechofactory.dataReceived(sendermessage)
>


Oh, I messed it up. The first part is good but the factories do not have
dataReceived methods.

It would have to be - depending on what you want to do - say, you want to
echo to all echoers:

        if sendermessage:
            self.transport.write(data)

            for echoer in self.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)

or:

        if sendermessage:
            self.transport.write(data)

            self.app.multiechofactory.echo_them_all()

and define the echo_them_all() method in the MultiEchoFactory() class.



>
> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
>> Hi Daniel,
>>
>>   Thank you so much for your suggestion. I am quite new to python and
>> twisted so I am not very certain about how to make it work well. Does that
>> mean if I change the dataReceived by adding a line to instantiate the
>> MultiEchoFactory like this, it will work?
>>
>> def dataReceived(self, data):
>>     "As soon as any data is received, write it back."
>>     handlesendermessage = self.factory.app.handle_message(data)
>>
>>     if handlesendermessage:
>>         self.transport.write(data)
>>         MultiEchoFactory()
>>         MultiEcho().dataReceived(data)
>>
>>
>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>
>>> Hi Jessica,
>>>
>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>>
>>> SNIP
>>>
>>>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
>>>
>>> SNIP
>>>
>>> MultiEcho().dataReceived(sendermessage)
>>>
>>> Here you create an instance of the protocol directly, i.e., without
>>> having instantiated a MutilEchoFactory.  The factory?s buildProtocol method
>>> is what assigns the factory instance as a member of the protocol
>>> (self.factory), and since you didn?t create the protocol via a factory, you
>>> have no factory attribute on your protocol instance.
>>>
>>> There are a number of ways to fix this, but generally speaking, you need
>>> to provide a way for your factories and their protocols to be aware of each
>>> other.
>>>
>>> Hope this helps,
>>>
>>> Daniel
>>> --
>>> L. Daniel Burr
>>> ldanielburr at me.com
>>> (312) 656-8387
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/ed372d75/attachment.html>

From brian.costlow at gmail.com  Tue Apr 28 11:55:40 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 13:55:40 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
 <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
Message-ID: <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>

Okay, figured this out.

Abstract of the issue: I am a dumbass.

First, Itamar gets to thrash me soundly, as there was a bug in some code
(not shown in my example) that is not properly tested. That code was
responsible for "turning off" the protocol instance if  connectionLost
method was called, by doing some cleanup then redefining check_for_send in
the instance as a no-op to stop it from pushing itself back on the reactor
loop.

Since the factory here is a reconnecting one, if the network or downstream
server etc., glitches, we get a *new* connected protocol instance and an
old, unconnected one. Due to the bug, both are consuming messages from the
factory queue, calling the protocols' transport.write with the message data.

This location has some issues, so the connection occasionally drops on the
downstream end, which we don't see elsewhere.

transport.write on a tcp connection looks like it just returns if the
underlying fd object is closed. So messages picked up by the old object get
bit-bucketed.

http://twistedmatrix.com/documents/15.0.0/api/twisted.internet.tcp.Connection.html
http://twistedmatrix.com/trac/browser/tags/releases/twisted-15.0.0/twisted/internet/abstract.py#L339

To dos: Fix bug, proper unit test, fix integration test so we test dropping
connections under load...

Question: I'm assuming there's a good reason transport.write is written so
it doesn't error and fails silently even though its underlying connection
is not connected anymore. As part of grokking the guts of this thing I've
been using for a decade...I'm curious to know why.



On Tue, Apr 28, 2015 at 7:43 AM, Brian Costlow <brian.costlow at gmail.com>
wrote:

> On Mon, Apr 27, 2015 at 4:55 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> Nothing strikes me as obviously wrong about this code (except the
>> "deferToThread" which seems *slightly*
>> suspicious, since nothing in the example appears to have anything to do
>> with threads, and whenever you get threads involved things get complicated).
>>
>>
>  The deferToThread just shoves the write of the message string to file
> into the thread pool. It was added after this issue was observed. Using deferToThread
> is a hangover from attaching a logging callback when the file wrote, since
> removed, so callInThread would work also. I didn't want to add the file
> write onto the reactor thread here.
>
> I wish I could find a simpler case, but frankly, I have an integration
> test system that uses a test app to generate upstream messages, and an open
> source java app to simulate the downstream server. I can't reproduce this
> there even with all the moving parts.
>
> Happening "in the wild" at one location, was hoping for some advice on
> troubleshooting what happens between calling transport.write and seeing
> bytes on the wire. I guess it's time to go digging into parts of twisted
> I've always taken for granted, and learn something new. ;-)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/00108b95/attachment.html>

From jesadjust at gmail.com  Tue Apr 28 12:41:47 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 02:41:47 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
Message-ID: <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>

Pantellis thank you so much for your guide! I am still quite unfamiliar
with python and twisted so I made all kind of silly mistakes and could not
figure out how to fix them

I tried your code, it seems to me that it should be working with by
referencing the factories as well as the self.app...Unfortunately when I
ran it it did not work well, the program has an error with your line

            for echoer in self.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)

The error is: exceptions.AttributeError: MultiEcho instance has no
attribute 'app'

I thought that the "app" has already been referenced?

2015-04-29 1:55 GMT+08:00 Pantelis Theodosiou <ypercube at gmail.com>:

>
> On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
> wrote:
>
>> No, I don't think that would work.
>>
>> You would need something like changing these lines:
>>
>>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>>
>> to:
>>
>>         self.echofactory = EchoFactory(self)
>>         self.multiechofactory = MultiEchoFactory(self)
>>         reactor.listenTCP(8000, self.echofactory)  # for sender
>>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>>
>> so, your "app" object (which is just a normal Python object) knows the
>> other two objects (the instances of the 2 factories).
>>
>> Then, your calls:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>             #this line here is the trouble maker that caused the error
>>             MultiEcho().dataReceived(sendermessage)
>>
>> could be written:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             self.app.multiechofactory.dataReceived(sendermessage)
>>
>
>
> Oh, I messed it up. The first part is good but the factories do not have
> dataReceived methods.
>
> It would have to be - depending on what you want to do - say, you want to
> echo to all echoers:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             for echoer in self.app.multiechofactory.echoers:
>                 echoer.dataReceived(sendermessage)
>
> or:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             self.app.multiechofactory.echo_them_all()
>
> and define the echo_them_all() method in the MultiEchoFactory() class.
>
>
>
>>
>> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com>
>> wrote:
>>
>>> Hi Daniel,
>>>
>>>   Thank you so much for your suggestion. I am quite new to python and
>>> twisted so I am not very certain about how to make it work well. Does that
>>> mean if I change the dataReceived by adding a line to instantiate the
>>> MultiEchoFactory like this, it will work?
>>>
>>> def dataReceived(self, data):
>>>     "As soon as any data is received, write it back."
>>>     handlesendermessage = self.factory.app.handle_message(data)
>>>
>>>     if handlesendermessage:
>>>         self.transport.write(data)
>>>         MultiEchoFactory()
>>>         MultiEcho().dataReceived(data)
>>>
>>>
>>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>>
>>>> Hi Jessica,
>>>>
>>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>>>
>>>> SNIP
>>>>
>>>>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
>>>>
>>>> SNIP
>>>>
>>>> MultiEcho().dataReceived(sendermessage)
>>>>
>>>> Here you create an instance of the protocol directly, i.e., without
>>>> having instantiated a MutilEchoFactory.  The factory?s buildProtocol method
>>>> is what assigns the factory instance as a member of the protocol
>>>> (self.factory), and since you didn?t create the protocol via a factory, you
>>>> have no factory attribute on your protocol instance.
>>>>
>>>> There are a number of ways to fix this, but generally speaking, you
>>>> need to provide a way for your factories and their protocols to be aware of
>>>> each other.
>>>>
>>>> Hope this helps,
>>>>
>>>> Daniel
>>>> --
>>>> L. Daniel Burr
>>>> ldanielburr at me.com
>>>> (312) 656-8387
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/49b0a584/attachment.html>

From ypercube at gmail.com  Tue Apr 28 13:21:08 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 20:21:08 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
 <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
Message-ID: <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>

That's what happens when one doesn't try running the code he suggests,
sorry. It should be self.factory.app... :

            for echoer in self.factory.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)


On Tue, Apr 28, 2015 at 7:41 PM, Jessica Tsui <jesadjust at gmail.com> wrote:

> Pantellis thank you so much for your guide! I am still quite unfamiliar
> with python and twisted so I made all kind of silly mistakes and could not
> figure out how to fix them
>
> I tried your code, it seems to me that it should be working with by
> referencing the factories as well as the self.app...Unfortunately when I
> ran it it did not work well, the program has an error with your line
>
>             for echoer in self.app.multiechofactory.echoers:
>                 echoer.dataReceived(sendermessage)
>
> The error is: exceptions.AttributeError: MultiEcho instance has no
> attribute 'app'
>
> I thought that the "app" has already been referenced?
>
> 2015-04-29 1:55 GMT+08:00 Pantelis Theodosiou <ypercube at gmail.com>:
>
>>
>> On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
>> wrote:
>>
>>> No, I don't think that would work.
>>>
>>> You would need something like changing these lines:
>>>
>>>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>>>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>>>
>>> to:
>>>
>>>         self.echofactory = EchoFactory(self)
>>>         self.multiechofactory = MultiEchoFactory(self)
>>>         reactor.listenTCP(8000, self.echofactory)  # for sender
>>>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>>>
>>> so, your "app" object (which is just a normal Python object) knows the
>>> other two objects (the instances of the 2 factories).
>>>
>>> Then, your calls:
>>>
>>>         if sendermessage:
>>>             self.transport.write(data)
>>>             #this line here is the trouble maker that caused the error
>>>             MultiEcho().dataReceived(sendermessage)
>>>
>>> could be written:
>>>
>>>         if sendermessage:
>>>             self.transport.write(data)
>>>
>>>             self.app.multiechofactory.dataReceived(sendermessage)
>>>
>>
>>
>> Oh, I messed it up. The first part is good but the factories do not have
>> dataReceived methods.
>>
>> It would have to be - depending on what you want to do - say, you want to
>> echo to all echoers:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             for echoer in self.app.multiechofactory.echoers:
>>                 echoer.dataReceived(sendermessage)
>>
>> or:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             self.app.multiechofactory.echo_them_all()
>>
>> and define the echo_them_all() method in the MultiEchoFactory() class.
>>
>>
>>
>>>
>>> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com>
>>> wrote:
>>>
>>>> Hi Daniel,
>>>>
>>>>   Thank you so much for your suggestion. I am quite new to python and
>>>> twisted so I am not very certain about how to make it work well. Does that
>>>> mean if I change the dataReceived by adding a line to instantiate the
>>>> MultiEchoFactory like this, it will work?
>>>>
>>>> def dataReceived(self, data):
>>>>     "As soon as any data is received, write it back."
>>>>     handlesendermessage = self.factory.app.handle_message(data)
>>>>
>>>>     if handlesendermessage:
>>>>         self.transport.write(data)
>>>>         MultiEchoFactory()
>>>>         MultiEcho().dataReceived(data)
>>>>
>>>>
>>>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>>>
>>>>> Hi Jessica,
>>>>>
>>>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com>
>>>>> wrote:
>>>>>
>>>>> SNIP
>>>>>
>>>>>  exceptions.AttributeError: MultiEcho instance has no attribute ?factory'
>>>>>
>>>>> SNIP
>>>>>
>>>>> MultiEcho().dataReceived(sendermessage)
>>>>>
>>>>> Here you create an instance of the protocol directly, i.e., without
>>>>> having instantiated a MutilEchoFactory.  The factory?s buildProtocol method
>>>>> is what assigns the factory instance as a member of the protocol
>>>>> (self.factory), and since you didn?t create the protocol via a factory, you
>>>>> have no factory attribute on your protocol instance.
>>>>>
>>>>> There are a number of ways to fix this, but generally speaking, you
>>>>> need to provide a way for your factories and their protocols to be aware of
>>>>> each other.
>>>>>
>>>>> Hope this helps,
>>>>>
>>>>> Daniel
>>>>> --
>>>>> L. Daniel Burr
>>>>> ldanielburr at me.com
>>>>> (312) 656-8387
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/61cbc804/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Apr 28 14:25:29 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 13:25:29 -0700
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
Message-ID: <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>

I think we can consider it tacitly accepted by the community (nobody seemed to object) but we still don't have anyone to implement it. Do you want to step up to do that? :)

-g

> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
> 
> Hi,
> 
> Has this proposal been accepted? Is there anything I can do to help implement it?
> 
> -Chris
> 
> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net <mailto:tom.prince at ualberta.net>> wrote:
> Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> writes:
> 
> > So I have a proposal for a scaled back process that nevertheless would give us something official-ish:
> > <..details...>
> 
> I support this proposal.
> 
>   Tom
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> -- 
> Chris Wolfe
> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/94550a4d/attachment.html>

From glyph at twistedmatrix.com  Tue Apr 28 14:45:23 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 13:45:23 -0700
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
In-Reply-To: <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
 <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
 <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>
Message-ID: <86A5549E-BA4A-4AA8-A1F3-B3C829DA2622@twistedmatrix.com>


> On Apr 28, 2015, at 10:55 AM, Brian Costlow <brian.costlow at gmail.com> wrote:
> 
> Okay, figured this out.

Glad to hear it!

> Abstract of the issue: I am a dumbass.

We all make mistakes.  And a lot of people make this specific one :-).

> First, Itamar gets to thrash me soundly,

No need for violence!

> as there was a bug in some code (not shown in my example) that is not properly tested. That code was responsible for "turning off" the protocol instance if  connectionLost method was called, by doing some cleanup then redefining check_for_send in the instance as a no-op to stop it from pushing itself back on the reactor loop.

Ain't it always the way.

We always say "please simplify the test case" and then the asker always says "but it only happens when it's super complex".  The act of simplifying the test case itself often pinpoints the problem (as it appears to have done in your case).  Honestly this was a pretty quick turnaround and I appreciate the 

> Question: I'm assuming there's a good reason transport.write is written so it doesn't error and fails silently even though its underlying connection is not connected anymore. As part of grokking the guts of this thing I've been using for a decade...I'm curious to know why.

The main reason is "predictability".

First, consider this function:

def sendSomeCommand(self):
    self.transport.write(b"DO-SOMETHING\r\n")
    self.transport.write(b"DO-SOMETHING-ELSE\r\n")

Simple enough, right?  Sends two commands?

We could easily find out between the first call to write() and the second one that the connection has dropped.  Twisted optimistically invokes the send() syscall when it can (if the write buffer is empty when write() is called).  This means that if the buffer happens to be empty when this method is called and if the underlying OS already knows that the connection is closed, we might be able to invoke connectionLost between the first and second write() invocation.  Since you can never really know whether those invocations are happening in isolation or together, this apparently simple function needs to turn into

def sendSomeCommand(self):
    if not self.transport.disconnected:
        self.transport.write(b"DO-SOMETHING\r\n")
    if not self.transport.disconnected:
        self.transport.write(b"DO-SOMETHING-ELSE\r\n")

Also, if we were to aggressively report errors like this, users of Twisted might get the impression that a successful return from write() means that the bytes were actually sent.  What does "actually sent" mean?  This is a surprisingly complicated question with a correspondingly complicated answer.  Sent to the ethernet card? To the local network? Acknowledged by the router on the other side? By the kernel of the OS on the other side? By the application container on the other side? And so on and so forth.  Since you already have no idea exactly where in your stream of write() calls the other side's idea of the stream has terminated unless you have application-level acknowledgement, forcing users to handle exceptions for the case where it definitely wasn't received, while still not giving them any indication that it might not have been received, is a misleading and inconvenient API.

So if you want to stop sending data to a transport that you have been notified about in connectionLost, just stop calling write() :).

Hopefully this sheds some light onto transport.write's design.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/bfacfb70/attachment.html>

From itamar at itamarst.org  Tue Apr 28 14:57:31 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Apr 2015 16:57:31 -0400
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
 distributed systems (with nice Twisted support)
In-Reply-To: <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
Message-ID: <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>

 

Imagine you have a client that sends a request to a server and gets back
a 500 error. What caused it? If you're using Eliot you can trace the
logs across processes: 

$ cat server.log client.log | python eliottree.py 
e076ca50-9abc-44b2-95d8-85cf6956bc33
 +-- main at 1/started
 |-- process: client
 `-- timestamp: 2015-04-28 16:50:00.379033
 +-- eliot:remote_task at 2,2,1/started
 |-- process: server
 `-- timestamp: 2015-04-28 16:50:00.389533
 +-- http_request at 2,1/started
 |-- process: client
 |-- timestamp: 2015-04-28 16:50:00.379096
 |-- x: 8
 `-- y: 0
 +-- divide at 2,2,2,1/started
 |-- process: server
 |-- timestamp: 2015-04-28 16:50:00.389674
 |-- x: 8
 `-- y: 0
 +-- divide at 2,2,2,2/failed
 |-- exception: exceptions.ZeroDivisionError
 |-- process: server
 |-- reason: integer division or modulo by zero
 `-- timestamp: 2015-04-28 16:50:00.389724
 +-- eliot:remote_task at 2,2,3/failed
 |-- exception: exceptions.ZeroDivisionError
 |-- process: server
 |-- reason: integer division or modulo by zero
 `-- timestamp: 2015-04-28 16:50:00.389750
 +-- http_request at 2,3/failed
 |-- exception: requests.exceptions.HTTPError
 |-- process: client
 |-- reason: 500 Server Error: INTERNAL SERVER ERROR
 `-- timestamp: 2015-04-28 16:50:00.396112
 +-- main at 3/failed
 |-- exception: requests.exceptions.HTTPError
 |-- process: client
 |-- reason: 500 Server Error: INTERNAL SERVER ERROR
 `-- timestamp: 2015-04-28 16:50:00.396181
 Intrigued? Learn more at https://eliot.readthedocs.org [1].

eliottree.py is an add-on utility for formatting Eliot logs, and can be
found at https://github.com/jonathanj/eliottree [2] 
 

Links:
------
[1] https://eliot.readthedocs.org
[2] https://github.com/jonathanj/eliottree
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/a0546e97/attachment.html>

From jesadjust at gmail.com  Tue Apr 28 14:59:24 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 04:59:24 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
 <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
 <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>
Message-ID: <CALgu0tgYutFEN-ftsVY8Uoyw1HGt7Kt5h2NUAeF4kQN7Vs6H4g@mail.gmail.com>

Hi Pantelis, sorry for bothering you again. But I just ran the code and it
still has error with the line
self.factory.app.echoFactory().dataReceived(receivermessage)
as well as
for echoer in self.factory.app.multiechofactory.echoers

the errors are  'ServerApp' object has no attribute 'echoFactory' and no
'multiechofactory' respectively
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/82ab4fbe/attachment-0001.html>

From chriswwolfe at gmail.com  Tue Apr 28 15:54:56 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Tue, 28 Apr 2015 16:54:56 -0500
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
 <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
Message-ID: <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>

Sure! I can only think of three things that need to be done:

1. Add a wiki page detailing the process you proposed. It may be helpful to
display an example email showing what should be included in a new
contributor request. The following pages should have links to the new
policy:
  - https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies
  - https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

I can create the wiki page and the example email. To do so, I'll need to
get wiki permissions added to my trac account.

2. Activate the email address commit at twistedmatrix.com and compile a list
of people to whom new commit requests should be sent for review. I can't do
this.

3. Send an email to the general mailing list once the new pages are up to
announce the new advancement path. I can do this.

Is there anything I'm missing?

- Chris // herrwolfe

On Tue, Apr 28, 2015 at 3:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> I think we can consider it tacitly accepted by the community (nobody
> seemed to object) but we still don't have anyone to implement it. Do you
> want to step up to do that? :)
>
> -g
>
> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
>
> Hi,
>
> Has this proposal been accepted? Is there anything I can do to help
> implement it?
>
> -Chris
>
> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net>
> wrote:
>
>> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
>>
>> > So I have a proposal for a scaled back process that nevertheless would
>> give us something official-ish:
>> > <..details...>
>>
>> I support this proposal.
>>
>>   Tom
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Chris Wolfe
> chriswwolfe at gmail.com
>
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/ed2f6afd/attachment.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:08:49 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:08:49 -0700
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
 <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
 <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>
Message-ID: <64374D0B-3396-4B61-8DEC-82C9EDFB3EA3@twistedmatrix.com>

Can you send me an iCalendar invite of some kind to give you all the relevant permissions?  I would definitely like to volunteer to do it, but if we don't have a specific time, I will 100% guarantee you that I will forget :).

-glyph

P.S.: I've been setting a bad example, but we should generally be bottom-posting on this list, it makes the conversation easier to follow :).

> On Apr 28, 2015, at 2:54 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
> 
> Sure! I can only think of three things that need to be done:
> 
> 1. Add a wiki page detailing the process you proposed. It may be helpful to display an example email showing what should be included in a new contributor request. The following pages should have links to the new policy: 
>   - https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies <https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies>
>   - https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs <https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>
> 
> I can create the wiki page and the example email. To do so, I'll need to get wiki permissions added to my trac account.
> 
> 2. Activate the email address commit at twistedmatrix.com <mailto:commit at twistedmatrix.com> and compile a list of people to whom new commit requests should be sent for review. I can't do this.
> 
> 3. Send an email to the general mailing list once the new pages are up to announce the new advancement path. I can do this.
> 
> Is there anything I'm missing?
> 
> - Chris // herrwolfe
> 
> On Tue, Apr 28, 2015 at 3:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> I think we can consider it tacitly accepted by the community (nobody seemed to object) but we still don't have anyone to implement it. Do you want to step up to do that? :)
> 
> -g
> 
>> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>> wrote:
>> 
>> Hi,
>> 
>> Has this proposal been accepted? Is there anything I can do to help implement it?
>> 
>> -Chris
>> 
>> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net <mailto:tom.prince at ualberta.net>> wrote:
>> Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> writes:
>> 
>> > So I have a proposal for a scaled back process that nevertheless would give us something official-ish:
>> > <..details...>
>> 
>> I support this proposal.
>> 
>>   Tom
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>> 
>> 
>> 
>> -- 
>> Chris Wolfe
>> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>
> 
> 
> 
> 
> -- 
> Chris Wolfe
> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/07c9190d/attachment.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:13:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:13:14 -0700
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
In-Reply-To: <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
 <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
Message-ID: <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>


> On Apr 27, 2015, at 9:12 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello, Glyph! :-)
>  
> My initial suggestion - don't take this too authoritatively, I'd be happy for input from anyone else - would be that the next step would be to simply identify a module that has some interesting log events, make a ticket for logging them using the new system, and then write a patch for that ticket.
> 
> There is a possibility that I misunderstood what you had actually meant, but I assure you that I was not being or even trying to be authoritative, 

I just meant don't take my comments too authoritatively :-).

> One more thing I would like to say, when I said "advice and guidance regarding this" below:

...

> Sounds like good advice.
> 
> Good luck, and feel free to keep asking questions,
> 
> -glyph


And I just meant "it sounds like HawkOwl and adiroiban gave you good advice by telling you to ask for advice on the mailing list" :-).

Hope that's clearer,

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/0683041d/attachment.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:15:57 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:15:57 -0700
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
	distributed systems (with nice Twisted support)
In-Reply-To: <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
 <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
Message-ID: <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>


> On Apr 28, 2015, at 1:57 PM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:
> 
> Imagine you have a client that sends a request to a server and gets back a 500 error. What caused it? If you're using Eliot you can trace the logs across processes:
> 
> 
> $ cat server.log client.log | python eliottree.py 
> e076ca50-9abc-44b2-95d8-85cf6956bc33
>     +-- main at 1/started
>         |-- process: client
>         `-- timestamp: 2015-04-28 16:50:00.379033

(etc)

This looks cooler all the time.

You could probably make it look even cooler by using unicode line-drawing characters :-).

Also, is there a web frontend which can render these?  Will there be?

Will any of the additional structuring or filtering of log messages from the new logging system be helpful to Elliot?  If so, do you have any pointers for Eeshan where he might improve existing messages?

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/b1d1cc86/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:20:12 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:20:12 -0700
Subject: [Twisted-Python] attribute error when I am trying to make one
	factory to send data to another
In-Reply-To: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
Message-ID: <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>


> On Apr 28, 2015, at 8:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
> 
> I am working on this messaging app and I would like to pass data from one factory to another. 

Hi Jessica,

I will hopefully have more useful feedback for you when I have a chance to read the whole thread (if others haven't answered all your questions already), but I wanted to quickly note that I think it's super cool you're integrating Twisted with Kivy - I am always excited to see people bringing Twisted to a diversity of environments, and we don't have enough people using it for front-end stuff, although that is very much of a part of its design.  So thanks for using Twisted!  I hope we can help make your experience of it as positive as possible,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/d82875d7/attachment.html>

From jesadjust at gmail.com  Tue Apr 28 17:28:23 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 07:28:23 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>
Message-ID: <CALgu0th0BrFaQPMywepdwH9ZZ-iQVqPZ0xODqWxmWnBvbLh__g@mail.gmail.com>

Hi glyph,

Thanks for your quick note. Even though I do not have deep understanding in
Twisted, based on the documentation I have read I truly think that Twisted
can be used on a more front-end stuff and I hope that it will work out well
for this testing project, so that i can work further on it later to explore
more possibilities with it.

Actually what I was trying to do is that I am trying to build a server app
with two clients app, one is called "sender" which is connected on port
8000, and one is called "receiver" which is on the port 8001. My target is
to create the server app that listens to what the "sender" posts first,
then decide to push it to "receiver" or not with a button created in kivy;
the "receiver" can directly write back to the "sender".

Right now my code is based on various examples that I have found online, so
I am not sure if I am really doing things right. I hope that I am on the
right track for it with the help from Twisted and kivy.

2015-04-29 6:20 GMT+08:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Apr 28, 2015, at 8:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> I am working on this messaging app and I would like to pass data from one
> factory to another.
>
>
> Hi Jessica,
>
> I will hopefully have more useful feedback for you when I have a chance to
> read the whole thread (if others haven't answered all your questions
> already), but I wanted to quickly note that I think it's super cool you're
> integrating Twisted with Kivy - I am always excited to see people bringing
> Twisted to a diversity of environments, and we don't have enough people
> using it for front-end stuff, although that is very much of a part of its
> design.  So thanks for using Twisted!  I hope we can help make your
> experience of it as positive as possible,
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/f673ecb0/attachment.html>

From itamar at itamarst.org  Tue Apr 28 17:57:38 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Apr 2015 19:57:38 -0400
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
 distributed systems (with nice Twisted support)
In-Reply-To: <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
 <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
 <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>
Message-ID: <6b8e990eabb788bba0c2f6ff3f3e25c6@itamarst.org>

 

On 2015-04-28 18:15, Glyph Lefkowitz wrote: 

> You could probably make it look even cooler by using unicode line-drawing characters :-).

Jonathan Jacobs is responsible for the neat UI. 

> Also, is there a web frontend which can render these? Will there be?

Since the underlying structure is a sequence of independent messages you
can e.g. feed Eliot messages into ElasticSearch and then use Kibana,
which is quite helpful. This does involve a little bit of "manual"
tracing of the tree structure (sorting by the relevant column,
basically.) I haven't spent much time using Eliot in anger due to last
year's pivot at work so haven't thought that much about building UIs
yet. 

> Will any of the additional structuring or filtering of log messages from the new logging system be helpful to Elliot? If so, do you have any pointers for Eeshan where he might improve existing messages?

At work we have a thing that routes Twisted logs into Eliot; being able
to route structured messages will correspondingly improve the quality of
the resulting logs. Insofar as Eliot's tree structure is callstack based
(with additional support for Deferreds) most Twisted (or stdlib, or
whatever) log messages will typically end up in the correct place in the
action tree if you route them to Eliot. 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150428/6a92a203/attachment.html>

From jerryguitarist at gmail.com  Tue Apr 28 21:48:28 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Wed, 29 Apr 2015 09:18:28 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
 logging system
In-Reply-To: <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
 <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
 <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>
Message-ID: <CA+2gYip3y=Qbc9KUu1nEJNf_XaiiJc3Xnj7YGrnyGZWVBC2ptw@mail.gmail.com>

Hi Glyph!

My apologies for misunderstanding! I'll try my best and make sure that does
not happen again.

I am counting on you and the members of this community to be severely
critical of me if I go down a path that I should not be taking, and this
community can count on me in the sense that I'll invariably admit it when I
screw up and try my best to rectify my mistakes and improve my conduct
accordingly! :-)

I'll get started on the logging thing and I'll send an email to the mailing
list if I have any questions. :-)

Warm regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/1900f3f2/attachment.html>

From jesadjust at gmail.com  Wed Apr 29 01:33:57 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 15:33:57 +0800
Subject: [Twisted-Python] flushing data to clients after a global variable
	is updated in server
Message-ID: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>

Hi, it's me again. I am still working on the kivy app, and now I am trying
to add a function to the app - the server side has two seconds to decide if
he wants to alter the original data sent from one client to other clients.
If he would like to do so, he has to press a button. If he does not press
the button in 2 seconds, the original data will be sent to other clients
automatically.

Right now I am trying to achieve that with the following code - by calling
the MultiClientEcho().dataReceived(msg, "censored") line in the function as
if MultiClientEcho received another data, however once i click the button,
the program crashed and said (MultiClientEcho().dataReceived(msg,
"censored")
 TypeError: __init__() takes exactly 3 arguments (1 given))

I wonder how can I fix this and achieve the function I am aiming at?

import kivy
from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.scatter import Scatter
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.scrollview import ScrollView
from kivy.uix.button import Button
from kivy.graphics.vertex_instructions import Rectangle
from kivy.graphics.context_instructions import Color
from kivy.graphics.instructions import Instruction
from kivy.base import runTouchApp
from kivy.lang import Builder
import socket
from kivy.core.window import Window
import pygame
import random
from kivy.support import install_twisted_reactor
install_twisted_reactor()
from twisted.internet import protocol, defer
from time import sleep
from twisted.internet import reactor, task
from twisted.protocols.basic import LineReceiver
from twisted.internet.protocol import Protocol, Factory

censored = 0

class MultiClientEcho(protocol.Protocol):
    def __init__(self, factory, app):
        self.factory = factory
        self.app = app

    def connectionMade(self):
        self.factory.clients.append(self)

    def dataReceived(self, data):

        storedmessage = self.factory.app.handle_message(data)

        global censored

        def f(data):
                for client in self.factory.clients:
                    client.transport.write(data)
                    print "this will run in 1 sec after it's
scheduled: %s" % data

        if censored == 0 and storedmessage:
                reactor.callLater(2, f, data)
                # client.transport.write(data)
        elif censored == 1:
                reactor.callLater(0, f, 'censored')
                censored == 0


    def connectionLost(self, reason):
        self.factory.clients.remove(self)


class MultiClientEchoFactory(protocol.Factory):
    protocol = MultiClientEcho

    def __init__(self, app):
        self.clients = []
        self.app = app

    def buildProtocol(self, addr):
        return MultiClientEcho(self, self.app)


class ServerApp(App):
    def build(self):
        self.label = Label(text="server started\n")


        self.approve_btn = Button(text="approve")
        # self.approve_btn.bind(on_release=self.send_message)
        self.banned_btn = Button(text="banned")
        self.banned_btn.bind(on_release=self.banned_message)
        self.layout = BoxLayout(orientation='vertical', spacing=10)

        reactor.listenTCP(8000, MultiClientEchoFactory(self))

        self.layout.add_widget(self.label)
        self.layout.add_widget(self.banned_btn)

        return self.layout

    def banned_message(self, msg):
        global censored
        censored = 1
        self.label.text += "censored\n"
        MultiClientEcho().dataReceived(msg, "censored")
        print censored
        return censored

    def handle_message(self, msg):
        self.label.text += "%s\n" % msg
        return msg


if __name__ == '__main__':
    ServerApp().run()

for i in range(0,1):
    print 1-i
    sleep(0.1)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150429/f8f7b0e4/attachment-0001.html>

From dynamicgl at gmail.com  Wed Apr 29 22:18:15 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Thu, 30 Apr 2015 12:18:15 +0800
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
 <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>
Message-ID: <CABkOF6QuOn0gpyRiEkzm-K3pYqPHO+scbNdtUeS2uMaB_Zc6pQ@mail.gmail.com>

On Mon, Apr 27, 2015 at 3:22 PM, bret curtis <psi29a at gmail.com> wrote:

>
>
> On Fri, Apr 24, 2015 at 10:54 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>>
>> Hi Glyph
>>
>>      off-topic a bit. I care about txmongo. I actually plan to use it in
>> production soon.
>>
>> Regards
>>
>> gelin yan
>>
>>
> Glad you do! :D  We use it in production as well!  Just landed MongoDB 3.x
> support, but we've still have a way to go to make it 1:1 with PyMongo.
>
> As for an apart ecosystem organization, I don't see any problems with
> moving yet again. ;)  I just question the necessity of it right now, it
> isn't like we are endlessly scrolling through pypi packages.
>
> Cheers,
> Bret
>
> _______________________________________________
>

Hi Bret

    Do you know whether txmongo supports replication & the latest geo
index? The last time I used it, Both of two features were missing.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150430/619b0e25/attachment.html>

From glyph at twistedmatrix.com  Thu Apr 30 13:39:07 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Apr 2015 12:39:07 -0700
Subject: [Twisted-Python] flushing data to clients after a global
	variable is updated in server
In-Reply-To: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
References: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
Message-ID: <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>


> On Apr 29, 2015, at 12:33 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
> 
> Hi, it's me again. I am still working on the kivy app, and now I am trying to add a function to the app - the server side has two seconds to decide if he wants to alter the original data sent from one client to other clients. If he would like to do so, he has to press a button. If he does not press the button in 2 seconds, the original data will be sent to other clients automatically.
> 
> Right now I am trying to achieve that with the following code - by calling the MultiClientEcho().dataReceived(msg, "censored") line in the function as if MultiClientEcho received another data, however once i click the button, the program crashed and said (MultiClientEcho().dataReceived(msg, "censored")
>  TypeError: __init__() takes exactly 3 arguments (1 given))

The first problem here is that "MultiEchoClient()" means "create a new MultiEchoClient".  Since MultiEchoClient.__init__ takes "factory" and "app" parameters, you tried to create it with 1 parameter (just "self", which is passed implicitly) instead of the required 3 (self, factory, app).

The second problem, once you've addressed that, is that you almost certainly don't want to create a new MultiEchoClient :).  It's not clear to me which MultiEchoClient you are trying to send this message to.

The third problem is that you should never call dataReceived yourself.  dataReceived is a method invoked by Twisted to tell your protocol that data has arrived.

The fourth problem is that you're treating dataReceived as delivering a discrete message.  It doesn't; it delivers a segment of some data in the stream coming from a client.  This is our most popular FAQ; basically, you need to use a NetstringReceiver or something to ensure you're getting complete messages in dataReceived: https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith <https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith>

Hopefully once you've addressed all these it will work more like you want it to :).

> I wonder how can I fix this and achieve the function I am aiming at?

I've put other comments inline in the code below.
> import kivy
> from kivy.app import App
> from kivy.uix.label import Label
> from kivy.uix.scatter import Scatter
> from kivy.uix.boxlayout import BoxLayout
> from kivy.uix.scrollview import ScrollView
> from kivy.uix.button import Button
> from kivy.graphics.vertex_instructions import Rectangle
> from kivy.graphics.context_instructions import Color
> from kivy.graphics.instructions import Instruction
> from kivy.base import runTouchApp
> from kivy.lang import Builder
> import socket
You don't actually use "socket" anywhere in this module so you don't need to import it :).
> from kivy.core.window import Window
> import pygame
> import random
> from kivy.support import install_twisted_reactor
> install_twisted_reactor()
> from twisted.internet import protocol, defer
> from time import sleep
> from twisted.internet import reactor, task
> from twisted.protocols.basic import LineReceiver
> from twisted.internet.protocol import Protocol, Factory
> 
> censored = 0
> 
> class MultiClientEcho(protocol.Protocol):
>     def __init__(self, factory, app):
>         self.factory = factory
>         self.app = app
> 
>     def connectionMade(self):
>         self.factory.clients.append(self)
> 
>     def dataReceived(self, data):
> 
>         storedmessage = self.factory.app.handle_message(data)
> 
>         global censored
> 
Rather than making this a global variable, consider putting it (as with "app" and with "clients") onto the factory, so you can instantiate multiple MultiClientEchoFactory instances in one process.
>         def f(data):
>                 for client in self.factory.clients:
This is a bit too much indentation - you should stick to 4 spaces per indent for stylistic reasons :).
>                     client.transport.write(data)
>                     print "this will run in 1 sec after it's scheduled: %s" % data
> 
>         if censored == 0 and storedmessage:
>                 reactor.callLater(2, f, data)
You're not hanging on to the result of this callLater call, which means you are giving up any way of stopping this call from happening in the future.  If you want to allow the caller to cancel it, note that reactor.callLater returns an IDelayedCall, which has a "cancel()" method that stops it from happening if it hasn't happened yet.  See the API documentation here; https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html <https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html> 
>                 # client.transport.write(data)
>         elif censored == 1:
>                 reactor.callLater(0, f, 'censored')
>                 censored == 0
I think maybe you mean "censored = 0" here? "censored == 0" just means "compare censored to 0" which will create a True or False value but otherwise do nothing; in this context, it pretty much means "do nothing".
> 
>     def connectionLost(self, reason):
>         self.factory.clients.remove(self)
> 
> 
> class MultiClientEchoFactory(protocol.Factory):
>     protocol = MultiClientEcho
> 
>     def __init__(self, app):
>         self.clients = []
>         self.app = app
> 
>     def buildProtocol(self, addr):
>         return MultiClientEcho(self, self.app)
> 
> 
> class ServerApp(App):
>     def build(self):
>         self.label = Label(text="server started\n")
> 
> 
>         self.approve_btn = Button(text="approve")
>         # self.approve_btn.bind(on_release=self.send_message)
>         self.banned_btn = Button(text="banned")
>         self.banned_btn.bind(on_release=self.banned_message)
>         self.layout = BoxLayout(orientation='vertical', spacing=10)
> 
>         reactor.listenTCP(8000, MultiClientEchoFactory(self))
> 
Rather than calling listenTCP directly, you should be using some kind of Endpoint here; TCP4ServerEndpoint if you just want to hard code port 8000, or serverFromString if you want to allow your user to customize it.  See this document: https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html>        self.layout.add_widget(self.label)
>         self.layout.add_widget(self.banned_btn)
> 
>         return self.layout
> 
>     def banned_message(self, msg):
>         global censored
>         censored = 1
>         self.label.text += "censored\n"
>         MultiClientEcho().dataReceived(msg, "censored")
>         print censored
>         return censored
> 
>     def handle_message(self, msg):
>         self.label.text += "%s\n" % msg
>         return msg
> 
> 
> if __name__ == '__main__':
>     ServerApp().run()
> 
> for i in range(0,1):
>     print 1-i
>     sleep(0.1)
> 
> 
> 

Thanks again for using Twisted!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150430/dd617168/attachment-0001.html>

From jesadjust at gmail.com  Thu Apr 30 21:32:41 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Fri, 1 May 2015 11:32:41 +0800
Subject: [Twisted-Python] flushing data to clients after a global
 variable is updated in server
In-Reply-To: <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>
References: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
 <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>
Message-ID: <CALgu0tgvg8taPz2FUUS-BQ0L6TaX6xpo31Uer-aB+D_QtKjzFA@mail.gmail.com>

Hi Glyph,

  Thank you so much for your detailed explanation. You are a life saver!

Best,
Jessica

2015-05-01 3:39 GMT+08:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Apr 29, 2015, at 12:33 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> Hi, it's me again. I am still working on the kivy app, and now I am trying
> to add a function to the app - the server side has two seconds to decide if
> he wants to alter the original data sent from one client to other clients.
> If he would like to do so, he has to press a button. If he does not press
> the button in 2 seconds, the original data will be sent to other clients
> automatically.
>
> Right now I am trying to achieve that with the following code - by calling
> the MultiClientEcho().dataReceived(msg, "censored") line in the function as
> if MultiClientEcho received another data, however once i click the button,
> the program crashed and said (MultiClientEcho().dataReceived(msg,
> "censored")
>  TypeError: __init__() takes exactly 3 arguments (1 given))
>
>
> The first problem here is that "MultiEchoClient()" means "create a *new* MultiEchoClient".
> Since MultiEchoClient.__init__ takes "factory" and "app" parameters, you
> tried to create it with 1 parameter (just "self", which is passed
> implicitly) instead of the required 3 (self, factory, app).
>
> The second problem, once you've addressed that, is that you almost
> certainly don't want to create a new MultiEchoClient :).  It's not clear to
> me *which* MultiEchoClient you are trying to send this message to.
>
> The third problem is that you should never call dataReceived yourself.
>  dataReceived is a method invoked by Twisted to tell your protocol that
> data has arrived.
>
> The fourth problem is that you're treating dataReceived as delivering a
> discrete message.  It doesn't; it delivers a segment of some data in the
> stream coming from a client.  This is our most popular FAQ; basically, you
> need to use a NetstringReceiver or something to ensure you're getting
> complete messages in dataReceived:
> https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith
>
> Hopefully once you've addressed all these it will work more like you want
> it to :).
>
> I wonder how can I fix this and achieve the function I am aiming at?
>
>
> I've put other comments inline in the code below.
>
> import kivy
> from kivy.app import App
> from kivy.uix.label import Label
> from kivy.uix.scatter import Scatter
> from kivy.uix.boxlayout import BoxLayout
> from kivy.uix.scrollview import ScrollView
> from kivy.uix.button import Button
> from kivy.graphics.vertex_instructions import Rectangle
> from kivy.graphics.context_instructions import Color
> from kivy.graphics.instructions import Instruction
> from kivy.base import runTouchApp
> from kivy.lang import Builder
> import socket
>
> You don't actually use "socket" anywhere in this module so you don't need
> to import it :).
>
> from kivy.core.window import Window
> import pygame
> import random
> from kivy.support import install_twisted_reactor
> install_twisted_reactor()
> from twisted.internet import protocol, defer
> from time import sleep
> from twisted.internet import reactor, task
> from twisted.protocols.basic import LineReceiver
> from twisted.internet.protocol import Protocol, Factory
>
> censored = 0
>
> class MultiClientEcho(protocol.Protocol):
>     def __init__(self, factory, app):
>         self.factory = factory
>         self.app = app
>
>     def connectionMade(self):
>         self.factory.clients.append(self)
>
>     def dataReceived(self, data):
>
>         storedmessage = self.factory.app.handle_message(data)
>
>         global censored
>
> Rather than making this a global variable, consider putting it (as with
> "app" and with "clients") onto the factory, so you can instantiate multiple
> MultiClientEchoFactory instances in one process.
>
>         def f(data):
>                 for client in self.factory.clients:
>
> This is a bit too much indentation - you should stick to 4 spaces per
> indent for stylistic reasons :).
>
>                     client.transport.write(data)
>                     print "this will run in 1 sec after it's scheduled: %s" % data
>
>         if censored == 0 and storedmessage:
>                 reactor.callLater(2, f, data)
>
> You're not hanging on to the result of this callLater call, which means
> you are giving up any way of stopping this call from happening in the
> future.  If you want to allow the caller to cancel it, note that
> reactor.callLater returns an IDelayedCall, which has a "cancel()" method
> that stops it from happening if it hasn't happened yet.  See the API
> documentation here;
> https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html
>
>
>                 # client.transport.write(data)
>         elif censored == 1:
>                 reactor.callLater(0, f, 'censored')
>                 censored == 0
>
> I think maybe you mean "censored = 0" here? "censored == 0" just means
> "compare censored to 0" which will create a True or False value but
> otherwise do nothing; in this context, it pretty much means "do nothing".
>
>
>     def connectionLost(self, reason):
>         self.factory.clients.remove(self)
>
>
> class MultiClientEchoFactory(protocol.Factory):
>     protocol = MultiClientEcho
>
>     def __init__(self, app):
>         self.clients = []
>         self.app = app
>
>     def buildProtocol(self, addr):
>         return MultiClientEcho(self, self.app)
>
>
> class ServerApp(App):
>     def build(self):
>         self.label = Label(text="server started\n")
>
>
>         self.approve_btn = Button(text="approve")
>         # self.approve_btn.bind(on_release=self.send_message)
>         self.banned_btn = Button(text="banned")
>         self.banned_btn.bind(on_release=self.banned_message)
>         self.layout = BoxLayout(orientation='vertical', spacing=10)
>
>         reactor.listenTCP(8000, MultiClientEchoFactory(self))
>
> Rather than calling listenTCP directly, you should be using some kind of
> Endpoint here; TCP4ServerEndpoint if you just want to hard code port 8000,
> or serverFromString if you want to allow your user to customize it.  See
> this document:
> https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html
>
>         self.layout.add_widget(self.label)
>         self.layout.add_widget(self.banned_btn)
>
>         return self.layout
>
>     def banned_message(self, msg):
>         global censored
>         censored = 1
>         self.label.text += "censored\n"
>         MultiClientEcho().dataReceived(msg, "censored")
>         print censored
>         return censored
>
>     def handle_message(self, msg):
>         self.label.text += "%s\n" % msg
>         return msg
>
>
> if __name__ == '__main__':
>     ServerApp().run()
>
> for i in range(0,1):
>     print 1-i
>     sleep(0.1)
>
>
>
>
> Thanks again for using Twisted!
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150501/6feb6813/attachment-0001.html>

From mithrandi at mithrandi.net  Wed Apr  1 19:48:10 2015
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 2 Apr 2015 03:48:10 +0200
Subject: [Twisted-Python] [ANN] clj-amp 0.9.0
Message-ID: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>

I am pleased to announce the release of clj-amp 0.9.0[1][2], a Clojure
implementation of the AMP[3] protocol (a reference implementation of
which is found in Twisted). While slightly off-topic for this list,
this project may be of interest to anyone with AMP services they would
like to interoperate with from Clojure code. Also, this is the closest
thing to an AMP mailing list that exists (at least as far as I'm
aware).

Despite this being the first release, clj-amp is essentially feature
complete. The 0.9.0 version number reflects my reluctance to designate
this 1.0.0 for the following reasons:

 * Lack of users and real-world testing: the project was just released.

 * API instability: while I do not have any immediate plans to break
API compatibility, I would like to reserve the right to make API
changes based on initial feedback from users (assuming anyone uses
it...) in order to correct any glaring issues with the API that may be
discovered.

 * Minimal test coverage and documentation: I would still like to
expand the test coverage to include more specimens of AMP encodings,
as well as expand the documentation.

Any feedback on the API as well as the documentation would be greatly
appreciated.

[1] https://github.com/mithrandi/clj-amp

[2] https://clojars.org/clj-amp

[3] http://amp-protocol.net/
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From adi at roiban.ro  Thu Apr  2 06:28:31 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Apr 2015 13:28:31 +0100
Subject: [Twisted-Python] Twisted CoAP implementation
In-Reply-To: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>
References: <CAAn8pLOH0Dq1MEZ4rVrOFvGEnG5h1D051o-GM7BjeBHEbqRDxw@mail.gmail.com>
Message-ID: <CAFycZ9dBQZZsAXyuc-OcrJiqJDaJ9PFNL=fY3RijXpFGq=VyRg@mail.gmail.com>

On 31 March 2015 at 14:07, Giacomo Tanganelli
<giacomo.tanganelli at iet.unipi.it> wrote:
> Hi,
> I have recently implemented a CoAP open source library based on Twisted. I
> noticed that in the web site there is a page regarding Twisted sub-projects.

Can you please provide the link to that page ? :) Thanks!

In case you want your code to be part of the official/default Twisted
distribution you should submit it based on the general Twisted
Development Process
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

> I'm wondering if I can add my project to such list, I think it could help
> someone. Does anyone know ho to achieve this?
>
> In any case the code is freely available at
> https://github.com/Tanganelli/CoAPthon

Some people tend to prefix ther project with 'tx` to hint that project
is based on twisted... txjsonprc txmongo so maybe you can rename it to
txcoap to make it easier for people to discover it.

-- 
Adi Roiban



From adi at roiban.ro  Thu Apr  2 06:37:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Apr 2015 13:37:14 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on GitHub
Message-ID: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>

Hi,

I would like suggest the following changes regarding the way repos are
organized in GitHub.

Move all twisted-infra repos into Twisted organization.. and maybe
merge many twisted-infra repos into braid.

Move treq, klein, txmongo, filepath... divmod projects into a new
organization dedicated to projects which are part of Twisted
ecosystem. Any project which imports Twisted can be part of it.

What do you say?
-- 
Adi Roiban



From burak.arslan at arskom.com.tr  Thu Apr  2 17:03:36 2015
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Fri, 03 Apr 2015 02:03:36 +0300
Subject: [Twisted-Python] LimitedHistoryLogObserver is considered harmful ?
Message-ID: <551DCAC8.5060109@arskom.com.tr>

Hi,

I happen to have the new logging hotness(tm) running in production as
the backend to python's own logging module in one of the daemons that
I'm responsible for.

I also have dowser[1] integrated with this one so tryng to optimize
memory usage is almost fun :) So I noticed one day
LimitedHistoryObserver was responsible for holding on to ~30k dict
instances. I fixed this with [2]. Resident set size with 48hrs uptime is
now down ~300M   thanks to that function (and is flat).

That's a bit too much for my tastes so I thought maybe you can
reconsider that 64 * 1024 entry limit or choose to get rid of the
default observer automatically once the global observer has a proper
user-supplied sink.

Best regards,
Burak

PS: Neurons will be a web framework that ties a lot of stuff like
sqlalchemy, spyne and twisted together. Currently it does only two
things quite well: Forking and rendering html forms :)

[1] https://github.com/plq/neurons/tree/master/neurons/daemon/dowser
[2]
https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623




From exarkun at twistedmatrix.com  Thu Apr  2 18:43:29 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Apr 2015 00:43:29 -0000
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
Message-ID: <20150403004329.6423.375338749.divmod.xquotient.129@top>

On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>Hi,
>
>I would like suggest the following changes regarding the way repos are
>organized in GitHub.
>
>Move all twisted-infra repos into Twisted organization.. and maybe
>merge many twisted-infra repos into braid.
>
>Move treq, klein, txmongo, filepath... divmod projects into a new
>organization dedicated to projects which are part of Twisted
>ecosystem. Any project which imports Twisted can be part of it.
>
>What do you say?

Perhaps you can explain why someone would want to do this.  As is, it 
sounds like a lot of busy work that, at best, will confuse and disrupt 
people.  If you explain what benefit would come from making this change, 
maybe it will be easier to see why it's a good idea.

Jean-Paul



From glyph at twistedmatrix.com  Thu Apr  2 20:07:56 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 2 Apr 2015 19:07:56 -0700
Subject: [Twisted-Python] [ANN] clj-amp 0.9.0
In-Reply-To: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>
References: <CAMcKhMSXYEj6N+fK3xj9dsst7=Li=qOez0RejUPxAa3is_=VyQ@mail.gmail.com>
Message-ID: <B243D47B-B54C-4CD5-878F-D275E8F2DA4A@twistedmatrix.com>


> On Apr 1, 2015, at 6:48 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> I am pleased to announce the release of clj-amp 0.9.0[1][2], a Clojure
> implementation of the AMP[3] protocol (a reference implementation of
> which is found in Twisted)

Congrats on the release!  Always glad to see implementations in more different languages, making it easy to integrate Twisted with things :).




From glyph at twistedmatrix.com  Thu Apr  2 20:16:16 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 2 Apr 2015 19:16:16 -0700
Subject: [Twisted-Python] LimitedHistoryLogObserver is considered
	harmful ?
In-Reply-To: <551DCAC8.5060109@arskom.com.tr>
References: <551DCAC8.5060109@arskom.com.tr>
Message-ID: <13F91F86-8A5F-4070-8D6C-FF50E04F3342@twistedmatrix.com>


> On Apr 2, 2015, at 4:03 PM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hi,
> 
> I happen to have the new logging hotness(tm) running in production as
> the backend to python's own logging module in one of the daemons that
> I'm responsible for.

Thanks for trying out this code and helping us validate it!

> I also have dowser[1] integrated with this one so tryng to optimize
> memory usage is almost fun :) So I noticed one day
> LimitedHistoryObserver was responsible for holding on to ~30k dict
> instances. I fixed this with [2]. Resident set size with 48hrs uptime is
> now down ~300M   thanks to that function (and is flat).

That's... a lot of dict instances :).  I guess not a very "limited" history observer ;-).

> That's a bit too much for my tastes so I thought maybe you can
> reconsider that 64 * 1024 entry limit or choose to get rid of the
> default observer automatically once the global observer has a proper
> user-supplied sink.

Can you file this bug on the Twisted tracker so we don't lose it?  I am pretty sure that 300M of memory for buffered logs is not something anybody really wants.

> Best regards,
> Burak
> 
> PS: Neurons will be a web framework that ties a lot of stuff like
> sqlalchemy, spyne and twisted together. Currently it does only two
> things quite well: Forking and rendering html forms :)
> 
> [1] https://github.com/plq/neurons/tree/master/neurons/daemon/dowser
> [2]
> https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623 <https://github.com/plq/neurons/blob/417836a729706f2d1449109ccbb7d4a510227050/neurons/daemon/config.py#L623>

Awesome, I can't wait to see the results.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150402/70274616/attachment-0002.html>

From meejah at meejah.ca  Fri Apr  3 15:18:32 2015
From: meejah at meejah.ca (meejah)
Date: Sat, 04 Apr 2015 01:18:32 +0400
Subject: [Twisted-Python] txaio: write code for both asyncio + twisted
Message-ID: <864mowq5av.fsf@atlantis.meejah.ca>


I recently factored some Twisted/asyncio compatibility code out of
AutobahnPython (http://autobahn.ws/python/) and the result thus far is
"txaio", available on GitHub: https://github.com/tavendo/txaio

Similar to "six" (but for event-based Python) this allows you to write
code (presumably for a library) that can work unmodified on either 
asyncio or Twisted. In other words, users of your library can choose 
whether they want a Twisted dependency or not (and, e.g., get plain
Deferreds or Futures as appropriate from any async methods your API
reveals).

Basically, it's just a thin wrapper over the appropriate calls into
asyncio or Twisted providing a "lowest-common-denominator" interface.
This does mean limiting yourself a little (e.g. many DeferredList
options aren't available). So you feel this pain as a library author,
but then give *users* of your library a choice as to whether they wish
to write asyncio (with no Twisted dependency) or Twisted.

What I mean is: txaio isn't trying to be full event-loop interop like
txtulip (https://github.com/itamarst/txtulip)

This isn't "released" yet (e.g. not on PyPI) but I'm posting about it
because I'm interested in any early feedback.

Here's most of the API, using the example from the README:

    import txaio  # auto-selects twisted > asyncio > trollius
    f0 = txaio.create_future()
    f1 = txaio.as_future(some_func, 1, 2, key='word')
    txaio.add_callbacks(f0, callback, errback)  # either can be None
    txaio.add_callbacks(f1, callback, errback)
    # ...
    txaio.resolve(f0, "value")
    txaio.reject(f1, RuntimeError("it failed"))

-- 
meejah





From exarkun at twistedmatrix.com  Sat Apr  4 19:56:26 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Apr 2015 01:56:26 -0000
Subject: [Twisted-Python] Twisted Project Job Posting
In-Reply-To: <20150329145203.6423.700890444.divmod.xquotient.109@top>
References: <20150328162226.6423.210098794.divmod.xquotient.61@top>
 <20150329145203.6423.700890444.divmod.xquotient.109@top>
Message-ID: <20150405015626.6423.1376505887.divmod.xquotient.288@top>

On 29 Mar, 02:52 pm, exarkun at twistedmatrix.com wrote:
>On 28 Mar, 04:22 pm, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>The Twisted issue tracker needs someone to pay attention to it for 
>>spam content and clean up that content.  I've been taking care of this 
>>for a while now but I'm going to step back from this position soon.
>
>Thanks for volunteering, Hawkowl, Eeshan Garg, and Pantelis Theodosiou.

I've granted these permissions to Hawkowl and Eeshan now (I didn't see 
Pantelis' trac username on the ProjectJobs page).

https://twistedmatrix.com/trac/ticket/7837 would be a good ticket to 
start with.

Let me know if you have any questions - otherwise, I'm officially hands- 
off now.

Thanks,
Jean-Paul



From trac at twistedmatrix.com  Sun Apr  5 00:05:16 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Apr 2015 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1428213916.21.1191464659413056070@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150405/0af68477/attachment-0002.html>

From laurens at daemon.be  Mon Apr  6 18:27:50 2015
From: laurens at daemon.be (Laurens Vets)
Date: Mon, 06 Apr 2015 17:27:50 -0700
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
 5 minutes
In-Reply-To: <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
 <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
Message-ID: <efa017011e9794071ad208014c43d815@daemon.be>

On 2015-03-30 13:39, Glyph Lefkowitz wrote:
>> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
>> 
>> Hello,
>> 
>> I'm trying to get to know the Twisted framework by extending the 
>> ircLogBot.py example. I want to be able to get a list of all names in 
>> a channel (by sending NAMES) and I want to rerun this every 5 minutes.
>> 
>> I've been able to get the NAMES on a channel join by doing this in 
>> LogBot:
>> 
>> def joined(self, channel):
>>    self.names(channel)
>> 
>> def names(self, channel):
>>    self.sendLine("NAMES %s" % channel)
>> 
>> def irc_unknown(self, prefix, command, params):
>>    if command == 'RPL_NAMREPLY':
>>        self.handle_namereply(*params)
>> 
>> def handle_namereply(self, myname, channeltype, channelname, users):
>>    self.logger.log("Handling namereply %r %r %r %r" % (myname, 
>> channeltype, channelname, users))
>> 
>> The problem I face is that I have no idea where to put a LoopingCall 
>> to run this same command every 5 minutes. Where would be the best 
>> place to place this?
> 
> I would probably start such a LoopingCall in LogBot.connectionMade,
> and make sure to stop it in LogBot.connectionLost.  That way only an
> active connection will attempt to send NAMES to itself.
> 
> Does that make sense for your application?
> 
> Thanks for using Twisted,

I created the call in LogBot.joined as I need to be joined in a channel 
before I can send the NAMES command. Does that sound right? I'll also 
stop it in in connectionLost. I did not think of that, thanks! :)

Next stop: adding a database connection.

Thank you for making Twisted! :)

-Laurens



From oliverpalmer at opalmer.com  Mon Apr  6 20:44:40 2015
From: oliverpalmer at opalmer.com (Oliver Palmer)
Date: Mon, 6 Apr 2015 22:44:40 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
Message-ID: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>

Hi,

I've been using Twisted for a while now and for the most part I've been
quite pleased with it.  Perhaps the one exception to this is when it comes
to Windows, but that's only because of pywin32.  For those unaware, there's
essentially two options right now.  Install pywin32 manually or add
the pypywin32 package to your project as a requirement.  So long as the
wheel package is installed...it's pretty easy to work around pywin32's
installer issues.

But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away
on Windows.  Pywin32 can be difficult to get working sometimes and it's
unfortunate that the Windows install can sometimes require a couple of
manual steps when working with Twisted.  So far as I can tell, Twisted
itself does not use a great deal of the pywin32 library and there's even a
ticket open that seems to indicate it's on the list of things to eventually
do and it's been mentioned at least a few times outside of this ticket:

    https://twistedmatrix.com/trac/ticket/7477

So my question is, does anyone know if any work has been done along the
lines of removing the pywin32 dependency and converting to cffi?  Outside
of the link above, I'm not seeing much so far and based on some rudimentary
testing
<https://github.com/opalmer/twisted/blob/02c0c56382f25b239fe177807541528cc940dadf/scratch.py>
it
seems like it's worth picking up since I've had to work around
<https://github.com/pyfarm/pyfarm-agent/pull/250/files> this problem
before.

Would anyone object to me doing some work on this?  I can't promise
anything yet since I'm still investigating it but I figured it would be a
good time to reach out for some input before moving forward.

Thanks,
Oliver Palmer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150406/46267815/attachment-0002.html>

From zookog at gmail.com  Tue Apr  7 11:56:11 2015
From: zookog at gmail.com (Zooko Wilcox-O'Hearn)
Date: Tue, 7 Apr 2015 17:56:11 +0000
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
Message-ID: <CANdZDc6zd7cW-FRbv2xVo=cBTzHJWdNLM+iFr1V5RFA4xwu=Qg@mail.gmail.com>

Dear Oliver Palmer:

Thanks for the note! It inspired me to add a few comments:

https://twistedmatrix.com/trac/ticket/7477#comment:3

In short: yes please! Replace pywin32, please. Thanks!

Regards,

Zooko



From glyph at twistedmatrix.com  Tue Apr  7 15:45:01 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Apr 2015 17:45:01 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
Message-ID: <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>


> On Apr 6, 2015, at 22:44, Oliver Palmer <oliverpalmer at opalmer.com> wrote:
> 
> Hi,
> 
> I've been using Twisted for a while now and for the most part I've been quite pleased with it. 

Glad to hear it!

> But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away on Windows.

	.

	.

	.

>     https://twistedmatrix.com/trac/ticket/7477 <https://twistedmatrix.com/trac/ticket/7477>
	.

	.

	.

> Would anyone object to me doing some work on this?

This is the default answer for any ticket in Twisted, but: absolutely not.  Please go ahead and work away.

The ideal end-state here would be to replace not only the dependency on pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for whatever Windows APIs we need.

In the meanwhile, hopefully the new "extras" support (arriving in a release any minute now) will mitigate the symptoms while we work on the root cause.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150407/0a9352f1/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr  7 16:28:50 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Apr 2015 18:28:50 -0400
Subject: [Twisted-Python] IRCClient (ircLogBot.py) send a message every
	5 minutes
In-Reply-To: <efa017011e9794071ad208014c43d815@daemon.be>
References: <f594959b983017043e9def26aaeabd11@daemon.be>
 <D1E697BE-4C22-4FD6-B41B-42D4A7B78749@twistedmatrix.com>
 <efa017011e9794071ad208014c43d815@daemon.be>
Message-ID: <1FB39A96-3D4F-499C-A45B-C4AF8BFF025E@twistedmatrix.com>


> On Apr 6, 2015, at 20:27, Laurens Vets <laurens at daemon.be> wrote:
> 
> On 2015-03-30 13:39, Glyph Lefkowitz wrote:
>>> On Mar 26, 2015, at 11:18 AM, Laurens Vets <laurens at daemon.be> wrote:
>>> Hello,
>>> I'm trying to get to know the Twisted framework by extending the ircLogBot.py example. I want to be able to get a list of all names in a channel (by sending NAMES) and I want to rerun this every 5 minutes.
>>> I've been able to get the NAMES on a channel join by doing this in LogBot:
>>> def joined(self, channel):
>>>   self.names(channel)
>>> def names(self, channel):
>>>   self.sendLine("NAMES %s" % channel)
>>> def irc_unknown(self, prefix, command, params):
>>>   if command == 'RPL_NAMREPLY':
>>>       self.handle_namereply(*params)
>>> def handle_namereply(self, myname, channeltype, channelname, users):
>>>   self.logger.log("Handling namereply %r %r %r %r" % (myname, channeltype, channelname, users))
>>> The problem I face is that I have no idea where to put a LoopingCall to run this same command every 5 minutes. Where would be the best place to place this?
>> I would probably start such a LoopingCall in LogBot.connectionMade,
>> and make sure to stop it in LogBot.connectionLost.  That way only an
>> active connection will attempt to send NAMES to itself.
>> Does that make sense for your application?
>> Thanks for using Twisted,
> 
> I created the call in LogBot.joined as I need to be joined in a channel before I can send the NAMES command. Does that sound right? I'll also stop it in in connectionLost. I did not think of that, thanks! :)

Yup, that all sounds right.

> Next stop: adding a database connection.

Good luck!

> Thank you for making Twisted! :)

Thank you for using it!

-glyph




From oliverpalmer at opalmer.com  Tue Apr  7 23:33:12 2015
From: oliverpalmer at opalmer.com (Oliver Palmer)
Date: Wed, 8 Apr 2015 01:33:12 -0400
Subject: [Twisted-Python] Windows CFFI Implementation?
In-Reply-To: <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>
References: <CAEgpGv7KOmba1EiMpH=Qsrgpfn1JzH1Em60S61nkmQPH8-s9Hw@mail.gmail.com>
 <53A9F828-5442-4ADB-A082-AB5B03281ADD@twistedmatrix.com>
Message-ID: <CAEgpGv72f_bZ8BxeXZDLW3oqyOSB80yhKKThuyx2jLMq0SZFOQ@mail.gmail.com>

> This is the default answer for any ticket in Twisted, but: *absolutely
not*.  Please go ahead and work away.

Forging ahead then heh.  I'll probably assign the actual ticket to myself
once I've delved into this a little bit further and am decently close to a
patch.  I was mainly asking to see if anyone else had made an attempt yet
so I didn't duplicate anything.


> The ideal end-state here would be to replace not only the dependency on
pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for
whatever Windows APIs we need.

That's what I'd like to see too I think.  I'm going to start out with
trying to replace pywin32 since that seems to be the bigger pain point for
consumers of Twisted based on Zooko's input and my own experiences as
well.  I'll have a look at replacing/updating the IOCP Pyrex code as well
while I'm at it.


> In the meanwhile, hopefully the new "extras" support (arriving in a
release any minute now) will mitigate the symptoms while we work on the
root cause.

Nice just read up on this in the repo, looking forward to the release
already.  Thanks!


---Oliver

On Tue, Apr 7, 2015 at 5:45 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 6, 2015, at 22:44, Oliver Palmer <oliverpalmer at opalmer.com> wrote:
>
> Hi,
>
> I've been using Twisted for a while now and for the most part I've been
> quite pleased with it.
>
>
> Glad to hear it!
>
> But, I wouldn't mind if the pywin32/wheel+pypiwin32 requirements went away
> on Windows.
>
>
> .
>
> .
>
> .
>
>     https://twistedmatrix.com/trac/ticket/7477
>
>
> .
>
> .
>
> .
>
> Would anyone object to me doing some work on this?
>
>
> This is the default answer for any ticket in Twisted, but: *absolutely
> not*.  Please go ahead and work away.
>
> The ideal end-state here would be to replace not only the dependency on
> pywin32, but also the IOCP Pyrex support with an as-needed cffi wrapper for
> whatever Windows APIs we need.
>
> In the meanwhile, hopefully the new "extras" support (arriving in a
> release any minute now) will mitigate the symptoms while we work on the
> root cause.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150408/e023940f/attachment-0002.html>

From ashfall at twistedmatrix.com  Sat Apr 11 12:58:25 2015
From: ashfall at twistedmatrix.com (Ashwini Oruganti)
Date: Sat, 11 Apr 2015 14:58:25 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
Message-ID: <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>

Everyone is invited! Let's meet near the registration desk at 6:30pm

Pullman
3424, Avenue du Parc
Montreal, QC H2X 2H5
Canada
(514) 288-7779

http://www.yelp.com/biz/pullman-montr%C3%A9al-3

-Ashwini
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150411/075e9a72/attachment-0002.html>

From hs at ox.cx  Sat Apr 11 14:17:19 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 11 Apr 2015 16:17:19 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
 <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
Message-ID: <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>

That clashes with the PyLadies auction.  :-/

I'm not sure I can attend anyway but it's unfortunate nevertheless. 

Sent from my phone.

> Am 11.04.2015 um 14:58 schrieb Ashwini Oruganti <ashfall at twistedmatrix.com>:
> 
> Everyone is invited! Let's meet near the registration desk at 6:30pm
> 
> Pullman
> 3424, Avenue du Parc
> Montreal, QC H2X 2H5
> Canada
> (514) 288-7779
> 
> http://www.yelp.com/biz/pullman-montr%C3%A9al-3
> 
> -Ashwini
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150411/3a74f553/attachment-0002.html>

From ashfall at twistedmatrix.com  Sat Apr 11 14:49:03 2015
From: ashfall at twistedmatrix.com (Ashwini Oruganti)
Date: Sat, 11 Apr 2015 16:49:03 -0400
Subject: [Twisted-Python] Twisted dinner at PyCon tonight (4/11)?
In-Reply-To: <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>
References: <CAMFCZ-2xyJUaSehEFjsWqki_HTafb3MW9ovUZZewewFOqiaA8g@mail.gmail.com>
 <CAMFCZ-35JT2e=881+BzFr1A30GjaO04bp0048=_uxWGsfuaXSw@mail.gmail.com>
 <CAMFCZ-2jfMtJF=qyay8XrcMGmwSqKWnf9WksrKczWcFKUSOTAQ@mail.gmail.com>
 <18008971-E1A6-465C-A2FC-1CE7F4973254@ox.cx>
Message-ID: <CAMFCZ-24F2OftaVXHz-WYH+GvW2MM6r1NYAk6AWLxNx=t2JGAw@mail.gmail.com>

Apologies, that was unintentional.

Time changed to 8:00pm. Same place, meet near registration.
On Apr 11, 2015 4:17 PM, "Hynek Schlawack" <hs at ox.cx> wrote:

> That clashes with the PyLadies auction.  :-/
>
> I'm not sure I can attend anyway but it's unfortunate nevertheless.
>
> Sent from my phone.
>
> Am 11.04.2015 um 14:58 schrieb Ashwini Oruganti <ashfall at twistedmatrix.com
> >:
>
> Everyone is invited! Let's meet near the registration desk at 6:30pm
>
> Pullman
> 3424, Avenue du Parc
> Montreal, QC H2X 2H5
> Canada
> (514) 288-7779
>
> http://www.yelp.com/biz/pullman-montr%C3%A9al-3
>
> -Ashwini
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150411/db44a422/attachment-0002.html>

From trac at twistedmatrix.com  Sun Apr 12 00:05:29 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Apr 2015 06:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1428818729.42.2779187376380109460@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150412/57d90e4c/attachment-0002.html>

From hawkowl at atleastfornow.net  Mon Apr 13 02:17:24 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 13 Apr 2015 16:17:24 +0800
Subject: [Twisted-Python] Twisted 15.1 Release Announcement
Message-ID: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!

This is not a big release, but does have some nice-to-haves:

- You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
- twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
- Twisted's MSN support is now deprecated.
- More documentation has been added on how Trial finds tests.
- ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
<https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Hawkie Owl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150413/6f5ac047/attachment.sig>

From fehrist at codeghar.com  Mon Apr 13 22:22:14 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 13 Apr 2015 21:22:14 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
Message-ID: <552C95F6.4060408@codeghar.com>

I am new to Twisted and its community and exploring adding Diameter 
support. I have experience with Python but as I learn more I realize how 
little I know. This is my first foray contributing to a real open source 
project. I'm basically looking for mentors to guide me when I have 
questions about:

* Async code
* Wiring code to support both Python 2.x and 3.x
* Style guides
* Other things

If dedicated mentors are hard to come by I'd be grateful for this ML to 
help with answers. Looking forward to working with the community on a 
great project.

--
Hamza "@aikchar" Sheikh



From glyph at twistedmatrix.com  Mon Apr 13 23:23:32 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 14 Apr 2015 01:23:32 -0400
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
Message-ID: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>


> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!
> 
> This is not a big release, but does have some nice-to-haves:
> 
> - You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
> - twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
> - Twisted's MSN support is now deprecated.
> - More documentation has been added on how Trial finds tests.
> - ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
> <https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> Twisted Regards,
> Hawkie Owl

This is very exciting.  I am SUPER PUMPED to start telling people to `pip install twisted[tls]´ instead of the whole mess it used to be.  Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and brought twisted stickers to PyCon!)

-glyph

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 630 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150414/37b6e721/attachment.sig>

From hawkowl at atleastfornow.net  Mon Apr 13 23:28:31 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 14 Apr 2015 13:28:31 +0800
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
Message-ID: <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>

zomg twisted stickers!!!

Chris, let me know how much it is for you to send me some -- my laptop has Django stickers, but no Twisted. FOR SHAME

- hawkie

> On 14 Apr 2015, at 13:23, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.1.0 -- just in time for the PyCon sprints!
>> 
>> This is not a big release, but does have some nice-to-haves:
>> 
>> - You can now install Twisted's optional dependencies easier -- for example, `pip install twisted[tls]` installs Twisted with TLS support.
>> - twisted.web.static.File allows defining a custom resource for rendering forbidden pages.
>> - Twisted's MSN support is now deprecated.
>> - More documentation has been added on how Trial finds tests.
>> - ...and 26 other closed tickets containing bug fixes, feature enhancements, and documentation.
>> 
>> For more information, check the NEWS file (link provided below).
>> 
>> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The NEWS file is also available at
>> <https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS>.
>> 
>> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
>> 
>> Twisted Regards,
>> Hawkie Owl
> 
> This is very exciting.  I am SUPER PUMPED to start telling people to `pip install twisted[tls]´ instead of the whole mess it used to be.  Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and brought twisted stickers to PyCon!)
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150414/7d0dcc66/attachment.sig>

From glyph at twistedmatrix.com  Mon Apr 13 23:42:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 14 Apr 2015 01:42:06 -0400
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <552C95F6.4060408@codeghar.com>
References: <552C95F6.4060408@codeghar.com>
Message-ID: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>


> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com> wrote:
> 
> I am new to Twisted and its community

Welcome, we are happy to have you!

> and exploring adding Diameter support.

What is Diameter?

> I have experience with Python but as I learn more I realize how little I know. This is my first foray contributing to a real open source project. I'm basically looking for mentors to guide me when I have questions about:
> 
> * Async code
> * Wiring code to support both Python 2.x and 3.x
> * Style guides
> * Other things
> 
> If dedicated mentors are hard to come by I'd be grateful for this ML to help with answers. Looking forward to working with the community on a great project.

I don't mean to discourage anyone from volunteering - if you get a direct answer from someone else then great :) - but it would probably be easiest for you to begin just by asking questions of the mailing list, and perhaps formalizing a mentorship relationship later.  Most twisted core team members tend to be very busy, but the community as a whole does a pretty good job of keeping up with the questions here.  Personally I'd love to offer to mentor you, but I am fairly overloaded as it is and would not be able to give you the attention you deserve.

You might want to check this out as a resource to get started on the development process, just to close a few trivial bugs to get the hang of it before starting the larger project of Diameter support:

http://bitly.com/easy-twisted-tickets <http://bitly.com/easy-twisted-tickets>

Please feel free to ask any and all questions on this list.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150414/740adebe/attachment-0002.html>

From sank.daniel at gmail.com  Mon Apr 13 23:57:13 2015
From: sank.daniel at gmail.com (Daniel Sank)
Date: Mon, 13 Apr 2015 22:57:13 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>

Hey Hamza,

I learned how to write asynchronous code more "recently" than a lot of the
core devs and I'd be happy to guide you. As glyph says, the best way is to
simply ask questions as you have them.

Of course, a good tutorial is invaluable. Without any doubt the best
starting point is David Peticolas's tutorial found here:
http://krondo.com/?page_id=1327.


On Mon, Apr 13, 2015 at 10:42 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com> wrote:
>
> I am new to Twisted and its community
>
>
> Welcome, we are happy to have you!
>
> and exploring adding Diameter support.
>
>
> What is Diameter?
>
> I have experience with Python but as I learn more I realize how little I
> know. This is my first foray contributing to a real open source project.
> I'm basically looking for mentors to guide me when I have questions about:
>
> * Async code
> * Wiring code to support both Python 2.x and 3.x
> * Style guides
> * Other things
>
> If dedicated mentors are hard to come by I'd be grateful for this ML to
> help with answers. Looking forward to working with the community on a great
> project.
>
>
> I don't mean to discourage anyone from volunteering - if you get a direct
> answer from someone else then great :) - but it would probably be easiest
> for you to begin just by asking questions of the mailing list, and perhaps
> formalizing a mentorship relationship later.  Most twisted core team
> members tend to be very busy, but the community as a whole does a pretty
> good job of keeping up with the questions here.  Personally I'd love to
> offer to mentor you, but I am fairly overloaded as it is and would not be
> able to give you the attention you deserve.
>
> You might want to check this out as a resource to get started on the
> development process, just to close a few trivial bugs to get the hang of it
> before starting the larger project of Diameter support:
>
> http://bitly.com/easy-twisted-tickets
>
> Please feel free to ask any and all questions on this list.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Daniel Sank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150413/2fe6220c/attachment-0002.html>

From p.mayers at imperial.ac.uk  Tue Apr 14 04:15:36 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 14 Apr 2015 11:15:36 +0100
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <552CE8C8.3000104@imperial.ac.uk>

On 14/04/15 06:42, Glyph wrote:
>
>> On Apr 14, 2015, at 00:22, Hamza Sheikh <fehrist at codeghar.com
>> <mailto:fehrist at codeghar.com>> wrote:
>>
>> I am new to Twisted and its community
>
> Welcome, we are happy to have you!
>
>> and exploring adding Diameter support.
>
> What is Diameter?

<offtopic>

It's a bit like RADIUS-over-TCP but with knobs on.

The only place it really took off - though it's a big place - is 
3G/mobile network AAA.

RADIUS has such a large installed user-base that DIAMETER had trouble 
reaching a critical mass anywhere that backwards compatibility was needed.

Kind of a shame, since it means AAA signalling for most encrypted 
wireless networks takes place over a crufty old protocol with a bunch of 
problems, not least lack of reliable transport, which got solved by... 
running radius-over-TLS-over-TCP, thus proving:

https://xkcd.com/927/

</offtopic>

;o)



From sanfo.halidou at yahoo.fr  Tue Apr 14 05:47:10 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Tue, 14 Apr 2015 11:47:10 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
Message-ID: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>

Hi everybody,I am student and need help of any one.I am working on internship and I have to implement a SFTP client usign twisted conch module.I have program thoe code to establish th ssh tunnel using password authentication. I arrive to create directory with "MakeDirectory" method of FileTransfertClient class.But my objective is to upload and download files and the FileTransfertClient  class has no method [or as I konw ] to do that.
Can you help me with way to do the uploading and the downloding with twisted conch?
Here is my program.<code>'''Created on 8 avr. 2015
@author: hsanfo'''
from sys import stdout
from twisted.python.log import startLogging, err
from twisted.internet import reactorfrom twisted.internet.defer import Deferred
from twisted.conch.ssh.common import NSimport twisted.conch.scripts.cftp.ClientOptionsfrom twisted.conch.scripts.cftp import ClientOptionsfrom twisted.conch.ssh.filetransfer import FileTransferClientfrom twisted.conch.client.connect import connectfrom twisted.conch.client.default import SSHUserAuthClient, verifyHostKeyfrom twisted.conch.ssh.connection import SSHConnectionfrom twisted.conch.ssh.channel import SSHChannel
from twisted.conch.ssh import keys, userauthfrom twisted.internet import defer
class SFTPSession(SSHChannel):    name = 'session'
    def channelOpen(self, whatever):        d = self.conn.sendRequest(            self, 'subsystem', NS('sftp'), wantReply=True)        d.addCallbacks(self._cbSFTP)

    def _cbSFTP(self, result):        client = FileTransferClient()        client.makeConnection(self)        self.dataReceived = client.dataReceived        self.conn._sftp.callback(client)


class SFTPConnection(SSHConnection):        def serviceStarted(self):        self.openChannel(SFTPSession())

class ClientUserAuth(userauth.SSHUserAuthClient):    def getPassword(self, prompt = None):        #normal password authentication        print "PASSWORD AUTH"        return defer.succeed('test') # <-- YOUR PASSWORD
    def getGenericAnswers(self, name, instruction, prompts):        #interactive password authentication        print "INTERACTIVE AUTH"        response = ['']*len(prompts)        for i, p in enumerate(prompts):            try:                if('password' in p[0].lower()):                    response[i] = 'test' # <-- YOUR PASSWORD            except:                pass        #The response is always a sequence, and the length of it is always        #identical to the length of prompts        return defer.succeed(response)       
def sftp(user, host, port):    options = ClientOptions()        options['host'] = host    options['port'] = port    conn = SFTPConnection()    conn._sftp = Deferred()    auth = SSHUserAuthClient(user, options, conn)    #auth = ClientUserAuth(user, options, conn)    #connect(host, port, options, verifyHostKey, auth)    connect(host, port, options, None, auth)        return conn._sftp

def transfer(client):    d = client.makeDirectory('foobarbaz', {})    def cbDir(ignored):        print 'Made directory'    d.addCallback(cbDir)    return d

def main():    startLogging(stdout)
    user = 'test'    host = '192.168.29.129'    port = 22    d = sftp(user, host, port)    d.addCallback(transfer)    d.addErrback(err, "Problem with SFTP transfer")    d.addCallback(lambda ignored: reactor.stop())    reactor.run()

if __name__ == '__main__':    main()<code> Best regards
SANFO

       
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150414/69aac660/attachment-0002.html>

From chriswwolfe at gmail.com  Tue Apr 14 08:36:55 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Tue, 14 Apr 2015 09:36:55 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
 <FC3A67DD-FD1E-41E2-9208-B3085B283A59@atleastfornow.net>
Message-ID: <CAEKSqktQtGs4-M4bfqttnREQ8+v0XSy_hZL0a836=1MxBT_dMQ@mail.gmail.com>

Hey Hawkie!

I gave Glyph all of the stickers that I had, as I thought he'd come into
contact with more Twisted people than I do. As such, you might want ping
him to get a hold of one.

Thanks for all your hard work!

Best,
Chris // herrwolfe

On Tue, Apr 14, 2015 at 12:28 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> zomg twisted stickers!!!
>
> Chris, let me know how much it is for you to send me some -- my laptop has
> Django stickers, but no Twisted. FOR SHAME
>
> - hawkie
>
> > On 14 Apr 2015, at 13:23, Glyph <glyph at twistedmatrix.com> wrote:
> >
> >
> >> On Apr 13, 2015, at 04:17, HawkOwl <hawkowl at atleastfornow.net> wrote:
> >>
> >> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 15.1.0 -- just in time for the PyCon sprints!
> >>
> >> This is not a big release, but does have some nice-to-haves:
> >>
> >> - You can now install Twisted's optional dependencies easier -- for
> example, `pip install twisted[tls]` installs Twisted with TLS support.
> >> - twisted.web.static.File allows defining a custom resource for
> rendering forbidden pages.
> >> - Twisted's MSN support is now deprecated.
> >> - More documentation has been added on how Trial finds tests.
> >> - ...and 26 other closed tickets containing bug fixes, feature
> enhancements, and documentation.
> >>
> >> For more information, check the NEWS file (link provided below).
> >>
> >> You can find the downloads at <https://pypi.python.org/pypi/Twisted>
> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>) . The
> NEWS file is also available at
> >> <
> https://github.com/twisted/twisted/blob/releases/release-15.1.0-7758/NEWS
> >.
> >>
> >> Many thanks to everyone who had a part in this release - the supporters
> of the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
> >>
> >> Twisted Regards,
> >> Hawkie Owl
> >
> > This is very exciting.  I am SUPER PUMPED to start telling people to
> `pip install twisted[tls]´ instead of the whole mess it used to be.  Thanks
> in particular to you, Hawkie, and to Chris Wolfe who landed that patch (and
> brought twisted stickers to PyCon!)
> >
> > -glyph
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150414/e9840f0e/attachment-0002.html>

From hs at ox.cx  Tue Apr 14 10:54:00 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 14 Apr 2015 12:54:00 -0400
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.15
Message-ID: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>

Greetings fellow Pythoneers,

I'm happy to announce that pyOpenSSL 0.15 is now available.

pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
low-level cryptography APIs but is primarily focused on providing an API 
for using the TLS protocol from Python.

Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
downloads.

***

This is the last release under the stewardship of Jean-Paul Calderone 
and the maintainership is now taken over by the Python Cryptography 
Authority (PyCA) which has been developing the C-bindings for pyOpenSSL 
for a while (aka cryptography).

We’d like to thank him for his great work over the past years and hope 
to be able to keep moving the project into a direction that will make 
him only slightly sad.

***

The highlights of this release include:

- Support to ECDHE,
- NPN and ALPN support,
- …many bug fixes!

It’s worth pointing out that OpenSSL functions generally work on *byte 
strings* because they mirror OpenSSL APIs and OpenSSL is not 
Unicode-aware.  Passing Unicode strings tends to accidentally work due 
do implicit decodes on Python 2 but they emit a DeprecationWarning now.  
Please note that DeprecationWarnings are silenced by default on Python 
2.7.

See the ChangeLog at 
<https://github.com/pyca/pyopenssl/blob/0.15/ChangeLog> for more 
details!

On behalf of PyCA,
Hynek Schlawack



From hs at ox.cx  Tue Apr 14 17:06:21 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 14 Apr 2015 19:06:21 -0400
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.15*.1*
In-Reply-To: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
References: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
Message-ID: <EE3E29B9-3E0B-4CAF-AF62-17561C1561AE@ox.cx>

Hello again,

since releasing software is so much fun, 0.15.1 is out on PyPI too.

It fixes a small regression that shouldn’t affect you in practice but 
breaks the Twisted test suite.

See https://github.com/pyca/pyopenssl/pull/225 for details.

Brown baggily yours,
—h

On 14 Apr 2015, at 12:54, Hynek Schlawack wrote:

> Greetings fellow Pythoneers,
>
> I'm happy to announce that pyOpenSSL 0.15 is now available.
>
> pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
> low-level cryptography APIs but is primarily focused on providing an 
> API for using the TLS protocol from Python.
>
> Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
> downloads.
>
> ***
>
> This is the last release under the stewardship of Jean-Paul Calderone 
> and the maintainership is now taken over by the Python Cryptography 
> Authority (PyCA) which has been developing the C-bindings for 
> pyOpenSSL for a while (aka cryptography).
>
> We’d like to thank him for his great work over the past years and 
> hope to be able to keep moving the project into a direction that will 
> make him only slightly sad.
>
> ***
>
> The highlights of this release include:
>
> - Support to ECDHE,
> - NPN and ALPN support,
> - …many bug fixes!
>
> It’s worth pointing out that OpenSSL functions generally work on 
> *byte strings* because they mirror OpenSSL APIs and OpenSSL is not 
> Unicode-aware.  Passing Unicode strings tends to accidentally work due 
> do implicit decodes on Python 2 but they emit a DeprecationWarning 
> now.  Please note that DeprecationWarnings are silenced by default on 
> Python 2.7.
>
> See the ChangeLog at 
> <https://github.com/pyca/pyopenssl/blob/0.15/ChangeLog> for more 
> details!
>
> On behalf of PyCA,
> Hynek Schlawack
> -- 
> https://mail.python.org/mailman/listinfo/python-announce-list
>
>     Support the Python Software Foundation:
>     http://www.python.org/psf/donations/



From kevin.horn at gmail.com  Tue Apr 14 21:07:35 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Apr 2015 22:07:35 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 15.1 Release Announcement
In-Reply-To: <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
References: <A9B8205C-F287-472C-AA5F-8E6E132862F4@atleastfornow.net>
 <4342E895-7EC5-421A-804C-5887CE5F539F@twistedmatrix.com>
Message-ID: <CA+U=zK0BcXmnXo2XFk26sBbnULpt+SzLR-8iLbmhnHAZK0=+dA@mail.gmail.com>

On Tue, Apr 14, 2015 at 12:23 AM, Glyph <glyph at twistedmatrix.com> wrote:

> I am SUPER PUMPED to start telling people to `pip install twisted[tls]´
> instead of the whole mess it used to be.
>

This. This. SO MUCH THIS!


> Thanks in particular to you, Hawkie, and to Chris Wolfe who landed that
> patch
>

Yes.  Many thanks are due!


> (and brought twisted stickers to PyCon!)
>

Somebody finally made stickers?!?!  I knew I should have gone this year...




--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150414/0d888027/attachment-0002.html>

From fehrist at codeghar.com  Tue Apr 14 21:58:31 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Tue, 14 Apr 2015 20:58:31 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
Message-ID: <552DE1E7.2060802@codeghar.com>

On 4/13/15, 10:42 PM, Glyph wrote:

> What is Diameter?

Diameter is part of the Authentication, Authorization, and Accounting 
(AAA) family. It's a successor to RADIUS and is widely used in the 
telecommunications/mobile industry.

> I don't mean to discourage anyone from volunteering - if you get a
> direct answer from someone else then great :) - but it would probably be
> easiest for you to begin just by asking questions of the mailing list,
> and perhaps formalizing a mentorship relationship later.  Most twisted
> core team members tend to be very busy, but the community as a whole
> does a pretty good job of keeping up with the questions here.
>   Personally I'd love to offer to mentor you, but I am fairly overloaded
> as it is and would not be able to give you the attention you deserve.

I understand.

> You might want to check this out as a resource to get started on the
> development process, just to close a few trivial bugs to get the hang of
> it before starting the larger project of Diameter support:
>
> http://bitly.com/easy-twisted-tickets

Starting with fixing easy bugs is a fantastic idea. I'll browse to see 
where I can contribute.

Thank you for the warm welcome.

--
Hamza Sheikh
Twitter: @aikchar



From fehrist at codeghar.com  Tue Apr 14 22:04:39 2015
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Tue, 14 Apr 2015 21:04:39 -0700
Subject: [Twisted-Python] Adding support for Diameter protocol
In-Reply-To: <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>
References: <552C95F6.4060408@codeghar.com>
 <2CB476A1-7C91-4C55-89AC-8C70F0CB9475@twistedmatrix.com>
 <CAKN9TDLT49QQyjdqn52kceMMUBY6xCKPUw66ttJLoH+gkOHjOA@mail.gmail.com>
Message-ID: <552DE357.1030508@codeghar.com>

On 4/13/15, 10:57 PM, Daniel Sank wrote:

> I learned how to write asynchronous code more "recently" than a lot of
> the core devs and I'd be happy to guide you. As glyph says, the best way
> is to simply ask questions as you have them.

Thanks. I'm sure there will be a lot of questions.

> Of course, a good tutorial is invaluable. Without any doubt the best
> starting point is David Peticolas's tutorial found here:
> http://krondo.com/?page_id=1327.

Thanks for the tutorial link.

--
Hamza Sheikh
Twitter: @aikchar




From kevin.horn at gmail.com  Tue Apr 14 22:19:01 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Apr 2015 23:19:01 -0500
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
References: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>

On Tue, Apr 14, 2015 at 6:47 AM, halidou SANFO <sanfo.halidou at yahoo.fr>
wrote:

> Hi everybody,
> I am student and need help of any one.
> I am working on internship and I have to implement a SFTP client usign
> twisted conch module.
> I have program thoe code to establish th ssh tunnel using password
> authentication. I arrive to create directory with "MakeDirectory" method of
> FileTransfertClient class.
> But my objective is to upload and download files and the
> FileTransfertClient  class has no method [or as I konw ] to do that.
>
> Can you help me with way to do the uploading and the downloding with
> twisted conch?
>
> Here is my program.
> <code>
> '''
> Created on 8 avr. 2015
>
> @author: hsanfo
> '''
>
> from sys import stdout
>
> from twisted.python.log import startLogging, err
>
> from twisted.internet import reactor
> from twisted.internet.defer import Deferred
>
> from twisted.conch.ssh.common import NS
> import twisted.conch.scripts.cftp.ClientOptions
> from twisted.conch.scripts.cftp import ClientOptions
> from twisted.conch.ssh.filetransfer import FileTransferClient
> from twisted.conch.client.connect import connect
> from twisted.conch.client.default import SSHUserAuthClient, verifyHostKey
> from twisted.conch.ssh.connection import SSHConnection
> from twisted.conch.ssh.channel import SSHChannel
>
> from twisted.conch.ssh import keys, userauth
> from twisted.internet import defer
>
> class SFTPSession(SSHChannel):
>     name = 'session'
>
>     def channelOpen(self, whatever):
>         d = self.conn.sendRequest(
>             self, 'subsystem', NS('sftp'), wantReply=True)
>         d.addCallbacks(self._cbSFTP)
>
>
>     def _cbSFTP(self, result):
>         client = FileTransferClient()
>         client.makeConnection(self)
>         self.dataReceived = client.dataReceived
>         self.conn._sftp.callback(client)
>
>
>
> class SFTPConnection(SSHConnection):
>
>     def serviceStarted(self):
>         self.openChannel(SFTPSession())
>
>
> class ClientUserAuth(userauth.SSHUserAuthClient):
>     def getPassword(self, prompt = None):
>         #normal password authentication
>         print "PASSWORD AUTH"
>         return defer.succeed('test') # <-- YOUR PASSWORD
>
>     def getGenericAnswers(self, name, instruction, prompts):
>         #interactive password authentication
>         print "INTERACTIVE AUTH"
>         response = ['']*len(prompts)
>         for i, p in enumerate(prompts):
>             try:
>                 if('password' in p[0].lower()):
>                     response[i] = 'test' # <-- YOUR PASSWORD
>             except:
>                 pass
>         #The response is always a sequence, and the length of it is always
>         #identical to the length of prompts
>         return defer.succeed(response)
>
>
> def sftp(user, host, port):
>     options = ClientOptions()
>
>     options['host'] = host
>     options['port'] = port
>     conn = SFTPConnection()
>     conn._sftp = Deferred()
>     auth = SSHUserAuthClient(user, options, conn)
>     #auth = ClientUserAuth(user, options, conn)
>     #connect(host, port, options, verifyHostKey, auth)
>     connect(host, port, options, None, auth)
>
>     return conn._sftp
>
>
> def transfer(client):
>     d = client.makeDirectory('foobarbaz', {})
>     def cbDir(ignored):
>         print 'Made directory'
>     d.addCallback(cbDir)
>     return d
>
>
> def main():
>     startLogging(stdout)
>
>     user = 'test'
>     host = '192.168.29.129'
>     port = 22
>     d = sftp(user, host, port)
>     d.addCallback(transfer)
>     d.addErrback(err, "Problem with SFTP transfer")
>     d.addCallback(lambda ignored: reactor.stop())
>     reactor.run()
>
>
> if __name__ == '__main__':
>     main()
> <code>
>
> Best regards
>
> SANFO
>
>
>
>
This is a multi-step process.

1) Open the StackOverflow page that you copied the above code from.
2) Actually read the whole answer.
3) Read the documentation for the FileTransferClient class.  It's in the
Twisted API documentation.  It does have an openFile method.
4) Use the openFile method.
5) read and/or write using the returned object, which (as explained in the
SO answer) will adhere to the ISFTPFile interface.  That also has
documentation, which you should probably read.
6) Once you have done all those things, if you still have questions about
_specific_ problems, feel free to ask them.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150414/7ccaa96d/attachment-0002.html>

From sanfo.halidou at yahoo.fr  Wed Apr 15 01:11:13 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Wed, 15 Apr 2015 07:11:13 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>
References: <CA+U=zK1+SqNgQ1JTOMBO34rueGTk38Wja31un-Kqr8YN2oTwKA@mail.gmail.com>
Message-ID: <151872264.3657221.1429081873514.JavaMail.yahoo@mail.yahoo.com>

Thank you for your reply.In fact I found this code in many forums like S.O and I tried to understand it, by doing exactly  all steps you recommend in you response. The difficulty I have found is with the method of the returned object of openFile method of the FileTransferClient class. This returned object that adhere to ISFTP interface; has two methods to write and read: "writeChunk" and "readChunk". My problem is to use these last functions or methods to perform a file transfert (uploading and downloading)  from my local machine running twisted to a SFTP server and vise-versa.Can you give me an code example to perform this task? with the methods of the openFile object.
Sanfo

 


        


     Le Mercredi 15 avril 2015 6h22, Kevin Horn <kevin.horn at gmail.com> a écrit :
   

 On Tue, Apr 14, 2015 at 6:47 AM, halidou SANFO <sanfo.halidou at yahoo.fr> wrote:

Hi everybody,I am student and need help of any one.I am working on internship and I have to implement a SFTP client usign twisted conch module.I have program thoe code to establish th ssh tunnel using password authentication. I arrive to create directory with "MakeDirectory" method of FileTransfertClient class.But my objective is to upload and download files and the FileTransfertClient  class has no method [or as I konw ] to do that.
Can you help me with way to do the uploading and the downloding with twisted conch?
Here is my program.<code>'''Created on 8 avr. 2015
@author: hsanfo'''
from sys import stdout
from twisted.python.log import startLogging, err
from twisted.internet import reactorfrom twisted.internet.defer import Deferred
from twisted.conch.ssh.common import NSimport twisted.conch.scripts.cftp.ClientOptionsfrom twisted.conch.scripts.cftp import ClientOptionsfrom twisted.conch.ssh.filetransfer import FileTransferClientfrom twisted.conch.client.connect import connectfrom twisted.conch.client.default import SSHUserAuthClient, verifyHostKeyfrom twisted.conch.ssh.connection import SSHConnectionfrom twisted.conch.ssh.channel import SSHChannel
from twisted.conch.ssh import keys, userauthfrom twisted.internet import defer
class SFTPSession(SSHChannel):    name = 'session'
    def channelOpen(self, whatever):        d = self.conn.sendRequest(            self, 'subsystem', NS('sftp'), wantReply=True)        d.addCallbacks(self._cbSFTP)

    def _cbSFTP(self, result):        client = FileTransferClient()        client.makeConnection(self)        self.dataReceived = client.dataReceived        self.conn._sftp.callback(client)


class SFTPConnection(SSHConnection):        def serviceStarted(self):        self.openChannel(SFTPSession())

class ClientUserAuth(userauth.SSHUserAuthClient):    def getPassword(self, prompt = None):        #normal password authentication        print "PASSWORD AUTH"        return defer.succeed('test') # <-- YOUR PASSWORD
    def getGenericAnswers(self, name, instruction, prompts):        #interactive password authentication        print "INTERACTIVE AUTH"        response = ['']*len(prompts)        for i, p in enumerate(prompts):            try:                if('password' in p[0].lower()):                    response[i] = 'test' # <-- YOUR PASSWORD            except:                pass        #The response is always a sequence, and the length of it is always        #identical to the length of prompts        return defer.succeed(response)       
def sftp(user, host, port):    options = ClientOptions()        options['host'] = host    options['port'] = port    conn = SFTPConnection()    conn._sftp = Deferred()    auth = SSHUserAuthClient(user, options, conn)    #auth = ClientUserAuth(user, options, conn)    #connect(host, port, options, verifyHostKey, auth)    connect(host, port, options, None, auth)        return conn._sftp

def transfer(client):    d = client.makeDirectory('foobarbaz', {})    def cbDir(ignored):        print 'Made directory'    d.addCallback(cbDir)    return d

def main():    startLogging(stdout)
    user = 'test'    host = '192.168.29.129'    port = 22    d = sftp(user, host, port)    d.addCallback(transfer)    d.addErrback(err, "Problem with SFTP transfer")    d.addCallback(lambda ignored: reactor.stop())    reactor.run()

if __name__ == '__main__':    main()<code> Best regards
SANFO




This is a multi-step process. 
1) Open the StackOverflow page that you copied the above code from.2) Actually read the whole answer.3) Read the documentation for the FileTransferClient class.  It's in the Twisted API documentation.  It does have an openFile method.4) Use the openFile method.5) read and/or write using the returned object, which (as explained in the SO answer) will adhere to the ISFTPFile interface.  That also has documentation, which you should probably read.6) Once you have done all those things, if you still have questions about _specific_ problems, feel free to ask them.


--Kevin Horn
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150415/431c91f7/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Apr 15 05:13:33 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Apr 2015 11:13:33 -0000
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
References: <1695656692.2840237.1429012030407.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <20150415111333.6423.1329137704.divmod.xquotient.324@top>

On 14 Apr, 11:47 am, sanfo.halidou at yahoo.fr wrote:
>Hi everybody,I am student and need help of any one.I am working on 
>internship and I have to implement a SFTP client usign twisted conch 
>module.I have program thoe code to establish th ssh tunnel using 
>password authentication. I arrive to create directory with 
>"MakeDirectory" method of FileTransfertClient class.But my objective is 
>to upload and download files and the FileTransfertClient  class has no 
>method [or as I konw ] to do that.
>Can you help me with way to do the uploading and the downloding with 
>twisted conch?
>Here is my program.<code>'''Created on 8 avr. 2015
>@author: hsanfo'''

Hi Sanfo,

You may want to be a little more careful to preserve 
ownership/authorship information.  Your presentation of this code, 
particularly with an "author" tag including only your name, gives a 
strong impression that you are the author and copyright holder of this 
program.

Doing this sort of thing can get you into some trouble.  You may want to 
familiarise yourself with stackoverflow's terms of service and ask 
someone where you're interning to give you a basic overview of copyright 
law as it pertains to software.

Good luck,
Jean-Paul



From sanfo.halidou at yahoo.fr  Wed Apr 15 07:41:50 2015
From: sanfo.halidou at yahoo.fr (halidou SANFO)
Date: Wed, 15 Apr 2015 13:41:50 +0000 (UTC)
Subject: [Twisted-Python] Methods to upload and download file to a sftp
 server using twisted conch
In-Reply-To: <20150415111333.6423.1329137704.divmod.xquotient.324@top>
References: <20150415111333.6423.1329137704.divmod.xquotient.324@top>
Message-ID: <1547102394.4138386.1429105310284.JavaMail.yahoo@mail.yahoo.com>

 HiThank you.I forgot to delete the default add of eclipse.Sorry!!
sanfo

        


     Le Mercredi 15 avril 2015 13h13, "exarkun at twistedmatrix.com" <exarkun at twistedmatrix.com> a écrit :
   

 On 14 Apr, 11:47 am, sanfo.halidou at yahoo.fr wrote:
>Hi everybody,I am student and need help of any one.I am working on 
>internship and I have to implement a SFTP client usign twisted conch 
>module.I have program thoe code to establish th ssh tunnel using 
>password authentication. I arrive to create directory with 
>"MakeDirectory" method of FileTransfertClient class.But my objective is 
>to upload and download files and the FileTransfertClient  class has no 
>method [or as I konw ] to do that.
>Can you help me with way to do the uploading and the downloding with 
>twisted conch?
>Here is my program.<code>'''Created on 8 avr. 2015
>@author: hsanfo'''

Hi Sanfo,

You may want to be a little more careful to preserve 
ownership/authorship information.  Your presentation of this code, 
particularly with an "author" tag including only your name, gives a 
strong impression that you are the author and copyright holder of this 
program.

Doing this sort of thing can get you into some trouble.  You may want to 
familiarise yourself with stackoverflow's terms of service and ask 
someone where you're interning to give you a basic overview of copyright 
law as it pertains to software.

Good luck,
Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150415/56ad92f5/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Apr 15 21:09:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 15 Apr 2015 23:09:06 -0400
Subject: [Twisted-Python] [Cryptography-dev] [ANN] pyOpenSSL 0.15
In-Reply-To: <CAFRnB2UgfLHx47ScAH=VUFz14wE32aXstaOHNSzzutmaEYP-hw@mail.gmail.com>
References: <0820C766-7EEF-4763-BD5F-745839BB12E0@ox.cx>
 <CABi-WVw83sxK2quJGgMnQvkO+Go0k-EKSCOxnbza0f1bhmKMcg@mail.gmail.com>
 <CAFRnB2UgfLHx47ScAH=VUFz14wE32aXstaOHNSzzutmaEYP-hw@mail.gmail.com>
Message-ID: <FF5ABF60-1D40-4149-9420-DCD91CF2D7D7@twistedmatrix.com>

Thank you very much to Jean-Paul and Hynek for getting out this most recent release! (And thanks to Hynek for my opportunity to contribute my first patch to pyOpenSSL ;-)).

-glyph

> On Apr 15, 2015, at 14:10, Alex Gaynor <alex.gaynor at gmail.com> wrote:
> 
> Thank you for your years of maintenance of pyOpenSSL!
> 
> Alex
> 
> On Wed, Apr 15, 2015 at 2:02 PM, Jean-Paul Calderone <jean-paul at clusterhq.com <mailto:jean-paul at clusterhq.com>> wrote:
> On Tue, Apr 14, 2015 at 12:54 PM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> Greetings fellow Pythoneers,
> 
> I'm happy to announce that pyOpenSSL 0.15 is now available.
> 
> 
> Congrats on getting the release out, Hynek.  Thanks once again for stepping in to take over the lead role on the pyOpenSSL project.  Thanks also to all of the PyCA folks at the PyCon sprints on Monday to prepare for this release.
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Cryptography-dev mailing list
> Cryptography-dev at python.org <mailto:Cryptography-dev at python.org>
> https://mail.python.org/mailman/listinfo/cryptography-dev <https://mail.python.org/mailman/listinfo/cryptography-dev>
> 
> 
> 
> 
> -- 
> "I disapprove of what you say, but I will defend to the death your right to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
> "The people's good is the highest law." -- Cicero
> GPG Key fingerprint: 125F 5C67 DFE9 4084
> _______________________________________________
> Cryptography-dev mailing list
> Cryptography-dev at python.org
> https://mail.python.org/mailman/listinfo/cryptography-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150415/233e0612/attachment-0002.html>

From trac at twistedmatrix.com  Sun Apr 19 00:05:28 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Apr 2015 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1429423528.23.46657603101031429@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150419/c296cd9c/attachment-0002.html>

From adi at roiban.ro  Tue Apr 21 09:25:29 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 21 Apr 2015 16:25:29 +0100
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
 Application Layer Protocol Negotiation
Message-ID: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>

Hi,

I just want to let you know about this patch which is in work :
https://twistedmatrix.com/trac/ticket/7860

I did an initial review but it would help to get more feedback for this new API.

Also it depends on a new pyOpenSSL 0.15 version. Do we have a
buildslave with this version?
What is the process of testing / reviewing this kind of patches?

Many thanks!
-- 
Adi Roiban



From hawkowl at atleastfornow.net  Tue Apr 21 09:47:36 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 21 Apr 2015 23:47:36 +0800
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
	Application Layer Protocol Negotiation
In-Reply-To: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
References: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
Message-ID: <5AB2AFD2-5AD6-40FE-A935-B73C326C6E97@atleastfornow.net>


> On 21 Apr 2015, at 23:25, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I just want to let you know about this patch which is in work :
> https://twistedmatrix.com/trac/ticket/7860
> 
> I did an initial review but it would help to get more feedback for this new API.
> 
> Also it depends on a new pyOpenSSL 0.15 version. Do we have a
> buildslave with this version?
> What is the process of testing / reviewing this kind of patches?
> 
> Many thanks!
> --
> Adi Roiban

Oooh, exciting.

I do not think we have a buildslave with this version. My Debian 7 2.7/3.3/3.4/3.5a4 builders, when I get them up, will have 0.15, with an OpenSSL supporting NPN but not ALPN (1.0.2 or greater for ALPN, Debian 7 has 1.0.1.).

- hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150421/fa85b3f3/attachment.sig>

From p.mayers at imperial.ac.uk  Tue Apr 21 10:10:33 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 21 Apr 2015 17:10:33 +0100
Subject: [Twisted-Python] Add support for Next Protocol Negotiation and
 Application Layer Protocol Negotiation
In-Reply-To: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
References: <CAFycZ9eYLtdySOQ1_tGR6=fR=nd=EOfCVKA0n76Ku62gfCP3MA@mail.gmail.com>
Message-ID: <55367679.50209@imperial.ac.uk>

On 21/04/15 16:25, Adi Roiban wrote:
> Hi,
>
> I just want to let you know about this patch which is in work :
> https://twistedmatrix.com/trac/ticket/7860

Nice.

>
> I did an initial review but it would help to get more feedback for this new API.

I would very, very much like to see something along the lines of a 
factory-of-factories which handles creating the protocol instances on 
connections automatically.

Straw-man API:

class NegoFactory(tls.NegoFactory):
     nextProtocols = ('h2', 'http/1.1')

     def buildProtocol(self, addr, nextproto):
       if nextproto=='h2':
         return H2Proto()
       elif nextproto=='http/1.1':
         return HttpProto()
       else:
         raise NotImplemented()

f = NegoFactory()
listenSSL(port, f)

The basic protocol level support is great, but it'll be much easier to 
use if there's a Twisted-like API on top of it.

But don't block the main ticket - open another one up maybe?



From hawkowl at atleastfornow.net  Wed Apr 22 02:04:05 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 16:04:05 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
Message-ID: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>

Hi,

I think that Twisted should deprecate subproject packaging -- they aren't uploaded to pip, don't support Python 3, I don't think we have docs for using them anywhere, and when included in downstream they usually only end up in confusion as various imports fail but some succeed due to only some subprojects being installed. Eventuall removing them means we have less code (and only one setup.py + setup3.py), less packages, and simplifies things.

It does mean that you can't *just* get Twisted Web, but Twisted Core is so big (internet, trial, amp, python, logger, cred, protocols -- even positioning is in there) that the size difference is marginal. For example, uncompressed Twisted (without the docs) is 14MB, while Core alone is 7MB. Assuming that you want to use Twisted Web, you'll need Twisted-Web and Twisted-Names (because not using Twisted Names in web.http.Request is deprecated), which is ~9MB. The difference in tarball size is even less -- Twisted without docs being 2.2MB and Twisted Core + Web + Names being 1.4MB.

Plus, I am not sure that there is "subprojects" really, anymore -- it's all just Twisted.

So, I think we should:

- Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
- Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
- Migrate Twisted's source dist to being done by "python setup.py sdist" instead of manually assembling the tarball. This means we can generate the requisite PKG-INFO metadata automatically. This should be done for the main tarball (which is uploaded to PyPI) in maybe 15.2, but not the subproject tarballs (Twisted Core + rest) which will remain the same until they are removed in 16.0.
- Replace manually uploading these distributions to PyPI and use twine to automate it for 15.2, when Twisted's tarball has the needed PKG-INFO (from being generated by sdist). Twine doesn't support uploading .msis, but as we now have Python wheels on PyPI, I think we can do without uploading MSIs, and just have them on the website.

Keeping the projects topfiles as they are I think is good -- although I am not sure if having a NEWS in each subproject is useful. Maybe we should just have the one NEWS file once 16.0 lands, since the other ones wouldn't be packaged, and are therefore less useful.

As for downstream:
- Apple includes all of Twisted, so I don't think this will affect them.
- Ubuntu and Debian package the subprojects separately. I guess they would have to make dummy packages that depend on the monolithic python-twisted instead.
- Fedora (so Red Hat too?) have obsoleted the subprojects and point them at python-twisted instead, so they don't package the subprojects.
- FreeBSD packages the Twisted subprojects separately, so they would have to do the same as Debian to migrate.

Overall, I don't think this adversely affects downstream in the long term -- it does what Red Hat did as of Fedora 21, and it'll end up being less packages overall.

I think this is a good idea and am willing to put the work in to implement this. Does anyone object to this? Is there a use case for keeping the subprojects packagable that I don't know about?

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150422/4db276c1/attachment.sig>

From hs at ox.cx  Wed Apr 22 02:20:33 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Apr 2015 10:20:33 +0200
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <B38ABD39-02F8-4F89-8C41-FF9256C673DA@ox.cx>

> I think this is a good idea and am willing to put the work in to implement this. Does anyone object to this? Is there a use case for keeping the subprojects packagable that I don't know about?

+10

1. The split is due to Twisted not fitting on actual diskettes in ancient times.
2. It adds a frustrating amount of complexity.

—h


From p.mayers at imperial.ac.uk  Wed Apr 22 05:00:36 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Apr 2015 12:00:36 +0100
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <55377F54.9060903@imperial.ac.uk>

On 22/04/15 09:04, HawkOwl wrote:
> Hi,
>
> I think that Twisted should deprecate subproject packaging -- they

Agreed. It's largely pointless.



From glyph at twistedmatrix.com  Wed Apr 22 05:46:53 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Apr 2015 07:46:53 -0400
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>


> On Apr 22, 2015, at 04:04, HawkOwl <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:

> So, I think we should:
> 
> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.

If anything, this seems like too generous a timeline to me.  We have the deprecation process to preserve API stability.  Do the subproject setup.py's expose any API surface?  "from twisted.web import setup" already appears to be an ImportError to me.  I don't think that the subproject release process has helped anyone in a long time.  Is there any reason why we can't just drop it from the next release, other than "the change might not land in time"?

One word of warning - do try to reach out and contact the package maintainers directly, as they may not follow this list closely, and for some reason they seem keen on separated release tarballs.  They might have a compelling use-case (though I doubt it), but at least they should be notified so that unified packages show up promptly after the release where we first issue them.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150422/697582a8/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Apr 22 05:49:59 2015
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Apr 2015 11:49:59 -0000
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <20150422114959.6203.778518084.divmod.xquotient.6@top>

On 08:04 am, hawkowl at atleastfornow.net wrote:
>Hi,
>
>I think that Twisted should deprecate subproject packaging

You probably won't hear much if any disagreement with this proposal on 
this list.

The sub-projects were never for people who like and are into Twisted. 
They were a tool to help convince people who don't use Twisted yet that 
it's not an unapproachable monolith.

We could discuss whether they have been effective in this regard but if 
you want to hear from people who *might* actually benefit from the 
split, you probably need to talk to people who aren't using Twisted.

Jean-Paul



From hawkowl at atleastfornow.net  Wed Apr 22 05:55:48 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 19:55:48 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
Message-ID: <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>


> On 22 Apr 2015, at 19:46, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Apr 22, 2015, at 04:04, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> So, I think we should:
>> 
>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
> 
> If anything, this seems like too generous a timeline to me.  We have the deprecation process to preserve API stability.  Do the subproject setup.py's expose any API surface?  "from twisted.web import setup" already appears to be an ImportError to me.  I don't think that the subproject release process has helped anyone in a long time.  Is there any reason why we can't just drop it from the next release, other than "the change might not land in time"?
> 
> One word of warning - do try to reach out and contact the package maintainers directly, as they may not follow this list closely, and for some reason they seem keen on separated release tarballs.  They might have a compelling use-case (though I doubt it), but at least they should be notified so that unified packages show up promptly after the release where we first issue them.
> 
> -glyph

The timeline generosity is simply so that downstream maintainers can get their stuff sorted before we drop it. I'm not sure how fast they move, and if all the major ones do it before that, I guess we can drop it early.

Since there doesn't seem to be any "omg no Hawkie what are you doing" from either you or JP, and otherwise "yes" from people I've asked/on this list so far, I'm guessing that I'll take the initiative and reach out to the downstream maintainers with some degree of "this is what we're doing now unless there's a very good reason".

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150422/84beead3/attachment.sig>

From hawkowl at atleastfornow.net  Wed Apr 22 06:38:07 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Wed, 22 Apr 2015 20:38:07 +0800
Subject: [Twisted-Python] Notice for downstream package maintainers:
	Subproject packages are going away
In-Reply-To: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
Message-ID: <2411246C-6FAD-4A33-8B89-93F2B89BE2BF@atleastfornow.net>

Hi,

As discussed in the ML thread (http://twistedmatrix.com/pipermail/twisted-python/2015-April/029386.html), and with general "yes"ness, I think I should make it official -- Twisted subproject packages are going away.

Downstream packagers that package Twisted as multiple subprojects (core+[mail,conch,names,etc]) should replace them with one Twisted package, from the source tarball released under `http://twistedmatrix.com/Releases/Twisted/{VERSION}/Twisted-{VERSION}.tar.bz2`.

The roadmap for this is to completely drop the subproject packages at 16.0 at the latest, to give downstream packagers time to update. If the major distributions that package Twisted by using the subprojects[1] (FreeBSD, Debian, Gentoo) migrate to the one Twisted package before then, there is no use releasing the subproject packages and they will be dropped that release.

- Hawkie

[1] Fedora and Arch already just have the one python-twisted package.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150422/229989ed/attachment.sig>

From adi at roiban.ro  Wed Apr 22 07:28:22 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 22 Apr 2015 14:28:22 +0100
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
Message-ID: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>

>>> So, I think we should:
>>>
>>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.

I am ok with deprecating this ... but I hope that this will not
discourage the effort to decouple the Twisted subprojects.

I would like to see the subproject developed as independent
projects... this should help enforcing the decoupling and would speed
up the test suite.

Right now if you make a change in twisted.positioning, buildbot will
run all tests :(

-- 
Adi Roiban



From kevin.horn at gmail.com  Wed Apr 22 11:37:56 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 22 Apr 2015 12:37:56 -0500
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
Message-ID: <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>

Agreed that this is a good idea, though I'd still like to see NEWS broken
out by "subproject" (or maybe we should say "topic" now?).  I don't care
whether it's in the same file or not, but when a new Twisted release comes
out I find reviewing changes much easier if I can think about one "topic"
at a time.

Otherwise +100.  I'm annoyed every time I have to install a downstream
Twisted package and it isn't _all_ of Twisted.

On Wed, Apr 22, 2015 at 8:28 AM, Adi Roiban <adi at roiban.ro> wrote:

> >>> So, I think we should:
> >>>
> >>> - Deprecate the subproject setup.pys starting with 15.2 and stop
> packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July,
> 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases
> + 1 major release notice).
> >>> - Remove the support code for subprojects in twisted.python._release +
> the release scripts in the 16.0 release.
>
> I am ok with deprecating this ... but I hope that this will not
> discourage the effort to decouple the Twisted subprojects.
>
> I would like to see the subproject developed as independent
> projects... this should help enforcing the decoupling and would speed
> up the test suite.
>
> Right now if you make a change in twisted.positioning, buildbot will
> run all tests :(
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150422/892142bb/attachment-0002.html>

From hawkowl at atleastfornow.net  Wed Apr 22 13:31:48 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 23 Apr 2015 03:31:48 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
Message-ID: <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>


> On 23 Apr 2015, at 01:37, Kevin Horn <kevin.horn at gmail.com> wrote:
> 
> Agreed that this is a good idea, though I'd still like to see NEWS broken out by "subproject" (or maybe we should say "topic" now?).  I don't care whether it's in the same file or not, but when a new Twisted release comes out I find reviewing changes much easier if I can think about one "topic" at a time.

Do you mean keeping the NEWS file as-is currently? I think that's a good idea. It's a nice, logical grouping.

I personally think that it should pruned down a little -- Twisted Runner & Pair don't really need their own sections, and Twisted News & Conch could probably be rolled into the core changelist as well. Not sure, I guess we'll come to that when there's tickets in review for it. :)

- Hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150423/4ae23db2/attachment.sig>

From glyph at twistedmatrix.com  Wed Apr 22 18:01:52 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Apr 2015 20:01:52 -0400
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
Message-ID: <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>


> On Apr 22, 2015, at 09:28, Adi Roiban <adi at roiban.ro> wrote:
> 
>>>> So, I think we should:
>>>> 
>>>> - Deprecate the subproject setup.pys starting with 15.2 and stop packaging subprojects separately as of 16.0 (15.2 in May, 15.3 in July, 15.4 in September, 15.5 in November, 16.0 in January 2016 -- so ~4 releases + 1 major release notice).
>>>> - Remove the support code for subprojects in twisted.python._release + the release scripts in the 16.0 release.
> 
> I am ok with deprecating this ... but I hope that this will not
> discourage the effort to decouple the Twisted subprojects.

There is not really any such effort underway.  However, if anything, this change would make such an effort easier.  If we want to release the projects separately, we should maintain them separately; the lesson of this "subproject" split is that what users want, to perceive that projects are more "lightweight", is a different "front door" to each project - different websites, different documentation indexes, different bug trackers - and not necessarily just a smaller download.  I'm pretty sure that if we split everything up but the actual releases we'd have better luck convincing people twisted is not hard to understand.

One immediate thing I think we should decouple, though, are our native dependencies.  IOCPReactor should remain in Twisted, but iocpsupport should be a separate, optional dependency, available as an extra.  Similarly, _initgroups, sendmsg, portmap, and raiser should all be optional dependencies, so that Twisted itself can be a pure wheel, and you can opt in to enhanced functionality by installing extras.

> I would like to see the subproject developed as independent
> projects... this should help enforcing the decoupling and would speed
> up the test suite.

Speeding up the test suite should be accomplished by actually fixing and optimizing the tests, not by chopping big sections of it off.  The amount of tests we have right now can run very quickly; but there are two immediate problems:

1. we are not leveraging twistd -j, and since we have no buildbots that run it, we keep making changes that break it for our test suite.  We should introduce a builder that runs the tests in parallel.
2. many of the tests still return Deferreds when they should not, spin the reactor, wait for real timeouts, and so on.  we should endeavor to reduce the number of real-IO tests as much as possible.

> Right now if you make a change in twisted.positioning, buildbot will
> run all tests :(

Maybe we could speed up twisted.positioning's tests without sacrificing quality, but we would need to continue to run twisted.positioning's tests for every change to twisted core regardless, even if they were separate projects, or we would be reducing the amount of integration coverage received by twisted core.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150422/94056d21/attachment-0002.html>

From hawkowl at atleastfornow.net  Wed Apr 22 23:45:56 2015
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 23 Apr 2015 13:45:56 +0800
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <20A668D6-604C-4D39-B716-62B420559DA9@twistedmatrix.com>
Message-ID: <FFF99C5E-C405-4C13-B178-DEBAE7A48364@atleastfornow.net>


> On 23 Apr 2015, at 08:01, Glyph <glyph at twistedmatrix.com> wrote:
> 
> One immediate thing I think we should decouple, though, are our native dependencies.  IOCPReactor should remain in Twisted, but iocpsupport should be a separate, optional dependency, available as an extra.  Similarly, _initgroups, sendmsg, portmap, and raiser should all be optional dependencies, so that Twisted itself can be a pure wheel, and you can opt in to enhanced functionality by installing extras.
> 

Also worth noting, pulling twisted.python.constants out into a separate package has a PR open so that part of this can become reality: https://github.com/twisted/constantly/pull/1

- Hawkie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150423/c0b048e3/attachment.sig>

From adi at roiban.ro  Fri Apr 24 00:41:31 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 07:41:31 +0100
Subject: [Twisted-Python] Using six for Python3 porting
Message-ID: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>

Hi,

I feel that twisted.python.compat is slowly duplicating / reinventing
an important part of the six code.

Code which does not import from  twisted.python.compat will have all
kind of ad-hoc / in module code to handle differences between py2 and
py3 and many if _PY3 conditional blocks.

What do you say if we add six as dependency for twisted ?

In case you don't want six as a dependency, it can be copied in
twisted code base and make it available from twisted.python.six or a
similar package.

-- 
Adi Roiban



From glyph at twistedmatrix.com  Fri Apr 24 01:00:21 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Apr 2015 03:00:21 -0400
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>


> On Apr 24, 2015, at 02:41, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.
> 
> Code which does not import from  twisted.python.compat will have all
> kind of ad-hoc / in module code to handle differences between py2 and
> py3 and many if _PY3 conditional blocks.
> 
> What do you say if we add six as dependency for twisted ?
> 
> In case you don't want six as a dependency, it can be copied in
> twisted code base and make it available from twisted.python.six or a
> similar package.

I think that this is basically the right thing to do, since almost all of our optional dependencies depend on it.  I'm somewhat surprised that zope.interface hasn't forced this on us already, honestly; what are they doing for a compatibility layer?

I don't want to ssh in to 25 builders and manually install six on each one though.  We should figure out a better dependency management solution for the build fleet so this doesn't have to be a hassle.  (And also to make coverage of certain things easier; for example, the tests fail currently if you install sphinx.)  The first step in this is probably removing me as a bottleneck for administrative tasks, which we are already working on (thank you adi and hawkowl).

-g


From adi at roiban.ro  Fri Apr 24 01:10:30 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:10:30 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <20150403004329.6423.375338749.divmod.xquotient.129@top>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
Message-ID: <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>

On 3 April 2015 at 01:43,  <exarkun at twistedmatrix.com> wrote:
> On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>>
>> Hi,
>>
>> I would like suggest the following changes regarding the way repos are
>> organized in GitHub.
>>
>> Move all twisted-infra repos into Twisted organization.. and maybe
>> merge many twisted-infra repos into braid.
>>
>> Move treq, klein, txmongo, filepath... divmod projects into a new
>> organization dedicated to projects which are part of Twisted
>> ecosystem. Any project which imports Twisted can be part of it.
>>
>> What do you say?
>
>
> Perhaps you can explain why someone would want to do this.  As is, it sounds
> like a lot of busy work that, at best, will confuse and disrupt people.  If
> you explain what benefit would come from making this change, maybe it will
> be easier to see why it's a good idea.

The goal is for Twisted developers to monitor a single organization.

Right now, if I check all issues [1] or pull request from Twisted
organization I have filter a lot of repos.

When wearing the Twisted core dev hat I should only care about twisted
/ twistedcheckers / twisted-dev-tools / news-builder / pydoctor.

Why should I care about txmongo or need to create a custom filter to
exclude such projects?

As a twisted core dev I should also care for the twisted-infra since
it its results are used by every dev.

[1] https://github.com/issues?user=twisted

-- 
Adi Roiban



From glyph at twistedmatrix.com  Fri Apr 24 01:25:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Apr 2015 03:25:14 -0400
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
Message-ID: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>


> On Apr 24, 2015, at 03:10, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 3 April 2015 at 01:43,  <exarkun at twistedmatrix.com> wrote:
>> On 2 Apr, 12:37 pm, adi at roiban.ro wrote:
>>> 
>>> Hi,
>>> 
>>> I would like suggest the following changes regarding the way repos are
>>> organized in GitHub.
>>> 
>>> Move all twisted-infra repos into Twisted organization.. and maybe
>>> merge many twisted-infra repos into braid.
>>> 
>>> Move treq, klein, txmongo, filepath... divmod projects into a new
>>> organization dedicated to projects which are part of Twisted
>>> ecosystem. Any project which imports Twisted can be part of it.
>>> 
>>> What do you say?
>> 
>> 
>> Perhaps you can explain why someone would want to do this.  As is, it sounds
>> like a lot of busy work that, at best, will confuse and disrupt people.  If
>> you explain what benefit would come from making this change, maybe it will
>> be easier to see why it's a good idea.
> 
> The goal is for Twisted developers to monitor a single organization.
> 
> Right now, if I check all issues [1] or pull request from Twisted
> organization I have filter a lot of repos.
> 
> When wearing the Twisted core dev hat I should only care about twisted
> / twistedcheckers / twisted-dev-tools / news-builder / pydoctor.
> 
> Why should I care about txmongo or need to create a custom filter to
> exclude such projects?
> 
> As a twisted core dev I should also care for the twisted-infra since
> it its results are used by every dev.
> 
> [1] https://github.com/issues?user=twisted <https://github.com/issues?user=twisted>

Many developers don't care about working on the tooling themselves either.  Why should they have to create a custom filter rather than you?

This is not to be dismissive of your interest in our development tooling.  The fact that you are working on maintaining it is of great benefit to all other twisted developers, but the reason it is of great benefit is expressly because they do not have to care so much about it any more :).

The idea behind the current structure is that the twisted org includes application code that users use, so if a user looks at it they get a coherent listing of things (including twisted itself) that they might want to use.  The infra repository lists tools that we use to develop twisted, not things that users would be interested in downloading themselves, unless they want to develop another project like Twisted (which is quite a different thing from _using_ twisted or its ecosystem).

In any case, while I hate to say this because, again, it sounds really dismissive, it sounds to me like you need to configure your github client somehow to match your personal tastes, rather than restructure the project to accommodate them.  The alternative sounds like a terrible confusing mess to me for first-time contributors and new users, and I think they are inherently less able to create filters and customize their experience, so they should see the orgs as they are presently.

(There may still be some call for an "ecosystem" repository; I don't know how many Twisted developers really care about txmongo at all.  But I think it's nice to see so much ecosystem stuff in one place.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150424/be2e2ed7/attachment-0002.html>

From adi at roiban.ro  Fri Apr 24 01:33:13 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:33:13 +0100
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
Message-ID: <CAFycZ9dJpWf22iC+oiz2UuW7r2cds5k-+9MexAOHQj5j3EZQvw@mail.gmail.com>

On 24 April 2015 at 08:25, Glyph <glyph at twistedmatrix.com> wrote:
>
> Many developers don't care about working on the tooling themselves either.
> Why should they have to create a custom filter rather than you?

[snip]

Thanks. No problem!

-- 
Adi Roiban



From adi at roiban.ro  Fri Apr 24 01:49:14 2015
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 24 Apr 2015 08:49:14 +0100
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
 <CE0B6F80-CCC7-4A3A-B971-C65E4FF58B29@twistedmatrix.com>
Message-ID: <CAFycZ9cm_1ksd+Xpcq_9PTBruawa5-vDFiD2KCerg-38k9c_RQ@mail.gmail.com>

On 24 April 2015 at 08:00, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Apr 24, 2015, at 02:41, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> I feel that twisted.python.compat is slowly duplicating / reinventing
>> an important part of the six code.
>>
>> Code which does not import from  twisted.python.compat will have all
>> kind of ad-hoc / in module code to handle differences between py2 and
>> py3 and many if _PY3 conditional blocks.
>>
>> What do you say if we add six as dependency for twisted ?
>>
>> In case you don't want six as a dependency, it can be copied in
>> twisted code base and make it available from twisted.python.six or a
>> similar package.
>
> I think that this is basically the right thing to do, since almost all of our optional dependencies depend on it.  I'm somewhat surprised that zope.interface hasn't forced this on us already, honestly; what are they doing for a compatibility layer?

They have this:
https://github.com/zopefoundation/zope.interface/blob/master/src/zope/interface/_compat.py

> I don't want to ssh in to 25 builders and manually install six on each one though.  We should figure out a better dependency management solution for the build fleet so this doesn't have to be a hassle.  (And also to make coverage of certain things easier; for example, the tests fail currently if you install sphinx.)  The first step in this is probably removing me as a bottleneck for administrative tasks, which we are already working on (thank you adi and hawkowl).

I am happy to help with updating the builders as long as there is
someone willing to review the changes.

At this stage I just want to know if we want six in Twisted.

We can also start with distributing six together with Twisted code and
move it outside twisted once builders are fixed.

-- 
Adi Roiban



From dynamicgl at gmail.com  Fri Apr 24 02:54:01 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Fri, 24 Apr 2015 16:54:01 +0800
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
Message-ID: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>

>
>
> Many developers don't care about working on the tooling themselves
> either.  Why should they have to create a custom filter rather than you?
>
> This is not to be dismissive of your interest in our development tooling.
> The fact that you are working on maintaining it is of *great* benefit to
> all other twisted developers, but the *reason* it is of great benefit is
> expressly because they do not have to care so much about it any more :).
>
> The idea behind the current structure is that the twisted org includes
> application code that users use, so if a user looks at it they get a
> coherent listing of things (including twisted itself) that they might want
> to use.  The infra repository lists tools that we use to develop twisted,
> not things that users would be interested in downloading themselves, unless
> they want to develop another project like Twisted (which is quite a
> different thing from _using_ twisted or its ecosystem).
>
> In any case, while I hate to say this because, again, it sounds really
> dismissive, it sounds to me like you need to configure your github client
> somehow to match your personal tastes, rather than restructure the project
> to accommodate them.  The alternative sounds like a terrible confusing mess
> to me for first-time contributors and new users, and I think they are
> inherently less able to create filters and customize their experience, so
> they should see the orgs as they are presently.
>
> (There may still be some call for an "ecosystem" repository; I don't know
> how many Twisted developers really care about txmongo at all.  But I think
> it's nice to see so much ecosystem stuff in one place.)
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

     off-topic a bit. I care about txmongo. I actually plan to use it in
production soon.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150424/5f36873b/attachment-0002.html>

From hs at ox.cx  Fri Apr 24 04:26:55 2015
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 24 Apr 2015 12:26:55 +0200
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <C7EFFF41-162F-4DF2-9D61-C7E62A6C5F99@ox.cx>

On 24 Apr 2015, at 8:41, Adi Roiban wrote:

> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.

I’m +1 on this too.  I was a bit hesitant in the past but duplicating 
compatibility code everywhere is becoming ridiculous and a hassle.



From ralphm at ik.nu  Fri Apr 24 05:57:26 2015
From: ralphm at ik.nu (Ralph Meijer)
Date: Fri, 24 Apr 2015 13:57:26 +0200
Subject: [Twisted-Python] Using six for Python3 porting
In-Reply-To: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
References: <CAFycZ9eVF7rWeNBwj8pZ-k3PL3qx1at7mrBjgG7zxxNBDdMjFA@mail.gmail.com>
Message-ID: <553A2FA6.6060702@ik.nu>

On 2015-04-24 08:41, Adi Roiban wrote:
> Hi,
> 
> I feel that twisted.python.compat is slowly duplicating / reinventing
> an important part of the six code.
> 
> Code which does not import from  twisted.python.compat will have all
> kind of ad-hoc / in module code to handle differences between py2 and
> py3 and many if _PY3 conditional blocks.
> 
> What do you say if we add six as dependency for twisted ?
> 
> In case you don't want six as a dependency, it can be copied in
> twisted code base and make it available from twisted.python.six or a
> similar package.

I vaguely remembered working on this at PyCon in 2014:
https://twistedmatrix.com/trac/ticket/7177

-- 
ralphm



From kevin.horn at gmail.com  Sat Apr 25 12:32:19 2015
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 25 Apr 2015 13:32:19 -0500
Subject: [Twisted-Python] Deprecating subproject packaging
In-Reply-To: <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>
References: <08EA6A08-B3AB-441D-ABB5-BAE7C418DFBD@atleastfornow.net>
 <89AD4018-F6DF-4AEE-AF04-4D845B0CA461@twistedmatrix.com>
 <B6112103-5847-47DC-A8CF-A63F16BD60AF@atleastfornow.net>
 <CAFycZ9exr_ukiCsiZdEzBWuVR9Q9A4t1a4k5J6dAbcP3x2+vdA@mail.gmail.com>
 <CA+U=zK0HBU=okkaOw6jiULUunG8SxJRx_GnXx0MHe4pby0Zbrg@mail.gmail.com>
 <8FB5F87C-39CF-4DB8-8CDC-5F1003CA0B71@atleastfornow.net>
Message-ID: <CA+U=zK04q4=Cj4KX2T_NDEh6JABMYdreuKdGToLW_RYXz9qYfw@mail.gmail.com>

On Wed, Apr 22, 2015 at 2:31 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

>
> > On 23 Apr 2015, at 01:37, Kevin Horn <kevin.horn at gmail.com> wrote:
> >
> > Agreed that this is a good idea, though I'd still like to see NEWS
> broken out by "subproject" (or maybe we should say "topic" now?).  I don't
> care whether it's in the same file or not, but when a new Twisted release
> comes out I find reviewing changes much easier if I can think about one
> "topic" at a time.
>
> Do you mean keeping the NEWS file as-is currently? I think that's a good
> idea. It's a nice, logical grouping.
>
> I personally think that it should pruned down a little -- Twisted Runner &
> Pair don't really need their own sections, and Twisted News & Conch could
> probably be rolled into the core changelist as well. Not sure, I guess
> we'll come to that when there's tickets in review for it. :)
>

Yes, pretty much this.  Runner and Pair could maybe be rolled into Core,
but I think News and Conch should remain separate.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150425/10ff3448/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Apr 25 18:15:43 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Apr 2015 17:15:43 -0700
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
Message-ID: <A6783F12-8066-4823-8224-4636570CC564@twistedmatrix.com>


> On Apr 24, 2015, at 01:54, Gelin Yan <dynamicgl at gmail.com> wrote:
> 
> 
> Many developers don't care about working on the tooling themselves either.  Why should they have to create a custom filter rather than you?
> 
> This is not to be dismissive of your interest in our development tooling.  The fact that you are working on maintaining it is of great benefit to all other twisted developers, but the reason it is of great benefit is expressly because they do not have to care so much about it any more :).
> 
> The idea behind the current structure is that the twisted org includes application code that users use, so if a user looks at it they get a coherent listing of things (including twisted itself) that they might want to use.  The infra repository lists tools that we use to develop twisted, not things that users would be interested in downloading themselves, unless they want to develop another project like Twisted (which is quite a different thing from _using_ twisted or its ecosystem).
> 
> In any case, while I hate to say this because, again, it sounds really dismissive, it sounds to me like you need to configure your github client somehow to match your personal tastes, rather than restructure the project to accommodate them.  The alternative sounds like a terrible confusing mess to me for first-time contributors and new users, and I think they are inherently less able to create filters and customize their experience, so they should see the orgs as they are presently.
> 
> (There may still be some call for an "ecosystem" repository; I don't know how many Twisted developers really care about txmongo at all.  But I think it's nice to see so much ecosystem stuff in one place.)
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> Hi Glyph
> 
>      off-topic a bit. I care about txmongo. I actually plan to use it in production soon.

Nice to know that there are people out there who do care about stuff like this :)

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150425/0e436b3a/attachment-0002.html>

From trac at twistedmatrix.com  Sun Apr 26 00:05:15 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Apr 2015 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1430028315.71.6015899669236836933@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150426/b9835c05/attachment-0002.html>

From psi29a at gmail.com  Mon Apr 27 01:22:15 2015
From: psi29a at gmail.com (bret curtis)
Date: Mon, 27 Apr 2015 09:22:15 +0200
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
Message-ID: <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>

On Fri, Apr 24, 2015 at 10:54 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
> Hi Glyph
>
>      off-topic a bit. I care about txmongo. I actually plan to use it in
> production soon.
>
> Regards
>
> gelin yan
>
>
Glad you do! :D  We use it in production as well!  Just landed MongoDB 3.x
support, but we've still have a way to go to make it 1:1 with PyMongo.

As for an apart ecosystem organization, I don't see any problems with
moving yet again. ;)  I just question the necessity of it right now, it
isn't like we are endlessly scrolling through pypi packages.

Cheers,
Bret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/52e20305/attachment-0002.html>

From jerryguitarist at gmail.com  Mon Apr 27 11:57:36 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Mon, 27 Apr 2015 23:27:36 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
Message-ID: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>

Hi everyone!

I have gone through <
http://twisted.readthedocs.org/en/latest/core/howto/logging.html> and <
http://twisted.readthedocs.org/en/latest/core/howto/logger.html>. And I
want to get started helping out with making the move to the new logging
system.

I talked to Glyph and ralphm about this at the PyCon sprints. The main
purpose of this email is that I would like some advice as to how to move
forward. Are there any other docs that I should read? Also, where should I
start? What should be the scope of each individual ticket?

I was talking to adiroiban and hawkowl on IRC about this, and they also
recommended that I send an email to the mailing list before getting
started, so here I am. I would really appreciate it if you could give me
some advice and guidance regarding this. :-)

Thanks,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/6a7a68df/attachment-0002.html>

From brian.costlow at gmail.com  Mon Apr 27 14:05:19 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Mon, 27 Apr 2015 16:05:19 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
Message-ID: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>

Summary: I am having an issue writing data from an object based on
twisted's LineReceiver. Calling self.transport.write from the protocol,
some data makes it through, some does not. Using tcpdump, I am not seeing
the missing data cross the network interface.

Ubuntu LTS 14.04
Python 2.7.6
Twisted 15.0.0

The app recieves a bunch of messages from various upstream servers (not
mine) and either discards—or bends, folds, spindles and muilates and sends
the modified message to a downstream server. The message format is
text-based, proprietary and not mine.

The way it works:

1. The app puts messages, consisting of a tuple of two strings: an id and
the message data, on a queue. The queue is actually a deque on the factory.
2. There's one client protocol instance for sending, it holds a connection
to downstream server. The factory is a reconnecting one, but only if the
connection drops. (I'm not creating a new protocol instance/connection per
message)
3. There's a method on the protocol that checks for messages in the
factory's queue, and sends them, one at a time. It waits for a short ack
text message back from the receiving end, or times out (my app's timeout,
not a network stack one) before sending the next message, if any. Code for
the sending piece is below.
4. The downstream end (an app not under my control) is not getting all the
messages. If my timeout check runs, and there's not been a returned ack
message yet, invariably the sysadmins for the downstream system report they
never got that message.

def check_for_send(self):
    if not self.in_send_message:
        try:
            self.in_send_message = True
            msg = self.factory.queue.popleft()
            try:
                self.waiting_id = msg[0]
                log.msg("Sending Message: {0}".format(msg[0]))
                raw_msg = "".join([self.MSG_START, msg[1], self.MSG_END,
self.delimiter])
                threads.deferToThread(self._dump_raw_message, msg[0],
raw_msg)
                self.transport.write(raw_msg)
                reactor.callLater(30, self.check_for_timeout, msg[0])
            except:
                log.msg("Error sending Message: {0}".format(msg[0]))
                log.err()
                self.factory.add_message(msg)
                self.waiting_id = ""
                self.in_send_message = False
        except IndexError:
            self.in_send_message = False
        finally:
            reactor.callLater(0, self.check_for_send)
    else:
        reactor.callLater(1, self.check_for_send)

Mostly looking for some advice on further debugging this, as whenever I've
called self.transport.write on a lineReceiver over tcp before, it "just
worked."

Observations.

1. The event loop doesn't appear to be getting stuck. Messages that don't
arrive downstream are interleaved with those that do. And the other part of
the app that is receiving messages from upstream keeps right on trucking.

2. I am now writing copies of the messages to disk, that call is right
before the transport.write call, and all the "missing" messages do end up
on disk.

3. I also fire the callLater for the timeout function on each message. The
disk write and the callLater both happen for missing messages.

4. I ran tcpdump on the interface for about 30 minutes and matched up with
log statements. If I see my protocol timed out waiting for an ack message
in my app's log, I can't find the outgoing message on the interface.

5. I am not seeing any errors in my logs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/c84aa1e0/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Apr 27 14:29:42 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Apr 2015 13:29:42 -0700
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
In-Reply-To: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
Message-ID: <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>


> On Apr 27, 2015, at 10:57 AM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hi everyone!
> 
> I have gone through <http://twisted.readthedocs.org/en/latest/core/howto/logging.html <http://twisted.readthedocs.org/en/latest/core/howto/logging.html>> and <http://twisted.readthedocs.org/en/latest/core/howto/logger.html <http://twisted.readthedocs.org/en/latest/core/howto/logger.html>>. And I want to get started helping out with making the move to the new logging system.
> 
> I talked to Glyph and ralphm about this at the PyCon sprints. The main purpose of this email is that I would like some advice as to how to move forward. Are there any other docs that I should read? Also, where should I start? What should be the scope of each individual ticket? 

My initial suggestion - don't take this too authoritatively, I'd be happy for input from anyone else - would be that the next step would be to simply identify a module that has some interesting log events, make a ticket for logging them using the new system, and then write a patch for that ticket.

The scope of each ticket should be as small as possible, given that small tickets get through review faster.  Keep in mind though that there is probably insufficient test coverage for log statements as it is, so you'll almost certainly have to add tests which assert things about the new messages even if the logging statements themselves were covered by HTTP/1.1.

One good place to start would either be in twisted.web, or in some of the "core" logging messages we see all of the time, like twisted.internet.protocol.Factory.doStart.  Right now the only way to control that particular message is to set the 'noisy' attribute on Factory, but the new logging system has an explicit filtering step which can start to provide better support for controlling chatty subsystems.

Another thing to keep an eye on as you do this is to make sure that you convert any string-formatting you find in log messages - like, for example, the '"Starting factory %r" % self' in the message I referenced - and replace it with structured formatting, like self.logger.info("Starting factory {self}").

> I was talking to adiroiban and hawkowl on IRC about this, and they also recommended that I send an email to the mailing list before getting started, so here I am. I would really appreciate it if you could give me some advice and guidance regarding this. :-)

Sounds like good advice.

Good luck, and feel free to keep asking questions,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/2c2e3683/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Apr 27 14:55:35 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Apr 2015 13:55:35 -0700
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
In-Reply-To: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
Message-ID: <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>


> On Apr 27, 2015, at 1:05 PM, Brian Costlow <brian.costlow at gmail.com> wrote:
> 
> Summary: I am having an issue writing data from an object based on twisted's LineReceiver. Calling self.transport.write from the protocol, some data makes it through, some does not. Using tcpdump, I am not seeing the missing data cross the network interface. 


Nothing strikes me as obviously wrong about this code (except the "deferToThread" which seems slightly
suspicious, since nothing in the example appears to have anything to do with threads, and whenever you get threads involved things get complicated).

This seems to be a hugely complex example though, full of interactions with other systems, and nothing resembling a minimal example which demonstrates the behavior.  I hope someone else has better luck diagnosing it, but it looks like your problem is well outside of Twisted, and you are unlikely to get an answer here unless you can provide more relevant details.  I appreciate that you tried to provide lots of diagnostic information in your question, but in the absence of a program I can run, I can't tell if most of it is important or not :-\.

Sending data with transport.write should, as you say, "just work".

Sorry I couldn't be more helpful, and good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/84d76925/attachment-0002.html>

From itamar at itamarst.org  Mon Apr 27 18:26:54 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 27 Apr 2015 20:26:54 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
Message-ID: <0e8ebe46990519c614850d758461130d@itamarst.org>

 

self.in_send_message seems like a potential source of bugs (can't see it
being set to False on all branches here) and is also likely unnecessary.


General advice: 

1. Simplify, simplify, simplify. 

2. Unit tests (see
https://twistedmatrix.com/documents/current/core/howto/trial.html). 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/2fe6a7a4/attachment-0002.html>

From chriswwolfe at gmail.com  Mon Apr 27 19:04:15 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Mon, 27 Apr 2015 20:04:15 -0500
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <8761bcxxak.fsf@hermes.hocat.ca>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
Message-ID: <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>

Hi,

Has this proposal been accepted? Is there anything I can do to help
implement it?

-Chris

On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net> wrote:

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
>
> > So I have a proposal for a scaled back process that nevertheless would
> give us something official-ish:
> > <..details...>
>
> I support this proposal.
>
>   Tom
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150427/fec6cef8/attachment-0002.html>

From jerryguitarist at gmail.com  Mon Apr 27 22:12:36 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 28 Apr 2015 09:42:36 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
 logging system
In-Reply-To: <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
Message-ID: <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>

Hello, Glyph! :-)


> My initial suggestion - don't take this too authoritatively, I'd be happy
> for input from anyone else - would be that the next step would be to simply
> identify a module that has some interesting log events, make a ticket for
> logging them using the new system, and then write a patch for that ticket.
>

There is a possibility that I misunderstood what you had actually meant,
but I assure you that I was not being or even trying to be authoritative,
however, if it seemed like I was, I sincerely apologize. Also, if you felt
inclined to point this out to me, then it probably means it is another one
of those things about myself that I need to work on and rectify. :-) Also,
I'd be more than glad for input from anyone else as well. I did not intend
for this email to be addressed exclusively to one or two person(s),
however, if it seemed like that, again I apologize. And I'll make sure
these things don't happen again. :-)

One more thing I would like to say, when I said "advice and guidance
regarding this" below:

I was talking to adiroiban and hawkowl on IRC about this, and they also
recommended that I send an email to the mailing list before getting
started, so here I am. I would really appreciate it if you could give me
some advice and guidance regarding this. :-)


> Sounds like good advice.
>
> Good luck, and feel free to keep asking questions,
>
> -glyph
>

"regarding this" in that sentence refers to guidance and advice regarding
all of my questions that I had asked in the previous paragraph; these words
did not imply that I needed guidance regarding what hawkowl and adiroiban
had already advised me to do. But now when I go back and read my initial
email, I admit that my first email could have been more well-structured and
I can see gaping holes in my structure of writing and writing in general
that I plan on improving. ;-)

Warm regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/290b5d4e/attachment-0002.html>

From brian.costlow at gmail.com  Mon Apr 27 23:26:15 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 01:26:15 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <0e8ebe46990519c614850d758461130d@itamarst.org>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <0e8ebe46990519c614850d758461130d@itamarst.org>
Message-ID: <CACLJ_dEFdva0sZZvWjs5cHdE3_z1fCDuOUSs+B0=YaYoSCW6KQ@mail.gmail.com>

On Mon, Apr 27, 2015 at 8:26 PM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> self.in_send_message seems like a potential source of bugs (can't see it
> being set to False on all branches here) and is also likely unnecessary.
>

self.in_send_message is redundant with self.waiting_id, which was added
later, and will be refactored out next iteration.

But, after a message removed from the queue and sent, we can't send another
until either we get an ack message back, or the timeout fires. Those bits
of code omitted here, are what resets self.in_send_message back to False.
(Or eventually, self.waiting_id to None).

Suggestions on a better way to do this are most welcome. I thought about
only having check_for_send push itself back on the reactor loop if the
queue is empty, and having the ack and/or timeout code fire check_for_send
in other cases, instead of setting the variable. Not sure that's terribly
simpler, though.
>
> General advice:
>
> 1. Simplify, simplify, simplify.
>
> 2. Unit tests (see
> https://twistedmatrix.com/documents/current/core/howto/trial.html).
>

There actually is a test around this, although ugly, as it has to simulate
the protocol and the factory's queue. It passes. This also works when we
run integration tests with some 3rd party open source apps, but breaks in
production at one location.

#1 well taken though, I should break check_for_send up and make it easier
to write simple tests.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/8085e6f4/attachment-0002.html>

From brian.costlow at gmail.com  Tue Apr 28 05:43:08 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 07:43:08 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
Message-ID: <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>

On Mon, Apr 27, 2015 at 4:55 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Nothing strikes me as obviously wrong about this code (except the
> "deferToThread" which seems *slightly*
> suspicious, since nothing in the example appears to have anything to do
> with threads, and whenever you get threads involved things get complicated).
>
>
 The deferToThread just shoves the write of the message string to file into
the thread pool. It was added after this issue was observed. Using
deferToThread
is a hangover from attaching a logging callback when the file wrote, since
removed, so callInThread would work also. I didn't want to add the file
write onto the reactor thread here.

I wish I could find a simpler case, but frankly, I have an integration test
system that uses a test app to generate upstream messages, and an open
source java app to simulate the downstream server. I can't reproduce this
there even with all the moving parts.

Happening "in the wild" at one location, was hoping for some advice on
troubleshooting what happens between calling transport.write and seeing
bytes on the wire. I guess it's time to go digging into parts of twisted
I've always taken for granted, and learn something new. ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/19d67725/attachment-0002.html>

From jesadjust at gmail.com  Tue Apr 28 09:14:36 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Tue, 28 Apr 2015 23:14:36 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
	factory to send data to another
Message-ID: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>

I am working on this messaging app and I would like to pass data from one
factory to another. I have been referencing to other answers provided in
other similar questions by trying to add a variable storing the data from
one factory then initiate another factory and write the data to it.
Unfortunately there is an error when i call the other class, and I cannot
figure out why. Is there anything I can do to fix it? I have been stuck in
here for quite a while

this is the error:

 receivermessage = self.factory.app.handle_message2(data)
 exceptions.AttributeError: MultiEcho instance has no attribute 'factory'

Here is the code:


import kivyfrom kivy.app import Appfrom kivy.uix.label import
Labelfrom kivy.uix.scatter import Scatterfrom kivy.uix.boxlayout
import BoxLayoutfrom kivy.uix.scrollview import ScrollViewfrom
kivy.uix.button import Buttonfrom kivy.graphics.vertex_instructions
import Rectanglefrom kivy.graphics.context_instructions import
Colorfrom kivy.graphics.instructions import Instructionfrom kivy.base
import runTouchAppfrom kivy.lang import Builderimport socketfrom
kivy.core.window import Windowimport pygameimport randomfrom
kivy.support import install_twisted_reactor

install_twisted_reactor()from twisted.internet import reactor, protocol
Window.size = (550, 400)
# monitoring wordlistwith open("wordlist.txt") as word_file:
    wordlist = list(word.strip().lower() for word in word_file)
# protocols for senderclass EchoProtocol(protocol.Protocol):
    """This is just about the simplest possible protocol"""

    def dataReceived(self, data):
        "As soon as any data is received, write it back."
        sendermessage = self.factory.app.handle_message(data)
        if sendermessage:
            self.transport.write(data)

            #this line here is the trouble maker that caused the error

MultiEcho().dataReceived(sendermessage) class EchoFactory(protocol.Factory):
protocol = EchoProtocol def __init__(self, app): self.app = app # protocols
for receiver class MultiEcho(protocol.Protocol): def connectionMade(self):
self.factory.echoers.append(self) def dataReceived(self, data):
receivermessage = self.factory.app.handle_message2(data) if receivermessage:
self.transport.write(data)

            #this line here is the trouble maker that caused the error
            EchoProtocol().dataReceived(receivermessage)

class MultiEchoFactory(protocol.Factory):
    protocol = MultiEcho

    def __init__(self, app):
        self.echoers = []
        self.app = app

class ServerApp(App):
    def build(self):
        self.layout = BoxLayout(orientation='vertical', spacing=10)

        self.label = Button(text='Censoring process begin\nBeware of
keyword "umbrella"\n ', color=[1.0, 1.0, 1.0, 1.0])
        self.label.color = [0.9, 0.2, 0.2, 1.0]

        self.upperscroll = Button(pos_hint={'x': 0, 'center_y': .5},
size_hint=(None, None))

        self.scatter = Scatter()

        self.displaybox = Label()
        self.displaybox.color = [0.4, 0.9, 0.4, 1.0]

        reactor.listenTCP(8000, EchoFactory(self))  # for sender
        reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver

        self.layout.add_widget(self.label)
        self.layout.add_widget(self.scatter)

        self.scatter.add_widget(self.displaybox)

        return self.layout

    def handle_message(self, msg):

        if any(word in msg.lower() for word in wordlist):

            self.displaybox.color = [0.9, 0.4, 0.4, 1.0]
            self.displaybox.text = "content blocked"
            self.label.text += "Alert! Sender posts %s \n" % msg


        else:
            self.label.text += "Safe - sender posts %s \n" % msg
            self.displaybox.color = [0.4, 0.9, 0.4, 1.0]
            self.displaybox.text = "%s" % msg

        msg = msg

        return msg

    def handle_message2(self, msg):

        if any(word in msg.lower() for word in wordlist):
            self.label.color = [0.8, 0.8, 0.5, 1.0]
            self.label.text += "Alert! Receiver got %s \n" % msg
        else:
            self.label.color = [0.2, 0.2, 1.0, 1.0]
            self.label.text += "Safe - receiver sends %s \n" % msg

        msg = msg

        return msg

if __name__ == '__main__':
    ServerApp().run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/832941fd/attachment-0002.html>

From ldanielburr at me.com  Tue Apr 28 10:33:25 2015
From: ldanielburr at me.com (Louis D. Burr)
Date: Tue, 28 Apr 2015 11:33:25 -0500
Subject: [Twisted-Python] attribute error when I am trying to make
	one	factory to send data to another
In-Reply-To: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
Message-ID: <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>

Hi Jessica,

> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
SNIP
>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
SNIP
> MultiEcho().dataReceived(sendermessage)
Here you create an instance of the protocol directly, i.e., without having instantiated a MutilEchoFactory.  The factory’s buildProtocol method is what assigns the factory instance as a member of the protocol (self.factory), and since you didn’t create the protocol via a factory, you have no factory attribute on your protocol instance.

There are a number of ways to fix this, but generally speaking, you need to provide a way for your factories and their protocols to be aware of each other.

Hope this helps,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/d6a87573/attachment-0002.html>

From jesadjust at gmail.com  Tue Apr 28 11:28:53 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 01:28:53 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
Message-ID: <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>

Hi Daniel,

  Thank you so much for your suggestion. I am quite new to python and
twisted so I am not very certain about how to make it work well. Does that
mean if I change the dataReceived by adding a line to instantiate the
MultiEchoFactory like this, it will work?

def dataReceived(self, data):
    "As soon as any data is received, write it back."
    handlesendermessage = self.factory.app.handle_message(data)

    if handlesendermessage:
        self.transport.write(data)
        MultiEchoFactory()
        MultiEcho().dataReceived(data)


2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:

> Hi Jessica,
>
> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> SNIP
>
>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
>
> SNIP
>
> MultiEcho().dataReceived(sendermessage)
>
> Here you create an instance of the protocol directly, i.e., without having
> instantiated a MutilEchoFactory.  The factory’s buildProtocol method is
> what assigns the factory instance as a member of the protocol
> (self.factory), and since you didn’t create the protocol via a factory, you
> have no factory attribute on your protocol instance.
>
> There are a number of ways to fix this, but generally speaking, you need
> to provide a way for your factories and their protocols to be aware of each
> other.
>
> Hope this helps,
>
> Daniel
> --
> L. Daniel Burr
> ldanielburr at me.com
> (312) 656-8387
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/3e92827a/attachment-0002.html>

From ypercube at gmail.com  Tue Apr 28 11:46:31 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 18:46:31 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
Message-ID: <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>

No, I don't think that would work.

You would need something like changing these lines:

        reactor.listenTCP(8000, EchoFactory(self))  # for sender
        reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver

to:

        self.echofactory = EchoFactory(self)
        self.multiechofactory = MultiEchoFactory(self)
        reactor.listenTCP(8000, self.echofactory)  # for sender
        reactor.listenTCP(8001, self.multiechofactory)  # for receiver

so, your "app" object (which is just a normal Python object) knows the
other two objects (the instances of the 2 factories).

Then, your calls:

        if sendermessage:
            self.transport.write(data)
            #this line here is the trouble maker that caused the error
            MultiEcho().dataReceived(sendermessage)

could be written:

        if sendermessage:
            self.transport.write(data)

            self.app.multiechofactory.dataReceived(sendermessage)

On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com> wrote:

> Hi Daniel,
>
>   Thank you so much for your suggestion. I am quite new to python and
> twisted so I am not very certain about how to make it work well. Does that
> mean if I change the dataReceived by adding a line to instantiate the
> MultiEchoFactory like this, it will work?
>
> def dataReceived(self, data):
>     "As soon as any data is received, write it back."
>     handlesendermessage = self.factory.app.handle_message(data)
>
>     if handlesendermessage:
>         self.transport.write(data)
>         MultiEchoFactory()
>         MultiEcho().dataReceived(data)
>
>
> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>
>> Hi Jessica,
>>
>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>
>> SNIP
>>
>>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
>>
>> SNIP
>>
>> MultiEcho().dataReceived(sendermessage)
>>
>> Here you create an instance of the protocol directly, i.e., without
>> having instantiated a MutilEchoFactory.  The factory’s buildProtocol method
>> is what assigns the factory instance as a member of the protocol
>> (self.factory), and since you didn’t create the protocol via a factory, you
>> have no factory attribute on your protocol instance.
>>
>> There are a number of ways to fix this, but generally speaking, you need
>> to provide a way for your factories and their protocols to be aware of each
>> other.
>>
>> Hope this helps,
>>
>> Daniel
>> --
>> L. Daniel Burr
>> ldanielburr at me.com
>> (312) 656-8387
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/bf3e5103/attachment-0002.html>

From ypercube at gmail.com  Tue Apr 28 11:55:03 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 18:55:03 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
Message-ID: <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>

On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
wrote:

> No, I don't think that would work.
>
> You would need something like changing these lines:
>
>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>
> to:
>
>         self.echofactory = EchoFactory(self)
>         self.multiechofactory = MultiEchoFactory(self)
>         reactor.listenTCP(8000, self.echofactory)  # for sender
>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>
> so, your "app" object (which is just a normal Python object) knows the
> other two objects (the instances of the 2 factories).
>
> Then, your calls:
>
>         if sendermessage:
>             self.transport.write(data)
>             #this line here is the trouble maker that caused the error
>             MultiEcho().dataReceived(sendermessage)
>
> could be written:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             self.app.multiechofactory.dataReceived(sendermessage)
>


Oh, I messed it up. The first part is good but the factories do not have
dataReceived methods.

It would have to be - depending on what you want to do - say, you want to
echo to all echoers:

        if sendermessage:
            self.transport.write(data)

            for echoer in self.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)

or:

        if sendermessage:
            self.transport.write(data)

            self.app.multiechofactory.echo_them_all()

and define the echo_them_all() method in the MultiEchoFactory() class.



>
> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
>> Hi Daniel,
>>
>>   Thank you so much for your suggestion. I am quite new to python and
>> twisted so I am not very certain about how to make it work well. Does that
>> mean if I change the dataReceived by adding a line to instantiate the
>> MultiEchoFactory like this, it will work?
>>
>> def dataReceived(self, data):
>>     "As soon as any data is received, write it back."
>>     handlesendermessage = self.factory.app.handle_message(data)
>>
>>     if handlesendermessage:
>>         self.transport.write(data)
>>         MultiEchoFactory()
>>         MultiEcho().dataReceived(data)
>>
>>
>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>
>>> Hi Jessica,
>>>
>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>>
>>> SNIP
>>>
>>>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
>>>
>>> SNIP
>>>
>>> MultiEcho().dataReceived(sendermessage)
>>>
>>> Here you create an instance of the protocol directly, i.e., without
>>> having instantiated a MutilEchoFactory.  The factory’s buildProtocol method
>>> is what assigns the factory instance as a member of the protocol
>>> (self.factory), and since you didn’t create the protocol via a factory, you
>>> have no factory attribute on your protocol instance.
>>>
>>> There are a number of ways to fix this, but generally speaking, you need
>>> to provide a way for your factories and their protocols to be aware of each
>>> other.
>>>
>>> Hope this helps,
>>>
>>> Daniel
>>> --
>>> L. Daniel Burr
>>> ldanielburr at me.com
>>> (312) 656-8387
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/ed372d75/attachment-0002.html>

From brian.costlow at gmail.com  Tue Apr 28 11:55:40 2015
From: brian.costlow at gmail.com (Brian Costlow)
Date: Tue, 28 Apr 2015 13:55:40 -0400
Subject: [Twisted-Python] Looking for some advice debugging issue with
 transport.write calls
In-Reply-To: <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
 <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
Message-ID: <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>

Okay, figured this out.

Abstract of the issue: I am a dumbass.

First, Itamar gets to thrash me soundly, as there was a bug in some code
(not shown in my example) that is not properly tested. That code was
responsible for "turning off" the protocol instance if  connectionLost
method was called, by doing some cleanup then redefining check_for_send in
the instance as a no-op to stop it from pushing itself back on the reactor
loop.

Since the factory here is a reconnecting one, if the network or downstream
server etc., glitches, we get a *new* connected protocol instance and an
old, unconnected one. Due to the bug, both are consuming messages from the
factory queue, calling the protocols' transport.write with the message data.

This location has some issues, so the connection occasionally drops on the
downstream end, which we don't see elsewhere.

transport.write on a tcp connection looks like it just returns if the
underlying fd object is closed. So messages picked up by the old object get
bit-bucketed.

http://twistedmatrix.com/documents/15.0.0/api/twisted.internet.tcp.Connection.html
http://twistedmatrix.com/trac/browser/tags/releases/twisted-15.0.0/twisted/internet/abstract.py#L339

To dos: Fix bug, proper unit test, fix integration test so we test dropping
connections under load...

Question: I'm assuming there's a good reason transport.write is written so
it doesn't error and fails silently even though its underlying connection
is not connected anymore. As part of grokking the guts of this thing I've
been using for a decade...I'm curious to know why.



On Tue, Apr 28, 2015 at 7:43 AM, Brian Costlow <brian.costlow at gmail.com>
wrote:

> On Mon, Apr 27, 2015 at 4:55 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> Nothing strikes me as obviously wrong about this code (except the
>> "deferToThread" which seems *slightly*
>> suspicious, since nothing in the example appears to have anything to do
>> with threads, and whenever you get threads involved things get complicated).
>>
>>
>  The deferToThread just shoves the write of the message string to file
> into the thread pool. It was added after this issue was observed. Using deferToThread
> is a hangover from attaching a logging callback when the file wrote, since
> removed, so callInThread would work also. I didn't want to add the file
> write onto the reactor thread here.
>
> I wish I could find a simpler case, but frankly, I have an integration
> test system that uses a test app to generate upstream messages, and an open
> source java app to simulate the downstream server. I can't reproduce this
> there even with all the moving parts.
>
> Happening "in the wild" at one location, was hoping for some advice on
> troubleshooting what happens between calling transport.write and seeing
> bytes on the wire. I guess it's time to go digging into parts of twisted
> I've always taken for granted, and learn something new. ;-)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/00108b95/attachment-0002.html>

From jesadjust at gmail.com  Tue Apr 28 12:41:47 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 02:41:47 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
Message-ID: <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>

Pantellis thank you so much for your guide! I am still quite unfamiliar
with python and twisted so I made all kind of silly mistakes and could not
figure out how to fix them

I tried your code, it seems to me that it should be working with by
referencing the factories as well as the self.app...Unfortunately when I
ran it it did not work well, the program has an error with your line

            for echoer in self.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)

The error is: exceptions.AttributeError: MultiEcho instance has no
attribute 'app'

I thought that the "app" has already been referenced?

2015-04-29 1:55 GMT+08:00 Pantelis Theodosiou <ypercube at gmail.com>:

>
> On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
> wrote:
>
>> No, I don't think that would work.
>>
>> You would need something like changing these lines:
>>
>>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>>
>> to:
>>
>>         self.echofactory = EchoFactory(self)
>>         self.multiechofactory = MultiEchoFactory(self)
>>         reactor.listenTCP(8000, self.echofactory)  # for sender
>>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>>
>> so, your "app" object (which is just a normal Python object) knows the
>> other two objects (the instances of the 2 factories).
>>
>> Then, your calls:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>             #this line here is the trouble maker that caused the error
>>             MultiEcho().dataReceived(sendermessage)
>>
>> could be written:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             self.app.multiechofactory.dataReceived(sendermessage)
>>
>
>
> Oh, I messed it up. The first part is good but the factories do not have
> dataReceived methods.
>
> It would have to be - depending on what you want to do - say, you want to
> echo to all echoers:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             for echoer in self.app.multiechofactory.echoers:
>                 echoer.dataReceived(sendermessage)
>
> or:
>
>         if sendermessage:
>             self.transport.write(data)
>
>             self.app.multiechofactory.echo_them_all()
>
> and define the echo_them_all() method in the MultiEchoFactory() class.
>
>
>
>>
>> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com>
>> wrote:
>>
>>> Hi Daniel,
>>>
>>>   Thank you so much for your suggestion. I am quite new to python and
>>> twisted so I am not very certain about how to make it work well. Does that
>>> mean if I change the dataReceived by adding a line to instantiate the
>>> MultiEchoFactory like this, it will work?
>>>
>>> def dataReceived(self, data):
>>>     "As soon as any data is received, write it back."
>>>     handlesendermessage = self.factory.app.handle_message(data)
>>>
>>>     if handlesendermessage:
>>>         self.transport.write(data)
>>>         MultiEchoFactory()
>>>         MultiEcho().dataReceived(data)
>>>
>>>
>>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>>
>>>> Hi Jessica,
>>>>
>>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>>>>
>>>> SNIP
>>>>
>>>>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
>>>>
>>>> SNIP
>>>>
>>>> MultiEcho().dataReceived(sendermessage)
>>>>
>>>> Here you create an instance of the protocol directly, i.e., without
>>>> having instantiated a MutilEchoFactory.  The factory’s buildProtocol method
>>>> is what assigns the factory instance as a member of the protocol
>>>> (self.factory), and since you didn’t create the protocol via a factory, you
>>>> have no factory attribute on your protocol instance.
>>>>
>>>> There are a number of ways to fix this, but generally speaking, you
>>>> need to provide a way for your factories and their protocols to be aware of
>>>> each other.
>>>>
>>>> Hope this helps,
>>>>
>>>> Daniel
>>>> --
>>>> L. Daniel Burr
>>>> ldanielburr at me.com
>>>> (312) 656-8387
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/49b0a584/attachment-0002.html>

From ypercube at gmail.com  Tue Apr 28 13:21:08 2015
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 28 Apr 2015 20:21:08 +0100
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
 <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
Message-ID: <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>

That's what happens when one doesn't try running the code he suggests,
sorry. It should be self.factory.app... :

            for echoer in self.factory.app.multiechofactory.echoers:
                echoer.dataReceived(sendermessage)


On Tue, Apr 28, 2015 at 7:41 PM, Jessica Tsui <jesadjust at gmail.com> wrote:

> Pantellis thank you so much for your guide! I am still quite unfamiliar
> with python and twisted so I made all kind of silly mistakes and could not
> figure out how to fix them
>
> I tried your code, it seems to me that it should be working with by
> referencing the factories as well as the self.app...Unfortunately when I
> ran it it did not work well, the program has an error with your line
>
>             for echoer in self.app.multiechofactory.echoers:
>                 echoer.dataReceived(sendermessage)
>
> The error is: exceptions.AttributeError: MultiEcho instance has no
> attribute 'app'
>
> I thought that the "app" has already been referenced?
>
> 2015-04-29 1:55 GMT+08:00 Pantelis Theodosiou <ypercube at gmail.com>:
>
>>
>> On Tue, Apr 28, 2015 at 6:46 PM, Pantelis Theodosiou <ypercube at gmail.com>
>> wrote:
>>
>>> No, I don't think that would work.
>>>
>>> You would need something like changing these lines:
>>>
>>>         reactor.listenTCP(8000, EchoFactory(self))  # for sender
>>>         reactor.listenTCP(8001, MultiEchoFactory(self))  # for receiver
>>>
>>> to:
>>>
>>>         self.echofactory = EchoFactory(self)
>>>         self.multiechofactory = MultiEchoFactory(self)
>>>         reactor.listenTCP(8000, self.echofactory)  # for sender
>>>         reactor.listenTCP(8001, self.multiechofactory)  # for receiver
>>>
>>> so, your "app" object (which is just a normal Python object) knows the
>>> other two objects (the instances of the 2 factories).
>>>
>>> Then, your calls:
>>>
>>>         if sendermessage:
>>>             self.transport.write(data)
>>>             #this line here is the trouble maker that caused the error
>>>             MultiEcho().dataReceived(sendermessage)
>>>
>>> could be written:
>>>
>>>         if sendermessage:
>>>             self.transport.write(data)
>>>
>>>             self.app.multiechofactory.dataReceived(sendermessage)
>>>
>>
>>
>> Oh, I messed it up. The first part is good but the factories do not have
>> dataReceived methods.
>>
>> It would have to be - depending on what you want to do - say, you want to
>> echo to all echoers:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             for echoer in self.app.multiechofactory.echoers:
>>                 echoer.dataReceived(sendermessage)
>>
>> or:
>>
>>         if sendermessage:
>>             self.transport.write(data)
>>
>>             self.app.multiechofactory.echo_them_all()
>>
>> and define the echo_them_all() method in the MultiEchoFactory() class.
>>
>>
>>
>>>
>>> On Tue, Apr 28, 2015 at 6:28 PM, Jessica Tsui <jesadjust at gmail.com>
>>> wrote:
>>>
>>>> Hi Daniel,
>>>>
>>>>   Thank you so much for your suggestion. I am quite new to python and
>>>> twisted so I am not very certain about how to make it work well. Does that
>>>> mean if I change the dataReceived by adding a line to instantiate the
>>>> MultiEchoFactory like this, it will work?
>>>>
>>>> def dataReceived(self, data):
>>>>     "As soon as any data is received, write it back."
>>>>     handlesendermessage = self.factory.app.handle_message(data)
>>>>
>>>>     if handlesendermessage:
>>>>         self.transport.write(data)
>>>>         MultiEchoFactory()
>>>>         MultiEcho().dataReceived(data)
>>>>
>>>>
>>>> 2015-04-29 0:33 GMT+08:00 Louis D. Burr <ldanielburr at me.com>:
>>>>
>>>>> Hi Jessica,
>>>>>
>>>>> On Apr 28, 2015, at 10:14 AM, Jessica Tsui <jesadjust at gmail.com>
>>>>> wrote:
>>>>>
>>>>> SNIP
>>>>>
>>>>>  exceptions.AttributeError: MultiEcho instance has no attribute ‘factory'
>>>>>
>>>>> SNIP
>>>>>
>>>>> MultiEcho().dataReceived(sendermessage)
>>>>>
>>>>> Here you create an instance of the protocol directly, i.e., without
>>>>> having instantiated a MutilEchoFactory.  The factory’s buildProtocol method
>>>>> is what assigns the factory instance as a member of the protocol
>>>>> (self.factory), and since you didn’t create the protocol via a factory, you
>>>>> have no factory attribute on your protocol instance.
>>>>>
>>>>> There are a number of ways to fix this, but generally speaking, you
>>>>> need to provide a way for your factories and their protocols to be aware of
>>>>> each other.
>>>>>
>>>>> Hope this helps,
>>>>>
>>>>> Daniel
>>>>> --
>>>>> L. Daniel Burr
>>>>> ldanielburr at me.com
>>>>> (312) 656-8387
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/61cbc804/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 14:25:29 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 13:25:29 -0700
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
Message-ID: <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>

I think we can consider it tacitly accepted by the community (nobody seemed to object) but we still don't have anyone to implement it. Do you want to step up to do that? :)

-g

> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
> 
> Hi,
> 
> Has this proposal been accepted? Is there anything I can do to help implement it?
> 
> -Chris
> 
> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net <mailto:tom.prince at ualberta.net>> wrote:
> Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> writes:
> 
> > So I have a proposal for a scaled back process that nevertheless would give us something official-ish:
> > <..details...>
> 
> I support this proposal.
> 
>   Tom
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> -- 
> Chris Wolfe
> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/94550a4d/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 14:45:23 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 13:45:23 -0700
Subject: [Twisted-Python] Looking for some advice debugging issue with
	transport.write calls
In-Reply-To: <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>
References: <CACLJ_dEO2T8Y-dE+-Z2mcDZX_9uzpqBXg8aKhxNDK28TN4fkgQ@mail.gmail.com>
 <05D871AF-98E5-4B28-B3BB-D8530015B1B9@twistedmatrix.com>
 <CACLJ_dHSn-rOepnZCQmHnB5jrR_EdiYsq-phO497cwmnYYX71g@mail.gmail.com>
 <CACLJ_dFFDMKw=HOGGs4vhHGr_NUy+ggqFZ-k=T9aNjQFtGvpVQ@mail.gmail.com>
Message-ID: <86A5549E-BA4A-4AA8-A1F3-B3C829DA2622@twistedmatrix.com>


> On Apr 28, 2015, at 10:55 AM, Brian Costlow <brian.costlow at gmail.com> wrote:
> 
> Okay, figured this out.

Glad to hear it!

> Abstract of the issue: I am a dumbass.

We all make mistakes.  And a lot of people make this specific one :-).

> First, Itamar gets to thrash me soundly,

No need for violence!

> as there was a bug in some code (not shown in my example) that is not properly tested. That code was responsible for "turning off" the protocol instance if  connectionLost method was called, by doing some cleanup then redefining check_for_send in the instance as a no-op to stop it from pushing itself back on the reactor loop.

Ain't it always the way.

We always say "please simplify the test case" and then the asker always says "but it only happens when it's super complex".  The act of simplifying the test case itself often pinpoints the problem (as it appears to have done in your case).  Honestly this was a pretty quick turnaround and I appreciate the 

> Question: I'm assuming there's a good reason transport.write is written so it doesn't error and fails silently even though its underlying connection is not connected anymore. As part of grokking the guts of this thing I've been using for a decade...I'm curious to know why.

The main reason is "predictability".

First, consider this function:

def sendSomeCommand(self):
    self.transport.write(b"DO-SOMETHING\r\n")
    self.transport.write(b"DO-SOMETHING-ELSE\r\n")

Simple enough, right?  Sends two commands?

We could easily find out between the first call to write() and the second one that the connection has dropped.  Twisted optimistically invokes the send() syscall when it can (if the write buffer is empty when write() is called).  This means that if the buffer happens to be empty when this method is called and if the underlying OS already knows that the connection is closed, we might be able to invoke connectionLost between the first and second write() invocation.  Since you can never really know whether those invocations are happening in isolation or together, this apparently simple function needs to turn into

def sendSomeCommand(self):
    if not self.transport.disconnected:
        self.transport.write(b"DO-SOMETHING\r\n")
    if not self.transport.disconnected:
        self.transport.write(b"DO-SOMETHING-ELSE\r\n")

Also, if we were to aggressively report errors like this, users of Twisted might get the impression that a successful return from write() means that the bytes were actually sent.  What does "actually sent" mean?  This is a surprisingly complicated question with a correspondingly complicated answer.  Sent to the ethernet card? To the local network? Acknowledged by the router on the other side? By the kernel of the OS on the other side? By the application container on the other side? And so on and so forth.  Since you already have no idea exactly where in your stream of write() calls the other side's idea of the stream has terminated unless you have application-level acknowledgement, forcing users to handle exceptions for the case where it definitely wasn't received, while still not giving them any indication that it might not have been received, is a misleading and inconvenient API.

So if you want to stop sending data to a transport that you have been notified about in connectionLost, just stop calling write() :).

Hopefully this sheds some light onto transport.write's design.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/bfacfb70/attachment-0002.html>

From itamar at itamarst.org  Tue Apr 28 14:57:31 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Apr 2015 16:57:31 -0400
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
 distributed systems (with nice Twisted support)
In-Reply-To: <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
Message-ID: <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>

 

Imagine you have a client that sends a request to a server and gets back
a 500 error. What caused it? If you're using Eliot you can trace the
logs across processes: 

$ cat server.log client.log | python eliottree.py 
e076ca50-9abc-44b2-95d8-85cf6956bc33
 +-- main at 1/started
 |-- process: client
 `-- timestamp: 2015-04-28 16:50:00.379033
 +-- eliot:remote_task at 2,2,1/started
 |-- process: server
 `-- timestamp: 2015-04-28 16:50:00.389533
 +-- http_request at 2,1/started
 |-- process: client
 |-- timestamp: 2015-04-28 16:50:00.379096
 |-- x: 8
 `-- y: 0
 +-- divide at 2,2,2,1/started
 |-- process: server
 |-- timestamp: 2015-04-28 16:50:00.389674
 |-- x: 8
 `-- y: 0
 +-- divide at 2,2,2,2/failed
 |-- exception: exceptions.ZeroDivisionError
 |-- process: server
 |-- reason: integer division or modulo by zero
 `-- timestamp: 2015-04-28 16:50:00.389724
 +-- eliot:remote_task at 2,2,3/failed
 |-- exception: exceptions.ZeroDivisionError
 |-- process: server
 |-- reason: integer division or modulo by zero
 `-- timestamp: 2015-04-28 16:50:00.389750
 +-- http_request at 2,3/failed
 |-- exception: requests.exceptions.HTTPError
 |-- process: client
 |-- reason: 500 Server Error: INTERNAL SERVER ERROR
 `-- timestamp: 2015-04-28 16:50:00.396112
 +-- main at 3/failed
 |-- exception: requests.exceptions.HTTPError
 |-- process: client
 |-- reason: 500 Server Error: INTERNAL SERVER ERROR
 `-- timestamp: 2015-04-28 16:50:00.396181
 Intrigued? Learn more at https://eliot.readthedocs.org [1].

eliottree.py is an add-on utility for formatting Eliot logs, and can be
found at https://github.com/jonathanj/eliottree [2] 
 

Links:
------
[1] https://eliot.readthedocs.org
[2] https://github.com/jonathanj/eliottree
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/a0546e97/attachment-0002.html>

From jesadjust at gmail.com  Tue Apr 28 14:59:24 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 04:59:24 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <6A12071E-66C4-4DCF-B284-5299DDE712F3@me.com>
 <CALgu0tgOswKi0vXzn0c2a3dJObosHYwkRaio1FYNYZv_uOqayA@mail.gmail.com>
 <CAE3TBxyo7QqUfGhG3REDHCm7Q1K5HXj6MYfo_TCTF6CK6Vzy-w@mail.gmail.com>
 <CAE3TBxxdmpKJZQLkiTkQ_KPGTQ_=9PGnUZmSdvNYM6gSjve4rg@mail.gmail.com>
 <CALgu0tiWFAUVJ4P0L8fKhtW4RY9yZ+fFpn4HUw+6GQU_ARy1yQ@mail.gmail.com>
 <CAE3TBxxPrXdf4uwYE7T78oBuc72S+rU+HRmBru3pg3=ajtxG_w@mail.gmail.com>
Message-ID: <CALgu0tgYutFEN-ftsVY8Uoyw1HGt7Kt5h2NUAeF4kQN7Vs6H4g@mail.gmail.com>

Hi Pantelis, sorry for bothering you again. But I just ran the code and it
still has error with the line
self.factory.app.echoFactory().dataReceived(receivermessage)
as well as
for echoer in self.factory.app.multiechofactory.echoers

the errors are  'ServerApp' object has no attribute 'echoFactory' and no
'multiechofactory' respectively
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/82ab4fbe/attachment-0002.html>

From chriswwolfe at gmail.com  Tue Apr 28 15:54:56 2015
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Tue, 28 Apr 2015 16:54:56 -0500
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
 <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
Message-ID: <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>

Sure! I can only think of three things that need to be done:

1. Add a wiki page detailing the process you proposed. It may be helpful to
display an example email showing what should be included in a new
contributor request. The following pages should have links to the new
policy:
  - https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies
  - https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

I can create the wiki page and the example email. To do so, I'll need to
get wiki permissions added to my trac account.

2. Activate the email address commit at twistedmatrix.com and compile a list
of people to whom new commit requests should be sent for review. I can't do
this.

3. Send an email to the general mailing list once the new pages are up to
announce the new advancement path. I can do this.

Is there anything I'm missing?

- Chris // herrwolfe

On Tue, Apr 28, 2015 at 3:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> I think we can consider it tacitly accepted by the community (nobody
> seemed to object) but we still don't have anyone to implement it. Do you
> want to step up to do that? :)
>
> -g
>
> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
>
> Hi,
>
> Has this proposal been accepted? Is there anything I can do to help
> implement it?
>
> -Chris
>
> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net>
> wrote:
>
>> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
>>
>> > So I have a proposal for a scaled back process that nevertheless would
>> give us something official-ish:
>> > <..details...>
>>
>> I support this proposal.
>>
>>   Tom
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Chris Wolfe
> chriswwolfe at gmail.com
>
>
>


-- 
Chris Wolfe
chriswwolfe at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/ed2f6afd/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:08:49 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:08:49 -0700
Subject: [Twisted-Python] revisiting onboarding
In-Reply-To: <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>
References: <00A8D2CB-A1A3-496F-8670-E9888990F3E6@twistedmatrix.com>
 <8761bcxxak.fsf@hermes.hocat.ca>
 <CAEKSqkuP5xjOy5Vdo4Giuj1HG5Xo6hvEAvBE88ZFCzniXvp1Uw@mail.gmail.com>
 <9DC27720-4877-466C-8148-2D5E5E1EA532@twistedmatrix.com>
 <CAEKSqksRBDowvEjUYZ6C7Y4QZsrzs_AsAT7+DvKieYyQ5b3vaw@mail.gmail.com>
Message-ID: <64374D0B-3396-4B61-8DEC-82C9EDFB3EA3@twistedmatrix.com>

Can you send me an iCalendar invite of some kind to give you all the relevant permissions?  I would definitely like to volunteer to do it, but if we don't have a specific time, I will 100% guarantee you that I will forget :).

-glyph

P.S.: I've been setting a bad example, but we should generally be bottom-posting on this list, it makes the conversation easier to follow :).

> On Apr 28, 2015, at 2:54 PM, Chris Wolfe <chriswwolfe at gmail.com> wrote:
> 
> Sure! I can only think of three things that need to be done:
> 
> 1. Add a wiki page detailing the process you proposed. It may be helpful to display an example email showing what should be included in a new contributor request. The following pages should have links to the new policy: 
>   - https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies <https://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies>
>   - https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs <https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>
> 
> I can create the wiki page and the example email. To do so, I'll need to get wiki permissions added to my trac account.
> 
> 2. Activate the email address commit at twistedmatrix.com <mailto:commit at twistedmatrix.com> and compile a list of people to whom new commit requests should be sent for review. I can't do this.
> 
> 3. Send an email to the general mailing list once the new pages are up to announce the new advancement path. I can do this.
> 
> Is there anything I'm missing?
> 
> - Chris // herrwolfe
> 
> On Tue, Apr 28, 2015 at 3:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> I think we can consider it tacitly accepted by the community (nobody seemed to object) but we still don't have anyone to implement it. Do you want to step up to do that? :)
> 
> -g
> 
>> On Apr 27, 2015, at 6:04 PM, Chris Wolfe <chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>> wrote:
>> 
>> Hi,
>> 
>> Has this proposal been accepted? Is there anything I can do to help implement it?
>> 
>> -Chris
>> 
>> On Sun, Feb 8, 2015 at 9:01 AM, Tom Prince <tom.prince at ualberta.net <mailto:tom.prince at ualberta.net>> wrote:
>> Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> writes:
>> 
>> > So I have a proposal for a scaled back process that nevertheless would give us something official-ish:
>> > <..details...>
>> 
>> I support this proposal.
>> 
>>   Tom
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>> 
>> 
>> 
>> -- 
>> Chris Wolfe
>> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>
> 
> 
> 
> 
> -- 
> Chris Wolfe
> chriswwolfe at gmail.com <mailto:chriswwolfe at gmail.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/07c9190d/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:13:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:13:14 -0700
Subject: [Twisted-Python] Getting started on making the move to the new
	logging system
In-Reply-To: <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
 <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
Message-ID: <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>


> On Apr 27, 2015, at 9:12 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello, Glyph! :-)
>  
> My initial suggestion - don't take this too authoritatively, I'd be happy for input from anyone else - would be that the next step would be to simply identify a module that has some interesting log events, make a ticket for logging them using the new system, and then write a patch for that ticket.
> 
> There is a possibility that I misunderstood what you had actually meant, but I assure you that I was not being or even trying to be authoritative, 

I just meant don't take my comments too authoritatively :-).

> One more thing I would like to say, when I said "advice and guidance regarding this" below:

...

> Sounds like good advice.
> 
> Good luck, and feel free to keep asking questions,
> 
> -glyph


And I just meant "it sounds like HawkOwl and adiroiban gave you good advice by telling you to ask for advice on the mailing list" :-).

Hope that's clearer,

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/0683041d/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:15:57 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:15:57 -0700
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
	distributed systems (with nice Twisted support)
In-Reply-To: <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
 <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
Message-ID: <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>


> On Apr 28, 2015, at 1:57 PM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:
> 
> Imagine you have a client that sends a request to a server and gets back a 500 error. What caused it? If you're using Eliot you can trace the logs across processes:
> 
> 
> $ cat server.log client.log | python eliottree.py 
> e076ca50-9abc-44b2-95d8-85cf6956bc33
>     +-- main at 1/started
>         |-- process: client
>         `-- timestamp: 2015-04-28 16:50:00.379033

(etc)

This looks cooler all the time.

You could probably make it look even cooler by using unicode line-drawing characters :-).

Also, is there a web frontend which can render these?  Will there be?

Will any of the additional structuring or filtering of log messages from the new logging system be helpful to Elliot?  If so, do you have any pointers for Eeshan where he might improve existing messages?

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/b1d1cc86/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Apr 28 16:20:12 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Apr 2015 15:20:12 -0700
Subject: [Twisted-Python] attribute error when I am trying to make one
	factory to send data to another
In-Reply-To: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
Message-ID: <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>


> On Apr 28, 2015, at 8:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
> 
> I am working on this messaging app and I would like to pass data from one factory to another. 

Hi Jessica,

I will hopefully have more useful feedback for you when I have a chance to read the whole thread (if others haven't answered all your questions already), but I wanted to quickly note that I think it's super cool you're integrating Twisted with Kivy - I am always excited to see people bringing Twisted to a diversity of environments, and we don't have enough people using it for front-end stuff, although that is very much of a part of its design.  So thanks for using Twisted!  I hope we can help make your experience of it as positive as possible,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/d82875d7/attachment-0002.html>

From jesadjust at gmail.com  Tue Apr 28 17:28:23 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 07:28:23 +0800
Subject: [Twisted-Python] attribute error when I am trying to make one
 factory to send data to another
In-Reply-To: <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>
References: <CALgu0tiq=UYFYqrPRjv2vnD98hiRhQVUzJp=-TPpNxM9jUEApw@mail.gmail.com>
 <77D209D2-DB4F-4602-88F7-71E1CB9C0C89@twistedmatrix.com>
Message-ID: <CALgu0th0BrFaQPMywepdwH9ZZ-iQVqPZ0xODqWxmWnBvbLh__g@mail.gmail.com>

Hi glyph,

Thanks for your quick note. Even though I do not have deep understanding in
Twisted, based on the documentation I have read I truly think that Twisted
can be used on a more front-end stuff and I hope that it will work out well
for this testing project, so that i can work further on it later to explore
more possibilities with it.

Actually what I was trying to do is that I am trying to build a server app
with two clients app, one is called "sender" which is connected on port
8000, and one is called "receiver" which is on the port 8001. My target is
to create the server app that listens to what the "sender" posts first,
then decide to push it to "receiver" or not with a button created in kivy;
the "receiver" can directly write back to the "sender".

Right now my code is based on various examples that I have found online, so
I am not sure if I am really doing things right. I hope that I am on the
right track for it with the help from Twisted and kivy.

2015-04-29 6:20 GMT+08:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Apr 28, 2015, at 8:14 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> I am working on this messaging app and I would like to pass data from one
> factory to another.
>
>
> Hi Jessica,
>
> I will hopefully have more useful feedback for you when I have a chance to
> read the whole thread (if others haven't answered all your questions
> already), but I wanted to quickly note that I think it's super cool you're
> integrating Twisted with Kivy - I am always excited to see people bringing
> Twisted to a diversity of environments, and we don't have enough people
> using it for front-end stuff, although that is very much of a part of its
> design.  So thanks for using Twisted!  I hope we can help make your
> experience of it as positive as possible,
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/f673ecb0/attachment-0002.html>

From itamar at itamarst.org  Tue Apr 28 17:57:38 2015
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Apr 2015 19:57:38 -0400
Subject: [Twisted-Python] Announcing Eliot 0.7: Logging for complex and
 distributed systems (with nice Twisted support)
In-Reply-To: <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>
References: <CAJxVWe9p=MhDCqmggpg8OewS67nDSr3My3_VWp=SK8e4GNhjKA@mail.gmail.com>
 <CAJxVWe_M97Svg50gN2KqF+jvA5G71Gjki1K8cyZUjvwQA09vew@mail.gmail.com>
 <e1b7dc695974d0f3b076445ae60e8c2f@itamarst.org>
 <1A044199-4369-403E-9B42-1B88BFC887CE@twistedmatrix.com>
Message-ID: <6b8e990eabb788bba0c2f6ff3f3e25c6@itamarst.org>

 

On 2015-04-28 18:15, Glyph Lefkowitz wrote: 

> You could probably make it look even cooler by using unicode line-drawing characters :-).

Jonathan Jacobs is responsible for the neat UI. 

> Also, is there a web frontend which can render these? Will there be?

Since the underlying structure is a sequence of independent messages you
can e.g. feed Eliot messages into ElasticSearch and then use Kibana,
which is quite helpful. This does involve a little bit of "manual"
tracing of the tree structure (sorting by the relevant column,
basically.) I haven't spent much time using Eliot in anger due to last
year's pivot at work so haven't thought that much about building UIs
yet. 

> Will any of the additional structuring or filtering of log messages from the new logging system be helpful to Elliot? If so, do you have any pointers for Eeshan where he might improve existing messages?

At work we have a thing that routes Twisted logs into Eliot; being able
to route structured messages will correspondingly improve the quality of
the resulting logs. Insofar as Eliot's tree structure is callstack based
(with additional support for Deferreds) most Twisted (or stdlib, or
whatever) log messages will typically end up in the correct place in the
action tree if you route them to Eliot. 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150428/6a92a203/attachment-0002.html>

From jerryguitarist at gmail.com  Tue Apr 28 21:48:28 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Wed, 29 Apr 2015 09:18:28 +0530
Subject: [Twisted-Python] Getting started on making the move to the new
 logging system
In-Reply-To: <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>
References: <CA+2gYip3K6QdC8-xexoNFLJoYWuVXmWmbNYvTkdMAXJQRNAC5w@mail.gmail.com>
 <FD79B667-7F01-43F0-A50E-D7B50700DF40@twistedmatrix.com>
 <CA+2gYiq8OJTySFPx6BGz0sRkx45h4MX2Tuiwubhx1oXw7TMCCw@mail.gmail.com>
 <C5C27D80-A284-4C92-B295-76E3EE1F13E2@twistedmatrix.com>
Message-ID: <CA+2gYip3y=Qbc9KUu1nEJNf_XaiiJc3Xnj7YGrnyGZWVBC2ptw@mail.gmail.com>

Hi Glyph!

My apologies for misunderstanding! I'll try my best and make sure that does
not happen again.

I am counting on you and the members of this community to be severely
critical of me if I go down a path that I should not be taking, and this
community can count on me in the sense that I'll invariably admit it when I
screw up and try my best to rectify my mistakes and improve my conduct
accordingly! :-)

I'll get started on the logging thing and I'll send an email to the mailing
list if I have any questions. :-)

Warm regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/1900f3f2/attachment-0002.html>

From jesadjust at gmail.com  Wed Apr 29 01:33:57 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Wed, 29 Apr 2015 15:33:57 +0800
Subject: [Twisted-Python] flushing data to clients after a global variable
	is updated in server
Message-ID: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>

Hi, it's me again. I am still working on the kivy app, and now I am trying
to add a function to the app - the server side has two seconds to decide if
he wants to alter the original data sent from one client to other clients.
If he would like to do so, he has to press a button. If he does not press
the button in 2 seconds, the original data will be sent to other clients
automatically.

Right now I am trying to achieve that with the following code - by calling
the MultiClientEcho().dataReceived(msg, "censored") line in the function as
if MultiClientEcho received another data, however once i click the button,
the program crashed and said (MultiClientEcho().dataReceived(msg,
"censored")
 TypeError: __init__() takes exactly 3 arguments (1 given))

I wonder how can I fix this and achieve the function I am aiming at?

import kivy
from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.scatter import Scatter
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.scrollview import ScrollView
from kivy.uix.button import Button
from kivy.graphics.vertex_instructions import Rectangle
from kivy.graphics.context_instructions import Color
from kivy.graphics.instructions import Instruction
from kivy.base import runTouchApp
from kivy.lang import Builder
import socket
from kivy.core.window import Window
import pygame
import random
from kivy.support import install_twisted_reactor
install_twisted_reactor()
from twisted.internet import protocol, defer
from time import sleep
from twisted.internet import reactor, task
from twisted.protocols.basic import LineReceiver
from twisted.internet.protocol import Protocol, Factory

censored = 0

class MultiClientEcho(protocol.Protocol):
    def __init__(self, factory, app):
        self.factory = factory
        self.app = app

    def connectionMade(self):
        self.factory.clients.append(self)

    def dataReceived(self, data):

        storedmessage = self.factory.app.handle_message(data)

        global censored

        def f(data):
                for client in self.factory.clients:
                    client.transport.write(data)
                    print "this will run in 1 sec after it's
scheduled: %s" % data

        if censored == 0 and storedmessage:
                reactor.callLater(2, f, data)
                # client.transport.write(data)
        elif censored == 1:
                reactor.callLater(0, f, 'censored')
                censored == 0


    def connectionLost(self, reason):
        self.factory.clients.remove(self)


class MultiClientEchoFactory(protocol.Factory):
    protocol = MultiClientEcho

    def __init__(self, app):
        self.clients = []
        self.app = app

    def buildProtocol(self, addr):
        return MultiClientEcho(self, self.app)


class ServerApp(App):
    def build(self):
        self.label = Label(text="server started\n")


        self.approve_btn = Button(text="approve")
        # self.approve_btn.bind(on_release=self.send_message)
        self.banned_btn = Button(text="banned")
        self.banned_btn.bind(on_release=self.banned_message)
        self.layout = BoxLayout(orientation='vertical', spacing=10)

        reactor.listenTCP(8000, MultiClientEchoFactory(self))

        self.layout.add_widget(self.label)
        self.layout.add_widget(self.banned_btn)

        return self.layout

    def banned_message(self, msg):
        global censored
        censored = 1
        self.label.text += "censored\n"
        MultiClientEcho().dataReceived(msg, "censored")
        print censored
        return censored

    def handle_message(self, msg):
        self.label.text += "%s\n" % msg
        return msg


if __name__ == '__main__':
    ServerApp().run()

for i in range(0,1):
    print 1-i
    sleep(0.1)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150429/f8f7b0e4/attachment-0002.html>

From dynamicgl at gmail.com  Wed Apr 29 22:18:15 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Thu, 30 Apr 2015 12:18:15 +0800
Subject: [Twisted-Python] twisted and twisted-infra organizations on
	GitHub
In-Reply-To: <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>
References: <CAFycZ9f-9bnVi=xg8v-h2dxsXcgL5qjozbB8ycWpFZT0bU1CFg@mail.gmail.com>
 <20150403004329.6423.375338749.divmod.xquotient.129@top>
 <CAFycZ9eKHSs13AzH5A+7jF6uJBfO5GuFjbvteVJVuQ3yD+72Ww@mail.gmail.com>
 <036E2D86-4DC6-4390-AEC0-6F5ABDB31D11@twistedmatrix.com>
 <CABkOF6TNDK1EBdGgzPAODNaeo4n8dKck-S41fRm2gGSTMUUYLQ@mail.gmail.com>
 <CA+LhZ99_PRJSNV+tEfcbp3gyn9S1tPrFCQrjtRKLE_z3x0JNZA@mail.gmail.com>
Message-ID: <CABkOF6QuOn0gpyRiEkzm-K3pYqPHO+scbNdtUeS2uMaB_Zc6pQ@mail.gmail.com>

On Mon, Apr 27, 2015 at 3:22 PM, bret curtis <psi29a at gmail.com> wrote:

>
>
> On Fri, Apr 24, 2015 at 10:54 AM, Gelin Yan <dynamicgl at gmail.com> wrote:
>>
>> Hi Glyph
>>
>>      off-topic a bit. I care about txmongo. I actually plan to use it in
>> production soon.
>>
>> Regards
>>
>> gelin yan
>>
>>
> Glad you do! :D  We use it in production as well!  Just landed MongoDB 3.x
> support, but we've still have a way to go to make it 1:1 with PyMongo.
>
> As for an apart ecosystem organization, I don't see any problems with
> moving yet again. ;)  I just question the necessity of it right now, it
> isn't like we are endlessly scrolling through pypi packages.
>
> Cheers,
> Bret
>
> _______________________________________________
>

Hi Bret

    Do you know whether txmongo supports replication & the latest geo
index? The last time I used it, Both of two features were missing.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150430/619b0e25/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Apr 30 13:39:07 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Apr 2015 12:39:07 -0700
Subject: [Twisted-Python] flushing data to clients after a global
	variable is updated in server
In-Reply-To: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
References: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
Message-ID: <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>


> On Apr 29, 2015, at 12:33 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
> 
> Hi, it's me again. I am still working on the kivy app, and now I am trying to add a function to the app - the server side has two seconds to decide if he wants to alter the original data sent from one client to other clients. If he would like to do so, he has to press a button. If he does not press the button in 2 seconds, the original data will be sent to other clients automatically.
> 
> Right now I am trying to achieve that with the following code - by calling the MultiClientEcho().dataReceived(msg, "censored") line in the function as if MultiClientEcho received another data, however once i click the button, the program crashed and said (MultiClientEcho().dataReceived(msg, "censored")
>  TypeError: __init__() takes exactly 3 arguments (1 given))

The first problem here is that "MultiEchoClient()" means "create a new MultiEchoClient".  Since MultiEchoClient.__init__ takes "factory" and "app" parameters, you tried to create it with 1 parameter (just "self", which is passed implicitly) instead of the required 3 (self, factory, app).

The second problem, once you've addressed that, is that you almost certainly don't want to create a new MultiEchoClient :).  It's not clear to me which MultiEchoClient you are trying to send this message to.

The third problem is that you should never call dataReceived yourself.  dataReceived is a method invoked by Twisted to tell your protocol that data has arrived.

The fourth problem is that you're treating dataReceived as delivering a discrete message.  It doesn't; it delivers a segment of some data in the stream coming from a client.  This is our most popular FAQ; basically, you need to use a NetstringReceiver or something to ensure you're getting complete messages in dataReceived: https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith <https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith>

Hopefully once you've addressed all these it will work more like you want it to :).

> I wonder how can I fix this and achieve the function I am aiming at?

I've put other comments inline in the code below.
> import kivy
> from kivy.app import App
> from kivy.uix.label import Label
> from kivy.uix.scatter import Scatter
> from kivy.uix.boxlayout import BoxLayout
> from kivy.uix.scrollview import ScrollView
> from kivy.uix.button import Button
> from kivy.graphics.vertex_instructions import Rectangle
> from kivy.graphics.context_instructions import Color
> from kivy.graphics.instructions import Instruction
> from kivy.base import runTouchApp
> from kivy.lang import Builder
> import socket
You don't actually use "socket" anywhere in this module so you don't need to import it :).
> from kivy.core.window import Window
> import pygame
> import random
> from kivy.support import install_twisted_reactor
> install_twisted_reactor()
> from twisted.internet import protocol, defer
> from time import sleep
> from twisted.internet import reactor, task
> from twisted.protocols.basic import LineReceiver
> from twisted.internet.protocol import Protocol, Factory
> 
> censored = 0
> 
> class MultiClientEcho(protocol.Protocol):
>     def __init__(self, factory, app):
>         self.factory = factory
>         self.app = app
> 
>     def connectionMade(self):
>         self.factory.clients.append(self)
> 
>     def dataReceived(self, data):
> 
>         storedmessage = self.factory.app.handle_message(data)
> 
>         global censored
> 
Rather than making this a global variable, consider putting it (as with "app" and with "clients") onto the factory, so you can instantiate multiple MultiClientEchoFactory instances in one process.
>         def f(data):
>                 for client in self.factory.clients:
This is a bit too much indentation - you should stick to 4 spaces per indent for stylistic reasons :).
>                     client.transport.write(data)
>                     print "this will run in 1 sec after it's scheduled: %s" % data
> 
>         if censored == 0 and storedmessage:
>                 reactor.callLater(2, f, data)
You're not hanging on to the result of this callLater call, which means you are giving up any way of stopping this call from happening in the future.  If you want to allow the caller to cancel it, note that reactor.callLater returns an IDelayedCall, which has a "cancel()" method that stops it from happening if it hasn't happened yet.  See the API documentation here; https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html <https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html> 
>                 # client.transport.write(data)
>         elif censored == 1:
>                 reactor.callLater(0, f, 'censored')
>                 censored == 0
I think maybe you mean "censored = 0" here? "censored == 0" just means "compare censored to 0" which will create a True or False value but otherwise do nothing; in this context, it pretty much means "do nothing".
> 
>     def connectionLost(self, reason):
>         self.factory.clients.remove(self)
> 
> 
> class MultiClientEchoFactory(protocol.Factory):
>     protocol = MultiClientEcho
> 
>     def __init__(self, app):
>         self.clients = []
>         self.app = app
> 
>     def buildProtocol(self, addr):
>         return MultiClientEcho(self, self.app)
> 
> 
> class ServerApp(App):
>     def build(self):
>         self.label = Label(text="server started\n")
> 
> 
>         self.approve_btn = Button(text="approve")
>         # self.approve_btn.bind(on_release=self.send_message)
>         self.banned_btn = Button(text="banned")
>         self.banned_btn.bind(on_release=self.banned_message)
>         self.layout = BoxLayout(orientation='vertical', spacing=10)
> 
>         reactor.listenTCP(8000, MultiClientEchoFactory(self))
> 
Rather than calling listenTCP directly, you should be using some kind of Endpoint here; TCP4ServerEndpoint if you just want to hard code port 8000, or serverFromString if you want to allow your user to customize it.  See this document: https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html>        self.layout.add_widget(self.label)
>         self.layout.add_widget(self.banned_btn)
> 
>         return self.layout
> 
>     def banned_message(self, msg):
>         global censored
>         censored = 1
>         self.label.text += "censored\n"
>         MultiClientEcho().dataReceived(msg, "censored")
>         print censored
>         return censored
> 
>     def handle_message(self, msg):
>         self.label.text += "%s\n" % msg
>         return msg
> 
> 
> if __name__ == '__main__':
>     ServerApp().run()
> 
> for i in range(0,1):
>     print 1-i
>     sleep(0.1)
> 
> 
> 

Thanks again for using Twisted!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150430/dd617168/attachment-0002.html>

From jesadjust at gmail.com  Thu Apr 30 21:32:41 2015
From: jesadjust at gmail.com (Jessica Tsui)
Date: Fri, 1 May 2015 11:32:41 +0800
Subject: [Twisted-Python] flushing data to clients after a global
 variable is updated in server
In-Reply-To: <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>
References: <CALgu0tjOhhMVFzAHfP+zw6EMsY2-HcwpZvZEoLkzym623kwk-g@mail.gmail.com>
 <34899C77-074B-487C-B376-ECE8796C129A@twistedmatrix.com>
Message-ID: <CALgu0tgvg8taPz2FUUS-BQ0L6TaX6xpo31Uer-aB+D_QtKjzFA@mail.gmail.com>

Hi Glyph,

  Thank you so much for your detailed explanation. You are a life saver!

Best,
Jessica

2015-05-01 3:39 GMT+08:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Apr 29, 2015, at 12:33 AM, Jessica Tsui <jesadjust at gmail.com> wrote:
>
> Hi, it's me again. I am still working on the kivy app, and now I am trying
> to add a function to the app - the server side has two seconds to decide if
> he wants to alter the original data sent from one client to other clients.
> If he would like to do so, he has to press a button. If he does not press
> the button in 2 seconds, the original data will be sent to other clients
> automatically.
>
> Right now I am trying to achieve that with the following code - by calling
> the MultiClientEcho().dataReceived(msg, "censored") line in the function as
> if MultiClientEcho received another data, however once i click the button,
> the program crashed and said (MultiClientEcho().dataReceived(msg,
> "censored")
>  TypeError: __init__() takes exactly 3 arguments (1 given))
>
>
> The first problem here is that "MultiEchoClient()" means "create a *new* MultiEchoClient".
> Since MultiEchoClient.__init__ takes "factory" and "app" parameters, you
> tried to create it with 1 parameter (just "self", which is passed
> implicitly) instead of the required 3 (self, factory, app).
>
> The second problem, once you've addressed that, is that you almost
> certainly don't want to create a new MultiEchoClient :).  It's not clear to
> me *which* MultiEchoClient you are trying to send this message to.
>
> The third problem is that you should never call dataReceived yourself.
>  dataReceived is a method invoked by Twisted to tell your protocol that
> data has arrived.
>
> The fourth problem is that you're treating dataReceived as delivering a
> discrete message.  It doesn't; it delivers a segment of some data in the
> stream coming from a client.  This is our most popular FAQ; basically, you
> need to use a NetstringReceiver or something to ensure you're getting
> complete messages in dataReceived:
> https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith
>
> Hopefully once you've addressed all these it will work more like you want
> it to :).
>
> I wonder how can I fix this and achieve the function I am aiming at?
>
>
> I've put other comments inline in the code below.
>
> import kivy
> from kivy.app import App
> from kivy.uix.label import Label
> from kivy.uix.scatter import Scatter
> from kivy.uix.boxlayout import BoxLayout
> from kivy.uix.scrollview import ScrollView
> from kivy.uix.button import Button
> from kivy.graphics.vertex_instructions import Rectangle
> from kivy.graphics.context_instructions import Color
> from kivy.graphics.instructions import Instruction
> from kivy.base import runTouchApp
> from kivy.lang import Builder
> import socket
>
> You don't actually use "socket" anywhere in this module so you don't need
> to import it :).
>
> from kivy.core.window import Window
> import pygame
> import random
> from kivy.support import install_twisted_reactor
> install_twisted_reactor()
> from twisted.internet import protocol, defer
> from time import sleep
> from twisted.internet import reactor, task
> from twisted.protocols.basic import LineReceiver
> from twisted.internet.protocol import Protocol, Factory
>
> censored = 0
>
> class MultiClientEcho(protocol.Protocol):
>     def __init__(self, factory, app):
>         self.factory = factory
>         self.app = app
>
>     def connectionMade(self):
>         self.factory.clients.append(self)
>
>     def dataReceived(self, data):
>
>         storedmessage = self.factory.app.handle_message(data)
>
>         global censored
>
> Rather than making this a global variable, consider putting it (as with
> "app" and with "clients") onto the factory, so you can instantiate multiple
> MultiClientEchoFactory instances in one process.
>
>         def f(data):
>                 for client in self.factory.clients:
>
> This is a bit too much indentation - you should stick to 4 spaces per
> indent for stylistic reasons :).
>
>                     client.transport.write(data)
>                     print "this will run in 1 sec after it's scheduled: %s" % data
>
>         if censored == 0 and storedmessage:
>                 reactor.callLater(2, f, data)
>
> You're not hanging on to the result of this callLater call, which means
> you are giving up any way of stopping this call from happening in the
> future.  If you want to allow the caller to cancel it, note that
> reactor.callLater returns an IDelayedCall, which has a "cancel()" method
> that stops it from happening if it hasn't happened yet.  See the API
> documentation here;
> https://twistedmatrix.com/documents/15.1.0/api/twisted.internet.interfaces.IReactorTime.callLater.html
>
>
>                 # client.transport.write(data)
>         elif censored == 1:
>                 reactor.callLater(0, f, 'censored')
>                 censored == 0
>
> I think maybe you mean "censored = 0" here? "censored == 0" just means
> "compare censored to 0" which will create a True or False value but
> otherwise do nothing; in this context, it pretty much means "do nothing".
>
>
>     def connectionLost(self, reason):
>         self.factory.clients.remove(self)
>
>
> class MultiClientEchoFactory(protocol.Factory):
>     protocol = MultiClientEcho
>
>     def __init__(self, app):
>         self.clients = []
>         self.app = app
>
>     def buildProtocol(self, addr):
>         return MultiClientEcho(self, self.app)
>
>
> class ServerApp(App):
>     def build(self):
>         self.label = Label(text="server started\n")
>
>
>         self.approve_btn = Button(text="approve")
>         # self.approve_btn.bind(on_release=self.send_message)
>         self.banned_btn = Button(text="banned")
>         self.banned_btn.bind(on_release=self.banned_message)
>         self.layout = BoxLayout(orientation='vertical', spacing=10)
>
>         reactor.listenTCP(8000, MultiClientEchoFactory(self))
>
> Rather than calling listenTCP directly, you should be using some kind of
> Endpoint here; TCP4ServerEndpoint if you just want to hard code port 8000,
> or serverFromString if you want to allow your user to customize it.  See
> this document:
> https://twistedmatrix.com/documents/15.1.0/core/howto/endpoints.html
>
>         self.layout.add_widget(self.label)
>         self.layout.add_widget(self.banned_btn)
>
>         return self.layout
>
>     def banned_message(self, msg):
>         global censored
>         censored = 1
>         self.label.text += "censored\n"
>         MultiClientEcho().dataReceived(msg, "censored")
>         print censored
>         return censored
>
>     def handle_message(self, msg):
>         self.label.text += "%s\n" % msg
>         return msg
>
>
> if __name__ == '__main__':
>     ServerApp().run()
>
> for i in range(0,1):
>     print 1-i
>     sleep(0.1)
>
>
>
>
> Thanks again for using Twisted!
>
> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150501/6feb6813/attachment-0002.html>

