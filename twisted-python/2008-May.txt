From sxsong at hotmail.com  Thu May  1 17:51:24 2008
From: sxsong at hotmail.com (Steven Song)
Date: Thu, 1 May 2008 15:51:24 -0600
Subject: [Twisted-Python] Implement a client to telnet to a Linux machine
Message-ID: <BAY144-W225E5D11D8F46470DE84D7D1DB0@phx.gbl>


I am new to both Python and Twisted framework, so if this has already been dicussed bofore please excuse me. I am trying to implement a client software using Python to telnet to a Linux machine. The login involves authntication with username and password. Can someone please point me to an example if there is one? I know it has something to do with twisted.conch.telnet but am not sure about the detailed implementation yet. Thanks in advance.
_________________________________________________________________
Turn every day into $1000. Learn more at SignInAndWIN.ca
http://g.msn.ca/ca55/213
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080501/7543425a/attachment.htm 

From daniel.brandt at gmail.com  Thu May  1 18:09:12 2008
From: daniel.brandt at gmail.com (Daniel Brandt)
Date: Fri, 2 May 2008 00:09:12 +0200
Subject: [Twisted-Python] From asyncore to twisted
Message-ID: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>

Hello,
I'm looking for some advice on how to get started with an asyncore ->
Twisted conversion. Being new to  twisted I have some trouble getting
started (re)designing my system. All ideas are welcome since I'm also
doing this to learn.

I am about to convert a message-passing daemon written with asyncore
to Twisted, and I have two goals in mind. Code that is easier to
maintain and expand, and higher reliability. The last part would
probably be achievable while sticking with the present code, but since
I keep hearing I really should use Twisted instead, I figured I'd try
it out :-).

The daemon listens for connections from different peers. Some peers
just leave a message and disconnect, some peers connect as receivers
and linger waiting for messages. A message will be given to the daemon
by a messenger, and forwarded by the daemon to exactly one of the
connected receivers. The daemon keeps a data structure (a dict with
identifier: channel, actually) of receivers which it cycles through in
a round-robin fashion.

There are more scenarios as well; (recievers may send status messages
back to the daemon that the daemon logs, some messengers linger
waiting for confirmation from a receiver and a few other) but they are
mostly just variations of the above.

I'm a bit confused about what parts should be in the Protocol and what
should be separated away from it. Should I make a specialized Factory
or make a Service (or several depending on what type of client
connection it is)?

I realize there is a lot in my description that's open for
interpretation, but since I'm mostly after design ideas and good
practices, I'm hoping that's OK..

Best regards,
Daniel Brandt



From drew.smathers at gmail.com  Fri May  2 10:20:36 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 2 May 2008 10:20:36 -0400
Subject: [Twisted-Python] From asyncore to twisted
In-Reply-To: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
References: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
Message-ID: <368574aa0805020720m1a76ceedl8ad2f5b84a1f42f1@mail.gmail.com>

On Thu, May 1, 2008 at 6:09 PM, Daniel Brandt <daniel.brandt at gmail.com> wrote:
> Hello,
>  I'm looking for some advice on how to get started with an asyncore ->
>  Twisted conversion. Being new to  twisted I have some trouble getting
>  started (re)designing my system. All ideas are welcome since I'm also
>  doing this to learn.
>
>  I am about to convert a message-passing daemon written with asyncore
>  to Twisted, and I have two goals in mind. Code that is easier to
>  maintain and expand, and higher reliability. The last part would
>  probably be achievable while sticking with the present code, but since
>  I keep hearing I really should use Twisted instead, I figured I'd try
>  it out :-).
>
>  The daemon listens for connections from different peers. Some peers
>  just leave a message and disconnect, some peers connect as receivers
>  and linger waiting for messages. A message will be given to the daemon
>  by a messenger, and forwarded by the daemon to exactly one of the
>  connected receivers. The daemon keeps a data structure (a dict with
>  identifier: channel, actually) of receivers which it cycles through in
>  a round-robin fashion.

One common strategy in twisted is to keep a list of your connected
clients (Protocol instances) as part of  the factory.  See:

http://twistedmatrix.com/projects/core/documentation/howto/servers.html

So in the dataReceived method on you Protocol, you would do something like:

def dataReceived(self):
    self.factory.clients.append(self)

>  There are more scenarios as well; (recievers may send status messages
>  back to the daemon that the daemon logs, some messengers linger
>  waiting for confirmation from a receiver and a few other) but they arees,
>  mostly just variations of the above.
>
>  I'm a bit confused about what parts should be in the Protocol and what
>  should be separated away from it. Should I make a specialized Factory
>  or make a Service (or several depending on what type of client
>  connection it is)?

I think generally it is a good idea to have a specialized Factory as
this binds global state for you Protocol instances.  The server howto
linked above describes this pattern quite well.

>  I realize there is a lot in my description that's open for
>  interpretation, but since I'm mostly after design ideas and good
>  practices, I'm hoping that's OK..
>

The finger tutorial does a good job of explaining many aspects of
twisted, and this might give you some ideas of how to leverage its
parts for your application:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From andrewfr_ice at yahoo.com  Fri May  2 11:54:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 2 May 2008 08:54:32 -0700 (PDT)
Subject: [Twisted-Python] Problem Changing Time Format of a Log
Message-ID: <872092.74012.qm@web34208.mail.mud.yahoo.com>

Hi Folks:

I need to change date format of a log - the
application I am using wants HH:MM:SS. Twisted seems
to give back HH:MM.

Based on the example in Abe Fettig's book and looking
at Twisted.Python.Log (and I am not sure where to
define the timeFormat string), I do the following.

class MyLog(log.FileLogObserver):
    
    def formatTime(self, when):
        if self.timeFormat is not None:
           return time.strftime(self.timeFormat,
time.localtime(when))

        tzOffset = -self.getTimezoneOffset()
        when = datetime.datetime.utcfromtimestamp(when
+ tzOffset)
        tzHour = int(tzOffset / 60 / 60)
        tzMin = int(tzOffset / 60 % 60)
        # added seconds
        return '%d/%02d/%02d %02d:%02d:%02d %+03d%02d'
% (
            when.year, when.month, when.day,
            when.hour, when.minute, when.second,
            tzHour, tzMin)
    
    def emit(self, logEntryDict):
        log.FileLogObserver.emit(self, logEntryDict)


When I run my code in twistd, I get the following
error

Log observer <bound method InsightLog.emit of <>
failed, removing from observer list.

Any help would be appreciated in telling me what is
going wrong, or pointing out the right way of altering
the log.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From camrdale at gmail.com  Fri May  2 12:24:42 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Fri, 2 May 2008 09:24:42 -0700
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <872092.74012.qm@web34208.mail.mud.yahoo.com>
References: <872092.74012.qm@web34208.mail.mud.yahoo.com>
Message-ID: <f4438a6a0805020924k78f9c2b6ga409029c9ee401c8@mail.gmail.com>

On 5/2/08, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>  I need to change date format of a log - the
>  application I am using wants HH:MM:SS. Twisted seems
>  to give back HH:MM.

I can't comment on your code, but I noticed that Twisted's default
logging format changed with the release of 8.0 to be HH:MM:SS, so you
may just want to upgrade. Also, I think it now uses the builtin python
logging module, so changes to the format might now be easier.

Cameron



From glyph at divmod.com  Fri May  2 12:32:07 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 02 May 2008 16:32:07 -0000
Subject: [Twisted-Python] From asyncore to twisted
In-Reply-To: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
References: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
Message-ID: <20080502163207.25821.525963087.divmod.xquotient.7479@joule.divmod.com>


On 1 May, 10:09 pm, daniel.brandt at gmail.com wrote:
>I'm looking for some advice on how to get started with an asyncore ->
>Twisted conversion. Being new to  twisted I have some trouble getting
>started (re)designing my system. All ideas are welcome since I'm also
>doing this to learn.

I suggest that you do these things one at a time.

While I am practically overflowing with advice about how to architect 
Twisted applications, I don't think it would be appropriate to give it 
all to you right now.

Get your application running on Twisted under more or less the same 
architecture, and then once you've ported over the basics - protocols 
and transports, timed events - you should notice that you can delete 
some of the things in your asyncore application that were doing things 
that Twisted is now doing for you.

Once you've got a fully working Twisted app (with, of course, full unit 
test coverage) that's the time to start looking at how to best improve 
it.  Trying to simultaneously convert to Twisted and improve your design 
will lead to things breaking, leaving you thinking "this used to work 
*before*..." and scratching your head, wondering if it's the new design 
that's buggy or it's some detail of Twisted you don't understand.
>I'm a bit confused about what parts should be in the Protocol and what
>should be separated away from it. Should I make a specialized Factory
>or make a Service (or several depending on what type of client
>connection it is)?

A Protocol represents an individual connection between a client and 
server; a factory roughly represents a listening (or connecting) port 
where incoming connections may be initiated; when connections are 
started via a Factory, Protocols are created.

Keep the things on the Protocol that were on your asyncore "channels", 
and use factories for objects that previously had a "handle_connect" 
method.

I wouldn't worry at all about Services just yet; the only place you need 
to care about them is your start-up and shut-down code.



From zooko at zooko.com  Fri May  2 12:50:40 2008
From: zooko at zooko.com (zooko)
Date: Fri, 2 May 2008 10:50:40 -0600
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <872092.74012.qm@web34208.mail.mud.yahoo.com>
References: <872092.74012.qm@web34208.mail.mud.yahoo.com>
Message-ID: <CA87DD5E-0074-4F15-9AC2-9B666EF466B0@zooko.com>

On May 2, 2008, at 9:54 AM, Andrew Francis wrote:

> Log observer <bound method InsightLog.emit of <>
> failed, removing from observer list.

Does this mean that the the method raised an exception but the  
twisted logging infrastructure isn't telling you what the exception was?

I've done this successfully:

http://allmydata.org/trac/tahoe/browser/src/allmydata/node.py? 
rev=2360#L201

Regards,

Zooko




From torriem at gmail.com  Sat May  3 21:03:29 2008
From: torriem at gmail.com (Michael Torrie)
Date: Sat, 03 May 2008 19:03:29 -0600
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
 dealing with chained deferreds, patch
Message-ID: <481D0B61.60906@gmail.com>

This message is probably for Tv.

I have a situation where the callback to a
LDAPClient.send_multiResponse() call needs to do a bunch of work that I
want to split up over several functions, using deferred chaining.  What
I want to do is something like this (this in conjunction with an LDAP
proxy server I am writing using Twisted and ldaptor):


d = self.client.send_multiResponse(request, got_response)

then later:

def got_response(response):

    # get a list of other things to do with the response
    d = do_stuff_with_response(response)
    d.addCallback(finish)

    return d


def finish(response):
    # we're done

    return isinstance(response, (
            pureldap.LDAPSearchResultDone,
            pureldap.LDAPBindResponse,
            ))

However, this doesn't work, because the send_multiResponse() method of
LDAPClient isn't expecting the handler to return a deferred, even though
if I do return a deferred the reactor does handle it properly, chaining
the deferreds and their callbacks.

The problem is that in ldapclient.py, line 171, we have:

                # Return true to mark request as fully handled
                if handler(msg.value, *args, **kwargs):
                    del self.onwire[msg.id]

When handler() returns a deferred object, after the reactor processes
the chain the value is a Deferred object, not True or False, even though
the value of the deferred object may be True or False.  Hence the del
self.onwire[msg.id] always executes, which when dealing with search
result entries is a problem as they all share the same id.  I made a
quick hack to fix this:
-----------------------------------------------------------
--- /tmp/ldapclient.py  2008-05-03 18:53:26.000000000 -0600
+++ ldaptor/protocols/ldap/ldapclient.py        2008-05-03
18:58:07.000000000 -0600
@@ -168,7 +168,14 @@
                 assert args is not None
                 assert kwargs is not None
                 # Return true to mark request as fully handled
-                if handler(msg.value, *args, **kwargs):
+                result = handler(msg.value, *args, **kwargs)
+
+                try:
+                    result = result.result
+                except AttributeError:
+                    pass
+
+               if result:
                     del self.onwire[msg.id]

     ##Bind
----------------------------------------------------------

Is this an acceptable way to do this?



From exarkun at divmod.com  Sat May  3 21:28:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 May 2008 21:28:38 -0400
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
	dealing with chained deferreds, patch
In-Reply-To: <481D0B61.60906@gmail.com>
Message-ID: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>

On Sat, 03 May 2008 19:03:29 -0600, Michael Torrie <torriem at gmail.com> wrote:
>This message is probably for Tv.
>
>I have a situation where the callback to a
>LDAPClient.send_multiResponse() call needs to do a bunch of work that I
>want to split up over several functions, using deferred chaining.  What
>I want to do is something like this (this in conjunction with an LDAP
>proxy server I am writing using Twisted and ldaptor):
>
>d = self.client.send_multiResponse(request, got_response)
>
>then later:
>
>def got_response(response):
>
>    # get a list of other things to do with the response
>    d = do_stuff_with_response(response)
>    d.addCallback(finish)
>
>    return d
>
>
>def finish(response):
>    # we're done
>
>    return isinstance(response, (
>            pureldap.LDAPSearchResultDone,
>            pureldap.LDAPBindResponse,
>            ))
>
>However, this doesn't work, because the send_multiResponse() method of
>LDAPClient isn't expecting the handler to return a deferred, even though
>if I do return a deferred the reactor does handle it properly, chaining
>the deferreds and their callbacks.

You don't need to return the Deferred in order for the code and event
sources associated with it to cause it to eventually fire.  Returning
it doesn't do anything more than make it available to the caller.  It
seems this is what you actually want though, so this is just a change
of perspective not a contradiction of your conclusion.

>
>The problem is that in ldapclient.py, line 171, we have:
>
>                # Return true to mark request as fully handled
>                if handler(msg.value, *args, **kwargs):
>                    del self.onwire[msg.id]
>
>When handler() returns a deferred object, after the reactor processes
>the chain the value is a Deferred object, not True or False, even though
>the value of the deferred object may be True or False.  Hence the del
>self.onwire[msg.id] always executes, which when dealing with search
>result entries is a problem as they all share the same id.  I made a
>quick hack to fix this:

> [snip]
>+                result = handler(msg.value, *args, **kwargs)
>+
>+                try:
>+                    result = result.result
>+                except AttributeError:
>+                    pass
>+
>+               if result:
>                     del self.onwire[msg.id]
>
>     ##Bind
>----------------------------------------------------------
>
>Is this an acceptable way to do this?
>

Not really.  You need to take the code that depends on the result of
the Deferred and put it into a callback which gets attached to that
Deferred.  Something more like this:

    def cbHandler(result):
        if result:
            del self.onwire[msg.id]

    result = handler(msg.value, *args, **kwargs)
    if isinstance(result, Deferred):
        result.addCallback(cbHandler)
    else:
        cbHandler(result)

Or, written using the helper function twisted.internet.defer.maybeDeferred,

    def cbHandler(result):
        if result:
            del self.onwire[msg.id]
    result = maybeDeferred(handler, msg.value, *args, **kwargs)
    result.addCallback(cbHandler)

This correctly handles both Deferred and non-Deferred results.  I don't
have any idea if this change to ldaptor is correct with respect to LDAP
semantics/requirements or the particular implementation details of the
code in question here, though.

Jean-Paul



From torriem at gmail.com  Sat May  3 22:22:25 2008
From: torriem at gmail.com (Michael Torrie)
Date: Sat, 03 May 2008 20:22:25 -0600
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
	dealing with chained deferreds, patch
In-Reply-To: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>
References: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>
Message-ID: <481D1DE1.1000607@gmail.com>

Jean-Paul Calderone wrote:
>> However, this doesn't work, because the send_multiResponse() method of
>> LDAPClient isn't expecting the handler to return a deferred, even though
>> if I do return a deferred the reactor does handle it properly, chaining
>> the deferreds and their callbacks.
> 
> You don't need to return the Deferred in order for the code and event
> sources associated with it to cause it to eventually fire.  Returning
> it doesn't do anything more than make it available to the caller.  It
> seems this is what you actually want though, so this is just a change
> of perspective not a contradiction of your conclusion.

This stuff is getting kind of confusing for me, I must confess.
Especially because it's hard to explain exactly what I'm doing without
posting a very large code example (with lots of supporting modules).  I
may work on a minimal example, based on the proxy.py that ldaptor ships
with to demonstrate this.

So yes, the handler is just a callback attached to a deferred that has
already fired -- the deferred itself is irrelevant.  This deferred was
originally created by the LDAPClient.send_multiResponse() method, and it
fires when a response to the request comes in (there can be more than
one response, if the request was a search).  This function is a bit
confusing because it creates a deferred object that it returns to me,
but also takes a handler function as an argument.  I've tried to add my
additional processing routines to this particular deferred as a
callback, but that does not work.  I think if I could get this to work,
that might be the better way to go.

In the meantime, in the handler I pass to send_multiResponse(), I need
to generate a new deferred chain that has parts of it deferred to other
threads, etc.  Returning this new deferred from my handler seems ideal,
as the reactor just does the right thing.

> Or, written using the helper function twisted.internet.defer.maybeDeferred,
> 
>     def cbHandler(result):
>         if result:
>             del self.onwire[msg.id]
>     result = maybeDeferred(handler, msg.value, *args, **kwargs)
>     result.addCallback(cbHandler)
> 
> This correctly handles both Deferred and non-Deferred results.  I don't
> have any idea if this change to ldaptor is correct with respect to LDAP
> semantics/requirements or the particular implementation details of the
> code in question here, though.

Yes, this would seem the correct thing to do!  I'll have to work out a
patch that does this and see where we're at.



From exarkun at twistedmatrix.com  Sun May  4 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 May 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1209873907.58.1008862784@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080504/b86a9e43/attachment.htm 

From adelagon at gmail.com  Mon May  5 03:32:54 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 15:32:54 +0800
Subject: [Twisted-Python] DNSQueryRefusedError question
Message-ID: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>

Can anyone explain what is causing this exception?

twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
instance at 0xb78470cc>

I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
getting this failure during smtp.sendmail(). Thank you in advance. :)

---
Alvin Delagon

-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080505/bad69029/attachment.htm 

From adelagon at gmail.com  Mon May  5 04:03:40 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 16:03:40 +0800
Subject: [Twisted-Python] Re: DNSQueryRefusedError question
In-Reply-To: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
References: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
Message-ID: <7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>

Let me rephrase, the exception comes from a code that looks like this:

calc = twisted.relaymanager.MXCalculator()
calc.getMX("gmail.com").addCallback(sendEmail, mail)

def sendEmail(mail):
.
.
.

It seems that the failure comes from twited.relaymanager.MXCalculator.

On Mon, May 5, 2008 at 3:32 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Can anyone explain what is causing this exception?
>
> twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
> instance at 0xb78470cc>
>
> I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
> getting this failure during smtp.sendmail(). Thank you in advance. :)
>
> ---
> Alvin Delagon
>
> --
> http://www.alvinatorsplayground.blogspot.com/




-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080505/7f95a1e7/attachment.htm 

From adelagon at gmail.com  Mon May  5 05:06:39 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 17:06:39 +0800
Subject: [Twisted-Python] Re: DNSQueryRefusedError question
In-Reply-To: <7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>
References: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
	<7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>
Message-ID: <7a01f6c00805050206u4fe31d80w4e69558304cc4e40@mail.gmail.com>

Please disregard the question. We just found out that we have problematic
DNS servers on our /etc/resolv.conf. Thanks. :)

---
Alvin Delagon

On Mon, May 5, 2008 at 4:03 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Let me rephrase, the exception comes from a code that looks like this:
>
> calc = twisted.relaymanager.MXCalculator()
> calc.getMX("gmail.com").addCallback(sendEmail, mail)
>
> def sendEmail(mail):
> .
> .
> .
>
> It seems that the failure comes from twited.relaymanager.MXCalculator.
>
>
> On Mon, May 5, 2008 at 3:32 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>
>> Can anyone explain what is causing this exception?
>>
>> twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
>> instance at 0xb78470cc>
>>
>> I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
>> getting this failure during smtp.sendmail(). Thank you in advance. :)
>>
>> ---
>> Alvin Delagon
>>
>> --
>> http://www.alvinatorsplayground.blogspot.com/
>
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080505/0a5f8982/attachment.htm 

From mailing_lists at evotex.ch  Mon May  5 11:20:26 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 05 May 2008 17:20:26 +0200
Subject: [Twisted-Python] How to get port when using application
Message-ID: <481F25BA.4090401@evotex.ch>

Hello, I am going to use application and I have a question,
I have a server that needs to get a free port, before I would do this :

    ...

    port = reactor.listenTCP(0, f).getHost().port

    ...

and now with application all I could find to do the equivilent was :

    ...

    t = internet.TCPServer(0, tcpFactory)
    port = p._getPort()._realPortNumber
    ...
    
the problem is that this isn't very clean as I'm accessing protected 
members.

Is there a better way of doing this?

Thank you,
Gabriel



From andrewfr_ice at yahoo.com  Mon May  5 11:46:16 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 5 May 2008 08:46:16 -0700 (PDT)
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <E1JsK9b-00028i-TO@cube.twistedmatrix.com>
Message-ID: <959698.62239.qm@web34201.mail.mud.yahoo.com>

Hi Zookoo and Cameron:

On May 2, 2008, at 9:54 AM, Andrew Francis wrote:

>Does this mean that the the method raised an
exception >but the twisted logging infrastructure
isn't telling >you what the exception was?

>I've done this successfully:

>http://allmydata.org/trac/tahoe/browser/src/allmydata/node.py?

>rev=2360#L201

Thanks for the pointer. A part of my problem was that
I forgot to import datetime. Anyhow, I re-read the
documentation and solved my problem by doing:

log.FileLogObserver.timeFormat = '%Y/%m/%d %H:%M:%d"

However as Cameron suggested, I will upgrade to
Twisted 8 when it is convenient. 

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From terry at jon.es  Mon May  5 13:10:39 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 5 May 2008 19:10:39 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and avoiding
	Unhandled error in Deferred messages
Message-ID: <18463.16271.516266.379803@jon.es>

If I pass a list of deferreds to DeferredList and want to add a callback to
the DeferredList to look at whatever errors have occurred in the underlying
deferreds, should I do something like this:

  deferreds = []
  for x in whatever:
    deferreds.append(funcReturningDeferred(x))

  dl = DeferredList(deferreds)
  dl.addCallback(errorCheckingFunc)

  for d in deferreds:
    d.addErrback(lambda _: pass)


This ensures that errorCheckingFunc gets defer.FAILURE for those deferreds
that finished up in their errback chain. Adding the lambda _: pass errback
to each deferred in deferreds after it has been passed to DeferredList
makes sure the errback chain doesn't later reach its end with an unhandled
error.

It that the right/best/approved way to handle needing to deal with errors
in the callback of a DeferredList and not trigger the "Unhandled error in
Deferred" message?

Terry



From mithrandi at mithrandi.net  Mon May  5 13:58:14 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 May 2008 19:58:14 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and
	avoiding Unhandled error in Deferred messages
In-Reply-To: <18463.16271.516266.379803@jon.es>
References: <18463.16271.516266.379803@jon.es>
Message-ID: <20080505175814.GA16090@mithrandi.net>

* Terry Jones <terry at jon.es> [2008-05-05 19:10:39 +0200]:

> If I pass a list of deferreds to DeferredList and want to add a callback to
> the DeferredList to look at whatever errors have occurred in the underlying
> deferreds, should I do something like this:

You might want to look at the gatherResults() utility function which
returns a deferred that either fires with a list of the results, or
errbacks with the first error to occur.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080505/0ac1302c/attachment.pgp 

From andrewfr_ice at yahoo.com  Mon May  5 14:11:48 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 5 May 2008 11:11:48 -0700 (PDT)
Subject: [Twisted-Python] EuroPython 2008
Message-ID: <542236.59253.qm@web34206.mail.mud.yahoo.com>

Hi Folks:

I noticed the deadline for EuroPython is May 22nd,
2008. I have been designing a new talk on Stackless
and Twisted and I am thinking about submitting a talk
proposal.

I am curious if anyone is planning to give a talk?

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From terry at jon.es  Mon May  5 16:02:33 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 5 May 2008 22:02:33 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and
	avoiding Unhandled error in Deferred messages
In-Reply-To: Your message at 19:58:14 on Monday, 5 May 2008
References: <18463.16271.516266.379803@jon.es>
	<20080505175814.GA16090@mithrandi.net>
Message-ID: <18463.26585.137196.424472@jon.es>

Hi Tristan

> You might want to look at the gatherResults() utility function which
> returns a deferred that either fires with a list of the results, or
> errbacks with the first error to occur.

Thanks. I can see how I'd write this, given Jean-Paul's reply.

Terry



From lxx1234 at gmail.com  Tue May  6 01:41:44 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Tue, 6 May 2008 13:41:44 +0800
Subject: [Twisted-Python]The problem afer reactor stoped....
Message-ID: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>

Hi,all
   I want to write a program that can send some e-mails automaticlly,i
use the code like this:

def sendmail(authenticationUsername, authenticationSecret,fromAddress,
toAddress,messageFile,smtpHost, smtpPort=25):
    resultDeferred = Deferred()
    senderFactory =
ESMTPSenderFactory(authenticationUsername,authenticationSecret,fromAddress,toAddress,messageFile,resultDeferred,requireTransportSecurity=False)
    reactor.connectTCP(smtpHost, smtpPort, senderFactory)
    return resultDeferred

def sendComplete(result):
    print "Message sent."
    reactor.stop()

class EmailUtil:
    def __init__(self,popserver,smptserver,username,password):
        self.popserver=popserver
        self.smtpserver=smptserver
        self.username=username
        self.password=password

    def goSend(self,fromaddr, toaddr, subject, body, filenames):
        message = buildMessage(fromaddr, toaddr, subject, body, filenames)
        messageData = message.as_string(unixfrom=False)
        tempfile=open('temp.mai','wb')
        tempfile.write(messageData)
        tempfile.close()
        print 'Sending.....'
        result =
sendmail(self.username,self.password,fromaddr,toaddr,file('temp.mai'),self.smtpserver)
        result.addCallbacks(sendComplete,handleError)
        reactor.run()

if __name__=='__main__':
    f=EmailUtil('','smtp.xxx.com','xxxx','1234')
    filenames=['test2.docx']
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)

I try to send the same mail,but after the first mail was sended,the
program deadlock,and i use some tool konws after the first mail
sended,no packets was send to the outside world.I guess maybe the
problem related with the reactor run and stop,but i am sure,any one
can tell me what's problem is?Thanks



From aleuser at inwind.it  Tue May  6 03:09:03 2008
From: aleuser at inwind.it (Alessandro)
Date: Tue, 06 May 2008 09:09:03 +0200
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
Message-ID: <4820040F.6020406@inwind.it>

??? wrote:
> Hi,all
>   
Hi

>    I want to write a program that can send some e-mails automaticlly,i
> use the code like this:
>   
reactor.stop() and reactor.run() have to be called only one time!

Try the following:

def sendmail(authenticationUsername, authenticationSecret,fromAddress,
...

def sendComplete(result):
print "Message sent."
# reactor.stop() comment this line out!

class EmailUtil:
def __init__(self,popserver,smptserver,username,password):
...

def goSend(self,fromaddr, toaddr, subject, body, filenames):
...
return result.addCallbacks(sendComplete,handleError) # get back the result
# reactor.run() comment this line out

if __name__=='__main__':
twisted.internet.defer import DeferredList

f=EmailUtil('','smtp.xxx.com','xxxx','1234')
filenames=['test2.docx']
dd1 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
dd2 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
dd3 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
d4ll =DeferredList([dd1,dd2,dd3]) #errback ?

def stop(*arg): reactor.stop()

d4ll.addCallback(stop)
reactor.run()


Note: not tested

You can test EmailUtil alone without twisted, removing his internal 
addCallbacks (you can attach the callback in the main)

Alessandro




From lxx1234 at gmail.com  Tue May  6 04:05:24 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Tue, 6 May 2008 16:05:24 +0800
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <4820040F.6020406@inwind.it>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
	<4820040F.6020406@inwind.it>
Message-ID: <33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>

Very appreciate your help,It can worked,but i want know if it not
possible to run then stop then run reactor again?

2008/5/6 Alessandro <aleuser at inwind.it>:
> ??? wrote:
> > Hi,all
> >
> >
> Hi
>
>
> >   I want to write a program that can send some e-mails automaticlly,i
> > use the code like this:
> >
> >
> reactor.stop() and reactor.run() have to be called only one time!
>
> Try the following:
>
>
> def sendmail(authenticationUsername, authenticationSecret,fromAddress,
> ...
>
>
> def sendComplete(result):
> print "Message sent."
> # reactor.stop() comment this line out!
>
>
> class EmailUtil:
> def __init__(self,popserver,smptserver,username,password):
> ...
>
>
> def goSend(self,fromaddr, toaddr, subject, body, filenames):
> ...
> return result.addCallbacks(sendComplete,handleError) # get back the result
> # reactor.run() comment this line out
>
> if __name__=='__main__':
> twisted.internet.defer import DeferredList
>
>
> f=EmailUtil('','smtp.xxx.com','xxxx','1234')
> filenames=['test2.docx']
> dd1 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> dd2 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> dd3 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> d4ll =DeferredList([dd1,dd2,dd3]) #errback ?
>
> def stop(*arg): reactor.stop()
>
> d4ll.addCallback(stop)
> reactor.run()
>
>
> Note: not tested
>
> You can test EmailUtil alone without twisted, removing his internal
> addCallbacks (you can attach the callback in the main)
>
> Alessandro
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

From screwtape at froup.com  Tue May  6 05:15:13 2008
From: screwtape at froup.com (Tim Allen)
Date: Tue, 6 May 2008 19:15:13 +1000
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
	<4820040F.6020406@inwind.it>
	<33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>
Message-ID: <20080506091513.GI12496@thristian.org>

On Tue, May 06, 2008 at 04:05:24PM +0800, ??? wrote:
> Very appreciate your help,It can worked,but i want know if it not
> possible to run then stop then run reactor again?

It is not possible to run, then stop, then run the reactor again.



From curtferguson at cfl.rr.com  Tue May  6 09:56:22 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Tue, 06 May 2008 09:56:22 -0400
Subject: [Twisted-Python] I'm stuck
Message-ID: <48206386.8030302@cfl.rr.com>

Ok, first, I'm a true newbie, I've been playing with twisted, and python
for that matter, for about 3 days.  I've been trying to get this script
to work, and I *know* I've got to be doing something simple wrong.  All
it is, is a slap-together of various examples available in the twisted
documentation to see if I can learn how this works.  Here's the script

All it is supposed to do at this point is accept a normal telnet
connection on one port and authenticate it, and an ssh on another, and
authenticate, I'm attempting to write an interpreter to connect both
inputs to, but right now I'm stuck getting the connections to hold.

Any assistance would be most welcome.

from zope.interface import implements

from twisted.internet import protocol
from twisted.application import service, strports
from twisted.conch.ssh import session
from twisted.conch import interfaces as iconch
from twisted.cred import portal, checkers
from twisted.python import usage

from twisted.conch.insults import insults
from twisted.conch import recvline, manhole_ssh, telnet

class parseInput(recvline.HistoricRecvLine):

    def connectionMade(self):
        print("Got Connection to parseInput")
        recvline.HistoricRecvLine.connectionMade(self)
        print("Came back from the undercall")
        self.interpreter=commandInterpreter

    def handle_QUIT(self):
        self.terminal.loseConnection()

    def lineReceived(self, line):
        print("Input, " + line)
        self.terminal.write("I got, " + line)

class makeTelnetProtocol:
    def __init__(self, portal):
        self.portal = portal

    def __call__(self):
        auth = telnet.AuthenticatingTelnetProtocol
        args = (self.portal,)
        return telnet.TelnetTransport(auth, *args)

class chainedProtocolFactory:
    def __init__(self, namespace):
        self.namespace = namespace

    def __call__(self):
        return insults.ServerProtocol(parseInput, self.namespace)

class _BaseTelnetRealm:
    implements(portal.IRealm)

    def __init__(self, proto, *a, **kw):
        self.protocolFactory = proto
        self.protocolArgs = a
        self.protocolKwArgs = kw

    def requestAvatar(self, avatarId, *interfaces):
        if telnet.ITelnetProtocol in interfaces:
            return (telnet.ITelnetProtocol,
                    self.protocolFactory(*self.protocolArgs,
**self.protocolKwArgs),
                    lambda: None)
        raise NotImplementedError()

class Options(usage.Options):
    optParameters = [
        ["telnetPort", "t", None, "strports description of the address
on which to listen for telnet connections"],
        ["sshPort", "s", None, "strports description of the address on
which to listen for ssh connections"]]

    def __init__(self):
        usage.Options.__init__(self)
        self.users = []
        self['namespace'] = None

    def opt_user(self, name):
        self.users.append(name)

    def postOptions(self):
        if self['telnetPort'] is None and self['sshPort'] is None:
            raise usage.UsageError("At least one of --telnetPort and
--sshPort must be specified")

def makeService(options):
    """Create a server service.

    @type options: C{dict}
    @param options: A mapping describing the configuration of
    the desired service.  Recognized key/value pairs are::

        "telnetPort": strports description of the address on which
                      to listen for telnet connections.  If None,
                      no telnet service will be started.

        "sshPort": strports description of the address on which to
                   listen for ssh connections.  If None, no ssh
                   service will be started.

        "namespace": dictionary containing desired initial locals
                     for manhole connections.  If None, an empty
                     dictionary will be used.

    @rtype: L{twisted.application.service.IService}
    @return: A server service.
    """

    svc = service.MultiService()

    namespace = options['namespace']
    if namespace is None:
        namespace = {}

    checker = checkers.InMemoryUsernamePasswordDatabaseDontUse()
    checker.addUser("guest", "testing")

    if options['telnetPort']:
        telnetRealm = _BaseTelnetRealm(telnet.TelnetBootstrapProtocol,
                                   insults.ServerProtocol,
                                   parseInput,
                                   namespace)

        telnetPortal = portal.Portal(telnetRealm, [checker])

        telnetFactory = protocol.ServerFactory()
        telnetFactory.protocol = makeTelnetProtocol(telnetPortal)
        telnetService = strports.service(options['telnetPort'],
                                         telnetFactory)
        telnetService.setServiceParent(svc)

    if options['sshPort']:
        sshRealm = manhole_ssh.TerminalRealm()
        sshRealm.chainedProtocolFactory = chainedProtocolFactory(namespace)

        sshPortal = portal.Portal(sshRealm, [checker])
        sshFactory = manhole_ssh.ConchFactory(sshPortal)
        sshService = strports.service(options['sshPort'],
                                      sshFactory)
        sshService.setServiceParent(svc)

    return svc

application = service.Application("Learn Twisted")
makeService({"telnetPort": "tcp:9900",
             "sshPort": "tcp:9901",
             "namespace": {"foo": "bar"}}).setServiceParent(application)




From exarkun at divmod.com  Tue May  6 10:17:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 May 2008 10:17:32 -0400
Subject: [Twisted-Python] I'm stuck
In-Reply-To: <48206386.8030302@cfl.rr.com>
Message-ID: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>

On Tue, 06 May 2008 09:56:22 -0400, Curt <curtferguson at cfl.rr.com> wrote:
>Ok, first, I'm a true newbie, I've been playing with twisted, and python
>for that matter, for about 3 days.  I've been trying to get this script
>to work, and I *know* I've got to be doing something simple wrong.  All
>it is, is a slap-together of various examples available in the twisted
>documentation to see if I can learn how this works.  Here's the script
>
>All it is supposed to do at this point is accept a normal telnet
>connection on one port and authenticate it, and an ssh on another, and
>authenticate, I'm attempting to write an interpreter to connect both
>inputs to, but right now I'm stuck getting the connections to hold.
>
>Any assistance would be most welcome.
>
> [snip]
>
>class parseInput(recvline.HistoricRecvLine):
>
>    def connectionMade(self):
>        print("Got Connection to parseInput")
>        recvline.HistoricRecvLine.connectionMade(self)
>        print("Came back from the undercall")
>        self.interpreter=commandInterpreter
>
>    def handle_QUIT(self):
>        self.terminal.loseConnection()
>
>    def lineReceived(self, line):
>        print("Input, " + line)
>        self.terminal.write("I got, " + line)
>
> [snip]
>
>    if options['telnetPort']:
>        telnetRealm = _BaseTelnetRealm(telnet.TelnetBootstrapProtocol,
>                                   insults.ServerProtocol,
>                                   parseInput,
>                                   namespace)
>
> [snip]

The first problem I notice is that where you're creating the realm,
you're indicating that `parseInput? should be instantiated with one
positional argument, `namespace?.  However, `parseInput? takes zero
arguments (beyond self) to its initializer.  This means a TypeError
will be raised when `insults.ServerProtocol? tries to instantiate
`parseInput?.

You might find the --debug option to `twistd? helpful in the short
term.  It will drop you into pdb when an unhandled exception happens
so that you can see where the problem occurs, what it is, and look
at the state of the process.

Longer term, unit tests are a great way to isolate failures and get
immediate feedback on whether or not a piece of code or a change to
some code works or not.

Good luck,

Jean-Paul



From wthie at thiengineering.ch  Tue May  6 10:43:46 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 06 May 2008 16:43:46 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206386.8030302@cfl.rr.com>
References: <48206386.8030302@cfl.rr.com>
Message-ID: <48206EA2.5080203@thiengineering.ch>

Hi all

Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
every twenty minutes with up to 200 athena/LivePages connected:

     Traceback (most recent call last):
     --- <exception caught here> ---
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/selectreactor.py", 
line 148, in _doReadOrWrite
         why = getattr(selectable, method)()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
362, in doRead
         return self.protocol.dataReceived(data)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/protocols/basic.py", 
line 233, in dataReceived
         why = self.lineReceived(line)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 1069, 
in lineReceived
         self.allContentReceived()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 1110, 
in allContentReceived
         req.requestReceived(command, path, version)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 603, 
in requestReceived
         self.host = self.channel.transport.getHost()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
672, in getHost
         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
('INET',)))
       File "<string>", line 1, in getsockname

     socket.error: (22, 'Invalid argument')

Changing reactors does not help, the error is very unspecific. Before I 
start changing the source sprinkling it with log statements is there 
anybody out there who has a cure or knows an explanation.

Thank you so much,

Werner Thie



From curtferguson at cfl.rr.com  Tue May  6 12:30:47 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Tue, 06 May 2008 12:30:47 -0400
Subject: [Twisted-Python] I'm stuck
In-Reply-To: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>
References: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>
Message-ID: <482087B7.2080609@cfl.rr.com>

The first problem I notice is that where you're creating the realm,
> you're indicating that `parseInput? should be instantiated with one
> positional argument, `namespace?.  However, `parseInput? takes zero
> arguments (beyond self) to its initializer.  This means a TypeError
> will be raised when `insults.ServerProtocol? tries to instantiate
> `parseInput?.
>
> You might find the --debug option to `twistd? helpful in the short
> term.  It will drop you into pdb when an unhandled exception happens
> so that you can see where the problem occurs, what it is, and look
> at the state of the process.
>
> Longer term, unit tests are a great way to isolate failures and get
> immediate feedback on whether or not a piece of code or a change to
> some code works or not.
>
> Good luck,
>
> Jean-Paul
>
Thank you very much.  That fixed everything.  I knew it had to be
something simple, couldn't see the forest for the trees.  Staring at it
too long I guess.

I need to learn how to do unit tests as well.  Lots of reading still to do.





From warner at lothar.com  Tue May  6 15:24:20 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 12:24:20 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
Message-ID: <20080506122420.4086a4ba@fluxx.allmydata.com>

I've just finished releasing Foolscap-0.2.6, the next-generation remote
object protocol, intended as the successor to Perspective Broker.

This release contains more logging improvements, including the long-awaited
"incident-based logging" system (which dumps "black box" records of recent
events when something bad happens), and several bugfixes. The full release
notes are attached below.

Tarballs can be obtained from foolscap.lothar.com and from PyPI. All releases
are signed by my GPG public key: 0x1514A7BD .

 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.6.tar.gz#md5=2cfb1e033cff29e13df1beb8befe7c08
 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.6.zip#md5=1b2f6038d3016b4fa5c71e6d69f1bac1


For documentation, bugs, and patches, please visit
http://foolscap.lothar.com/trac .

share and enjoy,
 -Brian


* Release 0.2.6 (06 May 2008)

** Compatibility

All releases between 0.1.3 and 0.2.6 (inclusive) are fully wire-compatible.

The saved logfiles produced (by e.g. 'flogtool tail --save-to' and the
log-gatherer) in 0.2.6 and beyond are not readable by tools (e.g. 'flogtool
dump' and 'flogtool filter') from 0.2.5 and earlier.

FURLs which contain "extensions" (described below) will not be tolerated by
foolscap 0.2.5 or earlier. If, at some point in the future, we add such
extensions to published FURLs, then such an application will require
foolscap-0.2.6 or later to interpret those FURLs.

** Logging Changes

*** "Incident" Logging

This release finally implements the "strangeness-triggered logging" espoused
in doc/logging.xhtml . By giving the foolscap logging code a directory to
work with, the logging system will automatically save a compressed pickled
logfile containing the messages that lead up to sufficiently-severe log
event. The docs explain how to control what "sufficiently-severe" means.
These events are retrievable through the logport, although no tools have been
written yet to actually extract them. They are also retrievable by using
'flogtool dump' directly on the incident files.

*** 'flogtool as a subcommand

The implementation of the 'flogtool' executable has been rearranged to make
it possible to add a 'flogtool' subcommand to some other executable.

*** 'flogtool filter' now has --above LEVEL and --from TUBID options
*** 'flogtool dump' has --rx-time option, also shows failure tracebacks
*** gatherer: don't add erroneous UTC-implying "Z" suffix to filename timestamps
*** 'flogtool tail': don't add spurious "0" to timestamps

** constraints no longer reject ('reference',) sequences

The foolscap/banana serialization protocol responds to sending two separate
copies of the same object in the same callRemote message by emitting one
serialized object sequence and one 'reference' sequence: this is the standard
way by which cycles are broken in the serialized data. Unfortunately, the
wire-level constraint checkers in 0.2.5 and earlier would reject reference
sequences with a Violation exception: if they were expecting a tuple, they
would reject anything else, even a reference sequence that pointed at a
tuple.

Worse yet, python's normal constant-object folding code can produce shared
references where you might not expect. In the following example, the two
tuples are identical objects (and result in a 'reference' sequence on the
wire), despite the programmer having typed them separately:

 rref.callRemote("haveTwoTuples", (0,1), (0,1) )

Foolscap-0.2.6 now allows reference sequence in all wire-level constraint
checks, to avoid this false-negative Violation. The post-deserialization
check will still enforce the constraint properly. It just does it late enough
to be able to tell what the reference points to.

** Twisted/pyopenssl compatibility

*** compatible with Twisted-8.0.x

Some unit test failures under Twisted-8.0.x (the most recent release) were
fixed: tests now pass against Twisted-8.0.x, and a buildbot is used to make
sure compatibility is maintained in the future.

*** incompatible with pyOpenSSL-0.7

An incompatibility has been discovered with the most recent version of
PyOpenSSL. pyopenssl 0.6 works correctly, but pyopenssl 0.7 causes modern
versions of Twisted (both 2.5.x and 8.0.x) to follow a code path that breaks
the Foolscap unit tests. This may or may not cause a problem in actual
application use (the symptom is that the non-winning parallel connections are
not disconnected properly, and several negotiation timers are left running).
Until a fix is developed for either Twisted or PyOpenSSL, the recommended
workaround is to downgrade to PyOpenSSL-0.6 . Twisted bug #3218 and Foolscap
bug #62 exist to track this problem.

** setup.py is more setuptools-friendly

The foolscap version string is located with a regular expression rather than
an import, allowing setuptools to install Foolscap as a build-dependency of
some other project without having Twisted available first. If setuptools is
available, we also declare a dependency upon Twisted (at least 2.4.0), to
give more information to the setuptools dependency-auto-installer.

** Unauthenticated FURLs can now contain multiple connection hints

Previously they were limited to a single one

** FURLs can now contain extensions, providing forwards-compatibility

The parsing of FURLs has been refined to tolerate (and ignore) certain kinds
of extensions. The "tubid" section will be able to have additional
identifiers (perhaps stronger hashes for the public key, or an
encryption-ready EC-DSA public key). In addition, the "connection hints"
section will be able to contain alternate protocol specifiers (for TCP over
IPv6, or a less connection-oriented UDP transport).

By ignoring such extensions, foolscap-0.2.6 will tolerate FURLs produced
(with extensions) by some future version of foolscap. This marks the
beginning of a "transition period": when such extensions are introduced,
0.2.6 will be the oldest version still capable of interoperating with the
extension-using new version.



From phil at bubblehouse.org  Tue May  6 15:35:52 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 6 May 2008 15:35:52 -0400
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506122420.4086a4ba@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
Message-ID: <AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>

On May 6, 2008, at 3:24 PM, Brian Warner wrote:
> I've just finished releasing Foolscap-0.2.6, the next-generation  
> remote
> object protocol, intended as the successor to Perspective Broker.

With all respect (as I am very interested and excited by the work  
being done with Foolscap), I have to ask if it is still accurate to  
market Foolscap as the 'successor' or 'replacement' for PB.

Considering the confusion around a similar situation (e.g., web2 as a  
rewrite of web1), it seems like it would be best to avoid referring to  
something as the replacement for Twisted component until that's  
actually the case...

Just my 2/100ths...

-phil



From nathan.stocks at gmail.com  Tue May  6 16:27:20 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 6 May 2008 14:27:20 -0600
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506122420.4086a4ba@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
Message-ID: <96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>

On Tue, May 6, 2008 at 1:24 PM, Brian Warner <warner at lothar.com> wrote:
> I've just finished releasing Foolscap-0.2.6, the next-generation remote
>  object protocol, intended as the successor to Perspective Broker.

What's the current stability of foolscap?  Is it deemed stable enough
for production, or is it more beta, alpha, etc.?

~ Nathan



From matthieu.brucher at gmail.com  Tue May  6 17:38:13 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Tue, 6 May 2008 23:38:13 +0200
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
Message-ID: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>

Hi,

I'm currently trying to implement the JXTA standard (http://www.jxta.org) in
Python using twisted (because it seems to be the right choice). I've
implemented the basic parts that are not network related, that is, not much
;)

To make a correct JXTA peer (well designed to be modular and to be able to
add services), I have cascade several services (I think they should be
services, but I can be wrong, I'm a real beginner with Twisted). For
instance:
network -> TCP transport layer service -> endpoint service -> some other
high level services -> endpoint service -> TCP transport layer (may not be
the same as the first one).

Is there a sample somewhere that does something like this ? Each time an
event is sent to a listener (the TCP transport layer, the endpoint, ...)
that acts upon it. I've tried to find some samples over the Internet, but
perhaps someone has a pointer to help me ?

Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080506/db3a9a6a/attachment.htm 

From glyph at divmod.com  Tue May  6 18:00:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 06 May 2008 22:00:17 -0000
Subject: [Twisted-Python] socket error 22
Message-ID: <20080506220017.25821.561534931.divmod.xquotient.7676@joule.divmod.com>


On 02:43 pm, wthie at thiengineering.ch wrote:
>Hi all

Hi Werner!  Thanks for reporting this issue.  It's always nice to hear 
about problems under high load.  I hope we can get it fixed.
>Running on twisted 2.5 OpenBSD I see the following traceback in the 
>logs every twenty minutes with up to 200 athena/LivePages connected:

>         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
>('INET',)))
>       File "<string>", line 1, in getsockname
>
>     socket.error: (22, 'Invalid argument')

>Changing reactors does not help, the error is very unspecific. Before I 
>start changing the source sprinkling it with log statements is there 
>anybody out there who has a cure or knows an explanation.

We don't have an OpenBSD buildbot, so I don't know if this is a 
platform-specific issue.  Can you reproduce it on Linux or FreeBSD, for 
which there are officially-supported buildbots on 
http://buildbot.twistedmatrix.com/supported?branch=trunk ?

One possible issue here is that the POSIX standard says that getsockname 
may fail with EINVAL if the socket has been shut down:

http://www.opengroup.org/onlinepubs/009695399/functions/getsockname.html

but Linux says that it may fail with EINVAL only if the namelen 
parameter is invalid:

    http://linux.die.net/man/2/getsockname

However, it seems wrong that openbsd would shut down the socket without 
giving some other notification (the usual stuff that Twisted uses to get 
notified of a socket shutting down; presence in the write-selected set, 
an error in send() or recv()); i.e. you should see connectionLost called 
before this error can occur.

If you really want to run Twisted on OpenBSD though, the first step 
should be getting a buildbot going and submitting any patches for failed 
tests.  Otherwise any suggestions from core developers are just going to 
be guesses...



From glyph at divmod.com  Tue May  6 18:09:24 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 06 May 2008 22:09:24 -0000
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
In-Reply-To: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
References: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
Message-ID: <20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>


On 09:38 pm, matthieu.brucher at gmail.com wrote:
>I'm currently trying to implement the JXTA standard 
>(http://www.jxta.org) in
>Python using twisted (because it seems to be the right choice). I've
>implemented the basic parts that are not network related, that is, not 
>much
>;)

Of course it's the right choice.  Twisted is *awesome* ;-).
>network -> TCP transport layer service -> endpoint service -> some 
>other
>high level services -> endpoint service -> TCP transport layer

You use the word "service" a lot here and I'm not sure I understand it. 
There are, unfortunately, a dozen or so things you could mean by it.
>Is there a sample somewhere that does something like this ? Each time 
>an
>event is sent to a listener (the TCP transport layer, the endpoint, 
>...)
>that acts upon it. I've tried to find some samples over the Internet, 
>but
>perhaps someone has a pointer to help me ?

Assuming I do understand what all those "service" and "->"s mean in the 
above text, all you need to do is to

  1) have some objects
  2) keep references between them to other objects
  3) call methods on the relevant objects when the relevant things happen

Quite often, people somehow arrive at the incorrect conclusion that 
because twisted is event-driven, it has some magic "event" mechanism you 
have to use to get different pieces of code to talk to each other. 
Quite the opposite; the whole point of Twisted is to reduce event-driven 
programming to just regular Python method calls.

It may help, if you need to relay messages from one connected Protocol 
object to another, that Protocol objects have a reference to their 
factory, and you can easily keep a list of "all connections" on that 
factory.  This is actually two of our FAQs - have a look at this one and 
the next one:

    http://tinyurl.com/6hpfa7



From glenn at tarbox.org  Tue May  6 20:56:06 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Tue, 06 May 2008 17:56:06 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
Message-ID: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>

Scary thought... 

I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
broad audience WRT levels of Pythonism.. but with other talks having
titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
and of itself is a concern.

This is a good opportunity to decompose Twisted into its core
elements... kinda how it would be presented to mathematics folks.  If I
don't screw it up, it might even be useful to a broader audience trying
to figure out what Twisted is and the kinds of problems it addresses.

I welcome all pointers / content / suggestions.

-glenn





From warner at lothar.com  Tue May  6 22:27:59 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 19:27:59 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>
Message-ID: <20080506192759.60cf95d6@fluxx.allmydata.com>

> With all respect (as I am very interested and excited by the work  
> being done with Foolscap), I have to ask if it is still accurate to  
> market Foolscap as the 'successor' or 'replacement' for PB.

Fair enough. In the early days (um, 5 years ago? wow), we called this project
PB2. I moved it out of the Twisted SVN tree when the development policies
began to diverge too far (UQDS vs experimental+fast-moving code). I renamed
it to Foolscap at about the same time because of just the sort of uncertainty
that you mentioned, and because sticking with twisted.pb2 was an installation
headache (namespace packages, etc).

At PyCon, the sort of communal marketing position that we seemed to wind up
in (i.e. the set of statements that, once uttered, weren't immediately
corrected or contradicted by everyone else in the room) was that there's a
spectrum, from AMP to PB to Foolscap, in roughly increasing order of
featurefullness/size/complexity. While I see places where I'd use AMP instead
of the others, personally at this point I don't see any reasons to use PB
over Foolscap. But of course I feel more comfortable using Foolscap than
anyone else in the world :-).

I stopped paying attention to PB tickets years ago, and fortunately more
diligent people than me have stepped in and fixed them, so PB is in a better
shape than it was before. It still can't do everything that Foolscap can, and
is unlikely to, because, well, that's what Foolscap is for. But PB is not
going anywhere soon, so if you're intersted in building something that
doesn't require anything outside of the twisted tree, and you don't want
capability-oriented encryption, third-party references, eventual-sends,
adaptor-based third-party serialization, sealers/unsealers, or promises, then
PB is for you.

I still suspect that Foolscap may find its way into twisted/foolscap/ some
day, but I'm not pushing it, and I think it needs to be a lot more mature
first (i.e. I need to be content with seeing the rate of change drop
drastically, as befits anything under the UQDS discipline).

cheers,
 -Brian



From warner at lothar.com  Tue May  6 22:35:34 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 19:35:34 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
Message-ID: <20080506193534.1186f43d@fluxx.allmydata.com>

> What's the current stability of foolscap?  Is it deemed stable enough
> for production, or is it more beta, alpha, etc.?

That's an.. emotional question :-), because I've got two hats on.

The foolscap developer hat -wearing Brian wants the freedom to improve the
wire protocol, which probably means breaking compatibility. There are some
versioning hooks in place to make it possible to do this less-breakingly, but
it's a hassle, and if this Brian had his druthers he'd be changing and
breaking things left and right to make them better. This Brian would like to
tell you that it's still alpha.

But the Tahoe/AllMyData developer hat -wearing Brian (you know, the one who
gets a paycheck) is deploying a commercial system with thousands of users who
all use Foolscap-0.2.5 to connect to our servers. This provides a strong
incentive to maintain compatibility :). This Brian is forced to admit that
it's at least beta, and the fact that his company is using it in a production
system suggests that there's at least one group of developers who deems it
stable enough for production.

So Foolscap is likely to maintain wire compatibility for the near future, and
if I really need to add protocol features, I'm pretty sure that I'll go
through the extra work of doing it in a non-breaking way. Take from that what
you will :-).


hope that helps,
 -Brian



From matthieu.brucher at gmail.com  Wed May  7 01:46:39 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 7 May 2008 07:46:39 +0200
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
In-Reply-To: <20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>
References: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
	<20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>
Message-ID: <e76aa17f0805062246g5ab1dc04pce5029d70db8cb14@mail.gmail.com>

2008/5/7 <glyph at divmod.com>:

>
> On 09:38 pm, matthieu.brucher at gmail.com wrote:
>
>> I'm currently trying to implement the JXTA standard (http://www.jxta.org)
>> in
>> Python using twisted (because it seems to be the right choice). I've
>> implemented the basic parts that are not network related, that is, not
>> much
>> ;)
>>
>
> Of course it's the right choice.  Twisted is *awesome* ;-).
>
>> network -> TCP transport layer service -> endpoint service -> some other
>> high level services -> endpoint service -> TCP transport layer
>>
>
> You use the word "service" a lot here and I'm not sure I understand it.
> There are, unfortunately, a dozen or so things you could mean by it.


Yes, I know, it is not perfectly clear in my head as well, I have to play
with twisted and JXTA a little more to have a clear picture.


>
>  Is there a sample somewhere that does something like this ? Each time an
>> event is sent to a listener (the TCP transport layer, the endpoint, ...)
>> that acts upon it. I've tried to find some samples over the Internet, but
>> perhaps someone has a pointer to help me ?
>>
>
> Assuming I do understand what all those "service" and "->"s mean in the
> above text, all you need to do is to
>
>  1) have some objects
>  2) keep references between them to other objects
>  3) call methods on the relevant objects when the relevant things happen
>
> Quite often, people somehow arrive at the incorrect conclusion that because
> twisted is event-driven, it has some magic "event" mechanism you have to use
> to get different pieces of code to talk to each other. Quite the opposite;
> the whole point of Twisted is to reduce event-driven programming to just
> regular Python method calls.


That's what I thought reading the tutorial.


> It may help, if you need to relay messages from one connected Protocol
> object to another, that Protocol objects have a reference to their factory,
> and you can easily keep a list of "all connections" on that factory.  This
> is actually two of our FAQs - have a look at this one and the next one:
>
>   http://tinyurl.com/6hpfa7
>

Excallent ! Thanks a lot for this, it will help me a lot !

Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080507/c1137029/attachment.htm 

From eric.faurot at gmail.com  Wed May  7 04:00:34 2008
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 7 May 2008 10:00:34 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206EA2.5080203@thiengineering.ch>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
Message-ID: <e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>

On Tue, May 6, 2008 at 4:43 PM, Werner Thie <wthie at thiengineering.ch> wrote:
> Hi all
>
>  Running on twisted 2.5 OpenBSD I see the following traceback in the logs
> every twenty minutes with up to 200 athena/LivePages connected:

[snip]

If you have a lot of connections, you might hit the open file limit, which is
rather low by default on openbsd, especially for default login class.
I would expect the issue to show up differently though.

Try tweaking resource.getrlimit and see what happens when you lower
and increase the LIMIT_NOFILE.

Eric.



From wthie at thiengineering.ch  Wed May  7 09:23:23 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 07 May 2008 15:23:23 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
Message-ID: <4821AD4B.4010804@thiengineering.ch>

Thanks for the hint Eric,

ulimit -Ha
time(cpu-seconds)    unlimited
file(blocks)         unlimited
coredump(blocks)     unlimited
data(kbytes)         1048576
stack(kbytes)        32768
lockedmem(kbytes)    unlimited
memory(kbytes)       unlimited
nofiles(descriptors) 3404
processes            1044

I had this problem before and really hit the nofiles limit, but the 
values above seem to be safe.

With twisted 2.5 I was able to run 'trial twisted' successfully but with 
8.0.1 one of the tests (manyProcesses or so) crashes and locks up the 
system completely.

I seem to be stuck in between a rock and a hard place :-((

Thxs, Werner


Eric Faurot wrote:
> On Tue, May 6, 2008 at 4:43 PM, Werner Thie <wthie at thiengineering.ch> wrote:
>> Hi all
>>
>>  Running on twisted 2.5 OpenBSD I see the following traceback in the logs
>> every twenty minutes with up to 200 athena/LivePages connected:
> 
> [snip]
> 
> If you have a lot of connections, you might hit the open file limit, which is
> rather low by default on openbsd, especially for default login class.
> I would expect the issue to show up differently though.
> 
> Try tweaking resource.getrlimit and see what happens when you lower
> and increase the LIMIT_NOFILE.
> 
> Eric.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From radix at twistedmatrix.com  Wed May  7 09:43:24 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 May 2008 09:43:24 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <4821AD4B.4010804@thiengineering.ch>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
	<4821AD4B.4010804@thiengineering.ch>
Message-ID: <60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>

On Wed, May 7, 2008 at 9:23 AM, Werner Thie <wthie at thiengineering.ch> wrote:
> Thanks for the hint Eric,
>
>  ulimit -Ha
>  time(cpu-seconds)    unlimited
>  file(blocks)         unlimited
>  coredump(blocks)     unlimited
>  data(kbytes)         1048576
>  stack(kbytes)        32768
>  lockedmem(kbytes)    unlimited
>  memory(kbytes)       unlimited
>  nofiles(descriptors) 3404
>  processes            1044
>
>  I had this problem before and really hit the nofiles limit, but the values
> above seem to be safe.
>
>  With twisted 2.5 I was able to run 'trial twisted' successfully but with
> 8.0.1 one of the tests (manyProcesses or so) crashes and locks up the system
> completely.
>
>  I seem to be stuck in between a rock and a hard place :-((

Can you please try the prerelease of Twisted 8.1.0? It's available at

http://twistedmatrix.com/users/radix/8.1.0pre2/

There were some regressions in 8.0.1 that have been fixed.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From wthie at thiengineering.ch  Wed May  7 11:54:52 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 07 May 2008 17:54:52 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>
References: <48206386.8030302@cfl.rr.com>
	<48206EA2.5080203@thiengineering.ch>	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>	<4821AD4B.4010804@thiengineering.ch>
	<60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>
Message-ID: <4821D0CC.10301@thiengineering.ch>

Hi Christopher

Updated to 8.1.0pre2:
  trial runs now ok:

Ran 3758 tests in 951.295s

FAILED (skips=90, expectedFailures=17, failures=10, errors=21, 
successes=3629)

Attached is the log of the trial run.

HTH, Werner

Christopher Armstrong wrote:
> On Wed, May 7, 2008 at 9:23 AM, Werner Thie <wthie at thiengineering.ch> wrote:
>> Thanks for the hint Eric,
>>
>>  ulimit -Ha
>>  time(cpu-seconds)    unlimited
>>  file(blocks)         unlimited
>>  coredump(blocks)     unlimited
>>  data(kbytes)         1048576
>>  stack(kbytes)        32768
>>  lockedmem(kbytes)    unlimited
>>  memory(kbytes)       unlimited
>>  nofiles(descriptors) 3404
>>  processes            1044
>>
>>  I had this problem before and really hit the nofiles limit, but the values
>> above seem to be safe.
>>
>>  With twisted 2.5 I was able to run 'trial twisted' successfully but with
>> 8.0.1 one of the tests (manyProcesses or so) crashes and locks up the system
>> completely.
>>
>>  I seem to be stuck in between a rock and a hard place :-((
> 
> Can you please try the prerelease of Twisted 8.1.0? It's available at
> 
> http://twistedmatrix.com/users/radix/8.1.0pre2/
> 
> There were some regressions in 8.0.1 that have been fixed.
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial.OpenBSD.Twisted.8.1.0pre2.zip
Type: application/x-zip-compressed
Size: 40973 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080507/11a1fbe5/attachment.bin 

From ddwiggins at advpubtech.com  Wed May  7 12:26:05 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 07 May 2008 09:26:05 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials...
In-Reply-To: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
Message-ID: <fvsl6u$193$1@ger.gmane.org>

Glenn H Tarbox, PhD wrote:
> Scary thought... 
> 
> I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
> broad audience WRT levels of Pythonism.. but with other talks having
> titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
> and of itself is a concern.
> 
> This is a good opportunity to decompose Twisted into its core
> elements... kinda how it would be presented to mathematics folks.  If I
> don't screw it up, it might even be useful to a broader audience trying
> to figure out what Twisted is and the kinds of problems it addresses.
> 
> I welcome all pointers / content / suggestions.

Random synaptic spark: there's probably several different decompositions 
you could use, e.g., architectural, functional, protocol, ...

Happy hunting,

-- 
Don Dwiggins
Advanced Publishing Technology




From nathan.stocks at gmail.com  Wed May  7 13:24:56 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 7 May 2008 11:24:56 -0600
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506193534.1186f43d@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
	<20080506193534.1186f43d@fluxx.allmydata.com>
Message-ID: <96c9d6a80805071024y5d34fe8fycb9658c9012e7474@mail.gmail.com>

On Tue, May 6, 2008 at 8:35 PM, Brian Warner <warner at lothar.com> wrote:
> > What's the current stability of foolscap?  Is it deemed stable enough
>  > for production, or is it more beta, alpha, etc.?
>
>  That's an.. emotional question :-), because I've got two hats on.
>
>  The foolscap developer hat -wearing Brian wants the freedom to improve the
>  wire protocol, which probably means breaking compatibility. There are some
>  versioning hooks in place to make it possible to do this less-breakingly, but
>  it's a hassle, and if this Brian had his druthers he'd be changing and
>  breaking things left and right to make them better. This Brian would like to
>  tell you that it's still alpha.
>
>  But the Tahoe/AllMyData developer hat -wearing Brian (you know, the one who
>  gets a paycheck) is deploying a commercial system with thousands of users who
>  all use Foolscap-0.2.5 to connect to our servers. This provides a strong
>  incentive to maintain compatibility :). This Brian is forced to admit that
>  it's at least beta, and the fact that his company is using it in a production
>  system suggests that there's at least one group of developers who deems it
>  stable enough for production.
>
>  So Foolscap is likely to maintain wire compatibility for the near future, and
>  if I really need to add protocol features, I'm pretty sure that I'll go
>  through the extra work of doing it in a non-breaking way. Take from that what
>  you will :-).

Great answer!  For my purposes, I'll consider that as "stable but
still under heavy development" ... and wait until it makes it into
Twisted proper.  I avoid extra external dependencies whenever I can.

~ Nathan



From ellisonbg.net at gmail.com  Wed May  7 14:41:16 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Wed, 7 May 2008 12:41:16 -0600
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
Message-ID: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>

Hi,

We have been using Twisted for a long time and are migrating to 8.0.1.
 We are finding that code that ran fine with 2.5.0 is giving problems
with 8.0.1 and it appears to be related to what is happening in
reactor.stop().

The code that is failing looks like this:

##########

from twisted.internet import reactor

d = doSomeThingThatReturnsADeferred()
d.addCallback(handleOK)
d.addCallback(lambda _: reactor.stop())
reactor.run()

##########

The doSomeThingThatReturnsADeferred method is making XMLRPC calls
underneath the hood.

When we run this, it runs OK, but then blows up at the end with:

Traceback (most recent call last):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 185, in addCallbacks
    self._runCallbacks()
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 323, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 387, in _continueFiring
    callable(*args, **kwargs)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 524, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/log.py",
line 51, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/log.py",
line 36, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/tcp.py",
line 577, in connectionLost
    self.connector.connectionLost(reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 937, in connectionLost
    self.factory.clientConnectionLost(self, reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/web/xmlrpc.py",
line 325, in clientConnectionLost
    self.deferred.errback(reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 264, in errback
    self._startRunCallbacks(fail)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 293, in _startRunCallbacks
    raise AlreadyCalledError
twisted.internet.defer.AlreadyCalledError:

I have checked and there is no failure object in my callback chain -
this is internal to Twisted.

Has the logic in reactor.stop changed recently?  Any ideas about what
would be causing this?

Thanks

Brian



From radix at twistedmatrix.com  Wed May  7 15:06:28 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 May 2008 15:06:28 -0400
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
References: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
Message-ID: <60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>

On Wed, May 7, 2008 at 2:41 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
> Hi,
>
>  We have been using Twisted for a long time and are migrating to 8.0.1.
>   We are finding that code that ran fine with 2.5.0 is giving problems
>  with 8.0.1 and it appears to be related to what is happening in
>  reactor.stop().

Please try the Twisted 8.1.0 prerelease available at

http://twistedmatrix.com/users/radix/8.1.0pre2/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From clemesha at gmail.com  Wed May  7 20:07:05 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 7 May 2008 17:07:05 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
Message-ID: <d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>

On Tue, May 6, 2008 at 5:56 PM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
> Scary thought...
>
>  I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
>  broad audience WRT levels of Pythonism.. but with other talks having
>  titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
>  and of itself is a concern.
>
>  This is a good opportunity to decompose Twisted into its core
>  elements... kinda how it would be presented to mathematics folks.  If I
>  don't screw it up, it might even be useful to a broader audience trying
>  to figure out what Twisted is and the kinds of problems it addresses.

Hi,

I totally agree that talks that give a "What is Twisted?" type of
presentation are a good opportunity to decompose Twisted into its core elements.

Actually, the Sage project, and how it has been using Twisted,
is actually a really good case study of a project trying to get the most
out of what Twisted offers.

First, let me introduce myself, and tell you why I have a unique
view on the Sage project's use of Twisted.
My name is Alex Clemesha, and I have been involved with the
Sage project since its beginning.  I actually moved to Seattle from UCSD
for a while to work on it, with William Stein, a couple of years ago.

I also once did a small "What is Twisted?" talk at the
University of Washington to many Sage developers about
a year and a half ago, and this was before I really understood
the 'bigger picture' of Twisted, and how all its moving parts are related.

Now, here is how the Sage projects uses Twisted:
(You probably know this, but others might be interested):

a) The Sage notebook: (sagenb.org ,
http://www.flickr.com/photos/sagescreenshots/sets/72157603532209437/)
b) DSage (Distrubuted Sage;
http://www.sagemath.org/doc/html/ref/module-sage.dsage.dsage.html )
c) In the future: math/computation web-service/API

DSage is a framework for parallel computation (similar to ipython1),
and uses Perspective Broker a great deal.  Yi Qiang is the developer,
and he also subscribes to this mailing list, so he might have more to
say about it.

The Sage notebook is something I know a lot more about.
In summary, the Sage notebook is a way to program in a notebook
like interface, in a web browser.  Each abitrary code block is sent to
the server to be executed, and the result is sent back, and displayed inline.
It utilizes twisted.web2 (including a twisted.web2 version of
"guard.SessionWrapper",
written by me ... I have felt the impact of the twisted.web /
twisted.web2 debacel,
but that's a story for another time :)

---

Shifting gears slightly, I would like to tell you about a project that
me and some others have been working very hard on.
It is called Knoboo (pronounced 'nobu') (trac.knoboo.com / knoboo.com)
It's one that is really trying to get that most out of Twisted to
create a online computation notebook (with all the really pretty
front end, kind of like Mathematica + Google Docs + Google Notebook)
combined with remote backend computation 'kernels'.

>From an implementation standpoint, with Twisted, it looks like this:

* A main "App Server", that controls high level access with "twisted.cred"
* Web frontend:  "twisted.web2"
* Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.
* "Kernels":  lightweight XMLRPC servers, local namespace is the
"computation enviroment"
* "Kernel Connections":  "twisted.pb" Perspective Broker
* "Kernel Managers":  start,stop, send signals with
"twisted.internet.protocol.ProcessProtocol"

Now I would like to pause for a minute and say:
"Damn!, look at the above list.  Twisted does a lot ... it's pretty incredible!"

Knoboo is now a "optional package" in Sage, and it
is still changing a lot, but I think it speaks of the general idea of what the
Sage dev group is aiming to get out of Twisted:
to utilize all the separate pieces as best as possible,
to create a single very useful tool.


Probably my main suggestion for Presentation materials
is to go to the Finger Tutorial:
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html
and try to tweak it to really highlight the pieces that are in Twisted
that Sage can benefit from.

Some questions come to mind like:
"We have the Sage notebook, and we have DSage, and we want a
math web service API, how can we tie them together with Twisted?"

and more specifically:
with "twisted.cred" what will a "Notebook" avatar look like
compared to a "DSage" avatar, and how can we write their
different data access methods and other business logic,
so they can best work together?


So, good luck with your presentation!
I'm looking forward to seeing it and hopefully
learning more about Twisted as well.


-Alex














































>
>  I welcome all pointers / content / suggestions.
>
>  -glenn
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ddwiggins at advpubtech.com  Thu May  8 12:42:53 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 08 May 2008 09:42:53 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials...
In-Reply-To: <d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
	<d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>
Message-ID: <fvvaie$e71$1@ger.gmane.org>

alex clemesha wrote:
>>From an implementation standpoint, with Twisted, it looks like this:
> 
> * A main "App Server", that controls high level access with "twisted.cred"
> * Web frontend:  "twisted.web2"
> * Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.

Interesting; how are you handling asynchrony in SA?  I'm aware of 
sAsync, but haven't looked much into it.  (I'm a step or two behind you, 
actively using adbapi, and thinking about moving to SA when I get some 
breathing room.)

-- 
Don Dwiggins
Advanced Publishing Technology




From andrewfr_ice at yahoo.com  Thu May  8 13:21:02 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 8 May 2008 10:21:02 -0700 (PDT)
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <E1Ju8XL-0007V5-MD@cube.twistedmatrix.com>
Message-ID: <151147.86333.qm@web34203.mail.mud.yahoo.com>

Hi Glen:

>  This is a good opportunity to decompose Twisted
into >its core  elements... kinda how it would be
presented >to mathematics folks. If I don't screw it
up, it might >even be useful to a broader audience
trying
>to figure out what Twisted is and the kinds of
problems it addresses.

In my PyCon 2008 talk, "Adventures," I have one slide
that categorises Protocols, Deferreds, Callbacks, and
the Reactor. I think those are the key components of
Twisted. For greater completeness, I would add
(protocol) factories.

I guess a type or set theorist would want to know what
sort of operations one performs upon objects of these
types....

I have another slide that describes Twisted's control
flow (from what I can tell). There I get into the
MainLoop and reader/writer sets (there are a few more
entries there). Unfortunately I haven't gotten around
to properly labelling stuff there on the slide.

Cheers,
Andrew








      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From exarkun at divmod.com  Thu May  8 14:14:52 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 May 2008 14:14:52 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206EA2.5080203@thiengineering.ch>
Message-ID: <20080508181452.6859.1262246432.divmod.quotient.60608@ohm>

On Tue, 06 May 2008 16:43:46 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi all
>
>Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
>every twenty minutes with up to 200 athena/LivePages connected:
>
>     Traceback (most recent call last):
>     --- <exception caught here> ---
>       File "/usr/local/lib/python2.5/site- 
>packages/twisted/internet/selectreactor.py", line 148, in _doReadOrWrite
>         why = getattr(selectable, method)()
>       File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
>line 362, in doRead
>         return self.protocol.dataReceived(data)
>       File "/usr/local/lib/python2.5/site- 
>packages/twisted/protocols/basic.py", line 233, in dataReceived
>         why = self.lineReceived(line)
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 1069, in lineReceived
>         self.allContentReceived()
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 1110, in allContentReceived
>         req.requestReceived(command, path, version)
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 603, in requestReceived
>         self.host = self.channel.transport.getHost()
>       File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
>line 672, in getHost
>         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
>('INET',)))
>       File "<string>", line 1, in getsockname
>
>     socket.error: (22, 'Invalid argument')
>
>Changing reactors does not help, the error is very unspecific. Before I 
>start changing the source sprinkling it with log statements is there anybody 
>out there who has a cure or knows an explanation.
>

I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
done a shutdown of the socket.  Can you tell me what this program does?

    from socket import socket
    port = socket()
    port.bind(('', 0))
    port.listen(1)
    client = socket()
    client.setblocking(False)
    client.connect_ex(port.getsockname())
    server, clientAddr = port.accept()
    print 'Before close', server.getsockname()
    client.close()
    print 'After close', server.getsockname()

If it finishes without error, try it with a time.sleep(5) before the final
line.

Also, to re-iterate what I believe someone else already said in this thread,
the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
buildslave.  It's easy to set up new buildslaves, the only requirements are
that the machine can make outgoing TCP connections to the master and that it
can run the Twisted test suite whenever there's a trunk change or someone
needs to test something on the platform.

Jean-Paul



From clemesha at gmail.com  Thu May  8 18:03:32 2008
From: clemesha at gmail.com (alex clemesha)
Date: Thu, 8 May 2008 15:03:32 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
Message-ID: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>

Hi,

I didn't want to hijack the 'Twisted Presentation Materials..' thread,
so I started this one ...

First off, in the other thread,
Glenn, you mentioned Storm.  I have heard of Storm, but never got
any deeper that noticing that it is still a work in progress (maybe
things have settled down ?)
If anyone has anything to say on how it might be a good choice with
Twisted, please feel free to enlighten us!

But, I hoping to solve some immediate problems with Twisted and
SQLAlchemy, so ...
>>
>> * A main "App Server", that controls high level access with "twisted.cred"
>> * Web frontend:  "twisted.web2"
>> * Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.
>
> Interesting; how are you handling asynchrony in SA?
This is the issue that we're stilling unclear on, and I really
would like to know of the best way of integrating Twisted with SQLAlchemy.


Twisted devs / experts:  Please, could you comment on the right way of
using Twisted and SQLAlchemy together.

Anyone: If anyone know of existing code that integrates Twisted and
SQLAlchemy nicely, please share!


RIght away I just went about the problem be wrapping each call
to SQLAlchemy in a "deferToThread" inside my  "DatabaseManager" class.
At startup of my app, I make an instance of this class, and pass it to
each "avatar" (in "requestAvatar", in my portal)

Here is my Database Manager: (you will actually see that I 'turned
off' the deferToThread wrapping for now):
http://trac.knoboo.com/browser/branches/knoboo-sqlalchemy-take2/knoboo/database/manager.py

but I really haven't convinced myself that this is the best way of doing things.
Hell, it could be totally wrong, so if anyone has any advice, I would
be very appreciative!


> I'm aware of sAsync,
> but haven't looked much into it.  (I'm a step or two behind you, actively
> using adbapi, and thinking about moving to SA when I get some breathing
> room.)
I've looked into SAsync as well, but it is not totally clear to me
what the extra benefit of it is (again, anyone who has a good
description, please tell)
The main developer of sAsync use to post to this mailing list, but I haven't
seen him post in a fairly long while.

So, if others are thinking about using SQLAlchemy with Twisted, let's
discuss it more.

Thanks very much,
Alex



From terry at jon.es  Thu May  8 18:26:39 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 9 May 2008 00:26:39 +0200
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: Your message at 15:03:32 on Thursday, 8 May 2008
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <18467.32287.291435.114293@jon.es>

Hi Alex.

> Anyone: If anyone know of existing code that integrates Twisted and
> SQLAlchemy nicely, please share!

  http://developer.berlios.de/projects/nadbapi/

Terry



From clemesha at gmail.com  Thu May  8 19:42:45 2008
From: clemesha at gmail.com (alex clemesha)
Date: Thu, 8 May 2008 16:42:45 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <18467.32287.291435.114293@jon.es>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<18467.32287.291435.114293@jon.es>
Message-ID: <d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>

On Thu, May 8, 2008 at 3:26 PM, Terry Jones <terry at jon.es> wrote:
> Hi Alex.
>
>> Anyone: If anyone know of existing code that integrates Twisted and
>> SQLAlchemy nicely, please share!
>
>  http://developer.berlios.de/projects/nadbapi/

Great, thanks very much for the pointer!

I've have seen the developer (Perillo Manlio) post to this
list several times, I wonder if he has any comment on his package?

The TODO file says:
" Add support for SQLAlchemy 0.3.7"

... so I'm not sure it this is a game breaker for working with
SQLAlchmey 0.4 or not?


It seems as though the code has not been update in about
a year (not since May 30, 2007), so I'm wondering, is the project
stalled, stopped, or works great and doesn't need much more ;)

Thanks again,
Alex



>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From dialtone at gmail.com  Thu May  8 21:39:22 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu, 8 May 2008 18:39:22 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>

On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
> But, I hoping to solve some immediate problems with Twisted and
> SQLAlchemy, so ...

I've long worked on trying to integrate sqlalchemy and twisted in a
useful way but that can only be done when using simple queries. There
are countless reasons behind this limitation, like the fact that
sqlalchemy objects can do a lot of stuff behind the scenes or because
code that you write in other places might use some assumptions because
it's sync rather than async, and there are also problems with possible
bugs and assumptions within sqlalchemy itself. Basically it's not safe
and I wouldn't recommend it for anyone to use the orm together within
a Twisted process.

What I ended up doing is creating subprocesses that have fairly
complex logic and usually spend more than a few seconds doing their
job. By doing this I simply use sqlalchemy synchronously and without
any problems (I was starting to go completely crazy while trying to
debug time-dependent errors when I decided to refactor my code to use
subprocesses instead, everything started working smoothly without any
relevant change in the logic or in the test code and now I can also
run the subprocess as a system script to check and verify stuff or
debug (with pdb)).

Considering that an ORM is only useful (?) for very complex logic I
consider my approach completely sane. Use the query generator for
everything and reserve the orm for long running tasks.

nadbapi and storm-twisted tries to solve the orm problem in a similar
way but nadbapi is no longer maintained, anyway both currently suffer
from an incredible number of deferreds that they generate making the
use of defgen an absolute requirement (and thus lowering overall
performance). If you look hard enough in glyph's old blog or in this
list (I can't remember where exactly) you can find a post about
letting the database deal with concurrency and not spread it in
application code (aka having tons of deferreds). It is true that not
using threads increases speed and memory usage but for this particular
case 99% of the time you are not going to need neither of them anyway.

closing: I recently refactored some code that used sqlalchemy orm into
using just the query generator and instead of taking 17 seconds it now
takes 7 seconds and memory usage has decreased considerably. It's not
really just because an orm is slower than simply executing queries,
but rather because querying the db was so easy; it was basically done
"recklessly" without thinking too much about the performance hit of
going back and forth to the database. This is basically why I'd rather
not use ORMs unless forced by legacy code or because generating a
query would introduce so much complexity to make it an application in
itself (very rare case IMHO).

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From sflist at ihonk.com  Fri May  9 05:23:48 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 02:23:48 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
Message-ID: <1210325028.13706.7.camel@lothar>

Hi all,

I'm hitting the recursion limit in my code (well, somewhere inside
Twisted, that is), and I'd appreciate any insight as to why. I wouldn't
think what I'm doing -- returning a callback from method A which calls
method B, which then in turn calls method A again -- would be
controversial, since I'd assume Python would be letting go of the stack
for method A, but I guess there's more to it than that.

Code demonstrating the issue follows. Running it results in:
    File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py",
line 550, in accumulateBases
        accumulateBases(base, l, baseClass)
    exceptions.RuntimeError: maximum recursion depth exceeded

(This doesn't actually perfectly reflect my problem in the real code I'm
working with. I'm seeing "'maximum recursion depth exceeded' in <bound
method DebugInfo.__del__ of <twisted.internet.defer.DebugInfo instance
at 0xb1d99b6c>>", but I assume this is coming from the same basic
problem in my code.)

===================================

from twisted.internet import defer, reactor

def yo_print(s, d):
    print s
    d.callback(s)
    return s

def some_deferred(item):
    d = defer.Deferred()
    reactor.callLater(0, lambda: yo_print(item, d))
    return d

def start(items):
    dl = []
    for item in items:
        dl.append(some_deferred(item))
        if len(dl) > 4:
            break
    items = items[len(dl):]
    if dl:
        return defer.DeferredList(dl).addCallback(next_batch, items)
    reactor.stop()

def next_batch(_, items):
    return start(items)

if __name__ == '__main__':
    items = []
    for i in range(1651): # 1650 doesn't do it
        items.append(i)
    print start(items)
    reactor.run()
?
===================================

So I guess the rule is to never, within a callback chain, call a
function which was invoked earlier in the callback chain?

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080509/8c61c829/attachment.htm 

From maarten at treewalker.org  Fri May  9 07:20:57 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 9 May 2008 13:20:57 +0200
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <1210325028.13706.7.camel@lothar>
References: <1210325028.13706.7.camel@lothar>
Message-ID: <200805091321.03338.maarten@treewalker.org>

On Friday 09 May 2008, Steve Freitas wrote:

> def start(items):
>     dl = []
>     for item in items:
>         dl.append(some_deferred(item))
>         if len(dl) > 4:
>             break
>     items = items[len(dl):]
>     if dl:
>         return defer.DeferredList(dl).addCallback(next_batch, items)
>     reactor.stop()
>
> def next_batch(_, items):
>     return start(items)

By returning the DeferredList from next_batch(), you are chaining Deferreds:

http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11

If you remove the "return" from next_batch(), the problem disappears. If you 
want to be able to register a callback when all items are processed, it's 
probably better to create a dedicated Deferred for that instead of chaining 
the DeferredLists.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080509/f64f6bb4/attachment.pgp 

From yqiang at gmail.com  Fri May  9 12:39:58 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Fri, 9 May 2008 09:39:58 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <151147.86333.qm@web34203.mail.mud.yahoo.com>
References: <E1Ju8XL-0007V5-MD@cube.twistedmatrix.com>
	<151147.86333.qm@web34203.mail.mud.yahoo.com>
Message-ID: <3af8969a0805090939s298ea881i4fb7b92fa1c6ff7e@mail.gmail.com>

On Thu, May 8, 2008 at 10:21 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> Hi Glen:
>
>>  This is a good opportunity to decompose Twisted
> into >its core  elements... kinda how it would be
> presented >to mathematics folks. If I don't screw it
> up, it might >even be useful to a broader audience
> trying
>>to figure out what Twisted is and the kinds of
> problems it addresses.
>
> In my PyCon 2008 talk, "Adventures," I have one slide
> that categorises Protocols, Deferreds, Callbacks, and
> the Reactor. I think those are the key components of
> Twisted. For greater completeness, I would add
> (protocol) factories.
>
> I guess a type or set theorist would want to know what
> sort of operations one performs upon objects of these
> types....

I think that actually most people there will probably not be so much
interested in the theory behind twisted as opposed to what
twisted can do for them...now. Mathematicans can be very practical you know ;-)

I think you're right that giving an broad overview of the concepts
behind twisted is a good idea.

Can give a link to your slides when you think it's ready? I would love
to read them.


> I have another slide that describes Twisted's control
> flow (from what I can tell). There I get into the
> MainLoop and reader/writer sets (there are a few more
> entries there). Unfortunately I haven't gotten around
> to properly labelling stuff there on the slide.
>
> Cheers,
> Andrew
>
>
>
>
>
>
>
>
>      ____________________________________________________________________________________
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From sflist at ihonk.com  Fri May  9 13:18:57 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 10:18:57 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <200805091321.03338.maarten@treewalker.org>
References: <1210325028.13706.7.camel@lothar>
	<200805091321.03338.maarten@treewalker.org>
Message-ID: <1210353537.13706.17.camel@lothar>

On Fri, 2008-05-09 at 13:20 +0200, Maarten ter Huurne wrote:
> By returning the DeferredList from next_batch(), you are chaining Deferreds:
> 
> http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11
> 
> If you remove the "return" from next_batch(), the problem disappears. If you 
> want to be able to register a callback when all items are processed, it's 
> probably better to create a dedicated Deferred for that instead of chaining 
> the DeferredLists.

Thanks for your reply, Marteen!

I guess I'm a little mystified by what's going wrong here -- I chain
deferreds all the time -- I'm not sure what it is about returning a few
thousand deferreds wrapped up into a smaller number of DeferredLists
that's causing the problem, and I'd like to understand why.

Steve




From exarkun at divmod.com  Fri May  9 13:40:26 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 May 2008 13:40:26 -0400
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <1210353537.13706.17.camel@lothar>
Message-ID: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>

On Fri, 09 May 2008 10:18:57 -0700, Steve Freitas <sflist at ihonk.com> wrote:
>On Fri, 2008-05-09 at 13:20 +0200, Maarten ter Huurne wrote:
>> By returning the DeferredList from next_batch(), you are chaining Deferreds:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11
>>
>> If you remove the "return" from next_batch(), the problem disappears. If you
>> want to be able to register a callback when all items are processed, it's
>> probably better to create a dedicated Deferred for that instead of chaining
>> the DeferredLists.
>
>Thanks for your reply, Marteen!
>
>I guess I'm a little mystified by what's going wrong here -- I chain
>deferreds all the time -- I'm not sure what it is about returning a few
>thousand deferreds wrapped up into a smaller number of DeferredLists
>that's causing the problem, and I'd like to understand why.

Sitting at the core of Deferred is a loop over callback functions.  If
you have a chained Deferred, then one of those callbacks is doing to be
a function which recursively calls the function which has that loop.  If
you chain enough Deferreds, then eventually this recursion will fail.  It
turns out to be about 250 Deferreds (roughly 4 stack frames per level of
chaining, with the default limit of 1000 stack frames imposed by CPython)
which will trigger this limit.

It may be possible to replace this recursion with iteration, but I'm not
sure that solves all problems.  After all, if you suddenly have to blow
through thousands of levels of chaining in response to one event, then
you're paying a pretty hefty price which could be avoided by jumping over
all the irrelevant intermediate stuff.  Maybe *that* could be implemented
in Deferred as well somehow, but it's not totally obvious to me how. :)

Hope this helps,

Jean-Paul



From sflist at ihonk.com  Fri May  9 14:30:41 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 11:30:41 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>
References: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>
Message-ID: <1210357841.12403.15.camel@lothar>

?On Fri, 2008-05-09 at 13:40 -0400, Jean-Paul Calderone wrote:
> ?On Fri, 09 May 2008 10:18:57 -0700, Steve Freitas <sflist at ihonk.com>
wrote:
> >I guess I'm a little mystified by what's going wrong here -- I chain
> >deferreds all the time -- I'm not sure what it is about returning a few
> >thousand deferreds wrapped up into a smaller number of DeferredLists
> >that's causing the problem, and I'd like to understand why.
> 
> Sitting at the core of Deferred is a loop over callback functions.  If
> you have a chained Deferred, then one of those callbacks is doing to be
> a function which recursively calls the function which has that loop.  If
> you chain enough Deferreds, then eventually this recursion will fail.  It
> turns out to be about 250 Deferreds (roughly 4 stack frames per level of
> chaining, with the default limit of 1000 stack frames imposed by CPython)
> which will trigger this limit.

Yep, that helps, Jean-Paul, thanks for the info. I've been chaining
deferreds for years, but I never thought there was a limit to how many
times I could do it, and even if I had, I'd have never expected the
number would be so low. I looked in the docs and found no mention of it.

> It may be possible to replace this recursion with iteration, but I'm not
> sure that solves all problems.  After all, if you suddenly have to blow
> through thousands of levels of chaining in response to one event, then
> you're paying a pretty hefty price which could be avoided by jumping over
> all the irrelevant intermediate stuff.  Maybe *that* could be implemented
> in Deferred as well somehow, but it's not totally obvious to me how. :)
?
I disagree that this would be a problem. If I'm chaining 10,000
deferreds, I'm taking responsibility to handle a blow-up of that
magnitude. That's why my original example involved putting 5 deferreds
at a time into a DeferredList -- in my real code I'm checking the
results from that DeferredList and stopping sanely if there's an issue.

Deferred's got too much mojo for me to consider submitting a patch, but
I hope somebody does, since there's no conceptual reason why there
should be such a limit.

/me wanders off to Trac to submit a ticket...

Steve




From gregg at renesys.com  Fri May  9 15:33:19 2008
From: gregg at renesys.com (Gregg Lind)
Date: Fri, 09 May 2008 14:33:19 -0500
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
Message-ID: <4824A6FF.8020309@renesys.com>

Good afternoon!

I notice an oddity with zero-length DeferredLists.

The example script (http://dpaste.com/49099/) should just return the 
contents of a bunch of URLs given at the command line, or some errors 
like so:

$ python test.py a b c
[(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
(False, <twisted.python.failure.Failure twisted.web.error.Error>)]

*but*

$ python test.py     # no arguments
[]
# then hangs, never reaching "quit"


Is this odd behaviour?   In defer.py 's  DeferredList.__init__ there is:

       self.resultList = [None] * len(deferredList)
       Deferred.__init__(self)
       if len(deferredList) == 0 and not fireOnOneCallback:
           self.callback(self.resultList)


Thanks in advance!

Gregg


------------------------
#!/usr/bin/env python
## example script1
from twisted.web.client import getPage
from twisted.internet import reactor, defer

def getUrls(L):
   dL = defer.DeferredList( [getPage(x) for x in L] , consumeErrors=True)
   return dL

def results(data):
   print data
   return
  def quit(data):
   reactor.stop()
   return
  if __name__ == "__main__":
   import sys
   L = sys.argv[1:]
   d = getUrls(L)
   d.addCallback(results)
   d.addCallback(quit )
   reactor.run()



From exarkun at divmod.com  Fri May  9 15:46:53 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 May 2008 15:46:53 -0400
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: <4824A6FF.8020309@renesys.com>
Message-ID: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>

On Fri, 09 May 2008 14:33:19 -0500, Gregg Lind <gregg at renesys.com> wrote:
>Good afternoon!
>
>I notice an oddity with zero-length DeferredLists.
>
>The example script (http://dpaste.com/49099/) should just return the 
>contents of a bunch of URLs given at the command line, or some errors like 
>so:
>
>$ python test.py a b c
>[(False, <twisted.python.failure.Failure twisted.web.error.Error>), (False, 
><twisted.python.failure.Failure twisted.web.error.Error>), (False, 
><twisted.python.failure.Failure twisted.web.error.Error>)]
>
>*but*
>
>$ python test.py     # no arguments
>[]
># then hangs, never reaching "quit"
>

You can do this in a simpler way without involving DeferredList:

    >>> from twisted.internet.defer import succeed
    >>> from twisted.internet import reactor
    >>> d = succeed(None)
    >>> d.addCallback(lambda ign: reactor.stop())
    <Deferred at 0xB7D1F12CL  current result: <twisted.python.failure.Failure twisted.internet.error.ReactorNotRunning>>
    >>> reactor.run()
    <hang>

As you can see from this example, the Deferred already has a result (a
Failure) by the time reactor.run() is called.  Adding a callback to a
Deferred which already has a result (such as succeed(None) or
DeferredList([])) calls the callback immediately.  So your sample program
is trying to stop the reactor before it starts.  Then nothing tries to
stop the reactor after you actually do start it.  If you add an errback
to your Deferred, you'll see the problem reported.  One solution to this
is to use reactor.callWhenRunning(reactor.stop) instead of reactor.stop().

Jean-Paul



From gregg at renesys.com  Fri May  9 15:49:55 2008
From: gregg at renesys.com (Gregg Lind)
Date: Fri, 09 May 2008 14:49:55 -0500
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
References: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
Message-ID: <4824AAE3.2040800@renesys.com>

Jean-Paul!

Thank you for the quick and informative answer!

Gregg

Jean-Paul Calderone wrote:
> On Fri, 09 May 2008 14:33:19 -0500, Gregg Lind <gregg at renesys.com> wrote:
>> Good afternoon!
>>
>> I notice an oddity with zero-length DeferredLists.
>>
>> The example script (http://dpaste.com/49099/) should just return the 
>> contents of a bunch of URLs given at the command line, or some errors 
>> like so:
>>
>> $ python test.py a b c
>> [(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
>> (False, <twisted.python.failure.Failure twisted.web.error.Error>), 
>> (False, <twisted.python.failure.Failure twisted.web.error.Error>)]
>>
>> *but*
>>
>> $ python test.py     # no arguments
>> []
>> # then hangs, never reaching "quit"
>>
>
> You can do this in a simpler way without involving DeferredList:
>
>    >>> from twisted.internet.defer import succeed
>    >>> from twisted.internet import reactor
>    >>> d = succeed(None)
>    >>> d.addCallback(lambda ign: reactor.stop())
>    <Deferred at 0xB7D1F12CL  current result: 
> <twisted.python.failure.Failure 
> twisted.internet.error.ReactorNotRunning>>
>    >>> reactor.run()
>    <hang>
>
> As you can see from this example, the Deferred already has a result (a
> Failure) by the time reactor.run() is called.  Adding a callback to a
> Deferred which already has a result (such as succeed(None) or
> DeferredList([])) calls the callback immediately.  So your sample program
> is trying to stop the reactor before it starts.  Then nothing tries to
> stop the reactor after you actually do start it.  If you add an errback
> to your Deferred, you'll see the problem reported.  One solution to this
> is to use reactor.callWhenRunning(reactor.stop) instead of 
> reactor.stop().
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From terry at jon.es  Fri May  9 16:18:33 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 9 May 2008 22:18:33 +0200
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: Your message at 14:49:55 on Friday, 9 May 2008
References: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
	<4824AAE3.2040800@renesys.com>
Message-ID: <18468.45465.266980.175767@jon.es>

Hi Greg

> Thank you for the quick and informative answer!

You might also read this brief thread if you don't fully follow the answer.
It's exactly the same issue, as I ran into it last month.

  http://twistedmatrix.com/pipermail/twisted-python/2008-April/017590.html

Terry



From ilochab at gmail.com  Sat May 10 20:13:43 2008
From: ilochab at gmail.com (IloChab)
Date: Sun, 11 May 2008 02:13:43 +0200
Subject: [Twisted-Python] Python logging with Twisted
Message-ID: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>

I like Python logging module and I didn't feel comfortable with twisted log.
So I was really happy to find the new PythonLoggingObserver in twisted last
release.

I wrote few modules that came in handy:
1) a NetworkHandler that uses a twisted connection to work with
PythonLoggingObserver
2) a log server that offers a centralized log storage service to distributed
twisted processes that connect to it via that NetworkHandler
3) a GUI to manage log files browsing and interactive dynamic configuration
of logging behavior of any process connected to the server.

I released them as a `twlogging` package on:
http://sourceforge.net/projects/twlogging/
hoping that my work could be useful to someone else!

Licia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080511/34788ccf/attachment.htm 

From jml at mumak.net  Sat May 10 22:02:24 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 11 May 2008 12:02:24 +1000
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
Message-ID: <d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>

On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
> I like Python logging module and I didn't feel comfortable with twisted log.
> So I was really happy to find the new PythonLoggingObserver in twisted last
> release.
>
> I wrote few modules that came in handy:
> 1) a NetworkHandler that uses a twisted connection to work with
> PythonLoggingObserver

This bit sounds generic enough that it might be useful to add to
Twisted. Interested in submitting a patch?

jml



From exarkun at twistedmatrix.com  Sun May 11 00:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1210478708.49.1695093007@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080511/a8c74e6a/attachment.htm 

From ilochab at gmail.com  Sun May 11 06:48:19 2008
From: ilochab at gmail.com (IloChab)
Date: Sun, 11 May 2008 12:48:19 +0200
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
	<d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
Message-ID: <166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>

2008/5/11 Jonathan Lange <jml at mumak.net>:

> On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
> > I like Python logging module and I didn't feel comfortable with twisted
> log.
> > So I was really happy to find the new PythonLoggingObserver in twisted
> last
> > release.
> >
> > I wrote few modules that came in handy:
> > 1) a NetworkHandler that uses a twisted connection to work with
> > PythonLoggingObserver
>
> This bit sounds generic enough that it might be useful to add to
> Twisted. Interested in submitting a patch?
>  <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>


I'd be pleased, but I don't know how to do it.

L.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080511/80c53128/attachment.htm 

From manlio_perillo at libero.it  Mon May 12 05:11:54 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 12 May 2008 11:11:54 +0200
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>	<18467.32287.291435.114293@jon.es>
	<d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>
Message-ID: <482809DA.7060607@libero.it>

alex clemesha ha scritto:
> On Thu, May 8, 2008 at 3:26 PM, Terry Jones <terry at jon.es> wrote:
>> Hi Alex.
>>
>>> Anyone: If anyone know of existing code that integrates Twisted and
>>> SQLAlchemy nicely, please share!
>>  http://developer.berlios.de/projects/nadbapi/
> 
> Great, thanks very much for the pointer!
> 
> I've have seen the developer (Perillo Manlio) post to this
> list several times, I wonder if he has any comment on his package?
> 
> The TODO file says:
> " Add support for SQLAlchemy 0.3.7"
> 
> ... so I'm not sure it this is a game breaker for working with
> SQLAlchmey 0.4 or not?
> 

Ops, sorry.
I have moved everything to a Mercurial repository at:
http://hg.mperillo.ath.cx/nweb/nadbapi/

but, as far as I remember I have announced this somewhere (but not on 
berlios).


Now ndbapi should work with 0.4.x, but I have not tested it with new 
versions.

I'm thinking to simply the code.
Now there are a lot of things I have implemented because my original 
goal was to implement the same interface as dbapi.

It seems that this is not very useful, so I'm thinking of removing 
methods like create, drop, loadTable, fetchall, fetchone, scalar and 
just leave the methods transaction, sessionTransaction and runCallable.

So it will no more be possible to do things like:

users.select().addCallback(...)

but I have never used this and it makes the code more hard to understand.




> 
> It seems as though the code has not been update in about
> a year (not since May 30, 2007), so I'm wondering, is the project
> stalled, stopped, or works great and doesn't need much more ;)
> 
> Thanks again,
> Alex
> 


Regards  Manlio Perillo



From andrewfr_ice at yahoo.com  Mon May 12 11:35:33 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 12 May 2008 08:35:33 -0700 (PDT)
Subject: The Eckel Twisted Blog Post Re: [Twisted-Python] Twisted Presentation
In-Reply-To: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
Message-ID: <630456.79680.qm@web34206.mail.mud.yahoo.com>


Hi Yi:

> I think that actually most people there will
> probably not be so much interested in the theory
>behind twisted as opposed to what
> twisted can do for them...now. Mathematicans can be
> very practical you know ;-)

Well if that is the case, I recommend you look at the
latest Bruce Eckel blog post where he uses PyAMF and
Twisted to do distributed computations. Tres cool.

http://www.artima.com/weblogs/viewpost.jsp?thread=230001

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Mon May 12 13:52:42 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 12 May 2008 10:52:42 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re: 
In-Reply-To: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
Message-ID: <288419.35323.qm@web34208.mail.mud.yahoo.com>

Hi Yi:

> I think you're right that giving an broad overview
> of the concepts
> behind twisted is a good idea.
> 
> Can give a link to your slides when you think it's
> ready? I would love
> to read them.

Well you can get the slides at

https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf

The main problem is redoing the illustrations so I
don't know when I will have an update..... At this
stage I don't think folks care.

That said, I am working on a new presentation,
slightly longer in length, more Stackless and Twisted
examples, less talk about WS-BPEL.

Cheers,
Andrew 



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From Marcin.Kasperski at softax.com.pl  Mon May 12 14:02:49 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 12 May 2008 20:02:49 +0200
Subject: [Twisted-Python] Re: SQLAlchemy and Twisted
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <874p934cza.fsf@softax.com.pl>

> Anyone: If anyone know of existing code that integrates Twisted and
> SQLAlchemy nicely, please share!

I have never tried it, but spotted some time ago:

http://foss.eepatents.com/sAsync/

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |    You have the right to accept your
| http://mekk.waw.pl | responsibilites instead of having them
|                    |         assigned to you. (Beck)
----------------------------------------------------------------------




From Andy at NewWorldElectric.com  Mon May 12 14:22:02 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 12 May 2008 14:22:02 -0400
Subject: [Twisted-Python] Re: SQLAlchemy and Twisted
In-Reply-To: <874p934cza.fsf@softax.com.pl>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<874p934cza.fsf@softax.com.pl>
Message-ID: <37d49ed40805121122k3c707bc5o9f50004c675c3a2b@mail.gmail.com>

I use that, it doesn't really give a "full" sqlalchemy tool set
(databound objects and such) but it does let me use sqlalchemy's query
building syntax in twisted.  No problems with it though, quite sturdy
and solidly documented.

- Andy Fundinger

On Mon, May 12, 2008 at 2:02 PM, Marcin Kasperski
<Marcin.Kasperski at softax.com.pl> wrote:
> > Anyone: If anyone know of existing code that integrates Twisted and
>  > SQLAlchemy nicely, please share!
>
>  I have never tried it, but spotted some time ago:
>
>  http://foss.eepatents.com/sAsync/
>
>  --
>  ----------------------------------------------------------------------
>  | Marcin Kasperski   |    You have the right to accept your
>  | http://mekk.waw.pl | responsibilites instead of having them
>  |                    |         assigned to you. (Beck)
>  ----------------------------------------------------------------------
>
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to replicate.



From matthieu.brucher at gmail.com  Mon May 12 15:28:11 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Mon, 12 May 2008 21:28:11 +0200
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re:
In-Reply-To: <288419.35323.qm@web34208.mail.mud.yahoo.com>
References: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
	<288419.35323.qm@web34208.mail.mud.yahoo.com>
Message-ID: <e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>

Hi,

I'd like to see those slides, but I'm asked for a user name/password. Is it
possible to make it available somewhere else ?

Thanks,

Matthieu

2008/5/12 Andrew Francis <andrewfr_ice at yahoo.com>:

> Hi Yi:
>
> > I think you're right that giving an broad overview
> > of the concepts
> > behind twisted is a good idea.
> >
> > Can give a link to your slides when you think it's
> > ready? I would love
> > to read them.
>
> Well you can get the slides at
>
>
> https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf
>
> The main problem is redoing the illustrations so I
> don't know when I will have an update..... At this
> stage I don't think folks care.
>
> That said, I am working on a new presentation,
> slightly longer in length, more Stackless and Twisted
> examples, less talk about WS-BPEL.
>
> Cheers,
> Andrew
>
>
>
>
>  ____________________________________________________________________________________
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080512/dc711122/attachment.htm 

From yqiang at gmail.com  Mon May 12 16:12:28 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Mon, 12 May 2008 13:12:28 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re:
In-Reply-To: <e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>
References: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
	<288419.35323.qm@web34208.mail.mud.yahoo.com>
	<e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>
Message-ID: <3af8969a0805121312m63a496b4p3d2be1d499fa310b@mail.gmail.com>

If you use this link:

http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf

You can download it without needing a password. I am pretty sure he
just copied and pasted the link from some email program :)

On Mon, May 12, 2008 at 12:28 PM, Matthieu Brucher
<matthieu.brucher at gmail.com> wrote:
> Hi,
>
> I'd like to see those slides, but I'm asked for a user name/password. Is it
> possible to make it available somewhere else ?
>
> Thanks,
>
> Matthieu
>
> 2008/5/12 Andrew Francis <andrewfr_ice at yahoo.com>:
>
>
>
> > Hi Yi:
> >
> > > I think you're right that giving an broad overview
> > > of the concepts
> > > behind twisted is a good idea.
> > >
> > > Can give a link to your slides when you think it's
> > > ready? I would love
> > > to read them.
> >
> > Well you can get the slides at
> >
> >
> https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf
> >
> > The main problem is redoing the illustrations so I
> > don't know when I will have an update..... At this
> > stage I don't think folks care.
> >
> > That said, I am working on a new presentation,
> > slightly longer in length, more Stackless and Twisted
> > examples, less talk about WS-BPEL.
> >
> > Cheers,
> > Andrew
> >
> >
> >
> >
> ____________________________________________________________________________________
> > Be a better friend, newshound, and
> > know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> French PhD student
> Website : http://matthieu-brucher.developpez.com/
> Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
>  LinkedIn : http://www.linkedin.com/in/matthieubrucher
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From gregg at renesys.com  Mon May 12 17:16:36 2008
From: gregg at renesys.com (Gregg Lind)
Date: Mon, 12 May 2008 16:16:36 -0500
Subject: [Twisted-Python] Source for Python-ldaptor 0.0.44?
Message-ID: <4828B3B4.7020706@renesys.com>

Hello!

Does any know working svn addresses for ldaptor?  So far, my best luck 
has been use  (in debian)

$apt-get source python-ldaptor 

Is there a more conventional way of getting it? 

Thanks,

Gregg



From clemesha at gmail.com  Tue May 13 00:32:08 2008
From: clemesha at gmail.com (alex clemesha)
Date: Mon, 12 May 2008 21:32:08 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
Message-ID: <d272f0690805122132w4a280255l17de183d4de36db5@mail.gmail.com>

Hi Valentino,

Thank you very much for the thoughtful response.
I was familiar with the fact that you have some hands on
experience with SQLAlchemy and Twisted, so it's good
to hear true stories from the trenches.

A while back I came upon a talk you did at Europython,
and it had some discussion of Twisted and SQLAlchemy,
with, to be quite honest, some very 'magical' looking code:
http://files.10noodles.com/stiq_at_europython07.pdf

Anyways, it's really looking like the answer to
"how do you combine Twisted and SQLAlchemy"
comes down to: "run it in another process".

I guess the canonical solution to dealing with all
inherently blocking API's with respect to twisted is
run them in separate process, which sounds just fine.

-Alex



On Thu, May 8, 2008 at 6:39 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
>  > But, I hoping to solve some immediate problems with Twisted and
>  > SQLAlchemy, so ...
>
>  I've long worked on trying to integrate sqlalchemy and twisted in a
>  useful way but that can only be done when using simple queries. There
>  are countless reasons behind this limitation, like the fact that
>  sqlalchemy objects can do a lot of stuff behind the scenes or because
>  code that you write in other places might use some assumptions because
>  it's sync rather than async, and there are also problems with possible
>  bugs and assumptions within sqlalchemy itself. Basically it's not safe
>  and I wouldn't recommend it for anyone to use the orm together within
>  a Twisted process.
>
>  What I ended up doing is creating subprocesses that have fairly
>  complex logic and usually spend more than a few seconds doing their
>  job. By doing this I simply use sqlalchemy synchronously and without
>  any problems (I was starting to go completely crazy while trying to
>  debug time-dependent errors when I decided to refactor my code to use
>  subprocesses instead, everything started working smoothly without any
>  relevant change in the logic or in the test code and now I can also
>  run the subprocess as a system script to check and verify stuff or
>  debug (with pdb)).
>
>  Considering that an ORM is only useful (?) for very complex logic I
>  consider my approach completely sane. Use the query generator for
>  everything and reserve the orm for long running tasks.
>
>  nadbapi and storm-twisted tries to solve the orm problem in a similar
>  way but nadbapi is no longer maintained, anyway both currently suffer
>  from an incredible number of deferreds that they generate making the
>  use of defgen an absolute requirement (and thus lowering overall
>  performance). If you look hard enough in glyph's old blog or in this
>  list (I can't remember where exactly) you can find a post about
>  letting the database deal with concurrency and not spread it in
>  application code (aka having tons of deferreds). It is true that not
>  using threads increases speed and memory usage but for this particular
>  case 99% of the time you are not going to need neither of them anyway.
>
>  closing: I recently refactored some code that used sqlalchemy orm into
>  using just the query generator and instead of taking 17 seconds it now
>  takes 7 seconds and memory usage has decreased considerably. It's not
>  really just because an orm is slower than simply executing queries,
>  but rather because querying the db was so easy; it was basically done
>  "recklessly" without thinking too much about the performance hit of
>  going back and forth to the database. This is basically why I'd rather
>  not use ORMs unless forced by legacy code or because generating a
>  query would introduce so much complexity to make it an application in
>  itself (very rare case IMHO).
>
>  --
>  Valentino Volonghi aka Dialtone
>  Now running MacOS X 10.5
>  Home Page: http://www.twisted.it
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From eric.faurot at gmail.com  Tue May 13 06:26:21 2008
From: eric.faurot at gmail.com (Eric Faurot)
Date: Tue, 13 May 2008 12:26:21 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
References: <48206EA2.5080203@thiengineering.ch>
	<20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
Message-ID: <e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>

On Thu, May 8, 2008 at 8:14 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

>  I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
>  done a shutdown of the socket.  Can you tell me what this program does?
>
>    from socket import socket
>    port = socket()
>    port.bind(('', 0))
>    port.listen(1)
>    client = socket()
>    client.setblocking(False)
>    client.connect_ex(port.getsockname())
>    server, clientAddr = port.accept()
>    print 'Before close', server.getsockname()
>    client.close()
>    print 'After close', server.getsockname()
>
>  If it finishes without error, try it with a time.sleep(5) before the final
>  line.

The program works fine in both case.

>  Also, to re-iterate what I believe someone else already said in this
> thread,
>  the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
>  buildslave.  It's easy to set up new buildslaves, the only requirements are
>  that the machine can make outgoing TCP connections to the master and that
> it
>  can run the Twisted test suite whenever there's a trunk change or someone
>  needs to test something on the platform.

I wish I could do something, but I don't have a "spare" machine for this atm.

Eric.



From gregg at renesys.com  Tue May 13 09:13:27 2008
From: gregg at renesys.com (Gregg Lind)
Date: Tue, 13 May 2008 08:13:27 -0500
Subject: [Twisted-Python] Patches for ldaptor setup,
	so that bdist_rpm will work
Message-ID: <482993F7.4020109@renesys.com>

These patches make it so that:

$ python setup.py bdist_rpm

will work in the usual way, making it simple for people to distribute 
python-ldaptor

Thanks!

Gregg
babbledog.com


#### MANIFEST.in
include MANIFEST.in
include TODO
recursive-include debian *
recursive-include po *
recursive-include ldaptor/apps *


#### SETUP.PY
[gregg at irc01 ldaptor]$ diff -c ldaptor-snapshot*/setup.py | less
*** ldaptor-snapshot2/setup.py  2008-05-13 14:15:03.000000000 +0100
--- ldaptor-snapshot/setup.py   2007-06-18 23:12:23.000000000 +0100
***************
*** 118,135 ****
      def run(self):
          if not self.skip_build:
              self.run_command('build_locale')
!         self.outfiles = copy_tree(src=self.build_dir,
                    dst=self.install_dir,
                    dry_run=self.dry_run)
-
-     def get_outputs (self):
-         '''
-         ## there needs to be a get_outputs method for build_rpm
-         ## as part of distutils/install.py
-         ## this should return a list of files to be installed.  -- GRL
-         '''
-         return self.outfiles
-

  if __name__=='__main__':
      setup(name="ldaptor",
--- 118,126 ----
      def run(self):
          if not self.skip_build:
              self.run_command('build_locale')
!         copy_tree(src=self.build_dir,
                    dst=self.install_dir,
                    dry_run=self.dry_run)

  if __name__=='__main__':
      setup(name="ldaptor",




From wthie at thiengineering.ch  Tue May 13 11:29:01 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 13 May 2008 17:29:01 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>
References: <48206EA2.5080203@thiengineering.ch>	<20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
	<e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>
Message-ID: <4829B3BD.1000501@thiengineering.ch>

Works like a charm on OpenBSD, with or w/o time.sleep(5).

What now?

Regarding the buildslave I might be able to setup a machine, though only 
connected via some not so fast DSL lines. If DSL is sufficient, tell me 
and I'll take this a step further.

Thanks, Werner

Eric Faurot wrote:
> On Thu, May 8, 2008 at 8:14 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> 
>>  I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
>>  done a shutdown of the socket.  Can you tell me what this program does?
>>
>>    from socket import socket
>>    port = socket()
>>    port.bind(('', 0))
>>    port.listen(1)
>>    client = socket()
>>    client.setblocking(False)
>>    client.connect_ex(port.getsockname())
>>    server, clientAddr = port.accept()
>>    print 'Before close', server.getsockname()
>>    client.close()
>>    print 'After close', server.getsockname()
>>
>>  If it finishes without error, try it with a time.sleep(5) before the final
>>  line.
> 
> The program works fine in both case.
> 
>>  Also, to re-iterate what I believe someone else already said in this
>> thread,
>>  the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
>>  buildslave.  It's easy to set up new buildslaves, the only requirements are
>>  that the machine can make outgoing TCP connections to the master and that
>> it
>>  can run the Twisted test suite whenever there's a trunk change or someone
>>  needs to test something on the platform.
> 
> I wish I could do something, but I don't have a "spare" machine for this atm.
> 
> Eric.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Tue May 13 11:37:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 May 2008 11:37:25 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <4829B3BD.1000501@thiengineering.ch>
Message-ID: <20080513153725.6859.735867103.divmod.quotient.62956@ohm>

On Tue, 13 May 2008 17:29:01 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>Works like a charm on OpenBSD, with or w/o time.sleep(5).
>
>What now?

That was my only guess at the moment.

>Regarding the buildslave I might be able to setup a machine, though only 
>connected via some not so fast DSL lines. If DSL is sufficient, tell me and 
>I'll take this a step further.

DSL is fine.  The network traffic is limited to checking out Twisted from
SVN, updating it sometimes, and sending the results of test runs back to
the master.  The thing that's primarily of importance is that it stay
connected so it's available to run the tests whenever changes are made.

If you can get it set up, email me and I'll get you set up with credentials
to connect to the master.

Jean-Paul



From miguel.filho at gmail.com  Wed May 14 09:22:48 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 14 May 2008 10:22:48 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
Message-ID: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>

Hello list,

I have a twisted application in production for some time now, running
under Fedora Core 6, Python 2.4.4 and twisted 2.4. I know, a little
outdated.
The process was running fine for some weeks without any problems,
although I got this exception in my logs and I really have no idea
what it means.  The process did not die and is still running ok.

2008/05/13 16:03 BRT [-] Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/application/app.py",
line 278, in run
            runApp(config)
          File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py",
line 197, in runApp
            app.runReactorWithLogging(config, oldstdout, oldstderr)
          File "/usr/lib/python2.4/site-packages/twisted/application/app.py",
line 131, in runReactorWithLogging
            reactor.run()
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py",
line 218, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py",
line 229, in mainLoop
            self.doIteration(t)
        exceptions.SystemError: unknown opcode


Regards,

Miguel



From dripton at ripton.net  Wed May 14 10:39:23 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 14 May 2008 07:39:23 -0700
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
Message-ID: <20080514143923.GA17688@vidar.dreamhost.com>

On 2008.05.14 10:22:48 -0300, Miguel Filho wrote:
> I have a twisted application in production for some time now, running
> under Fedora Core 6, Python 2.4.4 and twisted 2.4. I know, a little
> outdated.
> The process was running fine for some weeks without any problems,
> although I got this exception in my logs and I really have no idea
> what it means.  The process did not die and is still running ok.

>         exceptions.SystemError: unknown opcode

This means that Python found an illegal virtual machine instruction.

You can cause this by running or importing a .pyc file from a different
version of Python, without having a matching .py file to fall back on.

-- 
David Ripton    dripton at ripton.net



From miguel.filho at gmail.com  Wed May 14 11:39:11 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 14 May 2008 12:39:11 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <20080514143923.GA17688@vidar.dreamhost.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
	<20080514143923.GA17688@vidar.dreamhost.com>
Message-ID: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>

On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>
> This means that Python found an illegal virtual machine instruction.
>
> You can cause this by running or importing a .pyc file from a different
> version of Python, without having a matching .py file to fall back on.

Hmm, that stills look strange, because I didn't change anything.

Miguel



From radix at twistedmatrix.com  Wed May 14 11:52:13 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 14 May 2008 11:52:13 -0400
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
	<20080514143923.GA17688@vidar.dreamhost.com>
	<394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
Message-ID: <60ed19d40805140852k5378be14u66e1e9d082824f7e@mail.gmail.com>

On Wed, May 14, 2008 at 11:39 AM, Miguel Filho <miguel.filho at gmail.com> wrote:
> On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>  >
>  > This means that Python found an illegal virtual machine instruction.
>  >
>  > You can cause this by running or importing a .pyc file from a different
>  > version of Python, without having a matching .py file to fall back on.
>
>  Hmm, that stills look strange, because I didn't change anything.
>
>  Miguel

I'd run memtest on that machine if I were you.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Wed May 14 12:01:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 May 2008 12:01:27 -0400
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
Message-ID: <20080514160127.6859.1992045789.divmod.quotient.63442@ohm>

On Wed, 14 May 2008 12:39:11 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>>
>> This means that Python found an illegal virtual machine instruction.
>>
>> You can cause this by running or importing a .pyc file from a different
>> version of Python, without having a matching .py file to fall back on.
>
>Hmm, that stills look strange, because I didn't change anything.
>

Encountering this after the process has been running for a long time
suggests a memory corruption issue to me.  The fact that it happened
only once while the process is still running and correctly servicing
events further suggests that the corruption was somehow transient, a
somewhat unusual occurance to say the least. :)

Before the SystemError was raised, the process probably wrote a tiny
amount of debug information to stderr.  Is there any chance that got
logged somewhere useful?  In the normal deamonization mode of twistd
it probably would have been discarded since as part of daemonization
stdin, stdout, and stderr are all closed.  The information is barely
useful, though, so it isn't a huge loss, but at least it would point
out which code object had the bad opcode.  The traceback suggests it
was twisted.internet.selectreactor.SelectReactor.doSelect (at least,
if you're using select reactor).  You could attach gdb and check the
the opcodes in the code object for that function, but I imagine they
are correct now, since the process is still running.

So, I have no idea what happened, but it sounds interesting. :)

Jean-Paul



From ninmonkeys at gmail.com  Thu May 15 09:57:53 2008
From: ninmonkeys at gmail.com (Jake b)
Date: Thu, 15 May 2008 08:57:53 -0500
Subject: [Twisted-Python] how to handle game messaging
Message-ID: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>

Hello, I'm new to the list. I've been going through the twisted
tutorials, and now I'm trying to write a simple asteroids clone to
better understand twisted. ( Think asteroids: but 2 players on a LAN )

(1) In a game like this, or even a first person shooter: where message
speed is more important: What is a good way to send messages to/from
the client and server? Important ones like bullet spawning, other
player locations, etc ?

(2) Do you also send a timestamp so that if the client receives the
message 250ms after the spawn, he can step backwards in his physics
simulation to better simulate client-side?

(3) I wrote pseudo-code of how I think the asteroids code messaging
could work. How do I improve messaging? What am I doing wrong? For my
example I'm going to only use LAN ( so I don't have to deal with
latency issues ). I attached the pseudo code.

Here's an overview of the code:

A GameClient() (run once per client) and GameServer() (run once).
There is a list of Bullet()s and a list of Asteroid()s.

When a player fires, he will tell/ask the server. The server will pass
all spawnings onto the clients. I don't think I need to constantly
update the clients with physics updates -- except the locations of the
players. All other updates should be able to be handled on events (
asteroid shot, player collisions, etc... )

thanks,
--
Jake
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 2008.05.08-twisted_game_integration.code.py
Type: text/x-python
Size: 3610 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080515/97e329a4/attachment.py 

From glyph at divmod.com  Thu May 15 15:18:16 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 May 2008 19:18:16 -0000
Subject: [Twisted-Python] how to handle game messaging
In-Reply-To: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>
References: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>
Message-ID: <20080515191816.25821.1455835899.divmod.xquotient.8346@joule.divmod.com>


On 01:57 pm, ninmonkeys at gmail.com wrote:
>(1) In a game like this, or even a first person shooter: where message
>speed is more important: What is a good way to send messages to/from
>the client and server? Important ones like bullet spawning, other
>player locations, etc ?

Message speed is more important than what?  Premature optimization and 
all that.

If you're just learning Twisted, consider AMP: 
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

It's not particularly fast or well-suited to a first-person shooter, but 
it is easy.  Make it work, make it right, *then* make it fast.  If you 
don't understand Twisted then "easy" is a lot more important than "fast" 
until you really know what you're doing *AND* you have demonstrated you 
have a real performance issue.
>(2) Do you also send a timestamp so that if the client receives the
>message 250ms after the spawn, he can step backwards in his physics
>simulation to better simulate client-side?

Any network game should have lots of time information in the messages 
that are sent.  Stepping backwards in the physics simulation is one way 
to manage latency, but there are others, and the important thing is 
reacting to latency.
>(3) I wrote pseudo-code of how I think the asteroids code messaging
>could work. How do I improve messaging? What am I doing wrong? For my
>example I'm going to only use LAN ( so I don't have to deal with
>latency issues ). I attached the pseudo code.

Commenting on pseudo-code is kind of pointless; your description was 
vague enough that it might describe a lot of different ideas, some good, 
some bad.  Just write something and see if it works!  If it doesn't, 
then you can distill it down to a simple example and ask more specific 
questions.



From jml at mumak.net  Thu May 15 18:36:46 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 16 May 2008 08:36:46 +1000
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
	<d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
	<166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>
Message-ID: <d06a5cd30805151536j6c9566fcq2892315ae71bca5d@mail.gmail.com>

On Sun, May 11, 2008 at 8:48 PM, IloChab <ilochab at gmail.com> wrote:
>
>
> 2008/5/11 Jonathan Lange <jml at mumak.net>:
>>
>> On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
>> > I like Python logging module and I didn't feel comfortable with twisted
>> > log.
>> > So I was really happy to find the new PythonLoggingObserver in twisted
>> > last
>> > release.
>> >
>> > I wrote few modules that came in handy:
>> > 1) a NetworkHandler that uses a twisted connection to work with
>> > PythonLoggingObserver
>>
>> This bit sounds generic enough that it might be useful to add to
>> Twisted. Interested in submitting a patch?
>
> I'd be pleased, but I don't know how to do it.
>

The short answer is "File a bug and then attach some diffs to that bug."

The longer answer is:
- Go to twistedmatrix.com
- Log in / create an account
- Click on "New ticket"
- Describe the feature that you are adding
- Attach the relevant files.

In general, we only land code that has thorough test coverage. We can
help you write the tests if you haven't done much automated testing
before.

There's a page for new contributors here:
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs ... that
said, I notice that it doesn't say how to submit patches.

still-high-on-dvcs-ly yrs,
jml



From jml at mumak.net  Thu May 15 18:39:41 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 16 May 2008 08:39:41 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <1209387659.6476.10.camel@localhost.localdomain>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
	<1209387659.6476.10.camel@localhost.localdomain>
Message-ID: <d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>

On Mon, Apr 28, 2008 at 11:00 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
>> I think the data on this is skewed, since there was about a 1.4 year
>> gap between the last 2 releases of Twisted. If we released each month,
>> I can imagine this would change.
>
> At ITA we've been using 2.4 for quite a while... though someone recently
> switched us to 2.5.
>

That makes one data point :)

jml



From itamar at itamarst.org  Thu May 15 18:46:18 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 May 2008 18:46:18 -0400
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>	<1209387659.6476.10.camel@localhost.localdomain>
	<d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>
Message-ID: <482CBD3A.1040209@itamarst.org>

Jonathan Lange wrote:
>> At ITA we've been using 2.4 for quite a while... though someone recently
>> switched us to 2.5.
>>
>>     
>
> That makes one data point :)
>   
A single "we're writing an airline reservation system with important 
parts in Twisted" data point, yes :)



From ellisonbg.net at gmail.com  Thu May 15 23:20:05 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 15 May 2008 21:20:05 -0600
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>
References: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
	<60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>
Message-ID: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>

>> Hi,
>>
>>  We have been using Twisted for a long time and are migrating to 8.0.1.
>>   We are finding that code that ran fine with 2.5.0 is giving problems
>>  with 8.0.1 and it appears to be related to what is happening in
>>  reactor.stop().
>
> Please try the Twisted 8.1.0 prerelease available at
>
> http://twistedmatrix.com/users/radix/8.1.0pre2/

Using 8.1.0pre2 does solve this problem.  I am curious, what changed
in 8.0.1 (and was fixed in 8.1.0) that causes this?  Also, will this
fix be backported to 8.0.x or should we recommend that people, use
Twisted >= 2.5.0 but not 8.0.1?

Thanks!

Brian

> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Fri May 16 08:08:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 May 2008 08:08:17 -0400
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>
Message-ID: <20080516120818.6859.1459844070.divmod.quotient.64217@ohm>

On Thu, 15 May 2008 21:20:05 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>>> Hi,
>>>
>>>  We have been using Twisted for a long time and are migrating to 8.0.1.
>>>   We are finding that code that ran fine with 2.5.0 is giving problems
>>>  with 8.0.1 and it appears to be related to what is happening in
>>>  reactor.stop().
>>
>> Please try the Twisted 8.1.0 prerelease available at
>>
>> http://twistedmatrix.com/users/radix/8.1.0pre2/
>
>Using 8.1.0pre2 does solve this problem.  I am curious, what changed
>in 8.0.1 (and was fixed in 8.1.0) that causes this?  Also, will this
>fix be backported to 8.0.x or should we recommend that people, use
>Twisted >= 2.5.0 but not 8.0.1?

It's not likely that there'll be another 8.0.x release.  We considered
doing one, but since 8.0.1 isn't packaged in any major distribution,
there doesn't seem to be much point.

Jean-Paul



From dripton at ripton.net  Fri May 16 09:28:03 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 16 May 2008 06:28:03 -0700
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <20080516120818.6859.1459844070.divmod.quotient.64217@ohm>
References: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>
	<20080516120818.6859.1459844070.divmod.quotient.64217@ohm>
Message-ID: <20080516132803.GA22819@vidar.dreamhost.com>

On 2008.05.16 08:08:17 -0400, Jean-Paul Calderone wrote:
> It's not likely that there'll be another 8.0.x release.  We considered
> doing one, but since 8.0.1 isn't packaged in any major distribution,
> there doesn't seem to be much point.

It's in Gentoo.  (Marked as unstable on x86, but not masked.)

-- 
David Ripton    dripton at ripton.net



From radix at twistedmatrix.com  Fri May 16 14:13:12 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 May 2008 14:13:12 -0400
Subject: [Twisted-Python] May Twisted Sprint this weekend
Message-ID: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>

What: Twisted Sprint
Where: Divmod office, in Porter Square, Cambridge, MA
When: 18 May 2008
Who: Anyone who wants to come

Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
hoping Paul Swartz will show up and whoever else wants to come. If
you'd like to come please respond and we'll tell you how to get there,
etc.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Fri May 16 17:49:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 16 May 2008 21:49:11 -0000
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
Message-ID: <20080516214911.25821.1322403689.divmod.xquotient.8384@joule.divmod.com>


On 06:13 pm, radix at twistedmatrix.com wrote:
>What: Twisted Sprint
>Where: Divmod office, in Porter Square, Cambridge, MA
>When: 18 May 2008
>Who: Anyone who wants to come
>
>Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
>18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
>hoping Paul Swartz will show up and whoever else wants to come. If
>you'd like to come please respond and we'll tell you how to get there,
>etc.

It's unfortunately quite likely that I'll miss a large part of this one. 
I'll try to put in an appearance, but I have other pressing obligations 
this weekend.

Still, everyone else should DEFINITELY show up and take some of the 
tickets out of my oh-crap-I'm-the-default-assignee queue!  (198 tickets 
and counting.)



From waterbug at pangalactic.us  Sat May 17 15:26:16 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 17 May 2008 15:26:16 -0400
Subject: [Twisted-Python] Adding a file dialog to wxacceptance.py breaks it
Message-ID: <482F3158.1010306@pangalactic.us>

The attached file is the example wxacceptance.py with a minimal
modification to add a file selection dialog.  If the file dialog
is opened, the counting sequence stops, and although the gui
menus still work and the gui is destroyed normally, it appears
that the reactor hangs, and it has to be killed.

(This example will not work with pre-2.5 versions of wxPython because
I removed the compatibility code, which was getting deprecation
warnings.)

Let me know if I should just put this into a bug report.

Platform:  Ubuntu (gutsy)
Twisted:   8.0.1-r23638 (latest svn)
wxPython:  2.8.7.1

Thanks!
Steve

-------------- next part --------------
A non-text attachment was scrubbed...
Name: wxacceptancemod.py
Type: text/x-python
Size: 3597 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080517/fb0e55a0/attachment.py 

From exarkun at twistedmatrix.com  Sun May 18 00:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1211083508.03.1804471089@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080518/5df3e5bd/attachment.htm 

From nadav at MIT.EDU  Sun May 18 18:47:50 2008
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sun, 18 May 2008 18:47:50 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
Message-ID: <4830B216.10101@mit.edu>

Hi,

I'm wondering, is there some built-in Twisted functionality (or any 
other existing implementation using Twisted) for doing 
resumable/disruption tolerant file transfer?

Sample scenario: A sends file to B, session fails for whatever reason. B 
saved whatever data was received in some temporary structure, and knows 
to resume transfer from where it left off or alternatively request 
specific chunks that it is missing.

Wanted to know this before I start implementing such functionality on my 
own.

Thanks!
Nadav







From itamar at itamarst.org  Sun May 18 21:12:19 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 May 2008 21:12:19 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
In-Reply-To: <4830B216.10101@mit.edu>
References: <4830B216.10101@mit.edu>
Message-ID: <1211159539.10447.63.camel@localhost.localdomain>

On Sun, 2008-05-18 at 18:47 -0400, Nadav Aharony wrote:

> I'm wondering, is there some built-in Twisted functionality (or any 
> other existing implementation using Twisted) for doing 
> resumable/disruption tolerant file transfer?
> 
> Sample scenario: A sends file to B, session fails for whatever reason. B 
> saved whatever data was received in some temporary structure, and knows 
> to resume transfer from where it left off or alternatively request 
> specific chunks that it is missing.
> 
> Wanted to know this before I start implementing such functionality on my 
> own.

Yes, that's what the client factory is for - to store data that needs to
last beyond the life of a single connection. For example see
infrastructure used by twisted.web.client.downloadPage for resumable
downloads.




From nadav at MIT.EDU  Mon May 19 01:47:31 2008
From: nadav at MIT.EDU (Nadav Aharony)
Date: Mon, 19 May 2008 01:47:31 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
In-Reply-To: <1211159539.10447.63.camel@localhost.localdomain>
References: <4830B216.10101@mit.edu>
	<1211159539.10447.63.camel@localhost.localdomain>
Message-ID: <48311473.7080908@mit.edu>

Itamar Shtull-Trauring wrote:
> On Sun, 2008-05-18 at 18:47 -0400, Nadav Aharony wrote:
>
>   
>> I'm wondering, is there some built-in Twisted functionality (or any 
>> other existing implementation using Twisted) for doing 
>> resumable/disruption tolerant file transfer?
>>
>> Sample scenario: A sends file to B, session fails for whatever reason. B 
>> saved whatever data was received in some temporary structure, and knows 
>> to resume transfer from where it left off or alternatively request 
>> specific chunks that it is missing.
>>
>> Wanted to know this before I start implementing such functionality on my 
>> own.
>>     
>
> Yes, that's what the client factory is for - to store data that needs to
> last beyond the life of a single connection. For example see
> infrastructure used by twisted.web.client.downloadPage for resumable
> downloads.
>
>   
This is exactly what I was looking for, thanks!
Can I safely assume that the part that was initially received is all 
contiguous and correct? (if so this would be because of the TCP CRC 
check for each packet, right?)

-Nadav
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080519/ed8aa26d/attachment.htm 

From mg at daimi.au.dk  Mon May 19 04:40:32 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 May 2008 10:40:32 +0200
Subject: [Twisted-Python] Memory size of Deferreds
Message-ID: <w1bprriptz3.fsf@thyra02.daimi.au.dk>

Hello,

I am working on a project called VIFF (http://viff.dk/) which does
secure multiparty computations. Twisted, and in particular the
Deferred class, has been a great tool for this!

Each variable in a computation is stored as a Deferred, and the
computation builds an expression tree based on these Deferreds, which
is then evaluated as the Deferreds call their callbacks.

What worries me is the size of a single Deferred. One user wanted to
do computations on very large lists of Deferreds and reported that his
programs used more memory than expected.

I tried to measure the size of a Deferred by creating large lists of
them and found that a single empty Deferred takes up about 200 bytes.
Adding a callback brings that up to about 500 bytes.

The discussion can be found here:

  http://thread.gmane.org/gmane.comp.cryptography.viff.devel/232

I might be measuring this the wrong way -- I simply looked at how the
memory size grew in 'top' when I created more and more lists.

As noted in the thread above, it helps defining the __slots__
attribute -- it saves the 144 bytes needed for the default object
dictionary. Maybe that could be done for Deferred?

Has anybody measured how much memory the C implementation users per
Deferred? I have not tried it out yet.

  http://twistedmatrix.com/trac/ticket/2245

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From michal.dtz at gmail.com  Mon May 19 15:18:14 2008
From: michal.dtz at gmail.com (Michal Pasternak)
Date: Mon, 19 May 2008 21:18:14 +0200
Subject: [Twisted-Python] Memory size of Deferreds
In-Reply-To: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
Message-ID: <10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>

2008/5/19 Martin Geisler <mg at daimi.au.dk>:
> What worries me is the size of a single Deferred. One user wanted to
> do computations on very large lists of Deferreds and reported that his
> programs used more memory than expected.
>
> I tried to measure the size of a Deferred by creating large lists of
> them and found that a single empty Deferred takes up about 200 bytes.
> Adding a callback brings that up to about 500 bytes.

As such thing as memory allocation is tightly tied to the runtime
environment, it is a bit hard to give reasonable answers without any
information about, at least, an OS and a CPU.

Did the memory in the case you mention grow constantly? Is that user
sure, that it was not a memory leak in his/hers code?

Deferreds, as you all already know, are a core concept that Twisted is
built upon. If you need to optimize such areas of Twisted, then, just
my suggestion - maybe you are using a wrong tool to do the job. If the
memory usage is a problem, then, well, maybe you are trying to do
things at once, when you should do them sequentially (eg. using a
generator). Maybe you should rather look into other areas of the
problem (eg. not try to optimize deferreds, but the code that uses
them). Maybe you should use something else than Deferreds for that
job. As for memory usage of such small objects like Deferreds, well...
Python is, well, Python. Python string or integer uses much more
memory, than C string or int. You can't tune Python string memory
usage, and you hardly can do anything about size of Deferred if that
becomes a problem. On the other hand, you should be able to write
optimal code with Python faster and memory footprint shouldn't be a
problem (from my experience, in many cases Twisted footprint is
suprisingly low).

In other words - if size of Deferred object is your only bottleneck,
then congratulations :-) I'd rather suggest optimizing other parts of
the code - as Deferreds are the core of Twisted, I suppose it could be
a bit hard to do anything about them, in the same way you can't do
anything about memory footprint of core Python objects.

Regards,
-- 
m



From mg at daimi.au.dk  Mon May 19 16:45:26 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 May 2008 22:45:26 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
Message-ID: <87tzgu9g61.fsf@hbox.dyndns.org>

"Michal Pasternak" <michal.dtz at gmail.com> writes:

Thanks for the reply!

> 2008/5/19 Martin Geisler <mg at daimi.au.dk>:
>> What worries me is the size of a single Deferred. One user wanted to
>> do computations on very large lists of Deferreds and reported that his
>> programs used more memory than expected.
>>
>> I tried to measure the size of a Deferred by creating large lists of
>> them and found that a single empty Deferred takes up about 200 bytes.
>> Adding a callback brings that up to about 500 bytes.
>
> As such thing as memory allocation is tightly tied to the runtime
> environment, it is a bit hard to give reasonable answers without any
> information about, at least, an OS and a CPU.

Ah, sorry: I tested this on an Athlon 64 X2 (but with 32-bit Debian). I
simply tested like this:

% python
Python 2.5.2 (r252:60911, Apr 17 2008, 13:15:05) 
[GCC 4.2.3 (Debian 4.2.3-3)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from twisted.internet.defer import Deferred
>>> a = [Deferred() for _ in xrange(100000)]
>>> b = [Deferred() for _ in xrange(100000)]
>>> c = [Deferred() for _ in xrange(100000)]

and noted how the memory usage rose from 8 MiB to 30 MiB, to 52 MiB to
73 MiB in 'top'. So that is about 22 MiB per list -- around ~200 bytes
pr Deferred. (I know there is some overhead for the list.)

> Did the memory in the case you mention grow constantly? Is that user
> sure, that it was not a memory leak in his/hers code?

I think he was just concerned that his application used 450 MiB RAM, and
that made me try to see how big an empty Deferred is.

> Deferreds, as you all already know, are a core concept that Twisted is
> built upon. If you need to optimize such areas of Twisted, then, just
> my suggestion - maybe you are using a wrong tool to do the job. If the
> memory usage is a problem, then, well, maybe you are trying to do
> things at once, when you should do them sequentially (eg. using a
> generator).

Yes, you may be right... scheduling everything to run at once is
probably not necessary. It just makes things simple with my design.

I would love to get some advice on the design of my library -- it is the
first thing I have made with Twisted. The goal of VIFF is to enable
shared computations -- think addition and multiplication. So the user writes

  x = add(a, mul(b * c))

and where a, b, c are Deferreds which will eventually hold integers. The
add and mul functions return new Deferreds which will eventually hold
the results. Addition is simple:

  def add(x, y):
      sum = gatherResults([x, y])
      sum.addCallback(lambda results: results[0] + results[1])
      return sum

Multiplication is similar, but requires network communication -- that is
why it returns a Deferred.

This is the basic operation of the library: an expression tree is built
and evaluated from the leaves inwards. The important point is that as
much as possible is done in parallel, that all operations run as soon as
their operands are available. Twisted made this extremely easy thanks to
the DeferredList and Deferred abstraction.

> Maybe you should rather look into other areas of the problem (eg. not
> try to optimize deferreds, but the code that uses them). Maybe you
> should use something else than Deferreds for that job. As for memory
> usage of such small objects like Deferreds, well... Python is, well,
> Python. Python string or integer uses much more memory, than C string
> or int. You can't tune Python string memory usage, and you hardly can
> do anything about size of Deferred if that becomes a problem.

There is the possibility of using the __slots__ attribute to avoid the
object dictionary. I don't know what negative sideeffects that might
have, though.

Also, I have yet to try the C implementation of Deferred to see how it
performs memory-wise.

> On the other hand, you should be able to write optimal code with
> Python faster and memory footprint shouldn't be a problem (from my
> experience, in many cases Twisted footprint is suprisingly low).
>
> In other words - if size of Deferred object is your only bottleneck,
> then congratulations :-)

Hehe, thanks! :-) I am certainly not claiming that Deferreds are the
only bottleneck or consumer of memory. I just figured that they would be
an easy starting point since my code (and as you say, Twisted in
general) uses them a lot.

> I'd rather suggest optimizing other parts of the code - as Deferreds
> are the core of Twisted, I suppose it could be a bit hard to do
> anything about them, in the same way you can't do anything about
> memory footprint of core Python objects.

Right... I'll try looking through the code to see if I by mistake hold
on to Deferreds or other objects longer than I have to.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080519/129814a7/attachment.pgp 

From steve at holdenweb.com  Mon May 19 23:45:19 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 19 May 2008 23:45:19 -0400
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <87tzgu9g61.fsf@hbox.dyndns.org>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
Message-ID: <4832494F.1040104@holdenweb.com>

Martin Geisler wrote:
> "Michal Pasternak" <michal.dtz at gmail.com> writes:
> 
> Thanks for the reply!
> 
>> 2008/5/19 Martin Geisler <mg at daimi.au.dk>:
>>> What worries me is the size of a single Deferred. One user wanted to
>>> do computations on very large lists of Deferreds and reported that his
>>> programs used more memory than expected.
>>>
>>> I tried to measure the size of a Deferred by creating large lists of
>>> them and found that a single empty Deferred takes up about 200 bytes.
>>> Adding a callback brings that up to about 500 bytes.
>> As such thing as memory allocation is tightly tied to the runtime
>> environment, it is a bit hard to give reasonable answers without any
>> information about, at least, an OS and a CPU.
> 
> Ah, sorry: I tested this on an Athlon 64 X2 (but with 32-bit Debian). I
> simply tested like this:
> 
> % python
> Python 2.5.2 (r252:60911, Apr 17 2008, 13:15:05) 
> [GCC 4.2.3 (Debian 4.2.3-3)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>>>> from twisted.internet.defer import Deferred
>>>> a = [Deferred() for _ in xrange(100000)]
>>>> b = [Deferred() for _ in xrange(100000)]
>>>> c = [Deferred() for _ in xrange(100000)]
> 
> and noted how the memory usage rose from 8 MiB to 30 MiB, to 52 MiB to
> 73 MiB in 'top'. So that is about 22 MiB per list -- around ~200 bytes
> pr Deferred. (I know there is some overhead for the list.)
> 
>> Did the memory in the case you mention grow constantly? Is that user
>> sure, that it was not a memory leak in his/hers code?
> 
> I think he was just concerned that his application used 450 MiB RAM, and
> that made me try to see how big an empty Deferred is.
> 
>> Deferreds, as you all already know, are a core concept that Twisted is
>> built upon. If you need to optimize such areas of Twisted, then, just
>> my suggestion - maybe you are using a wrong tool to do the job. If the
>> memory usage is a problem, then, well, maybe you are trying to do
>> things at once, when you should do them sequentially (eg. using a
>> generator).
> 
> Yes, you may be right... scheduling everything to run at once is
> probably not necessary. It just makes things simple with my design.
> 
> I would love to get some advice on the design of my library -- it is the
> first thing I have made with Twisted. The goal of VIFF is to enable
> shared computations -- think addition and multiplication. So the user writes
> 
>   x = add(a, mul(b * c))
> 
> and where a, b, c are Deferreds which will eventually hold integers. The
> add and mul functions return new Deferreds which will eventually hold
> the results. Addition is simple:
> 
>   def add(x, y):
>       sum = gatherResults([x, y])
>       sum.addCallback(lambda results: results[0] + results[1])
>       return sum
> 
> Multiplication is similar, but requires network communication -- that is
> why it returns a Deferred.
> 
> This is the basic operation of the library: an expression tree is built
> and evaluated from the leaves inwards. The important point is that as
> much as possible is done in parallel, that all operations run as soon as
> their operands are available. Twisted made this extremely easy thanks to
> the DeferredList and Deferred abstraction.
> 
>> Maybe you should rather look into other areas of the problem (eg. not
>> try to optimize deferreds, but the code that uses them). Maybe you
>> should use something else than Deferreds for that job. As for memory
>> usage of such small objects like Deferreds, well... Python is, well,
>> Python. Python string or integer uses much more memory, than C string
>> or int. You can't tune Python string memory usage, and you hardly can
>> do anything about size of Deferred if that becomes a problem.
> 
> There is the possibility of using the __slots__ attribute to avoid the
> object dictionary. I don't know what negative sideeffects that might
> have, though.
> 
> Also, I have yet to try the C implementation of Deferred to see how it
> performs memory-wise.
> 
>> On the other hand, you should be able to write optimal code with
>> Python faster and memory footprint shouldn't be a problem (from my
>> experience, in many cases Twisted footprint is suprisingly low).
>>
>> In other words - if size of Deferred object is your only bottleneck,
>> then congratulations :-)
> 
> Hehe, thanks! :-) I am certainly not claiming that Deferreds are the
> only bottleneck or consumer of memory. I just figured that they would be
> an easy starting point since my code (and as you say, Twisted in
> general) uses them a lot.
> 
>> I'd rather suggest optimizing other parts of the code - as Deferreds
>> are the core of Twisted, I suppose it could be a bit hard to do
>> anything about them, in the same way you can't do anything about
>> memory footprint of core Python objects.
> 
> Right... I'll try looking through the code to see if I by mistake hold
> on to Deferreds or other objects longer than I have to.
> 
Surely (he said, tongue firmly in cheek) the answer to having too many 
outstanding Deferreds is to use faster peer systems :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From jml at mumak.net  Tue May 20 02:05:42 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 20 May 2008 16:05:42 +1000
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
Message-ID: <d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>

On Sat, May 17, 2008 at 4:13 AM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> What: Twisted Sprint
> Where: Divmod office, in Porter Square, Cambridge, MA
> When: 18 May 2008
> Who: Anyone who wants to come
>
> Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
> 18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
> hoping Paul Swartz will show up and whoever else wants to come. If
> you'd like to come please respond and we'll tell you how to get there,
> etc.
>

How'd it go?

jml



From Marcin.Kasperski at softax.com.pl  Tue May 20 09:44:59 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 20 May 2008 15:44:59 +0200
Subject: [Twisted-Python] __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
Message-ID: <87d4nhum1w.fsf_-_@softax.com.pl>


It is not that difficult to see what is inside the deferred (spawn
some debugger and see):

(this may be a class variable)

 debug  (boolean)

(those surely are instance variables)

 callbacks (a list, initially empty, later containing tuples of tuples)
 called (int)
 paused (int)
 result (anything)
 timeoutCall (None or object)
 _runningCallbacks (boolean)
 _debugInfo (object of type DebugInfo)

Bare names of attributes take about 60 bytes (this is what could be
reclamied with __slots__), some of them are references, we have a list
(which inside contains complicated structures), ....

It could be an interesting experiment to define __slots__ for Deferred
class and see what is the memory impact.

Hmm, hmm. I did an experiment. Here is one version of the testing code:

    Cls = Deferred
    count = 250000
    import os
    pid = os.getpid()
    cmd = "ps -F %d" % pid
    a = [Cls() for _ in xrange(count)]
    os.system(cmd)
    b = [Cls() for _ in xrange(count)]
    os.system(cmd)
    c = [Cls() for _ in xrange(count)]
    os.system(cmd)

and here is one using __slots__:


    from twisted.internet.defer import timeout, Deferred

    class SlotsDeferred(object):
        __slots__ = ['debug', 'callbacks', 'called', 'paused', 'result', 'timeoutCall', '_runningCallbacks', '_debugInfo']

        # whole content of original Deferred class copied as-is here

    Cls = SlotsDeferred
    count = 250000
    import os
    pid = os.getpid()
    cmd = "ps -F %d" % pid
    a = [Cls() for _ in xrange(count)]
    os.system(cmd)
    b = [Cls() for _ in xrange(count)]
    os.system(cmd)
    c = [Cls() for _ in xrange(count)]
    os.system(cmd)

And here are the results:

(standard Deferred)

$ python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 92 15180 56992   1 15:40 pts/18   S+     0:00 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 99 28374 109000  1 15:40 pts/18   S+     0:02 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 99 41568 161020  1 15:40 pts/18   S+     0:05 python testdef.py

(Deferred with __slots__ added)

$ python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536  0  7834 28068   1 15:41 pts/18   S+     0:00 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536 99 13683 51160   0 15:41 pts/18   S+     0:01 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536 99 19532 74256   1 15:41 pts/18   S+     0:02 python testdef.py

As one can see, the memory usage is ~ halved.

So ... maybe it would make sense to add __slots__ to deferreds, after all?

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  In any large change, 1/3 will think it is
| http://mekk.waw.pl | great, 1/3 will think it is stupid, and 1/3
|                    |               will wait (Reed)
----------------------------------------------------------------------




From pittipatti at web.de  Tue May 20 09:55:36 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Tue, 20 May 2008 15:55:36 +0200
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
Message-ID: <4832D858.9060609@web.de>

Hi!

I have a server with multiple clients (processing nodes) which send
their data periodically to the server using PB.

Now I'm trying to quit the clients from the server-side, eg. when the
server is shut down.
I tried to install a "quit-callback-routine" from the client on the
server, which the server should start if it wants a client to shutdown.
But this doesn't work, instead I get a
	twisted.spread.jelly.InsecureJelly: method
error.

Please find attached some sample-code I used for testing.

I think I was 'a little'  to optimistic, that things just work when
trying to send methods over the net and expecting twisted to know how to
handle with this.

But what do I have to change, to archive the result I'm expecting?

Thanks in advance

Patrick
-------------- next part --------------
A non-text attachment was scrubbed...
Name: quitClient.py
Type: text/x-python
Size: 925 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080520/539faa5c/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: quitServer.py
Type: text/x-python
Size: 416 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080520/539faa5c/attachment-0001.py 

From adelagon at gmail.com  Tue May 20 10:52:03 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 20 May 2008 22:52:03 +0800
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <4832D858.9060609@web.de>
References: <4832D858.9060609@web.de>
Message-ID: <7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>

After looking through twisted.spread.db source, I noticed that it implements
twisted.internet.protocol. You could use the self.transport.loseConnection
facility to forcefully disconnect clients. If you want your client to do a
certain routine when the server shuts him down, you could send a custom
message to the client first that will trigger some cleanup procedure you
have in your client. I do similar stuff like this in our twisted xmpp
server. :)


On Tue, May 20, 2008 at 9:55 PM, Patrick Scharrenberg <pittipatti at web.de>
wrote:

> Hi!
>
> I have a server with multiple clients (processing nodes) which send
> their data periodically to the server using PB.
>
> Now I'm trying to quit the clients from the server-side, eg. when the
> server is shut down.
> I tried to install a "quit-callback-routine" from the client on the
> server, which the server should start if it wants a client to shutdown.
> But this doesn't work, instead I get a
>        twisted.spread.jelly.InsecureJelly: method
> error.
>
> Please find attached some sample-code I used for testing.
>
> I think I was 'a little'  to optimistic, that things just work when
> trying to send methods over the net and expecting twisted to know how to
> handle with this.
>
> But what do I have to change, to archive the result I'm expecting?
>
> Thanks in advance
>
> Patrick
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080520/4149af3a/attachment.htm 

From pittipatti at web.de  Tue May 20 12:09:08 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Tue, 20 May 2008 18:09:08 +0200
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
References: <4832D858.9060609@web.de>
	<7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
Message-ID: <4832F7A4.5010802@web.de>

Hi Alvin,

Thanks for your answer!

> If you want your client to do a certain routine when the server shuts
> him down, you could send a custom message to the client first that will
> trigger some cleanup procedure you have in your client.

Yes indeed I have to do some cleanup first.
What do you mean with "send a custom message"?

Patrick



From mailing_lists at evotex.ch  Tue May 20 11:50:41 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 20 May 2008 17:50:41 +0200
Subject: [Twisted-Python] xmlstream problem
Message-ID: <4832F351.2070603@evotex.ch>

Hello,

I am using xmlstream.XmlStream to process...XML streams :-)
I'm having a bit of a problem, I have a client and a server, both 
protocols inherit from xmlstream.XmlStream. When the client sends 4 
messages, one after another, I get a parse error. I debugged my program, 
and the buffer the expat parser is given contains in effect, 4 messages 
consecutively like so :

str: 
<message>...</message><message>...</message><message>...</message><message>...</message>

(I replaced the child elements with "..." for your reading enjoyment)

and I get this Exception when debugging (otherwise it stays hidden) :

ExpatError: junk after document element: line 1, column 196

now column 196 is the end of the 1st msg's root element, I think it 
doesn't like the next message being right after the first. I did 
override xmlstream.XmlStream.onDocumentEnd()
because I didn't want it to close the connection in between messages, 
but in my method I told it to initialize the stream using :

self._initializeStream()

I did this since I noticed that closing the connection forces a new 
parser to be created when the previous statement is called. The reason I 
don't want the connection to be closed is that I'd like a persistent 
connection to be held.

Does anyone know how to either have the messages given to the parser as 
separate messages so that it doesn't freak out?

Thank you,
Gabriel





From adelagon at gmail.com  Tue May 20 13:22:47 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 21 May 2008 01:22:47 +0800
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <4832F7A4.5010802@web.de>
References: <4832D858.9060609@web.de>
	<7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
	<4832F7A4.5010802@web.de>
Message-ID: <7a01f6c00805201022t319cf714p5cb7c9e1a941d258@mail.gmail.com>

I mean some kind of a command from the server to trigger the cleanup of the
client. For example: on some cases in our xmpp server, when a currently
logged in user logged in again with using the same account from a different
location; we forcefully close the last session by first sending a stream
document end to the client ("</stream>") before doing a
transport.loseConnection(). Our client then triggers the cleanup procedure
upon receiving </stream> from the server. I haven't tried my hands on
twisted.spread yet but you could implement something like this. :)



On Wed, May 21, 2008 at 12:09 AM, Patrick Scharrenberg <pittipatti at web.de>
wrote:

> Hi Alvin,
>
> Thanks for your answer!
>
> > If you want your client to do a certain routine when the server shuts
> > him down, you could send a custom message to the client first that will
> > trigger some cleanup procedure you have in your client.
>
> Yes indeed I have to do some cleanup first.
> What do you mean with "send a custom message"?
>
> Patrick
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080521/b301c213/attachment.htm 

From twisted at ralphm.ik.nu  Tue May 20 13:37:15 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 20 May 2008 19:37:15 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <4832F351.2070603@evotex.ch>
References: <4832F351.2070603@evotex.ch>
Message-ID: <1211305035.6573.43.camel@zwerf>

On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
> Hello,
> 
> I am using xmlstream.XmlStream to process...XML streams :-)
> I'm having a bit of a problem, I have a client and a server, both 
> protocols inherit from xmlstream.XmlStream. When the client sends 4 
> messages, one after another, I get a parse error. I debugged my program, 
> and the buffer the expat parser is given contains in effect, 4 messages 
> consecutively like so :
> 
> str: 
> <message>...</message><message>...</message><message>...</message><message>...</message>
> 
> (I replaced the child elements with "..." for your reading enjoyment)
> 
> and I get this Exception when debugging (otherwise it stays hidden) :
> 
> ExpatError: junk after document element: line 1, column 196
> 
> now column 196 is the end of the 1st msg's root element, I think it 
> doesn't like the next message being right after the first.

That's right. Streaming XML, as implemented by twisted.words.xish, works
by exchanging two complete (virtual) XML documents, one in each
direction. So, you need to have a root element around your messages,
such as 'stream'. The unit of communication is first-level elements of
that root element. So, you start out with sending the start tag of the
root element, and then sending the messages.

You would set up an observer for your messages like so:

  def onMessage(message):
      print "Got message!"

  factory = XmlStreamFactory()
  factory.addBootstrap("/message", onMessage)
  
> I did 
> override xmlstream.XmlStream.onDocumentEnd()
> because I didn't want it to close the connection in between messages, 
> but in my method I told it to initialize the stream using :
> 
> self._initializeStream()
> 
> I did this since I noticed that closing the connection forces a new 
> parser to be created when the previous statement is called. The reason I 
> don't want the connection to be closed is that I'd like a persistent 
> connection to be held.

There is no need to do this, what I showed above should meet your
requirements. Also, this method is semi-private (leading _) for a
reason.

-- 
Groetjes,

ralphm




From radix at twistedmatrix.com  Tue May 20 13:41:56 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 20 May 2008 13:41:56 -0400
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
	<d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>
Message-ID: <60ed19d40805201041n12c3da56vbb40d4f997304c16@mail.gmail.com>

On Tue, May 20, 2008 at 2:05 AM, Jonathan Lange <jml at mumak.net> wrote:
> On Sat, May 17, 2008 at 4:13 AM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> What: Twisted Sprint
>> Where: Divmod office, in Porter Square, Cambridge, MA
>> When: 18 May 2008
>> Who: Anyone who wants to come
>>
>> Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
>> 18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
>> hoping Paul Swartz will show up and whoever else wants to come. If
>> you'd like to come please respond and we'll tell you how to get there,
>> etc.
>>
>
> How'd it go?

Glyph and Paul couldn't make it. Only Jean-Paul, Itamar and I were
there: we released Twisted 8.1 and reviewed one ticket (the
process-group signalling branch). I'll write an announcement for 8.1
when I get the chance, but it's up on the web site already (we still
need an OS X installer).

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From adelagon at gmail.com  Tue May 20 13:50:59 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 21 May 2008 01:50:59 +0800
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <4832F351.2070603@evotex.ch>
References: <4832F351.2070603@evotex.ch>
Message-ID: <7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>

I don't think that the method onDocumentEnd will be triggered on that error.
I assume that the received xml is invalid and the code that is disconnecting
the client is on the overridden dataReceived method of xmlstream.py:

 def dataReceived(self, data):
        """ Called whenever data is received.

        Passes the data to the XML parser. This can result in calls to the
        DOM handlers. If a parse error occurs, the L{STREAM_ERROR_EVENT}
event
    is called to allow for cleanup actions, followed by dropping the
        connection.
        """
        try:
            if self.rawDataInFn: self.rawDataInFn(data)
            self.stream.parse(data)
        except domish.ParserError:
            self.dispatch(self, STREAM_ERROR_EVENT)
            *### Put some code here that will write the received invalid xml
data to a file*
            self.transport.loseConnection() --> *Your clients get
disconnected here when sending an invalid xml*

Since it's a pyExpat/domish error your client gets disconnected by the
transport.loseConnection() call. I suggest that you put something under
except to check if your xmpp client is sending an invalid xml.

Cheers,
Alvin


On Tue, May 20, 2008 at 11:50 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
wrote:

> Hello,
>
> I am using xmlstream.XmlStream to process...XML streams :-)
> I'm having a bit of a problem, I have a client and a server, both protocols
> inherit from xmlstream.XmlStream. When the client sends 4 messages, one
> after another, I get a parse error. I debugged my program, and the buffer
> the expat parser is given contains in effect, 4 messages consecutively like
> so :
>
> str:
> <message>...</message><message>...</message><message>...</message><message>...</message>
>
> (I replaced the child elements with "..." for your reading enjoyment)
>
> and I get this Exception when debugging (otherwise it stays hidden) :
>
> ExpatError: junk after document element: line 1, column 196
>
> now column 196 is the end of the 1st msg's root element, I think it doesn't
> like the next message being right after the first. I did override
> xmlstream.XmlStream.onDocumentEnd()
> because I didn't want it to close the connection in between messages, but
> in my method I told it to initialize the stream using :
>
> self._initializeStream()
>
> I did this since I noticed that closing the connection forces a new parser
> to be created when the previous statement is called. The reason I don't want
> the connection to be closed is that I'd like a persistent connection to be
> held.
>
> Does anyone know how to either have the messages given to the parser as
> separate messages so that it doesn't freak out?
>
> Thank you,
> Gabriel
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080521/ff4e23e5/attachment.htm 

From mg at daimi.au.dk  Tue May 20 14:01:41 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 20 May 2008 20:01:41 +0200
Subject: [Twisted-Python] Re: __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
	<87d4nhum1w.fsf_-_@softax.com.pl>
Message-ID: <87bq30j1mi.fsf@hbox.dyndns.org>

Marcin Kasperski <Marcin.Kasperski at softax.com.pl> writes:

> It is not that difficult to see what is inside the deferred (spawn
> some debugger and see):
>
> [...]

Yeah, I have already looked at the code for the Deferred class -- I like
it, it is delightfully small! :-)

> (standard Deferred)
>
> $ python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 92 15180 56992   1 15:40 pts/18   S+     0:00 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 99 28374 109000  1 15:40 pts/18   S+     0:02 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 99 41568 161020  1 15:40 pts/18   S+     0:05 python testdef.py
>
> (Deferred with __slots__ added)
>
> $ python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536  0  7834 28068   1 15:41 pts/18   S+     0:00 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536 99 13683 51160   0 15:41 pts/18   S+     0:01 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536 99 19532 74256   1 15:41 pts/18   S+     0:02 python testdef.py
>
> As one can see, the memory usage is ~ halved.

Cool -- that is a substantial saving! I did an experiment where I tested
these classes:

  >>> class X(object):
  ...   __slots__ = ('foo',) # No dict, space for one attribute only.
  ...   def __init__(self, foo):
  ...     self.foo = foo
  ... 
  >>> class Y(object):
  ...   def __init__(self, foo):
  ...     self.foo = foo

and found that X objects take up about 40 bytes in memory whereas Y
objects take up 180 bytes in memory. This mail:

  http://mail.python.org/pipermail/python-list/2002-March/135223.html

explains that a dictionary takes up 144 bytes in memory and that fits
very nicely with the savings I saw with the X and Y classes above.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080520/c8ae1b72/attachment.pgp 

From twisted at ralphm.ik.nu  Tue May 20 14:33:56 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 20 May 2008 20:33:56 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>
References: <4832F351.2070603@evotex.ch>
	<7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>
Message-ID: <20080520183356.GA14165@ik.nu>

On Wed, May 21, 2008 at 01:50:59AM +0800, Alvin Delagon wrote:
> I don't think that the method onDocumentEnd will be triggered on that error. I
> assume that the received xml is invalid and the code that is disconnecting the
> client is on the overridden dataReceived method of xmlstream.py:

I'm pretty sure this not the problem, but the outcome of
misunderstanding of the concept of XML Streams, as I explained in the
other reply. As I said, your receiving stream will, at the end of the
session, be a complete XML document, conceptually, and the XML parser is
used with that idea in mind. So if you try to feed it more than one XML
document, it will raise an exception.

-- 
Groetjes,

ralphm



From michal.dtz at gmail.com  Tue May 20 14:54:34 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 20 May 2008 20:54:34 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <87tzgu9g61.fsf@hbox.dyndns.org>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
Message-ID: <20080520205434.48164f0e@gmail.com>

On 2008-05-19, 22:45:26
Martin Geisler <mg at daimi.au.dk> wrote:

> "Michal Pasternak" <michal.dtz at gmail.com> writes:
> 
[...]
> I would love to get some advice on the design of my library -- it is
> the first thing I have made with Twisted. The goal of VIFF is to
> enable shared computations -- think addition and multiplication. 
[...]
>   def add(x, y):
>       sum = gatherResults([x, y])
>       sum.addCallback(lambda results: results[0] + results[1])
>       return sum
> 
> Multiplication is similar, but requires network communication -- that
> is why it returns a Deferred.

I don't think that there's anything wrong with this example in terms of
being written using Twisted Python.

> The important point is
> that as much as possible is done in parallel, that all operations run
> as soon as their operands are available. Twisted made this extremely
> easy thanks to the DeferredList and Deferred abstraction.

This is the point where I think, that you answered your question. If
you do stuff in parallel, you use more Deferreds and more memory. 

I will repeat myself now: I would rather try to find other places to
optimize VIFF, than reducing memory footprint of Deferred. I don't have
a CS degree, I'm not a mathematician, but from what you wrote it seems
that maybe it would be worth to try implementing something stack-based
(like RPN), than the tree approach you seem to be doing now - of course
if having a stack is something you can have using secure multiparty
calculations.

-- 
m



From mg at daimi.au.dk  Wed May 21 03:56:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 21 May 2008 09:56:30 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <20080520205434.48164f0e@gmail.com>
Message-ID: <w1bej7wnl8x.fsf@thyra02.daimi.au.dk>

Micha? Pasternak <michal.dtz at gmail.com> writes:

>>   def add(x, y):
>>       sum = gatherResults([x, y])
>>       sum.addCallback(lambda results: results[0] + results[1])
>>       return sum
>> 
>> Multiplication is similar, but requires network communication --
>> that is why it returns a Deferred.
>
> I don't think that there's anything wrong with this example in terms
> of being written using Twisted Python.

Okay, thanks for looking at it!

>> The important point is that as much as possible is done in
>> parallel, that all operations run as soon as their operands are
>> available. Twisted made this extremely easy thanks to the
>> DeferredList and Deferred abstraction.
>
> This is the point where I think, that you answered your question. If
> you do stuff in parallel, you use more Deferreds and more memory.

Yes, I guess you are right... :-) The design tries to do everything at
once with as much parallism as possible. But since bandwidth is
limited, I guess I could achieve the same throughput by scheduling
things in a slower rate. Maybe using something like this:

  class map_parallel(Deferred):
      def __init__(self, iterable, func, max):
          Deferred.__init__(self)
  
          self.iter = iterable
          self.func = func
          self.running = 0
  
          for _ in range(max):
              self.running += 1
              self.run_next(None)
  
      def run_next(self, arg):
          try:
              e = self.iter.next()
              e.addCallback(self.func)
              e.addCallback(self.run_next)
          except StopIteration:
              # The iterator is exhausted.
              self.running -= 1
              if self.running == 0 and not self.called:
                  # All callbacks have finished.
                  self.callback(None)
          # Pass the argument through unchanged.
          return arg

where map_parallel will map a function over a list of Deferreds, but
it will only run up to max function applications in parallel. I will
experiment with it, and if it works well, then it would be cool to
have a class like this in Twisted.

> I will repeat myself now: I would rather try to find other places to
> optimize VIFF, than reducing memory footprint of Deferred. I don't
> have a CS degree, I'm not a mathematician, but from what you wrote
> it seems that maybe it would be worth to try implementing something
> stack-based (like RPN), than the tree approach you seem to be doing
> now - of course if having a stack is something you can have using
> secure multiparty calculations.

Thanks for the ideas! You could certainly do what you suggest,
changing the schedule like that is okay from a security point of view.
And if I can delay allocating memory until needed by doing so, then it
will definitely be interesting to try.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From nico at teknico.net  Wed May 21 06:22:10 2008
From: nico at teknico.net (Nicola Larosa)
Date: Wed, 21 May 2008 12:22:10 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
	<20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
Message-ID: <200805211022.m4LAMBNM014209@smtpi1.ngi.it>

Martin Geisler wrote:
> it will only run up to max function applications in parallel. I will
> experiment with it, and if it works well, then it would be cool to
> have a class like this in Twisted.

Something like DeferredQueue? :-)

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L950

-- 
Nicola Larosa - http://www.tekNico.net/

My dream is that in 500 years (or less) humanity will look back at what
passes for psychology today in the same way that we now look back on the
dark ages, when they were drilling holes in people's heads to drain out
the crazy. Oh wait, we were still doing that in the twentieth century
(http://en.wikipedia.org/wiki/Lobotomy). - Phillip J. Eby, February 2008





From mg at daimi.au.dk  Wed May 21 07:03:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 21 May 2008 13:03:30 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
	<200805211022.m4LAMBNM014209@smtpi1.ngi.it>
Message-ID: <w1babijor5p.fsf@thyra02.daimi.au.dk>

Nicola Larosa <nico at teknico.net> writes:

> Martin Geisler wrote:
>> it will only run up to max function applications in parallel. I will
>> experiment with it, and if it works well, then it would be cool to
>> have a class like this in Twisted.
>
> Something like DeferredQueue? :-)
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L950

Hehe, I can see that this does something that looks very similar :-)

I think a DeferredQueue is a bit more general than my code -- I think
you need some code in addition to a DeferredQueue in order to obtain
what I want: limited parallelism.

In particular, I guess you need to catch the QueueUnderflow exceptions
and then somehow know when it is time to call get() again.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mithrandi at mithrandi.net  Wed May 21 07:35:18 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 21 May 2008 13:35:18 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <w1babijor5p.fsf@thyra02.daimi.au.dk>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
	<20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
	<200805211022.m4LAMBNM014209@smtpi1.ngi.it>
	<w1babijor5p.fsf@thyra02.daimi.au.dk>
Message-ID: <20080521113517.GC4904@mithrandi.net>

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080521/4f82ccf0/attachment.pgp 

From arlenecc at incesoft.com  Wed May 21 07:44:35 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:44:35 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <tf0BffG1dX7R.ThVN6DSf@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:47:31 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:47:31 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <dMBWYRSQX1zx.2rkzDTzf@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:49:10 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:49:10 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <vgWQmFXtKMVN.mFZSRbqd@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:50:39 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:50:39 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <ltmymZ5SCscy.GgYwNH1r@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:51:43 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:51:43 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <n48QtdQmm13P.Jyv8HvCR@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:52:45 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:52:45 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <cfqG5PP4bK04.PxM4SVKh@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 07:53:46 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:53:46 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <TW2swkNCBcgp.13vYmmS0@mail.incesoft.com>



???
???	Re: [Twisted-Python] Re: Memory size of Deferreds
????	Tristan Seligmann <mithrandi at mithrandi.net>
???		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From Marcin.Kasperski at softax.com.pl  Wed May 21 09:24:25 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Wed, 21 May 2008 15:24:25 +0200
Subject: [Twisted-Python] Re: __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
	<87d4nhum1w.fsf_-_@softax.com.pl> <87bq30j1mi.fsf@hbox.dyndns.org>
Message-ID: <87wslnssc6.fsf@softax.com.pl>

For the sake of completness: I saved this as

http://twistedmatrix.com/trac/ticket/3245





From mailing_lists at evotex.ch  Wed May 21 10:06:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 21 May 2008 16:06:01 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <1211305035.6573.43.camel@zwerf>
References: <4832F351.2070603@evotex.ch> <1211305035.6573.43.camel@zwerf>
Message-ID: <48342C49.8020509@evotex.ch>

Ralph Meijer wrote:
> On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
>   
>> Hello,
>>
>> I am using xmlstream.XmlStream to process...XML streams :-)
>> I'm having a bit of a problem, I have a client and a server, both 
>> protocols inherit from xmlstream.XmlStream. When the client sends 4 
>> messages, one after another, I get a parse error. I debugged my program, 
>> and the buffer the expat parser is given contains in effect, 4 messages 
>> consecutively like so :
>>
>> str: 
>> <message>...</message><message>...</message><message>...</message><message>...</message>
>>
>> (I replaced the child elements with "..." for your reading enjoyment)
>>
>> and I get this Exception when debugging (otherwise it stays hidden) :
>>
>> ExpatError: junk after document element: line 1, column 196
>>
>> now column 196 is the end of the 1st msg's root element, I think it 
>> doesn't like the next message being right after the first.
>>     
>
> That's right. Streaming XML, as implemented by twisted.words.xish, works
> by exchanging two complete (virtual) XML documents, one in each
> direction. So, you need to have a root element around your messages,
> such as 'stream'. The unit of communication is first-level elements of
> that root element. So, you start out with sending the start tag of the
> root element, and then sending the messages.
>
> You would set up an observer for your messages like so:
>
>   def onMessage(message):
>       print "Got message!"
>
>   factory = XmlStreamFactory()
>   factory.addBootstrap("/message", onMessage)
>   
>   
>> I did 
>> override xmlstream.XmlStream.onDocumentEnd()
>> because I didn't want it to close the connection in between messages, 
>> but in my method I told it to initialize the stream using :
>>
>> self._initializeStream()
>>
>> I did this since I noticed that closing the connection forces a new 
>> parser to be created when the previous statement is called. The reason I 
>> don't want the connection to be closed is that I'd like a persistent 
>> connection to be held.
>>     
>
> There is no need to do this, what I showed above should meet your
> requirements. Also, this method is semi-private (leading _) for a
> reason.
>
>   
Ralph,

Thank you, I understand better now, so I could send a "session" opening 
tag (e.g. <session_start>) from each side (one from the client when it 
connects and one from the server when the client connects), then 
exchange as manny messages as I want in between the two and then when I 
am done I send the closing tag (e.g. </session_start>)? Is that correct?

Thanks,
Gabriel



From ixafei at 4657.com  Wed May 21 21:32:44 2008
From: ixafei at 4657.com (ixafei)
Date: Thu, 22 May 2008 09:32:44 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
Message-ID: <200805220932409533589@4657.com>

hi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080522/2c43f891/attachment.htm 

From radix at twistedmatrix.com  Wed May 21 22:49:42 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 May 2008 22:49:42 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <200805220932409533589@4657.com>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
	<200805220932409533589@4657.com>
Message-ID: <60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>

2008/5/21 ixafei <ixafei at 4657.com>:
> hi

Hey, what's up.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From waterbug at pangalactic.us  Thu May 22 01:04:07 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 22 May 2008 01:04:07 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>	<200805220932409533589@4657.com>
	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
Message-ID: <4834FEC7.7080404@pangalactic.us>

Christopher Armstrong wrote:
> 2008/5/21 ixafei <ixafei at 4657.com>:
>> hi
> 
> Hey, what's up.

Yo, dudes!





From steve at holdenweb.com  Thu May 22 06:37:38 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 22 May 2008 06:37:38 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <4834FEC7.7080404@pangalactic.us>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>	<200805220932409533589@4657.com>	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
	<4834FEC7.7080404@pangalactic.us>
Message-ID: <g13idm$7cn$1@ger.gmane.org>

Stephen Waterbury wrote:
> Christopher Armstrong wrote:
>> 2008/5/21 ixafei <ixafei at 4657.com>:
>>> hi
>>
>> Hey, what's up.
> 
> Yo, dudes!

shout out to all my homies
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From michal.dtz at gmail.com  Thu May 22 07:08:25 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 22 May 2008 13:08:25 +0200
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <g13idm$7cn$1@ger.gmane.org>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
	<200805220932409533589@4657.com>
	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
	<4834FEC7.7080404@pangalactic.us> <g13idm$7cn$1@ger.gmane.org>
Message-ID: <20080522130825.178737ad@gmail.com>

Dnia 2008-05-22, o godz. 06:37:38
Steve Holden <steve at holdenweb.com> napisa?(a):

> Stephen Waterbury wrote:
> > Christopher Armstrong wrote:
> >> 2008/5/21 ixafei <ixafei at 4657.com>:
> >>> hi
> >>
> >> Hey, what's up.
> > 
> > Yo, dudes!
> 
> shout out to all my homies

Where's Dukee?

-- 
m




From twisted at ralphm.ik.nu  Thu May 22 11:16:05 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 22 May 2008 17:16:05 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <48342C49.8020509@evotex.ch>
References: <4832F351.2070603@evotex.ch> <1211305035.6573.43.camel@zwerf>
	<48342C49.8020509@evotex.ch>
Message-ID: <1211469365.6544.14.camel@zwerf>

On Wed, 2008-05-21 at 16:06 +0200, Gabriel Rossetti wrote:
> Ralph Meijer wrote:
> > On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
> >   
> >> Hello,
> >>
> >> I am using xmlstream.XmlStream to process...XML streams :-)
> >> I'm having a bit of a problem, I have a client and a server, both 
> >> protocols inherit from xmlstream.XmlStream. When the client sends 4 
> >> messages, one after another, I get a parse error. I debugged my program, 
> >> and the buffer the expat parser is given contains in effect, 4 messages 
> >> consecutively like so :
> >>
> >> str: 
> >> <message>...</message><message>...</message><message>...</message><message>...</message>
> >>
> >> (I replaced the child elements with "..." for your reading enjoyment)
> >>
> >> and I get this Exception when debugging (otherwise it stays hidden) :
> >>
> >> ExpatError: junk after document element: line 1, column 196
> >>
> >> now column 196 is the end of the 1st msg's root element, I think it 
> >> doesn't like the next message being right after the first.
> >>     
> >
> > That's right. Streaming XML, as implemented by twisted.words.xish, works
> > by exchanging two complete (virtual) XML documents, one in each
> > direction. So, you need to have a root element around your messages,
> > such as 'stream'. The unit of communication is first-level elements of
> > that root element. So, you start out with sending the start tag of the
> > root element, and then sending the messages.
> >
> > You would set up an observer for your messages like so:
> >
> >   def onMessage(message):
> >       print "Got message!"
> >
> >   factory = XmlStreamFactory()
> >   factory.addBootstrap("/message", onMessage)
> >   
> >   
> >> I did 
> >> override xmlstream.XmlStream.onDocumentEnd()
> >> because I didn't want it to close the connection in between messages, 
> >> but in my method I told it to initialize the stream using :
> >>
> >> self._initializeStream()
> >>
> >> I did this since I noticed that closing the connection forces a new 
> >> parser to be created when the previous statement is called. The reason I 
> >> don't want the connection to be closed is that I'd like a persistent 
> >> connection to be held.
> >>     
> >
> > There is no need to do this, what I showed above should meet your
> > requirements. Also, this method is semi-private (leading _) for a
> > reason.
> >
> >   
> Ralph,
> 
> Thank you, I understand better now, so I could send a "session" opening 
> tag (e.g. <session_start>) from each side (one from the client when it 
> connects and one from the server when the client connects), then 
> exchange as manny messages as I want in between the two and then when I 
> am done I send the closing tag (e.g. </session_start>)? Is that correct?

Yeah, that sounds right. I suggest using <stream/> as the root element.

-- 
Groetjes,

ralphm




From warner at lothar.com  Thu May 22 16:08:38 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 22 May 2008 13:08:38 -0700
Subject: [Twisted-Python] Foolscap-0.2.7 released,
	Foolscap vs. debian openssl bug
Message-ID: <20080522130838.6514dbc3@fluxx.allmydata.com>

I released Foolscap-0.2.7 the other week, just a few days after the release
of 0.2.6 . This fixes a brown-paper-bag bug in 0.2.6 that prevented the
'flogtool' utility from running at all.

Tarballs can be obtained from foolscap.lothar.com and from PyPI. All releases
are signed by my GPG public key: 0x1514A7BD.

 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.7.tar.gz#md5=8b766c322f30bd267405c399bce2d362
 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.7.zip#md5=9554d22d58113c0d87f58ec3dcf43e2a

For documentation, bugs, and patches, please visit
http://foolscap.lothar.com/trac .

== Debian OpenSSL Bugs and Foolscap ==

As you've probably heard[1], last week the debian project published a
security advisory that described how the openssl package has been using a
18-ish-bit random number generator for the last two years. As a result, keys
and certificates generated by the affected versions (or used for DSA
signatures by affected versions) should be considered compromised and
immediately replaced. This affects the last 3 or 4 Ubuntu releases too
(Dapper was correct, Edgy was broken). All affected releases now have fixed
versions available for download, and obviously everyone using an affected
release needs to upgrade immediately.

 [1]: http://lists.debian.org/debian-security-announce/2008/msg00152.html

Since the bug affected key generation, keys which were created by the broken
versions will remain broken even after openssl itself is upgraded. The Debian
and Ubuntu projects have released tools to detect weak ssh keys that were
generated by these versions and disable them. Other projects (including
Foolscap) use generated keys for various purposes, so the effects of this bug
will linger even after openssl has been fixed.

How does this affect Foolscap? The short answer: Weak keys generated by the
broken versions of openssl will enable a man-in-the-middle attack, which (if
successful) would reveal the private swissnums that protect access to
Referenceables. Foolscap users who have created Tubs while they had the
broken versions installed should stop using the associated FURLs and generate
new certificates/FURLs.

The longer answer: There are three things in Foolscap that use random
numbers:

 1: TubIDs [COMPROMISED]. These are a hash of the public key that corresponds
 to a Tub's private key, and are included in FURLs (as the base32 part
 immediately following the pb:// prefix). This provides protection against a
 man-in-the-middle attack: when connecting to a FURL, the certificate of the
 remote end is compared against the TubID in the FURL, and the connection is
 dropped with extreme prejudice if they do not match. This validation is
 performed before any secrets are passed over the wire.

 2: SwissNums [SAFE]. These are a randomly-generated name for a reference,
 created when tub.registerReference(obj) is called without a name= argument,
 and when a Referenceable is sent over the wire without being explicitly
 registered. They appear at the right-hand end of the FURL, after the last
 slash. Most Referenceables are given these unguessable names, because that
 limits access to parties that have been explicitly granted access. (when
 registerReference() is called with a guessable name, anyone who can guess
 that name will get reference to the given object). The capability-based
 security of foolscap Referenceables depends upon these swissnums remaining
 secret.

 3: SSL transport sessions [VULNERABLE]. Foolscap runs over SSL, which uses
 random numbers to generate the Diffie-Hellman key agreement parameters. An
 eavesdropper who can guess one of these parameters will be able to determine
 the session key, and can decrypt the remainder of the conversation.

TubIDs are derived from an SSL certificate that OpenSSL generates on demand,
and if the broken version of OpenSSL was used for this purpose, than that
certificate will be guessable. (at some point it would be great to write a
tool that would generate the 128000-ish TubIDs that can be generated by the
broken SSL, to create a blacklist like the ones created by debian/ubuntu for
ssh keys).

So if you've generated a TubID with the broken version of openssl, it is
pretty easy to guess the corresponding private key. This allows an attacker
to mount an undetectable man-in-the-middle attack: if they can convince you
to make your TCP connection to their server instead of the right one, then
they can impersonate the real server, and they'll get to see the unencrypted
conversation (revealing the private swissnums).

Swissnums are generated by calling os.urandom(), which was not affected by
the openssl bug. As long as one of the other problems (man-in-the-middle
attack) doesn't reveal your swissnums to an attacker, access to
Referenceables will remain limited to the parties to whom you've explicitly
granted it (by telling them the swissnum, in a FURL).

Foolscap uses SSL for its encrypted transport, and SSL frequently uses
Diffie-Hellman key negotiation to establish a session key. This key
negotiation process depends upon random numbers, generated by the same buggy
RNG that is used to create keys. So if one of the two ends of an encrypted
session was using the buggy version of openssl, then an attacker may be able
to guess the session key, and thus decrypt the conversation. (note, I'm not a
cryptographer, and I'm not as confident about this attack as I am about the
others). So like the MitM attack, it seems likely that swissnums used by
sessions established during the buggy openssl era may be compromised: an
eavesdropper who recorded that encrypted conversation may be able to decrypt
it after the fact.


Of course, the whole idea of capabilities is to implement the Principle Of
Least Authority: each FURL gives access to a specific Referenceable that will
only do some specific limited task. If an MitM/eavesdropper manages to guess
your supposedly-unguessable swissnums, they'll still only be able to do
whatever the Referenceable will let them do.


So to summarize: if you've been using the buggy openssl libraries, here's
what you need to do:

 1: upgrade openssl
 2: throw out your old FURLs (tell everyone that you've given them to to stop
    using them): this protects clients from the MitM attack.
 3: throw out your old Tub certificates: the certFile= argument to Tub()
    provides a persistent location for this.. just delete that file. This
    prevents clients from ever successfully using the old FURLs to connect
    to your server.
 4: restart the Tub, allowing it to create a new certificate
 5: regenerate and distribute new FURLs

You can also just upgrade openssl (and keep using your old certs and FURLs)
if you're willing to remain vulnerable to man-in-the-middle attacks or
eavesdroppers who have recorded your earlier conversations.


cheers,
 -Brian



From hoganxian at gmail.com  Thu May 22 21:57:49 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Fri, 23 May 2008 09:57:49 +0800
Subject: [Twisted-Python] the sequence of executing defers' callbacks
Message-ID: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>

Hi All,

This is a fundamental question about Twisted.

In the normal case, all the callbacks belonging to one defer object will be
triggered following the chain sequence. ( Let's assume no errback will be
fired.)

such as callback1--->callbac2--->callbackN.

However, if I want to trigger callback1 when MSG1 is ready, callback2 when
MSG2 is ready, and so on, how can I do that?

Of course, the MSGs are coming at random sequence.

Thanks in advance,
Xian Chen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080523/87b0fae8/attachment.htm 

From terry at jon.es  Thu May 22 22:12:50 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 23 May 2008 04:12:50 +0200
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: Your message at 09:57:49 on Friday, 23 May 2008
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <18486.10274.120542.748174@jon.es>

>>>>> "Xian" == Xian Chen <hoganxian at gmail.com> writes:

Xian> However, if I want to trigger callback1 when MSG1 is ready, callback2
Xian> when MSG2 is ready, and so on, how can I do that?
Xian> Of course, the MSGs are coming at random sequence.

Hi Xian

Do you have multiple functions that are returning these MSGx results?
If so, it sounds like you might be looking for DeferredList. See the
docs at

  http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Terry



From camrdale at gmail.com  Thu May 22 22:22:56 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 22 May 2008 19:22:56 -0700
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <f4438a6a0805221922t237980d8j77c1e81840eb135a@mail.gmail.com>

On 5/22/08, Xian Chen <hoganxian at gmail.com> wrote:
> However, if I want to trigger callback1 when MSG1 is ready, callback2 when
> MSG2 is ready, and so on, how can I do that?
>
> Of course, the MSGs are coming at random sequence.

I do something like that, but I could not do it with a single
deferred. I think the only way is to use a deferred per message. Then
callback the appropriate deferred when its message arrives. That's all
I can suggest given the limited information.

Cameron



From andrew-twisted at puzzling.org  Thu May 22 22:26:36 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 May 2008 12:26:36 +1000
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <20080523022636.GD30749@steerpike.home.puzzling.org>

Xian Chen wrote:
> Hi All,
> 
> This is a fundamental question about Twisted.
> 
> In the normal case, all the callbacks belonging to one defer object will be
> triggered following the chain sequence. ( Let's assume no errback will be
> fired.)
> 
> such as callback1--->callbac2--->callbackN.
> 
> However, if I want to trigger callback1 when MSG1 is ready, callback2 when MSG2
> is ready, and so on, how can I do that?
> 
> Of course, the MSGs are coming at random sequence.

It sounds like you don't want a callback chain at all.  Do you really want
all callbacks from 3 to N run when MSG3 arrives?  That sounds strange.

I'm guessing you want a simple dispatch function as the callback on the
Deferred.  i.e., something roughly like this:

    def dispatchMessage(msg):
        handler = messageHandlersDict[msg.id]
        return handler.run(msg)

    d.addCallback(dispatchMessage)

How messageHandlersDict is populated depends on exactly what you're doing...

It's not clear from your email whether ?MSG1?, ?MSG2? etc refer to different
message types, or messages tagged with a session/request identifier, or
something else.  So if my advice doesn't make sense to you, maybe reply with a
bit more detail about what you're doing, and what you want to happen?

-Andrew.




From hoganxian at gmail.com  Thu May 22 23:20:26 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Fri, 23 May 2008 11:20:26 +0800
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <20080523022636.GD30749@steerpike.home.puzzling.org>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
	<20080523022636.GD30749@steerpike.home.puzzling.org>
Message-ID: <a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>

As you said, what I really want is a dispatcher which can dispatch different
msgs to corresponding callbacks.

Of course, I can write a dispatchMessage(msg) function by using lots of "if
... else ", but I want a more elegant way. I hope defers can help me.

I got the same idea with Cameron, maybe it is not very efficient way to
define one defer object for one msg.

So, I come here to ask whether you guys has a better way or not.

Thanks,
Xian

On Fri, May 23, 2008 at 10:26 AM, Andrew Bennetts <
andrew-twisted at puzzling.org> wrote:

> Xian Chen wrote:
> > Hi All,
> >
> > This is a fundamental question about Twisted.
> >
> > In the normal case, all the callbacks belonging to one defer object will
> be
> > triggered following the chain sequence. ( Let's assume no errback will be
> > fired.)
> >
> > such as callback1--->callbac2--->callbackN.
> >
> > However, if I want to trigger callback1 when MSG1 is ready, callback2
> when MSG2
> > is ready, and so on, how can I do that?
> >
> > Of course, the MSGs are coming at random sequence.
>
> It sounds like you don't want a callback chain at all.  Do you really want
> all callbacks from 3 to N run when MSG3 arrives?  That sounds strange.
>
> I'm guessing you want a simple dispatch function as the callback on the
> Deferred.  i.e., something roughly like this:
>
>    def dispatchMessage(msg):
>        handler = messageHandlersDict[msg.id]
>        return handler.run(msg)
>
>    d.addCallback(dispatchMessage)
>
> How messageHandlersDict is populated depends on exactly what you're
> doing...
>
> It's not clear from your email whether "MSG1", "MSG2" etc refer to
> different
> message types, or messages tagged with a session/request identifier, or
> something else.  So if my advice doesn't make sense to you, maybe reply
> with a
> bit more detail about what you're doing, and what you want to happen?
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080523/2cbf480d/attachment.htm 

From radix at twistedmatrix.com  Fri May 23 08:51:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 23 May 2008 08:51:02 -0400
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
	<20080523022636.GD30749@steerpike.home.puzzling.org>
	<a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>
Message-ID: <60ed19d40805230551n5291ef6cn45ceea9af5edf0d0@mail.gmail.com>

On Thu, May 22, 2008 at 11:20 PM, Xian Chen <hoganxian at gmail.com> wrote:
> As you said, what I really want is a dispatcher which can dispatch different
> msgs to corresponding callbacks.
>
> Of course, I can write a dispatchMessage(msg) function by using lots of "if
> ... else ", but I want a more elegant way. I hope defers can help me.

Here's an idiom that's served me well in the past: instead of using
lots of 'if...else', use getattr(self, 'handle_' +
messageName)(message). Replace 'handle_' with something appropriate
for your message system.

Decorators are also getting common as a way to register handlers for
particular types of messages.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From kevin.horn at gmail.com  Fri May 23 13:29:44 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 23 May 2008 12:29:44 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
Message-ID: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>

Howdy list,

I'm trying to implement a protocol using Twisted which has a "STARTTLS"
command to switch the protocol from plain TCP to TCP over TLS.

I've mostly been going by the way that the imap4.py module seems to do it,
but I can't seem to get a handshake to complete.

I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes )
which was helpful, but I don't want to force client cert authentication.

In order to separate this problem from other issues, I've adapted the echo
protocol code from above the above page to try and get a simple test case
(my code below)

I am recieving the following output and traceback when running the client
code ( on both Windows and Linux ):

using TLSv1:

>tls_echoclient.py

Sending: Hello, world!
receive: ERROR: Must authenticate
Sending: STARTTLS
receive: READY
Sending: Continuing
connection lost (protocol)
connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert handshake
failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
Traceback (most recent call last):
  File "C:\Documents and
Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
line 58, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
223, in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
234, in mainLoop
    self.doIteration(t)
  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
line 140, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
<< SNIP >>
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
in stop
    "Can't stop reactor that isn't running.")
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
running.

What am I doing wrong?  Is there a SSL config option I'm setting
incorrectly?  Do I need to use a different SSL Context? Am I totally off
base?

Thanks,

Kevin Horn

========= tls_echoserver.py

# adapted from: http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

import sys
from OpenSSL import SSL
from twisted.python import log
from twisted.internet import ssl, reactor
from twisted.protocols.basic import LineReceiver
from twisted.internet.protocol import Factory

private_key_file = "privkey_dsa.pem"
cert_file_name = "cacert.pem"
sslmethod = ssl.SSL.TLSv1_METHOD
#~ sslmethod = ssl.SSL.SSLv23_METHOD

class Echo(LineReceiver):
    donetls = 0
    def sendLine(self, line):
        print "Sending:",line
        LineReceiver.sendLine(self,line)

    def lineReceived(self, line):
        print "Got:",line
        if self.donetls:
            print "Sending OK"
            self.transport.write("OK")
        elif line == "STARTTLS":
            self.sendLine("READY")
            #~ self.tlsCtx = CtxFactory()
            self.tlsCtx = ssl.DefaultOpenSSLContextFactory(private_key_file,

                                                cert_file_name,
                                                sslmethod)
            self.transport.startTLS(self.tlsCtx)
            self.donetls = 1
        else:
            self.sendLine("ERROR: Must authenticate")

factory = Factory()
factory.protocol = Echo
reactor.listenTCP(8000, factory)
reactor.run()

========= tls_echoclient.py

# adapted from: http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

from OpenSSL import SSL
import sys

from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver
from twisted.internet import ssl, reactor

class EchoClient(LineReceiver):
    end="Bye-bye!"
    def connectionMade(self):
        self.sendLine("Hello, world!")  # Signals error

    def connectionLost(self, reason):
        print 'connection lost (protocol)'
        reactor.stop()

    def sendLine(self, line):
        print "Sending:",line
        LineReceiver.sendLine(self,line)

    def lineReceived(self, line):
        print "receive:", line
        if line == "ERROR: Must authenticate":
            self.sendLine("STARTTLS")
        elif line == "READY":
            #~ self.ctx = CxtFactory()
            self.ctx = ssl.ClientContextFactory()
            self.ctx.method = ssl.SSL.TLSv1_METHOD
            #~ self.ctx.method = ssl.SSL.SSLv23_METHOD
            self.transport.startTLS(self.ctx)
            self.sendLine("Continuing");
        else:
            self.sendLine("wibble")

class EchoClientFactory(ClientFactory):
    protocol = EchoClient

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()
        reactor.stop()

factory = EchoClientFactory()
reactor.connectTCP('localhost', 8000, factory)
reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080523/5d57088c/attachment.htm 

From exarkun at divmod.com  Fri May 23 16:32:16 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 May 2008 16:32:16 -0400
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>
Message-ID: <20080523203216.4714.1408844087.divmod.quotient.2162@ohm>

On Fri, 23 May 2008 12:29:44 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>Howdy list,
>
>I'm trying to implement a protocol using Twisted which has a "STARTTLS"
>command to switch the protocol from plain TCP to TCP over TLS.
>
>I've mostly been going by the way that the imap4.py module seems to do it,
>but I can't seem to get a handshake to complete.
>
>I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes )
>which was helpful, but I don't want to force client cert authentication.
>
>In order to separate this problem from other issues, I've adapted the echo
>protocol code from above the above page to try and get a simple test case
>(my code below)
>
>I am recieving the following output and traceback when running the client
>code ( on both Windows and Linux ):
>
>using TLSv1:
>
>>tls_echoclient.py
>
>Sending: Hello, world!
>receive: ERROR: Must authenticate
>Sending: STARTTLS
>receive: READY
>Sending: Continuing
>connection lost (protocol)
>connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert handshake
>failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>Traceback (most recent call last):
>  File "C:\Documents and
>Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
>line 58, in <module>
>    reactor.run()
>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>223, in run
>    self.mainLoop()
>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>234, in mainLoop
>    self.doIteration(t)
>  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
>line 140, in doSelect
>    _logrun(selectable, _drdw, selectable, method, dict)
>--- <exception caught here> ---
>  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
>callWithLogger
>    return callWithContext({"system": lp}, func, *args, **kw)
><< SNIP >>
>  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
>in stop
>    "Can't stop reactor that isn't running.")
>twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>running.
>
>What am I doing wrong?  Is there a SSL config option I'm setting
>incorrectly?  Do I need to use a different SSL Context? Am I totally off
>base?
>
>Thanks,
>

The traceback here is just because you're calling reactor.stop() twice,
once in Protocol.connectionLost, then again in Factory.clientConnectionLost.
Get rid of one of these and at least you'll get rid of some spurious noise.

As far as the TLS part of your code goes, it basically looks okay.  By doing
a sendLine immediately before you call startTLS, you risk running into #686,
but if you actually hit that, you should see a warning and the connection
should be closed without an OpenSSL error.

So I'm not exactly sure what problem you're encountering.  To further
complicate matters, when I run your code, TLS is successfully negotiated.

Jean-Paul



From kevin.horn at gmail.com  Fri May 23 18:31:39 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 23 May 2008 17:31:39 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <20080523203216.4714.1408844087.divmod.quotient.2162@ohm>
References: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>
	<20080523203216.4714.1408844087.divmod.quotient.2162@ohm>
Message-ID: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>

On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 23 May 2008 12:29:44 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
>
>> Howdy list,
>>
>> I'm trying to implement a protocol using Twisted which has a "STARTTLS"
>> command to switch the protocol from plain TCP to TCP over TLS.
>>
>> I've mostly been going by the way that the imap4.py module seems to do it,
>> but I can't seem to get a handshake to complete.
>>
>> I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes)
>> which was helpful, but I don't want to force client cert authentication.
>>
>> In order to separate this problem from other issues, I've adapted the echo
>> protocol code from above the above page to try and get a simple test case
>> (my code below)
>>
>> I am recieving the following output and traceback when running the client
>> code ( on both Windows and Linux ):
>>
>> using TLSv1:
>>
>>  tls_echoclient.py
>>>
>>
>> Sending: Hello, world!
>> receive: ERROR: Must authenticate
>> Sending: STARTTLS
>> receive: READY
>> Sending: Continuing
>> connection lost (protocol)
>> connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert
>> handshake
>> failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>> Traceback (most recent call last):
>>  File "C:\Documents and
>>
>> Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
>> line 58, in <module>
>>   reactor.run()
>>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>> 223, in run
>>   self.mainLoop()
>>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>> 234, in mainLoop
>>   self.doIteration(t)
>>  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
>> line 140, in doSelect
>>   _logrun(selectable, _drdw, selectable, method, dict)
>> --- <exception caught here> ---
>>  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
>> callWithLogger
>>   return callWithContext({"system": lp}, func, *args, **kw)
>> << SNIP >>
>>  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
>> in stop
>>   "Can't stop reactor that isn't running.")
>> twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>> running.
>>
>> What am I doing wrong?  Is there a SSL config option I'm setting
>> incorrectly?  Do I need to use a different SSL Context? Am I totally off
>> base?
>>
>> Thanks,
>>
>>
> The traceback here is just because you're calling reactor.stop() twice,
> once in Protocol.connectionLost, then again in
> Factory.clientConnectionLost.
> Get rid of one of these and at least you'll get rid of some spurious noise.
>

Thanks for responding, Jean-Paul, and thanks for the tip.  I've been so
consumed
with reading through the noise that for some reason it never occurred to me
to try
and get rid of it.

As far as the TLS part of your code goes, it basically looks okay.  By doing
> a sendLine immediately before you call startTLS, you risk running into
> #686,
> but if you actually hit that, you should see a warning and the connection
> should be closed without an OpenSSL error.
>
> So I'm not exactly sure what problem you're encountering.  To further
> complicate matters, when I run your code, TLS is successfully negotiated.
>
Jean-Paul



Well that's ... frustrating.  I was hoping I had just overlooked something
obvious (and easy to fix!)

Can you tell me more about the environment you are running under?

So far I've tried:
WinXP,  Python 2.5, Twisted 8.0.1, pyOpenSSL 0.7, OpenSSL 0.9.8g
Linux(CentOS), Python 2.4, Twisted 8.1.0, pyOpenSSL 0.7, OpenSSL 0.9.7a

Perhaps there is something wrong with my certificates?  I would expect that
this would cause errors on the server end, though...

Is there any way to get more information about the handshake failure?

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080523/1d7edf0e/attachment.htm 

From exarkun at divmod.com  Sat May 24 11:57:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 24 May 2008 11:57:34 -0400
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>
Message-ID: <20080524155734.4714.876831419.divmod.quotient.2277@ohm>

On Fri, 23 May 2008 17:31:39 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
>wrote:
>
> [snop]
>
>
>Well that's ... frustrating.  I was hoping I had just overlooked something
>obvious (and easy to fix!)
>
>Can you tell me more about the environment you are running under?
>
>So far I've tried:
>WinXP,  Python 2.5, Twisted 8.0.1, pyOpenSSL 0.7, OpenSSL 0.9.8g
>Linux(CentOS), Python 2.4, Twisted 8.1.0, pyOpenSSL 0.7, OpenSSL 0.9.7a

I tried with Ubuntu 7.10, Python 2.5.1, Twisted trunk at HEAD, OpenSSL
0.9.8e-5ubuntu3, pyOpenSSL 0.6-2.3ubuntu1.  I also tried with the
Twisted 2.5 release branch.  I don't have pyOpenSSL 0.7 handy at the
moment.  Maybe you could give 0.6 a try?  I can't think of any changes
between those versions that might be causing this, but one never knows.

Jean-Paul

>Perhaps there is something wrong with my certificates?  I would expect that
>this would cause errors on the server end, though...

Seems like the cert is probably fine, yea.  I'm attaching the one I tested
with so you can give it a try, though.

>Is there any way to get more information about the handshake failure?

ssldump might tell you something, but you'll have to dig a bit and do some
interpretation.  And it might just end up telling you that the handshake
is failing.

Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: server.pem
Type: application/octet-stream
Size: 1851 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080524/ba7c07f9/attachment.obj 

From kevin.horn at gmail.com  Sat May 24 23:21:14 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 24 May 2008 22:21:14 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <20080524155734.4714.876831419.divmod.quotient.2277@ohm>
References: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>
	<20080524155734.4714.876831419.divmod.quotient.2277@ohm>
Message-ID: <562bcc10805242021i66a04b7dy898781280913ec1b@mail.gmail.com>

On Sat, May 24, 2008 at 10:57 AM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 23 May 2008 17:31:39 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
>
>> On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
>> wrote:
>>
>> [snip]
>
>
> I tried with Ubuntu 7.10, Python 2.5.1, Twisted trunk at HEAD, OpenSSL
> 0.9.8e-5ubuntu3, pyOpenSSL 0.6-2.3ubuntu1.  I also tried with the
> Twisted 2.5 release branch.  I don't have pyOpenSSL 0.7 handy at the
> moment.  Maybe you could give 0.6 a try?  I can't think of any changes
> between those versions that might be causing this, but one never knows.
>
> Jean-Paul
>
>  Perhaps there is something wrong with my certificates?  I would expect
>> that
>> this would cause errors on the server end, though...
>>
>
> Seems like the cert is probably fine, yea.  I'm attaching the one I tested
> with so you can give it a try, though.
>

OK, tested on Win2K, Python 2.4, Twisted 8.1.0, PyOpenSSL 0.7, OpenSSL
0.9.8g

using your cert...TLS handshake succeeded.

using my cert...same error as before

so there definitely seems to be something wrong with my certificate files

What procedure and/or OpenSSL commands did you use to create yours?  Maybe
I'm doing something incorrectly when creating certs?

Nice to see my code working though...thanks for your help so far!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080524/d17d1c46/attachment.htm 

From exarkun at twistedmatrix.com  Sun May 25 00:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1211688308.51.1942120511@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080525/d5a8d1fe/attachment.htm 

From jo.vermeulen at gmail.com  Mon May 26 06:49:12 2008
From: jo.vermeulen at gmail.com (Jo Vermeulen)
Date: Mon, 26 May 2008 12:49:12 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with Twisted
	words
Message-ID: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>

Hello,

I am trying to create a chat bot that can work over both the XMPP and the
MSN protocol using Twisted words. I have a couple of questions as a Twisted
newbie :-)

Is there any documentation on how to create a protocol-agnostic chatbot with
Twisted words? Or are there applications using Twisted words that offer
multiple front-ends?

I have a XMPP version working, but had some problems finding my way around a
few features. I don't know how to get a list of contacts, or initiatiate a
group chat. Even if I succeed in doing this, would it be possible to
generalize this for both XMPP and MSN?

Finally, I was wondering how mature Twisted words is. It seems to work well
for XMPP, but how mature is the MSN support? Are there other libraries I
could consider, or is it possible to generalize other libraries within
Twisted?

Thanks in advance!

-- Jo Vermeulen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080526/56a4e9f4/attachment.htm 

From adelagon at gmail.com  Mon May 26 08:37:06 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 26 May 2008 20:37:06 +0800
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
Message-ID: <7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>

There's a twisted MSNP8 (or is it MSNP9) implementation. It's experimental
but it works. I managed to write an MSN gateway for XMPP deriving most of
the codes from it.

----
Alvin Delagon

On Mon, May 26, 2008 at 6:49 PM, Jo Vermeulen <jo.vermeulen at gmail.com>
wrote:

> Hello,
>
> I am trying to create a chat bot that can work over both the XMPP and the
> MSN protocol using Twisted words. I have a couple of questions as a Twisted
> newbie :-)
>
> Is there any documentation on how to create a protocol-agnostic chatbot
> with Twisted words? Or are there applications using Twisted words that offer
> multiple front-ends?
>
> I have a XMPP version working, but had some problems finding my way around
> a few features. I don't know how to get a list of contacts, or initiatiate a
> group chat. Even if I succeed in doing this, would it be possible to
> generalize this for both XMPP and MSN?
>
> Finally, I was wondering how mature Twisted words is. It seems to work well
> for XMPP, but how mature is the MSN support? Are there other libraries I
> could consider, or is it possible to generalize other libraries within
> Twisted?
>
> Thanks in advance!
>
> -- Jo Vermeulen
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080526/c9a9691a/attachment.htm 

From jo.vermeulen at gmail.com  Mon May 26 09:03:14 2008
From: jo.vermeulen at gmail.com (Jo Vermeulen)
Date: Mon, 26 May 2008 15:03:14 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
Message-ID: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>

Hello Alvin,

Thanks, MSNP8 should be enough for a chat bot. I'll have a look at the
twisted.im module, it seems to contain a basic multi-protocol chat client.

I had another question about the Jabber example (xmpp_client.py) in Twisted
words. When I quit the application with Ctrl+C, it throws an exception:

Disconnected.
Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 228, in mainLoop
    self.runUntilCurrent()
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
561, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
414, in _continueSystemEvent
    callable(*args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
375, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 48, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 33, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 576,
in connectionLost
    Connection.connectionLost(self, reason)
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 416,
in connectionLost
    protocol.connectionLost(reason)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py",
line 82, in connectionLost
    self.dispatch(self, STREAM_END_EVENT)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 227, in dispatch
    self._eventObservers[(priority, event)].callback(object)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 37, in callback
    methodwrapper(*args, **kwargs)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 21, in __call__
    self.method(*nargs, **nkwargs)
  File "xmpp_client.py", line 58, in disconnected
    reactor.stop()
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
342, in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running

Is there any way to modify this example so that it stops gracefully when
Ctrl+C is pressed? Embedding the main script code in a try-except statement
that catches KeyboardInterrupt doesn't help since Twisted seems to catch all
exceptions itself.

I read about deferred's and errbacks, but I don't know where to add an
errback to in the XMPP example. To the client? The XmlStream? The reactor?

Any pointers would be greatly appreciated ...

Thanks!

-- Jo

On Mon, May 26, 2008 at 2:37 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> There's a twisted MSNP8 (or is it MSNP9) implementation. It's experimental
> but it works. I managed to write an MSN gateway for XMPP deriving most of
> the codes from it.
>
> ----
> Alvin Delagon
>
> On Mon, May 26, 2008 at 6:49 PM, Jo Vermeulen <jo.vermeulen at gmail.com>
> wrote:
>
>> Hello,
>>
>> I am trying to create a chat bot that can work over both the XMPP and the
>> MSN protocol using Twisted words. I have a couple of questions as a Twisted
>> newbie :-)
>>
>> Is there any documentation on how to create a protocol-agnostic chatbot
>> with Twisted words? Or are there applications using Twisted words that offer
>> multiple front-ends?
>>
>> I have a XMPP version working, but had some problems finding my way around
>> a few features. I don't know how to get a list of contacts, or initiatiate a
>> group chat. Even if I succeed in doing this, would it be possible to
>> generalize this for both XMPP and MSN?
>>
>> Finally, I was wondering how mature Twisted words is. It seems to work
>> well for XMPP, but how mature is the MSN support? Are there other libraries
>> I could consider, or is it possible to generalize other libraries within
>> Twisted?
>>
>> Thanks in advance!
>>
>> -- Jo Vermeulen
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080526/168d5cb3/attachment.htm 

From twisted at ralphm.ik.nu  Mon May 26 11:39:51 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 May 2008 17:39:51 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
Message-ID: <1211816391.17583.31.camel@zwerf>

On Mon, 2008-05-26 at 12:49 +0200, Jo Vermeulen wrote:
> I have a XMPP version working, but had some problems finding my way
> around a few features. I don't know how to get a list of contacts, or
> initiatiate a group chat.

There is no such abstraction in Twisted for XMPP, yet. I've worked on a
framework for implementing XMPP's 'subprotocols' in the Wokkel library
[1] and this framework has been contributed back into Twisted recently,
and has been part of the Twisted 8.0.1 release. On top of that there are
several of such subprotocols implemented in Wokkel, among them the
protocol implementations for dealing with rosters (client and server
side). All of those should eventually go back in Twisted when I get
around to it.

As far as I know, there is no implementation for the client side of the
multi-user chat (MUC) protocol yet built on Twisted, although there is a
MUC service called Palaver. Its authors are considering rewriting the
protocol handling part to match the subprotocol abstraction I mentioned
above.

>? Even if I succeed in doing this, would it be possible to generalize
> this for both XMPP and MSN?

Sure. No one has stepped up to make that happen, recently. Personally, I
have very little interest in supporting closed protocols like MSN's.
However, there is the concept of XMPP gateways to other IM networks that
might be useful for you. It would allow you to create a bot that talks
using one protocol (XMPP).

> Finally, I was wondering how mature Twisted words is. It seems to work
> well for XMPP, but how mature is the MSN support? Are there other
> libraries I could consider, or is it possible to generalize other
> libraries within Twisted?

I would say that the XMPP and IRC parts of Words have seen the most
activity recently. The XMPP stuff works well, supports a fair number of
projects, but is a bit spartan. I'm working hard to address the latter,
though.

I cannot comment much on the other parts, although I know there has been
work on Twisted based XMPP gateways to AIM and ICQ, that have more
mature implementations of those than what is currently in Words. So far
there hasn't been much progress to move those improvements back into
Words [2].

[1] http://wokkel.ik.nu/
[2] http://twistedmatrix.com/trac/ticket/1081

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Mon May 26 12:02:21 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 May 2008 18:02:21 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
Message-ID: <1211817741.17583.45.camel@zwerf>

On Mon, 2008-05-26 at 15:03 +0200, Jo Vermeulen wrote:
> [..]
>
> I had another question about the Jabber example (xmpp_client.py) in
> Twisted words. When I quit the application with Ctrl+C, it throws an
> exception:
> 
> [..]

I haven't seen that behavior before, but I can confirm this happens. I
poked around a bit with the example. It seems that the socket is closed
before its factory is shut down. It might be that the reactor shutdown
procedure has changed, so I think this behavior is the result of a bug,
either in the example or somewhere else. It needs more investigation, so
it would be nice if you could file a ticket for it.

> Is there any way to modify this example so that it stops gracefully
> when Ctrl+C is pressed? Embedding the main script code in a try-except
> statement that catches KeyboardInterrupt doesn't help since Twisted
> seems to catch all exceptions itself.

I don't know of a good solution, at the moment. If the above bug gets
resolved, you shouldn't need to do anything beyond that.

-- 
Groetjes,

ralphm




From glyph at divmod.com  Mon May 26 14:35:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 26 May 2008 18:35:18 -0000
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
Message-ID: <20080526183518.25821.863986031.divmod.xquotient.8778@joule.divmod.com>

On 01:03 pm, jo.vermeulen at gmail.com wrote:
>Thanks, MSNP8 should be enough for a chat bot. I'll have a look at the
>twisted.im module, it seems to contain a basic multi-protocol chat 
>client.

Thanks!  I would like to encourage you to look at this code, but be 
warned: it's pretty old, not very well tested, and not very well 
documented.  I really hope that you stick with it and help us fix it up. 
Just don't expect it to work out of the box :).

(It should actually be in twisted.words.im, in any version of Twisted 
that you should even consider using today...)



From mailing_lists at evotex.ch  Tue May 27 03:45:30 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 27 May 2008 09:45:30 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <1211469365.6544.14.camel@zwerf>
References: <4832F351.2070603@evotex.ch>
	<1211305035.6573.43.camel@zwerf>	<48342C49.8020509@evotex.ch>
	<1211469365.6544.14.camel@zwerf>
Message-ID: <483BBC1A.8090307@evotex.ch>

Ralph Meijer wrote:
> On Wed, 2008-05-21 at 16:06 +0200, Gabriel Rossetti wrote:
>   
>> Ralph Meijer wrote:
>>     
>>> On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
>>>   
>>>       
>>>> Hello,
>>>>
>>>> I am using xmlstream.XmlStream to process...XML streams :-)
>>>> I'm having a bit of a problem, I have a client and a server, both 
>>>> protocols inherit from xmlstream.XmlStream. When the client sends 4 
>>>> messages, one after another, I get a parse error. I debugged my program, 
>>>> and the buffer the expat parser is given contains in effect, 4 messages 
>>>> consecutively like so :
>>>>
>>>> str: 
>>>> <message>...</message><message>...</message><message>...</message><message>...</message>
>>>>
>>>> (I replaced the child elements with "..." for your reading enjoyment)
>>>>
>>>> and I get this Exception when debugging (otherwise it stays hidden) :
>>>>
>>>> ExpatError: junk after document element: line 1, column 196
>>>>
>>>> now column 196 is the end of the 1st msg's root element, I think it 
>>>> doesn't like the next message being right after the first.
>>>>     
>>>>         
>>> That's right. Streaming XML, as implemented by twisted.words.xish, works
>>> by exchanging two complete (virtual) XML documents, one in each
>>> direction. So, you need to have a root element around your messages,
>>> such as 'stream'. The unit of communication is first-level elements of
>>> that root element. So, you start out with sending the start tag of the
>>> root element, and then sending the messages.
>>>
>>> You would set up an observer for your messages like so:
>>>
>>>   def onMessage(message):
>>>       print "Got message!"
>>>
>>>   factory = XmlStreamFactory()
>>>   factory.addBootstrap("/message", onMessage)
>>>   
>>>   
>>>       
>>>> I did 
>>>> override xmlstream.XmlStream.onDocumentEnd()
>>>> because I didn't want it to close the connection in between messages, 
>>>> but in my method I told it to initialize the stream using :
>>>>
>>>> self._initializeStream()
>>>>
>>>> I did this since I noticed that closing the connection forces a new 
>>>> parser to be created when the previous statement is called. The reason I 
>>>> don't want the connection to be closed is that I'd like a persistent 
>>>> connection to be held.
>>>>     
>>>>         
>>> There is no need to do this, what I showed above should meet your
>>> requirements. Also, this method is semi-private (leading _) for a
>>> reason.
>>>
>>>   
>>>       
>> Ralph,
>>
>> Thank you, I understand better now, so I could send a "session" opening 
>> tag (e.g. <session_start>) from each side (one from the client when it 
>> connects and one from the server when the client connects), then 
>> exchange as manny messages as I want in between the two and then when I 
>> am done I send the closing tag (e.g. </session_start>)? Is that correct?
>>     
>
> Yeah, that sounds right. I suggest using <stream/> as the root element.
>
>   
Ralph,

I just wrote a quick minimal client/server to test it, and it works 
great!, thanks a lot!

Gabriel



From mlists at line72.net  Tue May 27 14:45:26 2008
From: mlists at line72.net (Mark Dillavou)
Date: Tue, 27 May 2008 13:45:26 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
Message-ID: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>

I have a large program that is built using wxpython and twisted in which the
client sends commands through ssh (using conch) to the server.  Under linux
I have found some very strange results. If the user is not doing anything
(i.e. not moving the mouse or doing anything to cause the window to redraw),
then conch seems to stop processing and hang the whole twisted loop.  As
soon as the user moves the mouse, clicks a button, or does something to
cause the window to refresh, then conch immediately starts processing again
and the twisted loop begins calling callbacks again.

I can't seem to reproduce this under windows or osx, and it doesn't seem to
always happen under linux with wxgtk2. I have written a dumb little test
program (attached), that hopefully shows this behavior.  After connecting to
a remote machine, through the gui you can specify a command, hit run command
and the stdout will be displayed.

The console prints out the time from two timers.  One is setup using a
reactor.callLater and another is setup using a wx.Timer.  If a command that
takes a while is run (cat a large file) and you don't move the mouse or do
anything to cause the window to refresh, then you will see that the
callLater callback stops being called (although the wx.Timer callback
continues to be called).  As soon as you move the mouse, the callLater
callback begins firing again, and you'll eventually see the output of your
command.

This is really frustrating since we are using conch to send large commands
or to download/upload large files, and it is common for the user to want to
minimize the program and let it run in the background, but with this bug,
twisted stops responding and the file stops sending until the user does
something to cause the window to redraw.

I'm not that familiar with conch, so maybe i'm doing something completely
wrong in my connection code.  Any critique on it would be nice.

Thank you in advance,
/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080527/35a82bd5/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: conch_wx.py
Type: text/x-python
Size: 7410 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080527/35a82bd5/attachment.py 

From exarkun at divmod.com  Tue May 27 16:13:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 May 2008 16:13:11 -0400
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
Message-ID: <20080527201311.4714.556229544.divmod.quotient.2814@ohm>

On Tue, 27 May 2008 13:45:26 -0500, Mark Dillavou <mlists at line72.net> wrote:
>I have a large program that is built using wxpython and twisted in which the
>client sends commands through ssh (using conch) to the server.  Under linux
>I have found some very strange results. If the user is not doing anything
>(i.e. not moving the mouse or doing anything to cause the window to redraw),
>then conch seems to stop processing and hang the whole twisted loop.  As
>soon as the user moves the mouse, clicks a button, or does something to
>cause the window to refresh, then conch immediately starts processing again
>and the twisted loop begins calling callbacks again.

Hi Mark,

I tried your attached program and didn't see the bad behavior you described.
I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?

Differing behavior on different platforms doesn't surprise me at all, since
wx itself has a lot of subtle differences on different platforms.

Jean-Paul



From andrewfr_ice at yahoo.com  Wed May 28 10:36:56 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 28 May 2008 07:36:56 -0700 (PDT)
Subject: [Twisted-Python] Twistd and Duplicate Logs
Message-ID: <726613.20527.qm@web34201.mail.mud.yahoo.com>

Hi Folks:

I use a twistd server under Windows XP and Ubuntu. I
am using Twisted 8.0. I am using log rotation. I
essential copy the log example in Abe Fettig's book.

On a sidenote, I read that logs changed under Twisted
8.1? Should I move to that?

Under Windows XP, the programme runs as expected, it
generates logs  xxx.log, xxx.log.1, xxx.log.2

Under Ubuntu, it generates two sets of logs

xxx.log, xxx.log.1 and twistd.log, twisted.log.1

I am not sure why. What am I missing? Any advice would
be appreciated.

here is a sample of what I do:


class TheLog(log.FileLogObserver):
    
    def emit(self, logEntryDict):
        #if not logEntryDict.get('isError'): return
        log.FileLogObserver.emit(self, logEntryDict)


class TheLogService(service.Service):
    def __init__(self, logName, logDir):
        self.logName = logName
        self.logDir = logDir
        self.maxLogSize = MAX_LOG_FILE_SIZE
        self.theLog = TheLogBuilder()
    
    
    def getLogger(self):
        return self.theLog
    
    
    def startService(self):
        # logfile is a file-like object that supports
rotation
        self.logFile = logfile.LogFile(
            self.logName, self.logDir,
rotateLength=self.maxLogSize)
        self.logFile.rotate() # force rotation each
time restarted
        self.theLog = TheLog(self.logFile)
        self.theLog.start()


    def stopService(self):
        self.theLog.stop()
        self.logFile.close()
        del(self.logFile)


Cheers,
Andrew






      



From knueffle at yahoo.com  Wed May 28 10:52:04 2008
From: knueffle at yahoo.com (Jody Gugelhupf)
Date: Wed, 28 May 2008 10:52:04 -0400 (EDT)
Subject: [Twisted-Python] help with twisted webserver and rpy script
Message-ID: <574311.34916.qm@web36102.mail.mud.yahoo.com>

hi there ppl :)
i have a question, twisted is very new to me, i'm using the twisted webserver to control my
tvcard, i wrote several scripts and got it all working, i also use a rpy script to switch stations
from the website, only that it seems that i need to create for each station a rpy script, i'd
rather have all stations in once rpy file and do it that way, i got it working in php, but is it
possible to write php in rpy? here is an example of one of my rpy scripts to switch stations:

#!/usr/bin/python
import sys
import os
from www.web_types import HTMLResource, FreevoResource

class TestResource(FreevoResource):

    def _render(self, request):
        fv = HTMLResource()
        fv.printHeader(_('LiveTV'), 'styles/main.css',selected=_('Test'))
        form = request.args
        command = "v4lctl setstation MTV"
        os.system(command)
        fv.res += "<html><script language=\"JavaScript\"> close();</script></html>"
        return String( fv.res )
resource = TestResource()



the java stuff is so that when i click on the MTV.rpy link it closes the new window after the
execution of the command, the main site where the MTV.rpy is displayed looks like this:

#!/usr/bin/python
import sys
import os
from www.web_types import HTMLResource, FreevoResource

class TestResource(FreevoResource):

    def _render(self, request):
        fv = HTMLResource()
        fv.printHeader(_('LiveTV'), 'styles/main.css',selected=_('Test'))
        form = request.args
        fv.res += "<html>To start the stream server click <a
href=\"http://10.0.0.1:8085/startstream.rpy\" target=\"_blank\">here.</a> To start the camera
stream server click <a href=\"http://10.0.0.1:8085/startstreamcam.rpy\"
target=\"_blank\">here.</a> To stop the stream-server click<a
href=\"http://195.169.205.24:8085/stopstream.rpy\">here.</a> To switch to the channel you can
simply click on the channel you want to watch. A new window will pop up and close itself
automatically, then the channel should be changed.</html>"
        fv.res += "<html><br><a href=\"MTV.rpy\" target=\"_blank\"> MTV </a> <a href=\"TMF.rpy\"
target=\"_blank\"> TMF </a> <a href=\"national.rpy\" target=\"_blank\"> National Geographic </a>
<a href=\"discovery.rpy\" target=\"_blank\"> Discovery Channel </a> <a href=\"CNN.rpy\"
target=\"_blank\"> CNN </a> <a href=\"BBC1.rpy\" target=\"_blank\"> BBC1 </a> <a href=\"BBC2.rpy\"
target=\"_blank\"> BBC2 </a> <a href=\"net5.rpy\" target=\"_blank\"> Net5 </a> <a
href=\"sbs6.rpy\" target=\"_blank\"> sbs6 </a> <a href=\"veronica.rpy\" target=\"_blank\">
Veronica </a> <a href=\"talpa.rpy\" target=\"_blank\"> talpa </a> <a href=\"rtl4.rpy\"
target=\"_blank\"> rtl4 </a> <a href=\"rtl5.rpy\" target=\"_blank\"> rtl5 </a> <a
href=\"rtl7.rpy\" target=\"_blank\"> rtl7 </a> <a href=\"een.rpy\" target=\"_blank\"> een </a> <a
href=\"euronews.rpy\" target=\"_blank\"> Euronews </a> <a href=\"ard.rpy\" target=\"_blank\"> ARD
</a> <a href=\"zdf.rpy\" target=\"_blank\"> ZDF </a> <a href=\"wdr.rpy\" target=\"_blank\"> WDR
</a> <a href=\"gelderland.rpy\" target=\"_blank\"> TV Gelderland </a> <a href=\"ned1.rpy\"
target=\"_blank\"> Nederland 1 </a> <a href=\"ned2.rpy\" target=\"_blank\"> Nederland 2 </a> <a
href=\"ned3.rpy\" target=\"_blank\"> Nederland 3 </a> <a href=\"ketnet.rpy\" target=\"_blank\">
Ketnet/Canvas </a> <a href=\"lokal.rpy\" target=\"_blank\"> Lokaal Plus </a> <a
href=\"upcinfo.rpy\" target=\"_blank\"> UpcInfo </a> <a href=\"trtint.rpy\" target=\"_blank\">
TRTint </a> <a href=\"rai1.rpy\" target=\"_blank\"> Rai Uno </a> <a href=\"eurosport.rpy\"
target=\"_blank\"> Eurosport </a> <a href=\"nick.rpy\" target=\"_blank\"> Nick/Comedy Central </a>
<a href=\"tellsell.rpy\" target=\"_blank\"> TellSell </a> <a href=\"tv5.rpy\" target=\"_blank\">
TV5 </a> <a href=\"cam.rpy\" target=\"_blank\"> cam </a></br></html>"
        fv.res += "<center><OBJECT ID=\"MediaPlayer\" WIDTH=320 HEIGHT=300
CLASSID=\"CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95\" STANDBY=\"Loading Windows Media Player
components...\" TYPE=\"application/x-oleobject\" /><param name=\"autoStart\" value=\"true\"
/><PARAM NAME=\"error\" VALUE=\"item\" /><PARAM NAME=\"stretchToFit\" VALUE=\"false\" /><PARAM
NAME=\"ShowStatusBar\" VALUE=\"true\" /><PARAM NAME=\"FileName\" VALUE=\"mms://10.0.0.1:8083\" />
<EMBED TYPE=\"application/x-mplayer2\" SRC=\"mms://10.0.0.1:8083\"NAME=\"MediaPlayer\" WIDTH=320
HEIGHT=300 ShowStatusBar=\"1\" /></EMBED></OBJECT></center>"
        return String( fv.res )
resource = TestResource()

as you can see and as i said i need to create for each station a rpy file, can i not somehow put
it all in one or make php work in rpy?

thx for any input :)
jody :D


      __________________________________________________________________
Looking for the perfect gift? Give the gift of Flickr! 

http://www.flickr.com/gift/



From mlists at line72.net  Wed May 28 11:09:05 2008
From: mlists at line72.net (Mark Dillavou)
Date: Wed, 28 May 2008 10:09:05 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <20080527201311.4714.556229544.divmod.quotient.2814@ohm>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
Message-ID: <831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>

On Tue, May 27, 2008 at 3:13 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:
<snip>

> Hi Mark,
>
> I tried your attached program and didn't see the bad behavior you
> described.
> I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
> 2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?
>

I've tried this on ubuntu hardy running:

twisted-2.5.0
python-2.5.1
wxpython-2.8.4.0

And I've also tried on a redhat 4 machine with a custom built version of:

twisted-2.5.0 and twisted-8.0.1
python-2.5.1
wxpython-2.8.6.0

I don't remember having this issue until several months ago.  It's possibly
that we we upgrade from wx-2.6 to wx-2.8 this problem showed up.  Let me
test out an older version of wx and see if I can reproduce this.

/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080528/ab1b39d5/attachment.htm 

From arkanes at gmail.com  Wed May 28 16:10:17 2008
From: arkanes at gmail.com (Chris Mellon)
Date: Wed, 28 May 2008 15:10:17 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
	<831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
Message-ID: <4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>

On Wed, May 28, 2008 at 10:09 AM, Mark Dillavou <mlists at line72.net> wrote:
> On Tue, May 27, 2008 at 3:13 PM, Jean-Paul Calderone <exarkun at divmod.com>
> wrote:
> <snip>
>>
>> Hi Mark,
>>
>> I tried your attached program and didn't see the bad behavior you
>> described.
>> I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
>> 2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?
>
> I've tried this on ubuntu hardy running:
>
> twisted-2.5.0
> python-2.5.1
> wxpython-2.8.4.0
>
> And I've also tried on a redhat 4 machine with a custom built version of:
>
> twisted-2.5.0 and twisted-8.0.1
> python-2.5.1
> wxpython-2.8.6.0
>
> I don't remember having this issue until several months ago.  It's possibly
> that we we upgrade from wx-2.6 to wx-2.8 this problem showed up.  Let me
> test out an older version of wx and see if I can reproduce this.
>

I've seen reports of this from other people, although I can't recreate
it either. It seems to be related to the idle handler that wx installs
in gtk not being serviced, and I think it's related to the gtk
version. As a workaround, try calling wx.WakeUpIdle() in your wx.Timer
function.



From mlists at line72.net  Wed May 28 17:34:19 2008
From: mlists at line72.net (Mark Dillavou)
Date: Wed, 28 May 2008 16:34:19 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
	<831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
	<4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>
Message-ID: <831dbdd20805281434r27e21017k3141c06b0b7e8079@mail.gmail.com>

Chris,

On Wed, May 28, 2008 at 3:10 PM, Chris Mellon <arkanes at gmail.com> wrote:

> <snip>
>
I've seen reports of this from other people, although I can't recreate
> it either. It seems to be related to the idle handler that wx installs
> in gtk not being serviced, and I think it's related to the gtk
> version. As a workaround, try calling wx.WakeUpIdle() in your wx.Timer
> function.


 Setting a wx.Timer to call wx.WakeUpIdle() does fix this problem!  Do you
have a recommendation on how often the timer should fire?  Not firing often
enough (> 500 ms) causes all the network communication to be slow, but what
are the ramifications of setting the timer value really low (1 ms)?

/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080528/30f44f49/attachment.htm 

From lutz_p at gmx.net  Thu May 29 10:06:56 2008
From: lutz_p at gmx.net (=?iso-8859-1?Q?=22Lutz_P=E4like=22?=)
Date: Thu, 29 May 2008 16:06:56 +0200
Subject: [Twisted-Python] chainDeferred does not pass result
Message-ID: <20080529140656.311900@gmx.net>

I was trying to chain two Deferreds together but there is a problem with chainDeferred().
If i add  Deferred object b in the middle of the call chain of  object a, the result is correctly passed on to the branched call chain of b but the call chain of a is broken because b.callback() does not return a result.

Am i missing something or is this a bug ?

The example below illustrates the problem. If you uncomment the line 
deferred_a.chainDeferred(deferred_b)
you should see 
result:  None

Cheers,

Lutz


#----------------
from twisted.internet import defer, reactor

def square(res):
  return res*res

def on_result(res):
  print "result: ", res
  return res

def on_error(err):
  print err
  return err

deferred_a = defer.Deferred()
deferred_b = defer.Deferred()

deferred_a.addCallback(square)
# deferred_a.chainDeferred(deferred_b)
deferred_a.addCallbacks(on_result, on_error)


reactor.callLater(0.0, deferred_a.callback, 3)
reactor.callLater(1.0, reactor.stop)

reactor.run()
#----------------

-- 
Super-Aktion nur in der GMX Spieleflat: 10 Tage f?r 1 Euro.
?ber 180 Spiele downloaden: http://flat.games.gmx.de



From radix at twistedmatrix.com  Thu May 29 10:29:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 29 May 2008 10:29:27 -0400
Subject: [Twisted-Python] chainDeferred does not pass result
In-Reply-To: <20080529140656.311900@gmx.net>
References: <20080529140656.311900@gmx.net>
Message-ID: <60ed19d40805290729j6ee0c3bcnd619b66a755600ce@mail.gmail.com>

On Thu, May 29, 2008 at 10:06 AM, "Lutz P?like" <lutz_p at gmx.net> wrote:
> I was trying to chain two Deferreds together but there is a problem with chainDeferred().
> If i add  Deferred object b in the middle of the call chain of  object a, the result is correctly passed on to the branched call chain of b but the call chain of a is broken because b.callback() does not return a result.
>
> Am i missing something or is this a bug ?
>
> The example below illustrates the problem. If you uncomment the line
> deferred_a.chainDeferred(deferred_b)
> you should see
> result:  None

It's not a bug, it's how chainDeferred is meant to work.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From lutz_p at gmx.net  Thu May 29 10:51:52 2008
From: lutz_p at gmx.net (=?iso-8859-1?Q?=22Lutz_P=E4like=22?=)
Date: Thu, 29 May 2008 16:51:52 +0200
Subject: [Twisted-Python] chainDeferred does not pass result
Message-ID: <20080529145152.274510@gmx.net>

> It's not a bug, it's how chainDeferred is meant to work. 
> -- Christopher Armstrong

Can you explain why ?
Wouldn't it be more useful to allow pulling intermediate results into side branches leaving the main call chain unaffected ? What makes this a wanted behaviour ?

Thanks,

Lutz
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger



From glyph at divmod.com  Thu May 29 19:15:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 May 2008 23:15:15 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
Message-ID: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>

Hello, Twisted community:

I'd really like "twisted" (and our various "dot product" subprojects) to 
be a trademark that the software freedom conservancy can protect and 
defend.  For similar reasons, I'd like to have an unambiguous naming 
convention for projects which are *part* of Twisted versus those which 
are built on it or are compatible with it.

There are a few projects out there that just call themselves "py- 
whatever" but use Twisted (for some reason, none come to mind at the 
moment); that's fine, of course.  The jabber transports which use 
Twisted are pyMSNt, pyICQt; I'm not sure if the "t" stands for 
"transport" or "twisted" :).  There are also a few projects out there 
called "Twisted Whatever" which aren't part of Twisted; I can only hope 
that more projects will want to advertise their association with Twisted 
in this way.

I'd like to suggest, however, that new projects use the word "Twisty" in 
this context rather than the hopefully trademarked "Twisted".  i.e. if 
you are making an implementation of the protocol Bloobloo and want to 
give it a name associated with Twisted, please describe it as "Twisty 
Bloobloo: an implementation of bloobloo for Twisted", and name your 
packages similarly (twistybloobloo.stuff).  Sun has a great webpage 
about how to use their trademarks in this capacity: 
http://www.sun.com/policies/trademarks/.

I'm aware of 3 projects which are currently called "Twisted X" but are 
not actually a part of Twisted.  The first is Twisted Goodies, which was 
named with our explicit permission.  I appreciate that Ed asked first, 
and so he is welcome to continue using that name.  (I'd still prefer 
that it be changed to "Twisty Goodies" just to help establish the 
convention and reduce potential user confusion, but realistically there 
has not been any actual user confusion about that package, and packages 
with our explicit permission I don't believe weaken our copyright 
claim.)

Two other things that I'm aware of using names like this, however, do 
not have our permission, and if those authors are listening here (or if 
someone who knows the authors here could get in touch with them) I'd 
really like their names to be changed: Twisted SNMP and Twisted Storage.

Most of all though I hope that all 1000-odd subscribers to this list 
have their own soon-to-be-released project which can make use of this 
new convention ;).

Also, if a graphic designer out there could help with a modified version 
of the logo that could be used in the way that the Debian "open use" 
images, that would be helpful: http://www.debian.org/logos/#open-use



From jml at mumak.net  Thu May 29 20:11:11 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 10:11:11 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>

On Fri, May 30, 2008 at 9:15 AM,  <glyph at divmod.com> wrote:
> Hello, Twisted community:
>
> I'd really like "twisted" (and our various "dot product" subprojects) to be
> a trademark that the software freedom conservancy can protect and defend.
>  For similar reasons, I'd like to have an unambiguous naming convention for
> projects which are *part* of Twisted versus those which are built on it or
> are compatible with it.
>
[...]
>
> I'd like to suggest, however, that new projects use the word "Twisty" in
> this context rather than the hopefully trademarked "Twisted".  i.e. if you
> are making an implementation of the protocol Bloobloo and want to give it a
> name associated with Twisted, please describe it as "Twisty Bloobloo: an
> implementation of bloobloo for Twisted", and name your packages similarly
> (twistybloobloo.stuff).  Sun has a great webpage about how to use their
> trademarks in this capacity: http://www.sun.com/policies/trademarks/.
>

Some thoughts:

1. The first Google result for "Twisty" for me is Twistys.com (NSFW),
which is all about pictures of scantily clad women.

2. I *still* encounter resistance to Twisted because the name conjures
up images of insanity, perversion, confusion or "unprofessionalism". I
don't think "Twisty" helps with this problem. I'm not sure that this
is a big deal though.

3. Do we have lawyers? What do they say? Can you paste/link their
advice rather than summarizing?

4. In my present situation, most of the things I'm tempted to name
"Twisted%s" are just Deferred-using APIs. It'd be nice to have a
standardish name for these, and "TwistyFoo" is as good as
"DeferredFoo", "AsyncFoo" etc. I hold out a hope that the name will
become an anachronism once Deferreds and Failures are in the stdlib.

jml



From tjstebbing at gmail.com  Thu May 29 20:25:19 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Fri, 30 May 2008 10:25:19 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>

why?

I mean, if you trademark 'Twisted' and developer X goes and calls his
bit of code 'twisted foo' are you going to pursue him in court? To
what end?

If you make it clear you're against people using 'twisted' for twisted
derived products then 99% of the people who are writing twisted
related things will respect your wish, because heck, you're a person
deserving of respect in our community.

The 1% of people who will say stfu, well, who will care about their
project anyway. It just seems like a waste of your time.

Another thought, Twisted is a collective noun for everything that
twisted is, the reactor, deferreds, protocols etc. If someone was to
fork twisted, or implement it in a new language, I don't see how you
could stop them referring to it as 'Twisted Blah', what else are they
going to call it?

How do they refer to the thing that is Twisted without using the word
to describe it> I know people are going to get shirty about the idea
of forking/rewriting anyway, and why would we worry about assisting
people pursuing that use case, but thats why you picked the license
right? to give people those liberties?

trademarking just seems to rub the wrong way, makes people suspicious,
goes against the ethos man ;)

my 2c

tjs

On Fri, May 30, 2008 at 9:15 AM,  <glyph at divmod.com> wrote:
> Hello, Twisted community:
>
> I'd really like "twisted" (and our various "dot product" subprojects) to be
> a trademark that the software freedom conservancy can protect and defend.
>  For similar reasons, I'd like to have an unambiguous naming convention for
> projects which are *part* of Twisted versus those which are built on it or
> are compatible with it.
>
> There are a few projects out there that just call themselves "py- whatever"
> but use Twisted (for some reason, none come to mind at the moment); that's
> fine, of course.  The jabber transports which use Twisted are pyMSNt,
> pyICQt; I'm not sure if the "t" stands for "transport" or "twisted" :).
>  There are also a few projects out there called "Twisted Whatever" which
> aren't part of Twisted; I can only hope that more projects will want to
> advertise their association with Twisted in this way.
>
> I'd like to suggest, however, that new projects use the word "Twisty" in
> this context rather than the hopefully trademarked "Twisted".  i.e. if you
> are making an implementation of the protocol Bloobloo and want to give it a
> name associated with Twisted, please describe it as "Twisty Bloobloo: an
> implementation of bloobloo for Twisted", and name your packages similarly
> (twistybloobloo.stuff).  Sun has a great webpage about how to use their
> trademarks in this capacity: http://www.sun.com/policies/trademarks/.
>
> I'm aware of 3 projects which are currently called "Twisted X" but are not
> actually a part of Twisted.  The first is Twisted Goodies, which was named
> with our explicit permission.  I appreciate that Ed asked first, and so he
> is welcome to continue using that name.  (I'd still prefer that it be
> changed to "Twisty Goodies" just to help establish the convention and reduce
> potential user confusion, but realistically there has not been any actual
> user confusion about that package, and packages with our explicit permission
> I don't believe weaken our copyright claim.)
>
> Two other things that I'm aware of using names like this, however, do not
> have our permission, and if those authors are listening here (or if someone
> who knows the authors here could get in touch with them) I'd really like
> their names to be changed: Twisted SNMP and Twisted Storage.
>
> Most of all though I hope that all 1000-odd subscribers to this list have
> their own soon-to-be-released project which can make use of this new
> convention ;).
>
> Also, if a graphic designer out there could help with a modified version of
> the logo that could be used in the way that the Debian "open use" images,
> that would be helpful: http://www.debian.org/logos/#open-use
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Timothy J Stebbing



From terry at jon.es  Thu May 29 20:39:46 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 30 May 2008 02:39:46 +0200
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: Your message at 10:25:19 on Friday, 30 May 2008
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <18495.19666.61537.755458@jon.es>

>>>>> "Tim" == Tim Stebbing <tjstebbing at gmail.com> writes:

Tim> If someone was to fork twisted, or implement it in a new language, I
Tim> don't see how you could stop them referring to it as 'Twisted Blah',
Tim> what else are they going to call it?

Twisted Sister   (http://en.wikipedia.org/wiki/Twisted_Sister)

Terry



From waterbug at pangalactic.us  Thu May 29 20:52:15 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 29 May 2008 20:52:15 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <483F4FBF.1070204@pangalactic.us>

Hi Glyph,

I think trademarking "twisted" is a good idea, if only to have
a prior claim in the (unlikely) event someone else should
try to claim it for something in the context of software.

I'm not enthusiastic about "twisty" as a naming standard for
anything -- partly from jml's observations and partly just some
aversion to it that I don't understand myself -- if I don't
mind "twisted", why would "twisty" bother me?  I dunno.
(Subconscious association with titty twisters?  <shudder>)

My $.02.

Steve

P.S.  So, did you decide the list was getting too quiet?  ;)



From jml at mumak.net  Thu May 29 21:43:44 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 11:43:44 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>

On Fri, May 30, 2008 at 10:25 AM, Tim Stebbing <tjstebbing at gmail.com> wrote:
> why?
>
> I mean, if you trademark 'Twisted' and developer X goes and calls his
> bit of code 'twisted foo' are you going to pursue him in court? To
> what end?
>

If someone sold a networking library that was called "Twisted" and was
not actually Twisted, I would be unhappy and want them to stop. If the
law could help, then that's great. The same would apply if a company
sold "Twisted Enterprise" based on the real thing.

My understanding is that if it's common for people to make projects
called "Twisted Foo", then it becomes harder to use the law to protect
against this. IANAL, of course.

> trademarking just seems to rub the wrong way, makes people suspicious,
> goes against the ethos man ;)
>

So does reply-before-post :P

More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
all trademarked. The Emacs trademark is held by the FSF, bastions of
ideological purity. So far, I've encountered only one person who finds
this suspicious. Hi Tim :)

jml



From tjstebbing at gmail.com  Thu May 29 22:16:17 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Fri, 30 May 2008 12:16:17 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
Message-ID: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>

> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
> all trademarked. The Emacs trademark is held by the FSF, bastions of
> ideological purity. So far, I've encountered only one person who finds
> this suspicious. Hi Tim :)
>

'other people do this thing so we should also do this thing' is not a
great argument. I'm not against the idea, I just have some questions
we're yet to have answered.

AFAIK if someone infringes you're trademark you are obliged to enforce
your trademark or lose it, the afore mentioned two people Glyph is not
happy with who are using the word 'Twisted' would need to receive a
C&D off the bat. Does Twisted Labs have the resources to put into
maintaining their trademark?

As I mentioned on IRC, we've used Python(R) as part of our name in the
past, notice this list is called 'twisted-python', isn't that being a
bit hypocritical to now say 'people who use twisted cannot append or
propend the word twisted to their project name'?

-- 
Timothy J Stebbing



From andrew-twisted at puzzling.org  Thu May 29 23:03:28 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 May 2008 13:03:28 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <20080530030328.GF24984@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
>
> Two other things that I'm aware of using names like this, however, do  
> not have our permission, and if those authors are listening here (or if  
> someone who knows the authors here could get in touch with them) I'd  
> really like their names to be changed: Twisted SNMP and Twisted Storage.

I guess an important question is why these projects decided to put ?Twisted? in
their name.

For Twisted SNMP, which AIUI is a library that implements the SNMP protocol for
Twisted, the reason seems to be fairly obvious: it's an obvious name, and
shorter than ?SNMP implementation for use with Twisted?.  It's a library that
builds on/extends the Twisted library.  I guess calling it ?Twisty SNMP? or even
a literal ?Mike's SNMP for Twisted? would be fine as well.

Twisted Storage appears to be an application.  I'm not sure why they put Twisted
in their name; I'm sure Twisted is a useful platform for them to build on, but I
don't see it as being any fundamental to their application.  It could just as
easily be called ?Python Storage?.  Frankly if I were them I'd try to find a
more independent and distinctive name ? what if they one day rewrite half their
code to use something else? :)

So I guess they chose to include Twisted because they like Twisted, and want to
borrow some of Twisted's reputation for their own project.  We probably ought to
actually ask them why, it might be useful to know.

One last thought: what should Debian packages like ?python-twisted-snmp? be
called?  I'm guessing that's an ok name as is: in much the same way that
?python-twisted? is a reasonable name for a package *for* Python without
implying that Twisted is part of Python, ?python-twisted-snmp? seems like a
reasonable name for a package *for* Twisted, without necessarily implying that
it is part of official Twisted.

-Andrew.




From jml at mumak.net  Thu May 29 23:09:20 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 13:09:20 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
Message-ID: <d06a5cd30805292009l663319b8rb531c28641ba0216@mail.gmail.com>

On Fri, May 30, 2008 at 12:16 PM, Tim Stebbing <tjstebbing at gmail.com> wrote:
>> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
>> all trademarked. The Emacs trademark is held by the FSF, bastions of
>> ideological purity. So far, I've encountered only one person who finds
>> this suspicious. Hi Tim :)
>>
>
> 'other people do this thing so we should also do this thing' is not a
> great argument. I'm not against the idea, I just have some questions
> we're yet to have answered.
>

That's not what I said.

You said "trademarks make people suspicious". I provided
counter-examples, demonstrating that your statement is not true in the
general case.

jml



From asset at impactdamage.com  Thu May 29 23:40:32 2008
From: asset at impactdamage.com (asset)
Date: Thu, 29 May 2008 20:40:32 -0700
Subject: [Twisted-Python] How-to raise errors with sshclient conch example
	in Twisted book
Message-ID: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>


Ref: http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/ 

Im new to Twisted and am trying to learn as quickly as I can.  I apologize if this question is a waste of anybody's time.

When working the with sshclient.py example (from the Twisted book, and the link above) I find the reactor hangs and does not raise an exception on connection failures or failed authentication.

Ive been trying to work out how to catch these situations and shut down the reactor; or cleanup for another attempt, yet I cant seem to wrap my head around it.

I imagine this is trivial and Im totally missing it.

Any help would be greatly appreciated.

Thx,

TKiel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080529/7dee4a72/attachment.htm 

From glyph at divmod.com  Thu May 29 23:43:39 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 03:43:39 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <483F4FBF.1070204@pangalactic.us>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<483F4FBF.1070204@pangalactic.us>
Message-ID: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>

On 12:52 am, waterbug at pangalactic.us wrote:
>I think trademarking "twisted" is a good idea, if only to have
>a prior claim in the (unlikely) event someone else should
>try to claim it for something in the context of software.

Thanks.
>I'm not enthusiastic about "twisty" as a naming standard for
>anything -- partly from jml's observations and partly just some
>aversion to it that I don't understand myself -- if I don't
>mind "twisted", why would "twisty" bother me?  I dunno.

I am not particularly enthusiastic about the term myself, personally.  I 
think we need some word to fill that role (the one that "Py" fills for 
Python) but please feel free to suggest something else.  It doesn't have 
to be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a 
home lighting control project that uses twisted so we can have 
"TwiLight".)



From drew.smathers at gmail.com  Fri May 30 00:10:10 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 30 May 2008 00:10:10 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
Message-ID: <368574aa0805292110o4c59031fob5550f598b2f2135@mail.gmail.com>

On Thu, May 29, 2008 at 11:43 PM,  <glyph at divmod.com> wrote:
> On 12:52 am, waterbug at pangalactic.us wrote:
>>
>> I think trademarking "twisted" is a good idea, if only to have
>> a prior claim in the (unlikely) event someone else should
>> try to claim it for something in the context of software.
>
> Thanks.
>>
>> I'm not enthusiastic about "twisty" as a naming standard for
>> anything -- partly from jml's observations and partly just some
>> aversion to it that I don't understand myself -- if I don't
>> mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  I
> think we need some word to fill that role (the one that "Py" fills for
> Python) but please feel free to suggest something else.  It doesn't have to
> be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a home
> lighting control project that uses twisted so we can have "TwiLight".)
>

I think "Twi" is problematic because it's on the cusp of becoming a
word, or even worse, too easily mistaken for an acronym (and a rather
pedestrian sounding acronym due to the closeness to the airliner TWA).
 Also Twi SNMP, Twi Storage, and Twi Goodies all sound (and read)
horribly as project names.  My vote is for just "Tw" or the word
"Twist".

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From mailing_lists at evotex.ch  Fri May 30 02:34:11 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 30 May 2008 08:34:11 +0200
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
Message-ID: <483F9FE3.8080604@evotex.ch>

glyph at divmod.com wrote:
> On 12:52 am, waterbug at pangalactic.us wrote:
>> I think trademarking "twisted" is a good idea, if only to have
>> a prior claim in the (unlikely) event someone else should
>> try to claim it for something in the context of software.
>
> Thanks.
>> I'm not enthusiastic about "twisty" as a naming standard for
>> anything -- partly from jml's observations and partly just some
>> aversion to it that I don't understand myself -- if I don't
>> mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  
> I think we need some word to fill that role (the one that "Py" fills 
> for Python) but please feel free to suggest something else.  It 
> doesn't have to be a full word - "Py" isn't.  "Twi"?  (Quick, someone 
> come up with a home lighting control project that uses twisted so we 
> can have "TwiLight".)
>
I'm also not really fond of Twisty, why not just "tw"? For "Twisted 
Goodies" & "Twisted Storage" that would make it "twGoodies" and 
"twStorage", just my 2 cents.

Gabriel



From miles.chris at gmail.com  Fri May 30 03:18:40 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Fri, 30 May 2008 17:18:40 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <483F9FE3.8080604@evotex.ch>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
	<483F9FE3.8080604@evotex.ch>
Message-ID: <565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>


On 30/05/2008, at 4:34 PM, Gabriel Rossetti wrote:
> glyph at divmod.com wrote:
>> I am not particularly enthusiastic about the term myself,  
>> personally.  I think we need some word to fill that role (the one  
>> that "Py" fills for Python) but please feel free to suggest  
>> something else.  It doesn't have to be a full word - "Py" isn't.   
>> "Twi"?  (Quick, someone come up with a home lighting control  
>> project that uses twisted so we can have "TwiLight".)
>>
> I'm also not really fond of Twisty, why not just "tw"? For "Twisted  
> Goodies" & "Twisted Storage" that would make it "twGoodies" and  
> "twStorage", just my 2 cents.

The "tw" prefix is already used by ToscaWidgets-related packages, see http://tinyurl.com/5sjyhu

Cheers,
CM




From sipickles at googlemail.com  Fri May 30 03:35:21 2008
From: sipickles at googlemail.com (Simon Pickles)
Date: Fri, 30 May 2008 08:35:21 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>	<483F9FE3.8080604@evotex.ch>
	<565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>
Message-ID: <483FAE39.6020902@googlemail.com>

Chris Miles wrote:
>
> The "tw" prefix is already used by ToscaWidgets-related packages, see 
> http://tinyurl.com/5sjyhu
>
>
'twd' says twisted to me...

Si




From jakamkon at gmail.com  Fri May 30 04:08:58 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Fri, 30 May 2008 09:08:58 +0100
Subject: [Twisted-Python] How-to raise errors with sshclient conch example
	in Twisted book
In-Reply-To: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>
References: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>
Message-ID: <2e947fbb0805300108r319edfc3t74b98546289c89b8@mail.gmail.com>

2008/5/30 asset <asset at impactdamage.com>:
[...]
>
> When working the with sshclient.py example (from the Twisted book, and the
> link above) I find the reactor hangs and does not raise an exception on
> connection failures or failed authentication.
>
Try to turn on logging using twisted.python.log(sys.stderr).I would
also suggest to put it after getpass in example you're using.
For handling a connection failures have a look at
clientConnectionFailed in ClientFactory and for a authentication
errors receiveError in SSHClientTransport.

>
> TKiel
jkk



From ms at cerenity.org  Fri May 30 05:52:30 2008
From: ms at cerenity.org (Michael)
Date: Fri, 30 May 2008 10:52:30 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <200805301052.31509.ms@cerenity.org>

On Friday 30 May 2008 01:25:19 Tim Stebbing wrote:
> why?
>
> I mean, if you trademark 'Twisted' and developer X goes and calls his
> bit of code 'twisted foo' are you going to pursue him in court? To
> what end?

There's also defensive trademarking. If Linux (for example) had been 
trademarked early, this would never have happened:

    In the United States, the name Linux is a trademark registered to Linus
    Torvalds.[59] Initially, nobody registered it, but on August 15, 1994,
    William R. Della Croce, Jr. filed for the trademark Linux, and then
    demanded royalties from Linux distributors. In 1996, Torvalds and some
    affected organizations sued him to have the trademark assigned to
    Torvalds, and in 1997 the case was settled.[60] 
( http://en.wikipedia.org/wiki/Linux#Licensing.2C_trademark.2C_and_naming )


Michael.



From opaytuvi at bmat.es  Fri May 30 05:53:07 2008
From: opaytuvi at bmat.es (Oscar Paytuvi)
Date: Fri, 30 May 2008 11:53:07 +0200
Subject: [Twisted-Python] unsubscribe
Message-ID: <47bccbf00805300253u7106cda0yb1bc16f421731b17@mail.gmail.com>

On Fri, May 30, 2008 at 11:50 AM, <twisted-python-request at twistedmatrix.com>
wrote:

> Send Twisted-Python mailing list submissions to
>        twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>        twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>        twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>   1. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Jonathan Lange)
>   2. How-to raise errors with sshclient conch example  in Twisted
>      book (asset)
>   3. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (glyph at divmod.com)
>   4. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Drew Smathers)
>   5. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Gabriel Rossetti)
>   6. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Chris Miles)
>   7. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Simon Pickles)
>   8. Re: How-to raise errors with sshclient conch example      in
>      Twisted book (Kuba Konczyk)
>   9. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Michael)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 30 May 2008 13:09:20 +1000
> From: "Jonathan Lange" <jml at mumak.net>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
>        <d06a5cd30805292009l663319b8rb531c28641ba0216 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Fri, May 30, 2008 at 12:16 PM, Tim Stebbing <tjstebbing at gmail.com>
> wrote:
> >> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
> >> all trademarked. The Emacs trademark is held by the FSF, bastions of
> >> ideological purity. So far, I've encountered only one person who finds
> >> this suspicious. Hi Tim :)
> >>
> >
> > 'other people do this thing so we should also do this thing' is not a
> > great argument. I'm not against the idea, I just have some questions
> > we're yet to have answered.
> >
>
> That's not what I said.
>
> You said "trademarks make people suspicious". I provided
> counter-examples, demonstrating that your statement is not true in the
> general case.
>
> jml
>
>
>
> ------------------------------
>
> Message: 2
> Date: Thu, 29 May 2008 20:40:32 -0700
> From: "asset" <asset at impactdamage.com>
> Subject: [Twisted-Python] How-to raise errors with sshclient conch
>        example in Twisted book
> To: <twisted-python at twistedmatrix.com>
> Message-ID:
>        <2af3b464859b46a28b1fddbd6d5153a7 at maila5.webcontrolcenter.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
>
> Ref: http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/ =
>
>
> Im new to Twisted and am trying to learn as quickly as I can.  I apologize
> =
> if this question is a waste of anybody's time.
>
> When working the with sshclient.py example (from the Twisted book, and the
> =
> link above) I find the reactor hangs and does not raise an exception on
> con=
> nection failures or failed authentication.
>
> Ive been trying to work out how to catch these situations and shut down
> the=
>  reactor; or cleanup for another attempt, yet I cant seem to wrap my head
> a=
> round it.
>
> I imagine this is trivial and Im totally missing it.
>
> Any help would be greatly appreciated.
>
> Thx,
>
> TKiel
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://twistedmatrix.com/pipermail/twisted-python/attachments/20080529=
> /7dee4a72/attachment-0001.htm<http://twistedmatrix.com/pipermail/twisted-python/attachments/20080529=/7dee4a72/attachment-0001.htm>
>
> ------------------------------
>
> Message: 3
> Date: Fri, 30 May 2008 03:43:39 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>        <
> 20080530034339.25821.1950166726.divmod.xquotient.8886 at joule.divmod.com>
>
> Content-Type: text/plain; charset="utf-8"; format="flowed"
>
> On 12:52 am, waterbug at pangalactic.us wrote:
> >I think trademarking "twisted" is a good idea, if only to have
> >a prior claim in the (unlikely) event someone else should
> >try to claim it for something in the context of software.
>
> Thanks.
> >I'm not enthusiastic about "twisty" as a naming standard for
> >anything -- partly from jml's observations and partly just some
> >aversion to it that I don't understand myself -- if I don't
> >mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  I
> think we need some word to fill that role (the one that "Py" fills for
> Python) but please feel free to suggest something else.  It doesn't have
> to be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a
> home lighting control project that uses twisted so we can have
> "TwiLight".)
>
>
>
> ------------------------------
>
> Message: 4
> Date: Fri, 30 May 2008 00:10:10 -0400
> From: "Drew Smathers" <drew.smathers at gmail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
>        <368574aa0805292110o4c59031fob5550f598b2f2135 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Thu, May 29, 2008 at 11:43 PM,  <glyph at divmod.com> wrote:
> > On 12:52 am, waterbug at pangalactic.us wrote:
> >>
> >> I think trademarking "twisted" is a good idea, if only to have
> >> a prior claim in the (unlikely) event someone else should
> >> try to claim it for something in the context of software.
> >
> > Thanks.
> >>
> >> I'm not enthusiastic about "twisty" as a naming standard for
> >> anything -- partly from jml's observations and partly just some
> >> aversion to it that I don't understand myself -- if I don't
> >> mind "twisted", why would "twisty" bother me?  I dunno.
> >
> > I am not particularly enthusiastic about the term myself, personally.  I
> > think we need some word to fill that role (the one that "Py" fills for
> > Python) but please feel free to suggest something else.  It doesn't have
> to
> > be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a home
> > lighting control project that uses twisted so we can have "TwiLight".)
> >
>
> I think "Twi" is problematic because it's on the cusp of becoming a
> word, or even worse, too easily mistaken for an acronym (and a rather
> pedestrian sounding acronym due to the closeness to the airliner TWA).
>  Also Twi SNMP, Twi Storage, and Twi Goodies all sound (and read)
> horribly as project names.  My vote is for just "Tw" or the word
> "Twist".
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/ \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\ /\\\ \\
> / /\\\ /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>  d.p.s
>
>
>
> ------------------------------
>
> Message: 5
> Date: Fri, 30 May 2008 08:34:11 +0200
> From: Gabriel Rossetti <mailing_lists at evotex.ch>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <483F9FE3.8080604 at evotex.ch>
> Content-Type: text/plain; charset=UTF-8; format=flowed
>
> glyph at divmod.com wrote:
> > On 12:52 am, waterbug at pangalactic.us wrote:
> >> I think trademarking "twisted" is a good idea, if only to have
> >> a prior claim in the (unlikely) event someone else should
> >> try to claim it for something in the context of software.
> >
> > Thanks.
> >> I'm not enthusiastic about "twisty" as a naming standard for
> >> anything -- partly from jml's observations and partly just some
> >> aversion to it that I don't understand myself -- if I don't
> >> mind "twisted", why would "twisty" bother me?  I dunno.
> >
> > I am not particularly enthusiastic about the term myself, personally.
> > I think we need some word to fill that role (the one that "Py" fills
> > for Python) but please feel free to suggest something else.  It
> > doesn't have to be a full word - "Py" isn't.  "Twi"?  (Quick, someone
> > come up with a home lighting control project that uses twisted so we
> > can have "TwiLight".)
> >
> I'm also not really fond of Twisty, why not just "tw"? For "Twisted
> Goodies" & "Twisted Storage" that would make it "twGoodies" and
> "twStorage", just my 2 cents.
>
> Gabriel
>
>
>
> ------------------------------
>
> Message: 6
> Date: Fri, 30 May 2008 17:18:40 +1000
> From: Chris Miles <miles.chris at gmail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <565B8780-8EEE-45B7-9A69-25E0F24E702C at gmail.com>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
>
> On 30/05/2008, at 4:34 PM, Gabriel Rossetti wrote:
> > glyph at divmod.com wrote:
> >> I am not particularly enthusiastic about the term myself,
> >> personally.  I think we need some word to fill that role (the one
> >> that "Py" fills for Python) but please feel free to suggest
> >> something else.  It doesn't have to be a full word - "Py" isn't.
> >> "Twi"?  (Quick, someone come up with a home lighting control
> >> project that uses twisted so we can have "TwiLight".)
> >>
> > I'm also not really fond of Twisty, why not just "tw"? For "Twisted
> > Goodies" & "Twisted Storage" that would make it "twGoodies" and
> > "twStorage", just my 2 cents.
>
> The "tw" prefix is already used by ToscaWidgets-related packages, see
> http://tinyurl.com/5sjyhu
>
> Cheers,
> CM
>
>
>
>
> ------------------------------
>
> Message: 7
> Date: Fri, 30 May 2008 08:35:21 +0100
> From: Simon Pickles <sipickles at googlemail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <483FAE39.6020902 at googlemail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Chris Miles wrote:
> >
> > The "tw" prefix is already used by ToscaWidgets-related packages, see
> > http://tinyurl.com/5sjyhu
> >
> >
> 'twd' says twisted to me...
>
> Si
>
>
>
>
> ------------------------------
>
> Message: 8
> Date: Fri, 30 May 2008 09:08:58 +0100
> From: "Kuba Konczyk" <jakamkon at gmail.com>
> Subject: Re: [Twisted-Python] How-to raise errors with sshclient conch
>        example in Twisted book
> To: asset at impactdamage.com,     "Twisted general discussion"
>        <twisted-python at twistedmatrix.com>
> Message-ID:
>        <2e947fbb0805300108r319edfc3t74b98546289c89b8 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> 2008/5/30 asset <asset at impactdamage.com>:
> [...]
> >
> > When working the with sshclient.py example (from the Twisted book, and
> the
> > link above) I find the reactor hangs and does not raise an exception on
> > connection failures or failed authentication.
> >
> Try to turn on logging using twisted.python.log(sys.stderr).I would
> also suggest to put it after getpass in example you're using.
> For handling a connection failures have a look at
> clientConnectionFailed in ClientFactory and for a authentication
> errors receiveError in SSHClientTransport.
>
> >
> > TKiel
> jkk
>
>
>
> ------------------------------
>
> Message: 9
> Date: Fri, 30 May 2008 10:52:30 +0100
> From: Michael <ms at cerenity.org>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: twisted-python at twistedmatrix.com
> Cc: Tim Stebbing <tjstebbing at gmail.com>
> Message-ID: <200805301052.31509.ms at cerenity.org>
> Content-Type: text/plain;  charset="utf-8"
>
> On Friday 30 May 2008 01:25:19 Tim Stebbing wrote:
> > why?
> >
> > I mean, if you trademark 'Twisted' and developer X goes and calls his
> > bit of code 'twisted foo' are you going to pursue him in court? To
> > what end?
>
> There's also defensive trademarking. If Linux (for example) had been
> trademarked early, this would never have happened:
>
>    In the United States, the name Linux is a trademark registered to Linus
>    Torvalds.[59] Initially, nobody registered it, but on August 15, 1994,
>    William R. Della Croce, Jr. filed for the trademark Linux, and then
>    demanded royalties from Linux distributors. In 1996, Torvalds and some
>    affected organizations sued him to have the trademark assigned to
>    Torvalds, and in 1997 the case was settled.[60]
> ( http://en.wikipedia.org/wiki/Linux#Licensing.2C_trademark.2C_and_naming)
>
>
> Michael.
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 50, Issue 38
> **********************************************
>



-- 
Oscar Paytuvi
Program Manager @ www.bmat.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080530/65b61e9d/attachment.htm 

From phil at bubblehouse.org  Fri May 30 11:31:57 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 30 May 2008 11:31:57 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>

On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
> I'd really like "twisted" (and our various "dot product"  
> subprojects) to be a trademark that the software freedom conservancy  
> can protect and defend.

On May 29, 2008, at 8:25 PM, Tim Stebbing wrote:
> why?
[snip snip]
> trademarking just seems to rub the wrong way, makes people suspicious,
> goes against the ethos man ;)

I have a similar predilection against trademarking, but when I really  
think about it, I only feel this way because of the actions of those  
who abuse the intent of trademark law. However, it's clear that  
legally, if Twisted wants any ability to protect against blatant  
misuse of the name, this is the only recourse.

The problem is that there's no clear policy on trademarking for OSS  
projects. If Twisted were to approach its trademark policy in a way  
similar to the MIT license, I think I would be okay with it. E.g., no  
license fees, pragmatic enforcement, etc.

A good example of what I wouldn't want to see is the whole Firefox/ 
Iceweasel debacle.

On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
> For similar reasons, I'd like to have an unambiguous naming  
> convention for projects which are *part* of Twisted versus those  
> which are built on it or are compatible with it.
[snip snip]
> I'd like to suggest, however, that new projects use the word  
> "Twisty" in this context rather than the hopefully trademarked  
> "Twisted".  i.e. if you are making an implementation of the protocol  
> Bloobloo and want to give it a name associated with Twisted, please  
> describe it as "Twisty Bloobloo: an implementation of bloobloo for  
> Twisted", and name your packages similarly (twistybloobloo.stuff).   
> Sun has a great webpage about how to use their trademarks in this  
> capacity: http://www.sun.com/policies/trademarks/.

I have to say, personally, there's pretty much no way I would ever  
name a project 'Twisty' anything ;-).

Of course, I understand this wouldn't be a requirement, but if this is  
to be a useful marketing technique, whatever the prefix is needs to be  
obvious, but also inconsequential. That's the thing that's great about  
the Java convention, once you're familiar with it, you pretty much  
stop seeing the J. Same with the tired but successful iSomething.

I think a one- or two-letter prefix is pretty much the best option

On May 30, 2008, at 3:18 AM, Chris Miles wrote:
> The "tw" prefix is already used by ToscaWidgets-related packages,  
> see http://tinyurl.com/5sjyhu


When choosing which prefix to use, I would suggest against being too  
concerned with which obscure software project already uses it.  
ToscaWidgets is still in alpha according to their webpage, which  
hasn't been updated in ages. I don't mean to deride another project,  
but considering the high rate of failure of most OSS projects, unless  
it has a community inertia as large as or larger than Twisted's, I say  
every project for itself.

Still, though, as far as I can tell, there's no projects using a T  
prefix. I kind of like the idea of tStorage and tSNMP, to use the  
recent examples.

I am curious, though, what would Divmod do? You guys have some of the  
most significant Twisted projects, and would probably be the best  
people to set the example, but you already have great names for your  
projects. tMantissa or twdAxiom just don't seem very stylin' ;-)...

-phil





From nathan.stocks at gmail.com  Fri May 30 12:51:19 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 30 May 2008 10:51:19 -0600
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>
Message-ID: <96c9d6a80805300951h6101f0eaj4217597f99fa5b84@mail.gmail.com>

On Thu, May 29, 2008 at 6:11 PM, Jonathan Lange <jml at mumak.net> wrote:
> 2. I *still* encounter resistance to Twisted because the name conjures
> up images of insanity, perversion, confusion or "unprofessionalism". I
> don't think "Twisty" helps with this problem. I'm not sure that this
> is a big deal though.

I would never include either of those terms in my own project names
for exactly the reasons stated above.  If anyone wants to change
"Twisted" to something with less negative connotations, I'd be all for
it.  How about "Nexus?"

I know, I know, we'd lose google-juice and such.  Y'all have fun
debating twisty stuff.  :-P

~ Nathan



From andrewfr_ice at yahoo.com  Fri May 30 14:10:31 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 30 May 2008 11:10:31 -0700 (PDT)
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted Trademark
Message-ID: <829546.94010.qm@web34207.mail.mud.yahoo.com>

Hi:

>When choosing which prefix to use, I would suggest against being too 
>concerned with which obscure software project already uses it. 
>ToscaWidgets is still in alpha according to their webpage, which 
>hasn't been updated in ages. I don't mean to deride another project, 
>but considering the high rate of failure of most OSS projects, unless 
>it has a community inertia as large as or larger than Twisted's, I say 
>every project for itself.

I would be tempted to use a prefix like tsf or twsf so there is a closer association to the Twisted Software Foundation, the entity that is the custodian of Twisted. I know little about trademark law (especially in the  U.S) but I think there are benefits when the legal entity and the product/service share a name (trade name)
 
Cheers,
Andrew


      



From glyph at divmod.com  Fri May 30 15:03:51 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 19:03:51 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
Message-ID: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>


On 03:31 pm, phil at bubblehouse.org wrote:
>I have to say, personally, there's pretty much no way I would ever 
>name a project 'Twisty' anything ;-).

OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more 
careful to separate the specific suggestion of "Twisty" (which was just 
something that popped into my head) in my original message from the need 
for a word like this.  I wasn't totally set on it.
>Of course, I understand this wouldn't be a requirement, but if this is 
>to be a useful marketing technique, whatever the prefix is needs to be 
>obvious, but also inconsequential. That's the thing that's great about 
>the Java convention, once you're familiar with it, you pretty much 
>stop seeing the J. Same with the tired but successful iSomething.

You've convinced me.  I still think "Twi" sounds okay (better than 
"Twisty")  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted 
multipleXed"?)  "T"?  I'd suggest "Tw" but I feel like it has to be 
pronounceable, and "Tw" forces the first letter of your project to be a 
vowel (whereas "Tx" could be pronounced "Tix").
>I think a one- or two-letter prefix is pretty much the best option

OK.  I guess your suggestion is a lower-case "t"?  :)
>I am curious, though, what would Divmod do? You guys have some of the 
>most significant Twisted projects, and would probably be the best 
>people to set the example, but you already have great names for your 
>projects. tMantissa or twdAxiom just don't seem very stylin' ;-)...

Divmod is really enmeshed into the core Twisted community.  If we had an 
implementation of protocol X for Twisted, we'd distribute it in one of 
our libraries or applications in order to prove it out, then contribute 
it to Twisted proper.  We've done this a few times already.  This 
sidesteps the naming issue, because then it's just "Twisted X" at the 
end of the day.  In fact it usually isn't even that; we developed and 
contributed the IMAP protocol and that's part of twisted mail, we 
developed and contributed the JUICE protocol which became 
twisted.protocols.amp (although that will probably need to grow its own 
twisted.amp "dot product" at some point in the near future).

I started trying to explain here why other people should do this if we 
don't, but it turned into a small novel about community dynamics.  I 
think I'll save that for a future blog post.  Suffice it to say that not 
everything that gets done in the world is as awesome as the stuff Divmod 
does, and naming conventions like this are for smaller, less heliocidal 
projects, which implement a protocol or two, or maybe bind to an 
existing non-Python library.

And now, for something completely different:
>On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
>>I'd really like "twisted" (and our various "dot product"  subprojects) 
>>to be a trademark that the software freedom conservancy  can protect 
>>and defend.

>A good example of what I wouldn't want to see is the whole Firefox/ 
>Iceweasel debacle.

I was talking to James Knight about this yesterday (another core Twisted 
developer if the name does not immediately ring a bell) and he made a 
very good point about trademarks to me: "Tou especially don't want to 
discourage people from using the word "Twisted" to refer to Twisted."  I 
think the Iceweasel thing is kind of silly, and isn't really necessary 
to protect the Firefox trademark, since Iceweasel *is* Firefox.  If 
anything it weakens it a little bit, because now there are multiple 
ambiguous names which one can use to refer to Firefox, rather than one 
clear trademark.  So I don't want anything like that to ever happen to 
Twisted.  (When I say "weaken" here I'm not talking about the legal 
sense, but the branding / marketing sense.  For all I know it might be 
bad for the legal sense too, but I'm not a lawyer.)

On the other hand, Debian has recently had some rather high-profile 
examples of how they insert bugs into their packaging that are not 
present in the software itself[1], and Twisted has had issues with this 
too[2].  I can sympathize, a little bit, with the Mozilla folks' desire 
to use trademarks as a weapon to say "stop breaking our stuff!".  I 
don't think that this is the right way to go about it, and clearly it 
doesn't work if they just do it anyway and give it a different name. 
While I think the Firefox patches which precipitated the Iceweasel 
debate are far, far from this point, there *is* some point where 
patching becomes so intense that distributors really shouldn't use the 
same name for their software.

[1]: http://www.debian.org/security/2008/dsa-1571 in case you're living 
under some kind of magic rock that prevents all computer security 
related things from reaching you.

[2]: I couldn't help but think of this bug - http://bugs.debian.org/cgi- 
bin/bugreport.cgi?bug=474630 - where some debian developers have 
specifically discussed re-introducing bug #2339 in a patch.  I feel like 
there's a parallel thread that should be started here about how we 
communicate with packagers.  For example, I am pretty sure that there 
are bugs in Twisted which would prevent *any* system packager (debian, 
redhat, gentoo) from getting a clean test run from an installed package, 
and yet we basically never hear about it.  Why is that?  What use is our 
test suite if the actual way twisted is installed always breaks it?  How 
can we convince packagers to build and install stuff and tell us when it 
fails the tests?  This has nothing whatsoever to do with trademarks, of 
course.



From glyph at divmod.com  Fri May 30 15:09:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 19:09:08 -0000
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted Trademark
In-Reply-To: <829546.94010.qm@web34207.mail.mud.yahoo.com>
References: <829546.94010.qm@web34207.mail.mud.yahoo.com>
Message-ID: <20080530190908.25821.1836221096.divmod.xquotient.9044@joule.divmod.com>

On 06:10 pm, andrewfr_ice at yahoo.com wrote:
>I would be tempted to use a prefix like tsf or twsf so there is a 
>closer association to the Twisted Software Foundation, the entity that 
>is the custodian of Twisted. I know little about trademark law 
>(especially in the  U.S) but I think there are benefits when the legal 
>entity and the product/service share a name (trade name)

I don't think those benefits would apply here.  For one thing, the TSF 
is not a legal entity; it's an abstraction over the Twisted project's 
membership in the SFC, the Software Freedom Conservancy.  Also, I am 
suggesting we need a name specifically for projects *not* a part of the 
Twisted project or the TSF or the SFC, just related to the technology.



From jack at chesspark.com  Fri May 30 16:31:36 2008
From: jack at chesspark.com (Jack Moffitt)
Date: Fri, 30 May 2008 14:31:36 -0600
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
Message-ID: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>

>> I have to say, personally, there's pretty much no way I would ever name a
>> project 'Twisty' anything ;-).
>
> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
> careful to separate the specific suggestion of "Twisty" (which was just
> something that popped into my head) in my original message from the need for
> a word like this.  I wasn't totally set on it.

I like Twisty.  It's cute.  Much better than some lame microsoft-like
2-3 letter prefix to the name of the package.  Of course, I think any
package called PyBlah is fairly lame too.

jack.



From ldanielburr at mac.com  Fri May 30 16:56:56 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 30 May 2008 15:56:56 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
Message-ID: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>

On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com>  
wrote:

>>> I have to say, personally, there's pretty much no way I would ever  
>>> name a
>>> project 'Twisty' anything ;-).
>>
>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the  
>> need for
>> a word like this.  I wasn't totally set on it.
>
> I like Twisty.  It's cute.  Much better than some lame microsoft-like
> 2-3 letter prefix to the name of the package.  Of course, I think any
> package called PyBlah is fairly lame too.
>
> jack.

Seconded, for whatever such secondment is worth ;)

I've heard so many people tell me that they won't use library A, or
framework B, because the "name doesn't sound professional".  The
rationale is usually one of the following:

1. If the name is unprofessional, the code/community must also
    be unprofessional.

2. People I work with/for will ridicule me for promoting the use
    of any product with such a silly name; worse, I will lose
    credibility within my organization for having promoted the
    use of said product.

Now, I'm not denying that these things happen, but my own
perspective is that anyone who adopts either of the rationales
stated above should not be attempting to use Python, much less
Twisted, for their work.  If you need acceptance and buy-in
 from people for whom a silly name is a deal-breaker, then you
should just make your life easier and stick with products that
you know will meet with ready acceptance inside your organization.

Me?  I like TwistyDownloader, TwistyMessaging, TwistyTweets, etc.
Silly?  Sure.  Readily identifiable as being part of the Twisted
branding universe?  Yes.  The latter is what counts, in my book,
not some misguided need for "seriousness" or "professionalism".

Heck, "Twisty" evokes fond memories of interactive fiction, at
least for me.  What more could a geek want?

L. Daniel Burr



From steve at holdenweb.com  Fri May 30 17:07:01 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 30 May 2008 17:07:01 -0400
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
Message-ID: <48406C75.6090000@holdenweb.com>

Jack Moffitt wrote:
>>> I have to say, personally, there's pretty much no way I would ever name a
>>> project 'Twisty' anything ;-).
>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the need for
>> a word like this.  I wasn't totally set on it.
> 
> I like Twisty.  It's cute.  Much better than some lame microsoft-like
> 2-3 letter prefix to the name of the package.  Of course, I think any
> package called PyBlah is fairly lame too.
> 
How about Gnarly? Gnarly gnetworking? Gno, that's gnot right.

regards
  Steve (Stephegn)
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From christian.simms at gmail.com  Fri May 30 17:18:15 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Fri, 30 May 2008 17:18:15 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
Message-ID: <cd8fa6f90805301418p92f6d5ard9c92928bc46243c@mail.gmail.com>

On Fri, May 30, 2008 at 4:56 PM, L. Daniel Burr <ldanielburr at mac.com> wrote:
> On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com> wrote:
>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
>> jack.
>
> Seconded, for whatever such secondment is worth ;)

I like Twisty.  And trademarks are good in this case, otherwise the
community could get ripped off with a cheap knock-off.  I don't think
Twi- sounds as good as Py- as a prefix.  As for seriousness, there are
so many stupid names in the tech industry no one blinks at an
eccentric name like Twisted (BenQ -> QISDA, Andersen Consulting ->
Accenture, etc.).  I've had people blink at the name Python, but
they're usually so out of touch with technology that it doesn't even
matter.

Cheers,
Christian



From duncan.mcgreggor at gmail.com  Fri May 30 20:09:03 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:09:03 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
Message-ID: <4327dfbd0805301709m77c34a0ay70b59c685bf1a7b0@mail.gmail.com>

On Fri, May 30, 2008 at 10:31 AM, Phil Christensen <phil at bubblehouse.org> wrote:
> On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
>>
>> I'd really like "twisted" (and our various "dot product" subprojects) to
>> be a trademark that the software freedom conservancy can protect and defend.
>
> On May 29, 2008, at 8:25 PM, Tim Stebbing wrote:
>>
>> why?
>
> [snip snip]
>>
>> trademarking just seems to rub the wrong way, makes people suspicious,
>> goes against the ethos man ;)
>
> I have a similar predilection against trademarking, but when I really think
> about it, I only feel this way because of the actions of those who abuse the
> intent of trademark law. However, it's clear that legally, if Twisted wants
> any ability to protect against blatant misuse of the name, this is the only
> recourse.

I had almost the same experience. When Steve Holden first let me know
that this discussion was happening, I was like "ah, shit." But then,
when Glyph talked to me about it, he talked me down. As Phil said,
this is the only recourse if we want to have the ability to legally
protect *our* (the community's) investment in Twisted.

The thing is, this thread got derailed early on, and there is another
really important point here that Glyph pointed out to me. Trademark
issues aside, we want to provide a mechanism (for starters, a naming
convention) by which *more* community members can participate without
having to under go the arduous (for a beginner) review process, code
scrutiny, etc. In the same way that naming a project "pySomething" is
not only an indication of its programming language, but (even more?)
that it is a resource of the Python community, naming a project
<twisted prefix>Something will do the same for coders who are creating
Twisted "community resources."

d



From duncan.mcgreggor at gmail.com  Fri May 30 20:14:50 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:14:50 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
Message-ID: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>

On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>
> On 03:31 pm, phil at bubblehouse.org wrote:
>>
>> I have to say, personally, there's pretty much no way I would ever name a
>> project 'Twisty' anything ;-).
>
> OK, OK, I get it.  Everybody hates "Twisty" :).

Seriously. I groaned audibly upon hearing about it :-)

> I should have been more
> careful to separate the specific suggestion of "Twisty" (which was just
> something that popped into my head) in my original message from the need for
> a word like this.  I wasn't totally set on it.
>>
>> Of course, I understand this wouldn't be a requirement, but if this is to
>> be a useful marketing technique, whatever the prefix is needs to be obvious,
>> but also inconsequential. That's the thing that's great about the Java
>> convention, once you're familiar with it, you pretty much stop seeing the J.
>> Same with the tired but successful iSomething.
>
> You've convinced me.  I still think "Twi" sounds okay (better than "Twisty")
>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted multipleXed"?)
>  "T"?  I'd suggest "Tw" but I feel like it has to be pronounceable, and "Tw"
> forces the first letter of your project to be a vowel (whereas "Tx" could be
> pronounced "Tix").
>>
>> I think a one- or two-letter prefix is pretty much the best option

Man, I think you totally hit it on the nose with your "tx" suggestion:
tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
only does it have a cool sound, entails "TwistedmatriX", is associated
with "transmit", but it could also stand for "Twisted eXtensions" (in
the "add on" sense).

I think this one's a winner.

d



From duncan.mcgreggor at gmail.com  Fri May 30 20:20:25 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:20:25 -0500
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <48406C75.6090000@holdenweb.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<48406C75.6090000@holdenweb.com>
Message-ID: <4327dfbd0805301720i6ea84eefna64c5abb24c682c1@mail.gmail.com>

On Fri, May 30, 2008 at 4:07 PM, Steve Holden <steve at holdenweb.com> wrote:
> Jack Moffitt wrote:
>>>>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
> How about Gnarly? Gnarly gnetworking? Gno, that's gnot right.
>
> regards
>  Steve (Stephegn)

Okay, that was downright hilarious.

d



From duncan.mcgreggor at gmail.com  Fri May 30 20:24:22 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:24:22 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
Message-ID: <4327dfbd0805301724y6682daa1q17f6b134cdb4a6b8@mail.gmail.com>

On Fri, May 30, 2008 at 3:56 PM, L. Daniel Burr <ldanielburr at mac.com> wrote:
> On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com> wrote:
>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
>> jack.
>
> Seconded, for whatever such secondment is worth ;)
>
> I've heard so many people tell me that they won't use library A, or
> framework B, because the "name doesn't sound professional".  The
> rationale is usually one of the following:
>
> 1. If the name is unprofessional, the code/community must also
>   be unprofessional.
>
> 2. People I work with/for will ridicule me for promoting the use
>   of any product with such a silly name; worse, I will lose
>   credibility within my organization for having promoted the
>   use of said product.
>
> Now, I'm not denying that these things happen, but my own
> perspective is that anyone who adopts either of the rationales
> stated above should not be attempting to use Python, much less
> Twisted, for their work.  If you need acceptance and buy-in
> from people for whom a silly name is a deal-breaker, then you
> should just make your life easier and stick with products that
> you know will meet with ready acceptance inside your organization.
>
> Me?  I like TwistyDownloader, TwistyMessaging, TwistyTweets, etc.
> Silly?  Sure.  Readily identifiable as being part of the Twisted
> branding universe?  Yes.  The latter is what counts, in my book,
> not some misguided need for "seriousness" or "professionalism".
>
> Heck, "Twisty" evokes fond memories of interactive fiction, at
> least for me.  What more could a geek want?

These are all really good points. I'm not a big fan of the "Twisty"
name, but did a great job casting it in a nice light. However,
twisty.whatever isn't a good namespace to cram a bunch of stuff. tx,
on the other hand, is. It's a quick type that I won't mind doing
repeatedly for any Twisted-based project code I write.

How about "TX, pronounced 'Twisty'" ...

d



From phil at bubblehouse.org  Fri May 30 23:35:45 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 30 May 2008 23:35:45 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <05B18175-8EAB-4D9D-ADE4-0EFF86306020@bubblehouse.org>

On May 30, 2008, at 8:14 PM, Duncan McGreggor wrote:
> On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>> You've convinced me.  I still think "Twi" sounds okay (better than  
>> "Twisty")
>>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted  
>> multipleXed"?)
>>  "T"?  I'd suggest "Tw" but I feel like it has to be  
>> pronounceable, and "Tw"
>> forces the first letter of your project to be a vowel (whereas  
>> "Tx" could be
>> pronounced "Tix").
>>
>>> I think a one- or two-letter prefix is pretty much the best option
>
> Man, I think you totally hit it on the nose with your "tx" suggestion:
> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
> only does it have a cool sound, entails "TwistedmatriX", is associated
> with "transmit", but it could also stand for "Twisted eXtensions" (in
> the "add on" sense).

I was about to second this point before I left work tonight, but got  
distracted. I like it even better with the dot notation, e.g.,  
tx.whatever.

-phil



From jakamkon at gmail.com  Sat May 31 05:25:42 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Sat, 31 May 2008 10:25:42 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <2e947fbb0805310225u405af68dp31bd44d04020586f@mail.gmail.com>

2008/5/31 Duncan McGreggor <duncan.mcgreggor at gmail.com>:
> On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>>
>> On 03:31 pm, phil at bubblehouse.org wrote:
>>>
>>> I have to say, personally, there's pretty much no way I would ever name a
>>> project 'Twisty' anything ;-).
>>
>> OK, OK, I get it.  Everybody hates "Twisty" :).
>
> Seriously. I groaned audibly upon hearing about it :-)
>
>> I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the need for
>> a word like this.  I wasn't totally set on it.
>>>
>>> Of course, I understand this wouldn't be a requirement, but if this is to
>>> be a useful marketing technique, whatever the prefix is needs to be obvious,
>>> but also inconsequential. That's the thing that's great about the Java
>>> convention, once you're familiar with it, you pretty much stop seeing the J.
>>> Same with the tired but successful iSomething.
>>
>> You've convinced me.  I still think "Twi" sounds okay (better than "Twisty")
>>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted multipleXed"?)
>>  "T"?  I'd suggest "Tw" but I feel like it has to be pronounceable, and "Tw"
>> forces the first letter of your project to be a vowel (whereas "Tx" could be
>> pronounced "Tix").
>>>
>>> I think a one- or two-letter prefix is pretty much the best option
> Man, I think you totally hit it on the nose with your "tx" suggestion:
> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
> only does it have a cool sound, entails "TwistedmatriX", is associated
> with "transmit", but it could also stand for "Twisted eXtensions" (in
> the "add on" sense).
I really like tx. too and you perfectly explained why :)

jkk



From glyph at divmod.com  Sat May 31 15:27:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 31 May 2008 19:27:15 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>

On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>Man, I think you totally hit it on the nose with your "tx" suggestion:
>tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>only does it have a cool sound, entails "TwistedmatriX", is associated
>with "transmit", but it could also stand for "Twisted eXtensions" (in
>the "add on" sense).

Thanks for the encouragement :) but a minor point: I think it's 
important that these packages use 'py' in the same way most projects do, 
since sharing namespaces in Python is such a pain.  i.e. in pygame you 
do 'import pygame', in pygtk you do 'import gtk'.  The existence of the 
separate 'py' library / namespace complicates matters somewhat, but 
that's a single entity that has nothing to do with 99% of the PyFoo 
projects out there.

So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.

It seems like different people have different ideas for this convention, 
which sounds great to me too.  If we have a few "Twisty XYZ" libraries 
and a few "TxABC" libraries that's fine by me :).  The whole point here 
is that it's a suggestion and a convention, not a mandate from the core 
team like so many things in the Twistedverse.



From mrsalty0 at gmail.com  Sat May 31 16:34:38 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Sat, 31 May 2008 16:34:38 -0400
Subject: [Twisted-Python] DeferredList + LoopingCall
Message-ID: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>

Hello,

I want to group several calls to a function() that returns a deferred into a
DeferredList so that I can add
callbacks that will fire once each call to function() has returned.
Furthermore, I want to arrange it so that this process repeats every X
seconds.
The problem I'm having is understanding how I can combine the concept of a
DeferredList with task.LoopingCall in this scenario. Or is that even the
right approach to take?

Thanks,
-Jake
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080531/2b98aee2/attachment.htm 

From duncan.mcgreggor at gmail.com  Sat May 31 16:51:19 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sat, 31 May 2008 15:51:19 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
	<20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
Message-ID: <4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>

On Sat, May 31, 2008 at 2:27 PM,  <glyph at divmod.com> wrote:
> On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>>
>> Man, I think you totally hit it on the nose with your "tx" suggestion:
>> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>> only does it have a cool sound, entails "TwistedmatriX", is associated
>> with "transmit", but it could also stand for "Twisted eXtensions" (in
>> the "add on" sense).
>
> Thanks for the encouragement :) but a minor point: I think it's important
> that these packages use 'py' in the same way most projects do, since sharing
> namespaces in Python is such a pain.  i.e. in pygame you do 'import pygame',
> in pygtk you do 'import gtk'.  The existence of the separate 'py' library /
> namespace complicates matters somewhat, but that's a single entity that has
> nothing to do with 99% of the PyFoo projects out there.

Hrm. I really like the idea of the community sharing a namespace. But
maybe that's just my software hippy/commune side coming out...

> So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.

As a name, I don't know what appeals to me more... txJSONRPC,
TxJSONRPC, txjsonrpc. As a namespace, I really do like tx.jsonrpc ;-)

> It seems like different people have different ideas for this convention,
> which sounds great to me too.  If we have a few "Twisty XYZ" libraries and a
> few "TxABC" libraries that's fine by me :).  The whole point here is that
> it's a suggestion and a convention, not a mandate from the core team like so
> many things in the Twistedverse.

Now that, I am totally in favor of :-) No mandates, just
encouragement. Most of all, encouragement to participate and share
Twisted-based code/projects :-)

d



From sxsong at hotmail.com  Thu May  1 15:51:24 2008
From: sxsong at hotmail.com (Steven Song)
Date: Thu, 1 May 2008 15:51:24 -0600
Subject: [Twisted-Python] Implement a client to telnet to a Linux machine
Message-ID: <BAY144-W225E5D11D8F46470DE84D7D1DB0@phx.gbl>


I am new to both Python and Twisted framework, so if this has already been dicussed bofore please excuse me. I am trying to implement a client software using Python to telnet to a Linux machine. The login involves authntication with username and password. Can someone please point me to an example if there is one? I know it has something to do with twisted.conch.telnet but am not sure about the detailed implementation yet. Thanks in advance.
_________________________________________________________________
Turn every day into $1000. Learn more at SignInAndWIN.ca
http://g.msn.ca/ca55/213
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080501/7543425a/attachment.html>

From daniel.brandt at gmail.com  Thu May  1 16:09:12 2008
From: daniel.brandt at gmail.com (Daniel Brandt)
Date: Fri, 2 May 2008 00:09:12 +0200
Subject: [Twisted-Python] From asyncore to twisted
Message-ID: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>

Hello,
I'm looking for some advice on how to get started with an asyncore ->
Twisted conversion. Being new to  twisted I have some trouble getting
started (re)designing my system. All ideas are welcome since I'm also
doing this to learn.

I am about to convert a message-passing daemon written with asyncore
to Twisted, and I have two goals in mind. Code that is easier to
maintain and expand, and higher reliability. The last part would
probably be achievable while sticking with the present code, but since
I keep hearing I really should use Twisted instead, I figured I'd try
it out :-).

The daemon listens for connections from different peers. Some peers
just leave a message and disconnect, some peers connect as receivers
and linger waiting for messages. A message will be given to the daemon
by a messenger, and forwarded by the daemon to exactly one of the
connected receivers. The daemon keeps a data structure (a dict with
identifier: channel, actually) of receivers which it cycles through in
a round-robin fashion.

There are more scenarios as well; (recievers may send status messages
back to the daemon that the daemon logs, some messengers linger
waiting for confirmation from a receiver and a few other) but they are
mostly just variations of the above.

I'm a bit confused about what parts should be in the Protocol and what
should be separated away from it. Should I make a specialized Factory
or make a Service (or several depending on what type of client
connection it is)?

I realize there is a lot in my description that's open for
interpretation, but since I'm mostly after design ideas and good
practices, I'm hoping that's OK..

Best regards,
Daniel Brandt



From drew.smathers at gmail.com  Fri May  2 08:20:36 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 2 May 2008 10:20:36 -0400
Subject: [Twisted-Python] From asyncore to twisted
In-Reply-To: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
References: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
Message-ID: <368574aa0805020720m1a76ceedl8ad2f5b84a1f42f1@mail.gmail.com>

On Thu, May 1, 2008 at 6:09 PM, Daniel Brandt <daniel.brandt at gmail.com> wrote:
> Hello,
>  I'm looking for some advice on how to get started with an asyncore ->
>  Twisted conversion. Being new to  twisted I have some trouble getting
>  started (re)designing my system. All ideas are welcome since I'm also
>  doing this to learn.
>
>  I am about to convert a message-passing daemon written with asyncore
>  to Twisted, and I have two goals in mind. Code that is easier to
>  maintain and expand, and higher reliability. The last part would
>  probably be achievable while sticking with the present code, but since
>  I keep hearing I really should use Twisted instead, I figured I'd try
>  it out :-).
>
>  The daemon listens for connections from different peers. Some peers
>  just leave a message and disconnect, some peers connect as receivers
>  and linger waiting for messages. A message will be given to the daemon
>  by a messenger, and forwarded by the daemon to exactly one of the
>  connected receivers. The daemon keeps a data structure (a dict with
>  identifier: channel, actually) of receivers which it cycles through in
>  a round-robin fashion.

One common strategy in twisted is to keep a list of your connected
clients (Protocol instances) as part of  the factory.  See:

http://twistedmatrix.com/projects/core/documentation/howto/servers.html

So in the dataReceived method on you Protocol, you would do something like:

def dataReceived(self):
    self.factory.clients.append(self)

>  There are more scenarios as well; (recievers may send status messages
>  back to the daemon that the daemon logs, some messengers linger
>  waiting for confirmation from a receiver and a few other) but they arees,
>  mostly just variations of the above.
>
>  I'm a bit confused about what parts should be in the Protocol and what
>  should be separated away from it. Should I make a specialized Factory
>  or make a Service (or several depending on what type of client
>  connection it is)?

I think generally it is a good idea to have a specialized Factory as
this binds global state for you Protocol instances.  The server howto
linked above describes this pattern quite well.

>  I realize there is a lot in my description that's open for
>  interpretation, but since I'm mostly after design ideas and good
>  practices, I'm hoping that's OK..
>

The finger tutorial does a good job of explaining many aspects of
twisted, and this might give you some ideas of how to leverage its
parts for your application:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From andrewfr_ice at yahoo.com  Fri May  2 09:54:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 2 May 2008 08:54:32 -0700 (PDT)
Subject: [Twisted-Python] Problem Changing Time Format of a Log
Message-ID: <872092.74012.qm@web34208.mail.mud.yahoo.com>

Hi Folks:

I need to change date format of a log - the
application I am using wants HH:MM:SS. Twisted seems
to give back HH:MM.

Based on the example in Abe Fettig's book and looking
at Twisted.Python.Log (and I am not sure where to
define the timeFormat string), I do the following.

class MyLog(log.FileLogObserver):
    
    def formatTime(self, when):
        if self.timeFormat is not None:
           return time.strftime(self.timeFormat,
time.localtime(when))

        tzOffset = -self.getTimezoneOffset()
        when = datetime.datetime.utcfromtimestamp(when
+ tzOffset)
        tzHour = int(tzOffset / 60 / 60)
        tzMin = int(tzOffset / 60 % 60)
        # added seconds
        return '%d/%02d/%02d %02d:%02d:%02d %+03d%02d'
% (
            when.year, when.month, when.day,
            when.hour, when.minute, when.second,
            tzHour, tzMin)
    
    def emit(self, logEntryDict):
        log.FileLogObserver.emit(self, logEntryDict)


When I run my code in twistd, I get the following
error

Log observer <bound method InsightLog.emit of <>
failed, removing from observer list.

Any help would be appreciated in telling me what is
going wrong, or pointing out the right way of altering
the log.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From camrdale at gmail.com  Fri May  2 10:24:42 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Fri, 2 May 2008 09:24:42 -0700
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <872092.74012.qm@web34208.mail.mud.yahoo.com>
References: <872092.74012.qm@web34208.mail.mud.yahoo.com>
Message-ID: <f4438a6a0805020924k78f9c2b6ga409029c9ee401c8@mail.gmail.com>

On 5/2/08, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>  I need to change date format of a log - the
>  application I am using wants HH:MM:SS. Twisted seems
>  to give back HH:MM.

I can't comment on your code, but I noticed that Twisted's default
logging format changed with the release of 8.0 to be HH:MM:SS, so you
may just want to upgrade. Also, I think it now uses the builtin python
logging module, so changes to the format might now be easier.

Cameron



From glyph at divmod.com  Fri May  2 10:32:07 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 02 May 2008 16:32:07 -0000
Subject: [Twisted-Python] From asyncore to twisted
In-Reply-To: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
References: <908e8fed0805011509n1a45d538t96e661a02f3b3fdd@mail.gmail.com>
Message-ID: <20080502163207.25821.525963087.divmod.xquotient.7479@joule.divmod.com>


On 1 May, 10:09 pm, daniel.brandt at gmail.com wrote:
>I'm looking for some advice on how to get started with an asyncore ->
>Twisted conversion. Being new to  twisted I have some trouble getting
>started (re)designing my system. All ideas are welcome since I'm also
>doing this to learn.

I suggest that you do these things one at a time.

While I am practically overflowing with advice about how to architect 
Twisted applications, I don't think it would be appropriate to give it 
all to you right now.

Get your application running on Twisted under more or less the same 
architecture, and then once you've ported over the basics - protocols 
and transports, timed events - you should notice that you can delete 
some of the things in your asyncore application that were doing things 
that Twisted is now doing for you.

Once you've got a fully working Twisted app (with, of course, full unit 
test coverage) that's the time to start looking at how to best improve 
it.  Trying to simultaneously convert to Twisted and improve your design 
will lead to things breaking, leaving you thinking "this used to work 
*before*..." and scratching your head, wondering if it's the new design 
that's buggy or it's some detail of Twisted you don't understand.
>I'm a bit confused about what parts should be in the Protocol and what
>should be separated away from it. Should I make a specialized Factory
>or make a Service (or several depending on what type of client
>connection it is)?

A Protocol represents an individual connection between a client and 
server; a factory roughly represents a listening (or connecting) port 
where incoming connections may be initiated; when connections are 
started via a Factory, Protocols are created.

Keep the things on the Protocol that were on your asyncore "channels", 
and use factories for objects that previously had a "handle_connect" 
method.

I wouldn't worry at all about Services just yet; the only place you need 
to care about them is your start-up and shut-down code.



From zooko at zooko.com  Fri May  2 10:50:40 2008
From: zooko at zooko.com (zooko)
Date: Fri, 2 May 2008 10:50:40 -0600
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <872092.74012.qm@web34208.mail.mud.yahoo.com>
References: <872092.74012.qm@web34208.mail.mud.yahoo.com>
Message-ID: <CA87DD5E-0074-4F15-9AC2-9B666EF466B0@zooko.com>

On May 2, 2008, at 9:54 AM, Andrew Francis wrote:

> Log observer <bound method InsightLog.emit of <>
> failed, removing from observer list.

Does this mean that the the method raised an exception but the  
twisted logging infrastructure isn't telling you what the exception was?

I've done this successfully:

http://allmydata.org/trac/tahoe/browser/src/allmydata/node.py? 
rev=2360#L201

Regards,

Zooko




From torriem at gmail.com  Sat May  3 19:03:29 2008
From: torriem at gmail.com (Michael Torrie)
Date: Sat, 03 May 2008 19:03:29 -0600
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
 dealing with chained deferreds, patch
Message-ID: <481D0B61.60906@gmail.com>

This message is probably for Tv.

I have a situation where the callback to a
LDAPClient.send_multiResponse() call needs to do a bunch of work that I
want to split up over several functions, using deferred chaining.  What
I want to do is something like this (this in conjunction with an LDAP
proxy server I am writing using Twisted and ldaptor):


d = self.client.send_multiResponse(request, got_response)

then later:

def got_response(response):

    # get a list of other things to do with the response
    d = do_stuff_with_response(response)
    d.addCallback(finish)

    return d


def finish(response):
    # we're done

    return isinstance(response, (
            pureldap.LDAPSearchResultDone,
            pureldap.LDAPBindResponse,
            ))

However, this doesn't work, because the send_multiResponse() method of
LDAPClient isn't expecting the handler to return a deferred, even though
if I do return a deferred the reactor does handle it properly, chaining
the deferreds and their callbacks.

The problem is that in ldapclient.py, line 171, we have:

                # Return true to mark request as fully handled
                if handler(msg.value, *args, **kwargs):
                    del self.onwire[msg.id]

When handler() returns a deferred object, after the reactor processes
the chain the value is a Deferred object, not True or False, even though
the value of the deferred object may be True or False.  Hence the del
self.onwire[msg.id] always executes, which when dealing with search
result entries is a problem as they all share the same id.  I made a
quick hack to fix this:
-----------------------------------------------------------
--- /tmp/ldapclient.py  2008-05-03 18:53:26.000000000 -0600
+++ ldaptor/protocols/ldap/ldapclient.py        2008-05-03
18:58:07.000000000 -0600
@@ -168,7 +168,14 @@
                 assert args is not None
                 assert kwargs is not None
                 # Return true to mark request as fully handled
-                if handler(msg.value, *args, **kwargs):
+                result = handler(msg.value, *args, **kwargs)
+
+                try:
+                    result = result.result
+                except AttributeError:
+                    pass
+
+               if result:
                     del self.onwire[msg.id]

     ##Bind
----------------------------------------------------------

Is this an acceptable way to do this?



From exarkun at divmod.com  Sat May  3 19:28:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 May 2008 21:28:38 -0400
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
	dealing with chained deferreds, patch
In-Reply-To: <481D0B61.60906@gmail.com>
Message-ID: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>

On Sat, 03 May 2008 19:03:29 -0600, Michael Torrie <torriem at gmail.com> wrote:
>This message is probably for Tv.
>
>I have a situation where the callback to a
>LDAPClient.send_multiResponse() call needs to do a bunch of work that I
>want to split up over several functions, using deferred chaining.  What
>I want to do is something like this (this in conjunction with an LDAP
>proxy server I am writing using Twisted and ldaptor):
>
>d = self.client.send_multiResponse(request, got_response)
>
>then later:
>
>def got_response(response):
>
>    # get a list of other things to do with the response
>    d = do_stuff_with_response(response)
>    d.addCallback(finish)
>
>    return d
>
>
>def finish(response):
>    # we're done
>
>    return isinstance(response, (
>            pureldap.LDAPSearchResultDone,
>            pureldap.LDAPBindResponse,
>            ))
>
>However, this doesn't work, because the send_multiResponse() method of
>LDAPClient isn't expecting the handler to return a deferred, even though
>if I do return a deferred the reactor does handle it properly, chaining
>the deferreds and their callbacks.

You don't need to return the Deferred in order for the code and event
sources associated with it to cause it to eventually fire.  Returning
it doesn't do anything more than make it available to the caller.  It
seems this is what you actually want though, so this is just a change
of perspective not a contradiction of your conclusion.

>
>The problem is that in ldapclient.py, line 171, we have:
>
>                # Return true to mark request as fully handled
>                if handler(msg.value, *args, **kwargs):
>                    del self.onwire[msg.id]
>
>When handler() returns a deferred object, after the reactor processes
>the chain the value is a Deferred object, not True or False, even though
>the value of the deferred object may be True or False.  Hence the del
>self.onwire[msg.id] always executes, which when dealing with search
>result entries is a problem as they all share the same id.  I made a
>quick hack to fix this:

> [snip]
>+                result = handler(msg.value, *args, **kwargs)
>+
>+                try:
>+                    result = result.result
>+                except AttributeError:
>+                    pass
>+
>+               if result:
>                     del self.onwire[msg.id]
>
>     ##Bind
>----------------------------------------------------------
>
>Is this an acceptable way to do this?
>

Not really.  You need to take the code that depends on the result of
the Deferred and put it into a callback which gets attached to that
Deferred.  Something more like this:

    def cbHandler(result):
        if result:
            del self.onwire[msg.id]

    result = handler(msg.value, *args, **kwargs)
    if isinstance(result, Deferred):
        result.addCallback(cbHandler)
    else:
        cbHandler(result)

Or, written using the helper function twisted.internet.defer.maybeDeferred,

    def cbHandler(result):
        if result:
            del self.onwire[msg.id]
    result = maybeDeferred(handler, msg.value, *args, **kwargs)
    result.addCallback(cbHandler)

This correctly handles both Deferred and non-Deferred results.  I don't
have any idea if this change to ldaptor is correct with respect to LDAP
semantics/requirements or the particular implementation details of the
code in question here, though.

Jean-Paul



From torriem at gmail.com  Sat May  3 20:22:25 2008
From: torriem at gmail.com (Michael Torrie)
Date: Sat, 03 May 2008 20:22:25 -0600
Subject: [Twisted-Python] ldaptor's LDAPClient.send_multiResponse not
	dealing with chained deferreds, patch
In-Reply-To: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>
References: <20080504012838.6859.1852749332.divmod.quotient.58628@ohm>
Message-ID: <481D1DE1.1000607@gmail.com>

Jean-Paul Calderone wrote:
>> However, this doesn't work, because the send_multiResponse() method of
>> LDAPClient isn't expecting the handler to return a deferred, even though
>> if I do return a deferred the reactor does handle it properly, chaining
>> the deferreds and their callbacks.
> 
> You don't need to return the Deferred in order for the code and event
> sources associated with it to cause it to eventually fire.  Returning
> it doesn't do anything more than make it available to the caller.  It
> seems this is what you actually want though, so this is just a change
> of perspective not a contradiction of your conclusion.

This stuff is getting kind of confusing for me, I must confess.
Especially because it's hard to explain exactly what I'm doing without
posting a very large code example (with lots of supporting modules).  I
may work on a minimal example, based on the proxy.py that ldaptor ships
with to demonstrate this.

So yes, the handler is just a callback attached to a deferred that has
already fired -- the deferred itself is irrelevant.  This deferred was
originally created by the LDAPClient.send_multiResponse() method, and it
fires when a response to the request comes in (there can be more than
one response, if the request was a search).  This function is a bit
confusing because it creates a deferred object that it returns to me,
but also takes a handler function as an argument.  I've tried to add my
additional processing routines to this particular deferred as a
callback, but that does not work.  I think if I could get this to work,
that might be the better way to go.

In the meantime, in the handler I pass to send_multiResponse(), I need
to generate a new deferred chain that has parts of it deferred to other
threads, etc.  Returning this new deferred from my handler seems ideal,
as the reactor just does the right thing.

> Or, written using the helper function twisted.internet.defer.maybeDeferred,
> 
>     def cbHandler(result):
>         if result:
>             del self.onwire[msg.id]
>     result = maybeDeferred(handler, msg.value, *args, **kwargs)
>     result.addCallback(cbHandler)
> 
> This correctly handles both Deferred and non-Deferred results.  I don't
> have any idea if this change to ldaptor is correct with respect to LDAP
> semantics/requirements or the particular implementation details of the
> code in question here, though.

Yes, this would seem the correct thing to do!  I'll have to work out a
patch that does this and see where we're at.



From exarkun at twistedmatrix.com  Sat May  3 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 May 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1209873907.58.1008862784@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080504/b86a9e43/attachment.html>

From adelagon at gmail.com  Mon May  5 01:32:54 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 15:32:54 +0800
Subject: [Twisted-Python] DNSQueryRefusedError question
Message-ID: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>

Can anyone explain what is causing this exception?

twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
instance at 0xb78470cc>

I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
getting this failure during smtp.sendmail(). Thank you in advance. :)

---
Alvin Delagon

-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080505/bad69029/attachment.html>

From adelagon at gmail.com  Mon May  5 02:03:40 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 16:03:40 +0800
Subject: [Twisted-Python] Re: DNSQueryRefusedError question
In-Reply-To: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
References: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
Message-ID: <7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>

Let me rephrase, the exception comes from a code that looks like this:

calc = twisted.relaymanager.MXCalculator()
calc.getMX("gmail.com").addCallback(sendEmail, mail)

def sendEmail(mail):
.
.
.

It seems that the failure comes from twited.relaymanager.MXCalculator.

On Mon, May 5, 2008 at 3:32 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Can anyone explain what is causing this exception?
>
> twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
> instance at 0xb78470cc>
>
> I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
> getting this failure during smtp.sendmail(). Thank you in advance. :)
>
> ---
> Alvin Delagon
>
> --
> http://www.alvinatorsplayground.blogspot.com/




-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080505/7f95a1e7/attachment.html>

From adelagon at gmail.com  Mon May  5 03:06:39 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 5 May 2008 17:06:39 +0800
Subject: [Twisted-Python] Re: DNSQueryRefusedError question
In-Reply-To: <7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>
References: <7a01f6c00805050032o7e679325n465220294a0e807c@mail.gmail.com>
	<7a01f6c00805050103x68114b2bmda8f8c436af9835c@mail.gmail.com>
Message-ID: <7a01f6c00805050206u4fe31d80w4e69558304cc4e40@mail.gmail.com>

Please disregard the question. We just found out that we have problematic
DNS servers on our /etc/resolv.conf. Thanks. :)

---
Alvin Delagon

On Mon, May 5, 2008 at 4:03 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Let me rephrase, the exception comes from a code that looks like this:
>
> calc = twisted.relaymanager.MXCalculator()
> calc.getMX("gmail.com").addCallback(sendEmail, mail)
>
> def sendEmail(mail):
> .
> .
> .
>
> It seems that the failure comes from twited.relaymanager.MXCalculator.
>
>
> On Mon, May 5, 2008 at 3:32 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>
>> Can anyone explain what is causing this exception?
>>
>> twisted.names.error.DNSQueryRefusedError: <twisted.names.dns.Message
>> instance at 0xb78470cc>
>>
>> I'm using twisted.mail.smtp which subclasses twisted.names.dns. I keep
>> getting this failure during smtp.sendmail(). Thank you in advance. :)
>>
>> ---
>> Alvin Delagon
>>
>> --
>> http://www.alvinatorsplayground.blogspot.com/
>
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080505/0a5f8982/attachment.html>

From mailing_lists at evotex.ch  Mon May  5 09:20:26 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 05 May 2008 17:20:26 +0200
Subject: [Twisted-Python] How to get port when using application
Message-ID: <481F25BA.4090401@evotex.ch>

Hello, I am going to use application and I have a question,
I have a server that needs to get a free port, before I would do this :

    ...

    port = reactor.listenTCP(0, f).getHost().port

    ...

and now with application all I could find to do the equivilent was :

    ...

    t = internet.TCPServer(0, tcpFactory)
    port = p._getPort()._realPortNumber
    ...
    
the problem is that this isn't very clean as I'm accessing protected 
members.

Is there a better way of doing this?

Thank you,
Gabriel



From andrewfr_ice at yahoo.com  Mon May  5 09:46:16 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 5 May 2008 08:46:16 -0700 (PDT)
Subject: [Twisted-Python] Problem Changing Time Format of a Log
In-Reply-To: <E1JsK9b-00028i-TO@cube.twistedmatrix.com>
Message-ID: <959698.62239.qm@web34201.mail.mud.yahoo.com>

Hi Zookoo and Cameron:

On May 2, 2008, at 9:54 AM, Andrew Francis wrote:

>Does this mean that the the method raised an
exception >but the twisted logging infrastructure
isn't telling >you what the exception was?

>I've done this successfully:

>http://allmydata.org/trac/tahoe/browser/src/allmydata/node.py?

>rev=2360#L201

Thanks for the pointer. A part of my problem was that
I forgot to import datetime. Anyhow, I re-read the
documentation and solved my problem by doing:

log.FileLogObserver.timeFormat = '%Y/%m/%d %H:%M:%d"

However as Cameron suggested, I will upgrade to
Twisted 8 when it is convenient. 

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From terry at jon.es  Mon May  5 11:10:39 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 5 May 2008 19:10:39 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and avoiding
	Unhandled error in Deferred messages
Message-ID: <18463.16271.516266.379803@jon.es>

If I pass a list of deferreds to DeferredList and want to add a callback to
the DeferredList to look at whatever errors have occurred in the underlying
deferreds, should I do something like this:

  deferreds = []
  for x in whatever:
    deferreds.append(funcReturningDeferred(x))

  dl = DeferredList(deferreds)
  dl.addCallback(errorCheckingFunc)

  for d in deferreds:
    d.addErrback(lambda _: pass)


This ensures that errorCheckingFunc gets defer.FAILURE for those deferreds
that finished up in their errback chain. Adding the lambda _: pass errback
to each deferred in deferreds after it has been passed to DeferredList
makes sure the errback chain doesn't later reach its end with an unhandled
error.

It that the right/best/approved way to handle needing to deal with errors
in the callback of a DeferredList and not trigger the "Unhandled error in
Deferred" message?

Terry



From mithrandi at mithrandi.net  Mon May  5 11:58:14 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 May 2008 19:58:14 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and
	avoiding Unhandled error in Deferred messages
In-Reply-To: <18463.16271.516266.379803@jon.es>
References: <18463.16271.516266.379803@jon.es>
Message-ID: <20080505175814.GA16090@mithrandi.net>

* Terry Jones <terry at jon.es> [2008-05-05 19:10:39 +0200]:

> If I pass a list of deferreds to DeferredList and want to add a callback to
> the DeferredList to look at whatever errors have occurred in the underlying
> deferreds, should I do something like this:

You might want to look at the gatherResults() utility function which
returns a deferred that either fires with a list of the results, or
errbacks with the first error to occur.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080505/0ac1302c/attachment.sig>

From andrewfr_ice at yahoo.com  Mon May  5 12:11:48 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 5 May 2008 11:11:48 -0700 (PDT)
Subject: [Twisted-Python] EuroPython 2008
Message-ID: <542236.59253.qm@web34206.mail.mud.yahoo.com>

Hi Folks:

I noticed the deadline for EuroPython is May 22nd,
2008. I have been designing a new talk on Stackless
and Twisted and I am thinking about submitting a talk
proposal.

I am curious if anyone is planning to give a talk?

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From terry at jon.es  Mon May  5 14:02:33 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 5 May 2008 22:02:33 +0200
Subject: [Twisted-Python] Counting errors in a DeferredList and
	avoiding Unhandled error in Deferred messages
In-Reply-To: Your message at 19:58:14 on Monday, 5 May 2008
References: <18463.16271.516266.379803@jon.es>
	<20080505175814.GA16090@mithrandi.net>
Message-ID: <18463.26585.137196.424472@jon.es>

Hi Tristan

> You might want to look at the gatherResults() utility function which
> returns a deferred that either fires with a list of the results, or
> errbacks with the first error to occur.

Thanks. I can see how I'd write this, given Jean-Paul's reply.

Terry



From lxx1234 at gmail.com  Mon May  5 23:41:44 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Tue, 6 May 2008 13:41:44 +0800
Subject: [Twisted-Python]The problem afer reactor stoped....
Message-ID: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>

Hi,all
   I want to write a program that can send some e-mails automaticlly,i
use the code like this:

def sendmail(authenticationUsername, authenticationSecret,fromAddress,
toAddress,messageFile,smtpHost, smtpPort=25):
    resultDeferred = Deferred()
    senderFactory =
ESMTPSenderFactory(authenticationUsername,authenticationSecret,fromAddress,toAddress,messageFile,resultDeferred,requireTransportSecurity=False)
    reactor.connectTCP(smtpHost, smtpPort, senderFactory)
    return resultDeferred

def sendComplete(result):
    print "Message sent."
    reactor.stop()

class EmailUtil:
    def __init__(self,popserver,smptserver,username,password):
        self.popserver=popserver
        self.smtpserver=smptserver
        self.username=username
        self.password=password

    def goSend(self,fromaddr, toaddr, subject, body, filenames):
        message = buildMessage(fromaddr, toaddr, subject, body, filenames)
        messageData = message.as_string(unixfrom=False)
        tempfile=open('temp.mai','wb')
        tempfile.write(messageData)
        tempfile.close()
        print 'Sending.....'
        result =
sendmail(self.username,self.password,fromaddr,toaddr,file('temp.mai'),self.smtpserver)
        result.addCallbacks(sendComplete,handleError)
        reactor.run()

if __name__=='__main__':
    f=EmailUtil('','smtp.xxx.com','xxxx','1234')
    filenames=['test2.docx']
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
    f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)

I try to send the same mail,but after the first mail was sended,the
program deadlock,and i use some tool konws after the first mail
sended,no packets was send to the outside world.I guess maybe the
problem related with the reactor run and stop,but i am sure,any one
can tell me what's problem is?Thanks



From aleuser at inwind.it  Tue May  6 01:09:03 2008
From: aleuser at inwind.it (Alessandro)
Date: Tue, 06 May 2008 09:09:03 +0200
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
Message-ID: <4820040F.6020406@inwind.it>

李祥曦 wrote:
> Hi,all
>   
Hi

>    I want to write a program that can send some e-mails automaticlly,i
> use the code like this:
>   
reactor.stop() and reactor.run() have to be called only one time!

Try the following:

def sendmail(authenticationUsername, authenticationSecret,fromAddress,
...

def sendComplete(result):
print "Message sent."
# reactor.stop() comment this line out!

class EmailUtil:
def __init__(self,popserver,smptserver,username,password):
...

def goSend(self,fromaddr, toaddr, subject, body, filenames):
...
return result.addCallbacks(sendComplete,handleError) # get back the result
# reactor.run() comment this line out

if __name__=='__main__':
twisted.internet.defer import DeferredList

f=EmailUtil('','smtp.xxx.com','xxxx','1234')
filenames=['test2.docx']
dd1 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
dd2 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
dd3 = 
f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
d4ll =DeferredList([dd1,dd2,dd3]) #errback ?

def stop(*arg): reactor.stop()

d4ll.addCallback(stop)
reactor.run()


Note: not tested

You can test EmailUtil alone without twisted, removing his internal 
addCallbacks (you can attach the callback in the main)

Alessandro




From lxx1234 at gmail.com  Tue May  6 02:05:24 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Tue, 6 May 2008 16:05:24 +0800
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <4820040F.6020406@inwind.it>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
	<4820040F.6020406@inwind.it>
Message-ID: <33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>

Very appreciate your help,It can worked,but i want know if it not
possible to run then stop then run reactor again?

2008/5/6 Alessandro <aleuser at inwind.it>:
> 李祥曦 wrote:
> > Hi,all
> >
> >
> Hi
>
>
> >   I want to write a program that can send some e-mails automaticlly,i
> > use the code like this:
> >
> >
> reactor.stop() and reactor.run() have to be called only one time!
>
> Try the following:
>
>
> def sendmail(authenticationUsername, authenticationSecret,fromAddress,
> ...
>
>
> def sendComplete(result):
> print "Message sent."
> # reactor.stop() comment this line out!
>
>
> class EmailUtil:
> def __init__(self,popserver,smptserver,username,password):
> ...
>
>
> def goSend(self,fromaddr, toaddr, subject, body, filenames):
> ...
> return result.addCallbacks(sendComplete,handleError) # get back the result
> # reactor.run() comment this line out
>
> if __name__=='__main__':
> twisted.internet.defer import DeferredList
>
>
> f=EmailUtil('','smtp.xxx.com','xxxx','1234')
> filenames=['test2.docx']
> dd1 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> dd2 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> dd3 =
> f.goSend('xxxx at xxx.com','xxx at hotmail.com','testSend','aaaaaaaaaa',filenames)
> d4ll =DeferredList([dd1,dd2,dd3]) #errback ?
>
> def stop(*arg): reactor.stop()
>
> d4ll.addCallback(stop)
> reactor.run()
>
>
> Note: not tested
>
> You can test EmailUtil alone without twisted, removing his internal
> addCallbacks (you can attach the callback in the main)
>
> Alessandro
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

From screwtape at froup.com  Tue May  6 03:15:13 2008
From: screwtape at froup.com (Tim Allen)
Date: Tue, 6 May 2008 19:15:13 +1000
Subject: [Twisted-Python]The problem afer reactor stoped....
In-Reply-To: <33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>
References: <33fd431f0805052241j7d1fa341vba773d3fc0d53229@mail.gmail.com>
	<4820040F.6020406@inwind.it>
	<33fd431f0805060105y68b47688vccbfdeca2f50de1f@mail.gmail.com>
Message-ID: <20080506091513.GI12496@thristian.org>

On Tue, May 06, 2008 at 04:05:24PM +0800, 李祥曦 wrote:
> Very appreciate your help,It can worked,but i want know if it not
> possible to run then stop then run reactor again?

It is not possible to run, then stop, then run the reactor again.



From curtferguson at cfl.rr.com  Tue May  6 07:56:22 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Tue, 06 May 2008 09:56:22 -0400
Subject: [Twisted-Python] I'm stuck
Message-ID: <48206386.8030302@cfl.rr.com>

Ok, first, I'm a true newbie, I've been playing with twisted, and python
for that matter, for about 3 days.  I've been trying to get this script
to work, and I *know* I've got to be doing something simple wrong.  All
it is, is a slap-together of various examples available in the twisted
documentation to see if I can learn how this works.  Here's the script

All it is supposed to do at this point is accept a normal telnet
connection on one port and authenticate it, and an ssh on another, and
authenticate, I'm attempting to write an interpreter to connect both
inputs to, but right now I'm stuck getting the connections to hold.

Any assistance would be most welcome.

from zope.interface import implements

from twisted.internet import protocol
from twisted.application import service, strports
from twisted.conch.ssh import session
from twisted.conch import interfaces as iconch
from twisted.cred import portal, checkers
from twisted.python import usage

from twisted.conch.insults import insults
from twisted.conch import recvline, manhole_ssh, telnet

class parseInput(recvline.HistoricRecvLine):

    def connectionMade(self):
        print("Got Connection to parseInput")
        recvline.HistoricRecvLine.connectionMade(self)
        print("Came back from the undercall")
        self.interpreter=commandInterpreter

    def handle_QUIT(self):
        self.terminal.loseConnection()

    def lineReceived(self, line):
        print("Input, " + line)
        self.terminal.write("I got, " + line)

class makeTelnetProtocol:
    def __init__(self, portal):
        self.portal = portal

    def __call__(self):
        auth = telnet.AuthenticatingTelnetProtocol
        args = (self.portal,)
        return telnet.TelnetTransport(auth, *args)

class chainedProtocolFactory:
    def __init__(self, namespace):
        self.namespace = namespace

    def __call__(self):
        return insults.ServerProtocol(parseInput, self.namespace)

class _BaseTelnetRealm:
    implements(portal.IRealm)

    def __init__(self, proto, *a, **kw):
        self.protocolFactory = proto
        self.protocolArgs = a
        self.protocolKwArgs = kw

    def requestAvatar(self, avatarId, *interfaces):
        if telnet.ITelnetProtocol in interfaces:
            return (telnet.ITelnetProtocol,
                    self.protocolFactory(*self.protocolArgs,
**self.protocolKwArgs),
                    lambda: None)
        raise NotImplementedError()

class Options(usage.Options):
    optParameters = [
        ["telnetPort", "t", None, "strports description of the address
on which to listen for telnet connections"],
        ["sshPort", "s", None, "strports description of the address on
which to listen for ssh connections"]]

    def __init__(self):
        usage.Options.__init__(self)
        self.users = []
        self['namespace'] = None

    def opt_user(self, name):
        self.users.append(name)

    def postOptions(self):
        if self['telnetPort'] is None and self['sshPort'] is None:
            raise usage.UsageError("At least one of --telnetPort and
--sshPort must be specified")

def makeService(options):
    """Create a server service.

    @type options: C{dict}
    @param options: A mapping describing the configuration of
    the desired service.  Recognized key/value pairs are::

        "telnetPort": strports description of the address on which
                      to listen for telnet connections.  If None,
                      no telnet service will be started.

        "sshPort": strports description of the address on which to
                   listen for ssh connections.  If None, no ssh
                   service will be started.

        "namespace": dictionary containing desired initial locals
                     for manhole connections.  If None, an empty
                     dictionary will be used.

    @rtype: L{twisted.application.service.IService}
    @return: A server service.
    """

    svc = service.MultiService()

    namespace = options['namespace']
    if namespace is None:
        namespace = {}

    checker = checkers.InMemoryUsernamePasswordDatabaseDontUse()
    checker.addUser("guest", "testing")

    if options['telnetPort']:
        telnetRealm = _BaseTelnetRealm(telnet.TelnetBootstrapProtocol,
                                   insults.ServerProtocol,
                                   parseInput,
                                   namespace)

        telnetPortal = portal.Portal(telnetRealm, [checker])

        telnetFactory = protocol.ServerFactory()
        telnetFactory.protocol = makeTelnetProtocol(telnetPortal)
        telnetService = strports.service(options['telnetPort'],
                                         telnetFactory)
        telnetService.setServiceParent(svc)

    if options['sshPort']:
        sshRealm = manhole_ssh.TerminalRealm()
        sshRealm.chainedProtocolFactory = chainedProtocolFactory(namespace)

        sshPortal = portal.Portal(sshRealm, [checker])
        sshFactory = manhole_ssh.ConchFactory(sshPortal)
        sshService = strports.service(options['sshPort'],
                                      sshFactory)
        sshService.setServiceParent(svc)

    return svc

application = service.Application("Learn Twisted")
makeService({"telnetPort": "tcp:9900",
             "sshPort": "tcp:9901",
             "namespace": {"foo": "bar"}}).setServiceParent(application)




From exarkun at divmod.com  Tue May  6 08:17:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 May 2008 10:17:32 -0400
Subject: [Twisted-Python] I'm stuck
In-Reply-To: <48206386.8030302@cfl.rr.com>
Message-ID: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>

On Tue, 06 May 2008 09:56:22 -0400, Curt <curtferguson at cfl.rr.com> wrote:
>Ok, first, I'm a true newbie, I've been playing with twisted, and python
>for that matter, for about 3 days.  I've been trying to get this script
>to work, and I *know* I've got to be doing something simple wrong.  All
>it is, is a slap-together of various examples available in the twisted
>documentation to see if I can learn how this works.  Here's the script
>
>All it is supposed to do at this point is accept a normal telnet
>connection on one port and authenticate it, and an ssh on another, and
>authenticate, I'm attempting to write an interpreter to connect both
>inputs to, but right now I'm stuck getting the connections to hold.
>
>Any assistance would be most welcome.
>
> [snip]
>
>class parseInput(recvline.HistoricRecvLine):
>
>    def connectionMade(self):
>        print("Got Connection to parseInput")
>        recvline.HistoricRecvLine.connectionMade(self)
>        print("Came back from the undercall")
>        self.interpreter=commandInterpreter
>
>    def handle_QUIT(self):
>        self.terminal.loseConnection()
>
>    def lineReceived(self, line):
>        print("Input, " + line)
>        self.terminal.write("I got, " + line)
>
> [snip]
>
>    if options['telnetPort']:
>        telnetRealm = _BaseTelnetRealm(telnet.TelnetBootstrapProtocol,
>                                   insults.ServerProtocol,
>                                   parseInput,
>                                   namespace)
>
> [snip]

The first problem I notice is that where you're creating the realm,
you're indicating that `parseInput´ should be instantiated with one
positional argument, `namespace´.  However, `parseInput´ takes zero
arguments (beyond self) to its initializer.  This means a TypeError
will be raised when `insults.ServerProtocol´ tries to instantiate
`parseInput´.

You might find the --debug option to `twistd´ helpful in the short
term.  It will drop you into pdb when an unhandled exception happens
so that you can see where the problem occurs, what it is, and look
at the state of the process.

Longer term, unit tests are a great way to isolate failures and get
immediate feedback on whether or not a piece of code or a change to
some code works or not.

Good luck,

Jean-Paul



From wthie at thiengineering.ch  Tue May  6 08:43:46 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 06 May 2008 16:43:46 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206386.8030302@cfl.rr.com>
References: <48206386.8030302@cfl.rr.com>
Message-ID: <48206EA2.5080203@thiengineering.ch>

Hi all

Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
every twenty minutes with up to 200 athena/LivePages connected:

     Traceback (most recent call last):
     --- <exception caught here> ---
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/selectreactor.py", 
line 148, in _doReadOrWrite
         why = getattr(selectable, method)()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
362, in doRead
         return self.protocol.dataReceived(data)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/protocols/basic.py", 
line 233, in dataReceived
         why = self.lineReceived(line)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 1069, 
in lineReceived
         self.allContentReceived()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 1110, 
in allContentReceived
         req.requestReceived(command, path, version)
       File 
"/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 603, 
in requestReceived
         self.host = self.channel.transport.getHost()
       File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
672, in getHost
         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
('INET',)))
       File "<string>", line 1, in getsockname

     socket.error: (22, 'Invalid argument')

Changing reactors does not help, the error is very unspecific. Before I 
start changing the source sprinkling it with log statements is there 
anybody out there who has a cure or knows an explanation.

Thank you so much,

Werner Thie



From curtferguson at cfl.rr.com  Tue May  6 10:30:47 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Tue, 06 May 2008 12:30:47 -0400
Subject: [Twisted-Python] I'm stuck
In-Reply-To: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>
References: <20080506141732.6859.2091394576.divmod.quotient.59543@ohm>
Message-ID: <482087B7.2080609@cfl.rr.com>

The first problem I notice is that where you're creating the realm,
> you're indicating that `parseInput´ should be instantiated with one
> positional argument, `namespace´.  However, `parseInput´ takes zero
> arguments (beyond self) to its initializer.  This means a TypeError
> will be raised when `insults.ServerProtocol´ tries to instantiate
> `parseInput´.
>
> You might find the --debug option to `twistd´ helpful in the short
> term.  It will drop you into pdb when an unhandled exception happens
> so that you can see where the problem occurs, what it is, and look
> at the state of the process.
>
> Longer term, unit tests are a great way to isolate failures and get
> immediate feedback on whether or not a piece of code or a change to
> some code works or not.
>
> Good luck,
>
> Jean-Paul
>
Thank you very much.  That fixed everything.  I knew it had to be
something simple, couldn't see the forest for the trees.  Staring at it
too long I guess.

I need to learn how to do unit tests as well.  Lots of reading still to do.





From warner at lothar.com  Tue May  6 13:24:20 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 12:24:20 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
Message-ID: <20080506122420.4086a4ba@fluxx.allmydata.com>

I've just finished releasing Foolscap-0.2.6, the next-generation remote
object protocol, intended as the successor to Perspective Broker.

This release contains more logging improvements, including the long-awaited
"incident-based logging" system (which dumps "black box" records of recent
events when something bad happens), and several bugfixes. The full release
notes are attached below.

Tarballs can be obtained from foolscap.lothar.com and from PyPI. All releases
are signed by my GPG public key: 0x1514A7BD .

 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.6.tar.gz#md5=2cfb1e033cff29e13df1beb8befe7c08
 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.6.zip#md5=1b2f6038d3016b4fa5c71e6d69f1bac1


For documentation, bugs, and patches, please visit
http://foolscap.lothar.com/trac .

share and enjoy,
 -Brian


* Release 0.2.6 (06 May 2008)

** Compatibility

All releases between 0.1.3 and 0.2.6 (inclusive) are fully wire-compatible.

The saved logfiles produced (by e.g. 'flogtool tail --save-to' and the
log-gatherer) in 0.2.6 and beyond are not readable by tools (e.g. 'flogtool
dump' and 'flogtool filter') from 0.2.5 and earlier.

FURLs which contain "extensions" (described below) will not be tolerated by
foolscap 0.2.5 or earlier. If, at some point in the future, we add such
extensions to published FURLs, then such an application will require
foolscap-0.2.6 or later to interpret those FURLs.

** Logging Changes

*** "Incident" Logging

This release finally implements the "strangeness-triggered logging" espoused
in doc/logging.xhtml . By giving the foolscap logging code a directory to
work with, the logging system will automatically save a compressed pickled
logfile containing the messages that lead up to sufficiently-severe log
event. The docs explain how to control what "sufficiently-severe" means.
These events are retrievable through the logport, although no tools have been
written yet to actually extract them. They are also retrievable by using
'flogtool dump' directly on the incident files.

*** 'flogtool as a subcommand

The implementation of the 'flogtool' executable has been rearranged to make
it possible to add a 'flogtool' subcommand to some other executable.

*** 'flogtool filter' now has --above LEVEL and --from TUBID options
*** 'flogtool dump' has --rx-time option, also shows failure tracebacks
*** gatherer: don't add erroneous UTC-implying "Z" suffix to filename timestamps
*** 'flogtool tail': don't add spurious "0" to timestamps

** constraints no longer reject ('reference',) sequences

The foolscap/banana serialization protocol responds to sending two separate
copies of the same object in the same callRemote message by emitting one
serialized object sequence and one 'reference' sequence: this is the standard
way by which cycles are broken in the serialized data. Unfortunately, the
wire-level constraint checkers in 0.2.5 and earlier would reject reference
sequences with a Violation exception: if they were expecting a tuple, they
would reject anything else, even a reference sequence that pointed at a
tuple.

Worse yet, python's normal constant-object folding code can produce shared
references where you might not expect. In the following example, the two
tuples are identical objects (and result in a 'reference' sequence on the
wire), despite the programmer having typed them separately:

 rref.callRemote("haveTwoTuples", (0,1), (0,1) )

Foolscap-0.2.6 now allows reference sequence in all wire-level constraint
checks, to avoid this false-negative Violation. The post-deserialization
check will still enforce the constraint properly. It just does it late enough
to be able to tell what the reference points to.

** Twisted/pyopenssl compatibility

*** compatible with Twisted-8.0.x

Some unit test failures under Twisted-8.0.x (the most recent release) were
fixed: tests now pass against Twisted-8.0.x, and a buildbot is used to make
sure compatibility is maintained in the future.

*** incompatible with pyOpenSSL-0.7

An incompatibility has been discovered with the most recent version of
PyOpenSSL. pyopenssl 0.6 works correctly, but pyopenssl 0.7 causes modern
versions of Twisted (both 2.5.x and 8.0.x) to follow a code path that breaks
the Foolscap unit tests. This may or may not cause a problem in actual
application use (the symptom is that the non-winning parallel connections are
not disconnected properly, and several negotiation timers are left running).
Until a fix is developed for either Twisted or PyOpenSSL, the recommended
workaround is to downgrade to PyOpenSSL-0.6 . Twisted bug #3218 and Foolscap
bug #62 exist to track this problem.

** setup.py is more setuptools-friendly

The foolscap version string is located with a regular expression rather than
an import, allowing setuptools to install Foolscap as a build-dependency of
some other project without having Twisted available first. If setuptools is
available, we also declare a dependency upon Twisted (at least 2.4.0), to
give more information to the setuptools dependency-auto-installer.

** Unauthenticated FURLs can now contain multiple connection hints

Previously they were limited to a single one

** FURLs can now contain extensions, providing forwards-compatibility

The parsing of FURLs has been refined to tolerate (and ignore) certain kinds
of extensions. The "tubid" section will be able to have additional
identifiers (perhaps stronger hashes for the public key, or an
encryption-ready EC-DSA public key). In addition, the "connection hints"
section will be able to contain alternate protocol specifiers (for TCP over
IPv6, or a less connection-oriented UDP transport).

By ignoring such extensions, foolscap-0.2.6 will tolerate FURLs produced
(with extensions) by some future version of foolscap. This marks the
beginning of a "transition period": when such extensions are introduced,
0.2.6 will be the oldest version still capable of interoperating with the
extension-using new version.



From phil at bubblehouse.org  Tue May  6 13:35:52 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 6 May 2008 15:35:52 -0400
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506122420.4086a4ba@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
Message-ID: <AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>

On May 6, 2008, at 3:24 PM, Brian Warner wrote:
> I've just finished releasing Foolscap-0.2.6, the next-generation  
> remote
> object protocol, intended as the successor to Perspective Broker.

With all respect (as I am very interested and excited by the work  
being done with Foolscap), I have to ask if it is still accurate to  
market Foolscap as the 'successor' or 'replacement' for PB.

Considering the confusion around a similar situation (e.g., web2 as a  
rewrite of web1), it seems like it would be best to avoid referring to  
something as the replacement for Twisted component until that's  
actually the case...

Just my 2/100ths...

-phil



From nathan.stocks at gmail.com  Tue May  6 14:27:20 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 6 May 2008 14:27:20 -0600
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506122420.4086a4ba@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
Message-ID: <96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>

On Tue, May 6, 2008 at 1:24 PM, Brian Warner <warner at lothar.com> wrote:
> I've just finished releasing Foolscap-0.2.6, the next-generation remote
>  object protocol, intended as the successor to Perspective Broker.

What's the current stability of foolscap?  Is it deemed stable enough
for production, or is it more beta, alpha, etc.?

~ Nathan



From matthieu.brucher at gmail.com  Tue May  6 15:38:13 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Tue, 6 May 2008 23:38:13 +0200
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
Message-ID: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>

Hi,

I'm currently trying to implement the JXTA standard (http://www.jxta.org) in
Python using twisted (because it seems to be the right choice). I've
implemented the basic parts that are not network related, that is, not much
;)

To make a correct JXTA peer (well designed to be modular and to be able to
add services), I have cascade several services (I think they should be
services, but I can be wrong, I'm a real beginner with Twisted). For
instance:
network -> TCP transport layer service -> endpoint service -> some other
high level services -> endpoint service -> TCP transport layer (may not be
the same as the first one).

Is there a sample somewhere that does something like this ? Each time an
event is sent to a listener (the TCP transport layer, the endpoint, ...)
that acts upon it. I've tried to find some samples over the Internet, but
perhaps someone has a pointer to help me ?

Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080506/db3a9a6a/attachment.html>

From glyph at divmod.com  Tue May  6 16:00:17 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 06 May 2008 22:00:17 -0000
Subject: [Twisted-Python] socket error 22
Message-ID: <20080506220017.25821.561534931.divmod.xquotient.7676@joule.divmod.com>


On 02:43 pm, wthie at thiengineering.ch wrote:
>Hi all

Hi Werner!  Thanks for reporting this issue.  It's always nice to hear 
about problems under high load.  I hope we can get it fixed.
>Running on twisted 2.5 OpenBSD I see the following traceback in the 
>logs every twenty minutes with up to 200 athena/LivePages connected:

>         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
>('INET',)))
>       File "<string>", line 1, in getsockname
>
>     socket.error: (22, 'Invalid argument')

>Changing reactors does not help, the error is very unspecific. Before I 
>start changing the source sprinkling it with log statements is there 
>anybody out there who has a cure or knows an explanation.

We don't have an OpenBSD buildbot, so I don't know if this is a 
platform-specific issue.  Can you reproduce it on Linux or FreeBSD, for 
which there are officially-supported buildbots on 
http://buildbot.twistedmatrix.com/supported?branch=trunk ?

One possible issue here is that the POSIX standard says that getsockname 
may fail with EINVAL if the socket has been shut down:

http://www.opengroup.org/onlinepubs/009695399/functions/getsockname.html

but Linux says that it may fail with EINVAL only if the namelen 
parameter is invalid:

    http://linux.die.net/man/2/getsockname

However, it seems wrong that openbsd would shut down the socket without 
giving some other notification (the usual stuff that Twisted uses to get 
notified of a socket shutting down; presence in the write-selected set, 
an error in send() or recv()); i.e. you should see connectionLost called 
before this error can occur.

If you really want to run Twisted on OpenBSD though, the first step 
should be getting a buildbot going and submitting any patches for failed 
tests.  Otherwise any suggestions from core developers are just going to 
be guesses...



From glyph at divmod.com  Tue May  6 16:09:24 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 06 May 2008 22:09:24 -0000
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
In-Reply-To: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
References: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
Message-ID: <20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>


On 09:38 pm, matthieu.brucher at gmail.com wrote:
>I'm currently trying to implement the JXTA standard 
>(http://www.jxta.org) in
>Python using twisted (because it seems to be the right choice). I've
>implemented the basic parts that are not network related, that is, not 
>much
>;)

Of course it's the right choice.  Twisted is *awesome* ;-).
>network -> TCP transport layer service -> endpoint service -> some 
>other
>high level services -> endpoint service -> TCP transport layer

You use the word "service" a lot here and I'm not sure I understand it. 
There are, unfortunately, a dozen or so things you could mean by it.
>Is there a sample somewhere that does something like this ? Each time 
>an
>event is sent to a listener (the TCP transport layer, the endpoint, 
>...)
>that acts upon it. I've tried to find some samples over the Internet, 
>but
>perhaps someone has a pointer to help me ?

Assuming I do understand what all those "service" and "->"s mean in the 
above text, all you need to do is to

  1) have some objects
  2) keep references between them to other objects
  3) call methods on the relevant objects when the relevant things happen

Quite often, people somehow arrive at the incorrect conclusion that 
because twisted is event-driven, it has some magic "event" mechanism you 
have to use to get different pieces of code to talk to each other. 
Quite the opposite; the whole point of Twisted is to reduce event-driven 
programming to just regular Python method calls.

It may help, if you need to relay messages from one connected Protocol 
object to another, that Protocol objects have a reference to their 
factory, and you can easily keep a list of "all connections" on that 
factory.  This is actually two of our FAQs - have a look at this one and 
the next one:

    http://tinyurl.com/6hpfa7



From glenn at tarbox.org  Tue May  6 18:56:06 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Tue, 06 May 2008 17:56:06 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
Message-ID: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>

Scary thought... 

I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
broad audience WRT levels of Pythonism.. but with other talks having
titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
and of itself is a concern.

This is a good opportunity to decompose Twisted into its core
elements... kinda how it would be presented to mathematics folks.  If I
don't screw it up, it might even be useful to a broader audience trying
to figure out what Twisted is and the kinds of problems it addresses.

I welcome all pointers / content / suggestions.

-glenn





From warner at lothar.com  Tue May  6 20:27:59 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 19:27:59 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<AE532AA2-54D7-4FE3-B64E-3D97E469812F@bubblehouse.org>
Message-ID: <20080506192759.60cf95d6@fluxx.allmydata.com>

> With all respect (as I am very interested and excited by the work  
> being done with Foolscap), I have to ask if it is still accurate to  
> market Foolscap as the 'successor' or 'replacement' for PB.

Fair enough. In the early days (um, 5 years ago? wow), we called this project
PB2. I moved it out of the Twisted SVN tree when the development policies
began to diverge too far (UQDS vs experimental+fast-moving code). I renamed
it to Foolscap at about the same time because of just the sort of uncertainty
that you mentioned, and because sticking with twisted.pb2 was an installation
headache (namespace packages, etc).

At PyCon, the sort of communal marketing position that we seemed to wind up
in (i.e. the set of statements that, once uttered, weren't immediately
corrected or contradicted by everyone else in the room) was that there's a
spectrum, from AMP to PB to Foolscap, in roughly increasing order of
featurefullness/size/complexity. While I see places where I'd use AMP instead
of the others, personally at this point I don't see any reasons to use PB
over Foolscap. But of course I feel more comfortable using Foolscap than
anyone else in the world :-).

I stopped paying attention to PB tickets years ago, and fortunately more
diligent people than me have stepped in and fixed them, so PB is in a better
shape than it was before. It still can't do everything that Foolscap can, and
is unlikely to, because, well, that's what Foolscap is for. But PB is not
going anywhere soon, so if you're intersted in building something that
doesn't require anything outside of the twisted tree, and you don't want
capability-oriented encryption, third-party references, eventual-sends,
adaptor-based third-party serialization, sealers/unsealers, or promises, then
PB is for you.

I still suspect that Foolscap may find its way into twisted/foolscap/ some
day, but I'm not pushing it, and I think it needs to be a lot more mature
first (i.e. I need to be content with seeing the rate of change drop
drastically, as befits anything under the UQDS discipline).

cheers,
 -Brian



From warner at lothar.com  Tue May  6 20:35:34 2008
From: warner at lothar.com (Brian Warner)
Date: Tue, 6 May 2008 19:35:34 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
Message-ID: <20080506193534.1186f43d@fluxx.allmydata.com>

> What's the current stability of foolscap?  Is it deemed stable enough
> for production, or is it more beta, alpha, etc.?

That's an.. emotional question :-), because I've got two hats on.

The foolscap developer hat -wearing Brian wants the freedom to improve the
wire protocol, which probably means breaking compatibility. There are some
versioning hooks in place to make it possible to do this less-breakingly, but
it's a hassle, and if this Brian had his druthers he'd be changing and
breaking things left and right to make them better. This Brian would like to
tell you that it's still alpha.

But the Tahoe/AllMyData developer hat -wearing Brian (you know, the one who
gets a paycheck) is deploying a commercial system with thousands of users who
all use Foolscap-0.2.5 to connect to our servers. This provides a strong
incentive to maintain compatibility :). This Brian is forced to admit that
it's at least beta, and the fact that his company is using it in a production
system suggests that there's at least one group of developers who deems it
stable enough for production.

So Foolscap is likely to maintain wire compatibility for the near future, and
if I really need to add protocol features, I'm pretty sure that I'll go
through the extra work of doing it in a non-breaking way. Take from that what
you will :-).


hope that helps,
 -Brian



From matthieu.brucher at gmail.com  Tue May  6 23:46:39 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 7 May 2008 07:46:39 +0200
Subject: [Twisted-Python] Cascading services (passing events through
	connected services)
In-Reply-To: <20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>
References: <e76aa17f0805061438v504a2b1bma4fa9c7bd96c780@mail.gmail.com>
	<20080506220924.25821.132552700.divmod.xquotient.7705@joule.divmod.com>
Message-ID: <e76aa17f0805062246g5ab1dc04pce5029d70db8cb14@mail.gmail.com>

2008/5/7 <glyph at divmod.com>:

>
> On 09:38 pm, matthieu.brucher at gmail.com wrote:
>
>> I'm currently trying to implement the JXTA standard (http://www.jxta.org)
>> in
>> Python using twisted (because it seems to be the right choice). I've
>> implemented the basic parts that are not network related, that is, not
>> much
>> ;)
>>
>
> Of course it's the right choice.  Twisted is *awesome* ;-).
>
>> network -> TCP transport layer service -> endpoint service -> some other
>> high level services -> endpoint service -> TCP transport layer
>>
>
> You use the word "service" a lot here and I'm not sure I understand it.
> There are, unfortunately, a dozen or so things you could mean by it.


Yes, I know, it is not perfectly clear in my head as well, I have to play
with twisted and JXTA a little more to have a clear picture.


>
>  Is there a sample somewhere that does something like this ? Each time an
>> event is sent to a listener (the TCP transport layer, the endpoint, ...)
>> that acts upon it. I've tried to find some samples over the Internet, but
>> perhaps someone has a pointer to help me ?
>>
>
> Assuming I do understand what all those "service" and "->"s mean in the
> above text, all you need to do is to
>
>  1) have some objects
>  2) keep references between them to other objects
>  3) call methods on the relevant objects when the relevant things happen
>
> Quite often, people somehow arrive at the incorrect conclusion that because
> twisted is event-driven, it has some magic "event" mechanism you have to use
> to get different pieces of code to talk to each other. Quite the opposite;
> the whole point of Twisted is to reduce event-driven programming to just
> regular Python method calls.


That's what I thought reading the tutorial.


> It may help, if you need to relay messages from one connected Protocol
> object to another, that Protocol objects have a reference to their factory,
> and you can easily keep a list of "all connections" on that factory.  This
> is actually two of our FAQs - have a look at this one and the next one:
>
>   http://tinyurl.com/6hpfa7
>

Excallent ! Thanks a lot for this, it will help me a lot !

Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080507/c1137029/attachment.html>

From eric.faurot at gmail.com  Wed May  7 02:00:34 2008
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 7 May 2008 10:00:34 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206EA2.5080203@thiengineering.ch>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
Message-ID: <e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>

On Tue, May 6, 2008 at 4:43 PM, Werner Thie <wthie at thiengineering.ch> wrote:
> Hi all
>
>  Running on twisted 2.5 OpenBSD I see the following traceback in the logs
> every twenty minutes with up to 200 athena/LivePages connected:

[snip]

If you have a lot of connections, you might hit the open file limit, which is
rather low by default on openbsd, especially for default login class.
I would expect the issue to show up differently though.

Try tweaking resource.getrlimit and see what happens when you lower
and increase the LIMIT_NOFILE.

Eric.



From wthie at thiengineering.ch  Wed May  7 07:23:23 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 07 May 2008 15:23:23 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
Message-ID: <4821AD4B.4010804@thiengineering.ch>

Thanks for the hint Eric,

ulimit -Ha
time(cpu-seconds)    unlimited
file(blocks)         unlimited
coredump(blocks)     unlimited
data(kbytes)         1048576
stack(kbytes)        32768
lockedmem(kbytes)    unlimited
memory(kbytes)       unlimited
nofiles(descriptors) 3404
processes            1044

I had this problem before and really hit the nofiles limit, but the 
values above seem to be safe.

With twisted 2.5 I was able to run 'trial twisted' successfully but with 
8.0.1 one of the tests (manyProcesses or so) crashes and locks up the 
system completely.

I seem to be stuck in between a rock and a hard place :-((

Thxs, Werner


Eric Faurot wrote:
> On Tue, May 6, 2008 at 4:43 PM, Werner Thie <wthie at thiengineering.ch> wrote:
>> Hi all
>>
>>  Running on twisted 2.5 OpenBSD I see the following traceback in the logs
>> every twenty minutes with up to 200 athena/LivePages connected:
> 
> [snip]
> 
> If you have a lot of connections, you might hit the open file limit, which is
> rather low by default on openbsd, especially for default login class.
> I would expect the issue to show up differently though.
> 
> Try tweaking resource.getrlimit and see what happens when you lower
> and increase the LIMIT_NOFILE.
> 
> Eric.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From radix at twistedmatrix.com  Wed May  7 07:43:24 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 May 2008 09:43:24 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <4821AD4B.4010804@thiengineering.ch>
References: <48206386.8030302@cfl.rr.com> <48206EA2.5080203@thiengineering.ch>
	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>
	<4821AD4B.4010804@thiengineering.ch>
Message-ID: <60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>

On Wed, May 7, 2008 at 9:23 AM, Werner Thie <wthie at thiengineering.ch> wrote:
> Thanks for the hint Eric,
>
>  ulimit -Ha
>  time(cpu-seconds)    unlimited
>  file(blocks)         unlimited
>  coredump(blocks)     unlimited
>  data(kbytes)         1048576
>  stack(kbytes)        32768
>  lockedmem(kbytes)    unlimited
>  memory(kbytes)       unlimited
>  nofiles(descriptors) 3404
>  processes            1044
>
>  I had this problem before and really hit the nofiles limit, but the values
> above seem to be safe.
>
>  With twisted 2.5 I was able to run 'trial twisted' successfully but with
> 8.0.1 one of the tests (manyProcesses or so) crashes and locks up the system
> completely.
>
>  I seem to be stuck in between a rock and a hard place :-((

Can you please try the prerelease of Twisted 8.1.0? It's available at

http://twistedmatrix.com/users/radix/8.1.0pre2/

There were some regressions in 8.0.1 that have been fixed.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From wthie at thiengineering.ch  Wed May  7 09:54:52 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 07 May 2008 17:54:52 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>
References: <48206386.8030302@cfl.rr.com>
	<48206EA2.5080203@thiengineering.ch>	<e012d6b50805070100r5ab3dc2bv59627d06bda52f98@mail.gmail.com>	<4821AD4B.4010804@thiengineering.ch>
	<60ed19d40805070643u65e7969fg69341a201974c2b7@mail.gmail.com>
Message-ID: <4821D0CC.10301@thiengineering.ch>

Hi Christopher

Updated to 8.1.0pre2:
  trial runs now ok:

Ran 3758 tests in 951.295s

FAILED (skips=90, expectedFailures=17, failures=10, errors=21, 
successes=3629)

Attached is the log of the trial run.

HTH, Werner

Christopher Armstrong wrote:
> On Wed, May 7, 2008 at 9:23 AM, Werner Thie <wthie at thiengineering.ch> wrote:
>> Thanks for the hint Eric,
>>
>>  ulimit -Ha
>>  time(cpu-seconds)    unlimited
>>  file(blocks)         unlimited
>>  coredump(blocks)     unlimited
>>  data(kbytes)         1048576
>>  stack(kbytes)        32768
>>  lockedmem(kbytes)    unlimited
>>  memory(kbytes)       unlimited
>>  nofiles(descriptors) 3404
>>  processes            1044
>>
>>  I had this problem before and really hit the nofiles limit, but the values
>> above seem to be safe.
>>
>>  With twisted 2.5 I was able to run 'trial twisted' successfully but with
>> 8.0.1 one of the tests (manyProcesses or so) crashes and locks up the system
>> completely.
>>
>>  I seem to be stuck in between a rock and a hard place :-((
> 
> Can you please try the prerelease of Twisted 8.1.0? It's available at
> 
> http://twistedmatrix.com/users/radix/8.1.0pre2/
> 
> There were some regressions in 8.0.1 that have been fixed.
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial.OpenBSD.Twisted.8.1.0pre2.zip
Type: application/x-zip-compressed
Size: 40973 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080507/11a1fbe5/attachment-0002.bin>

From ddwiggins at advpubtech.com  Wed May  7 10:26:05 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 07 May 2008 09:26:05 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials...
In-Reply-To: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
Message-ID: <fvsl6u$193$1@ger.gmane.org>

Glenn H Tarbox, PhD wrote:
> Scary thought... 
> 
> I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
> broad audience WRT levels of Pythonism.. but with other talks having
> titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
> and of itself is a concern.
> 
> This is a good opportunity to decompose Twisted into its core
> elements... kinda how it would be presented to mathematics folks.  If I
> don't screw it up, it might even be useful to a broader audience trying
> to figure out what Twisted is and the kinds of problems it addresses.
> 
> I welcome all pointers / content / suggestions.

Random synaptic spark: there's probably several different decompositions 
you could use, e.g., architectural, functional, protocol, ...

Happy hunting,

-- 
Don Dwiggins
Advanced Publishing Technology




From nathan.stocks at gmail.com  Wed May  7 11:24:56 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 7 May 2008 11:24:56 -0600
Subject: [Twisted-Python] [ANN] Foolscap-0.2.6 released
In-Reply-To: <20080506193534.1186f43d@fluxx.allmydata.com>
References: <20080506122420.4086a4ba@fluxx.allmydata.com>
	<96c9d6a80805061327n23a6b98bp14ebcd8134a99f70@mail.gmail.com>
	<20080506193534.1186f43d@fluxx.allmydata.com>
Message-ID: <96c9d6a80805071024y5d34fe8fycb9658c9012e7474@mail.gmail.com>

On Tue, May 6, 2008 at 8:35 PM, Brian Warner <warner at lothar.com> wrote:
> > What's the current stability of foolscap?  Is it deemed stable enough
>  > for production, or is it more beta, alpha, etc.?
>
>  That's an.. emotional question :-), because I've got two hats on.
>
>  The foolscap developer hat -wearing Brian wants the freedom to improve the
>  wire protocol, which probably means breaking compatibility. There are some
>  versioning hooks in place to make it possible to do this less-breakingly, but
>  it's a hassle, and if this Brian had his druthers he'd be changing and
>  breaking things left and right to make them better. This Brian would like to
>  tell you that it's still alpha.
>
>  But the Tahoe/AllMyData developer hat -wearing Brian (you know, the one who
>  gets a paycheck) is deploying a commercial system with thousands of users who
>  all use Foolscap-0.2.5 to connect to our servers. This provides a strong
>  incentive to maintain compatibility :). This Brian is forced to admit that
>  it's at least beta, and the fact that his company is using it in a production
>  system suggests that there's at least one group of developers who deems it
>  stable enough for production.
>
>  So Foolscap is likely to maintain wire compatibility for the near future, and
>  if I really need to add protocol features, I'm pretty sure that I'll go
>  through the extra work of doing it in a non-breaking way. Take from that what
>  you will :-).

Great answer!  For my purposes, I'll consider that as "stable but
still under heavy development" ... and wait until it makes it into
Twisted proper.  I avoid extra external dependencies whenever I can.

~ Nathan



From ellisonbg.net at gmail.com  Wed May  7 12:41:16 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Wed, 7 May 2008 12:41:16 -0600
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
Message-ID: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>

Hi,

We have been using Twisted for a long time and are migrating to 8.0.1.
 We are finding that code that ran fine with 2.5.0 is giving problems
with 8.0.1 and it appears to be related to what is happening in
reactor.stop().

The code that is failing looks like this:

##########

from twisted.internet import reactor

d = doSomeThingThatReturnsADeferred()
d.addCallback(handleOK)
d.addCallback(lambda _: reactor.stop())
reactor.run()

##########

The doSomeThingThatReturnsADeferred method is making XMLRPC calls
underneath the hood.

When we run this, it runs OK, but then blows up at the end with:

Traceback (most recent call last):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 185, in addCallbacks
    self._runCallbacks()
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 323, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 387, in _continueFiring
    callable(*args, **kwargs)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 524, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/log.py",
line 51, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/log.py",
line 36, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/tcp.py",
line 577, in connectionLost
    self.connector.connectionLost(reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/base.py",
line 937, in connectionLost
    self.factory.clientConnectionLost(self, reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/web/xmlrpc.py",
line 325, in clientConnectionLost
    self.deferred.errback(reason)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 264, in errback
    self._startRunCallbacks(fail)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/internet/defer.py",
line 293, in _startRunCallbacks
    raise AlreadyCalledError
twisted.internet.defer.AlreadyCalledError:

I have checked and there is no failure object in my callback chain -
this is internal to Twisted.

Has the logic in reactor.stop changed recently?  Any ideas about what
would be causing this?

Thanks

Brian



From radix at twistedmatrix.com  Wed May  7 13:06:28 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 May 2008 15:06:28 -0400
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
References: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
Message-ID: <60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>

On Wed, May 7, 2008 at 2:41 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
> Hi,
>
>  We have been using Twisted for a long time and are migrating to 8.0.1.
>   We are finding that code that ran fine with 2.5.0 is giving problems
>  with 8.0.1 and it appears to be related to what is happening in
>  reactor.stop().

Please try the Twisted 8.1.0 prerelease available at

http://twistedmatrix.com/users/radix/8.1.0pre2/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From clemesha at gmail.com  Wed May  7 18:07:05 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 7 May 2008 17:07:05 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
Message-ID: <d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>

On Tue, May 6, 2008 at 5:56 PM, Glenn H Tarbox, PhD <glenn at tarbox.org> wrote:
> Scary thought...
>
>  I am giving a talk on Twisted at Sage Developer Days.  Its a fairly
>  broad audience WRT levels of Pythonism.. but with other talks having
>  titles like "Cylindrical Algebraic Decomposition", I doubt complexity in
>  and of itself is a concern.
>
>  This is a good opportunity to decompose Twisted into its core
>  elements... kinda how it would be presented to mathematics folks.  If I
>  don't screw it up, it might even be useful to a broader audience trying
>  to figure out what Twisted is and the kinds of problems it addresses.

Hi,

I totally agree that talks that give a "What is Twisted?" type of
presentation are a good opportunity to decompose Twisted into its core elements.

Actually, the Sage project, and how it has been using Twisted,
is actually a really good case study of a project trying to get the most
out of what Twisted offers.

First, let me introduce myself, and tell you why I have a unique
view on the Sage project's use of Twisted.
My name is Alex Clemesha, and I have been involved with the
Sage project since its beginning.  I actually moved to Seattle from UCSD
for a while to work on it, with William Stein, a couple of years ago.

I also once did a small "What is Twisted?" talk at the
University of Washington to many Sage developers about
a year and a half ago, and this was before I really understood
the 'bigger picture' of Twisted, and how all its moving parts are related.

Now, here is how the Sage projects uses Twisted:
(You probably know this, but others might be interested):

a) The Sage notebook: (sagenb.org ,
http://www.flickr.com/photos/sagescreenshots/sets/72157603532209437/)
b) DSage (Distrubuted Sage;
http://www.sagemath.org/doc/html/ref/module-sage.dsage.dsage.html )
c) In the future: math/computation web-service/API

DSage is a framework for parallel computation (similar to ipython1),
and uses Perspective Broker a great deal.  Yi Qiang is the developer,
and he also subscribes to this mailing list, so he might have more to
say about it.

The Sage notebook is something I know a lot more about.
In summary, the Sage notebook is a way to program in a notebook
like interface, in a web browser.  Each abitrary code block is sent to
the server to be executed, and the result is sent back, and displayed inline.
It utilizes twisted.web2 (including a twisted.web2 version of
"guard.SessionWrapper",
written by me ... I have felt the impact of the twisted.web /
twisted.web2 debacel,
but that's a story for another time :)

---

Shifting gears slightly, I would like to tell you about a project that
me and some others have been working very hard on.
It is called Knoboo (pronounced 'nobu') (trac.knoboo.com / knoboo.com)
It's one that is really trying to get that most out of Twisted to
create a online computation notebook (with all the really pretty
front end, kind of like Mathematica + Google Docs + Google Notebook)
combined with remote backend computation 'kernels'.

>From an implementation standpoint, with Twisted, it looks like this:

* A main "App Server", that controls high level access with "twisted.cred"
* Web frontend:  "twisted.web2"
* Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.
* "Kernels":  lightweight XMLRPC servers, local namespace is the
"computation enviroment"
* "Kernel Connections":  "twisted.pb" Perspective Broker
* "Kernel Managers":  start,stop, send signals with
"twisted.internet.protocol.ProcessProtocol"

Now I would like to pause for a minute and say:
"Damn!, look at the above list.  Twisted does a lot ... it's pretty incredible!"

Knoboo is now a "optional package" in Sage, and it
is still changing a lot, but I think it speaks of the general idea of what the
Sage dev group is aiming to get out of Twisted:
to utilize all the separate pieces as best as possible,
to create a single very useful tool.


Probably my main suggestion for Presentation materials
is to go to the Finger Tutorial:
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html
and try to tweak it to really highlight the pieces that are in Twisted
that Sage can benefit from.

Some questions come to mind like:
"We have the Sage notebook, and we have DSage, and we want a
math web service API, how can we tie them together with Twisted?"

and more specifically:
with "twisted.cred" what will a "Notebook" avatar look like
compared to a "DSage" avatar, and how can we write their
different data access methods and other business logic,
so they can best work together?


So, good luck with your presentation!
I'm looking forward to seeing it and hopefully
learning more about Twisted as well.


-Alex














































>
>  I welcome all pointers / content / suggestions.
>
>  -glenn
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ddwiggins at advpubtech.com  Thu May  8 10:42:53 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 08 May 2008 09:42:53 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials...
In-Reply-To: <d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>
References: <1210121766.8768.64.camel@ghtmyth.hq.tarbox.org>
	<d272f0690805071707l48d98c88p35d6e1028a579ade@mail.gmail.com>
Message-ID: <fvvaie$e71$1@ger.gmane.org>

alex clemesha wrote:
>>From an implementation standpoint, with Twisted, it looks like this:
> 
> * A main "App Server", that controls high level access with "twisted.cred"
> * Web frontend:  "twisted.web2"
> * Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.

Interesting; how are you handling asynchrony in SA?  I'm aware of 
sAsync, but haven't looked much into it.  (I'm a step or two behind you, 
actively using adbapi, and thinking about moving to SA when I get some 
breathing room.)

-- 
Don Dwiggins
Advanced Publishing Technology




From andrewfr_ice at yahoo.com  Thu May  8 11:21:02 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 8 May 2008 10:21:02 -0700 (PDT)
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <E1Ju8XL-0007V5-MD@cube.twistedmatrix.com>
Message-ID: <151147.86333.qm@web34203.mail.mud.yahoo.com>

Hi Glen:

>  This is a good opportunity to decompose Twisted
into >its core  elements... kinda how it would be
presented >to mathematics folks. If I don't screw it
up, it might >even be useful to a broader audience
trying
>to figure out what Twisted is and the kinds of
problems it addresses.

In my PyCon 2008 talk, "Adventures," I have one slide
that categorises Protocols, Deferreds, Callbacks, and
the Reactor. I think those are the key components of
Twisted. For greater completeness, I would add
(protocol) factories.

I guess a type or set theorist would want to know what
sort of operations one performs upon objects of these
types....

I have another slide that describes Twisted's control
flow (from what I can tell). There I get into the
MainLoop and reader/writer sets (there are a few more
entries there). Unfortunately I haven't gotten around
to properly labelling stuff there on the slide.

Cheers,
Andrew








      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From exarkun at divmod.com  Thu May  8 12:14:52 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 May 2008 14:14:52 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <48206EA2.5080203@thiengineering.ch>
Message-ID: <20080508181452.6859.1262246432.divmod.quotient.60608@ohm>

On Tue, 06 May 2008 16:43:46 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi all
>
>Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
>every twenty minutes with up to 200 athena/LivePages connected:
>
>     Traceback (most recent call last):
>     --- <exception caught here> ---
>       File "/usr/local/lib/python2.5/site- 
>packages/twisted/internet/selectreactor.py", line 148, in _doReadOrWrite
>         why = getattr(selectable, method)()
>       File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
>line 362, in doRead
>         return self.protocol.dataReceived(data)
>       File "/usr/local/lib/python2.5/site- 
>packages/twisted/protocols/basic.py", line 233, in dataReceived
>         why = self.lineReceived(line)
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 1069, in lineReceived
>         self.allContentReceived()
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 1110, in allContentReceived
>         req.requestReceived(command, path, version)
>       File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", 
>line 603, in requestReceived
>         self.host = self.channel.transport.getHost()
>       File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
>line 672, in getHost
>         return address.IPv4Address('TCP', *(self.socket.getsockname() + 
>('INET',)))
>       File "<string>", line 1, in getsockname
>
>     socket.error: (22, 'Invalid argument')
>
>Changing reactors does not help, the error is very unspecific. Before I 
>start changing the source sprinkling it with log statements is there anybody 
>out there who has a cure or knows an explanation.
>

I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
done a shutdown of the socket.  Can you tell me what this program does?

    from socket import socket
    port = socket()
    port.bind(('', 0))
    port.listen(1)
    client = socket()
    client.setblocking(False)
    client.connect_ex(port.getsockname())
    server, clientAddr = port.accept()
    print 'Before close', server.getsockname()
    client.close()
    print 'After close', server.getsockname()

If it finishes without error, try it with a time.sleep(5) before the final
line.

Also, to re-iterate what I believe someone else already said in this thread,
the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
buildslave.  It's easy to set up new buildslaves, the only requirements are
that the machine can make outgoing TCP connections to the master and that it
can run the Twisted test suite whenever there's a trunk change or someone
needs to test something on the platform.

Jean-Paul



From clemesha at gmail.com  Thu May  8 16:03:32 2008
From: clemesha at gmail.com (alex clemesha)
Date: Thu, 8 May 2008 15:03:32 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
Message-ID: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>

Hi,

I didn't want to hijack the 'Twisted Presentation Materials..' thread,
so I started this one ...

First off, in the other thread,
Glenn, you mentioned Storm.  I have heard of Storm, but never got
any deeper that noticing that it is still a work in progress (maybe
things have settled down ?)
If anyone has anything to say on how it might be a good choice with
Twisted, please feel free to enlighten us!

But, I hoping to solve some immediate problems with Twisted and
SQLAlchemy, so ...
>>
>> * A main "App Server", that controls high level access with "twisted.cred"
>> * Web frontend:  "twisted.web2"
>> * Data:  some "twisted.enterprise.adbapi", moving to SQLAlchemy.
>
> Interesting; how are you handling asynchrony in SA?
This is the issue that we're stilling unclear on, and I really
would like to know of the best way of integrating Twisted with SQLAlchemy.


Twisted devs / experts:  Please, could you comment on the right way of
using Twisted and SQLAlchemy together.

Anyone: If anyone know of existing code that integrates Twisted and
SQLAlchemy nicely, please share!


RIght away I just went about the problem be wrapping each call
to SQLAlchemy in a "deferToThread" inside my  "DatabaseManager" class.
At startup of my app, I make an instance of this class, and pass it to
each "avatar" (in "requestAvatar", in my portal)

Here is my Database Manager: (you will actually see that I 'turned
off' the deferToThread wrapping for now):
http://trac.knoboo.com/browser/branches/knoboo-sqlalchemy-take2/knoboo/database/manager.py

but I really haven't convinced myself that this is the best way of doing things.
Hell, it could be totally wrong, so if anyone has any advice, I would
be very appreciative!


> I'm aware of sAsync,
> but haven't looked much into it.  (I'm a step or two behind you, actively
> using adbapi, and thinking about moving to SA when I get some breathing
> room.)
I've looked into SAsync as well, but it is not totally clear to me
what the extra benefit of it is (again, anyone who has a good
description, please tell)
The main developer of sAsync use to post to this mailing list, but I haven't
seen him post in a fairly long while.

So, if others are thinking about using SQLAlchemy with Twisted, let's
discuss it more.

Thanks very much,
Alex



From terry at jon.es  Thu May  8 16:26:39 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 9 May 2008 00:26:39 +0200
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: Your message at 15:03:32 on Thursday, 8 May 2008
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <18467.32287.291435.114293@jon.es>

Hi Alex.

> Anyone: If anyone know of existing code that integrates Twisted and
> SQLAlchemy nicely, please share!

  http://developer.berlios.de/projects/nadbapi/

Terry



From clemesha at gmail.com  Thu May  8 17:42:45 2008
From: clemesha at gmail.com (alex clemesha)
Date: Thu, 8 May 2008 16:42:45 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <18467.32287.291435.114293@jon.es>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<18467.32287.291435.114293@jon.es>
Message-ID: <d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>

On Thu, May 8, 2008 at 3:26 PM, Terry Jones <terry at jon.es> wrote:
> Hi Alex.
>
>> Anyone: If anyone know of existing code that integrates Twisted and
>> SQLAlchemy nicely, please share!
>
>  http://developer.berlios.de/projects/nadbapi/

Great, thanks very much for the pointer!

I've have seen the developer (Perillo Manlio) post to this
list several times, I wonder if he has any comment on his package?

The TODO file says:
" Add support for SQLAlchemy 0.3.7"

... so I'm not sure it this is a game breaker for working with
SQLAlchmey 0.4 or not?


It seems as though the code has not been update in about
a year (not since May 30, 2007), so I'm wondering, is the project
stalled, stopped, or works great and doesn't need much more ;)

Thanks again,
Alex



>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From dialtone at gmail.com  Thu May  8 19:39:22 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu, 8 May 2008 18:39:22 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>

On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
> But, I hoping to solve some immediate problems with Twisted and
> SQLAlchemy, so ...

I've long worked on trying to integrate sqlalchemy and twisted in a
useful way but that can only be done when using simple queries. There
are countless reasons behind this limitation, like the fact that
sqlalchemy objects can do a lot of stuff behind the scenes or because
code that you write in other places might use some assumptions because
it's sync rather than async, and there are also problems with possible
bugs and assumptions within sqlalchemy itself. Basically it's not safe
and I wouldn't recommend it for anyone to use the orm together within
a Twisted process.

What I ended up doing is creating subprocesses that have fairly
complex logic and usually spend more than a few seconds doing their
job. By doing this I simply use sqlalchemy synchronously and without
any problems (I was starting to go completely crazy while trying to
debug time-dependent errors when I decided to refactor my code to use
subprocesses instead, everything started working smoothly without any
relevant change in the logic or in the test code and now I can also
run the subprocess as a system script to check and verify stuff or
debug (with pdb)).

Considering that an ORM is only useful (?) for very complex logic I
consider my approach completely sane. Use the query generator for
everything and reserve the orm for long running tasks.

nadbapi and storm-twisted tries to solve the orm problem in a similar
way but nadbapi is no longer maintained, anyway both currently suffer
from an incredible number of deferreds that they generate making the
use of defgen an absolute requirement (and thus lowering overall
performance). If you look hard enough in glyph's old blog or in this
list (I can't remember where exactly) you can find a post about
letting the database deal with concurrency and not spread it in
application code (aka having tons of deferreds). It is true that not
using threads increases speed and memory usage but for this particular
case 99% of the time you are not going to need neither of them anyway.

closing: I recently refactored some code that used sqlalchemy orm into
using just the query generator and instead of taking 17 seconds it now
takes 7 seconds and memory usage has decreased considerably. It's not
really just because an orm is slower than simply executing queries,
but rather because querying the db was so easy; it was basically done
"recklessly" without thinking too much about the performance hit of
going back and forth to the database. This is basically why I'd rather
not use ORMs unless forced by legacy code or because generating a
query would introduce so much complexity to make it an application in
itself (very rare case IMHO).

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From sflist at ihonk.com  Fri May  9 03:23:48 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 02:23:48 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
Message-ID: <1210325028.13706.7.camel@lothar>

Hi all,

I'm hitting the recursion limit in my code (well, somewhere inside
Twisted, that is), and I'd appreciate any insight as to why. I wouldn't
think what I'm doing -- returning a callback from method A which calls
method B, which then in turn calls method A again -- would be
controversial, since I'd assume Python would be letting go of the stack
for method A, but I guess there's more to it than that.

Code demonstrating the issue follows. Running it results in:
    File "/usr/lib/python2.5/site-packages/twisted/python/reflect.py",
line 550, in accumulateBases
        accumulateBases(base, l, baseClass)
    exceptions.RuntimeError: maximum recursion depth exceeded

(This doesn't actually perfectly reflect my problem in the real code I'm
working with. I'm seeing "'maximum recursion depth exceeded' in <bound
method DebugInfo.__del__ of <twisted.internet.defer.DebugInfo instance
at 0xb1d99b6c>>", but I assume this is coming from the same basic
problem in my code.)

===================================

from twisted.internet import defer, reactor

def yo_print(s, d):
    print s
    d.callback(s)
    return s

def some_deferred(item):
    d = defer.Deferred()
    reactor.callLater(0, lambda: yo_print(item, d))
    return d

def start(items):
    dl = []
    for item in items:
        dl.append(some_deferred(item))
        if len(dl) > 4:
            break
    items = items[len(dl):]
    if dl:
        return defer.DeferredList(dl).addCallback(next_batch, items)
    reactor.stop()

def next_batch(_, items):
    return start(items)

if __name__ == '__main__':
    items = []
    for i in range(1651): # 1650 doesn't do it
        items.append(i)
    print start(items)
    reactor.run()
﻿
===================================

So I guess the rule is to never, within a callback chain, call a
function which was invoked earlier in the callback chain?

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080509/8c61c829/attachment.html>

From maarten at treewalker.org  Fri May  9 05:20:57 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 9 May 2008 13:20:57 +0200
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <1210325028.13706.7.camel@lothar>
References: <1210325028.13706.7.camel@lothar>
Message-ID: <200805091321.03338.maarten@treewalker.org>

On Friday 09 May 2008, Steve Freitas wrote:

> def start(items):
>     dl = []
>     for item in items:
>         dl.append(some_deferred(item))
>         if len(dl) > 4:
>             break
>     items = items[len(dl):]
>     if dl:
>         return defer.DeferredList(dl).addCallback(next_batch, items)
>     reactor.stop()
>
> def next_batch(_, items):
>     return start(items)

By returning the DeferredList from next_batch(), you are chaining Deferreds:

http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11

If you remove the "return" from next_batch(), the problem disappears. If you 
want to be able to register a callback when all items are processed, it's 
probably better to create a dedicated Deferred for that instead of chaining 
the DeferredLists.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080509/f64f6bb4/attachment.sig>

From yqiang at gmail.com  Fri May  9 10:39:58 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Fri, 9 May 2008 09:39:58 -0700
Subject: [Twisted-Python] Twisted Presentation Materials...
In-Reply-To: <151147.86333.qm@web34203.mail.mud.yahoo.com>
References: <E1Ju8XL-0007V5-MD@cube.twistedmatrix.com>
	<151147.86333.qm@web34203.mail.mud.yahoo.com>
Message-ID: <3af8969a0805090939s298ea881i4fb7b92fa1c6ff7e@mail.gmail.com>

On Thu, May 8, 2008 at 10:21 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> Hi Glen:
>
>>  This is a good opportunity to decompose Twisted
> into >its core  elements... kinda how it would be
> presented >to mathematics folks. If I don't screw it
> up, it might >even be useful to a broader audience
> trying
>>to figure out what Twisted is and the kinds of
> problems it addresses.
>
> In my PyCon 2008 talk, "Adventures," I have one slide
> that categorises Protocols, Deferreds, Callbacks, and
> the Reactor. I think those are the key components of
> Twisted. For greater completeness, I would add
> (protocol) factories.
>
> I guess a type or set theorist would want to know what
> sort of operations one performs upon objects of these
> types....

I think that actually most people there will probably not be so much
interested in the theory behind twisted as opposed to what
twisted can do for them...now. Mathematicans can be very practical you know ;-)

I think you're right that giving an broad overview of the concepts
behind twisted is a good idea.

Can give a link to your slides when you think it's ready? I would love
to read them.


> I have another slide that describes Twisted's control
> flow (from what I can tell). There I get into the
> MainLoop and reader/writer sets (there are a few more
> entries there). Unfortunately I haven't gotten around
> to properly labelling stuff there on the slide.
>
> Cheers,
> Andrew
>
>
>
>
>
>
>
>
>      ____________________________________________________________________________________
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From sflist at ihonk.com  Fri May  9 11:18:57 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 10:18:57 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <200805091321.03338.maarten@treewalker.org>
References: <1210325028.13706.7.camel@lothar>
	<200805091321.03338.maarten@treewalker.org>
Message-ID: <1210353537.13706.17.camel@lothar>

On Fri, 2008-05-09 at 13:20 +0200, Maarten ter Huurne wrote:
> By returning the DeferredList from next_batch(), you are chaining Deferreds:
> 
> http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11
> 
> If you remove the "return" from next_batch(), the problem disappears. If you 
> want to be able to register a callback when all items are processed, it's 
> probably better to create a dedicated Deferred for that instead of chaining 
> the DeferredLists.

Thanks for your reply, Marteen!

I guess I'm a little mystified by what's going wrong here -- I chain
deferreds all the time -- I'm not sure what it is about returning a few
thousand deferreds wrapped up into a smaller number of DeferredLists
that's causing the problem, and I'd like to understand why.

Steve




From exarkun at divmod.com  Fri May  9 11:40:26 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 May 2008 13:40:26 -0400
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <1210353537.13706.17.camel@lothar>
Message-ID: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>

On Fri, 09 May 2008 10:18:57 -0700, Steve Freitas <sflist at ihonk.com> wrote:
>On Fri, 2008-05-09 at 13:20 +0200, Maarten ter Huurne wrote:
>> By returning the DeferredList from next_batch(), you are chaining Deferreds:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto11
>>
>> If you remove the "return" from next_batch(), the problem disappears. If you
>> want to be able to register a callback when all items are processed, it's
>> probably better to create a dedicated Deferred for that instead of chaining
>> the DeferredLists.
>
>Thanks for your reply, Marteen!
>
>I guess I'm a little mystified by what's going wrong here -- I chain
>deferreds all the time -- I'm not sure what it is about returning a few
>thousand deferreds wrapped up into a smaller number of DeferredLists
>that's causing the problem, and I'd like to understand why.

Sitting at the core of Deferred is a loop over callback functions.  If
you have a chained Deferred, then one of those callbacks is doing to be
a function which recursively calls the function which has that loop.  If
you chain enough Deferreds, then eventually this recursion will fail.  It
turns out to be about 250 Deferreds (roughly 4 stack frames per level of
chaining, with the default limit of 1000 stack frames imposed by CPython)
which will trigger this limit.

It may be possible to replace this recursion with iteration, but I'm not
sure that solves all problems.  After all, if you suddenly have to blow
through thousands of levels of chaining in response to one event, then
you're paying a pretty hefty price which could be avoided by jumping over
all the irrelevant intermediate stuff.  Maybe *that* could be implemented
in Deferred as well somehow, but it's not totally obvious to me how. :)

Hope this helps,

Jean-Paul



From sflist at ihonk.com  Fri May  9 12:30:41 2008
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 May 2008 11:30:41 -0700
Subject: [Twisted-Python] Maximum recursion depth reached
In-Reply-To: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>
References: <20080509174026.6859.671616157.divmod.quotient.61114@ohm>
Message-ID: <1210357841.12403.15.camel@lothar>

﻿On Fri, 2008-05-09 at 13:40 -0400, Jean-Paul Calderone wrote:
> ﻿On Fri, 09 May 2008 10:18:57 -0700, Steve Freitas <sflist at ihonk.com>
wrote:
> >I guess I'm a little mystified by what's going wrong here -- I chain
> >deferreds all the time -- I'm not sure what it is about returning a few
> >thousand deferreds wrapped up into a smaller number of DeferredLists
> >that's causing the problem, and I'd like to understand why.
> 
> Sitting at the core of Deferred is a loop over callback functions.  If
> you have a chained Deferred, then one of those callbacks is doing to be
> a function which recursively calls the function which has that loop.  If
> you chain enough Deferreds, then eventually this recursion will fail.  It
> turns out to be about 250 Deferreds (roughly 4 stack frames per level of
> chaining, with the default limit of 1000 stack frames imposed by CPython)
> which will trigger this limit.

Yep, that helps, Jean-Paul, thanks for the info. I've been chaining
deferreds for years, but I never thought there was a limit to how many
times I could do it, and even if I had, I'd have never expected the
number would be so low. I looked in the docs and found no mention of it.

> It may be possible to replace this recursion with iteration, but I'm not
> sure that solves all problems.  After all, if you suddenly have to blow
> through thousands of levels of chaining in response to one event, then
> you're paying a pretty hefty price which could be avoided by jumping over
> all the irrelevant intermediate stuff.  Maybe *that* could be implemented
> in Deferred as well somehow, but it's not totally obvious to me how. :)
﻿
I disagree that this would be a problem. If I'm chaining 10,000
deferreds, I'm taking responsibility to handle a blow-up of that
magnitude. That's why my original example involved putting 5 deferreds
at a time into a DeferredList -- in my real code I'm checking the
results from that DeferredList and stopping sanely if there's an issue.

Deferred's got too much mojo for me to consider submitting a patch, but
I hope somebody does, since there's no conceptual reason why there
should be such a limit.

/me wanders off to Trac to submit a ticket...

Steve




From gregg at renesys.com  Fri May  9 13:33:19 2008
From: gregg at renesys.com (Gregg Lind)
Date: Fri, 09 May 2008 14:33:19 -0500
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
Message-ID: <4824A6FF.8020309@renesys.com>

Good afternoon!

I notice an oddity with zero-length DeferredLists.

The example script (http://dpaste.com/49099/) should just return the 
contents of a bunch of URLs given at the command line, or some errors 
like so:

$ python test.py a b c
[(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
(False, <twisted.python.failure.Failure twisted.web.error.Error>)]

*but*

$ python test.py     # no arguments
[]
# then hangs, never reaching "quit"


Is this odd behaviour?   In defer.py 's  DeferredList.__init__ there is:

       self.resultList = [None] * len(deferredList)
       Deferred.__init__(self)
       if len(deferredList) == 0 and not fireOnOneCallback:
           self.callback(self.resultList)


Thanks in advance!

Gregg


------------------------
#!/usr/bin/env python
## example script1
from twisted.web.client import getPage
from twisted.internet import reactor, defer

def getUrls(L):
   dL = defer.DeferredList( [getPage(x) for x in L] , consumeErrors=True)
   return dL

def results(data):
   print data
   return
  def quit(data):
   reactor.stop()
   return
  if __name__ == "__main__":
   import sys
   L = sys.argv[1:]
   d = getUrls(L)
   d.addCallback(results)
   d.addCallback(quit )
   reactor.run()



From exarkun at divmod.com  Fri May  9 13:46:53 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 May 2008 15:46:53 -0400
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: <4824A6FF.8020309@renesys.com>
Message-ID: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>

On Fri, 09 May 2008 14:33:19 -0500, Gregg Lind <gregg at renesys.com> wrote:
>Good afternoon!
>
>I notice an oddity with zero-length DeferredLists.
>
>The example script (http://dpaste.com/49099/) should just return the 
>contents of a bunch of URLs given at the command line, or some errors like 
>so:
>
>$ python test.py a b c
>[(False, <twisted.python.failure.Failure twisted.web.error.Error>), (False, 
><twisted.python.failure.Failure twisted.web.error.Error>), (False, 
><twisted.python.failure.Failure twisted.web.error.Error>)]
>
>*but*
>
>$ python test.py     # no arguments
>[]
># then hangs, never reaching "quit"
>

You can do this in a simpler way without involving DeferredList:

    >>> from twisted.internet.defer import succeed
    >>> from twisted.internet import reactor
    >>> d = succeed(None)
    >>> d.addCallback(lambda ign: reactor.stop())
    <Deferred at 0xB7D1F12CL  current result: <twisted.python.failure.Failure twisted.internet.error.ReactorNotRunning>>
    >>> reactor.run()
    <hang>

As you can see from this example, the Deferred already has a result (a
Failure) by the time reactor.run() is called.  Adding a callback to a
Deferred which already has a result (such as succeed(None) or
DeferredList([])) calls the callback immediately.  So your sample program
is trying to stop the reactor before it starts.  Then nothing tries to
stop the reactor after you actually do start it.  If you add an errback
to your Deferred, you'll see the problem reported.  One solution to this
is to use reactor.callWhenRunning(reactor.stop) instead of reactor.stop().

Jean-Paul



From gregg at renesys.com  Fri May  9 13:49:55 2008
From: gregg at renesys.com (Gregg Lind)
Date: Fri, 09 May 2008 14:49:55 -0500
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
References: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
Message-ID: <4824AAE3.2040800@renesys.com>

Jean-Paul!

Thank you for the quick and informative answer!

Gregg

Jean-Paul Calderone wrote:
> On Fri, 09 May 2008 14:33:19 -0500, Gregg Lind <gregg at renesys.com> wrote:
>> Good afternoon!
>>
>> I notice an oddity with zero-length DeferredLists.
>>
>> The example script (http://dpaste.com/49099/) should just return the 
>> contents of a bunch of URLs given at the command line, or some errors 
>> like so:
>>
>> $ python test.py a b c
>> [(False, <twisted.python.failure.Failure twisted.web.error.Error>), 
>> (False, <twisted.python.failure.Failure twisted.web.error.Error>), 
>> (False, <twisted.python.failure.Failure twisted.web.error.Error>)]
>>
>> *but*
>>
>> $ python test.py     # no arguments
>> []
>> # then hangs, never reaching "quit"
>>
>
> You can do this in a simpler way without involving DeferredList:
>
>    >>> from twisted.internet.defer import succeed
>    >>> from twisted.internet import reactor
>    >>> d = succeed(None)
>    >>> d.addCallback(lambda ign: reactor.stop())
>    <Deferred at 0xB7D1F12CL  current result: 
> <twisted.python.failure.Failure 
> twisted.internet.error.ReactorNotRunning>>
>    >>> reactor.run()
>    <hang>
>
> As you can see from this example, the Deferred already has a result (a
> Failure) by the time reactor.run() is called.  Adding a callback to a
> Deferred which already has a result (such as succeed(None) or
> DeferredList([])) calls the callback immediately.  So your sample program
> is trying to stop the reactor before it starts.  Then nothing tries to
> stop the reactor after you actually do start it.  If you add an errback
> to your Deferred, you'll see the problem reported.  One solution to this
> is to use reactor.callWhenRunning(reactor.stop) instead of 
> reactor.stop().
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From terry at jon.es  Fri May  9 14:18:33 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 9 May 2008 22:18:33 +0200
Subject: [Twisted-Python] Oddity(?) with zero-length Deferred lists
In-Reply-To: Your message at 14:49:55 on Friday, 9 May 2008
References: <20080509194653.6859.495615567.divmod.quotient.61166@ohm>
	<4824AAE3.2040800@renesys.com>
Message-ID: <18468.45465.266980.175767@jon.es>

Hi Greg

> Thank you for the quick and informative answer!

You might also read this brief thread if you don't fully follow the answer.
It's exactly the same issue, as I ran into it last month.

  http://twistedmatrix.com/pipermail/twisted-python/2008-April/017590.html

Terry



From ilochab at gmail.com  Sat May 10 18:13:43 2008
From: ilochab at gmail.com (IloChab)
Date: Sun, 11 May 2008 02:13:43 +0200
Subject: [Twisted-Python] Python logging with Twisted
Message-ID: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>

I like Python logging module and I didn't feel comfortable with twisted log.
So I was really happy to find the new PythonLoggingObserver in twisted last
release.

I wrote few modules that came in handy:
1) a NetworkHandler that uses a twisted connection to work with
PythonLoggingObserver
2) a log server that offers a centralized log storage service to distributed
twisted processes that connect to it via that NetworkHandler
3) a GUI to manage log files browsing and interactive dynamic configuration
of logging behavior of any process connected to the server.

I released them as a `twlogging` package on:
http://sourceforge.net/projects/twlogging/
hoping that my work could be useful to someone else!

Licia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080511/34788ccf/attachment.html>

From jml at mumak.net  Sat May 10 20:02:24 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 11 May 2008 12:02:24 +1000
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
Message-ID: <d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>

On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
> I like Python logging module and I didn't feel comfortable with twisted log.
> So I was really happy to find the new PythonLoggingObserver in twisted last
> release.
>
> I wrote few modules that came in handy:
> 1) a NetworkHandler that uses a twisted connection to work with
> PythonLoggingObserver

This bit sounds generic enough that it might be useful to add to
Twisted. Interested in submitting a patch?

jml



From exarkun at twistedmatrix.com  Sat May 10 22:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1210478708.49.1695093007@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080511/a8c74e6a/attachment.html>

From ilochab at gmail.com  Sun May 11 04:48:19 2008
From: ilochab at gmail.com (IloChab)
Date: Sun, 11 May 2008 12:48:19 +0200
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
	<d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
Message-ID: <166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>

2008/5/11 Jonathan Lange <jml at mumak.net>:

> On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
> > I like Python logging module and I didn't feel comfortable with twisted
> log.
> > So I was really happy to find the new PythonLoggingObserver in twisted
> last
> > release.
> >
> > I wrote few modules that came in handy:
> > 1) a NetworkHandler that uses a twisted connection to work with
> > PythonLoggingObserver
>
> This bit sounds generic enough that it might be useful to add to
> Twisted. Interested in submitting a patch?
>  <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>


I'd be pleased, but I don't know how to do it.

L.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080511/80c53128/attachment.html>

From manlio_perillo at libero.it  Mon May 12 03:11:54 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 12 May 2008 11:11:54 +0200
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>	<18467.32287.291435.114293@jon.es>
	<d272f0690805081642t64dc59abm5fc00ffa966a8877@mail.gmail.com>
Message-ID: <482809DA.7060607@libero.it>

alex clemesha ha scritto:
> On Thu, May 8, 2008 at 3:26 PM, Terry Jones <terry at jon.es> wrote:
>> Hi Alex.
>>
>>> Anyone: If anyone know of existing code that integrates Twisted and
>>> SQLAlchemy nicely, please share!
>>  http://developer.berlios.de/projects/nadbapi/
> 
> Great, thanks very much for the pointer!
> 
> I've have seen the developer (Perillo Manlio) post to this
> list several times, I wonder if he has any comment on his package?
> 
> The TODO file says:
> " Add support for SQLAlchemy 0.3.7"
> 
> ... so I'm not sure it this is a game breaker for working with
> SQLAlchmey 0.4 or not?
> 

Ops, sorry.
I have moved everything to a Mercurial repository at:
http://hg.mperillo.ath.cx/nweb/nadbapi/

but, as far as I remember I have announced this somewhere (but not on 
berlios).


Now ndbapi should work with 0.4.x, but I have not tested it with new 
versions.

I'm thinking to simply the code.
Now there are a lot of things I have implemented because my original 
goal was to implement the same interface as dbapi.

It seems that this is not very useful, so I'm thinking of removing 
methods like create, drop, loadTable, fetchall, fetchone, scalar and 
just leave the methods transaction, sessionTransaction and runCallable.

So it will no more be possible to do things like:

users.select().addCallback(...)

but I have never used this and it makes the code more hard to understand.




> 
> It seems as though the code has not been update in about
> a year (not since May 30, 2007), so I'm wondering, is the project
> stalled, stopped, or works great and doesn't need much more ;)
> 
> Thanks again,
> Alex
> 


Regards  Manlio Perillo



From andrewfr_ice at yahoo.com  Mon May 12 09:35:33 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 12 May 2008 08:35:33 -0700 (PDT)
Subject: The Eckel Twisted Blog Post Re: [Twisted-Python] Twisted Presentation
In-Reply-To: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
Message-ID: <630456.79680.qm@web34206.mail.mud.yahoo.com>


Hi Yi:

> I think that actually most people there will
> probably not be so much interested in the theory
>behind twisted as opposed to what
> twisted can do for them...now. Mathematicans can be
> very practical you know ;-)

Well if that is the case, I recommend you look at the
latest Bruce Eckel blog post where he uses PyAMF and
Twisted to do distributed computations. Tres cool.

http://www.artima.com/weblogs/viewpost.jsp?thread=230001

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Mon May 12 11:52:42 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 12 May 2008 10:52:42 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re: 
In-Reply-To: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
Message-ID: <288419.35323.qm@web34208.mail.mud.yahoo.com>

Hi Yi:

> I think you're right that giving an broad overview
> of the concepts
> behind twisted is a good idea.
> 
> Can give a link to your slides when you think it's
> ready? I would love
> to read them.

Well you can get the slides at

https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf

The main problem is redoing the illustrations so I
don't know when I will have an update..... At this
stage I don't think folks care.

That said, I am working on a new presentation,
slightly longer in length, more Stackless and Twisted
examples, less talk about WS-BPEL.

Cheers,
Andrew 



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From Marcin.Kasperski at softax.com.pl  Mon May 12 12:02:49 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 12 May 2008 20:02:49 +0200
Subject: [Twisted-Python] Re: SQLAlchemy and Twisted
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
Message-ID: <874p934cza.fsf@softax.com.pl>

> Anyone: If anyone know of existing code that integrates Twisted and
> SQLAlchemy nicely, please share!

I have never tried it, but spotted some time ago:

http://foss.eepatents.com/sAsync/

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |    You have the right to accept your
| http://mekk.waw.pl | responsibilites instead of having them
|                    |         assigned to you. (Beck)
----------------------------------------------------------------------




From Andy at NewWorldElectric.com  Mon May 12 12:22:02 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 12 May 2008 14:22:02 -0400
Subject: [Twisted-Python] Re: SQLAlchemy and Twisted
In-Reply-To: <874p934cza.fsf@softax.com.pl>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<874p934cza.fsf@softax.com.pl>
Message-ID: <37d49ed40805121122k3c707bc5o9f50004c675c3a2b@mail.gmail.com>

I use that, it doesn't really give a "full" sqlalchemy tool set
(databound objects and such) but it does let me use sqlalchemy's query
building syntax in twisted.  No problems with it though, quite sturdy
and solidly documented.

- Andy Fundinger

On Mon, May 12, 2008 at 2:02 PM, Marcin Kasperski
<Marcin.Kasperski at softax.com.pl> wrote:
> > Anyone: If anyone know of existing code that integrates Twisted and
>  > SQLAlchemy nicely, please share!
>
>  I have never tried it, but spotted some time ago:
>
>  http://foss.eepatents.com/sAsync/
>
>  --
>  ----------------------------------------------------------------------
>  | Marcin Kasperski   |    You have the right to accept your
>  | http://mekk.waw.pl | responsibilites instead of having them
>  |                    |         assigned to you. (Beck)
>  ----------------------------------------------------------------------
>
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to replicate.



From matthieu.brucher at gmail.com  Mon May 12 13:28:11 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Mon, 12 May 2008 21:28:11 +0200
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re:
In-Reply-To: <288419.35323.qm@web34208.mail.mud.yahoo.com>
References: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
	<288419.35323.qm@web34208.mail.mud.yahoo.com>
Message-ID: <e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>

Hi,

I'd like to see those slides, but I'm asked for a user name/password. Is it
possible to make it available somewhere else ?

Thanks,

Matthieu

2008/5/12 Andrew Francis <andrewfr_ice at yahoo.com>:

> Hi Yi:
>
> > I think you're right that giving an broad overview
> > of the concepts
> > behind twisted is a good idea.
> >
> > Can give a link to your slides when you think it's
> > ready? I would love
> > to read them.
>
> Well you can get the slides at
>
>
> https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf
>
> The main problem is redoing the illustrations so I
> don't know when I will have an update..... At this
> stage I don't think folks care.
>
> That said, I am working on a new presentation,
> slightly longer in length, more Stackless and Twisted
> examples, less talk about WS-BPEL.
>
> Cheers,
> Andrew
>
>
>
>
>  ____________________________________________________________________________________
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080512/dc711122/attachment.html>

From yqiang at gmail.com  Mon May 12 14:12:28 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Mon, 12 May 2008 13:12:28 -0700
Subject: [Twisted-Python] Re: Twisted Presentation Materials... Re:
In-Reply-To: <e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>
References: <E1JurUS-0003yn-Ia@cube.twistedmatrix.com>
	<288419.35323.qm@web34208.mail.mud.yahoo.com>
	<e76aa17f0805121228u65107b71n2c0c7e306ed76d36@mail.gmail.com>
Message-ID: <3af8969a0805121312m63a496b4p3d2be1d499fa310b@mail.gmail.com>

If you use this link:

http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf

You can download it without needing a password. I am pretty sure he
just copied and pasted the link from some email program :)

On Mon, May 12, 2008 at 12:28 PM, Matthieu Brucher
<matthieu.brucher at gmail.com> wrote:
> Hi,
>
> I'd like to see those slides, but I'm asked for a user name/password. Is it
> possible to make it available somewhere else ?
>
> Thanks,
>
> Matthieu
>
> 2008/5/12 Andrew Francis <andrewfr_ice at yahoo.com>:
>
>
>
> > Hi Yi:
> >
> > > I think you're right that giving an broad overview
> > > of the concepts
> > > behind twisted is a good idea.
> > >
> > > Can give a link to your slides when you think it's
> > > ready? I would love
> > > to read them.
> >
> > Well you can get the slides at
> >
> >
> https://exchange.mcgill.ca/exchweb/bin/redir.asp?URL=http://us.pycon.org/common/2008/talkdata/PyCon2008/066/PostAdventures_.pdf
> >
> > The main problem is redoing the illustrations so I
> > don't know when I will have an update..... At this
> > stage I don't think folks care.
> >
> > That said, I am working on a new presentation,
> > slightly longer in length, more Stackless and Twisted
> > examples, less talk about WS-BPEL.
> >
> > Cheers,
> > Andrew
> >
> >
> >
> >
> ____________________________________________________________________________________
> > Be a better friend, newshound, and
> > know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> French PhD student
> Website : http://matthieu-brucher.developpez.com/
> Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
>  LinkedIn : http://www.linkedin.com/in/matthieubrucher
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From gregg at renesys.com  Mon May 12 15:16:36 2008
From: gregg at renesys.com (Gregg Lind)
Date: Mon, 12 May 2008 16:16:36 -0500
Subject: [Twisted-Python] Source for Python-ldaptor 0.0.44?
Message-ID: <4828B3B4.7020706@renesys.com>

Hello!

Does any know working svn addresses for ldaptor?  So far, my best luck 
has been use  (in debian)

$apt-get source python-ldaptor 

Is there a more conventional way of getting it? 

Thanks,

Gregg



From clemesha at gmail.com  Mon May 12 22:32:08 2008
From: clemesha at gmail.com (alex clemesha)
Date: Mon, 12 May 2008 21:32:08 -0700
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
Message-ID: <d272f0690805122132w4a280255l17de183d4de36db5@mail.gmail.com>

Hi Valentino,

Thank you very much for the thoughtful response.
I was familiar with the fact that you have some hands on
experience with SQLAlchemy and Twisted, so it's good
to hear true stories from the trenches.

A while back I came upon a talk you did at Europython,
and it had some discussion of Twisted and SQLAlchemy,
with, to be quite honest, some very 'magical' looking code:
http://files.10noodles.com/stiq_at_europython07.pdf

Anyways, it's really looking like the answer to
"how do you combine Twisted and SQLAlchemy"
comes down to: "run it in another process".

I guess the canonical solution to dealing with all
inherently blocking API's with respect to twisted is
run them in separate process, which sounds just fine.

-Alex



On Thu, May 8, 2008 at 6:39 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
>  > But, I hoping to solve some immediate problems with Twisted and
>  > SQLAlchemy, so ...
>
>  I've long worked on trying to integrate sqlalchemy and twisted in a
>  useful way but that can only be done when using simple queries. There
>  are countless reasons behind this limitation, like the fact that
>  sqlalchemy objects can do a lot of stuff behind the scenes or because
>  code that you write in other places might use some assumptions because
>  it's sync rather than async, and there are also problems with possible
>  bugs and assumptions within sqlalchemy itself. Basically it's not safe
>  and I wouldn't recommend it for anyone to use the orm together within
>  a Twisted process.
>
>  What I ended up doing is creating subprocesses that have fairly
>  complex logic and usually spend more than a few seconds doing their
>  job. By doing this I simply use sqlalchemy synchronously and without
>  any problems (I was starting to go completely crazy while trying to
>  debug time-dependent errors when I decided to refactor my code to use
>  subprocesses instead, everything started working smoothly without any
>  relevant change in the logic or in the test code and now I can also
>  run the subprocess as a system script to check and verify stuff or
>  debug (with pdb)).
>
>  Considering that an ORM is only useful (?) for very complex logic I
>  consider my approach completely sane. Use the query generator for
>  everything and reserve the orm for long running tasks.
>
>  nadbapi and storm-twisted tries to solve the orm problem in a similar
>  way but nadbapi is no longer maintained, anyway both currently suffer
>  from an incredible number of deferreds that they generate making the
>  use of defgen an absolute requirement (and thus lowering overall
>  performance). If you look hard enough in glyph's old blog or in this
>  list (I can't remember where exactly) you can find a post about
>  letting the database deal with concurrency and not spread it in
>  application code (aka having tons of deferreds). It is true that not
>  using threads increases speed and memory usage but for this particular
>  case 99% of the time you are not going to need neither of them anyway.
>
>  closing: I recently refactored some code that used sqlalchemy orm into
>  using just the query generator and instead of taking 17 seconds it now
>  takes 7 seconds and memory usage has decreased considerably. It's not
>  really just because an orm is slower than simply executing queries,
>  but rather because querying the db was so easy; it was basically done
>  "recklessly" without thinking too much about the performance hit of
>  going back and forth to the database. This is basically why I'd rather
>  not use ORMs unless forced by legacy code or because generating a
>  query would introduce so much complexity to make it an application in
>  itself (very rare case IMHO).
>
>  --
>  Valentino Volonghi aka Dialtone
>  Now running MacOS X 10.5
>  Home Page: http://www.twisted.it
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From eric.faurot at gmail.com  Tue May 13 04:26:21 2008
From: eric.faurot at gmail.com (Eric Faurot)
Date: Tue, 13 May 2008 12:26:21 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
References: <48206EA2.5080203@thiengineering.ch>
	<20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
Message-ID: <e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>

On Thu, May 8, 2008 at 8:14 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

>  I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
>  done a shutdown of the socket.  Can you tell me what this program does?
>
>    from socket import socket
>    port = socket()
>    port.bind(('', 0))
>    port.listen(1)
>    client = socket()
>    client.setblocking(False)
>    client.connect_ex(port.getsockname())
>    server, clientAddr = port.accept()
>    print 'Before close', server.getsockname()
>    client.close()
>    print 'After close', server.getsockname()
>
>  If it finishes without error, try it with a time.sleep(5) before the final
>  line.

The program works fine in both case.

>  Also, to re-iterate what I believe someone else already said in this
> thread,
>  the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
>  buildslave.  It's easy to set up new buildslaves, the only requirements are
>  that the machine can make outgoing TCP connections to the master and that
> it
>  can run the Twisted test suite whenever there's a trunk change or someone
>  needs to test something on the platform.

I wish I could do something, but I don't have a "spare" machine for this atm.

Eric.



From gregg at renesys.com  Tue May 13 07:13:27 2008
From: gregg at renesys.com (Gregg Lind)
Date: Tue, 13 May 2008 08:13:27 -0500
Subject: [Twisted-Python] Patches for ldaptor setup,
	so that bdist_rpm will work
Message-ID: <482993F7.4020109@renesys.com>

These patches make it so that:

$ python setup.py bdist_rpm

will work in the usual way, making it simple for people to distribute 
python-ldaptor

Thanks!

Gregg
babbledog.com


#### MANIFEST.in
include MANIFEST.in
include TODO
recursive-include debian *
recursive-include po *
recursive-include ldaptor/apps *


#### SETUP.PY
[gregg at irc01 ldaptor]$ diff -c ldaptor-snapshot*/setup.py | less
*** ldaptor-snapshot2/setup.py  2008-05-13 14:15:03.000000000 +0100
--- ldaptor-snapshot/setup.py   2007-06-18 23:12:23.000000000 +0100
***************
*** 118,135 ****
      def run(self):
          if not self.skip_build:
              self.run_command('build_locale')
!         self.outfiles = copy_tree(src=self.build_dir,
                    dst=self.install_dir,
                    dry_run=self.dry_run)
-
-     def get_outputs (self):
-         '''
-         ## there needs to be a get_outputs method for build_rpm
-         ## as part of distutils/install.py
-         ## this should return a list of files to be installed.  -- GRL
-         '''
-         return self.outfiles
-

  if __name__=='__main__':
      setup(name="ldaptor",
--- 118,126 ----
      def run(self):
          if not self.skip_build:
              self.run_command('build_locale')
!         copy_tree(src=self.build_dir,
                    dst=self.install_dir,
                    dry_run=self.dry_run)

  if __name__=='__main__':
      setup(name="ldaptor",




From wthie at thiengineering.ch  Tue May 13 09:29:01 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 13 May 2008 17:29:01 +0200
Subject: [Twisted-Python] socket error 22
In-Reply-To: <e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>
References: <48206EA2.5080203@thiengineering.ch>	<20080508181452.6859.1262246432.divmod.quotient.60608@ohm>
	<e012d6b50805130326g1843462fla98eb10476547624@mail.gmail.com>
Message-ID: <4829B3BD.1000501@thiengineering.ch>

Works like a charm on OpenBSD, with or w/o time.sleep(5).

What now?

Regarding the buildslave I might be able to setup a machine, though only 
connected via some not so fast DSL lines. If DSL is sufficient, tell me 
and I'll take this a step further.

Thanks, Werner

Eric Faurot wrote:
> On Thu, May 8, 2008 at 8:14 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> 
>>  I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer has
>>  done a shutdown of the socket.  Can you tell me what this program does?
>>
>>    from socket import socket
>>    port = socket()
>>    port.bind(('', 0))
>>    port.listen(1)
>>    client = socket()
>>    client.setblocking(False)
>>    client.connect_ex(port.getsockname())
>>    server, clientAddr = port.accept()
>>    print 'Before close', server.getsockname()
>>    client.close()
>>    print 'After close', server.getsockname()
>>
>>  If it finishes without error, try it with a time.sleep(5) before the final
>>  line.
> 
> The program works fine in both case.
> 
>>  Also, to re-iterate what I believe someone else already said in this
>> thread,
>>  the best way to have Twisted work on OpenBSD is for there to be an OpenBSD
>>  buildslave.  It's easy to set up new buildslaves, the only requirements are
>>  that the machine can make outgoing TCP connections to the master and that
>> it
>>  can run the Twisted test suite whenever there's a trunk change or someone
>>  needs to test something on the platform.
> 
> I wish I could do something, but I don't have a "spare" machine for this atm.
> 
> Eric.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Tue May 13 09:37:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 May 2008 11:37:25 -0400
Subject: [Twisted-Python] socket error 22
In-Reply-To: <4829B3BD.1000501@thiengineering.ch>
Message-ID: <20080513153725.6859.735867103.divmod.quotient.62956@ohm>

On Tue, 13 May 2008 17:29:01 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>Works like a charm on OpenBSD, with or w/o time.sleep(5).
>
>What now?

That was my only guess at the moment.

>Regarding the buildslave I might be able to setup a machine, though only 
>connected via some not so fast DSL lines. If DSL is sufficient, tell me and 
>I'll take this a step further.

DSL is fine.  The network traffic is limited to checking out Twisted from
SVN, updating it sometimes, and sending the results of test runs back to
the master.  The thing that's primarily of importance is that it stay
connected so it's available to run the tests whenever changes are made.

If you can get it set up, email me and I'll get you set up with credentials
to connect to the master.

Jean-Paul



From miguel.filho at gmail.com  Wed May 14 07:22:48 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 14 May 2008 10:22:48 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
Message-ID: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>

Hello list,

I have a twisted application in production for some time now, running
under Fedora Core 6, Python 2.4.4 and twisted 2.4. I know, a little
outdated.
The process was running fine for some weeks without any problems,
although I got this exception in my logs and I really have no idea
what it means.  The process did not die and is still running ok.

2008/05/13 16:03 BRT [-] Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/application/app.py",
line 278, in run
            runApp(config)
          File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py",
line 197, in runApp
            app.runReactorWithLogging(config, oldstdout, oldstderr)
          File "/usr/lib/python2.4/site-packages/twisted/application/app.py",
line 131, in runReactorWithLogging
            reactor.run()
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py",
line 218, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py",
line 229, in mainLoop
            self.doIteration(t)
        exceptions.SystemError: unknown opcode


Regards,

Miguel



From dripton at ripton.net  Wed May 14 08:39:23 2008
From: dripton at ripton.net (David Ripton)
Date: Wed, 14 May 2008 07:39:23 -0700
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
Message-ID: <20080514143923.GA17688@vidar.dreamhost.com>

On 2008.05.14 10:22:48 -0300, Miguel Filho wrote:
> I have a twisted application in production for some time now, running
> under Fedora Core 6, Python 2.4.4 and twisted 2.4. I know, a little
> outdated.
> The process was running fine for some weeks without any problems,
> although I got this exception in my logs and I really have no idea
> what it means.  The process did not die and is still running ok.

>         exceptions.SystemError: unknown opcode

This means that Python found an illegal virtual machine instruction.

You can cause this by running or importing a .pyc file from a different
version of Python, without having a matching .py file to fall back on.

-- 
David Ripton    dripton at ripton.net



From miguel.filho at gmail.com  Wed May 14 09:39:11 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 14 May 2008 12:39:11 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <20080514143923.GA17688@vidar.dreamhost.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
	<20080514143923.GA17688@vidar.dreamhost.com>
Message-ID: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>

On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>
> This means that Python found an illegal virtual machine instruction.
>
> You can cause this by running or importing a .pyc file from a different
> version of Python, without having a matching .py file to fall back on.

Hmm, that stills look strange, because I didn't change anything.

Miguel



From radix at twistedmatrix.com  Wed May 14 09:52:13 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 14 May 2008 11:52:13 -0400
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
References: <394cf6840805140622n66177d8pa02632506b6ffb3d@mail.gmail.com>
	<20080514143923.GA17688@vidar.dreamhost.com>
	<394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
Message-ID: <60ed19d40805140852k5378be14u66e1e9d082824f7e@mail.gmail.com>

On Wed, May 14, 2008 at 11:39 AM, Miguel Filho <miguel.filho at gmail.com> wrote:
> On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>  >
>  > This means that Python found an illegal virtual machine instruction.
>  >
>  > You can cause this by running or importing a .pyc file from a different
>  > version of Python, without having a matching .py file to fall back on.
>
>  Hmm, that stills look strange, because I didn't change anything.
>
>  Miguel

I'd run memtest on that machine if I were you.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Wed May 14 10:01:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 May 2008 12:01:27 -0400
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
Message-ID: <20080514160127.6859.1992045789.divmod.quotient.63442@ohm>

On Wed, 14 May 2008 12:39:11 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>On Wed, May 14, 2008 at 11:39 AM, David Ripton <dripton at ripton.net> wrote:
>>
>> This means that Python found an illegal virtual machine instruction.
>>
>> You can cause this by running or importing a .pyc file from a different
>> version of Python, without having a matching .py file to fall back on.
>
>Hmm, that stills look strange, because I didn't change anything.
>

Encountering this after the process has been running for a long time
suggests a memory corruption issue to me.  The fact that it happened
only once while the process is still running and correctly servicing
events further suggests that the corruption was somehow transient, a
somewhat unusual occurance to say the least. :)

Before the SystemError was raised, the process probably wrote a tiny
amount of debug information to stderr.  Is there any chance that got
logged somewhere useful?  In the normal deamonization mode of twistd
it probably would have been discarded since as part of daemonization
stdin, stdout, and stderr are all closed.  The information is barely
useful, though, so it isn't a huge loss, but at least it would point
out which code object had the bad opcode.  The traceback suggests it
was twisted.internet.selectreactor.SelectReactor.doSelect (at least,
if you're using select reactor).  You could attach gdb and check the
the opcodes in the code object for that function, but I imagine they
are correct now, since the process is still running.

So, I have no idea what happened, but it sounds interesting. :)

Jean-Paul



From ninmonkeys at gmail.com  Thu May 15 07:57:53 2008
From: ninmonkeys at gmail.com (Jake b)
Date: Thu, 15 May 2008 08:57:53 -0500
Subject: [Twisted-Python] how to handle game messaging
Message-ID: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>

Hello, I'm new to the list. I've been going through the twisted
tutorials, and now I'm trying to write a simple asteroids clone to
better understand twisted. ( Think asteroids: but 2 players on a LAN )

(1) In a game like this, or even a first person shooter: where message
speed is more important: What is a good way to send messages to/from
the client and server? Important ones like bullet spawning, other
player locations, etc ?

(2) Do you also send a timestamp so that if the client receives the
message 250ms after the spawn, he can step backwards in his physics
simulation to better simulate client-side?

(3) I wrote pseudo-code of how I think the asteroids code messaging
could work. How do I improve messaging? What am I doing wrong? For my
example I'm going to only use LAN ( so I don't have to deal with
latency issues ). I attached the pseudo code.

Here's an overview of the code:

A GameClient() (run once per client) and GameServer() (run once).
There is a list of Bullet()s and a list of Asteroid()s.

When a player fires, he will tell/ask the server. The server will pass
all spawnings onto the clients. I don't think I need to constantly
update the clients with physics updates -- except the locations of the
players. All other updates should be able to be handled on events (
asteroid shot, player collisions, etc... )

thanks,
--
Jake
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 2008.05.08-twisted_game_integration.code.py
Type: text/x-python
Size: 3610 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080515/97e329a4/attachment-0002.py>

From glyph at divmod.com  Thu May 15 13:18:16 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 May 2008 19:18:16 -0000
Subject: [Twisted-Python] how to handle game messaging
In-Reply-To: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>
References: <dc44bb3e0805150657k5c90a13ft1a3dc907303417ca@mail.gmail.com>
Message-ID: <20080515191816.25821.1455835899.divmod.xquotient.8346@joule.divmod.com>


On 01:57 pm, ninmonkeys at gmail.com wrote:
>(1) In a game like this, or even a first person shooter: where message
>speed is more important: What is a good way to send messages to/from
>the client and server? Important ones like bullet spawning, other
>player locations, etc ?

Message speed is more important than what?  Premature optimization and 
all that.

If you're just learning Twisted, consider AMP: 
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

It's not particularly fast or well-suited to a first-person shooter, but 
it is easy.  Make it work, make it right, *then* make it fast.  If you 
don't understand Twisted then "easy" is a lot more important than "fast" 
until you really know what you're doing *AND* you have demonstrated you 
have a real performance issue.
>(2) Do you also send a timestamp so that if the client receives the
>message 250ms after the spawn, he can step backwards in his physics
>simulation to better simulate client-side?

Any network game should have lots of time information in the messages 
that are sent.  Stepping backwards in the physics simulation is one way 
to manage latency, but there are others, and the important thing is 
reacting to latency.
>(3) I wrote pseudo-code of how I think the asteroids code messaging
>could work. How do I improve messaging? What am I doing wrong? For my
>example I'm going to only use LAN ( so I don't have to deal with
>latency issues ). I attached the pseudo code.

Commenting on pseudo-code is kind of pointless; your description was 
vague enough that it might describe a lot of different ideas, some good, 
some bad.  Just write something and see if it works!  If it doesn't, 
then you can distill it down to a simple example and ask more specific 
questions.



From jml at mumak.net  Thu May 15 16:36:46 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 16 May 2008 08:36:46 +1000
Subject: [Twisted-Python] Python logging with Twisted
In-Reply-To: <166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>
References: <166b1c630805101713j765661f4m107fbaae8b629d4b@mail.gmail.com>
	<d06a5cd30805101902vf8faab8ob4bd7f23572c2f87@mail.gmail.com>
	<166b1c630805110348x208f0407xf57aad22f523220d@mail.gmail.com>
Message-ID: <d06a5cd30805151536j6c9566fcq2892315ae71bca5d@mail.gmail.com>

On Sun, May 11, 2008 at 8:48 PM, IloChab <ilochab at gmail.com> wrote:
>
>
> 2008/5/11 Jonathan Lange <jml at mumak.net>:
>>
>> On Sun, May 11, 2008 at 10:13 AM, IloChab <ilochab at gmail.com> wrote:
>> > I like Python logging module and I didn't feel comfortable with twisted
>> > log.
>> > So I was really happy to find the new PythonLoggingObserver in twisted
>> > last
>> > release.
>> >
>> > I wrote few modules that came in handy:
>> > 1) a NetworkHandler that uses a twisted connection to work with
>> > PythonLoggingObserver
>>
>> This bit sounds generic enough that it might be useful to add to
>> Twisted. Interested in submitting a patch?
>
> I'd be pleased, but I don't know how to do it.
>

The short answer is "File a bug and then attach some diffs to that bug."

The longer answer is:
- Go to twistedmatrix.com
- Log in / create an account
- Click on "New ticket"
- Describe the feature that you are adding
- Attach the relevant files.

In general, we only land code that has thorough test coverage. We can
help you write the tests if you haven't done much automated testing
before.

There's a page for new contributors here:
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs ... that
said, I notice that it doesn't say how to submit patches.

still-high-on-dvcs-ly yrs,
jml



From jml at mumak.net  Thu May 15 16:39:41 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 16 May 2008 08:39:41 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <1209387659.6476.10.camel@localhost.localdomain>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
	<1209387659.6476.10.camel@localhost.localdomain>
Message-ID: <d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>

On Mon, Apr 28, 2008 at 11:00 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
>> I think the data on this is skewed, since there was about a 1.4 year
>> gap between the last 2 releases of Twisted. If we released each month,
>> I can imagine this would change.
>
> At ITA we've been using 2.4 for quite a while... though someone recently
> switched us to 2.5.
>

That makes one data point :)

jml



From itamar at itamarst.org  Thu May 15 16:46:18 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 May 2008 18:46:18 -0400
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>	<1209387659.6476.10.camel@localhost.localdomain>
	<d06a5cd30805151539u392c34der30fd91c1e6b68e6d@mail.gmail.com>
Message-ID: <482CBD3A.1040209@itamarst.org>

Jonathan Lange wrote:
>> At ITA we've been using 2.4 for quite a while... though someone recently
>> switched us to 2.5.
>>
>>     
>
> That makes one data point :)
>   
A single "we're writing an airline reservation system with important 
parts in Twisted" data point, yes :)



From ellisonbg.net at gmail.com  Thu May 15 21:20:05 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 15 May 2008 21:20:05 -0600
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>
References: <6ce0ac130805071141ud6177c4y236bfe499c1abd6@mail.gmail.com>
	<60ed19d40805071206o32afb0c3u8078750cc7514d20@mail.gmail.com>
Message-ID: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>

>> Hi,
>>
>>  We have been using Twisted for a long time and are migrating to 8.0.1.
>>   We are finding that code that ran fine with 2.5.0 is giving problems
>>  with 8.0.1 and it appears to be related to what is happening in
>>  reactor.stop().
>
> Please try the Twisted 8.1.0 prerelease available at
>
> http://twistedmatrix.com/users/radix/8.1.0pre2/

Using 8.1.0pre2 does solve this problem.  I am curious, what changed
in 8.0.1 (and was fixed in 8.1.0) that causes this?  Also, will this
fix be backported to 8.0.x or should we recommend that people, use
Twisted >= 2.5.0 but not 8.0.1?

Thanks!

Brian

> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Fri May 16 06:08:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 May 2008 08:08:17 -0400
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>
Message-ID: <20080516120818.6859.1459844070.divmod.quotient.64217@ohm>

On Thu, 15 May 2008 21:20:05 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>>> Hi,
>>>
>>>  We have been using Twisted for a long time and are migrating to 8.0.1.
>>>   We are finding that code that ran fine with 2.5.0 is giving problems
>>>  with 8.0.1 and it appears to be related to what is happening in
>>>  reactor.stop().
>>
>> Please try the Twisted 8.1.0 prerelease available at
>>
>> http://twistedmatrix.com/users/radix/8.1.0pre2/
>
>Using 8.1.0pre2 does solve this problem.  I am curious, what changed
>in 8.0.1 (and was fixed in 8.1.0) that causes this?  Also, will this
>fix be backported to 8.0.x or should we recommend that people, use
>Twisted >= 2.5.0 but not 8.0.1?

It's not likely that there'll be another 8.0.x release.  We considered
doing one, but since 8.0.1 isn't packaged in any major distribution,
there doesn't seem to be much point.

Jean-Paul



From dripton at ripton.net  Fri May 16 07:28:03 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 16 May 2008 06:28:03 -0700
Subject: [Twisted-Python] Change in reactor.stop() in Twisted 8.x
In-Reply-To: <20080516120818.6859.1459844070.divmod.quotient.64217@ohm>
References: <6ce0ac130805152020u61aa9ed9l9c672fe9cb7bcf89@mail.gmail.com>
	<20080516120818.6859.1459844070.divmod.quotient.64217@ohm>
Message-ID: <20080516132803.GA22819@vidar.dreamhost.com>

On 2008.05.16 08:08:17 -0400, Jean-Paul Calderone wrote:
> It's not likely that there'll be another 8.0.x release.  We considered
> doing one, but since 8.0.1 isn't packaged in any major distribution,
> there doesn't seem to be much point.

It's in Gentoo.  (Marked as unstable on x86, but not masked.)

-- 
David Ripton    dripton at ripton.net



From radix at twistedmatrix.com  Fri May 16 12:13:12 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 May 2008 14:13:12 -0400
Subject: [Twisted-Python] May Twisted Sprint this weekend
Message-ID: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>

What: Twisted Sprint
Where: Divmod office, in Porter Square, Cambridge, MA
When: 18 May 2008
Who: Anyone who wants to come

Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
hoping Paul Swartz will show up and whoever else wants to come. If
you'd like to come please respond and we'll tell you how to get there,
etc.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Fri May 16 15:49:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 16 May 2008 21:49:11 -0000
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
Message-ID: <20080516214911.25821.1322403689.divmod.xquotient.8384@joule.divmod.com>


On 06:13 pm, radix at twistedmatrix.com wrote:
>What: Twisted Sprint
>Where: Divmod office, in Porter Square, Cambridge, MA
>When: 18 May 2008
>Who: Anyone who wants to come
>
>Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
>18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
>hoping Paul Swartz will show up and whoever else wants to come. If
>you'd like to come please respond and we'll tell you how to get there,
>etc.

It's unfortunately quite likely that I'll miss a large part of this one. 
I'll try to put in an appearance, but I have other pressing obligations 
this weekend.

Still, everyone else should DEFINITELY show up and take some of the 
tickets out of my oh-crap-I'm-the-default-assignee queue!  (198 tickets 
and counting.)



From waterbug at pangalactic.us  Sat May 17 13:26:16 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 17 May 2008 15:26:16 -0400
Subject: [Twisted-Python] Adding a file dialog to wxacceptance.py breaks it
Message-ID: <482F3158.1010306@pangalactic.us>

The attached file is the example wxacceptance.py with a minimal
modification to add a file selection dialog.  If the file dialog
is opened, the counting sequence stops, and although the gui
menus still work and the gui is destroyed normally, it appears
that the reactor hangs, and it has to be killed.

(This example will not work with pre-2.5 versions of wxPython because
I removed the compatibility code, which was getting deprecation
warnings.)

Let me know if I should just put this into a bug report.

Platform:  Ubuntu (gutsy)
Twisted:   8.0.1-r23638 (latest svn)
wxPython:  2.8.7.1

Thanks!
Steve

-------------- next part --------------
A non-text attachment was scrubbed...
Name: wxacceptancemod.py
Type: text/x-python
Size: 3597 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080517/fb0e55a0/attachment-0002.py>

From exarkun at twistedmatrix.com  Sat May 17 22:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1211083508.03.1804471089@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080518/5df3e5bd/attachment.html>

From nadav at MIT.EDU  Sun May 18 16:47:50 2008
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sun, 18 May 2008 18:47:50 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
Message-ID: <4830B216.10101@mit.edu>

Hi,

I'm wondering, is there some built-in Twisted functionality (or any 
other existing implementation using Twisted) for doing 
resumable/disruption tolerant file transfer?

Sample scenario: A sends file to B, session fails for whatever reason. B 
saved whatever data was received in some temporary structure, and knows 
to resume transfer from where it left off or alternatively request 
specific chunks that it is missing.

Wanted to know this before I start implementing such functionality on my 
own.

Thanks!
Nadav







From itamar at itamarst.org  Sun May 18 19:12:19 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 May 2008 21:12:19 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
In-Reply-To: <4830B216.10101@mit.edu>
References: <4830B216.10101@mit.edu>
Message-ID: <1211159539.10447.63.camel@localhost.localdomain>

On Sun, 2008-05-18 at 18:47 -0400, Nadav Aharony wrote:

> I'm wondering, is there some built-in Twisted functionality (or any 
> other existing implementation using Twisted) for doing 
> resumable/disruption tolerant file transfer?
> 
> Sample scenario: A sends file to B, session fails for whatever reason. B 
> saved whatever data was received in some temporary structure, and knows 
> to resume transfer from where it left off or alternatively request 
> specific chunks that it is missing.
> 
> Wanted to know this before I start implementing such functionality on my 
> own.

Yes, that's what the client factory is for - to store data that needs to
last beyond the life of a single connection. For example see
infrastructure used by twisted.web.client.downloadPage for resumable
downloads.




From nadav at MIT.EDU  Sun May 18 23:47:31 2008
From: nadav at MIT.EDU (Nadav Aharony)
Date: Mon, 19 May 2008 01:47:31 -0400
Subject: [Twisted-Python] Question: Resuming a failed TCP transfer
In-Reply-To: <1211159539.10447.63.camel@localhost.localdomain>
References: <4830B216.10101@mit.edu>
	<1211159539.10447.63.camel@localhost.localdomain>
Message-ID: <48311473.7080908@mit.edu>

Itamar Shtull-Trauring wrote:
> On Sun, 2008-05-18 at 18:47 -0400, Nadav Aharony wrote:
>
>   
>> I'm wondering, is there some built-in Twisted functionality (or any 
>> other existing implementation using Twisted) for doing 
>> resumable/disruption tolerant file transfer?
>>
>> Sample scenario: A sends file to B, session fails for whatever reason. B 
>> saved whatever data was received in some temporary structure, and knows 
>> to resume transfer from where it left off or alternatively request 
>> specific chunks that it is missing.
>>
>> Wanted to know this before I start implementing such functionality on my 
>> own.
>>     
>
> Yes, that's what the client factory is for - to store data that needs to
> last beyond the life of a single connection. For example see
> infrastructure used by twisted.web.client.downloadPage for resumable
> downloads.
>
>   
This is exactly what I was looking for, thanks!
Can I safely assume that the part that was initially received is all 
contiguous and correct? (if so this would be because of the TCP CRC 
check for each packet, right?)

-Nadav
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080519/ed8aa26d/attachment.html>

From mg at daimi.au.dk  Mon May 19 02:40:32 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 May 2008 10:40:32 +0200
Subject: [Twisted-Python] Memory size of Deferreds
Message-ID: <w1bprriptz3.fsf@thyra02.daimi.au.dk>

Hello,

I am working on a project called VIFF (http://viff.dk/) which does
secure multiparty computations. Twisted, and in particular the
Deferred class, has been a great tool for this!

Each variable in a computation is stored as a Deferred, and the
computation builds an expression tree based on these Deferreds, which
is then evaluated as the Deferreds call their callbacks.

What worries me is the size of a single Deferred. One user wanted to
do computations on very large lists of Deferreds and reported that his
programs used more memory than expected.

I tried to measure the size of a Deferred by creating large lists of
them and found that a single empty Deferred takes up about 200 bytes.
Adding a callback brings that up to about 500 bytes.

The discussion can be found here:

  http://thread.gmane.org/gmane.comp.cryptography.viff.devel/232

I might be measuring this the wrong way -- I simply looked at how the
memory size grew in 'top' when I created more and more lists.

As noted in the thread above, it helps defining the __slots__
attribute -- it saves the 144 bytes needed for the default object
dictionary. Maybe that could be done for Deferred?

Has anybody measured how much memory the C implementation users per
Deferred? I have not tried it out yet.

  http://twistedmatrix.com/trac/ticket/2245

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From michal.dtz at gmail.com  Mon May 19 13:18:14 2008
From: michal.dtz at gmail.com (Michal Pasternak)
Date: Mon, 19 May 2008 21:18:14 +0200
Subject: [Twisted-Python] Memory size of Deferreds
In-Reply-To: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
Message-ID: <10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>

2008/5/19 Martin Geisler <mg at daimi.au.dk>:
> What worries me is the size of a single Deferred. One user wanted to
> do computations on very large lists of Deferreds and reported that his
> programs used more memory than expected.
>
> I tried to measure the size of a Deferred by creating large lists of
> them and found that a single empty Deferred takes up about 200 bytes.
> Adding a callback brings that up to about 500 bytes.

As such thing as memory allocation is tightly tied to the runtime
environment, it is a bit hard to give reasonable answers without any
information about, at least, an OS and a CPU.

Did the memory in the case you mention grow constantly? Is that user
sure, that it was not a memory leak in his/hers code?

Deferreds, as you all already know, are a core concept that Twisted is
built upon. If you need to optimize such areas of Twisted, then, just
my suggestion - maybe you are using a wrong tool to do the job. If the
memory usage is a problem, then, well, maybe you are trying to do
things at once, when you should do them sequentially (eg. using a
generator). Maybe you should rather look into other areas of the
problem (eg. not try to optimize deferreds, but the code that uses
them). Maybe you should use something else than Deferreds for that
job. As for memory usage of such small objects like Deferreds, well...
Python is, well, Python. Python string or integer uses much more
memory, than C string or int. You can't tune Python string memory
usage, and you hardly can do anything about size of Deferred if that
becomes a problem. On the other hand, you should be able to write
optimal code with Python faster and memory footprint shouldn't be a
problem (from my experience, in many cases Twisted footprint is
suprisingly low).

In other words - if size of Deferred object is your only bottleneck,
then congratulations :-) I'd rather suggest optimizing other parts of
the code - as Deferreds are the core of Twisted, I suppose it could be
a bit hard to do anything about them, in the same way you can't do
anything about memory footprint of core Python objects.

Regards,
-- 
m



From mg at daimi.au.dk  Mon May 19 14:45:26 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 May 2008 22:45:26 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
Message-ID: <87tzgu9g61.fsf@hbox.dyndns.org>

"Michal Pasternak" <michal.dtz at gmail.com> writes:

Thanks for the reply!

> 2008/5/19 Martin Geisler <mg at daimi.au.dk>:
>> What worries me is the size of a single Deferred. One user wanted to
>> do computations on very large lists of Deferreds and reported that his
>> programs used more memory than expected.
>>
>> I tried to measure the size of a Deferred by creating large lists of
>> them and found that a single empty Deferred takes up about 200 bytes.
>> Adding a callback brings that up to about 500 bytes.
>
> As such thing as memory allocation is tightly tied to the runtime
> environment, it is a bit hard to give reasonable answers without any
> information about, at least, an OS and a CPU.

Ah, sorry: I tested this on an Athlon 64 X2 (but with 32-bit Debian). I
simply tested like this:

% python
Python 2.5.2 (r252:60911, Apr 17 2008, 13:15:05) 
[GCC 4.2.3 (Debian 4.2.3-3)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from twisted.internet.defer import Deferred
>>> a = [Deferred() for _ in xrange(100000)]
>>> b = [Deferred() for _ in xrange(100000)]
>>> c = [Deferred() for _ in xrange(100000)]

and noted how the memory usage rose from 8 MiB to 30 MiB, to 52 MiB to
73 MiB in 'top'. So that is about 22 MiB per list -- around ~200 bytes
pr Deferred. (I know there is some overhead for the list.)

> Did the memory in the case you mention grow constantly? Is that user
> sure, that it was not a memory leak in his/hers code?

I think he was just concerned that his application used 450 MiB RAM, and
that made me try to see how big an empty Deferred is.

> Deferreds, as you all already know, are a core concept that Twisted is
> built upon. If you need to optimize such areas of Twisted, then, just
> my suggestion - maybe you are using a wrong tool to do the job. If the
> memory usage is a problem, then, well, maybe you are trying to do
> things at once, when you should do them sequentially (eg. using a
> generator).

Yes, you may be right... scheduling everything to run at once is
probably not necessary. It just makes things simple with my design.

I would love to get some advice on the design of my library -- it is the
first thing I have made with Twisted. The goal of VIFF is to enable
shared computations -- think addition and multiplication. So the user writes

  x = add(a, mul(b * c))

and where a, b, c are Deferreds which will eventually hold integers. The
add and mul functions return new Deferreds which will eventually hold
the results. Addition is simple:

  def add(x, y):
      sum = gatherResults([x, y])
      sum.addCallback(lambda results: results[0] + results[1])
      return sum

Multiplication is similar, but requires network communication -- that is
why it returns a Deferred.

This is the basic operation of the library: an expression tree is built
and evaluated from the leaves inwards. The important point is that as
much as possible is done in parallel, that all operations run as soon as
their operands are available. Twisted made this extremely easy thanks to
the DeferredList and Deferred abstraction.

> Maybe you should rather look into other areas of the problem (eg. not
> try to optimize deferreds, but the code that uses them). Maybe you
> should use something else than Deferreds for that job. As for memory
> usage of such small objects like Deferreds, well... Python is, well,
> Python. Python string or integer uses much more memory, than C string
> or int. You can't tune Python string memory usage, and you hardly can
> do anything about size of Deferred if that becomes a problem.

There is the possibility of using the __slots__ attribute to avoid the
object dictionary. I don't know what negative sideeffects that might
have, though.

Also, I have yet to try the C implementation of Deferred to see how it
performs memory-wise.

> On the other hand, you should be able to write optimal code with
> Python faster and memory footprint shouldn't be a problem (from my
> experience, in many cases Twisted footprint is suprisingly low).
>
> In other words - if size of Deferred object is your only bottleneck,
> then congratulations :-)

Hehe, thanks! :-) I am certainly not claiming that Deferreds are the
only bottleneck or consumer of memory. I just figured that they would be
an easy starting point since my code (and as you say, Twisted in
general) uses them a lot.

> I'd rather suggest optimizing other parts of the code - as Deferreds
> are the core of Twisted, I suppose it could be a bit hard to do
> anything about them, in the same way you can't do anything about
> memory footprint of core Python objects.

Right... I'll try looking through the code to see if I by mistake hold
on to Deferreds or other objects longer than I have to.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080519/129814a7/attachment.sig>

From steve at holdenweb.com  Mon May 19 21:45:19 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 19 May 2008 23:45:19 -0400
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <87tzgu9g61.fsf@hbox.dyndns.org>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
Message-ID: <4832494F.1040104@holdenweb.com>

Martin Geisler wrote:
> "Michal Pasternak" <michal.dtz at gmail.com> writes:
> 
> Thanks for the reply!
> 
>> 2008/5/19 Martin Geisler <mg at daimi.au.dk>:
>>> What worries me is the size of a single Deferred. One user wanted to
>>> do computations on very large lists of Deferreds and reported that his
>>> programs used more memory than expected.
>>>
>>> I tried to measure the size of a Deferred by creating large lists of
>>> them and found that a single empty Deferred takes up about 200 bytes.
>>> Adding a callback brings that up to about 500 bytes.
>> As such thing as memory allocation is tightly tied to the runtime
>> environment, it is a bit hard to give reasonable answers without any
>> information about, at least, an OS and a CPU.
> 
> Ah, sorry: I tested this on an Athlon 64 X2 (but with 32-bit Debian). I
> simply tested like this:
> 
> % python
> Python 2.5.2 (r252:60911, Apr 17 2008, 13:15:05) 
> [GCC 4.2.3 (Debian 4.2.3-3)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>>>> from twisted.internet.defer import Deferred
>>>> a = [Deferred() for _ in xrange(100000)]
>>>> b = [Deferred() for _ in xrange(100000)]
>>>> c = [Deferred() for _ in xrange(100000)]
> 
> and noted how the memory usage rose from 8 MiB to 30 MiB, to 52 MiB to
> 73 MiB in 'top'. So that is about 22 MiB per list -- around ~200 bytes
> pr Deferred. (I know there is some overhead for the list.)
> 
>> Did the memory in the case you mention grow constantly? Is that user
>> sure, that it was not a memory leak in his/hers code?
> 
> I think he was just concerned that his application used 450 MiB RAM, and
> that made me try to see how big an empty Deferred is.
> 
>> Deferreds, as you all already know, are a core concept that Twisted is
>> built upon. If you need to optimize such areas of Twisted, then, just
>> my suggestion - maybe you are using a wrong tool to do the job. If the
>> memory usage is a problem, then, well, maybe you are trying to do
>> things at once, when you should do them sequentially (eg. using a
>> generator).
> 
> Yes, you may be right... scheduling everything to run at once is
> probably not necessary. It just makes things simple with my design.
> 
> I would love to get some advice on the design of my library -- it is the
> first thing I have made with Twisted. The goal of VIFF is to enable
> shared computations -- think addition and multiplication. So the user writes
> 
>   x = add(a, mul(b * c))
> 
> and where a, b, c are Deferreds which will eventually hold integers. The
> add and mul functions return new Deferreds which will eventually hold
> the results. Addition is simple:
> 
>   def add(x, y):
>       sum = gatherResults([x, y])
>       sum.addCallback(lambda results: results[0] + results[1])
>       return sum
> 
> Multiplication is similar, but requires network communication -- that is
> why it returns a Deferred.
> 
> This is the basic operation of the library: an expression tree is built
> and evaluated from the leaves inwards. The important point is that as
> much as possible is done in parallel, that all operations run as soon as
> their operands are available. Twisted made this extremely easy thanks to
> the DeferredList and Deferred abstraction.
> 
>> Maybe you should rather look into other areas of the problem (eg. not
>> try to optimize deferreds, but the code that uses them). Maybe you
>> should use something else than Deferreds for that job. As for memory
>> usage of such small objects like Deferreds, well... Python is, well,
>> Python. Python string or integer uses much more memory, than C string
>> or int. You can't tune Python string memory usage, and you hardly can
>> do anything about size of Deferred if that becomes a problem.
> 
> There is the possibility of using the __slots__ attribute to avoid the
> object dictionary. I don't know what negative sideeffects that might
> have, though.
> 
> Also, I have yet to try the C implementation of Deferred to see how it
> performs memory-wise.
> 
>> On the other hand, you should be able to write optimal code with
>> Python faster and memory footprint shouldn't be a problem (from my
>> experience, in many cases Twisted footprint is suprisingly low).
>>
>> In other words - if size of Deferred object is your only bottleneck,
>> then congratulations :-)
> 
> Hehe, thanks! :-) I am certainly not claiming that Deferreds are the
> only bottleneck or consumer of memory. I just figured that they would be
> an easy starting point since my code (and as you say, Twisted in
> general) uses them a lot.
> 
>> I'd rather suggest optimizing other parts of the code - as Deferreds
>> are the core of Twisted, I suppose it could be a bit hard to do
>> anything about them, in the same way you can't do anything about
>> memory footprint of core Python objects.
> 
> Right... I'll try looking through the code to see if I by mistake hold
> on to Deferreds or other objects longer than I have to.
> 
Surely (he said, tongue firmly in cheek) the answer to having too many 
outstanding Deferreds is to use faster peer systems :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From jml at mumak.net  Tue May 20 00:05:42 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 20 May 2008 16:05:42 +1000
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
Message-ID: <d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>

On Sat, May 17, 2008 at 4:13 AM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> What: Twisted Sprint
> Where: Divmod office, in Porter Square, Cambridge, MA
> When: 18 May 2008
> Who: Anyone who wants to come
>
> Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
> 18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
> hoping Paul Swartz will show up and whoever else wants to come. If
> you'd like to come please respond and we'll tell you how to get there,
> etc.
>

How'd it go?

jml



From Marcin.Kasperski at softax.com.pl  Tue May 20 07:44:59 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 20 May 2008 15:44:59 +0200
Subject: [Twisted-Python] __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
Message-ID: <87d4nhum1w.fsf_-_@softax.com.pl>


It is not that difficult to see what is inside the deferred (spawn
some debugger and see):

(this may be a class variable)

 debug  (boolean)

(those surely are instance variables)

 callbacks (a list, initially empty, later containing tuples of tuples)
 called (int)
 paused (int)
 result (anything)
 timeoutCall (None or object)
 _runningCallbacks (boolean)
 _debugInfo (object of type DebugInfo)

Bare names of attributes take about 60 bytes (this is what could be
reclamied with __slots__), some of them are references, we have a list
(which inside contains complicated structures), ....

It could be an interesting experiment to define __slots__ for Deferred
class and see what is the memory impact.

Hmm, hmm. I did an experiment. Here is one version of the testing code:

    Cls = Deferred
    count = 250000
    import os
    pid = os.getpid()
    cmd = "ps -F %d" % pid
    a = [Cls() for _ in xrange(count)]
    os.system(cmd)
    b = [Cls() for _ in xrange(count)]
    os.system(cmd)
    c = [Cls() for _ in xrange(count)]
    os.system(cmd)

and here is one using __slots__:


    from twisted.internet.defer import timeout, Deferred

    class SlotsDeferred(object):
        __slots__ = ['debug', 'callbacks', 'called', 'paused', 'result', 'timeoutCall', '_runningCallbacks', '_debugInfo']

        # whole content of original Deferred class copied as-is here

    Cls = SlotsDeferred
    count = 250000
    import os
    pid = os.getpid()
    cmd = "ps -F %d" % pid
    a = [Cls() for _ in xrange(count)]
    os.system(cmd)
    b = [Cls() for _ in xrange(count)]
    os.system(cmd)
    c = [Cls() for _ in xrange(count)]
    os.system(cmd)

And here are the results:

(standard Deferred)

$ python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 92 15180 56992   1 15:40 pts/18   S+     0:00 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 99 28374 109000  1 15:40 pts/18   S+     0:02 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23109 20536 99 41568 161020  1 15:40 pts/18   S+     0:05 python testdef.py

(Deferred with __slots__ added)

$ python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536  0  7834 28068   1 15:41 pts/18   S+     0:00 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536 99 13683 51160   0 15:41 pts/18   S+     0:01 python testdef.py
UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
marcink  23127 20536 99 19532 74256   1 15:41 pts/18   S+     0:02 python testdef.py

As one can see, the memory usage is ~ halved.

So ... maybe it would make sense to add __slots__ to deferreds, after all?

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  In any large change, 1/3 will think it is
| http://mekk.waw.pl | great, 1/3 will think it is stupid, and 1/3
|                    |               will wait (Reed)
----------------------------------------------------------------------




From pittipatti at web.de  Tue May 20 07:55:36 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Tue, 20 May 2008 15:55:36 +0200
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
Message-ID: <4832D858.9060609@web.de>

Hi!

I have a server with multiple clients (processing nodes) which send
their data periodically to the server using PB.

Now I'm trying to quit the clients from the server-side, eg. when the
server is shut down.
I tried to install a "quit-callback-routine" from the client on the
server, which the server should start if it wants a client to shutdown.
But this doesn't work, instead I get a
	twisted.spread.jelly.InsecureJelly: method
error.

Please find attached some sample-code I used for testing.

I think I was 'a little'  to optimistic, that things just work when
trying to send methods over the net and expecting twisted to know how to
handle with this.

But what do I have to change, to archive the result I'm expecting?

Thanks in advance

Patrick
-------------- next part --------------
A non-text attachment was scrubbed...
Name: quitClient.py
Type: text/x-python
Size: 925 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080520/539faa5c/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: quitServer.py
Type: text/x-python
Size: 416 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080520/539faa5c/attachment-0005.py>

From adelagon at gmail.com  Tue May 20 08:52:03 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 20 May 2008 22:52:03 +0800
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <4832D858.9060609@web.de>
References: <4832D858.9060609@web.de>
Message-ID: <7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>

After looking through twisted.spread.db source, I noticed that it implements
twisted.internet.protocol. You could use the self.transport.loseConnection
facility to forcefully disconnect clients. If you want your client to do a
certain routine when the server shuts him down, you could send a custom
message to the client first that will trigger some cleanup procedure you
have in your client. I do similar stuff like this in our twisted xmpp
server. :)


On Tue, May 20, 2008 at 9:55 PM, Patrick Scharrenberg <pittipatti at web.de>
wrote:

> Hi!
>
> I have a server with multiple clients (processing nodes) which send
> their data periodically to the server using PB.
>
> Now I'm trying to quit the clients from the server-side, eg. when the
> server is shut down.
> I tried to install a "quit-callback-routine" from the client on the
> server, which the server should start if it wants a client to shutdown.
> But this doesn't work, instead I get a
>        twisted.spread.jelly.InsecureJelly: method
> error.
>
> Please find attached some sample-code I used for testing.
>
> I think I was 'a little'  to optimistic, that things just work when
> trying to send methods over the net and expecting twisted to know how to
> handle with this.
>
> But what do I have to change, to archive the result I'm expecting?
>
> Thanks in advance
>
> Patrick
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080520/4149af3a/attachment.html>

From pittipatti at web.de  Tue May 20 10:09:08 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Tue, 20 May 2008 18:09:08 +0200
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
References: <4832D858.9060609@web.de>
	<7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
Message-ID: <4832F7A4.5010802@web.de>

Hi Alvin,

Thanks for your answer!

> If you want your client to do a certain routine when the server shuts
> him down, you could send a custom message to the client first that will
> trigger some cleanup procedure you have in your client.

Yes indeed I have to do some cleanup first.
What do you mean with "send a custom message"?

Patrick



From mailing_lists at evotex.ch  Tue May 20 09:50:41 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 20 May 2008 17:50:41 +0200
Subject: [Twisted-Python] xmlstream problem
Message-ID: <4832F351.2070603@evotex.ch>

Hello,

I am using xmlstream.XmlStream to process...XML streams :-)
I'm having a bit of a problem, I have a client and a server, both 
protocols inherit from xmlstream.XmlStream. When the client sends 4 
messages, one after another, I get a parse error. I debugged my program, 
and the buffer the expat parser is given contains in effect, 4 messages 
consecutively like so :

str: 
<message>...</message><message>...</message><message>...</message><message>...</message>

(I replaced the child elements with "..." for your reading enjoyment)

and I get this Exception when debugging (otherwise it stays hidden) :

ExpatError: junk after document element: line 1, column 196

now column 196 is the end of the 1st msg's root element, I think it 
doesn't like the next message being right after the first. I did 
override xmlstream.XmlStream.onDocumentEnd()
because I didn't want it to close the connection in between messages, 
but in my method I told it to initialize the stream using :

self._initializeStream()

I did this since I noticed that closing the connection forces a new 
parser to be created when the previous statement is called. The reason I 
don't want the connection to be closed is that I'd like a persistent 
connection to be held.

Does anyone know how to either have the messages given to the parser as 
separate messages so that it doesn't freak out?

Thank you,
Gabriel





From adelagon at gmail.com  Tue May 20 11:22:47 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 21 May 2008 01:22:47 +0800
Subject: [Twisted-Python] quitting clients connected to a server from
	serverside
In-Reply-To: <4832F7A4.5010802@web.de>
References: <4832D858.9060609@web.de>
	<7a01f6c00805200752m3f219ae4vc70dd59cf2637028@mail.gmail.com>
	<4832F7A4.5010802@web.de>
Message-ID: <7a01f6c00805201022t319cf714p5cb7c9e1a941d258@mail.gmail.com>

I mean some kind of a command from the server to trigger the cleanup of the
client. For example: on some cases in our xmpp server, when a currently
logged in user logged in again with using the same account from a different
location; we forcefully close the last session by first sending a stream
document end to the client ("</stream>") before doing a
transport.loseConnection(). Our client then triggers the cleanup procedure
upon receiving </stream> from the server. I haven't tried my hands on
twisted.spread yet but you could implement something like this. :)



On Wed, May 21, 2008 at 12:09 AM, Patrick Scharrenberg <pittipatti at web.de>
wrote:

> Hi Alvin,
>
> Thanks for your answer!
>
> > If you want your client to do a certain routine when the server shuts
> > him down, you could send a custom message to the client first that will
> > trigger some cleanup procedure you have in your client.
>
> Yes indeed I have to do some cleanup first.
> What do you mean with "send a custom message"?
>
> Patrick
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080521/b301c213/attachment.html>

From twisted at ralphm.ik.nu  Tue May 20 11:37:15 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 20 May 2008 19:37:15 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <4832F351.2070603@evotex.ch>
References: <4832F351.2070603@evotex.ch>
Message-ID: <1211305035.6573.43.camel@zwerf>

On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
> Hello,
> 
> I am using xmlstream.XmlStream to process...XML streams :-)
> I'm having a bit of a problem, I have a client and a server, both 
> protocols inherit from xmlstream.XmlStream. When the client sends 4 
> messages, one after another, I get a parse error. I debugged my program, 
> and the buffer the expat parser is given contains in effect, 4 messages 
> consecutively like so :
> 
> str: 
> <message>...</message><message>...</message><message>...</message><message>...</message>
> 
> (I replaced the child elements with "..." for your reading enjoyment)
> 
> and I get this Exception when debugging (otherwise it stays hidden) :
> 
> ExpatError: junk after document element: line 1, column 196
> 
> now column 196 is the end of the 1st msg's root element, I think it 
> doesn't like the next message being right after the first.

That's right. Streaming XML, as implemented by twisted.words.xish, works
by exchanging two complete (virtual) XML documents, one in each
direction. So, you need to have a root element around your messages,
such as 'stream'. The unit of communication is first-level elements of
that root element. So, you start out with sending the start tag of the
root element, and then sending the messages.

You would set up an observer for your messages like so:

  def onMessage(message):
      print "Got message!"

  factory = XmlStreamFactory()
  factory.addBootstrap("/message", onMessage)
  
> I did 
> override xmlstream.XmlStream.onDocumentEnd()
> because I didn't want it to close the connection in between messages, 
> but in my method I told it to initialize the stream using :
> 
> self._initializeStream()
> 
> I did this since I noticed that closing the connection forces a new 
> parser to be created when the previous statement is called. The reason I 
> don't want the connection to be closed is that I'd like a persistent 
> connection to be held.

There is no need to do this, what I showed above should meet your
requirements. Also, this method is semi-private (leading _) for a
reason.

-- 
Groetjes,

ralphm




From radix at twistedmatrix.com  Tue May 20 11:41:56 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 20 May 2008 13:41:56 -0400
Subject: [Twisted-Python] May Twisted Sprint this weekend
In-Reply-To: <d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>
References: <60ed19d40805161113o68aa55c9u449e123eaaabbd2c@mail.gmail.com>
	<d06a5cd30805192305t72853591ra9562707d1ec0284@mail.gmail.com>
Message-ID: <60ed19d40805201041n12c3da56vbb40d4f997304c16@mail.gmail.com>

On Tue, May 20, 2008 at 2:05 AM, Jonathan Lange <jml at mumak.net> wrote:
> On Sat, May 17, 2008 at 4:13 AM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> What: Twisted Sprint
>> Where: Divmod office, in Porter Square, Cambridge, MA
>> When: 18 May 2008
>> Who: Anyone who wants to come
>>
>> Hi guys. There's a Twisted sprint at the Divmod office on Sunday, May
>> 18th. At least Glyph, Jean-Paul, Itamar and I will be there; we're
>> hoping Paul Swartz will show up and whoever else wants to come. If
>> you'd like to come please respond and we'll tell you how to get there,
>> etc.
>>
>
> How'd it go?

Glyph and Paul couldn't make it. Only Jean-Paul, Itamar and I were
there: we released Twisted 8.1 and reviewed one ticket (the
process-group signalling branch). I'll write an announcement for 8.1
when I get the chance, but it's up on the web site already (we still
need an OS X installer).

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From adelagon at gmail.com  Tue May 20 11:50:59 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 21 May 2008 01:50:59 +0800
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <4832F351.2070603@evotex.ch>
References: <4832F351.2070603@evotex.ch>
Message-ID: <7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>

I don't think that the method onDocumentEnd will be triggered on that error.
I assume that the received xml is invalid and the code that is disconnecting
the client is on the overridden dataReceived method of xmlstream.py:

 def dataReceived(self, data):
        """ Called whenever data is received.

        Passes the data to the XML parser. This can result in calls to the
        DOM handlers. If a parse error occurs, the L{STREAM_ERROR_EVENT}
event
    is called to allow for cleanup actions, followed by dropping the
        connection.
        """
        try:
            if self.rawDataInFn: self.rawDataInFn(data)
            self.stream.parse(data)
        except domish.ParserError:
            self.dispatch(self, STREAM_ERROR_EVENT)
            *### Put some code here that will write the received invalid xml
data to a file*
            self.transport.loseConnection() --> *Your clients get
disconnected here when sending an invalid xml*

Since it's a pyExpat/domish error your client gets disconnected by the
transport.loseConnection() call. I suggest that you put something under
except to check if your xmpp client is sending an invalid xml.

Cheers,
Alvin


On Tue, May 20, 2008 at 11:50 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
wrote:

> Hello,
>
> I am using xmlstream.XmlStream to process...XML streams :-)
> I'm having a bit of a problem, I have a client and a server, both protocols
> inherit from xmlstream.XmlStream. When the client sends 4 messages, one
> after another, I get a parse error. I debugged my program, and the buffer
> the expat parser is given contains in effect, 4 messages consecutively like
> so :
>
> str:
> <message>...</message><message>...</message><message>...</message><message>...</message>
>
> (I replaced the child elements with "..." for your reading enjoyment)
>
> and I get this Exception when debugging (otherwise it stays hidden) :
>
> ExpatError: junk after document element: line 1, column 196
>
> now column 196 is the end of the 1st msg's root element, I think it doesn't
> like the next message being right after the first. I did override
> xmlstream.XmlStream.onDocumentEnd()
> because I didn't want it to close the connection in between messages, but
> in my method I told it to initialize the stream using :
>
> self._initializeStream()
>
> I did this since I noticed that closing the connection forces a new parser
> to be created when the previous statement is called. The reason I don't want
> the connection to be closed is that I'd like a persistent connection to be
> held.
>
> Does anyone know how to either have the messages given to the parser as
> separate messages so that it doesn't freak out?
>
> Thank you,
> Gabriel
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080521/ff4e23e5/attachment.html>

From mg at daimi.au.dk  Tue May 20 12:01:41 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Tue, 20 May 2008 20:01:41 +0200
Subject: [Twisted-Python] Re: __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
	<87d4nhum1w.fsf_-_@softax.com.pl>
Message-ID: <87bq30j1mi.fsf@hbox.dyndns.org>

Marcin Kasperski <Marcin.Kasperski at softax.com.pl> writes:

> It is not that difficult to see what is inside the deferred (spawn
> some debugger and see):
>
> [...]

Yeah, I have already looked at the code for the Deferred class -- I like
it, it is delightfully small! :-)

> (standard Deferred)
>
> $ python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 92 15180 56992   1 15:40 pts/18   S+     0:00 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 99 28374 109000  1 15:40 pts/18   S+     0:02 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23109 20536 99 41568 161020  1 15:40 pts/18   S+     0:05 python testdef.py
>
> (Deferred with __slots__ added)
>
> $ python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536  0  7834 28068   1 15:41 pts/18   S+     0:00 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536 99 13683 51160   0 15:41 pts/18   S+     0:01 python testdef.py
> UID        PID  PPID  C    SZ   RSS PSR STIME TTY      STAT   TIME CMD
> marcink  23127 20536 99 19532 74256   1 15:41 pts/18   S+     0:02 python testdef.py
>
> As one can see, the memory usage is ~ halved.

Cool -- that is a substantial saving! I did an experiment where I tested
these classes:

  >>> class X(object):
  ...   __slots__ = ('foo',) # No dict, space for one attribute only.
  ...   def __init__(self, foo):
  ...     self.foo = foo
  ... 
  >>> class Y(object):
  ...   def __init__(self, foo):
  ...     self.foo = foo

and found that X objects take up about 40 bytes in memory whereas Y
objects take up 180 bytes in memory. This mail:

  http://mail.python.org/pipermail/python-list/2002-March/135223.html

explains that a dictionary takes up 144 bytes in memory and that fits
very nicely with the savings I saw with the X and Y classes above.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080520/c8ae1b72/attachment.sig>

From twisted at ralphm.ik.nu  Tue May 20 12:33:56 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 20 May 2008 20:33:56 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>
References: <4832F351.2070603@evotex.ch>
	<7a01f6c00805201050x2e58e762u90677066e69acc37@mail.gmail.com>
Message-ID: <20080520183356.GA14165@ik.nu>

On Wed, May 21, 2008 at 01:50:59AM +0800, Alvin Delagon wrote:
> I don't think that the method onDocumentEnd will be triggered on that error. I
> assume that the received xml is invalid and the code that is disconnecting the
> client is on the overridden dataReceived method of xmlstream.py:

I'm pretty sure this not the problem, but the outcome of
misunderstanding of the concept of XML Streams, as I explained in the
other reply. As I said, your receiving stream will, at the end of the
session, be a complete XML document, conceptually, and the XML parser is
used with that idea in mind. So if you try to feed it more than one XML
document, it will raise an exception.

-- 
Groetjes,

ralphm



From michal.dtz at gmail.com  Tue May 20 12:54:34 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 20 May 2008 20:54:34 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <87tzgu9g61.fsf@hbox.dyndns.org>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
Message-ID: <20080520205434.48164f0e@gmail.com>

On 2008-05-19, 22:45:26
Martin Geisler <mg at daimi.au.dk> wrote:

> "Michal Pasternak" <michal.dtz at gmail.com> writes:
> 
[...]
> I would love to get some advice on the design of my library -- it is
> the first thing I have made with Twisted. The goal of VIFF is to
> enable shared computations -- think addition and multiplication. 
[...]
>   def add(x, y):
>       sum = gatherResults([x, y])
>       sum.addCallback(lambda results: results[0] + results[1])
>       return sum
> 
> Multiplication is similar, but requires network communication -- that
> is why it returns a Deferred.

I don't think that there's anything wrong with this example in terms of
being written using Twisted Python.

> The important point is
> that as much as possible is done in parallel, that all operations run
> as soon as their operands are available. Twisted made this extremely
> easy thanks to the DeferredList and Deferred abstraction.

This is the point where I think, that you answered your question. If
you do stuff in parallel, you use more Deferreds and more memory. 

I will repeat myself now: I would rather try to find other places to
optimize VIFF, than reducing memory footprint of Deferred. I don't have
a CS degree, I'm not a mathematician, but from what you wrote it seems
that maybe it would be worth to try implementing something stack-based
(like RPN), than the tree approach you seem to be doing now - of course
if having a stack is something you can have using secure multiparty
calculations.

-- 
m



From mg at daimi.au.dk  Wed May 21 01:56:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 21 May 2008 09:56:30 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <20080520205434.48164f0e@gmail.com>
Message-ID: <w1bej7wnl8x.fsf@thyra02.daimi.au.dk>

Michał Pasternak <michal.dtz at gmail.com> writes:

>>   def add(x, y):
>>       sum = gatherResults([x, y])
>>       sum.addCallback(lambda results: results[0] + results[1])
>>       return sum
>> 
>> Multiplication is similar, but requires network communication --
>> that is why it returns a Deferred.
>
> I don't think that there's anything wrong with this example in terms
> of being written using Twisted Python.

Okay, thanks for looking at it!

>> The important point is that as much as possible is done in
>> parallel, that all operations run as soon as their operands are
>> available. Twisted made this extremely easy thanks to the
>> DeferredList and Deferred abstraction.
>
> This is the point where I think, that you answered your question. If
> you do stuff in parallel, you use more Deferreds and more memory.

Yes, I guess you are right... :-) The design tries to do everything at
once with as much parallism as possible. But since bandwidth is
limited, I guess I could achieve the same throughput by scheduling
things in a slower rate. Maybe using something like this:

  class map_parallel(Deferred):
      def __init__(self, iterable, func, max):
          Deferred.__init__(self)
  
          self.iter = iterable
          self.func = func
          self.running = 0
  
          for _ in range(max):
              self.running += 1
              self.run_next(None)
  
      def run_next(self, arg):
          try:
              e = self.iter.next()
              e.addCallback(self.func)
              e.addCallback(self.run_next)
          except StopIteration:
              # The iterator is exhausted.
              self.running -= 1
              if self.running == 0 and not self.called:
                  # All callbacks have finished.
                  self.callback(None)
          # Pass the argument through unchanged.
          return arg

where map_parallel will map a function over a list of Deferreds, but
it will only run up to max function applications in parallel. I will
experiment with it, and if it works well, then it would be cool to
have a class like this in Twisted.

> I will repeat myself now: I would rather try to find other places to
> optimize VIFF, than reducing memory footprint of Deferred. I don't
> have a CS degree, I'm not a mathematician, but from what you wrote
> it seems that maybe it would be worth to try implementing something
> stack-based (like RPN), than the tree approach you seem to be doing
> now - of course if having a stack is something you can have using
> secure multiparty calculations.

Thanks for the ideas! You could certainly do what you suggest,
changing the schedule like that is okay from a security point of view.
And if I can delay allocating memory until needed by doing so, then it
will definitely be interesting to try.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From nico at teknico.net  Wed May 21 04:22:10 2008
From: nico at teknico.net (Nicola Larosa)
Date: Wed, 21 May 2008 12:22:10 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
	<20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
Message-ID: <200805211022.m4LAMBNM014209@smtpi1.ngi.it>

Martin Geisler wrote:
> it will only run up to max function applications in parallel. I will
> experiment with it, and if it works well, then it would be cool to
> have a class like this in Twisted.

Something like DeferredQueue? :-)

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L950

-- 
Nicola Larosa - http://www.tekNico.net/

My dream is that in 500 years (or less) humanity will look back at what
passes for psychology today in the same way that we now look back on the
dark ages, when they were drilling holes in people's heads to drain out
the crazy. Oh wait, we were still doing that in the twentieth century
(http://en.wikipedia.org/wiki/Lobotomy). - Phillip J. Eby, February 2008





From mg at daimi.au.dk  Wed May 21 05:03:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Wed, 21 May 2008 13:03:30 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
	<200805211022.m4LAMBNM014209@smtpi1.ngi.it>
Message-ID: <w1babijor5p.fsf@thyra02.daimi.au.dk>

Nicola Larosa <nico at teknico.net> writes:

> Martin Geisler wrote:
>> it will only run up to max function applications in parallel. I will
>> experiment with it, and if it works well, then it would be cool to
>> have a class like this in Twisted.
>
> Something like DeferredQueue? :-)
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L950

Hehe, I can see that this does something that looks very similar :-)

I think a DeferredQueue is a bit more general than my code -- I think
you need some code in addition to a DeferredQueue in order to obtain
what I want: limited parallelism.

In particular, I guess you need to catch the QueueUnderflow exceptions
and then somehow know when it is time to call get() again.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.




From mithrandi at mithrandi.net  Wed May 21 05:35:18 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 21 May 2008 13:35:18 +0200
Subject: [Twisted-Python] Re: Memory size of Deferreds
In-Reply-To: <w1babijor5p.fsf@thyra02.daimi.au.dk>
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org>
	<20080520205434.48164f0e@gmail.com>
	<w1bej7wnl8x.fsf@thyra02.daimi.au.dk>
	<200805211022.m4LAMBNM014209@smtpi1.ngi.it>
	<w1babijor5p.fsf@thyra02.daimi.au.dk>
Message-ID: <20080521113517.GC4904@mithrandi.net>

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080521/4f82ccf0/attachment.sig>

From arlenecc at incesoft.com  Wed May 21 05:44:35 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:44:35 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <tf0BffG1dX7R.ThVN6DSf@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:47:31 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:47:31 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <dMBWYRSQX1zx.2rkzDTzf@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:49:10 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:49:10 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <vgWQmFXtKMVN.mFZSRbqd@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:50:39 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:50:39 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <ltmymZ5SCscy.GgYwNH1r@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:51:43 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:51:43 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <n48QtdQmm13P.Jyv8HvCR@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:52:45 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:52:45 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <cfqG5PP4bK04.PxM4SVKh@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From arlenecc at incesoft.com  Wed May 21 05:53:46 2008
From: arlenecc at incesoft.com (arlenecc)
Date: Wed, 21 May 2008 19:53:46 +0800
Subject: =?UTF-8?B?5Zue5aSN77ya?= Re: [Twisted-Python] Re: Memory size of D
	eferreds
Message-ID: <TW2swkNCBcgp.13vYmmS0@mail.incesoft.com>



原信息
主题：	Re: [Twisted-Python] Re: Memory size of Deferreds
发件人：	Tristan Seligmann <mithrandi at mithrandi.net>
日期：		2008-05-21 11:38

* Martin Geisler <mg at daimi.au.dk> [2008-05-21 13:03:30 +0200]:

> In particular, I guess you need to catch the QueueUnderflow exceptions
> and then somehow know when it is time to call get() again.

DeferredSemaphore may be more appropriate.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


<<signature.asc>>




From Marcin.Kasperski at softax.com.pl  Wed May 21 07:24:25 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Wed, 21 May 2008 15:24:25 +0200
Subject: [Twisted-Python] Re: __slots__ help (Re: Memory size of Deferreds)
References: <w1bprriptz3.fsf@thyra02.daimi.au.dk>
	<10c877d90805191218x5bbf062bk3d08167ce0946a04@mail.gmail.com>
	<87tzgu9g61.fsf@hbox.dyndns.org> <4832494F.1040104@holdenweb.com>
	<87d4nhum1w.fsf_-_@softax.com.pl> <87bq30j1mi.fsf@hbox.dyndns.org>
Message-ID: <87wslnssc6.fsf@softax.com.pl>

For the sake of completness: I saved this as

http://twistedmatrix.com/trac/ticket/3245





From mailing_lists at evotex.ch  Wed May 21 08:06:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 21 May 2008 16:06:01 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <1211305035.6573.43.camel@zwerf>
References: <4832F351.2070603@evotex.ch> <1211305035.6573.43.camel@zwerf>
Message-ID: <48342C49.8020509@evotex.ch>

Ralph Meijer wrote:
> On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
>   
>> Hello,
>>
>> I am using xmlstream.XmlStream to process...XML streams :-)
>> I'm having a bit of a problem, I have a client and a server, both 
>> protocols inherit from xmlstream.XmlStream. When the client sends 4 
>> messages, one after another, I get a parse error. I debugged my program, 
>> and the buffer the expat parser is given contains in effect, 4 messages 
>> consecutively like so :
>>
>> str: 
>> <message>...</message><message>...</message><message>...</message><message>...</message>
>>
>> (I replaced the child elements with "..." for your reading enjoyment)
>>
>> and I get this Exception when debugging (otherwise it stays hidden) :
>>
>> ExpatError: junk after document element: line 1, column 196
>>
>> now column 196 is the end of the 1st msg's root element, I think it 
>> doesn't like the next message being right after the first.
>>     
>
> That's right. Streaming XML, as implemented by twisted.words.xish, works
> by exchanging two complete (virtual) XML documents, one in each
> direction. So, you need to have a root element around your messages,
> such as 'stream'. The unit of communication is first-level elements of
> that root element. So, you start out with sending the start tag of the
> root element, and then sending the messages.
>
> You would set up an observer for your messages like so:
>
>   def onMessage(message):
>       print "Got message!"
>
>   factory = XmlStreamFactory()
>   factory.addBootstrap("/message", onMessage)
>   
>   
>> I did 
>> override xmlstream.XmlStream.onDocumentEnd()
>> because I didn't want it to close the connection in between messages, 
>> but in my method I told it to initialize the stream using :
>>
>> self._initializeStream()
>>
>> I did this since I noticed that closing the connection forces a new 
>> parser to be created when the previous statement is called. The reason I 
>> don't want the connection to be closed is that I'd like a persistent 
>> connection to be held.
>>     
>
> There is no need to do this, what I showed above should meet your
> requirements. Also, this method is semi-private (leading _) for a
> reason.
>
>   
Ralph,

Thank you, I understand better now, so I could send a "session" opening 
tag (e.g. <session_start>) from each side (one from the client when it 
connects and one from the server when the client connects), then 
exchange as manny messages as I want in between the two and then when I 
am done I send the closing tag (e.g. </session_start>)? Is that correct?

Thanks,
Gabriel



From ixafei at 4657.com  Wed May 21 19:32:44 2008
From: ixafei at 4657.com (ixafei)
Date: Thu, 22 May 2008 09:32:44 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
Message-ID: <200805220932409533589@4657.com>

hi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080522/2c43f891/attachment.html>

From radix at twistedmatrix.com  Wed May 21 20:49:42 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 May 2008 22:49:42 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <200805220932409533589@4657.com>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
	<200805220932409533589@4657.com>
Message-ID: <60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>

2008/5/21 ixafei <ixafei at 4657.com>:
> hi

Hey, what's up.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From waterbug at pangalactic.us  Wed May 21 23:04:07 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 22 May 2008 01:04:07 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>	<200805220932409533589@4657.com>
	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
Message-ID: <4834FEC7.7080404@pangalactic.us>

Christopher Armstrong wrote:
> 2008/5/21 ixafei <ixafei at 4657.com>:
>> hi
> 
> Hey, what's up.

Yo, dudes!





From steve at holdenweb.com  Thu May 22 04:37:38 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu, 22 May 2008 06:37:38 -0400
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <4834FEC7.7080404@pangalactic.us>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>	<200805220932409533589@4657.com>	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
	<4834FEC7.7080404@pangalactic.us>
Message-ID: <g13idm$7cn$1@ger.gmane.org>

Stephen Waterbury wrote:
> Christopher Armstrong wrote:
>> 2008/5/21 ixafei <ixafei at 4657.com>:
>>> hi
>>
>> Hey, what's up.
> 
> Yo, dudes!

shout out to all my homies
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From michal.dtz at gmail.com  Thu May 22 05:08:25 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 22 May 2008 13:08:25 +0200
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 50, Issue 26
In-Reply-To: <g13idm$7cn$1@ger.gmane.org>
References: <E1JymoA-00022U-GI@cube.twistedmatrix.com>
	<200805220932409533589@4657.com>
	<60ed19d40805211949j7366ee8aqd8e162bba2d63d46@mail.gmail.com>
	<4834FEC7.7080404@pangalactic.us> <g13idm$7cn$1@ger.gmane.org>
Message-ID: <20080522130825.178737ad@gmail.com>

Dnia 2008-05-22, o godz. 06:37:38
Steve Holden <steve at holdenweb.com> napisał(a):

> Stephen Waterbury wrote:
> > Christopher Armstrong wrote:
> >> 2008/5/21 ixafei <ixafei at 4657.com>:
> >>> hi
> >>
> >> Hey, what's up.
> > 
> > Yo, dudes!
> 
> shout out to all my homies

Where's Dukee?

-- 
m




From twisted at ralphm.ik.nu  Thu May 22 09:16:05 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 22 May 2008 17:16:05 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <48342C49.8020509@evotex.ch>
References: <4832F351.2070603@evotex.ch> <1211305035.6573.43.camel@zwerf>
	<48342C49.8020509@evotex.ch>
Message-ID: <1211469365.6544.14.camel@zwerf>

On Wed, 2008-05-21 at 16:06 +0200, Gabriel Rossetti wrote:
> Ralph Meijer wrote:
> > On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
> >   
> >> Hello,
> >>
> >> I am using xmlstream.XmlStream to process...XML streams :-)
> >> I'm having a bit of a problem, I have a client and a server, both 
> >> protocols inherit from xmlstream.XmlStream. When the client sends 4 
> >> messages, one after another, I get a parse error. I debugged my program, 
> >> and the buffer the expat parser is given contains in effect, 4 messages 
> >> consecutively like so :
> >>
> >> str: 
> >> <message>...</message><message>...</message><message>...</message><message>...</message>
> >>
> >> (I replaced the child elements with "..." for your reading enjoyment)
> >>
> >> and I get this Exception when debugging (otherwise it stays hidden) :
> >>
> >> ExpatError: junk after document element: line 1, column 196
> >>
> >> now column 196 is the end of the 1st msg's root element, I think it 
> >> doesn't like the next message being right after the first.
> >>     
> >
> > That's right. Streaming XML, as implemented by twisted.words.xish, works
> > by exchanging two complete (virtual) XML documents, one in each
> > direction. So, you need to have a root element around your messages,
> > such as 'stream'. The unit of communication is first-level elements of
> > that root element. So, you start out with sending the start tag of the
> > root element, and then sending the messages.
> >
> > You would set up an observer for your messages like so:
> >
> >   def onMessage(message):
> >       print "Got message!"
> >
> >   factory = XmlStreamFactory()
> >   factory.addBootstrap("/message", onMessage)
> >   
> >   
> >> I did 
> >> override xmlstream.XmlStream.onDocumentEnd()
> >> because I didn't want it to close the connection in between messages, 
> >> but in my method I told it to initialize the stream using :
> >>
> >> self._initializeStream()
> >>
> >> I did this since I noticed that closing the connection forces a new 
> >> parser to be created when the previous statement is called. The reason I 
> >> don't want the connection to be closed is that I'd like a persistent 
> >> connection to be held.
> >>     
> >
> > There is no need to do this, what I showed above should meet your
> > requirements. Also, this method is semi-private (leading _) for a
> > reason.
> >
> >   
> Ralph,
> 
> Thank you, I understand better now, so I could send a "session" opening 
> tag (e.g. <session_start>) from each side (one from the client when it 
> connects and one from the server when the client connects), then 
> exchange as manny messages as I want in between the two and then when I 
> am done I send the closing tag (e.g. </session_start>)? Is that correct?

Yeah, that sounds right. I suggest using <stream/> as the root element.

-- 
Groetjes,

ralphm




From warner at lothar.com  Thu May 22 14:08:38 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 22 May 2008 13:08:38 -0700
Subject: [Twisted-Python] Foolscap-0.2.7 released,
	Foolscap vs. debian openssl bug
Message-ID: <20080522130838.6514dbc3@fluxx.allmydata.com>

I released Foolscap-0.2.7 the other week, just a few days after the release
of 0.2.6 . This fixes a brown-paper-bag bug in 0.2.6 that prevented the
'flogtool' utility from running at all.

Tarballs can be obtained from foolscap.lothar.com and from PyPI. All releases
are signed by my GPG public key: 0x1514A7BD.

 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.7.tar.gz#md5=8b766c322f30bd267405c399bce2d362
 http://pypi.python.org/packages/source/f/foolscap/foolscap-0.2.7.zip#md5=9554d22d58113c0d87f58ec3dcf43e2a

For documentation, bugs, and patches, please visit
http://foolscap.lothar.com/trac .

== Debian OpenSSL Bugs and Foolscap ==

As you've probably heard[1], last week the debian project published a
security advisory that described how the openssl package has been using a
18-ish-bit random number generator for the last two years. As a result, keys
and certificates generated by the affected versions (or used for DSA
signatures by affected versions) should be considered compromised and
immediately replaced. This affects the last 3 or 4 Ubuntu releases too
(Dapper was correct, Edgy was broken). All affected releases now have fixed
versions available for download, and obviously everyone using an affected
release needs to upgrade immediately.

 [1]: http://lists.debian.org/debian-security-announce/2008/msg00152.html

Since the bug affected key generation, keys which were created by the broken
versions will remain broken even after openssl itself is upgraded. The Debian
and Ubuntu projects have released tools to detect weak ssh keys that were
generated by these versions and disable them. Other projects (including
Foolscap) use generated keys for various purposes, so the effects of this bug
will linger even after openssl has been fixed.

How does this affect Foolscap? The short answer: Weak keys generated by the
broken versions of openssl will enable a man-in-the-middle attack, which (if
successful) would reveal the private swissnums that protect access to
Referenceables. Foolscap users who have created Tubs while they had the
broken versions installed should stop using the associated FURLs and generate
new certificates/FURLs.

The longer answer: There are three things in Foolscap that use random
numbers:

 1: TubIDs [COMPROMISED]. These are a hash of the public key that corresponds
 to a Tub's private key, and are included in FURLs (as the base32 part
 immediately following the pb:// prefix). This provides protection against a
 man-in-the-middle attack: when connecting to a FURL, the certificate of the
 remote end is compared against the TubID in the FURL, and the connection is
 dropped with extreme prejudice if they do not match. This validation is
 performed before any secrets are passed over the wire.

 2: SwissNums [SAFE]. These are a randomly-generated name for a reference,
 created when tub.registerReference(obj) is called without a name= argument,
 and when a Referenceable is sent over the wire without being explicitly
 registered. They appear at the right-hand end of the FURL, after the last
 slash. Most Referenceables are given these unguessable names, because that
 limits access to parties that have been explicitly granted access. (when
 registerReference() is called with a guessable name, anyone who can guess
 that name will get reference to the given object). The capability-based
 security of foolscap Referenceables depends upon these swissnums remaining
 secret.

 3: SSL transport sessions [VULNERABLE]. Foolscap runs over SSL, which uses
 random numbers to generate the Diffie-Hellman key agreement parameters. An
 eavesdropper who can guess one of these parameters will be able to determine
 the session key, and can decrypt the remainder of the conversation.

TubIDs are derived from an SSL certificate that OpenSSL generates on demand,
and if the broken version of OpenSSL was used for this purpose, than that
certificate will be guessable. (at some point it would be great to write a
tool that would generate the 128000-ish TubIDs that can be generated by the
broken SSL, to create a blacklist like the ones created by debian/ubuntu for
ssh keys).

So if you've generated a TubID with the broken version of openssl, it is
pretty easy to guess the corresponding private key. This allows an attacker
to mount an undetectable man-in-the-middle attack: if they can convince you
to make your TCP connection to their server instead of the right one, then
they can impersonate the real server, and they'll get to see the unencrypted
conversation (revealing the private swissnums).

Swissnums are generated by calling os.urandom(), which was not affected by
the openssl bug. As long as one of the other problems (man-in-the-middle
attack) doesn't reveal your swissnums to an attacker, access to
Referenceables will remain limited to the parties to whom you've explicitly
granted it (by telling them the swissnum, in a FURL).

Foolscap uses SSL for its encrypted transport, and SSL frequently uses
Diffie-Hellman key negotiation to establish a session key. This key
negotiation process depends upon random numbers, generated by the same buggy
RNG that is used to create keys. So if one of the two ends of an encrypted
session was using the buggy version of openssl, then an attacker may be able
to guess the session key, and thus decrypt the conversation. (note, I'm not a
cryptographer, and I'm not as confident about this attack as I am about the
others). So like the MitM attack, it seems likely that swissnums used by
sessions established during the buggy openssl era may be compromised: an
eavesdropper who recorded that encrypted conversation may be able to decrypt
it after the fact.


Of course, the whole idea of capabilities is to implement the Principle Of
Least Authority: each FURL gives access to a specific Referenceable that will
only do some specific limited task. If an MitM/eavesdropper manages to guess
your supposedly-unguessable swissnums, they'll still only be able to do
whatever the Referenceable will let them do.


So to summarize: if you've been using the buggy openssl libraries, here's
what you need to do:

 1: upgrade openssl
 2: throw out your old FURLs (tell everyone that you've given them to to stop
    using them): this protects clients from the MitM attack.
 3: throw out your old Tub certificates: the certFile= argument to Tub()
    provides a persistent location for this.. just delete that file. This
    prevents clients from ever successfully using the old FURLs to connect
    to your server.
 4: restart the Tub, allowing it to create a new certificate
 5: regenerate and distribute new FURLs

You can also just upgrade openssl (and keep using your old certs and FURLs)
if you're willing to remain vulnerable to man-in-the-middle attacks or
eavesdroppers who have recorded your earlier conversations.


cheers,
 -Brian



From hoganxian at gmail.com  Thu May 22 19:57:49 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Fri, 23 May 2008 09:57:49 +0800
Subject: [Twisted-Python] the sequence of executing defers' callbacks
Message-ID: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>

Hi All,

This is a fundamental question about Twisted.

In the normal case, all the callbacks belonging to one defer object will be
triggered following the chain sequence. ( Let's assume no errback will be
fired.)

such as callback1--->callbac2--->callbackN.

However, if I want to trigger callback1 when MSG1 is ready, callback2 when
MSG2 is ready, and so on, how can I do that?

Of course, the MSGs are coming at random sequence.

Thanks in advance,
Xian Chen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080523/87b0fae8/attachment.html>

From terry at jon.es  Thu May 22 20:12:50 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 23 May 2008 04:12:50 +0200
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: Your message at 09:57:49 on Friday, 23 May 2008
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <18486.10274.120542.748174@jon.es>

>>>>> "Xian" == Xian Chen <hoganxian at gmail.com> writes:

Xian> However, if I want to trigger callback1 when MSG1 is ready, callback2
Xian> when MSG2 is ready, and so on, how can I do that?
Xian> Of course, the MSGs are coming at random sequence.

Hi Xian

Do you have multiple functions that are returning these MSGx results?
If so, it sounds like you might be looking for DeferredList. See the
docs at

  http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Terry



From camrdale at gmail.com  Thu May 22 20:22:56 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 22 May 2008 19:22:56 -0700
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <f4438a6a0805221922t237980d8j77c1e81840eb135a@mail.gmail.com>

On 5/22/08, Xian Chen <hoganxian at gmail.com> wrote:
> However, if I want to trigger callback1 when MSG1 is ready, callback2 when
> MSG2 is ready, and so on, how can I do that?
>
> Of course, the MSGs are coming at random sequence.

I do something like that, but I could not do it with a single
deferred. I think the only way is to use a deferred per message. Then
callback the appropriate deferred when its message arrives. That's all
I can suggest given the limited information.

Cameron



From andrew-twisted at puzzling.org  Thu May 22 20:26:36 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 May 2008 12:26:36 +1000
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
Message-ID: <20080523022636.GD30749@steerpike.home.puzzling.org>

Xian Chen wrote:
> Hi All,
> 
> This is a fundamental question about Twisted.
> 
> In the normal case, all the callbacks belonging to one defer object will be
> triggered following the chain sequence. ( Let's assume no errback will be
> fired.)
> 
> such as callback1--->callbac2--->callbackN.
> 
> However, if I want to trigger callback1 when MSG1 is ready, callback2 when MSG2
> is ready, and so on, how can I do that?
> 
> Of course, the MSGs are coming at random sequence.

It sounds like you don't want a callback chain at all.  Do you really want
all callbacks from 3 to N run when MSG3 arrives?  That sounds strange.

I'm guessing you want a simple dispatch function as the callback on the
Deferred.  i.e., something roughly like this:

    def dispatchMessage(msg):
        handler = messageHandlersDict[msg.id]
        return handler.run(msg)

    d.addCallback(dispatchMessage)

How messageHandlersDict is populated depends on exactly what you're doing...

It's not clear from your email whether “MSG1”, “MSG2” etc refer to different
message types, or messages tagged with a session/request identifier, or
something else.  So if my advice doesn't make sense to you, maybe reply with a
bit more detail about what you're doing, and what you want to happen?

-Andrew.




From hoganxian at gmail.com  Thu May 22 21:20:26 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Fri, 23 May 2008 11:20:26 +0800
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <20080523022636.GD30749@steerpike.home.puzzling.org>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
	<20080523022636.GD30749@steerpike.home.puzzling.org>
Message-ID: <a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>

As you said, what I really want is a dispatcher which can dispatch different
msgs to corresponding callbacks.

Of course, I can write a dispatchMessage(msg) function by using lots of "if
... else ", but I want a more elegant way. I hope defers can help me.

I got the same idea with Cameron, maybe it is not very efficient way to
define one defer object for one msg.

So, I come here to ask whether you guys has a better way or not.

Thanks,
Xian

On Fri, May 23, 2008 at 10:26 AM, Andrew Bennetts <
andrew-twisted at puzzling.org> wrote:

> Xian Chen wrote:
> > Hi All,
> >
> > This is a fundamental question about Twisted.
> >
> > In the normal case, all the callbacks belonging to one defer object will
> be
> > triggered following the chain sequence. ( Let's assume no errback will be
> > fired.)
> >
> > such as callback1--->callbac2--->callbackN.
> >
> > However, if I want to trigger callback1 when MSG1 is ready, callback2
> when MSG2
> > is ready, and so on, how can I do that?
> >
> > Of course, the MSGs are coming at random sequence.
>
> It sounds like you don't want a callback chain at all.  Do you really want
> all callbacks from 3 to N run when MSG3 arrives?  That sounds strange.
>
> I'm guessing you want a simple dispatch function as the callback on the
> Deferred.  i.e., something roughly like this:
>
>    def dispatchMessage(msg):
>        handler = messageHandlersDict[msg.id]
>        return handler.run(msg)
>
>    d.addCallback(dispatchMessage)
>
> How messageHandlersDict is populated depends on exactly what you're
> doing...
>
> It's not clear from your email whether "MSG1", "MSG2" etc refer to
> different
> message types, or messages tagged with a session/request identifier, or
> something else.  So if my advice doesn't make sense to you, maybe reply
> with a
> bit more detail about what you're doing, and what you want to happen?
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080523/2cbf480d/attachment.html>

From radix at twistedmatrix.com  Fri May 23 06:51:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 23 May 2008 08:51:02 -0400
Subject: [Twisted-Python] the sequence of executing defers' callbacks
In-Reply-To: <a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>
References: <a2dd20fc0805221857w36e8cecbic97230f3599dc084@mail.gmail.com>
	<20080523022636.GD30749@steerpike.home.puzzling.org>
	<a2dd20fc0805222020u522288e1vc7f3564dac2cfed0@mail.gmail.com>
Message-ID: <60ed19d40805230551n5291ef6cn45ceea9af5edf0d0@mail.gmail.com>

On Thu, May 22, 2008 at 11:20 PM, Xian Chen <hoganxian at gmail.com> wrote:
> As you said, what I really want is a dispatcher which can dispatch different
> msgs to corresponding callbacks.
>
> Of course, I can write a dispatchMessage(msg) function by using lots of "if
> ... else ", but I want a more elegant way. I hope defers can help me.

Here's an idiom that's served me well in the past: instead of using
lots of 'if...else', use getattr(self, 'handle_' +
messageName)(message). Replace 'handle_' with something appropriate
for your message system.

Decorators are also getting common as a way to register handlers for
particular types of messages.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From kevin.horn at gmail.com  Fri May 23 11:29:44 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 23 May 2008 12:29:44 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
Message-ID: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>

Howdy list,

I'm trying to implement a protocol using Twisted which has a "STARTTLS"
command to switch the protocol from plain TCP to TCP over TLS.

I've mostly been going by the way that the imap4.py module seems to do it,
but I can't seem to get a handshake to complete.

I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes )
which was helpful, but I don't want to force client cert authentication.

In order to separate this problem from other issues, I've adapted the echo
protocol code from above the above page to try and get a simple test case
(my code below)

I am recieving the following output and traceback when running the client
code ( on both Windows and Linux ):

using TLSv1:

>tls_echoclient.py

Sending: Hello, world!
receive: ERROR: Must authenticate
Sending: STARTTLS
receive: READY
Sending: Continuing
connection lost (protocol)
connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert handshake
failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
Traceback (most recent call last):
  File "C:\Documents and
Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
line 58, in <module>
    reactor.run()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
223, in run
    self.mainLoop()
  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
234, in mainLoop
    self.doIteration(t)
  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
line 140, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
<< SNIP >>
  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
in stop
    "Can't stop reactor that isn't running.")
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
running.

What am I doing wrong?  Is there a SSL config option I'm setting
incorrectly?  Do I need to use a different SSL Context? Am I totally off
base?

Thanks,

Kevin Horn

========= tls_echoserver.py

# adapted from: http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

import sys
from OpenSSL import SSL
from twisted.python import log
from twisted.internet import ssl, reactor
from twisted.protocols.basic import LineReceiver
from twisted.internet.protocol import Factory

private_key_file = "privkey_dsa.pem"
cert_file_name = "cacert.pem"
sslmethod = ssl.SSL.TLSv1_METHOD
#~ sslmethod = ssl.SSL.SSLv23_METHOD

class Echo(LineReceiver):
    donetls = 0
    def sendLine(self, line):
        print "Sending:",line
        LineReceiver.sendLine(self,line)

    def lineReceived(self, line):
        print "Got:",line
        if self.donetls:
            print "Sending OK"
            self.transport.write("OK")
        elif line == "STARTTLS":
            self.sendLine("READY")
            #~ self.tlsCtx = CtxFactory()
            self.tlsCtx = ssl.DefaultOpenSSLContextFactory(private_key_file,

                                                cert_file_name,
                                                sslmethod)
            self.transport.startTLS(self.tlsCtx)
            self.donetls = 1
        else:
            self.sendLine("ERROR: Must authenticate")

factory = Factory()
factory.protocol = Echo
reactor.listenTCP(8000, factory)
reactor.run()

========= tls_echoclient.py

# adapted from: http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

from OpenSSL import SSL
import sys

from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver
from twisted.internet import ssl, reactor

class EchoClient(LineReceiver):
    end="Bye-bye!"
    def connectionMade(self):
        self.sendLine("Hello, world!")  # Signals error

    def connectionLost(self, reason):
        print 'connection lost (protocol)'
        reactor.stop()

    def sendLine(self, line):
        print "Sending:",line
        LineReceiver.sendLine(self,line)

    def lineReceived(self, line):
        print "receive:", line
        if line == "ERROR: Must authenticate":
            self.sendLine("STARTTLS")
        elif line == "READY":
            #~ self.ctx = CxtFactory()
            self.ctx = ssl.ClientContextFactory()
            self.ctx.method = ssl.SSL.TLSv1_METHOD
            #~ self.ctx.method = ssl.SSL.SSLv23_METHOD
            self.transport.startTLS(self.ctx)
            self.sendLine("Continuing");
        else:
            self.sendLine("wibble")

class EchoClientFactory(ClientFactory):
    protocol = EchoClient

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()
        reactor.stop()

factory = EchoClientFactory()
reactor.connectTCP('localhost', 8000, factory)
reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080523/5d57088c/attachment.html>

From exarkun at divmod.com  Fri May 23 14:32:16 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 May 2008 16:32:16 -0400
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>
Message-ID: <20080523203216.4714.1408844087.divmod.quotient.2162@ohm>

On Fri, 23 May 2008 12:29:44 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>Howdy list,
>
>I'm trying to implement a protocol using Twisted which has a "STARTTLS"
>command to switch the protocol from plain TCP to TCP over TLS.
>
>I've mostly been going by the way that the imap4.py module seems to do it,
>but I can't seem to get a handshake to complete.
>
>I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes )
>which was helpful, but I don't want to force client cert authentication.
>
>In order to separate this problem from other issues, I've adapted the echo
>protocol code from above the above page to try and get a simple test case
>(my code below)
>
>I am recieving the following output and traceback when running the client
>code ( on both Windows and Linux ):
>
>using TLSv1:
>
>>tls_echoclient.py
>
>Sending: Hello, world!
>receive: ERROR: Must authenticate
>Sending: STARTTLS
>receive: READY
>Sending: Continuing
>connection lost (protocol)
>connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert handshake
>failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>Traceback (most recent call last):
>  File "C:\Documents and
>Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
>line 58, in <module>
>    reactor.run()
>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>223, in run
>    self.mainLoop()
>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>234, in mainLoop
>    self.doIteration(t)
>  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
>line 140, in doSelect
>    _logrun(selectable, _drdw, selectable, method, dict)
>--- <exception caught here> ---
>  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
>callWithLogger
>    return callWithContext({"system": lp}, func, *args, **kw)
><< SNIP >>
>  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
>in stop
>    "Can't stop reactor that isn't running.")
>twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>running.
>
>What am I doing wrong?  Is there a SSL config option I'm setting
>incorrectly?  Do I need to use a different SSL Context? Am I totally off
>base?
>
>Thanks,
>

The traceback here is just because you're calling reactor.stop() twice,
once in Protocol.connectionLost, then again in Factory.clientConnectionLost.
Get rid of one of these and at least you'll get rid of some spurious noise.

As far as the TLS part of your code goes, it basically looks okay.  By doing
a sendLine immediately before you call startTLS, you risk running into #686,
but if you actually hit that, you should see a warning and the connection
should be closed without an OpenSSL error.

So I'm not exactly sure what problem you're encountering.  To further
complicate matters, when I run your code, TLS is successfully negotiated.

Jean-Paul



From kevin.horn at gmail.com  Fri May 23 16:31:39 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 23 May 2008 17:31:39 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <20080523203216.4714.1408844087.divmod.quotient.2162@ohm>
References: <562bcc10805231029t57c4f9e4q71c9d8a732880ae2@mail.gmail.com>
	<20080523203216.4714.1408844087.divmod.quotient.2162@ohm>
Message-ID: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>

On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 23 May 2008 12:29:44 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
>
>> Howdy list,
>>
>> I'm trying to implement a protocol using Twisted which has a "STARTTLS"
>> command to switch the protocol from plain TCP to TCP over TLS.
>>
>> I've mostly been going by the way that the imap4.py module seems to do it,
>> but I can't seem to get a handshake to complete.
>>
>> I found this page ( http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes)
>> which was helpful, but I don't want to force client cert authentication.
>>
>> In order to separate this problem from other issues, I've adapted the echo
>> protocol code from above the above page to try and get a simple test case
>> (my code below)
>>
>> I am recieving the following output and traceback when running the client
>> code ( on both Windows and Linux ):
>>
>> using TLSv1:
>>
>>  tls_echoclient.py
>>>
>>
>> Sending: Hello, world!
>> receive: ERROR: Must authenticate
>> Sending: STARTTLS
>> receive: READY
>> Sending: Continuing
>> connection lost (protocol)
>> connection lost: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert
>> handshake
>> failure'), ('SSL routines', 'SSL3_READ_BYTES', 'ssl handshake failure')]
>> Traceback (most recent call last):
>>  File "C:\Documents and
>>
>> Settings\kevinh\Desktop\mine_id\sandbox\funsize\sslecho\tls_echoclient.py",
>> line 58, in <module>
>>   reactor.run()
>>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>> 223, in run
>>   self.mainLoop()
>>  File "C:\Python25\lib\site-packages\twisted\internet\posixbase.py", line
>> 234, in mainLoop
>>   self.doIteration(t)
>>  File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py",
>> line 140, in doSelect
>>   _logrun(selectable, _drdw, selectable, method, dict)
>> --- <exception caught here> ---
>>  File "C:\Python25\lib\site-packages\twisted\python\log.py", line 51, in
>> callWithLogger
>>   return callWithContext({"system": lp}, func, *args, **kw)
>> << SNIP >>
>>  File "C:\Python25\lib\site-packages\twisted\internet\base.py", line 490,
>> in stop
>>   "Can't stop reactor that isn't running.")
>> twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>> running.
>>
>> What am I doing wrong?  Is there a SSL config option I'm setting
>> incorrectly?  Do I need to use a different SSL Context? Am I totally off
>> base?
>>
>> Thanks,
>>
>>
> The traceback here is just because you're calling reactor.stop() twice,
> once in Protocol.connectionLost, then again in
> Factory.clientConnectionLost.
> Get rid of one of these and at least you'll get rid of some spurious noise.
>

Thanks for responding, Jean-Paul, and thanks for the tip.  I've been so
consumed
with reading through the noise that for some reason it never occurred to me
to try
and get rid of it.

As far as the TLS part of your code goes, it basically looks okay.  By doing
> a sendLine immediately before you call startTLS, you risk running into
> #686,
> but if you actually hit that, you should see a warning and the connection
> should be closed without an OpenSSL error.
>
> So I'm not exactly sure what problem you're encountering.  To further
> complicate matters, when I run your code, TLS is successfully negotiated.
>
Jean-Paul



Well that's ... frustrating.  I was hoping I had just overlooked something
obvious (and easy to fix!)

Can you tell me more about the environment you are running under?

So far I've tried:
WinXP,  Python 2.5, Twisted 8.0.1, pyOpenSSL 0.7, OpenSSL 0.9.8g
Linux(CentOS), Python 2.4, Twisted 8.1.0, pyOpenSSL 0.7, OpenSSL 0.9.7a

Perhaps there is something wrong with my certificates?  I would expect that
this would cause errors on the server end, though...

Is there any way to get more information about the handshake failure?

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080523/1d7edf0e/attachment.html>

From exarkun at divmod.com  Sat May 24 09:57:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 24 May 2008 11:57:34 -0400
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>
Message-ID: <20080524155734.4714.876831419.divmod.quotient.2277@ohm>

On Fri, 23 May 2008 17:31:39 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
>wrote:
>
> [snop]
>
>
>Well that's ... frustrating.  I was hoping I had just overlooked something
>obvious (and easy to fix!)
>
>Can you tell me more about the environment you are running under?
>
>So far I've tried:
>WinXP,  Python 2.5, Twisted 8.0.1, pyOpenSSL 0.7, OpenSSL 0.9.8g
>Linux(CentOS), Python 2.4, Twisted 8.1.0, pyOpenSSL 0.7, OpenSSL 0.9.7a

I tried with Ubuntu 7.10, Python 2.5.1, Twisted trunk at HEAD, OpenSSL
0.9.8e-5ubuntu3, pyOpenSSL 0.6-2.3ubuntu1.  I also tried with the
Twisted 2.5 release branch.  I don't have pyOpenSSL 0.7 handy at the
moment.  Maybe you could give 0.6 a try?  I can't think of any changes
between those versions that might be causing this, but one never knows.

Jean-Paul

>Perhaps there is something wrong with my certificates?  I would expect that
>this would cause errors on the server end, though...

Seems like the cert is probably fine, yea.  I'm attaching the one I tested
with so you can give it a try, though.

>Is there any way to get more information about the handshake failure?

ssldump might tell you something, but you'll have to dig a bit and do some
interpretation.  And it might just end up telling you that the handshake
is failing.

Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: server.pem
Type: application/octet-stream
Size: 1851 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080524/ba7c07f9/attachment-0002.obj>

From kevin.horn at gmail.com  Sat May 24 21:21:14 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 24 May 2008 22:21:14 -0500
Subject: [Twisted-Python] Implementing STARTTLS in a protocol
In-Reply-To: <20080524155734.4714.876831419.divmod.quotient.2277@ohm>
References: <562bcc10805231531s23aa6b3fu1eb3298c3d6a49a9@mail.gmail.com>
	<20080524155734.4714.876831419.divmod.quotient.2277@ohm>
Message-ID: <562bcc10805242021i66a04b7dy898781280913ec1b@mail.gmail.com>

On Sat, May 24, 2008 at 10:57 AM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Fri, 23 May 2008 17:31:39 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
>
>> On Fri, May 23, 2008 at 3:32 PM, Jean-Paul Calderone <exarkun at divmod.com>
>> wrote:
>>
>> [snip]
>
>
> I tried with Ubuntu 7.10, Python 2.5.1, Twisted trunk at HEAD, OpenSSL
> 0.9.8e-5ubuntu3, pyOpenSSL 0.6-2.3ubuntu1.  I also tried with the
> Twisted 2.5 release branch.  I don't have pyOpenSSL 0.7 handy at the
> moment.  Maybe you could give 0.6 a try?  I can't think of any changes
> between those versions that might be causing this, but one never knows.
>
> Jean-Paul
>
>  Perhaps there is something wrong with my certificates?  I would expect
>> that
>> this would cause errors on the server end, though...
>>
>
> Seems like the cert is probably fine, yea.  I'm attaching the one I tested
> with so you can give it a try, though.
>

OK, tested on Win2K, Python 2.4, Twisted 8.1.0, PyOpenSSL 0.7, OpenSSL
0.9.8g

using your cert...TLS handshake succeeded.

using my cert...same error as before

so there definitely seems to be something wrong with my certificate files

What procedure and/or OpenSSL commands did you use to create yours?  Maybe
I'm doing something incorrectly when creating certs?

Nice to see my code working though...thanks for your help so far!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080524/d17d1c46/attachment.html>

From exarkun at twistedmatrix.com  Sat May 24 22:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 May 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1211688308.51.1942120511@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080525/d5a8d1fe/attachment.html>

From jo.vermeulen at gmail.com  Mon May 26 04:49:12 2008
From: jo.vermeulen at gmail.com (Jo Vermeulen)
Date: Mon, 26 May 2008 12:49:12 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with Twisted
	words
Message-ID: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>

Hello,

I am trying to create a chat bot that can work over both the XMPP and the
MSN protocol using Twisted words. I have a couple of questions as a Twisted
newbie :-)

Is there any documentation on how to create a protocol-agnostic chatbot with
Twisted words? Or are there applications using Twisted words that offer
multiple front-ends?

I have a XMPP version working, but had some problems finding my way around a
few features. I don't know how to get a list of contacts, or initiatiate a
group chat. Even if I succeed in doing this, would it be possible to
generalize this for both XMPP and MSN?

Finally, I was wondering how mature Twisted words is. It seems to work well
for XMPP, but how mature is the MSN support? Are there other libraries I
could consider, or is it possible to generalize other libraries within
Twisted?

Thanks in advance!

-- Jo Vermeulen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080526/56a4e9f4/attachment.html>

From adelagon at gmail.com  Mon May 26 06:37:06 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 26 May 2008 20:37:06 +0800
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
Message-ID: <7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>

There's a twisted MSNP8 (or is it MSNP9) implementation. It's experimental
but it works. I managed to write an MSN gateway for XMPP deriving most of
the codes from it.

----
Alvin Delagon

On Mon, May 26, 2008 at 6:49 PM, Jo Vermeulen <jo.vermeulen at gmail.com>
wrote:

> Hello,
>
> I am trying to create a chat bot that can work over both the XMPP and the
> MSN protocol using Twisted words. I have a couple of questions as a Twisted
> newbie :-)
>
> Is there any documentation on how to create a protocol-agnostic chatbot
> with Twisted words? Or are there applications using Twisted words that offer
> multiple front-ends?
>
> I have a XMPP version working, but had some problems finding my way around
> a few features. I don't know how to get a list of contacts, or initiatiate a
> group chat. Even if I succeed in doing this, would it be possible to
> generalize this for both XMPP and MSN?
>
> Finally, I was wondering how mature Twisted words is. It seems to work well
> for XMPP, but how mature is the MSN support? Are there other libraries I
> could consider, or is it possible to generalize other libraries within
> Twisted?
>
> Thanks in advance!
>
> -- Jo Vermeulen
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080526/c9a9691a/attachment.html>

From jo.vermeulen at gmail.com  Mon May 26 07:03:14 2008
From: jo.vermeulen at gmail.com (Jo Vermeulen)
Date: Mon, 26 May 2008 15:03:14 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
Message-ID: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>

Hello Alvin,

Thanks, MSNP8 should be enough for a chat bot. I'll have a look at the
twisted.im module, it seems to contain a basic multi-protocol chat client.

I had another question about the Jabber example (xmpp_client.py) in Twisted
words. When I quit the application with Ctrl+C, it throws an exception:

Disconnected.
Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 228, in mainLoop
    self.runUntilCurrent()
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
561, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
414, in _continueSystemEvent
    callable(*args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
375, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 48, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 33, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 576,
in connectionLost
    Connection.connectionLost(self, reason)
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 416,
in connectionLost
    protocol.connectionLost(reason)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/xmlstream.py",
line 82, in connectionLost
    self.dispatch(self, STREAM_END_EVENT)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 227, in dispatch
    self._eventObservers[(priority, event)].callback(object)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 37, in callback
    methodwrapper(*args, **kwargs)
  File "/usr/lib/python2.5/site-packages/twisted/words/xish/utility.py",
line 21, in __call__
    self.method(*nargs, **nkwargs)
  File "xmpp_client.py", line 58, in disconnected
    reactor.stop()
  File "/usr/lib/python2.5/site-packages/twisted/internet/base.py", line
342, in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running

Is there any way to modify this example so that it stops gracefully when
Ctrl+C is pressed? Embedding the main script code in a try-except statement
that catches KeyboardInterrupt doesn't help since Twisted seems to catch all
exceptions itself.

I read about deferred's and errbacks, but I don't know where to add an
errback to in the XMPP example. To the client? The XmlStream? The reactor?

Any pointers would be greatly appreciated ...

Thanks!

-- Jo

On Mon, May 26, 2008 at 2:37 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> There's a twisted MSNP8 (or is it MSNP9) implementation. It's experimental
> but it works. I managed to write an MSN gateway for XMPP deriving most of
> the codes from it.
>
> ----
> Alvin Delagon
>
> On Mon, May 26, 2008 at 6:49 PM, Jo Vermeulen <jo.vermeulen at gmail.com>
> wrote:
>
>> Hello,
>>
>> I am trying to create a chat bot that can work over both the XMPP and the
>> MSN protocol using Twisted words. I have a couple of questions as a Twisted
>> newbie :-)
>>
>> Is there any documentation on how to create a protocol-agnostic chatbot
>> with Twisted words? Or are there applications using Twisted words that offer
>> multiple front-ends?
>>
>> I have a XMPP version working, but had some problems finding my way around
>> a few features. I don't know how to get a list of contacts, or initiatiate a
>> group chat. Even if I succeed in doing this, would it be possible to
>> generalize this for both XMPP and MSN?
>>
>> Finally, I was wondering how mature Twisted words is. It seems to work
>> well for XMPP, but how mature is the MSN support? Are there other libraries
>> I could consider, or is it possible to generalize other libraries within
>> Twisted?
>>
>> Thanks in advance!
>>
>> -- Jo Vermeulen
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080526/168d5cb3/attachment.html>

From twisted at ralphm.ik.nu  Mon May 26 09:39:51 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 May 2008 17:39:51 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
Message-ID: <1211816391.17583.31.camel@zwerf>

On Mon, 2008-05-26 at 12:49 +0200, Jo Vermeulen wrote:
> I have a XMPP version working, but had some problems finding my way
> around a few features. I don't know how to get a list of contacts, or
> initiatiate a group chat.

There is no such abstraction in Twisted for XMPP, yet. I've worked on a
framework for implementing XMPP's 'subprotocols' in the Wokkel library
[1] and this framework has been contributed back into Twisted recently,
and has been part of the Twisted 8.0.1 release. On top of that there are
several of such subprotocols implemented in Wokkel, among them the
protocol implementations for dealing with rosters (client and server
side). All of those should eventually go back in Twisted when I get
around to it.

As far as I know, there is no implementation for the client side of the
multi-user chat (MUC) protocol yet built on Twisted, although there is a
MUC service called Palaver. Its authors are considering rewriting the
protocol handling part to match the subprotocol abstraction I mentioned
above.

>﻿ Even if I succeed in doing this, would it be possible to generalize
> this for both XMPP and MSN?

Sure. No one has stepped up to make that happen, recently. Personally, I
have very little interest in supporting closed protocols like MSN's.
However, there is the concept of XMPP gateways to other IM networks that
might be useful for you. It would allow you to create a bot that talks
using one protocol (XMPP).

> Finally, I was wondering how mature Twisted words is. It seems to work
> well for XMPP, but how mature is the MSN support? Are there other
> libraries I could consider, or is it possible to generalize other
> libraries within Twisted?

I would say that the XMPP and IRC parts of Words have seen the most
activity recently. The XMPP stuff works well, supports a fair number of
projects, but is a bit spartan. I'm working hard to address the latter,
though.

I cannot comment much on the other parts, although I know there has been
work on Twisted based XMPP gateways to AIM and ICQ, that have more
mature implementations of those than what is currently in Words. So far
there hasn't been much progress to move those improvements back into
Words [2].

[1] http://wokkel.ik.nu/
[2] http://twistedmatrix.com/trac/ticket/1081

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Mon May 26 10:02:21 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 May 2008 18:02:21 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
Message-ID: <1211817741.17583.45.camel@zwerf>

On Mon, 2008-05-26 at 15:03 +0200, Jo Vermeulen wrote:
> [..]
>
> I had another question about the Jabber example (xmpp_client.py) in
> Twisted words. When I quit the application with Ctrl+C, it throws an
> exception:
> 
> [..]

I haven't seen that behavior before, but I can confirm this happens. I
poked around a bit with the example. It seems that the socket is closed
before its factory is shut down. It might be that the reactor shutdown
procedure has changed, so I think this behavior is the result of a bug,
either in the example or somewhere else. It needs more investigation, so
it would be nice if you could file a ticket for it.

> Is there any way to modify this example so that it stops gracefully
> when Ctrl+C is pressed? Embedding the main script code in a try-except
> statement that catches KeyboardInterrupt doesn't help since Twisted
> seems to catch all exceptions itself.

I don't know of a good solution, at the moment. If the above bug gets
resolved, you shouldn't need to do anything beyond that.

-- 
Groetjes,

ralphm




From glyph at divmod.com  Mon May 26 12:35:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 26 May 2008 18:35:18 -0000
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
Message-ID: <20080526183518.25821.863986031.divmod.xquotient.8778@joule.divmod.com>

On 01:03 pm, jo.vermeulen at gmail.com wrote:
>Thanks, MSNP8 should be enough for a chat bot. I'll have a look at the
>twisted.im module, it seems to contain a basic multi-protocol chat 
>client.

Thanks!  I would like to encourage you to look at this code, but be 
warned: it's pretty old, not very well tested, and not very well 
documented.  I really hope that you stick with it and help us fix it up. 
Just don't expect it to work out of the box :).

(It should actually be in twisted.words.im, in any version of Twisted 
that you should even consider using today...)



From mailing_lists at evotex.ch  Tue May 27 01:45:30 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 27 May 2008 09:45:30 +0200
Subject: [Twisted-Python] xmlstream problem
In-Reply-To: <1211469365.6544.14.camel@zwerf>
References: <4832F351.2070603@evotex.ch>
	<1211305035.6573.43.camel@zwerf>	<48342C49.8020509@evotex.ch>
	<1211469365.6544.14.camel@zwerf>
Message-ID: <483BBC1A.8090307@evotex.ch>

Ralph Meijer wrote:
> On Wed, 2008-05-21 at 16:06 +0200, Gabriel Rossetti wrote:
>   
>> Ralph Meijer wrote:
>>     
>>> On Tue, 2008-05-20 at 17:50 +0200, Gabriel Rossetti wrote:
>>>   
>>>       
>>>> Hello,
>>>>
>>>> I am using xmlstream.XmlStream to process...XML streams :-)
>>>> I'm having a bit of a problem, I have a client and a server, both 
>>>> protocols inherit from xmlstream.XmlStream. When the client sends 4 
>>>> messages, one after another, I get a parse error. I debugged my program, 
>>>> and the buffer the expat parser is given contains in effect, 4 messages 
>>>> consecutively like so :
>>>>
>>>> str: 
>>>> <message>...</message><message>...</message><message>...</message><message>...</message>
>>>>
>>>> (I replaced the child elements with "..." for your reading enjoyment)
>>>>
>>>> and I get this Exception when debugging (otherwise it stays hidden) :
>>>>
>>>> ExpatError: junk after document element: line 1, column 196
>>>>
>>>> now column 196 is the end of the 1st msg's root element, I think it 
>>>> doesn't like the next message being right after the first.
>>>>     
>>>>         
>>> That's right. Streaming XML, as implemented by twisted.words.xish, works
>>> by exchanging two complete (virtual) XML documents, one in each
>>> direction. So, you need to have a root element around your messages,
>>> such as 'stream'. The unit of communication is first-level elements of
>>> that root element. So, you start out with sending the start tag of the
>>> root element, and then sending the messages.
>>>
>>> You would set up an observer for your messages like so:
>>>
>>>   def onMessage(message):
>>>       print "Got message!"
>>>
>>>   factory = XmlStreamFactory()
>>>   factory.addBootstrap("/message", onMessage)
>>>   
>>>   
>>>       
>>>> I did 
>>>> override xmlstream.XmlStream.onDocumentEnd()
>>>> because I didn't want it to close the connection in between messages, 
>>>> but in my method I told it to initialize the stream using :
>>>>
>>>> self._initializeStream()
>>>>
>>>> I did this since I noticed that closing the connection forces a new 
>>>> parser to be created when the previous statement is called. The reason I 
>>>> don't want the connection to be closed is that I'd like a persistent 
>>>> connection to be held.
>>>>     
>>>>         
>>> There is no need to do this, what I showed above should meet your
>>> requirements. Also, this method is semi-private (leading _) for a
>>> reason.
>>>
>>>   
>>>       
>> Ralph,
>>
>> Thank you, I understand better now, so I could send a "session" opening 
>> tag (e.g. <session_start>) from each side (one from the client when it 
>> connects and one from the server when the client connects), then 
>> exchange as manny messages as I want in between the two and then when I 
>> am done I send the closing tag (e.g. </session_start>)? Is that correct?
>>     
>
> Yeah, that sounds right. I suggest using <stream/> as the root element.
>
>   
Ralph,

I just wrote a quick minimal client/server to test it, and it works 
great!, thanks a lot!

Gabriel



From mlists at line72.net  Tue May 27 12:45:26 2008
From: mlists at line72.net (Mark Dillavou)
Date: Tue, 27 May 2008 13:45:26 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
Message-ID: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>

I have a large program that is built using wxpython and twisted in which the
client sends commands through ssh (using conch) to the server.  Under linux
I have found some very strange results. If the user is not doing anything
(i.e. not moving the mouse or doing anything to cause the window to redraw),
then conch seems to stop processing and hang the whole twisted loop.  As
soon as the user moves the mouse, clicks a button, or does something to
cause the window to refresh, then conch immediately starts processing again
and the twisted loop begins calling callbacks again.

I can't seem to reproduce this under windows or osx, and it doesn't seem to
always happen under linux with wxgtk2. I have written a dumb little test
program (attached), that hopefully shows this behavior.  After connecting to
a remote machine, through the gui you can specify a command, hit run command
and the stdout will be displayed.

The console prints out the time from two timers.  One is setup using a
reactor.callLater and another is setup using a wx.Timer.  If a command that
takes a while is run (cat a large file) and you don't move the mouse or do
anything to cause the window to refresh, then you will see that the
callLater callback stops being called (although the wx.Timer callback
continues to be called).  As soon as you move the mouse, the callLater
callback begins firing again, and you'll eventually see the output of your
command.

This is really frustrating since we are using conch to send large commands
or to download/upload large files, and it is common for the user to want to
minimize the program and let it run in the background, but with this bug,
twisted stops responding and the file stops sending until the user does
something to cause the window to redraw.

I'm not that familiar with conch, so maybe i'm doing something completely
wrong in my connection code.  Any critique on it would be nice.

Thank you in advance,
/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080527/35a82bd5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: conch_wx.py
Type: text/x-python
Size: 7410 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080527/35a82bd5/attachment-0002.py>

From exarkun at divmod.com  Tue May 27 14:13:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 May 2008 16:13:11 -0400
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
Message-ID: <20080527201311.4714.556229544.divmod.quotient.2814@ohm>

On Tue, 27 May 2008 13:45:26 -0500, Mark Dillavou <mlists at line72.net> wrote:
>I have a large program that is built using wxpython and twisted in which the
>client sends commands through ssh (using conch) to the server.  Under linux
>I have found some very strange results. If the user is not doing anything
>(i.e. not moving the mouse or doing anything to cause the window to redraw),
>then conch seems to stop processing and hang the whole twisted loop.  As
>soon as the user moves the mouse, clicks a button, or does something to
>cause the window to refresh, then conch immediately starts processing again
>and the twisted loop begins calling callbacks again.

Hi Mark,

I tried your attached program and didn't see the bad behavior you described.
I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?

Differing behavior on different platforms doesn't surprise me at all, since
wx itself has a lot of subtle differences on different platforms.

Jean-Paul



From andrewfr_ice at yahoo.com  Wed May 28 08:36:56 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 28 May 2008 07:36:56 -0700 (PDT)
Subject: [Twisted-Python] Twistd and Duplicate Logs
Message-ID: <726613.20527.qm@web34201.mail.mud.yahoo.com>

Hi Folks:

I use a twistd server under Windows XP and Ubuntu. I
am using Twisted 8.0. I am using log rotation. I
essential copy the log example in Abe Fettig's book.

On a sidenote, I read that logs changed under Twisted
8.1? Should I move to that?

Under Windows XP, the programme runs as expected, it
generates logs  xxx.log, xxx.log.1, xxx.log.2

Under Ubuntu, it generates two sets of logs

xxx.log, xxx.log.1 and twistd.log, twisted.log.1

I am not sure why. What am I missing? Any advice would
be appreciated.

here is a sample of what I do:


class TheLog(log.FileLogObserver):
    
    def emit(self, logEntryDict):
        #if not logEntryDict.get('isError'): return
        log.FileLogObserver.emit(self, logEntryDict)


class TheLogService(service.Service):
    def __init__(self, logName, logDir):
        self.logName = logName
        self.logDir = logDir
        self.maxLogSize = MAX_LOG_FILE_SIZE
        self.theLog = TheLogBuilder()
    
    
    def getLogger(self):
        return self.theLog
    
    
    def startService(self):
        # logfile is a file-like object that supports
rotation
        self.logFile = logfile.LogFile(
            self.logName, self.logDir,
rotateLength=self.maxLogSize)
        self.logFile.rotate() # force rotation each
time restarted
        self.theLog = TheLog(self.logFile)
        self.theLog.start()


    def stopService(self):
        self.theLog.stop()
        self.logFile.close()
        del(self.logFile)


Cheers,
Andrew






      



From knueffle at yahoo.com  Wed May 28 08:52:04 2008
From: knueffle at yahoo.com (Jody Gugelhupf)
Date: Wed, 28 May 2008 10:52:04 -0400 (EDT)
Subject: [Twisted-Python] help with twisted webserver and rpy script
Message-ID: <574311.34916.qm@web36102.mail.mud.yahoo.com>

hi there ppl :)
i have a question, twisted is very new to me, i'm using the twisted webserver to control my
tvcard, i wrote several scripts and got it all working, i also use a rpy script to switch stations
from the website, only that it seems that i need to create for each station a rpy script, i'd
rather have all stations in once rpy file and do it that way, i got it working in php, but is it
possible to write php in rpy? here is an example of one of my rpy scripts to switch stations:

#!/usr/bin/python
import sys
import os
from www.web_types import HTMLResource, FreevoResource

class TestResource(FreevoResource):

    def _render(self, request):
        fv = HTMLResource()
        fv.printHeader(_('LiveTV'), 'styles/main.css',selected=_('Test'))
        form = request.args
        command = "v4lctl setstation MTV"
        os.system(command)
        fv.res += "<html><script language=\"JavaScript\"> close();</script></html>"
        return String( fv.res )
resource = TestResource()



the java stuff is so that when i click on the MTV.rpy link it closes the new window after the
execution of the command, the main site where the MTV.rpy is displayed looks like this:

#!/usr/bin/python
import sys
import os
from www.web_types import HTMLResource, FreevoResource

class TestResource(FreevoResource):

    def _render(self, request):
        fv = HTMLResource()
        fv.printHeader(_('LiveTV'), 'styles/main.css',selected=_('Test'))
        form = request.args
        fv.res += "<html>To start the stream server click <a
href=\"http://10.0.0.1:8085/startstream.rpy\" target=\"_blank\">here.</a> To start the camera
stream server click <a href=\"http://10.0.0.1:8085/startstreamcam.rpy\"
target=\"_blank\">here.</a> To stop the stream-server click<a
href=\"http://195.169.205.24:8085/stopstream.rpy\">here.</a> To switch to the channel you can
simply click on the channel you want to watch. A new window will pop up and close itself
automatically, then the channel should be changed.</html>"
        fv.res += "<html><br><a href=\"MTV.rpy\" target=\"_blank\"> MTV </a> <a href=\"TMF.rpy\"
target=\"_blank\"> TMF </a> <a href=\"national.rpy\" target=\"_blank\"> National Geographic </a>
<a href=\"discovery.rpy\" target=\"_blank\"> Discovery Channel </a> <a href=\"CNN.rpy\"
target=\"_blank\"> CNN </a> <a href=\"BBC1.rpy\" target=\"_blank\"> BBC1 </a> <a href=\"BBC2.rpy\"
target=\"_blank\"> BBC2 </a> <a href=\"net5.rpy\" target=\"_blank\"> Net5 </a> <a
href=\"sbs6.rpy\" target=\"_blank\"> sbs6 </a> <a href=\"veronica.rpy\" target=\"_blank\">
Veronica </a> <a href=\"talpa.rpy\" target=\"_blank\"> talpa </a> <a href=\"rtl4.rpy\"
target=\"_blank\"> rtl4 </a> <a href=\"rtl5.rpy\" target=\"_blank\"> rtl5 </a> <a
href=\"rtl7.rpy\" target=\"_blank\"> rtl7 </a> <a href=\"een.rpy\" target=\"_blank\"> een </a> <a
href=\"euronews.rpy\" target=\"_blank\"> Euronews </a> <a href=\"ard.rpy\" target=\"_blank\"> ARD
</a> <a href=\"zdf.rpy\" target=\"_blank\"> ZDF </a> <a href=\"wdr.rpy\" target=\"_blank\"> WDR
</a> <a href=\"gelderland.rpy\" target=\"_blank\"> TV Gelderland </a> <a href=\"ned1.rpy\"
target=\"_blank\"> Nederland 1 </a> <a href=\"ned2.rpy\" target=\"_blank\"> Nederland 2 </a> <a
href=\"ned3.rpy\" target=\"_blank\"> Nederland 3 </a> <a href=\"ketnet.rpy\" target=\"_blank\">
Ketnet/Canvas </a> <a href=\"lokal.rpy\" target=\"_blank\"> Lokaal Plus </a> <a
href=\"upcinfo.rpy\" target=\"_blank\"> UpcInfo </a> <a href=\"trtint.rpy\" target=\"_blank\">
TRTint </a> <a href=\"rai1.rpy\" target=\"_blank\"> Rai Uno </a> <a href=\"eurosport.rpy\"
target=\"_blank\"> Eurosport </a> <a href=\"nick.rpy\" target=\"_blank\"> Nick/Comedy Central </a>
<a href=\"tellsell.rpy\" target=\"_blank\"> TellSell </a> <a href=\"tv5.rpy\" target=\"_blank\">
TV5 </a> <a href=\"cam.rpy\" target=\"_blank\"> cam </a></br></html>"
        fv.res += "<center><OBJECT ID=\"MediaPlayer\" WIDTH=320 HEIGHT=300
CLASSID=\"CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95\" STANDBY=\"Loading Windows Media Player
components...\" TYPE=\"application/x-oleobject\" /><param name=\"autoStart\" value=\"true\"
/><PARAM NAME=\"error\" VALUE=\"item\" /><PARAM NAME=\"stretchToFit\" VALUE=\"false\" /><PARAM
NAME=\"ShowStatusBar\" VALUE=\"true\" /><PARAM NAME=\"FileName\" VALUE=\"mms://10.0.0.1:8083\" />
<EMBED TYPE=\"application/x-mplayer2\" SRC=\"mms://10.0.0.1:8083\"NAME=\"MediaPlayer\" WIDTH=320
HEIGHT=300 ShowStatusBar=\"1\" /></EMBED></OBJECT></center>"
        return String( fv.res )
resource = TestResource()

as you can see and as i said i need to create for each station a rpy file, can i not somehow put
it all in one or make php work in rpy?

thx for any input :)
jody :D


      __________________________________________________________________
Looking for the perfect gift? Give the gift of Flickr! 

http://www.flickr.com/gift/



From mlists at line72.net  Wed May 28 09:09:05 2008
From: mlists at line72.net (Mark Dillavou)
Date: Wed, 28 May 2008 10:09:05 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <20080527201311.4714.556229544.divmod.quotient.2814@ohm>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
Message-ID: <831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>

On Tue, May 27, 2008 at 3:13 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:
<snip>

> Hi Mark,
>
> I tried your attached program and didn't see the bad behavior you
> described.
> I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
> 2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?
>

I've tried this on ubuntu hardy running:

twisted-2.5.0
python-2.5.1
wxpython-2.8.4.0

And I've also tried on a redhat 4 machine with a custom built version of:

twisted-2.5.0 and twisted-8.0.1
python-2.5.1
wxpython-2.8.6.0

I don't remember having this issue until several months ago.  It's possibly
that we we upgrade from wx-2.6 to wx-2.8 this problem showed up.  Let me
test out an older version of wx and see if I can reproduce this.

/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080528/ab1b39d5/attachment.html>

From arkanes at gmail.com  Wed May 28 14:10:17 2008
From: arkanes at gmail.com (Chris Mellon)
Date: Wed, 28 May 2008 15:10:17 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
	<831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
Message-ID: <4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>

On Wed, May 28, 2008 at 10:09 AM, Mark Dillavou <mlists at line72.net> wrote:
> On Tue, May 27, 2008 at 3:13 PM, Jean-Paul Calderone <exarkun at divmod.com>
> wrote:
> <snip>
>>
>> Hi Mark,
>>
>> I tried your attached program and didn't see the bad behavior you
>> described.
>> I tried it with Twisted trunk at HEAD, Python 2.5.1, and wxPython
>> 2.6.3.2.1.5ubuntu12.  How does this compare to the versions you're using?
>
> I've tried this on ubuntu hardy running:
>
> twisted-2.5.0
> python-2.5.1
> wxpython-2.8.4.0
>
> And I've also tried on a redhat 4 machine with a custom built version of:
>
> twisted-2.5.0 and twisted-8.0.1
> python-2.5.1
> wxpython-2.8.6.0
>
> I don't remember having this issue until several months ago.  It's possibly
> that we we upgrade from wx-2.6 to wx-2.8 this problem showed up.  Let me
> test out an older version of wx and see if I can reproduce this.
>

I've seen reports of this from other people, although I can't recreate
it either. It seems to be related to the idle handler that wx installs
in gtk not being serviced, and I think it's related to the gtk
version. As a workaround, try calling wx.WakeUpIdle() in your wx.Timer
function.



From mlists at line72.net  Wed May 28 15:34:19 2008
From: mlists at line72.net (Mark Dillavou)
Date: Wed, 28 May 2008 16:34:19 -0500
Subject: [Twisted-Python] interaction problems with wxreactor and conch
	under linux
In-Reply-To: <4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>
References: <831dbdd20805271145u646e8d20w47c5e9698f5f3e9a@mail.gmail.com>
	<20080527201311.4714.556229544.divmod.quotient.2814@ohm>
	<831dbdd20805280809y250cf4cdh608876a13e97608d@mail.gmail.com>
	<4866bea60805281310v27779328h1d74ed5b6d5496ee@mail.gmail.com>
Message-ID: <831dbdd20805281434r27e21017k3141c06b0b7e8079@mail.gmail.com>

Chris,

On Wed, May 28, 2008 at 3:10 PM, Chris Mellon <arkanes at gmail.com> wrote:

> <snip>
>
I've seen reports of this from other people, although I can't recreate
> it either. It seems to be related to the idle handler that wx installs
> in gtk not being serviced, and I think it's related to the gtk
> version. As a workaround, try calling wx.WakeUpIdle() in your wx.Timer
> function.


 Setting a wx.Timer to call wx.WakeUpIdle() does fix this problem!  Do you
have a recommendation on how often the timer should fire?  Not firing often
enough (> 500 ms) causes all the network communication to be slow, but what
are the ramifications of setting the timer value really low (1 ms)?

/Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080528/30f44f49/attachment.html>

From lutz_p at gmx.net  Thu May 29 08:06:56 2008
From: lutz_p at gmx.net (=?iso-8859-1?Q?=22Lutz_P=E4like=22?=)
Date: Thu, 29 May 2008 16:06:56 +0200
Subject: [Twisted-Python] chainDeferred does not pass result
Message-ID: <20080529140656.311900@gmx.net>

I was trying to chain two Deferreds together but there is a problem with chainDeferred().
If i add  Deferred object b in the middle of the call chain of  object a, the result is correctly passed on to the branched call chain of b but the call chain of a is broken because b.callback() does not return a result.

Am i missing something or is this a bug ?

The example below illustrates the problem. If you uncomment the line 
deferred_a.chainDeferred(deferred_b)
you should see 
result:  None

Cheers,

Lutz


#----------------
from twisted.internet import defer, reactor

def square(res):
  return res*res

def on_result(res):
  print "result: ", res
  return res

def on_error(err):
  print err
  return err

deferred_a = defer.Deferred()
deferred_b = defer.Deferred()

deferred_a.addCallback(square)
# deferred_a.chainDeferred(deferred_b)
deferred_a.addCallbacks(on_result, on_error)


reactor.callLater(0.0, deferred_a.callback, 3)
reactor.callLater(1.0, reactor.stop)

reactor.run()
#----------------

-- 
Super-Aktion nur in der GMX Spieleflat: 10 Tage für 1 Euro.
Über 180 Spiele downloaden: http://flat.games.gmx.de



From radix at twistedmatrix.com  Thu May 29 08:29:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 29 May 2008 10:29:27 -0400
Subject: [Twisted-Python] chainDeferred does not pass result
In-Reply-To: <20080529140656.311900@gmx.net>
References: <20080529140656.311900@gmx.net>
Message-ID: <60ed19d40805290729j6ee0c3bcnd619b66a755600ce@mail.gmail.com>

On Thu, May 29, 2008 at 10:06 AM, "Lutz Pälike" <lutz_p at gmx.net> wrote:
> I was trying to chain two Deferreds together but there is a problem with chainDeferred().
> If i add  Deferred object b in the middle of the call chain of  object a, the result is correctly passed on to the branched call chain of b but the call chain of a is broken because b.callback() does not return a result.
>
> Am i missing something or is this a bug ?
>
> The example below illustrates the problem. If you uncomment the line
> deferred_a.chainDeferred(deferred_b)
> you should see
> result:  None

It's not a bug, it's how chainDeferred is meant to work.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From lutz_p at gmx.net  Thu May 29 08:51:52 2008
From: lutz_p at gmx.net (=?iso-8859-1?Q?=22Lutz_P=E4like=22?=)
Date: Thu, 29 May 2008 16:51:52 +0200
Subject: [Twisted-Python] chainDeferred does not pass result
Message-ID: <20080529145152.274510@gmx.net>

> It's not a bug, it's how chainDeferred is meant to work. 
> -- Christopher Armstrong

Can you explain why ?
Wouldn't it be more useful to allow pulling intermediate results into side branches leaving the main call chain unaffected ? What makes this a wanted behaviour ?

Thanks,

Lutz
-- 
Psssst! Schon vom neuen GMX MultiMessenger gehört?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger



From glyph at divmod.com  Thu May 29 17:15:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 May 2008 23:15:15 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
Message-ID: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>

Hello, Twisted community:

I'd really like "twisted" (and our various "dot product" subprojects) to 
be a trademark that the software freedom conservancy can protect and 
defend.  For similar reasons, I'd like to have an unambiguous naming 
convention for projects which are *part* of Twisted versus those which 
are built on it or are compatible with it.

There are a few projects out there that just call themselves "py- 
whatever" but use Twisted (for some reason, none come to mind at the 
moment); that's fine, of course.  The jabber transports which use 
Twisted are pyMSNt, pyICQt; I'm not sure if the "t" stands for 
"transport" or "twisted" :).  There are also a few projects out there 
called "Twisted Whatever" which aren't part of Twisted; I can only hope 
that more projects will want to advertise their association with Twisted 
in this way.

I'd like to suggest, however, that new projects use the word "Twisty" in 
this context rather than the hopefully trademarked "Twisted".  i.e. if 
you are making an implementation of the protocol Bloobloo and want to 
give it a name associated with Twisted, please describe it as "Twisty 
Bloobloo: an implementation of bloobloo for Twisted", and name your 
packages similarly (twistybloobloo.stuff).  Sun has a great webpage 
about how to use their trademarks in this capacity: 
http://www.sun.com/policies/trademarks/.

I'm aware of 3 projects which are currently called "Twisted X" but are 
not actually a part of Twisted.  The first is Twisted Goodies, which was 
named with our explicit permission.  I appreciate that Ed asked first, 
and so he is welcome to continue using that name.  (I'd still prefer 
that it be changed to "Twisty Goodies" just to help establish the 
convention and reduce potential user confusion, but realistically there 
has not been any actual user confusion about that package, and packages 
with our explicit permission I don't believe weaken our copyright 
claim.)

Two other things that I'm aware of using names like this, however, do 
not have our permission, and if those authors are listening here (or if 
someone who knows the authors here could get in touch with them) I'd 
really like their names to be changed: Twisted SNMP and Twisted Storage.

Most of all though I hope that all 1000-odd subscribers to this list 
have their own soon-to-be-released project which can make use of this 
new convention ;).

Also, if a graphic designer out there could help with a modified version 
of the logo that could be used in the way that the Debian "open use" 
images, that would be helpful: http://www.debian.org/logos/#open-use



From jml at mumak.net  Thu May 29 18:11:11 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 10:11:11 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>

On Fri, May 30, 2008 at 9:15 AM,  <glyph at divmod.com> wrote:
> Hello, Twisted community:
>
> I'd really like "twisted" (and our various "dot product" subprojects) to be
> a trademark that the software freedom conservancy can protect and defend.
>  For similar reasons, I'd like to have an unambiguous naming convention for
> projects which are *part* of Twisted versus those which are built on it or
> are compatible with it.
>
[...]
>
> I'd like to suggest, however, that new projects use the word "Twisty" in
> this context rather than the hopefully trademarked "Twisted".  i.e. if you
> are making an implementation of the protocol Bloobloo and want to give it a
> name associated with Twisted, please describe it as "Twisty Bloobloo: an
> implementation of bloobloo for Twisted", and name your packages similarly
> (twistybloobloo.stuff).  Sun has a great webpage about how to use their
> trademarks in this capacity: http://www.sun.com/policies/trademarks/.
>

Some thoughts:

1. The first Google result for "Twisty" for me is Twistys.com (NSFW),
which is all about pictures of scantily clad women.

2. I *still* encounter resistance to Twisted because the name conjures
up images of insanity, perversion, confusion or "unprofessionalism". I
don't think "Twisty" helps with this problem. I'm not sure that this
is a big deal though.

3. Do we have lawyers? What do they say? Can you paste/link their
advice rather than summarizing?

4. In my present situation, most of the things I'm tempted to name
"Twisted%s" are just Deferred-using APIs. It'd be nice to have a
standardish name for these, and "TwistyFoo" is as good as
"DeferredFoo", "AsyncFoo" etc. I hold out a hope that the name will
become an anachronism once Deferreds and Failures are in the stdlib.

jml



From tjstebbing at gmail.com  Thu May 29 18:25:19 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Fri, 30 May 2008 10:25:19 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>

why?

I mean, if you trademark 'Twisted' and developer X goes and calls his
bit of code 'twisted foo' are you going to pursue him in court? To
what end?

If you make it clear you're against people using 'twisted' for twisted
derived products then 99% of the people who are writing twisted
related things will respect your wish, because heck, you're a person
deserving of respect in our community.

The 1% of people who will say stfu, well, who will care about their
project anyway. It just seems like a waste of your time.

Another thought, Twisted is a collective noun for everything that
twisted is, the reactor, deferreds, protocols etc. If someone was to
fork twisted, or implement it in a new language, I don't see how you
could stop them referring to it as 'Twisted Blah', what else are they
going to call it?

How do they refer to the thing that is Twisted without using the word
to describe it> I know people are going to get shirty about the idea
of forking/rewriting anyway, and why would we worry about assisting
people pursuing that use case, but thats why you picked the license
right? to give people those liberties?

trademarking just seems to rub the wrong way, makes people suspicious,
goes against the ethos man ;)

my 2c

tjs

On Fri, May 30, 2008 at 9:15 AM,  <glyph at divmod.com> wrote:
> Hello, Twisted community:
>
> I'd really like "twisted" (and our various "dot product" subprojects) to be
> a trademark that the software freedom conservancy can protect and defend.
>  For similar reasons, I'd like to have an unambiguous naming convention for
> projects which are *part* of Twisted versus those which are built on it or
> are compatible with it.
>
> There are a few projects out there that just call themselves "py- whatever"
> but use Twisted (for some reason, none come to mind at the moment); that's
> fine, of course.  The jabber transports which use Twisted are pyMSNt,
> pyICQt; I'm not sure if the "t" stands for "transport" or "twisted" :).
>  There are also a few projects out there called "Twisted Whatever" which
> aren't part of Twisted; I can only hope that more projects will want to
> advertise their association with Twisted in this way.
>
> I'd like to suggest, however, that new projects use the word "Twisty" in
> this context rather than the hopefully trademarked "Twisted".  i.e. if you
> are making an implementation of the protocol Bloobloo and want to give it a
> name associated with Twisted, please describe it as "Twisty Bloobloo: an
> implementation of bloobloo for Twisted", and name your packages similarly
> (twistybloobloo.stuff).  Sun has a great webpage about how to use their
> trademarks in this capacity: http://www.sun.com/policies/trademarks/.
>
> I'm aware of 3 projects which are currently called "Twisted X" but are not
> actually a part of Twisted.  The first is Twisted Goodies, which was named
> with our explicit permission.  I appreciate that Ed asked first, and so he
> is welcome to continue using that name.  (I'd still prefer that it be
> changed to "Twisty Goodies" just to help establish the convention and reduce
> potential user confusion, but realistically there has not been any actual
> user confusion about that package, and packages with our explicit permission
> I don't believe weaken our copyright claim.)
>
> Two other things that I'm aware of using names like this, however, do not
> have our permission, and if those authors are listening here (or if someone
> who knows the authors here could get in touch with them) I'd really like
> their names to be changed: Twisted SNMP and Twisted Storage.
>
> Most of all though I hope that all 1000-odd subscribers to this list have
> their own soon-to-be-released project which can make use of this new
> convention ;).
>
> Also, if a graphic designer out there could help with a modified version of
> the logo that could be used in the way that the Debian "open use" images,
> that would be helpful: http://www.debian.org/logos/#open-use
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Timothy J Stebbing



From terry at jon.es  Thu May 29 18:39:46 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 30 May 2008 02:39:46 +0200
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: Your message at 10:25:19 on Friday, 30 May 2008
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <18495.19666.61537.755458@jon.es>

>>>>> "Tim" == Tim Stebbing <tjstebbing at gmail.com> writes:

Tim> If someone was to fork twisted, or implement it in a new language, I
Tim> don't see how you could stop them referring to it as 'Twisted Blah',
Tim> what else are they going to call it?

Twisted Sister   (http://en.wikipedia.org/wiki/Twisted_Sister)

Terry



From waterbug at pangalactic.us  Thu May 29 18:52:15 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 29 May 2008 20:52:15 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <483F4FBF.1070204@pangalactic.us>

Hi Glyph,

I think trademarking "twisted" is a good idea, if only to have
a prior claim in the (unlikely) event someone else should
try to claim it for something in the context of software.

I'm not enthusiastic about "twisty" as a naming standard for
anything -- partly from jml's observations and partly just some
aversion to it that I don't understand myself -- if I don't
mind "twisted", why would "twisty" bother me?  I dunno.
(Subconscious association with titty twisters?  <shudder>)

My $.02.

Steve

P.S.  So, did you decide the list was getting too quiet?  ;)



From jml at mumak.net  Thu May 29 19:43:44 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 11:43:44 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>

On Fri, May 30, 2008 at 10:25 AM, Tim Stebbing <tjstebbing at gmail.com> wrote:
> why?
>
> I mean, if you trademark 'Twisted' and developer X goes and calls his
> bit of code 'twisted foo' are you going to pursue him in court? To
> what end?
>

If someone sold a networking library that was called "Twisted" and was
not actually Twisted, I would be unhappy and want them to stop. If the
law could help, then that's great. The same would apply if a company
sold "Twisted Enterprise" based on the real thing.

My understanding is that if it's common for people to make projects
called "Twisted Foo", then it becomes harder to use the law to protect
against this. IANAL, of course.

> trademarking just seems to rub the wrong way, makes people suspicious,
> goes against the ethos man ;)
>

So does reply-before-post :P

More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
all trademarked. The Emacs trademark is held by the FSF, bastions of
ideological purity. So far, I've encountered only one person who finds
this suspicious. Hi Tim :)

jml



From tjstebbing at gmail.com  Thu May 29 20:16:17 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Fri, 30 May 2008 12:16:17 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
Message-ID: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>

> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
> all trademarked. The Emacs trademark is held by the FSF, bastions of
> ideological purity. So far, I've encountered only one person who finds
> this suspicious. Hi Tim :)
>

'other people do this thing so we should also do this thing' is not a
great argument. I'm not against the idea, I just have some questions
we're yet to have answered.

AFAIK if someone infringes you're trademark you are obliged to enforce
your trademark or lose it, the afore mentioned two people Glyph is not
happy with who are using the word 'Twisted' would need to receive a
C&D off the bat. Does Twisted Labs have the resources to put into
maintaining their trademark?

As I mentioned on IRC, we've used Python(R) as part of our name in the
past, notice this list is called 'twisted-python', isn't that being a
bit hypocritical to now say 'people who use twisted cannot append or
propend the word twisted to their project name'?

-- 
Timothy J Stebbing



From andrew-twisted at puzzling.org  Thu May 29 21:03:28 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 May 2008 13:03:28 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <20080530030328.GF24984@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
>
> Two other things that I'm aware of using names like this, however, do  
> not have our permission, and if those authors are listening here (or if  
> someone who knows the authors here could get in touch with them) I'd  
> really like their names to be changed: Twisted SNMP and Twisted Storage.

I guess an important question is why these projects decided to put “Twisted” in
their name.

For Twisted SNMP, which AIUI is a library that implements the SNMP protocol for
Twisted, the reason seems to be fairly obvious: it's an obvious name, and
shorter than “SNMP implementation for use with Twisted”.  It's a library that
builds on/extends the Twisted library.  I guess calling it “Twisty SNMP” or even
a literal “Mike's SNMP for Twisted” would be fine as well.

Twisted Storage appears to be an application.  I'm not sure why they put Twisted
in their name; I'm sure Twisted is a useful platform for them to build on, but I
don't see it as being any fundamental to their application.  It could just as
easily be called “Python Storage”.  Frankly if I were them I'd try to find a
more independent and distinctive name — what if they one day rewrite half their
code to use something else? :)

So I guess they chose to include Twisted because they like Twisted, and want to
borrow some of Twisted's reputation for their own project.  We probably ought to
actually ask them why, it might be useful to know.

One last thought: what should Debian packages like “python-twisted-snmp” be
called?  I'm guessing that's an ok name as is: in much the same way that
“python-twisted” is a reasonable name for a package *for* Python without
implying that Twisted is part of Python, “python-twisted-snmp” seems like a
reasonable name for a package *for* Twisted, without necessarily implying that
it is part of official Twisted.

-Andrew.




From jml at mumak.net  Thu May 29 21:09:20 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 30 May 2008 13:09:20 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
Message-ID: <d06a5cd30805292009l663319b8rb531c28641ba0216@mail.gmail.com>

On Fri, May 30, 2008 at 12:16 PM, Tim Stebbing <tjstebbing at gmail.com> wrote:
>> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
>> all trademarked. The Emacs trademark is held by the FSF, bastions of
>> ideological purity. So far, I've encountered only one person who finds
>> this suspicious. Hi Tim :)
>>
>
> 'other people do this thing so we should also do this thing' is not a
> great argument. I'm not against the idea, I just have some questions
> we're yet to have answered.
>

That's not what I said.

You said "trademarks make people suspicious". I provided
counter-examples, demonstrating that your statement is not true in the
general case.

jml



From asset at impactdamage.com  Thu May 29 21:40:32 2008
From: asset at impactdamage.com (asset)
Date: Thu, 29 May 2008 20:40:32 -0700
Subject: [Twisted-Python] How-to raise errors with sshclient conch example
	in Twisted book
Message-ID: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>


Ref: http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/ 

Im new to Twisted and am trying to learn as quickly as I can.  I apologize if this question is a waste of anybody's time.

When working the with sshclient.py example (from the Twisted book, and the link above) I find the reactor hangs and does not raise an exception on connection failures or failed authentication.

Ive been trying to work out how to catch these situations and shut down the reactor; or cleanup for another attempt, yet I cant seem to wrap my head around it.

I imagine this is trivial and Im totally missing it.

Any help would be greatly appreciated.

Thx,

TKiel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080529/7dee4a72/attachment.html>

From glyph at divmod.com  Thu May 29 21:43:39 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 03:43:39 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <483F4FBF.1070204@pangalactic.us>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<483F4FBF.1070204@pangalactic.us>
Message-ID: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>

On 12:52 am, waterbug at pangalactic.us wrote:
>I think trademarking "twisted" is a good idea, if only to have
>a prior claim in the (unlikely) event someone else should
>try to claim it for something in the context of software.

Thanks.
>I'm not enthusiastic about "twisty" as a naming standard for
>anything -- partly from jml's observations and partly just some
>aversion to it that I don't understand myself -- if I don't
>mind "twisted", why would "twisty" bother me?  I dunno.

I am not particularly enthusiastic about the term myself, personally.  I 
think we need some word to fill that role (the one that "Py" fills for 
Python) but please feel free to suggest something else.  It doesn't have 
to be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a 
home lighting control project that uses twisted so we can have 
"TwiLight".)



From drew.smathers at gmail.com  Thu May 29 22:10:10 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 30 May 2008 00:10:10 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
Message-ID: <368574aa0805292110o4c59031fob5550f598b2f2135@mail.gmail.com>

On Thu, May 29, 2008 at 11:43 PM,  <glyph at divmod.com> wrote:
> On 12:52 am, waterbug at pangalactic.us wrote:
>>
>> I think trademarking "twisted" is a good idea, if only to have
>> a prior claim in the (unlikely) event someone else should
>> try to claim it for something in the context of software.
>
> Thanks.
>>
>> I'm not enthusiastic about "twisty" as a naming standard for
>> anything -- partly from jml's observations and partly just some
>> aversion to it that I don't understand myself -- if I don't
>> mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  I
> think we need some word to fill that role (the one that "Py" fills for
> Python) but please feel free to suggest something else.  It doesn't have to
> be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a home
> lighting control project that uses twisted so we can have "TwiLight".)
>

I think "Twi" is problematic because it's on the cusp of becoming a
word, or even worse, too easily mistaken for an acronym (and a rather
pedestrian sounding acronym due to the closeness to the airliner TWA).
 Also Twi SNMP, Twi Storage, and Twi Goodies all sound (and read)
horribly as project names.  My vote is for just "Tw" or the word
"Twist".

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From mailing_lists at evotex.ch  Fri May 30 00:34:11 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 30 May 2008 08:34:11 +0200
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
Message-ID: <483F9FE3.8080604@evotex.ch>

glyph at divmod.com wrote:
> On 12:52 am, waterbug at pangalactic.us wrote:
>> I think trademarking "twisted" is a good idea, if only to have
>> a prior claim in the (unlikely) event someone else should
>> try to claim it for something in the context of software.
>
> Thanks.
>> I'm not enthusiastic about "twisty" as a naming standard for
>> anything -- partly from jml's observations and partly just some
>> aversion to it that I don't understand myself -- if I don't
>> mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  
> I think we need some word to fill that role (the one that "Py" fills 
> for Python) but please feel free to suggest something else.  It 
> doesn't have to be a full word - "Py" isn't.  "Twi"?  (Quick, someone 
> come up with a home lighting control project that uses twisted so we 
> can have "TwiLight".)
>
I'm also not really fond of Twisty, why not just "tw"? For "Twisted 
Goodies" & "Twisted Storage" that would make it "twGoodies" and 
"twStorage", just my 2 cents.

Gabriel



From miles.chris at gmail.com  Fri May 30 01:18:40 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Fri, 30 May 2008 17:18:40 +1000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <483F9FE3.8080604@evotex.ch>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>
	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>
	<483F9FE3.8080604@evotex.ch>
Message-ID: <565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>


On 30/05/2008, at 4:34 PM, Gabriel Rossetti wrote:
> glyph at divmod.com wrote:
>> I am not particularly enthusiastic about the term myself,  
>> personally.  I think we need some word to fill that role (the one  
>> that "Py" fills for Python) but please feel free to suggest  
>> something else.  It doesn't have to be a full word - "Py" isn't.   
>> "Twi"?  (Quick, someone come up with a home lighting control  
>> project that uses twisted so we can have "TwiLight".)
>>
> I'm also not really fond of Twisty, why not just "tw"? For "Twisted  
> Goodies" & "Twisted Storage" that would make it "twGoodies" and  
> "twStorage", just my 2 cents.

The "tw" prefix is already used by ToscaWidgets-related packages, see http://tinyurl.com/5sjyhu

Cheers,
CM




From sipickles at googlemail.com  Fri May 30 01:35:21 2008
From: sipickles at googlemail.com (Simon Pickles)
Date: Fri, 30 May 2008 08:35:21 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>	<483F4FBF.1070204@pangalactic.us>	<20080530034339.25821.1950166726.divmod.xquotient.8886@joule.divmod.com>	<483F9FE3.8080604@evotex.ch>
	<565B8780-8EEE-45B7-9A69-25E0F24E702C@gmail.com>
Message-ID: <483FAE39.6020902@googlemail.com>

Chris Miles wrote:
>
> The "tw" prefix is already used by ToscaWidgets-related packages, see 
> http://tinyurl.com/5sjyhu
>
>
'twd' says twisted to me...

Si




From jakamkon at gmail.com  Fri May 30 02:08:58 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Fri, 30 May 2008 09:08:58 +0100
Subject: [Twisted-Python] How-to raise errors with sshclient conch example
	in Twisted book
In-Reply-To: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>
References: <2af3b464859b46a28b1fddbd6d5153a7@maila5.webcontrolcenter.com>
Message-ID: <2e947fbb0805300108r319edfc3t74b98546289c89b8@mail.gmail.com>

2008/5/30 asset <asset at impactdamage.com>:
[...]
>
> When working the with sshclient.py example (from the Twisted book, and the
> link above) I find the reactor hangs and does not raise an exception on
> connection failures or failed authentication.
>
Try to turn on logging using twisted.python.log(sys.stderr).I would
also suggest to put it after getpass in example you're using.
For handling a connection failures have a look at
clientConnectionFailed in ClientFactory and for a authentication
errors receiveError in SSHClientTransport.

>
> TKiel
jkk



From ms at cerenity.org  Fri May 30 03:52:30 2008
From: ms at cerenity.org (Michael)
Date: Fri, 30 May 2008 10:52:30 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
Message-ID: <200805301052.31509.ms@cerenity.org>

On Friday 30 May 2008 01:25:19 Tim Stebbing wrote:
> why?
>
> I mean, if you trademark 'Twisted' and developer X goes and calls his
> bit of code 'twisted foo' are you going to pursue him in court? To
> what end?

There's also defensive trademarking. If Linux (for example) had been 
trademarked early, this would never have happened:

    In the United States, the name Linux is a trademark registered to Linus
    Torvalds.[59] Initially, nobody registered it, but on August 15, 1994,
    William R. Della Croce, Jr. filed for the trademark Linux, and then
    demanded royalties from Linux distributors. In 1996, Torvalds and some
    affected organizations sued him to have the trademark assigned to
    Torvalds, and in 1997 the case was settled.[60] 
( http://en.wikipedia.org/wiki/Linux#Licensing.2C_trademark.2C_and_naming )


Michael.



From opaytuvi at bmat.es  Fri May 30 03:53:07 2008
From: opaytuvi at bmat.es (Oscar Paytuvi)
Date: Fri, 30 May 2008 11:53:07 +0200
Subject: [Twisted-Python] unsubscribe
Message-ID: <47bccbf00805300253u7106cda0yb1bc16f421731b17@mail.gmail.com>

On Fri, May 30, 2008 at 11:50 AM, <twisted-python-request at twistedmatrix.com>
wrote:

> Send Twisted-Python mailing list submissions to
>        twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>        twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>        twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>   1. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Jonathan Lange)
>   2. How-to raise errors with sshclient conch example  in Twisted
>      book (asset)
>   3. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (glyph at divmod.com)
>   4. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Drew Smathers)
>   5. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Gabriel Rossetti)
>   6. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Chris Miles)
>   7. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Simon Pickles)
>   8. Re: How-to raise errors with sshclient conch example      in
>      Twisted book (Kuba Konczyk)
>   9. Re: suggestions for naming to help us preserve a  Twisted
>      trademark (Michael)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 30 May 2008 13:09:20 +1000
> From: "Jonathan Lange" <jml at mumak.net>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
>        <d06a5cd30805292009l663319b8rb531c28641ba0216 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Fri, May 30, 2008 at 12:16 PM, Tim Stebbing <tjstebbing at gmail.com>
> wrote:
> >> More seriously, Emacs, Apache, Linux, Python, Debian and Ubuntu are
> >> all trademarked. The Emacs trademark is held by the FSF, bastions of
> >> ideological purity. So far, I've encountered only one person who finds
> >> this suspicious. Hi Tim :)
> >>
> >
> > 'other people do this thing so we should also do this thing' is not a
> > great argument. I'm not against the idea, I just have some questions
> > we're yet to have answered.
> >
>
> That's not what I said.
>
> You said "trademarks make people suspicious". I provided
> counter-examples, demonstrating that your statement is not true in the
> general case.
>
> jml
>
>
>
> ------------------------------
>
> Message: 2
> Date: Thu, 29 May 2008 20:40:32 -0700
> From: "asset" <asset at impactdamage.com>
> Subject: [Twisted-Python] How-to raise errors with sshclient conch
>        example in Twisted book
> To: <twisted-python at twistedmatrix.com>
> Message-ID:
>        <2af3b464859b46a28b1fddbd6d5153a7 at maila5.webcontrolcenter.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
>
> Ref: http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/ =
>
>
> Im new to Twisted and am trying to learn as quickly as I can.  I apologize
> =
> if this question is a waste of anybody's time.
>
> When working the with sshclient.py example (from the Twisted book, and the
> =
> link above) I find the reactor hangs and does not raise an exception on
> con=
> nection failures or failed authentication.
>
> Ive been trying to work out how to catch these situations and shut down
> the=
>  reactor; or cleanup for another attempt, yet I cant seem to wrap my head
> a=
> round it.
>
> I imagine this is trivial and Im totally missing it.
>
> Any help would be greatly appreciated.
>
> Thx,
>
> TKiel
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://twistedmatrix.com/pipermail/twisted-python/attachments/20080529=
> /7dee4a72/attachment-0001.htm<http://twistedmatrix.com/pipermail/twisted-python/attachments/20080529=/7dee4a72/attachment-0001.htm>
>
> ------------------------------
>
> Message: 3
> Date: Fri, 30 May 2008 03:43:39 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>        <
> 20080530034339.25821.1950166726.divmod.xquotient.8886 at joule.divmod.com>
>
> Content-Type: text/plain; charset="utf-8"; format="flowed"
>
> On 12:52 am, waterbug at pangalactic.us wrote:
> >I think trademarking "twisted" is a good idea, if only to have
> >a prior claim in the (unlikely) event someone else should
> >try to claim it for something in the context of software.
>
> Thanks.
> >I'm not enthusiastic about "twisty" as a naming standard for
> >anything -- partly from jml's observations and partly just some
> >aversion to it that I don't understand myself -- if I don't
> >mind "twisted", why would "twisty" bother me?  I dunno.
>
> I am not particularly enthusiastic about the term myself, personally.  I
> think we need some word to fill that role (the one that "Py" fills for
> Python) but please feel free to suggest something else.  It doesn't have
> to be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a
> home lighting control project that uses twisted so we can have
> "TwiLight".)
>
>
>
> ------------------------------
>
> Message: 4
> Date: Fri, 30 May 2008 00:10:10 -0400
> From: "Drew Smathers" <drew.smathers at gmail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
>        <368574aa0805292110o4c59031fob5550f598b2f2135 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On Thu, May 29, 2008 at 11:43 PM,  <glyph at divmod.com> wrote:
> > On 12:52 am, waterbug at pangalactic.us wrote:
> >>
> >> I think trademarking "twisted" is a good idea, if only to have
> >> a prior claim in the (unlikely) event someone else should
> >> try to claim it for something in the context of software.
> >
> > Thanks.
> >>
> >> I'm not enthusiastic about "twisty" as a naming standard for
> >> anything -- partly from jml's observations and partly just some
> >> aversion to it that I don't understand myself -- if I don't
> >> mind "twisted", why would "twisty" bother me?  I dunno.
> >
> > I am not particularly enthusiastic about the term myself, personally.  I
> > think we need some word to fill that role (the one that "Py" fills for
> > Python) but please feel free to suggest something else.  It doesn't have
> to
> > be a full word - "Py" isn't.  "Twi"?  (Quick, someone come up with a home
> > lighting control project that uses twisted so we can have "TwiLight".)
> >
>
> I think "Twi" is problematic because it's on the cusp of becoming a
> word, or even worse, too easily mistaken for an acronym (and a rather
> pedestrian sounding acronym due to the closeness to the airliner TWA).
>  Also Twi SNMP, Twi Storage, and Twi Goodies all sound (and read)
> horribly as project names.  My vote is for just "Tw" or the word
> "Twist".
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/ \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\ /\\\ \\
> / /\\\ /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>  d.p.s
>
>
>
> ------------------------------
>
> Message: 5
> Date: Fri, 30 May 2008 08:34:11 +0200
> From: Gabriel Rossetti <mailing_lists at evotex.ch>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <483F9FE3.8080604 at evotex.ch>
> Content-Type: text/plain; charset=UTF-8; format=flowed
>
> glyph at divmod.com wrote:
> > On 12:52 am, waterbug at pangalactic.us wrote:
> >> I think trademarking "twisted" is a good idea, if only to have
> >> a prior claim in the (unlikely) event someone else should
> >> try to claim it for something in the context of software.
> >
> > Thanks.
> >> I'm not enthusiastic about "twisty" as a naming standard for
> >> anything -- partly from jml's observations and partly just some
> >> aversion to it that I don't understand myself -- if I don't
> >> mind "twisted", why would "twisty" bother me?  I dunno.
> >
> > I am not particularly enthusiastic about the term myself, personally.
> > I think we need some word to fill that role (the one that "Py" fills
> > for Python) but please feel free to suggest something else.  It
> > doesn't have to be a full word - "Py" isn't.  "Twi"?  (Quick, someone
> > come up with a home lighting control project that uses twisted so we
> > can have "TwiLight".)
> >
> I'm also not really fond of Twisty, why not just "tw"? For "Twisted
> Goodies" & "Twisted Storage" that would make it "twGoodies" and
> "twStorage", just my 2 cents.
>
> Gabriel
>
>
>
> ------------------------------
>
> Message: 6
> Date: Fri, 30 May 2008 17:18:40 +1000
> From: Chris Miles <miles.chris at gmail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <565B8780-8EEE-45B7-9A69-25E0F24E702C at gmail.com>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
>
> On 30/05/2008, at 4:34 PM, Gabriel Rossetti wrote:
> > glyph at divmod.com wrote:
> >> I am not particularly enthusiastic about the term myself,
> >> personally.  I think we need some word to fill that role (the one
> >> that "Py" fills for Python) but please feel free to suggest
> >> something else.  It doesn't have to be a full word - "Py" isn't.
> >> "Twi"?  (Quick, someone come up with a home lighting control
> >> project that uses twisted so we can have "TwiLight".)
> >>
> > I'm also not really fond of Twisty, why not just "tw"? For "Twisted
> > Goodies" & "Twisted Storage" that would make it "twGoodies" and
> > "twStorage", just my 2 cents.
>
> The "tw" prefix is already used by ToscaWidgets-related packages, see
> http://tinyurl.com/5sjyhu
>
> Cheers,
> CM
>
>
>
>
> ------------------------------
>
> Message: 7
> Date: Fri, 30 May 2008 08:35:21 +0100
> From: Simon Pickles <sipickles at googlemail.com>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <483FAE39.6020902 at googlemail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Chris Miles wrote:
> >
> > The "tw" prefix is already used by ToscaWidgets-related packages, see
> > http://tinyurl.com/5sjyhu
> >
> >
> 'twd' says twisted to me...
>
> Si
>
>
>
>
> ------------------------------
>
> Message: 8
> Date: Fri, 30 May 2008 09:08:58 +0100
> From: "Kuba Konczyk" <jakamkon at gmail.com>
> Subject: Re: [Twisted-Python] How-to raise errors with sshclient conch
>        example in Twisted book
> To: asset at impactdamage.com,     "Twisted general discussion"
>        <twisted-python at twistedmatrix.com>
> Message-ID:
>        <2e947fbb0805300108r319edfc3t74b98546289c89b8 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> 2008/5/30 asset <asset at impactdamage.com>:
> [...]
> >
> > When working the with sshclient.py example (from the Twisted book, and
> the
> > link above) I find the reactor hangs and does not raise an exception on
> > connection failures or failed authentication.
> >
> Try to turn on logging using twisted.python.log(sys.stderr).I would
> also suggest to put it after getpass in example you're using.
> For handling a connection failures have a look at
> clientConnectionFailed in ClientFactory and for a authentication
> errors receiveError in SSHClientTransport.
>
> >
> > TKiel
> jkk
>
>
>
> ------------------------------
>
> Message: 9
> Date: Fri, 30 May 2008 10:52:30 +0100
> From: Michael <ms at cerenity.org>
> Subject: Re: [Twisted-Python] suggestions for naming to help us
>        preserve a      Twisted trademark
> To: twisted-python at twistedmatrix.com
> Cc: Tim Stebbing <tjstebbing at gmail.com>
> Message-ID: <200805301052.31509.ms at cerenity.org>
> Content-Type: text/plain;  charset="utf-8"
>
> On Friday 30 May 2008 01:25:19 Tim Stebbing wrote:
> > why?
> >
> > I mean, if you trademark 'Twisted' and developer X goes and calls his
> > bit of code 'twisted foo' are you going to pursue him in court? To
> > what end?
>
> There's also defensive trademarking. If Linux (for example) had been
> trademarked early, this would never have happened:
>
>    In the United States, the name Linux is a trademark registered to Linus
>    Torvalds.[59] Initially, nobody registered it, but on August 15, 1994,
>    William R. Della Croce, Jr. filed for the trademark Linux, and then
>    demanded royalties from Linux distributors. In 1996, Torvalds and some
>    affected organizations sued him to have the trademark assigned to
>    Torvalds, and in 1997 the case was settled.[60]
> ( http://en.wikipedia.org/wiki/Linux#Licensing.2C_trademark.2C_and_naming)
>
>
> Michael.
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 50, Issue 38
> **********************************************
>



-- 
Oscar Paytuvi
Program Manager @ www.bmat.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080530/65b61e9d/attachment.html>

From phil at bubblehouse.org  Fri May 30 09:31:57 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 30 May 2008 11:31:57 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>

On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
> I'd really like "twisted" (and our various "dot product"  
> subprojects) to be a trademark that the software freedom conservancy  
> can protect and defend.

On May 29, 2008, at 8:25 PM, Tim Stebbing wrote:
> why?
[snip snip]
> trademarking just seems to rub the wrong way, makes people suspicious,
> goes against the ethos man ;)

I have a similar predilection against trademarking, but when I really  
think about it, I only feel this way because of the actions of those  
who abuse the intent of trademark law. However, it's clear that  
legally, if Twisted wants any ability to protect against blatant  
misuse of the name, this is the only recourse.

The problem is that there's no clear policy on trademarking for OSS  
projects. If Twisted were to approach its trademark policy in a way  
similar to the MIT license, I think I would be okay with it. E.g., no  
license fees, pragmatic enforcement, etc.

A good example of what I wouldn't want to see is the whole Firefox/ 
Iceweasel debacle.

On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
> For similar reasons, I'd like to have an unambiguous naming  
> convention for projects which are *part* of Twisted versus those  
> which are built on it or are compatible with it.
[snip snip]
> I'd like to suggest, however, that new projects use the word  
> "Twisty" in this context rather than the hopefully trademarked  
> "Twisted".  i.e. if you are making an implementation of the protocol  
> Bloobloo and want to give it a name associated with Twisted, please  
> describe it as "Twisty Bloobloo: an implementation of bloobloo for  
> Twisted", and name your packages similarly (twistybloobloo.stuff).   
> Sun has a great webpage about how to use their trademarks in this  
> capacity: http://www.sun.com/policies/trademarks/.

I have to say, personally, there's pretty much no way I would ever  
name a project 'Twisty' anything ;-).

Of course, I understand this wouldn't be a requirement, but if this is  
to be a useful marketing technique, whatever the prefix is needs to be  
obvious, but also inconsequential. That's the thing that's great about  
the Java convention, once you're familiar with it, you pretty much  
stop seeing the J. Same with the tired but successful iSomething.

I think a one- or two-letter prefix is pretty much the best option

On May 30, 2008, at 3:18 AM, Chris Miles wrote:
> The "tw" prefix is already used by ToscaWidgets-related packages,  
> see http://tinyurl.com/5sjyhu


When choosing which prefix to use, I would suggest against being too  
concerned with which obscure software project already uses it.  
ToscaWidgets is still in alpha according to their webpage, which  
hasn't been updated in ages. I don't mean to deride another project,  
but considering the high rate of failure of most OSS projects, unless  
it has a community inertia as large as or larger than Twisted's, I say  
every project for itself.

Still, though, as far as I can tell, there's no projects using a T  
prefix. I kind of like the idea of tStorage and tSNMP, to use the  
recent examples.

I am curious, though, what would Divmod do? You guys have some of the  
most significant Twisted projects, and would probably be the best  
people to set the example, but you already have great names for your  
projects. tMantissa or twdAxiom just don't seem very stylin' ;-)...

-phil





From nathan.stocks at gmail.com  Fri May 30 10:51:19 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 30 May 2008 10:51:19 -0600
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<d06a5cd30805291711k4c422f0fhbd39165255c10cd1@mail.gmail.com>
Message-ID: <96c9d6a80805300951h6101f0eaj4217597f99fa5b84@mail.gmail.com>

On Thu, May 29, 2008 at 6:11 PM, Jonathan Lange <jml at mumak.net> wrote:
> 2. I *still* encounter resistance to Twisted because the name conjures
> up images of insanity, perversion, confusion or "unprofessionalism". I
> don't think "Twisty" helps with this problem. I'm not sure that this
> is a big deal though.

I would never include either of those terms in my own project names
for exactly the reasons stated above.  If anyone wants to change
"Twisted" to something with less negative connotations, I'd be all for
it.  How about "Nexus?"

I know, I know, we'd lose google-juice and such.  Y'all have fun
debating twisty stuff.  :-P

~ Nathan



From andrewfr_ice at yahoo.com  Fri May 30 12:10:31 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 30 May 2008 11:10:31 -0700 (PDT)
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted Trademark
Message-ID: <829546.94010.qm@web34207.mail.mud.yahoo.com>

Hi:

>When choosing which prefix to use, I would suggest against being too 
>concerned with which obscure software project already uses it. 
>ToscaWidgets is still in alpha according to their webpage, which 
>hasn't been updated in ages. I don't mean to deride another project, 
>but considering the high rate of failure of most OSS projects, unless 
>it has a community inertia as large as or larger than Twisted's, I say 
>every project for itself.

I would be tempted to use a prefix like tsf or twsf so there is a closer association to the Twisted Software Foundation, the entity that is the custodian of Twisted. I know little about trademark law (especially in the  U.S) but I think there are benefits when the legal entity and the product/service share a name (trade name)
 
Cheers,
Andrew


      



From glyph at divmod.com  Fri May 30 13:03:51 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 19:03:51 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
Message-ID: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>


On 03:31 pm, phil at bubblehouse.org wrote:
>I have to say, personally, there's pretty much no way I would ever 
>name a project 'Twisty' anything ;-).

OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more 
careful to separate the specific suggestion of "Twisty" (which was just 
something that popped into my head) in my original message from the need 
for a word like this.  I wasn't totally set on it.
>Of course, I understand this wouldn't be a requirement, but if this is 
>to be a useful marketing technique, whatever the prefix is needs to be 
>obvious, but also inconsequential. That's the thing that's great about 
>the Java convention, once you're familiar with it, you pretty much 
>stop seeing the J. Same with the tired but successful iSomething.

You've convinced me.  I still think "Twi" sounds okay (better than 
"Twisty")  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted 
multipleXed"?)  "T"?  I'd suggest "Tw" but I feel like it has to be 
pronounceable, and "Tw" forces the first letter of your project to be a 
vowel (whereas "Tx" could be pronounced "Tix").
>I think a one- or two-letter prefix is pretty much the best option

OK.  I guess your suggestion is a lower-case "t"?  :)
>I am curious, though, what would Divmod do? You guys have some of the 
>most significant Twisted projects, and would probably be the best 
>people to set the example, but you already have great names for your 
>projects. tMantissa or twdAxiom just don't seem very stylin' ;-)...

Divmod is really enmeshed into the core Twisted community.  If we had an 
implementation of protocol X for Twisted, we'd distribute it in one of 
our libraries or applications in order to prove it out, then contribute 
it to Twisted proper.  We've done this a few times already.  This 
sidesteps the naming issue, because then it's just "Twisted X" at the 
end of the day.  In fact it usually isn't even that; we developed and 
contributed the IMAP protocol and that's part of twisted mail, we 
developed and contributed the JUICE protocol which became 
twisted.protocols.amp (although that will probably need to grow its own 
twisted.amp "dot product" at some point in the near future).

I started trying to explain here why other people should do this if we 
don't, but it turned into a small novel about community dynamics.  I 
think I'll save that for a future blog post.  Suffice it to say that not 
everything that gets done in the world is as awesome as the stuff Divmod 
does, and naming conventions like this are for smaller, less heliocidal 
projects, which implement a protocol or two, or maybe bind to an 
existing non-Python library.

And now, for something completely different:
>On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
>>I'd really like "twisted" (and our various "dot product"  subprojects) 
>>to be a trademark that the software freedom conservancy  can protect 
>>and defend.

>A good example of what I wouldn't want to see is the whole Firefox/ 
>Iceweasel debacle.

I was talking to James Knight about this yesterday (another core Twisted 
developer if the name does not immediately ring a bell) and he made a 
very good point about trademarks to me: "Tou especially don't want to 
discourage people from using the word "Twisted" to refer to Twisted."  I 
think the Iceweasel thing is kind of silly, and isn't really necessary 
to protect the Firefox trademark, since Iceweasel *is* Firefox.  If 
anything it weakens it a little bit, because now there are multiple 
ambiguous names which one can use to refer to Firefox, rather than one 
clear trademark.  So I don't want anything like that to ever happen to 
Twisted.  (When I say "weaken" here I'm not talking about the legal 
sense, but the branding / marketing sense.  For all I know it might be 
bad for the legal sense too, but I'm not a lawyer.)

On the other hand, Debian has recently had some rather high-profile 
examples of how they insert bugs into their packaging that are not 
present in the software itself[1], and Twisted has had issues with this 
too[2].  I can sympathize, a little bit, with the Mozilla folks' desire 
to use trademarks as a weapon to say "stop breaking our stuff!".  I 
don't think that this is the right way to go about it, and clearly it 
doesn't work if they just do it anyway and give it a different name. 
While I think the Firefox patches which precipitated the Iceweasel 
debate are far, far from this point, there *is* some point where 
patching becomes so intense that distributors really shouldn't use the 
same name for their software.

[1]: http://www.debian.org/security/2008/dsa-1571 in case you're living 
under some kind of magic rock that prevents all computer security 
related things from reaching you.

[2]: I couldn't help but think of this bug - http://bugs.debian.org/cgi- 
bin/bugreport.cgi?bug=474630 - where some debian developers have 
specifically discussed re-introducing bug #2339 in a patch.  I feel like 
there's a parallel thread that should be started here about how we 
communicate with packagers.  For example, I am pretty sure that there 
are bugs in Twisted which would prevent *any* system packager (debian, 
redhat, gentoo) from getting a clean test run from an installed package, 
and yet we basically never hear about it.  Why is that?  What use is our 
test suite if the actual way twisted is installed always breaks it?  How 
can we convince packagers to build and install stuff and tell us when it 
fails the tests?  This has nothing whatsoever to do with trademarks, of 
course.



From glyph at divmod.com  Fri May 30 13:09:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 May 2008 19:09:08 -0000
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted Trademark
In-Reply-To: <829546.94010.qm@web34207.mail.mud.yahoo.com>
References: <829546.94010.qm@web34207.mail.mud.yahoo.com>
Message-ID: <20080530190908.25821.1836221096.divmod.xquotient.9044@joule.divmod.com>

On 06:10 pm, andrewfr_ice at yahoo.com wrote:
>I would be tempted to use a prefix like tsf or twsf so there is a 
>closer association to the Twisted Software Foundation, the entity that 
>is the custodian of Twisted. I know little about trademark law 
>(especially in the  U.S) but I think there are benefits when the legal 
>entity and the product/service share a name (trade name)

I don't think those benefits would apply here.  For one thing, the TSF 
is not a legal entity; it's an abstraction over the Twisted project's 
membership in the SFC, the Software Freedom Conservancy.  Also, I am 
suggesting we need a name specifically for projects *not* a part of the 
Twisted project or the TSF or the SFC, just related to the technology.



From jack at chesspark.com  Fri May 30 14:31:36 2008
From: jack at chesspark.com (Jack Moffitt)
Date: Fri, 30 May 2008 14:31:36 -0600
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
Message-ID: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>

>> I have to say, personally, there's pretty much no way I would ever name a
>> project 'Twisty' anything ;-).
>
> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
> careful to separate the specific suggestion of "Twisty" (which was just
> something that popped into my head) in my original message from the need for
> a word like this.  I wasn't totally set on it.

I like Twisty.  It's cute.  Much better than some lame microsoft-like
2-3 letter prefix to the name of the package.  Of course, I think any
package called PyBlah is fairly lame too.

jack.



From ldanielburr at mac.com  Fri May 30 14:56:56 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 30 May 2008 15:56:56 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
Message-ID: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>

On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com>  
wrote:

>>> I have to say, personally, there's pretty much no way I would ever  
>>> name a
>>> project 'Twisty' anything ;-).
>>
>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the  
>> need for
>> a word like this.  I wasn't totally set on it.
>
> I like Twisty.  It's cute.  Much better than some lame microsoft-like
> 2-3 letter prefix to the name of the package.  Of course, I think any
> package called PyBlah is fairly lame too.
>
> jack.

Seconded, for whatever such secondment is worth ;)

I've heard so many people tell me that they won't use library A, or
framework B, because the "name doesn't sound professional".  The
rationale is usually one of the following:

1. If the name is unprofessional, the code/community must also
    be unprofessional.

2. People I work with/for will ridicule me for promoting the use
    of any product with such a silly name; worse, I will lose
    credibility within my organization for having promoted the
    use of said product.

Now, I'm not denying that these things happen, but my own
perspective is that anyone who adopts either of the rationales
stated above should not be attempting to use Python, much less
Twisted, for their work.  If you need acceptance and buy-in
 from people for whom a silly name is a deal-breaker, then you
should just make your life easier and stick with products that
you know will meet with ready acceptance inside your organization.

Me?  I like TwistyDownloader, TwistyMessaging, TwistyTweets, etc.
Silly?  Sure.  Readily identifiable as being part of the Twisted
branding universe?  Yes.  The latter is what counts, in my book,
not some misguided need for "seriousness" or "professionalism".

Heck, "Twisty" evokes fond memories of interactive fiction, at
least for me.  What more could a geek want?

L. Daniel Burr



From steve at holdenweb.com  Fri May 30 15:07:01 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 30 May 2008 17:07:01 -0400
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
Message-ID: <48406C75.6090000@holdenweb.com>

Jack Moffitt wrote:
>>> I have to say, personally, there's pretty much no way I would ever name a
>>> project 'Twisty' anything ;-).
>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the need for
>> a word like this.  I wasn't totally set on it.
> 
> I like Twisty.  It's cute.  Much better than some lame microsoft-like
> 2-3 letter prefix to the name of the package.  Of course, I think any
> package called PyBlah is fairly lame too.
> 
How about Gnarly? Gnarly gnetworking? Gno, that's gnot right.

regards
  Steve (Stephegn)
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From christian.simms at gmail.com  Fri May 30 15:18:15 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Fri, 30 May 2008 17:18:15 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
Message-ID: <cd8fa6f90805301418p92f6d5ard9c92928bc46243c@mail.gmail.com>

On Fri, May 30, 2008 at 4:56 PM, L. Daniel Burr <ldanielburr at mac.com> wrote:
> On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com> wrote:
>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
>> jack.
>
> Seconded, for whatever such secondment is worth ;)

I like Twisty.  And trademarks are good in this case, otherwise the
community could get ripped off with a cheap knock-off.  I don't think
Twi- sounds as good as Py- as a prefix.  As for seriousness, there are
so many stupid names in the tech industry no one blinks at an
eccentric name like Twisted (BenQ -> QISDA, Andersen Consulting ->
Accenture, etc.).  I've had people blink at the name Python, but
they're usually so out of touch with technology that it doesn't even
matter.

Cheers,
Christian



From duncan.mcgreggor at gmail.com  Fri May 30 18:09:03 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:09:03 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
Message-ID: <4327dfbd0805301709m77c34a0ay70b59c685bf1a7b0@mail.gmail.com>

On Fri, May 30, 2008 at 10:31 AM, Phil Christensen <phil at bubblehouse.org> wrote:
> On May 29, 2008, at 7:15 PM, glyph at divmod.com wrote:
>>
>> I'd really like "twisted" (and our various "dot product" subprojects) to
>> be a trademark that the software freedom conservancy can protect and defend.
>
> On May 29, 2008, at 8:25 PM, Tim Stebbing wrote:
>>
>> why?
>
> [snip snip]
>>
>> trademarking just seems to rub the wrong way, makes people suspicious,
>> goes against the ethos man ;)
>
> I have a similar predilection against trademarking, but when I really think
> about it, I only feel this way because of the actions of those who abuse the
> intent of trademark law. However, it's clear that legally, if Twisted wants
> any ability to protect against blatant misuse of the name, this is the only
> recourse.

I had almost the same experience. When Steve Holden first let me know
that this discussion was happening, I was like "ah, shit." But then,
when Glyph talked to me about it, he talked me down. As Phil said,
this is the only recourse if we want to have the ability to legally
protect *our* (the community's) investment in Twisted.

The thing is, this thread got derailed early on, and there is another
really important point here that Glyph pointed out to me. Trademark
issues aside, we want to provide a mechanism (for starters, a naming
convention) by which *more* community members can participate without
having to under go the arduous (for a beginner) review process, code
scrutiny, etc. In the same way that naming a project "pySomething" is
not only an indication of its programming language, but (even more?)
that it is a resource of the Python community, naming a project
<twisted prefix>Something will do the same for coders who are creating
Twisted "community resources."

d



From duncan.mcgreggor at gmail.com  Fri May 30 18:14:50 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:14:50 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
Message-ID: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>

On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>
> On 03:31 pm, phil at bubblehouse.org wrote:
>>
>> I have to say, personally, there's pretty much no way I would ever name a
>> project 'Twisty' anything ;-).
>
> OK, OK, I get it.  Everybody hates "Twisty" :).

Seriously. I groaned audibly upon hearing about it :-)

> I should have been more
> careful to separate the specific suggestion of "Twisty" (which was just
> something that popped into my head) in my original message from the need for
> a word like this.  I wasn't totally set on it.
>>
>> Of course, I understand this wouldn't be a requirement, but if this is to
>> be a useful marketing technique, whatever the prefix is needs to be obvious,
>> but also inconsequential. That's the thing that's great about the Java
>> convention, once you're familiar with it, you pretty much stop seeing the J.
>> Same with the tired but successful iSomething.
>
> You've convinced me.  I still think "Twi" sounds okay (better than "Twisty")
>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted multipleXed"?)
>  "T"?  I'd suggest "Tw" but I feel like it has to be pronounceable, and "Tw"
> forces the first letter of your project to be a vowel (whereas "Tx" could be
> pronounced "Tix").
>>
>> I think a one- or two-letter prefix is pretty much the best option

Man, I think you totally hit it on the nose with your "tx" suggestion:
tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
only does it have a cool sound, entails "TwistedmatriX", is associated
with "transmit", but it could also stand for "Twisted eXtensions" (in
the "add on" sense).

I think this one's a winner.

d



From duncan.mcgreggor at gmail.com  Fri May 30 18:20:25 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:20:25 -0500
Subject: [Twisted-Python] Re: suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <48406C75.6090000@holdenweb.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<48406C75.6090000@holdenweb.com>
Message-ID: <4327dfbd0805301720i6ea84eefna64c5abb24c682c1@mail.gmail.com>

On Fri, May 30, 2008 at 4:07 PM, Steve Holden <steve at holdenweb.com> wrote:
> Jack Moffitt wrote:
>>>>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
> How about Gnarly? Gnarly gnetworking? Gno, that's gnot right.
>
> regards
>  Steve (Stephegn)

Okay, that was downright hilarious.

d



From duncan.mcgreggor at gmail.com  Fri May 30 18:24:22 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Fri, 30 May 2008 19:24:22 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<9b58f4550805301331l5ec392d9wd949fee7778de730@mail.gmail.com>
	<op.ubzi46tk3oj628@l-daniel-burrs-computer.local>
Message-ID: <4327dfbd0805301724y6682daa1q17f6b134cdb4a6b8@mail.gmail.com>

On Fri, May 30, 2008 at 3:56 PM, L. Daniel Burr <ldanielburr at mac.com> wrote:
> On Fri, 30 May 2008 15:31:36 -0500, Jack Moffitt <jack at chesspark.com> wrote:
>
>>>> I have to say, personally, there's pretty much no way I would ever name
>>>> a
>>>> project 'Twisty' anything ;-).
>>>
>>> OK, OK, I get it.  Everybody hates "Twisty" :).  I should have been more
>>> careful to separate the specific suggestion of "Twisty" (which was just
>>> something that popped into my head) in my original message from the need
>>> for
>>> a word like this.  I wasn't totally set on it.
>>
>> I like Twisty.  It's cute.  Much better than some lame microsoft-like
>> 2-3 letter prefix to the name of the package.  Of course, I think any
>> package called PyBlah is fairly lame too.
>>
>> jack.
>
> Seconded, for whatever such secondment is worth ;)
>
> I've heard so many people tell me that they won't use library A, or
> framework B, because the "name doesn't sound professional".  The
> rationale is usually one of the following:
>
> 1. If the name is unprofessional, the code/community must also
>   be unprofessional.
>
> 2. People I work with/for will ridicule me for promoting the use
>   of any product with such a silly name; worse, I will lose
>   credibility within my organization for having promoted the
>   use of said product.
>
> Now, I'm not denying that these things happen, but my own
> perspective is that anyone who adopts either of the rationales
> stated above should not be attempting to use Python, much less
> Twisted, for their work.  If you need acceptance and buy-in
> from people for whom a silly name is a deal-breaker, then you
> should just make your life easier and stick with products that
> you know will meet with ready acceptance inside your organization.
>
> Me?  I like TwistyDownloader, TwistyMessaging, TwistyTweets, etc.
> Silly?  Sure.  Readily identifiable as being part of the Twisted
> branding universe?  Yes.  The latter is what counts, in my book,
> not some misguided need for "seriousness" or "professionalism".
>
> Heck, "Twisty" evokes fond memories of interactive fiction, at
> least for me.  What more could a geek want?

These are all really good points. I'm not a big fan of the "Twisty"
name, but did a great job casting it in a nice light. However,
twisty.whatever isn't a good namespace to cram a bunch of stuff. tx,
on the other hand, is. It's a quick type that I won't mind doing
repeatedly for any Twisted-based project code I write.

How about "TX, pronounced 'Twisty'" ...

d



From phil at bubblehouse.org  Fri May 30 21:35:45 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 30 May 2008 23:35:45 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <05B18175-8EAB-4D9D-ADE4-0EFF86306020@bubblehouse.org>

On May 30, 2008, at 8:14 PM, Duncan McGreggor wrote:
> On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>> You've convinced me.  I still think "Twi" sounds okay (better than  
>> "Twisty")
>>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted  
>> multipleXed"?)
>>  "T"?  I'd suggest "Tw" but I feel like it has to be  
>> pronounceable, and "Tw"
>> forces the first letter of your project to be a vowel (whereas  
>> "Tx" could be
>> pronounced "Tix").
>>
>>> I think a one- or two-letter prefix is pretty much the best option
>
> Man, I think you totally hit it on the nose with your "tx" suggestion:
> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
> only does it have a cool sound, entails "TwistedmatriX", is associated
> with "transmit", but it could also stand for "Twisted eXtensions" (in
> the "add on" sense).

I was about to second this point before I left work tonight, but got  
distracted. I like it even better with the dot notation, e.g.,  
tx.whatever.

-phil



From jakamkon at gmail.com  Sat May 31 03:25:42 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Sat, 31 May 2008 10:25:42 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <2e947fbb0805310225u405af68dp31bd44d04020586f@mail.gmail.com>

2008/5/31 Duncan McGreggor <duncan.mcgreggor at gmail.com>:
> On Fri, May 30, 2008 at 2:03 PM,  <glyph at divmod.com> wrote:
>>
>> On 03:31 pm, phil at bubblehouse.org wrote:
>>>
>>> I have to say, personally, there's pretty much no way I would ever name a
>>> project 'Twisty' anything ;-).
>>
>> OK, OK, I get it.  Everybody hates "Twisty" :).
>
> Seriously. I groaned audibly upon hearing about it :-)
>
>> I should have been more
>> careful to separate the specific suggestion of "Twisty" (which was just
>> something that popped into my head) in my original message from the need for
>> a word like this.  I wasn't totally set on it.
>>>
>>> Of course, I understand this wouldn't be a requirement, but if this is to
>>> be a useful marketing technique, whatever the prefix is needs to be obvious,
>>> but also inconsequential. That's the thing that's great about the Java
>>> convention, once you're familiar with it, you pretty much stop seeing the J.
>>> Same with the tired but successful iSomething.
>>
>> You've convinced me.  I still think "Twi" sounds okay (better than "Twisty")
>>  "Tx" (evocative of "TwistedmatriX", "Transmit", "Twisted multipleXed"?)
>>  "T"?  I'd suggest "Tw" but I feel like it has to be pronounceable, and "Tw"
>> forces the first letter of your project to be a vowel (whereas "Tx" could be
>> pronounced "Tix").
>>>
>>> I think a one- or two-letter prefix is pretty much the best option
> Man, I think you totally hit it on the nose with your "tx" suggestion:
> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
> only does it have a cool sound, entails "TwistedmatriX", is associated
> with "transmit", but it could also stand for "Twisted eXtensions" (in
> the "add on" sense).
I really like tx. too and you perfectly explained why :)

jkk



From glyph at divmod.com  Sat May 31 13:27:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 31 May 2008 19:27:15 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
Message-ID: <20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>

On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>Man, I think you totally hit it on the nose with your "tx" suggestion:
>tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>only does it have a cool sound, entails "TwistedmatriX", is associated
>with "transmit", but it could also stand for "Twisted eXtensions" (in
>the "add on" sense).

Thanks for the encouragement :) but a minor point: I think it's 
important that these packages use 'py' in the same way most projects do, 
since sharing namespaces in Python is such a pain.  i.e. in pygame you 
do 'import pygame', in pygtk you do 'import gtk'.  The existence of the 
separate 'py' library / namespace complicates matters somewhat, but 
that's a single entity that has nothing to do with 99% of the PyFoo 
projects out there.

So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.

It seems like different people have different ideas for this convention, 
which sounds great to me too.  If we have a few "Twisty XYZ" libraries 
and a few "TxABC" libraries that's fine by me :).  The whole point here 
is that it's a suggestion and a convention, not a mandate from the core 
team like so many things in the Twistedverse.



From mrsalty0 at gmail.com  Sat May 31 14:34:38 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Sat, 31 May 2008 16:34:38 -0400
Subject: [Twisted-Python] DeferredList + LoopingCall
Message-ID: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>

Hello,

I want to group several calls to a function() that returns a deferred into a
DeferredList so that I can add
callbacks that will fire once each call to function() has returned.
Furthermore, I want to arrange it so that this process repeats every X
seconds.
The problem I'm having is understanding how I can combine the concept of a
DeferredList with task.LoopingCall in this scenario. Or is that even the
right approach to take?

Thanks,
-Jake
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080531/2b98aee2/attachment.html>

From duncan.mcgreggor at gmail.com  Sat May 31 14:51:19 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sat, 31 May 2008 15:51:19 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
	<20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
Message-ID: <4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>

On Sat, May 31, 2008 at 2:27 PM,  <glyph at divmod.com> wrote:
> On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>>
>> Man, I think you totally hit it on the nose with your "tx" suggestion:
>> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>> only does it have a cool sound, entails "TwistedmatriX", is associated
>> with "transmit", but it could also stand for "Twisted eXtensions" (in
>> the "add on" sense).
>
> Thanks for the encouragement :) but a minor point: I think it's important
> that these packages use 'py' in the same way most projects do, since sharing
> namespaces in Python is such a pain.  i.e. in pygame you do 'import pygame',
> in pygtk you do 'import gtk'.  The existence of the separate 'py' library /
> namespace complicates matters somewhat, but that's a single entity that has
> nothing to do with 99% of the PyFoo projects out there.

Hrm. I really like the idea of the community sharing a namespace. But
maybe that's just my software hippy/commune side coming out...

> So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.

As a name, I don't know what appeals to me more... txJSONRPC,
TxJSONRPC, txjsonrpc. As a namespace, I really do like tx.jsonrpc ;-)

> It seems like different people have different ideas for this convention,
> which sounds great to me too.  If we have a few "Twisty XYZ" libraries and a
> few "TxABC" libraries that's fine by me :).  The whole point here is that
> it's a suggestion and a convention, not a mandate from the core team like so
> many things in the Twistedverse.

Now that, I am totally in favor of :-) No mandates, just
encouragement. Most of all, encouragement to participate and share
Twisted-based code/projects :-)

d



From exarkun at twistedmatrix.com  Sat May 31 22:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Jun 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1212293108.71.1988193192@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080601/6d3b887d/attachment.html>

