From dalke at dalkescientific.com  Sun Jun  1 03:23:51 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 01:23:51 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
Message-ID: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>

Hi,

   I'm working on an add-in for Excel, under MS Windows.  This takes 
information
from the current selection and uses XML-RPC to call a remote server.

   The call may take a while, so I want to have a "Cancel" button.  I
decided to use wxPython for the GUI, with a modal dialog.  Basically,
a wxGauge (for the progress bar) and a "Cancel" button.

   The RPC call itself may take several minutes, so I need to use either
threads or Twisted, and obviously I decided on the latter.  (This is an
in-process add-in; I'm worried about using threads inside the Excel
process itself.)

   I can't figure out how to make this all work together.  There's some
support code in Twisted for wxPython, but it appears to only support
the main event loop, while I'm running a modal window, and never call
my wxApp's MainLoop.

   I tried replacing my wxDialog with a wxFrame, which kinda works, 
except
that the background is very strange.  It looks like it hasn't been
fully initialized.

   I've attached my code, in the hopes that someone here can help me
figure out what to do.

   BTW, Twisted's wxPython support subsumes wx's main loop code.  Is
there any reason there can't be an implementation which hooks into
wx's idle loop, so that users can decide who's in charge?  I think that
would actually fix my problem, since Modals (I think) process the
idle loop ...  Nope, I'm not clever enough to figure that out - my
attempt is attached as "Progress2.py"

					Andrew
					dalke at dalkescientific.com

  
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Progress.py
Type: application/octet-stream
Size: 3780 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030601/3e133d50/attachment.obj 
-------------- next part --------------

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Progress2.py
Type: application/octet-stream
Size: 3784 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030601/3e133d50/attachment-0001.obj 

From andrew-twisted at puzzling.org  Sun Jun  1 03:32:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 1 Jun 2003 17:32:57 +1000
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
References: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601073257.GF19445@frobozz>

On Sun, Jun 01, 2003 at 01:23:51AM -0600, Andrew Dalke wrote:
[...]
>   I can't figure out how to make this all work together.  There's some
> support code in Twisted for wxPython, but it appears to only support
> the main event loop, while I'm running a modal window, and never call
> my wxApp's MainLoop.

Just a quick suggestion (I don't have access to win32 machines) -- does the
recipe at http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
help at all?

-Andrew.




From uwe at oss4u.com  Sun Jun  1 04:57:06 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 1 Jun 2003 01:57:06 -0700
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
References: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <200306010157.06429.uwe@oss4u.com>

Well, I have no idea if you can get this working, but here are my $0.02

The problem with twisted and wx is that both systems are event driven and both 
have a never-ending mainloop to process those events.
As you figured out already, wx is particularly weird with event loops. The wx 
MainLoop processes only non-modal UI events. The moment you open a modal 
window (or a pulldown menu) the mainloop stops looping and waits for some 
"sub-loop" to terminate. Unfortunately this sub-loop depends on the platform 
you are on. AFAIK wxWindows simply uses the loops from the different toolkits 
(GTK, MS ....), so there is basically no way to hook into those loops in a 
platform independant way. Maybe Robin can shed some light on this.

This is also the problem with the twisted wx support code. It works nicely as 
long as you don't use a modal window. Then the code simply stops working. 
That's why I posted a recipe on activestate's python cookbook, which uses a 
timer to run the twisted reactor without actually running the reactor loop. 
This is the only way I could get it working without using threads and as I 
see in your Python2 file you figured that one out.

I am not sure what the wxApp Mainloop does internally. Maybe you try calling 
the Dispatch and ProcessIdle methods once in a while, or dig into the source 
and figure out what they do internally. My guess would be that some UI events 
aren't processed properly.
Another wild idea that just jumped to my mind. Try an event.Skip() at the end 
of you OnIdle handler.  Maybe there is some other internal idle event handler 
that never gets called since you have your own and thus you miss some 
internal handling.

Not much, but maybe it helps.


On Sunday 01 June 2003 12:23 am, Andrew Dalke wrote:
> Hi,
>
>    I'm working on an add-in for Excel, under MS Windows.  This takes
> information
> from the current selection and uses XML-RPC to call a remote server.
>
>    The call may take a while, so I want to have a "Cancel" button.  I
> decided to use wxPython for the GUI, with a modal dialog.  Basically,
> a wxGauge (for the progress bar) and a "Cancel" button.
>
>    The RPC call itself may take several minutes, so I need to use either
> threads or Twisted, and obviously I decided on the latter.  (This is an
> in-process add-in; I'm worried about using threads inside the Excel
> process itself.)
>
>    I can't figure out how to make this all work together.  There's some
> support code in Twisted for wxPython, but it appears to only support
> the main event loop, while I'm running a modal window, and never call
> my wxApp's MainLoop.
>
>    I tried replacing my wxDialog with a wxFrame, which kinda works,
> except
> that the background is very strange.  It looks like it hasn't been
> fully initialized.
>
>    I've attached my code, in the hopes that someone here can help me
> figure out what to do.
>
>    BTW, Twisted's wxPython support subsumes wx's main loop code.  Is
> there any reason there can't be an implementation which hooks into
> wx's idle loop, so that users can decide who's in charge?  I think that
> would actually fix my problem, since Modals (I think) process the
> idle loop ...  Nope, I'm not clever enough to figure that out - my
> attempt is attached as "Progress2.py"
>
> 					Andrew
> 					dalke at dalkescientific.com


--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From dalke at dalkescientific.com  Sun Jun  1 05:10:52 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 03:10:52 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <20030601073257.GF19445@frobozz>
Message-ID: <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>

Andrew Bennetts:
> Just a quick suggestion (I don't have access to win32 machines) -- 
> does the
> recipe at 
> http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
> help at all?

Huh.  I looked there earlier for wxPython examples but didn't see it.  
Turns
out I looked under 'user interfaces' and not 'network', which is where 
that
recipe is located.

Anyone want to add links from the wiki to the wxPython recipes?

Uwe C. Schroeder:
 > [who wrote that recipe, offered additional suggestions]

Cool!  Those should help.  I'll try them out tomorrow (err, today ;)

BTW, I think the problem with my "Progress2.py" is that I need to
remove the IDLE listener when the window exits, but I don't know
how to remove a event listener.

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Sun Jun  1 05:23:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 1 Jun 2003 19:23:40 +1000
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601073257.GF19445@frobozz> <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601092340.GG19445@frobozz>

On Sun, Jun 01, 2003 at 03:10:52AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >Just a quick suggestion (I don't have access to win32 machines) -- does
> >the recipe at
> >http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780 help at
> >all?
> 
> Huh.  I looked there earlier for wxPython examples but didn't see it.
> Turns out I looked under 'user interfaces' and not 'network', which is
> where that recipe is located.

Well, I just found it by googling for "wxpython twisted" -- of course, I
knew it was there, which always helps when searching :)

-Andrew.




From tv at twistedmatrix.com  Sun Jun  1 05:25:39 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 1 Jun 2003 12:25:39 +0300
Subject: [Twisted-Python] tuntap and friends
In-Reply-To: <20030531220229.7977bbbf.itamar@itamarst.org>
References: <20030531220229.7977bbbf.itamar@itamarst.org>
Message-ID: <20030601092539.GB2659@lapdog>

On Sat, May 31, 2003 at 10:02:28PM -0400, Itamar Shtull-Trauring wrote:
> I think this code should be in its own package.

	Do you mean something like
	twisted.somethingthatisnotinternet.tuntap, or something
	totally separate from Twisted?

	If the former, I'll likely move them to twisted.pair; future
	usage probably includes tuntap, libpcap/libnet, packet(7)
	sockets, etc, and these should probably be in the same
	package. twisted.pair.tuntap, twisted.pair.pcap, etc..

-- 
:(){ :|:&};:



From itamar at itamarst.org  Sun Jun  1 11:24:17 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 11:24:17 -0400
Subject: [Twisted-Python] tuntap and friends
In-Reply-To: <20030601092539.GB2659@lapdog>
References: <20030531220229.7977bbbf.itamar@itamarst.org>
	<20030601092539.GB2659@lapdog>
Message-ID: <20030601112417.7c812e05.itamar@itamarst.org>

On Sun, 1 Jun 2003 12:25:39 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	If the former, I'll likely move them to twisted.pair; future
> 	usage probably includes tuntap, libpcap/libnet, packet(7)
> 	sockets, etc, and these should probably be in the same
> 	package. twisted.pair.tuntap, twisted.pair.pcap, etc..

Yeah, twisted.pair or some other name was what I meant.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From miathan at goliath.darktech.org  Sun Jun  1 11:59:48 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Sun, 1 Jun 2003 17:59:48 +0200
Subject: [Twisted-Python] twisted.internet.stdio: wrong initialisation
Message-ID: <20030601155948.GC2149@mercury.local.net>

Hello,

In twisted.internet.stdio, makeConnection is called on the protocol 
before the writer is set. This is Not Good(TM) because the 
makeConnection might write a welcome banner in some protocols
(twisted.protcols.telnet, for example).

This patch will fix this

--- Twisted/twisted/internet/stdio.py   2003-03-31 21:31:15.000000000 
+0200
+++ Twisted-1.0.5/twisted/internet/stdio.py     2003-06-01 
17:55:26.000000000 +0200
@@ -82,10 +82,11 @@
          _stdio_in_use = 1
          self.fileno = sys.__stdin__.fileno
          fdesc.setNonBlocking(self.fileno())
+        self.writer = StandardIOWriter()
          self.protocol = protocol
          self.protocol.makeConnection(self)
          self.startReading()
-        self.writer = StandardIOWriter()
       def write(self, data):
          """Write some data to standard output.


Wladimir



From tv at twistedmatrix.com  Sun Jun  1 13:40:13 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 1 Jun 2003 20:40:13 +0300
Subject: [Twisted-Python] Patch to improve usability of DNS caching
Message-ID: <20030601174013.GA3782@lapdog>

	Hi. At http://twistedmatrix.com/~tv/dnscache.patch there is a
	patch that adds some things to twisted.names:

	1. Make the resolv.conf location configurable at mktap time.

	2. Reload resolv.conf regularly. resolv_read_interval is the
	   time period, in seconds; currently 60.

	3. Note that pickServer may now return None, if there are no
	   hardcoded servers and resolv.conf is empty/cannot be read.

	This allows me to run a local DNS server bound to
	127.0.0.1:53, list that in /etc/resolv.conf, make my DHCP
	client write it's resolv.conf to
	/var/run/dhclient.resolv.conf, and point my local DNS server
	to that.

	And all this because glibc doesn't reread /etc/resolv.conf for
	long-living processes. And because I want to control the
	.local namespace..

-- 
:(){ :|:&};:



From 2002 at weholt.org  Sun Jun  1 15:59:46 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 1 Jun 2003 21:59:46 +0200
Subject: [Twisted-Python] Twiested.Web supports HTTP-compression and Resume/Rest on HTTP-Requests??
Message-ID: <006401c32878$5d31fed0$0401a8c0@razor>

Does Twisted.Web support request for compressed content, like gzip etc. ??
And does it support Byte-ranges so that you can use resume a disconnected
download?

Can anyone shed some light on these features??

Best regards,
Thomas




From itamar at itamarst.org  Sun Jun  1 16:17:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 16:17:58 -0400
Subject: [Twisted-Python] Twiested.Web supports HTTP-compression and
 Resume/Rest on HTTP-Requests??
In-Reply-To: <006401c32878$5d31fed0$0401a8c0@razor>
References: <006401c32878$5d31fed0$0401a8c0@razor>
Message-ID: <20030601161758.54096536.itamar@itamarst.org>

On Sun, 1 Jun 2003 21:59:46 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Does Twisted.Web support request for compressed content, like gzip
> etc. ??

Not at the moment. There've been patches on the list though.

> And does it support Byte-ranges so that you can use resume a
> disconnected download?

Static file downloads support it (twisted.web.static), IIRC.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Sun Jun  1 18:27:38 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 16:27:38 -0600
Subject: [Twisted-Python] HTTP versions
Message-ID: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>

Speaking of HTTP, I'm starting to look at WebDAV support for
Twisted.  Still evaluating if that's what I need.  Pointers
on how I should start?

Right now I'm just reviewing the existing http code and I've found
various problems.  I've previously reviewed the Python 2.3 code for
similar reasons, so I have a reasonable idea of how the two compare.


I see that protocols/http.py regards the version as a string,
as in

                 if ((version == "HTTP/1.1") and


The HTTP 1.1 spec (RFC 2616) says

    The version of an HTTP message is indicated by an HTTP-Version field
    in the first line of the message.

        HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT

    Note that the major and minor numbers MUST be treated as separate
    integers ... Leading zeros MUST be ignored by recipients and
    MUST NOT be sent.

A fix is to use the 2-ple of (major, minor) version numbers,
as integers, rather than a string.  This is what Python 2.3 does

         if len(words) == 3:
             [command, path, version] = words
             if version[:5] != 'HTTP/':
                 self.send_error(400, "Bad request version (%s)" % 
`version`)
                 return False
             try:
                 base_version_number = version.split('/', 1)[1]
                 version_number = base_version_number.split(".")
                 # RFC 2145 section 3.1 says there can be only one "." 
and
                 #   - major and minor numbers MUST be treated as
                 #      separate integers;
                 #   - HTTP/2.4 is a lower version than HTTP/2.13, which 
in
                 #      turn is lower than HTTP/12.3;
                 #   - Leading zeros MUST be ignored by recipients.
                 if len(version_number) != 2:
                     raise ValueError
                 version_number = int(version_number[0]), 
int(version_number[1]
)
             except (ValueError, IndexError):
                 self.send_error(400, "Bad request version (%s)" % 
`version`)
                 return False
             if version_number >= (1, 1) and self.protocol_version >= 
"HTTP/1.1
":
                 self.close_connection = 0
             if version_number >= (2, 0):
                 self.send_error(505,
                           "Invalid HTTP Version (%s)" % 
base_version_number)
                 return False

While the Twisted code will work for more real-life cases, it isn't
RFC compliant.  Also, the server accepts any sort of version string, 
including
"QWE/1.2".  It should send an error 400, "Bad request version".


I noticed that the headers parsing assumes unique names, with

         self.requests[-1].received_headers[header] = data

the RFC says

    Multiple message-header fields with the same field-name MAY be
    present in a message if and only if the entire field-value for that
    header field is defined as a comma-separated list [i.e., #(values)].
    It MUST be possible to combine the multiple header fields into one
    "field-name: field-value" pair, without changing the semantics of the
    message, by appending each subsequent field-value to the first, each
    separated by a comma. The order in which header fields with the same


Python's code solves this with an rfc822.Header which is dict-like,
but has a way to get all headers which match a given name.

The header code also has some small problems, like suppose that a
header line doesn't have a ":".  Then headerReceived fails in the

         header, data = line.split(':', 1)

and no error code is sent back to the client.  Eg, I started up
the server just now and did

% telnet localhost 8080
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
GET / HTTP/1.1
Spam

Connection closed by foreign host.
%

and the log says

2003/06/01 16:16 MDT [HTTPChannel,0,127.0.0.1] Traceback (most recent 
call last):
           File "./twisted/internet/default.py", line 475, in doSelect
             _logrun(selectable, _drdw, selectable, method, dict)
           File "./twisted/python/log.py", line 65, in callWithLogger
             callWithContext({"system": lp}, func, *args, **kw)
           File "./twisted/python/log.py", line 52, in callWithContext
             return context.call({ILogContext: newCtx}, func, *args, 
**kw)
           File "./twisted/python/context.py", line 32, in 
callWithContext
             return func(*args,**kw)
         --- <exception caught here> ---
           File "./twisted/internet/default.py", line 484, in 
_doReadOrWrite
             why = getattr(selectable, method)()
           File "./twisted/internet/tcp.py", line 222, in doRead
             return self.protocol.dataReceived(data)
           File "./twisted/protocols/basic.py", line 175, in dataReceived
             why = self.lineReceived(line)
           File "./twisted/protocols/http.py", line 910, in lineReceived
             self.headerReceived(self.__header)
           File "./twisted/protocols/http.py", line 927, in 
headerReceived
             header, data = line.split(':', 1)
         exceptions.ValueError: unpack list of wrong size



The cookie parsing code is

     def parseCookies(self):
         """Parse cookie headers.

         This method is not intended for users."""
         cookietxt = self.getHeader("cookie")
         if cookietxt:
             for cook in cookietxt.split('; '):
                 try:
                     k, v = cook.split('=')
                     self.received_cookies[k] = v
                 except ValueError:
                     pass

This doesn't handle quoting, which the standard Cookie.py module does
support.  (Ditto for writing cookies out.)  While I realize that
the cookie code has been there for a while (from 2nd 1/2 of 2001), the
Python code was added to CVS a year previous, and was based on a
older, publically available package.

Overall, I like the code in standard Python better.  Given
my interests though, it seems appropriate that I use Twisted as
the basis for what I'm working on.

Therefore, suppose I were to work on a replacement module for the
http server parsing code, one which assumes 2.3 code (eg, for
datetime parsing).  What else needs to be done to update that
module?


					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sun Jun  1 18:40:23 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 18:40:23 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>
References: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601184023.2db5f2c3.itamar@itamarst.org>

On Sun, 1 Jun 2003 16:27:38 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> While the Twisted code will work for more real-life cases, it isn't
> RFC compliant.  Also, the server accepts any sort of version string, 
> including
> "QWE/1.2".  It should send an error 400, "Bad request version".

I don't really care about this, working with real life code is more
important. But if you send me a patch I'll accept it.

> I noticed that the headers parsing assumes unique names, with
> 
>          self.requests[-1].received_headers[header] = data

This is indeed a problem. I had a patch that solved it, but had to back
it out. Sooner or later it will be reintroduced.

> Therefore, suppose I were to work on a replacement module for the
> http server parsing code, one which assumes 2.3 code (eg, for
> datetime parsing).  What else needs to be done to update that
> module?

Twisted depends on 2.2. If you want code to be added to Twisted, it'll
have to require 2.2 only. We also ned backwards compatability with
existing code. Most of the problems you mentioned can be solved with
only a little work using the existing codebase.

Probably what you should do is write a series of patches and send them
to me. They'll have to be backwards compatible, have tests and work on
2.2 in order to be accepted.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From asohn at plus.de  Sun Jun  1 19:00:16 2003
From: asohn at plus.de (asohn at plus.de)
Date: Mon, 2 Jun 2003 01:00:16 +0200
Subject: [Twisted-Python] Andreas Sohn/PLUS/MHM/TUG/DE ist =?iso-8859-1?Q?au=DFer_Haus=2E?=
Message-ID: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>

Ich werde ab  02.06.2003 nicht im B?ro sein. Ich kehre zur?ck am
23.06.2003.

Ich werde Ihre Nachricht nach meiner R?ckkehr beantworten.




From lists at ghaering.de  Sun Jun  1 19:25:52 2003
From: lists at ghaering.de (Gerhard Haering)
Date: Mon, 2 Jun 2003 01:25:52 +0200
Subject: [Twisted-Python] Andreas Sohn/PLUS/MHM/TUG/DE ist au?er Haus.
In-Reply-To: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>
References: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>
Message-ID: <20030601232551.GA2910@mephisto.ghaering.de>

* asohn at plus.de <asohn at plus.de> [2003-06-02 01:00 +0200]:
> Ich werde ab  02.06.2003 nicht im B?ro sein. Ich kehre zur?ck am
> 23.06.2003.
> 
> Ich werde Ihre Nachricht nach meiner R?ckkehr beantworten.

In English:

"I'll not be in the office from 02.06.2003 on. I'll be back [1] at
23.06.2003.

I'll respond to your message once I'm back."

That's just the corporate email user's way of asking to be unsubscribed
from this list so we don't get tons of such "meaningful" autoresponder
messages.

Gerhard

[1] This is meant to be spoken with an austrian accent, of course.
-- 
http://ghaering.de/



From dalke at dalkescientific.com  Sun Jun  1 19:54:45 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 17:54:45 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601184023.2db5f2c3.itamar@itamarst.org>
Message-ID: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar:
> I don't really care about this, working with real life code is more
> important. But if you send me a patch I'll accept it.

I can send a patch, but I don't know the dependencies of clients
on having a version string over a 2-ple, which is what I would
prefer.

What about something like

class Version:
   def __init__(self, s, v):
     self.s = s  # a string, as in "HTTP/1.1"
     self.v = v  # a 2-ple, as in (1, 1)
   def __cmp__(self, other):
     if isinstance(other, Version):
       return cmp(self.v, other.v)
     if isinstance(other, basestring):  # or as appropriate for Python 
2.1
       # generate a deprecation warning here
       return cmp(self.s, other)
     return cmp(self.v, other)
   def __rcmp__(self, other):
     return -cmp(self, other)
   def __getitem__(self, i):
     return self.v[i]

which would be an interim solution that would pass the
existing regression tests and provide a transition to a 2-ple
based version.


>> I noticed that the headers parsing assumes unique names, with
>>
>>          self.requests[-1].received_headers[header] = data
>
> This is indeed a problem. I had a patch that solved it, but had to back
> it out. Sooner or later it will be reintroduced.

What about using just rfc822.Message?  That's in Python 2.2.

> Twisted depends on 2.2. If you want code to be added to Twisted, it'll
> have to require 2.2 only. We also ned backwards compatability with
> existing code. Most of the problems you mentioned can be solved with
> only a little work using the existing codebase.
>
> Probably what you should do is write a series of patches and send them
> to me. They'll have to be backwards compatible, have tests and work on
> 2.2 in order to be accepted.

I used the wrong term.  I said "replacement" when I should have
said "in addition to".  That is, code which would eventually become
the standard code for Twisted once it requires 2.3 (after all, 2.3
isn't out yet!)

My major complaint, by the way, is not that there are small problems
with the code.  It's that Twisted duplicates functionality from standard
Python, when the Python code is just as usable for that situation and
has fewer problems.  And going the other way, the Python 2.3 
implementation
doesn't have the "\r\n" workaround Twisted has for handling IE problems.
If those could be combined, then there are more people supporting the 
same
codebase, so hopefully fewer bugs, and easier to share experience 
between
the two.

A downside is the dependency on Python releases to fix patches, but
any bugs at this point will be distributed at the patch level, and
there's always the possibility of just including the patched code
with Twisted until the next Python update.

"Backwards compatible" is somewhat of an issue.  I don't know which
methods are published and which are unpublished.  Is it expected that
people will (or do) derive from twisted.protocols.http.HTTPChannel ?
If so, then can I change the behaviour or simply eliminate the
headerReceived method?  (I would rather accumulate all headers then
parse them into a Message in one go.)  What about the other methods?

I can make the existing regressions all pass, but a review of the
regressions show that it doesn't test everything that could be tested,
so I need to either ask questions first (as I'm doing) or be extreme
about it and say that if it passes the tests then it must be fine ;)

					Andrew
					dalke at dalkescientific.com




From gary at zope.com  Sun Jun  1 20:05:02 2003
From: gary at zope.com (Gary Poster)
Date: Sun, 01 Jun 2003 20:05:02 -0400
Subject: [Twisted-Python] Deferred usage clarification
Message-ID: <3EDA94AE.1090303@zope.com>

Hi.  A newbie question: I'd like a bit of clarification in Deferred 
usage.  More specifically, it would be nice if one of the examples on 
the Twisted Deferred howto page used a real blocking call rather than a 
reactor.callLater.

So, to see if I'm on the right track, I'd like to modify the third code 
example to use a sleep, to make it better parallel the first code 
snippet on the howto page.

First, here it is from the page, without modification:

-----8<-----8<-----8<-----
from twisted.internet import reactor, defer

class Getter:
     def getData(self, x):
         # this won't block
         d = defer.Deferred()
         reactor.callLater(2, d.callback, x * 3)
         return d

def printData(d):
     print d

g = Getter()
d = g.getData(3)
d.addCallback(printData)

reactor.callLater(4, reactor.stop); reactor.run()
-----8<-----8<-----8<-----

Here's my modification.  Is this the right usage?

-----8<-----8<-----8<-----
from twisted.internet import reactor, defer
import time

class Getter:
     def getData(self, x):
         # this won't block
         d = defer.Deferred()
         reactor.callLater(0, self.doWork, x, d)
         return d

     def doWork(self, x, deferred):
         # churn, churn, churn
         time.sleep(2)
         deferred.callback(x * 3)

def printData(d):
     print d

g = Getter()
d = g.getData(3)
d.addCallback(printData)

reactor.callLater(4, reactor.stop); reactor.run()
-----8<-----8<-----8<-----

Thanks!

Gary




From andrew-twisted at puzzling.org  Sun Jun  1 20:31:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 2 Jun 2003 10:31:39 +1000
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <3EDA94AE.1090303@zope.com>
References: <3EDA94AE.1090303@zope.com>
Message-ID: <20030602003139.GA3067@frobozz>

On Sun, Jun 01, 2003 at 08:05:02PM -0400, Gary Poster wrote:
> Hi.  A newbie question: I'd like a bit of clarification in Deferred 
> usage.  More specifically, it would be nice if one of the examples on 
> the Twisted Deferred howto page used a real blocking call rather than a 
> reactor.callLater.
> 
> So, to see if I'm on the right track, I'd like to modify the third code 
> example to use a sleep, to make it better parallel the first code 
> snippet on the howto page.
> 
> First, here it is from the page, without modification:
> 
[...]
> 
> Here's my modification.  Is this the right usage?

No -- see below.

> -----8<-----8<-----8<-----
[...]
> class Getter:
>     def getData(self, x):
>         # this won't block
>         d = defer.Deferred()
>         reactor.callLater(0, self.doWork, x, d)
>         return d
> 
>     def doWork(self, x, deferred):
>         # churn, churn, churn
>         time.sleep(2)
>         deferred.callback(x * 3)
[...]
> -----8<-----8<-----8<-----

You're misunderstanding the purpose of Deferreds.  They don't do any magic
to make blocking calls happen asynchronously.

A Deferred is simply a result that hasn't arrived yet.  When the result of
some function can take some arbitrary amount of time to happen, it will
return a Deferred, rather than holding up the execution of the rest of the
program.  A Deferred is a promise that a result (or failure) will arrive
eventually, and provides a convenient abstraction to attach callbacks to
that is far more usuable than riddling your code with functions that take a
method to callback when they're done.

How the result arrives later is entirely up to the code that returns the
Deferred.  It might simply send an HTTP request, and wait for the result to
arrive off the network; it might query a database; it might split the work
up into small chunks that it schedules using callLater; or it might just use
deferToThread.  All that matters is that at some point "d.callback(result)"
or "d.errback(failure)" is called (or you could call d.setTimeout(...) if
you aren't sure you want to wait indefinitely).

Does this make sense?

Regards,

-Andrew.




From gary at zope.com  Sun Jun  1 21:27:09 2003
From: gary at zope.com (Gary Poster)
Date: Sun, 01 Jun 2003 21:27:09 -0400
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <20030602003139.GA3067@frobozz>
References: <3EDA94AE.1090303@zope.com> <20030602003139.GA3067@frobozz>
Message-ID: <3EDAA7ED.7030600@zope.com>

Thanks for the quick reply!

Andrew Bennetts wrote:
> You're misunderstanding the purpose of Deferreds.  They don't do any magic
> to make blocking calls happen asynchronously.
...snip...
> 
> Does this make sense?

Yes.  Looks like deferToThread would be the simplest way to do what I 
want.  I wonder if you (or someone) would answer a similarly newbie-like 
follow up, though.

I see the pattern
   reactor.callLater(0, function)
a lot--this doesn't have thread semantics, though, so what is 
accomplished by specifying the 0 second delay?

Thanks again

Gary




From andrew-twisted at puzzling.org  Sun Jun  1 21:52:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 2 Jun 2003 11:52:06 +1000
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <3EDAA7ED.7030600@zope.com>
References: <3EDA94AE.1090303@zope.com> <20030602003139.GA3067@frobozz> <3EDAA7ED.7030600@zope.com>
Message-ID: <20030602015206.GB3067@frobozz>

On Sun, Jun 01, 2003 at 09:27:09PM -0400, Gary Poster wrote:
> Andrew Bennetts wrote:
> >You're misunderstanding the purpose of Deferreds.  They don't do any magic
> >to make blocking calls happen asynchronously.
> ...snip...
> >
> >Does this make sense?
> 
> Yes.  Looks like deferToThread would be the simplest way to do what I 
> want.  I wonder if you (or someone) would answer a similarly newbie-like 
> follow up, though.
> 
> I see the pattern
>   reactor.callLater(0, function)
> a lot--this doesn't have thread semantics, though, so what is 
> accomplished by specifying the 0 second delay?

This one's easy ;)

That idiom just runs that function in the next iteration of the event loop
-- so more events (more network traffic, or other delayed calls, gui events,
or whatever) can be processed immediately if necessary.

A single reactor.callLater(0, ...) won't make a big improvement to the
responsiveness of the program -- delaying a 3-second blocking call still
blocks the program for 3 seconds.  But if you can break up a long-running
calculation into smaller pieces, then it can help alot.  Imagine you just
suddenly received 20000 rows of data from a database; processing that all in
one hit will probably take a noticeable amount of time, even if that
processing is trivial.  But if you break up the processing into chunks of,
say, 100 rows at a time, your app will be much more responsive to external
events while still getting the work done.

Another use for postponing something to the next iteration of the event-loop
is simply to ensure that the function doesn't run until something else has
happened in *this* iteration.  Using it like this is fairly subtle; you'd be
well-advised to comment thoroughly what you're doing if you do this.

-Andrew.




From itamar at itamarst.org  Sun Jun  1 23:10:40 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 23:10:40 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601184023.2db5f2c3.itamar@itamarst.org>
	<6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601231040.27222818.itamar@itamarst.org>

On Sun, 1 Jun 2003 17:54:45 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> I can send a patch, but I don't know the dependencies of clients
> on having a version string over a 2-ple, which is what I would
> prefer.

All backwards compatability has to be in the Request class interfaces -
whatever stuff a end user might be using.

> What about using just rfc822.Message?  That's in Python 2.2.

Not good enough - MIME stuff should be stored on disk if its large (i.e.
file uploads). I did it using cgi.FieldStorage, and it was backwards
compatible too, but it broke twisted.web.distrib, which *sucked* :(
distrib needs to be fixed so it gets a stream, and then we can mess with
Request as much as we want.

> I used the wrong term.  I said "replacement" when I should have
> said "in addition to".  That is, code which would eventually become
> the standard code for Twisted once it requires 2.3 (after all, 2.3
> isn't out yet!)

I'd have to see the code before deciding.

> My major complaint, by the way, is not that there are small problems
> with the code.  It's that Twisted duplicates functionality from
> standard Python, when the Python code is just as usable for that
> situation and has fewer problems.  And going the other way, the Python
> 2.3 implementation
> doesn't have the "\r\n" workaround Twisted has for handling IE
> problems. If those could be combined, then there are more people
> supporting the same
> codebase, so hopefully fewer bugs, and easier to share experience 
> between
> the two.

A lot of this is for historical reasons - Twisted only depending on
1.5.2, and then 2.1. 2.2 support is really new.

> A downside is the dependency on Python releases to fix patches, but
> any bugs at this point will be distributed at the patch level, and
> there's always the possibility of just including the patched code
> with Twisted until the next Python update.

Because we can release Twisted so much faster, we usually prefer to just
patch Twisted.

> "Backwards compatible" is somewhat of an issue.  I don't know which
> methods are published and which are unpublished.  Is it expected that
> people will (or do) derive from twisted.protocols.http.HTTPChannel ?
> If so, then can I change the behaviour or simply eliminate the
> headerReceived method?  (I would rather accumulate all headers then
> parse them into a Message in one go.)  What about the other methods?

Request methods and attributes that users are likely to use is what
counts.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sun Jun  1 23:15:46 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 23:15:46 -0400
Subject: [Twisted-Python] twisted.internet.stdio: wrong initialisation
In-Reply-To: <20030601155948.GC2149@mercury.local.net>
References: <20030601155948.GC2149@mercury.local.net>
Message-ID: <20030601231546.24528bad.itamar@itamarst.org>

On Sun, 1 Jun 2003 17:59:48 +0200
"W.J." <miathan at goliath.darktech.org> wrote:

> In twisted.internet.stdio, makeConnection is called on the protocol 
> before the writer is set. This is Not Good(TM) because the 
> makeConnection might write a welcome banner in some protocols
> (twisted.protcols.telnet, for example).

Done, thanks for the bug report.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Sun Jun  1 23:46:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 1 Jun 2003 23:46:54 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Sun, Jun 01, 2003 at 19:54:45 -0400
References: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602034654.GA543@toshi.anaprd01.md.comcast.net>

On 2003.06.01 19:54, Andrew Dalke wrote:
> Itamar:
> > I don't really care about this, working with real life code is more
> > important. But if you send me a patch I'll accept it.
> 
> I can send a patch, but I don't know the dependencies of clients
> on having a version string over a 2-ple, which is what I would
> prefer.
> 
> What about something like

[snip Version class]

This is over-doing it; just store the tuple-ified version in a different
attribute.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Mon Jun  2 00:22:36 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 22:22:36 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601231040.27222818.itamar@itamarst.org>
Message-ID: <D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar:
> All backwards compatability has to be in the Request class interfaces -
> whatever stuff a end user might be using.

Okay, much easier.  I wasn't sure if the HTTPChannel was meant to
be derivable.

>> What about using just rfc822.Message?  That's in Python 2.2.
>
> Not good enough - MIME stuff should be stored on disk if its large 
> (i.e.
> file uploads). I did it using cgi.FieldStorage, and it was backwards
> compatible too, but it broke twisted.web.distrib, which *sucked* :(
> distrib needs to be fixed so it gets a stream, and then we can mess 
> with
> Request as much as we want.

The Message is used only for parsing the headers, so file uploads
aren't relevant.  As it is now, the headers are processed, line by line.
Partial lines are stored in-memory as "__header", when a full line,
including continuations, is read, it's passed to an in-memory dict,
which is eventually passed to the Request.  There's no disk involvement
at all, and this is all that I plan to change.

My replacement would write those header lines into a cStringIO.StringIO
then use Message to get the headers out of that StringIO.

So I don't know what you mean about storing MIME stuff on disk.

Now, if there are a large number of headers, there might be a problem,
but then again, there's a problem with the current implementation.

BTW, is there a way to limit the amount of data which can be passed
in a header?  I don't like the potential DoS attack possible either
through dumping 1GB of header to the server, or by the hash collision
attack mentioned recently on c.l.py.  One solution is to do as Apache
does and limit the header to N bytes total.

> A lot of this is for historical reasons - Twisted only depending on
> 1.5.2, and then 2.1. 2.2 support is really new.

Oh, I understand that.  Is there a reason to keep the historical
differences?  I think there should be a migration path to make
Twisted use more of existing Python libraries.

> Request methods and attributes that users are likely to use is what
> counts.

Understood.  I don't think that interface code will change all
that much, except that I would like a 2-ple version ... ahh! I
can just make a "version" and a "version_tuple", rather like
what Python does.  Those are just attributes, after all.

					Andrew




From dalke at dalkescientific.com  Mon Jun  2 00:23:22 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 22:23:22 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602034654.GA543@toshi.anaprd01.md.comcast.net>
Message-ID: <F22D4929-94B1-11D7-B9B9-000393C92466@dalkescientific.com>

Christopher Armstrong:
> This is over-doing it; just store the tuple-ified version in a 
> different
> attribute.

Yup!

					andrew




From itamar at itamarst.org  Mon Jun  2 00:55:01 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 00:55:01 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601231040.27222818.itamar@itamarst.org>
	<D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602005501.7b8da5d9.itamar@itamarst.org>

On Sun, 1 Jun 2003 22:22:36 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> The Message is used only for parsing the headers, so file uploads
> aren't relevant.  As it is now, the headers are processed, line by
> line. Partial lines are stored in-memory as "__header", when a full
> line, including continuations, is read, it's passed to an in-memory
> dict, which is eventually passed to the Request.  There's no disk
> involvement at all, and this is all that I plan to change.

I'm pretty sure cgi.FieldStorage parses *everything*, headers, file
uploads, request args, etc, and so we may as well use that. You can see
my patch somewhere around the 0.99.7 release, IIRC, in CVS (check out
the viewcvs web interface to find it).

> BTW, is there a way to limit the amount of data which can be passed
> in a header?  I don't like the potential DoS attack possible either
> through dumping 1GB of header to the server, or by the hash collision
> attack mentioned recently on c.l.py.  One solution is to do as Apache
> does and limit the header to N bytes total.

Lines length is limited by LineReceiver class.

> Oh, I understand that.  Is there a reason to keep the historical
> differences?  I think there should be a migration path to make
> Twisted use more of existing Python libraries.

A migration path isn't necessary. If you can make Twisted be shorter,
less buggy by using Python standard lib, feel free. Just as long as its
backwards compatible.

> Understood.  I don't think that interface code will change all
> that much, except that I would like a 2-ple version ... ahh! I
> can just make a "version" and a "version_tuple", rather like
> what Python does.  Those are just attributes, after all.

Right, that's the general approach.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From arashi1 at pd.jaring.my  Mon Jun  2 02:54:02 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Mon, 2 Jun 2003 14:54:02 +0800
Subject: [Twisted-Python] Woven and WML
In-Reply-To: <D1706E21-932B-11D7-A64D-000A95864FC4@twistedmatrix.com>
References: <D1706E21-932B-11D7-A64D-000A95864FC4@twistedmatrix.com>
Message-ID: <200306021454.03046.arashi1@pd.jaring.my>

> The woven-specific attributes should really all be removed -- any that
> are left in are just there because I have been lazy about it, since as
> you observe modern browsers don't care. I'll try to go through and make
> sure woven outputs clean XHTML by the next release... I have been
> meaning to do it for a while anyway.
>

Could we set this removal of woven 'html' attributes (on final output html) on 
a flag or option? I have found that the attributes can be helpful in tracking 
down some silly bugs in my code (like not setting controller to the right 
object and so on). 



From dalke at dalkescientific.com  Mon Jun  2 02:55:29 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 00:55:29 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602005501.7b8da5d9.itamar@itamarst.org>
Message-ID: <328553F2-94C7-11D7-B9B9-000393C92466@dalkescientific.com>

I've been reviewing the http.py code.  It seems there's a bug in the
following, when there is an IE connect.

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
             if not self.persistent:
                 self.dataReceived = self.lineReceived = lambda *args: 
None
                 return

             # create a new Request object
             request = self.requestFactory(self, len(self.requests))
             self.requests.append(request)

             # IE sends an extraneous empty line (\r\n) after a POST 
request;
             # eat up such a line, but only ONCE
             if not line and self.__first_line == 1:
                 self.__first_line = 2
                 return


As written, IE with the bug will create two Request objects.

Here's a bugfix, which swaps the last two sections

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
             if not self.persistent:
                 self.dataReceived = self.lineReceived = lambda *args: 
None
                 return

             # IE sends an extraneous empty line (\r\n) after a POST 
request;
             # eat up such a line, but only ONCE
             if not line and self.__first_line == 1:
                 self.__first_line = 2
                 return

             # create a new Request object
             request = self.requestFactory(self, len(self.requests))
             self.requests.append(request)


					Andrew




From dalke at dalkescientific.com  Mon Jun  2 02:56:38 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 00:56:38 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602005501.7b8da5d9.itamar@itamarst.org>
Message-ID: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>

Oops!  Sorry about that ... bug report should have gone to the
bug tracker.

					Andrew




From radix at twistedmatrix.com  Mon Jun  2 03:03:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 2 Jun 2003 03:03:37 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Mon, Jun 02, 2003 at 02:56:38 -0400
References: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602070337.GC543@toshi.anaprd01.md.comcast.net>

On 2003.06.02 02:56, Andrew Dalke wrote:
> Oops!  Sorry about that ... bug report should have gone to the
> bug tracker.

Sending to the list is fine - generally we recommend posting to the bug
tracker after you've sent to the list and have been ignored for a few
days :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Mon Jun  2 05:13:48 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 03:13:48 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601231040.27222818.itamar@itamarst.org>
Message-ID: <84CEA432-94DA-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring
> I'd have to see the code before deciding.

I've attached a sketch, as it were, of how the new code would look.
I've not tested it at all.  The goal is to have something more concrete
to talk about.  The major change is in the HTTPChannel, with a few
changes to how the Request constructor is called & works.


I've also reviewed the code and made comments on a few sections which
might also be cleared up.  These are marked with "APD".  (Some require
python 2.3 modules, others don't.)

Oh, and the requestDone method in http.py currently has

   if request != self.requests[0]: raise TypeError

That "!=" should be an "is not"

					Andrew
					dalke at dalkescientific.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: http2.py
Type: application/octet-stream
Size: 19186 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030602/765f7f76/attachment.obj 

From exarkun at intarweb.us  Mon Jun  2 06:28:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 2 Jun 2003 06:28:05 -0400
Subject: [Twisted-Python] Conch connection caching behavior over (laptop) suspend actions
Message-ID: <20030602102805.GA3463@meson.dyndns.org>

  I use conch connection sharing pretty extensively, and I love it.  As I've
been working on a laptop a lot lately, I've noticed something a little
undesirable though.  When I suspend long enough to disrupt my network
connection, then resume, the conch process seems not to be aware that it no
longer has a network connection.  The ~/.conch-* unix socket remains, and
any attempts to connect with conch to the host hang indefinitely.  Killing
the owner of the unix socket, or simply deleting the unix socket resolves
the issue.

  Could conch be made to act a little better in this situation?

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030602/d229a48c/attachment.pgp 

From mkimpenhaus at plus.de  Mon Jun  2 10:26:13 2003
From: mkimpenhaus at plus.de (mkimpenhaus at plus.de)
Date: Mon, 2 Jun 2003 16:26:13 +0200
Subject: [Twisted-Python] Is twisted supposed to run on AIX/HPUX?
Message-ID: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>

Hi @all,

is it possible to run twisted on an AIX/HPUX System?

Best regards,

Marcus Kimpenhaus 

Plus Warenhandelsgesellschaft mbH 
Zentrale Anwendungs- und Entwicklungssysteme 
Wissollstr. 5 - 43 
45478   M?lheim an der Ruhr 

Telefon:   +49 (208) 583 2194 
Telefax:   +49 (208) 583 xxxx 
 
mailto:mkimpenhaus at plus.de
http://www.plus.de 
PS: Kennen Sie schon unseren Plus Online Shop unter http://www.plus.de ?
Hier k?nnen Sie in Ruhe in unseren pluspunkt Aktions-Angeboten st?bern, 
diese schon vor
der Verf?gbarkeit in den Filialen online bestellen und sich bequem nach 
Hause liefern lassen!
Zus?tzlich finden Sie hier attraktive Online Specials zu "Kleinen Preisen" 
sowie unseren
Digitalen Fotoservice - hier werden Ihre Bilder schon ab 0,15 Euro 
entwickelt.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030602/bbe2ffb0/attachment.htm 

From m at moshez.org  Mon Jun  2 11:03:41 2003
From: m at moshez.org (Moshe Zadka)
Date: 2 Jun 2003 15:03:41 -0000
Subject: [Twisted-Python] Is twisted supposed to run on AIX/HPUX?
In-Reply-To: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>
References: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>
Message-ID: <20030602150341.16294.qmail@green.zadka.com>

There's no need for HTML mail, nor for 5-line signatures in German
(this mailing list is in English)

On Mon, 2 Jun 2003, mkimpenhaus at plus.de wrote:

> is it possible to run twisted on an AIX/HPUX System?

Possibly. Did you try it? None of the core Twisted developers
(AFAIK) has access to such systems.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From lkurisaki at ambiron.net  Mon Jun  2 13:03:53 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 12:03:53 -0500
Subject: [Twisted-Python] Problem with ReverseProxy and POST requests
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>

I'm trying to use the Reverse Proxy, and found that the example
(proxy.py) works fine for GET requests, but not for POSTs. The problem
was that the body of the POST was not being forwarded, so the request
would hang while the destination server waited for the rest of the body.

I fixed it with the following patch to the ReverseProxyResource method
in the module twisted.web.proxy.

					Lance


Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.11
diff -c -r1.11 proxy.py
*** twisted/web/proxy.py        8 Jan 2003 14:18:56 -0000       1.11
--- twisted/web/proxy.py        2 Jun 2003 16:54:36 -0000
***************
*** 178,183 ****
--- 178,184 ----

      def render(self, request):
          request.received_headers['host'] = self.host
+         request.content.seek(0, 0)
          clientFactory = ProxyClientFactory(request.method, self.path,
                                       request.clientproto,
                                       request.getAllHeaders(),



From itamar at itamarst.org  Mon Jun  2 14:12:00 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 14:12:00 -0400
Subject: [Twisted-Python] Problem with ReverseProxy and POST requests
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>
Message-ID: <20030602141200.55b4cde0.itamar@itamarst.org>

On Mon, 2 Jun 2003 12:03:53 -0500
"Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> I fixed it with the following patch to the ReverseProxyResource method
> in the module twisted.web.proxy.

Done. Thanks!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Mon Jun  2 17:33:37 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 15:33:37 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <200306010157.06429.uwe@oss4u.com>
Message-ID: <DED10FC3-9541-11D7-B9B9-000393C92466@dalkescientific.com>

Uwe C. Schroeder:
> This is also the problem with the twisted wx support code. It works 
> nicely as
> long as you don't use a modal window. Then the code simply stops 
> working.
> That's why I posted a recipe on activestate's python cookbook, which 
> uses a
> timer to run the twisted reactor without actually running the reactor 
> loop.
> This is the only way I could get it working without using threads and 
> as I
> see in your Python2 file you figured that one out.

Okay, I used your recipe and got it to work.  Thanks!

I did have a problem with it.  wxApp under MS Windows starts a new 
window
to show stdout and stderr.  That window wasn't closed when the app 
finished,
which caused the error

  Debug: e:\projects\wx\src\msw\app.cpp(466): 'UnregisterClass(no redraw 
canvas)'
  failed with error 0x00000584 (class still has open windows.).

Deriving from wxPythonSimpleApp fixed it, and it turns out the real fix
is to set "redirect" to 0 in the wxApp constructor.  This prevents the
output window from opening.

I added this comment to the recipe as well.

					Andrew
					dalke at dalkescientific.com




From lkurisaki at ambiron.net  Mon Jun  2 19:24:57 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 18:24:57 -0500
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>

The ReverseProxy doesn't send an X-Forwarded-For header field with the
real client's IP address. This convention is used by Squid, Pound, and
other proxies to communicate the real client's IP address to the
destination server.

I added the header with the following patch.

					Lance

Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.12
diff -c -r1.12 proxy.py
*** twisted/web/proxy.py        2 Jun 2003 18:14:59 -0000       1.12
--- twisted/web/proxy.py        2 Jun 2003 23:14:59 -0000
***************
*** 178,183 ****
--- 178,184 ----

      def render(self, request):
          request.received_headers['host'] = self.host
+       request.received_headers["x-forwarded-for"] = request.client[1]
          request.content.seek(0, 0)
          clientFactory = ProxyClientFactory(request.method, self.path,
                                       request.clientproto,



From itamar at itamarst.org  Mon Jun  2 21:53:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 21:53:20 -0400
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
 header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
Message-ID: <20030602215320.268eff5f.itamar@itamarst.org>

Done. Thanks!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From lkurisaki at ambiron.net  Mon Jun  2 23:21:29 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 22:21:29 -0500
Subject: [Twisted-Python] ReverseProxy does not log requests
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>

The ReverseProxy does not log its requests.

The following patch adds request logging and silences the "Starting
factory..." and "Stopping factory..." log messages.

I'm not sure if the "proper" place to do the logging is in the render()
method of ReverseProxyResource, but it seems to work... :-)

					Lance


Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.13
diff -c -r1.13 proxy.py
*** twisted/web/proxy.py        3 Jun 2003 01:56:22 -0000       1.13
--- twisted/web/proxy.py        3 Jun 2003 03:11:39 -0000
***************
*** 177,182 ****
--- 177,184 ----
          return ReverseProxyResource(self.host, self.port,
self.path+'/'+path)

      def render(self, request):
+       request.channel.factory.log(request)    # log request...
+
          request.received_headers['host'] = self.host
          request.received_headers["x-forwarded-for"] =
request.client[1]
          request.content.seek(0, 0)
***************
*** 185,189 ****
--- 187,194 ----
                                       request.getAllHeaders(),
                                       request.content.read(),
                                       request)
+
+       clientFactory.noisy = 0
+
          reactor.connectTCP(self.host, self.port, clientFactory)
          return server.NOT_DONE_YET



From m at moshez.org  Tue Jun  3 00:48:02 2003
From: m at moshez.org (Moshe Zadka)
Date: 3 Jun 2003 04:48:02 -0000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
 header
In-Reply-To: <20030602215320.268eff5f.itamar@itamarst.org>
References: <20030602215320.268eff5f.itamar@itamarst.org>, <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
Message-ID: <20030603044802.13408.qmail@green.zadka.com>

On Mon, 2 Jun 2003, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> Done. Thanks!

I have reverted this patch, for the following reasons:

1. It removes functionality: there is no way for subclasses to avoid sending
   this header, while it is easy, the way the code is now, for a subclass
   to add this header if it so wishes.

2. It divulges private information (the client's IP) to possibly hostile
   parties.

If you really want this, just do it in a custom subclass.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From dalke at dalkescientific.com  Tue Jun  3 01:05:27 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 23:05:27 -0600
Subject: [Twisted-Python] xmlrpc doesn't catch XML parsing exceptions
Message-ID: <FDA0F9FA-9580-11D7-B9B9-000393C92466@dalkescientific.com>

I used the Twisted code to connect to a URI which wasn't providing 
XML-RPC
services but is providing HTML.  The XML-RPC code tried to parse the
HTML response, and failed.  It reported the failure correctly, but also
spewed a traceback to stdout.  Here's what stdout looks like


Traceback (most recent call last):
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 473, in
  doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 64, 
in callWi
thLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 51, 
in callWi
thContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\context.py", line 
32, in ca
llWithContext
     return func(*args,**kw)
--- <exception caught here> ---
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 482, in
  _doReadOrWrite
     why = getattr(selectable, method)()
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
219, in doR
ead
     return self.protocol.dataReceived(data)
   File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line 
179, in
dataReceived
     return self.rawDataReceived(data)
   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line 
341, in r
awDataReceived
     self.handleResponseEnd()
   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line 
323, in h
andleResponseEnd
     self.handleResponse(b)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 174, 
in handl
eResponse
     self.factory.parseResponse(contents)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 199, 
in parse
Response
     response = xmlrpclib.loads(contents)
   File "E:\Python22\lib\xmlrpclib.py", line 804, in loads
     p.feed(data)
   File "E:\Python22\lib\xmlrpclib.py", line 390, in feed
     self._parser.Parse(data, 0)
xml.parsers.expat.ExpatError: mismatched tag: line 10, column

The reason is twisted.web.xmlrpc, which has

     def parseResponse(self, contents):
         if not self.deferred:
             return
         try:
             response = xmlrpclib.loads(contents)
         except xmlrpclib.Fault, error:
             self.deferred.errback(error)
             self.deferred = None
         else:
             self.deferred.callback(response[0][0])
             self.deferred = None

There's nothing which handles an XML parsing error.

I don't know who to blame here.  I would like a

         except "XML parsing error", error:

here as well, but there's no way to spell that.  The xmlrpclib code 
chooses
the fastest parser available, and the different parsers could throw 
different
exceptions.  Eg, the Expat parser throws an ExpatError, which is derived
directly from Exception, and shares no other base class with

The best I can think of now is to catch anything which isn't a "normal"
Python exception, that is

         except (StandardError, SystemExit, StopIteration):
             raise
         except (xmlrpclib.Fault, Exception), error:
             self.deferred.errback(error)

(could also use a bare except, but I think that's overkill for this 
case.)
Even that's not perfect.  xmllib.Error is derived from RuntimeError(!).
OTOH, that module is deprecated ....

Oh! Since Fault is derived from exception, could just catch Exception
instead of the 2-ple I have there.

Let me point out that Twisted did a good job of catching the error at a 
higher
level and correctly sending it to my handler, so even if this had 
occurred in
production code the app would have kept working as expected.  This is 
good.

					Andrew
					dalke at dalkescientific.com




From lkurisaki at ambiron.net  Tue Jun  3 01:08:33 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Tue, 3 Jun 2003 00:08:33 -0500
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>

I understand your reasons and agree. My only reservation is that if
someone wants to send the header, it's not immediately obvious (wasn't
to me, anyway) what the proper line of code is and where it should go.
It took me a while to figure it out.

Perhaps if we make it dependent on an instance attribute, such as
"sendXForwardedFor", which is by default set to 0?

I have no problem if you decide to leave it out entirely, though...

					Lance

-----Original Message-----
From: Moshe Zadka [mailto:m at moshez.org] 
Sent: Monday, June 02, 2003 9:48 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
header


On Mon, 2 Jun 2003, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> Done. Thanks!

I have reverted this patch, for the following reasons:

1. It removes functionality: there is no way for subclasses to avoid
sending
   this header, while it is easy, the way the code is now, for a
subclass
   to add this header if it so wishes.

2. It divulges private information (the client's IP) to possibly hostile
   parties.

If you really want this, just do it in a custom subclass.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
Agile Programming Language -- http://www.python.org/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From andrew-twisted at puzzling.org  Tue Jun  3 01:18:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 3 Jun 2003 15:18:19 +1000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
Message-ID: <20030603051819.GB11968@frobozz>

On Tue, Jun 03, 2003 at 12:08:33AM -0500, Lance Kurisaki wrote:
> I understand your reasons and agree. My only reservation is that if
> someone wants to send the header, it's not immediately obvious (wasn't
> to me, anyway) what the proper line of code is and where it should go.
> It took me a while to figure it out.
> 
> Perhaps if we make it dependent on an instance attribute, such as
> "sendXForwardedFor", which is by default set to 0?

A simpler solution may be to simply stick a note in the docstring saying "To
be a polite proxy that announces what address the request originates from,
use this line: ...".  This might be more verbose than simply adding the
flag, though.

-Andrew.




From m at moshez.org  Tue Jun  3 01:29:41 2003
From: m at moshez.org (Moshe Zadka)
Date: 3 Jun 2003 05:29:41 -0000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
Message-ID: <20030603052941.14205.qmail@green.zadka.com>

On Tue, 3 Jun 2003, "Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> I understand your reasons and agree. My only reservation is that if
> someone wants to send the header, it's not immediately obvious (wasn't
> to me, anyway) what the proper line of code is and where it should go.
> It took me a while to figure it out.

Indeed, I wouldn't say no to a "Reverse Proxying HOWTO" if you wrote
one, which seems to be the proper solution to this kind of problems.
Nor to an example .rpy. Send either, if you're feeling like it, to
the list, and I'll make sure they get into doc/

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From dalke at dalkescientific.com  Tue Jun  3 01:51:01 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 23:51:01 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <DED10FC3-9541-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <5B75B0FC-9587-11D7-B9B9-000393C92466@dalkescientific.com>

I've attached some example code which shows how to use
a modal wxPython dialog and Twisted to produce a responsive
GUI which uses XML-RPC to query a remote XML-RPC service to
get a US state name given it's position in a sorted list.

I've also contributed this as an ActiveState recipe.

					Andrew
					dalke at dalkescientific.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wx_modal_twisted.py
Type: application/octet-stream
Size: 6316 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030602/bee82f63/attachment.obj 

From rudy.schockaert at pandora.be  Tue Jun  3 04:41:52 2003
From: rudy.schockaert at pandora.be (Rudy Schockaert)
Date: Tue, 03 Jun 2003 10:41:52 +0200
Subject: [Twisted-Python] ReverseProxy performance??
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>
Message-ID: <3EDC5F50.8010700@pandora.be>

Hi,

The very proof that I'm a total Twisted newby is the fact I didn't know 
of a ReverseProxy product in it. So, please bear with me if I ask for 
the obvious. I'm still trying to find my way around the huge amount of 
information.

Does anyone have figures about the performance of ReverseProxy?
How many connections can it handle simultaneously.
Does it support SSL?
Can it terminate an SSL-tunnel and forward the request unencrypted?
How does it compare to other reverse-proxies with respect to performance.
Is there a performance difference when running it on Linux or Windows 
(same hardware of course).

If I can come up with real data I'd maybe able to convince my colleagues 
at work to start using it.

Thanks in advance,

Rudy




From 2002 at weholt.org  Tue Jun  3 06:46:23 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 3 Jun 2003 12:46:23 +0200
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
Message-ID: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>

Q1 : I need to get started using Twisted building a simple IRC-bot. It
should listen to everything being said on a given channel ( or channels )
and perform certain tasks when trigger-words are found, printing the result
in the channel it was called from. Does anybody have any code I can look at.
Tried the code in the test-folder in the source-distr, but that didn't make
much sense to me, so I was hoping somebody had a piece of code more in the
line of what I described above.

Q2: What about ICQ support in Twisted? Does Twisted.IM support current
implementations of ICQ??

Thanks in advance,
Thomas Weholt




From j.jakl at era.cz  Tue Jun  3 07:07:27 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Tue, 3 Jun 2003 13:07:27 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
Message-ID: <000401c329c0$51e38230$2d0214ac@jja>

Hello all,
I have the following problem with UDP communication in twisted:

I tried an example from howto doc. chapter 4.4.2 and it produce
EWOULDBLOCK error after first received packet.
Question is how to handle EWOULDBLOCK exception, because
it isn't handled EWOULDBLOCK in udp.port.doRead().

The second question is how to set REUSEADDR on UDP socket in twisted.
I need it because we have several processes communicating on the same UDP
port (not all writen in python).

Thanks in advance,
Jaroslav Jakl






From itamar at itamarst.org  Tue Jun  3 10:11:59 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2003 10:11:59 -0400
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <000401c329c0$51e38230$2d0214ac@jja>
References: <000401c329c0$51e38230$2d0214ac@jja>
Message-ID: <20030603101159.5c232c37.itamar@itamarst.org>

On Tue, 3 Jun 2003 13:07:27 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> I tried an example from howto doc. chapter 4.4.2 and it produce
> EWOULDBLOCK error after first received packet.
> Question is how to handle EWOULDBLOCK exception, because
> it isn't handled EWOULDBLOCK in udp.port.doRead().

I'm going to change it so EWOULDBLOCK gets turned into a callback on the
protocol.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Tue Jun  3 10:12:35 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2003 10:12:35 -0400
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
In-Reply-To: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
References: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
Message-ID: <20030603101235.34c58740.itamar@itamarst.org>

On Tue, 3 Jun 2003 12:46:23 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Q1 : I need to get started using Twisted building a simple IRC-bot. It
> should listen to everything being said on a given channel ( or
> channels ) and perform certain tasks when trigger-words are found,
> printing the result in the channel it was called from. Does anybody
> have any code I can look at.

doc/examples/ircLogBot.py?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From developer at csrules.dyndns.org  Tue Jun  3 11:33:52 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 3 Jun 2003 10:33:52 -0500 (CDT)
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
In-Reply-To: <20030603101235.34c58740.itamar@itamarst.org>
References: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
        <20030603101235.34c58740.itamar@itamarst.org>
Message-ID: <15324.209.5.247.105.1054654432.squirrel@home.vandorp.ca>

For a bigger example try pynfo.

sf.net/projects/pynfo

-Darryl

> On Tue, 3 Jun 2003 12:46:23 +0200
> "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
>
>> Q1 : I need to get started using Twisted building a simple IRC-bot. It
>> should listen to everything being said on a given channel ( or
>> channels ) and perform certain tasks when trigger-words are found,
>> printing the result in the channel it was called from. Does anybody
>> have any code I can look at.
>
> doc/examples/ircLogBot.py?
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From dalke at dalkescientific.com  Tue Jun  3 21:43:57 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 3 Jun 2003 19:43:57 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <5B75B0FC-9587-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <020853C9-962E-11D7-B9B9-000393C92466@dalkescientific.com>

Me:
> I've attached some example code which shows how to use
> a modal wxPython dialog and Twisted to produce a responsive
> GUI which uses XML-RPC to query a remote XML-RPC service to
> get a US state name given it's position in a sorted list.
>
> I've also contributed this as an ActiveState recipe.

However, it fails for some cases of a modal in a modal.

I have a set of error cases in the code, which looks like this (except
the last one, which I added today).

         if TEST_ERRORS:
             i = self.i
             if i == 3:
                 proxy = Proxy("http://illegal-host_name/")
             elif i == 6:
                 proxy = Proxy("http://beatty.userland.com/")
             elif i == 8:
                 proxy = 
Proxy("http://beatty.userland.com/testing_xmlrpc_error_case")
             elif i == 9:
                 proxy = Proxy("http://beatty.userland.com:9876/")

The last one cases an error during making the connection, and so I get
a "unable to connect to remote host" message.  Now, I want to show that 
message
in another modal, which doesn't use Twisted, so I just opened the modal 
window.

This starts up the wxPython event loop again, which triggers another 
timer
event, which calls back to the Twisted reactor to run another iteration.

It appears that my defered is still active, because I then get an 
'AlreadyCalledError'.
Here's the full stack trace.


Traceback (most recent call last):
   File "Progress.py", line 158, in Bad
     try_again = task.bad(fail)
   File "Progress.py", line 52, in bad
     wxCANCEL | wxYES_NO | wxICON_QUESTION)
   File "Progress.py", line 208, in OnTimer
     reactor.doIteration(0)
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 473, in
  doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 64, 
in callWithLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 51, 
in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\context.py", line 
32, in callWithContext
     return func(*args,**kw)
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 498, in _doReadOrWrite
     selectable.connectionLost(failure.Failure(why))
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
396, in connectionLost
     self.failIfNotConnected(error.ConnectError())
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
315, in failIfNotConnected
     self.connector.connectionFailed(failure.Failure(err))
   File "E:\Python22\Lib\site-packages\twisted\internet\base.py", line 
527, in connectionFailed
     self.factory.clientConnectionFailed(self, reason)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 209, 
in clientConnectionLost
     self.deferred.errback(reason)
   File "E:\Python22\lib\site-packages\twisted\internet\defer.py", line 
215, in errback
     self._startRunCallbacks(fail, 1)
   File "E:\Python22\lib\site-packages\twisted\internet\defer.py", line 
244, in _startRunCallbacks
     raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:


I can't figure out what's going on.  The code I could find for the 
reactor is very
careful to take defereds off the pending list before calling, so 
there's no way to
call them twice.

There's a clue in that only the last of these trigger this error 
condition.  This
suggests something with how the connection is established, and not 
after it's
put into place.  What I think is happening is that that
twisted.internet.base.BaseConnector allows the factory to reattempt the 
connection
when the intial connection failed, and there isn't a guard in case the 
connectionFailed
gets called again.

I still haven't grokked how the deep part of Twisted works - tried for 
the last
while to track this bug further - so I'll leave it up to you all.

In the meanwhile, since I don't need Twisted in the new (sub)modal, my 
workaround
is to do

     def OnTimer(self, event):
         if self.recursive:
             return
         self.recursive = 1
         try:
             reactor.runUntilCurrent()
             reactor.doIteration(0)
         finally:
             self.recursive = 0

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Wed Jun  4 01:28:12 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 3 Jun 2003 23:28:12 -0600
Subject: [Twisted-Python] mishandling windows connect error
Message-ID: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>

That error report I made earlier this evening is not reproducible under
Linux.  It's only under MS Windows.

Here's some more information.  Twisted isn't reporting the correct
error message for when a TCP connection fails under MS Windows.

Here's the reproducible

E:\dalke>..\Python22\python.exe
Python 2.2.3c1 (#41, May 22 2003, 19:16:28) [MSC 32 bit (Intel)] on 
win32
Type "help", "copyright", "credits" or "license" for more information.
 >>> from twisted.web.xmlrpc import Proxy
 >>> from twisted.internet import reactor
 >>> def printValue(value):
...   print value
...   reactor.stop()
...
 >>> proxy = Proxy("http://beatty.userland.com:34686")
 >>> proxy.callRemote('test.sumprod', 3, 5).addCallbacks(printValue, 
printValue)
<Deferred at 0xc38f40>
 >>> reactor.run()
[Failure instance: Traceback: twisted.internet.error.ConnectError, [160]
]
 >>>

Under Linux, this reports "Connection refused" as expected.

The ConnectError contains the value [160].  Looking at the stack trace, 
I found
it was created in tcp.py in BaseClient.doConnect where it says

         # on windows failed connects are reported on exception
         # list, not write or read list.
         if platform.getType() == "win32":
             r, w, e = select.select([], [], [self.fileno()], 0.0)
             if e:
                 self.failIfNotConnected(error.getConnectError(e))
                 return

If there is an error then 'e' will contain a list of size one, which is
the fileno.  Now look at the getConnectError definition in 
internet/error.py

def getConnectError(e):
     """Given a socket exception, return connection error."""
     try:
         number, string = e
     except ValueError:
         return ConnectError(string=e)

This will always give a ValueError (list of size 1 can't be assigned to
two terms) so it returns a ConnectError with the 'string' set to the
single element list.

And this is the '[160]' reported in the ConnectError of the failure,
which means it was on fileno 160.

I do not claim to be a network person.  It's all confusing to me.  I
tried commenting out that block, to see what the connect_ex does.
It returns a EWOULDBLOCK.  That's as far as I took it.

It feels to me like there's a bug around there someplace.

					Andrew
					dalke at dalkescientific.com




From glyph at twistedmatrix.com  Wed Jun  4 01:35:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jun 2003 01:35:08 -0400
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <020853C9-962E-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <4D75C62A-964E-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Tuesday, June 3, 2003, at 09:43 PM, Andrew Dalke wrote:

> I can't figure out what's going on.

Just a hunch here - are you calling doSelect from within doSelect?  
Your stack trace implies you're not, but I'm wondering if that's the 
full stack.




From lafou at wanadoo.fr  Wed Jun  4 03:25:36 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jun 2003 09:25:36 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
Message-ID: <1054711533.16157.124.camel@biproc>

hi all

I'am trying to display some information via a .rpy script. My model is a
complex object with several properties such as :

object.title
object.name
object.creationDate
...

The only way I found to display title & name is 

<span model="object" view="None">
	<span model="title" view="Text" />
	...
</span>

Is it possible to access directly object.title ?
model="object.title" doesn't work of course.

Thanks for your help.



-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From dp at twistedmatrix.com  Wed Jun  4 03:33:20 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 4 Jun 2003 00:33:20 -0700
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054711533.16157.124.camel@biproc>
Message-ID: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>

On Wednesday, June 4, 2003, at 12:25 AM, Philippe Lafoucri?re wrote:

> hi all
>
> I'am trying to display some information via a .rpy script. My model is 
> a
> complex object with several properties such as :
>
> object.title
> object.name
> object.creationDate
> ...
>
> The only way I found to display title & name is
>
> <span model="object" view="None">
> 	<span model="title" view="Text" />
> 	...
> </span>
>
> Is it possible to access directly object.title ?
> model="object.title" doesn't work of course.

Certainly. Woven uses / rather than . as the submodel name separator. 
So simply do this:

<span model="object/title" view="Text" />

/ is used rather than . because / can indicate any method of accessing 
a conceptual child object, whether it occurs by attribute access, 
dictionary or list lookup, or method call; it's up to the IModel 
adapter to decide how to access children. I believe this is covered in 
the "Model in Depth" section of the documentation.

Hope that helps!

Donovan




From lafou at wanadoo.fr  Wed Jun  4 03:43:22 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jun 2003 09:43:22 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
References: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
Message-ID: <1054712602.16157.133.camel@biproc>

Hum 
I get an exception when I use object/title

exceptions.Exception: Node had a model=object/title attribute, but the
submodel was not found in [<twisted.web.woven.model.Wrapper instance at
0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].

(with model = object)



On Wed, 2003-06-04 at 09:33, Donovan Preston wrote:
> On Wednesday, June 4, 2003, at 12:25 AM, Philippe Lafoucri?re wrote:
> 
> > hi all
> >
> > I'am trying to display some information via a .rpy script. My model is 
> > a
> > complex object with several properties such as :
> >
> > object.title
> > object.name
> > object.creationDate
> > ...
> >
> > The only way I found to display title & name is
> >
> > <span model="object" view="None">
> > 	<span model="title" view="Text" />
> > 	...
> > </span>
> >
> > Is it possible to access directly object.title ?
> > model="object.title" doesn't work of course.
> 
> Certainly. Woven uses / rather than . as the submodel name separator. 
> So simply do this:
> 
> <span model="object/title" view="Text" />
> 
> / is used rather than . because / can indicate any method of accessing 
> a conceptual child object, whether it occurs by attribute access, 
> dictionary or list lookup, or method call; it's up to the IModel 
> adapter to decide how to access children. I believe this is covered in 
> the "Model in Depth" section of the documentation.
> 
> Hope that helps!
> 
> Donovan
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From j.jakl at era.cz  Wed Jun  4 04:09:09 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Wed, 4 Jun 2003 10:09:09 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <20030603101159.5c232c37.itamar@itamarst.org>
Message-ID: <000901c32a70$9409a670$2d0214ac@jja>

So is UDP in Twisted usable at all?
Where to catch EWOULDBLOCK in UDP communication?
And second question: how to set REUSEADDR option on UDP socket?
It must be done before bind.
Thanks for your help.
Jaroslav Jakl


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Tuesday, June 03, 2003 4:12 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted newbie question about UDP


On Tue, 3 Jun 2003 13:07:27 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> I tried an example from howto doc. chapter 4.4.2 and it produce
> EWOULDBLOCK error after first received packet.
> Question is how to handle EWOULDBLOCK exception, because
> it isn't handled EWOULDBLOCK in udp.port.doRead().

I'm going to change it so EWOULDBLOCK gets turned into a callback on the
protocol.

--
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


--8910776--





From dalke at dalkescientific.com  Wed Jun  4 04:27:23 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 4 Jun 2003 02:27:23 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <4D75C62A-964E-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <5DA134FC-9666-11D7-B9B9-000393C92466@dalkescientific.com>

Glyph:
 > Just a hunch here - are you calling doSelect from within doSelect?  
Your stack trace
 > implies you're not, but I'm wondering if that's the full stack.

I sent the full stack that I saw.  I don't call doSelect myself.
The code I'm using is at 
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/203471
with the addition of the test case

             elif i == 9:
                 proxy = Proxy("http://beatty.userland.com:9876/")

The other test cases don't exhibit this failure case, which means it's
something specific to this call.  In addition, the failure occurs under
MS Windows but not under Linux, and it contains an unexpected error 
message.

I pointed out in another email where that error message is generated.  I
think there's something subtle in the state transitions for MS Windows
related to connecting to port which isn't accepting connections.

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Wed Jun  4 11:00:33 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 11:00:33 -0400
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <000901c32a70$9409a670$2d0214ac@jja>
References: <20030603101159.5c232c37.itamar@itamarst.org>
	<000901c32a70$9409a670$2d0214ac@jja>
Message-ID: <20030604110033.4bd4f97f.itamar@itamarst.org>

On Wed, 4 Jun 2003 10:09:09 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> So is UDP in Twisted usable at all?
> Where to catch EWOULDBLOCK in UDP communication?

Sorry for the confusion before. Anyway - from what I understood UDP
sockets never raise EWOULDBLOCK, but apparently I was wrong if you are
seeing it. I'll do a fix sometime soon.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Wed Jun  4 11:03:56 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 11:03:56 -0400
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030604110356.3e1cb5c1.itamar@itamarst.org>

On Tue, 3 Jun 2003 23:28:12 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> It feels to me like there's a bug around there someplace.

Indeed! I'll try to fix this some time over the next few days.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jun  4 11:44:35 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 04 Jun 2003 09:44:35 -0600
Subject: [Twisted-Python] creds and xmlrpc
In-Reply-To: <000401c329c0$51e38230$2d0214ac@jja>
References: <000401c329c0$51e38230$2d0214ac@jja>
Message-ID: <20030604154436.0C21C313CA@www.fastmail.fm>

I currently have a really simple xmlrpc service defined.  I'd like to add
some authorization to the service so users must enter a user id and
password to use the service.  Can this be done with creds?  Anybody have
any code snippets that would fit the service defined below (most code is
snipped out).  I read the HOWTO, but wasn't sure how to make things work
with what I'm doing.

-----------------------------------------------------
from vob import VOB
import config
import os
from twisted.web import xmlrpc, server

class CCService(xmlrpc.XMLRPC):
	"""Service for handling remote VOB creation, removal, and general
	   ClearCase maintenance.
	"""

	def xmlrpc_mkvob(self, vobs, group):
		"""Create VOBs and apply standard triggers.
		"""
		results = ""
		for tag in vobs:
			log("Start mkvob for VOB '%s'" % tag)
			vob = VOB(tag, group)
			results += vob.make()
			results += vob.applyTriggers()
			log("End mkvob for VOB '%s'" % tag)
		return results

...
[snip]
...

def main():
	from twisted.internet.app import Application
	app = Application("ccservice")
	resource = CCService()
	app.listenTCP(config.portNumber, server.Site(resource))
	return app

application = main()

if __name__ == '__main__':
	application.run(save=0)
-----------------------------------------------------

Thanks much.
-Justin



From lkurisaki at ambiron.net  Wed Jun  4 13:46:32 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 12:46:32 -0500
Subject: [Twisted-Python] ReverseProxy does not forward GET URL parameters
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>

The ReverseProxy does not forward GET parameters in a URL. For example,
if the client GETs "/script?arg1=a&arg2=b", the destination server sees
only "GET /script".

The following patch fixes that.
					Lance



Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.14
diff -u -r1.14 proxy.py
--- twisted/web/proxy.py        3 Jun 2003 04:45:35 -0000       1.14
+++ twisted/web/proxy.py        4 Jun 2003 17:37:20 -0000
@@ -179,7 +179,12 @@
     def render(self, request):
         request.received_headers['host'] = self.host
         request.content.seek(0, 0)
-        clientFactory = ProxyClientFactory(request.method, self.path,
+
+       path = self.path
+       x = request.uri.split("?")
+       if len(x) == 2: path += "?" + x[1]
+
+        clientFactory = ProxyClientFactory(request.method, path,
                                      request.clientproto,
                                      request.getAllHeaders(),
                                      request.content.read(),



From lkurisaki at ambiron.net  Wed Jun  4 15:39:12 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 14:39:12 -0500
Subject: [Twisted-Python] ReverseProxy performance??
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>

Since no one else has responded, I'll give it a shot...

>Does anyone have figures about the performance of ReverseProxy?
I have not done (or seen) any performance evaluation of the
ReverseProxy.

>How many connections can it handle simultaneously.
Unknown.

>Does it support SSL?
>Can it terminate an SSL-tunnel and forward the request unencrypted?
Yes, that's how I'm using it. I want an SSL reverse proxy in front of a
Zope server and don't want something as heavy as Apache or Squid. My
application doesn't expect to be heavily loaded, so performance is not a
critical issue for me.

Check out the example echoserv_ssl.py for how to set up an SSL server.
It's very simple. Just apply that to the proxy.py example.

I'm making some changes to the ReverseProxyResource class to make it a
bit more efficient (less object creation per request), but it's not
finished yet...

>How does it compare to other reverse-proxies with respect to
performance.
>Is there a performance difference when running it on Linux or Windows 
>(same hardware of course).
Can't answer these, either.

					Lance




From itamar at itamarst.org  Wed Jun  4 15:47:07 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 15:47:07 -0400
Subject: [Twisted-Python] ReverseProxy does not forward GET URL
 parameters
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>
Message-ID: <20030604154707.056c252c.itamar@itamarst.org>

On Wed, 4 Jun 2003 12:46:32 -0500
"Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> The ReverseProxy does not forward GET parameters in a URL. For
> example, if the client GETs "/script?arg1=a&arg2=b", the destination
> server sees only "GET /script".

Me or moshe will take a look later today.

While you're at it, a set of tests would be great and help you find
remaining bugs ;)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From rudy.schockaert at pandora.be  Wed Jun  4 17:26:54 2003
From: rudy.schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 04 Jun 2003 23:26:54 +0200
Subject: [Twisted-Python] ReverseProxy performance??
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>
Message-ID: <3EDE641E.30302@pandora.be>

>
>
>Check out the example echoserv_ssl.py for how to set up an SSL server.
>It's very simple. Just apply that to the proxy.py example.
>  
>
Thanks for pointing this out . Saves me some time searching :-)

>I'm making some changes to the ReverseProxyResource class to make it a
>bit more efficient (less object creation per request), but it's not
>finished yet...
>
>  
>
I would be interested in testing it.

I  plan to do some tests reverse-proxying an Exchange 2000 Outlook Web 
Access. This requires adding an extra http header and also Webdav.




From lkurisaki at ambiron.net  Wed Jun  4 17:32:55 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 16:32:55 -0500
Subject: [Twisted-Python] ReverseProxy does not forward GET URL parameters
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>

> While you're at it, a set of tests would be great and help you find
> remaining bugs ;)

I will look into writing one. I needed an excuse to learn unittest...
:-)

					Lance



From pobrien at orbtech.com  Wed Jun  4 20:13:41 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 4 Jun 2003 19:13:41 -0500
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
Message-ID: <200306041913.41478.pobrien@orbtech.com>

Index: models.py
===================================================================
RCS file: /cvs/Issues/issues/web/models.py,v
retrieving revision 1.19
diff -c -u -r1.19 models.py
--- models.py   9 May 2003 07:47:38 -0000       1.19
+++ models.py   5 Jun 2003 00:08:52 -0000
@@ -186,7 +186,7 @@
         return form.FormDisplayModel(self.commentMethod)

     def getPerson(self, name):
-        return self.issue.issue.repository.buildPerson(name)
+        return self.issue.repository.buildPerson(name)

     def wchild_postComment(self, request):
         return form.FormProcessor(self.commentMethod, RedirectToParent)
@@ -218,16 +218,16 @@
         assert oldFixer is not None and newFixer is not None
         oldFixer = self.getPerson(oldFixer)
         newFixer = self.getPerson(newFixer)
-        self.issue.issue.setState(issue.InTransfer(oldFixer, newFixer))
+        self.issue.setState(issue.InTransfer(oldFixer, newFixer))
         self._comment(oldFixer, comment)

     def queue(self, email=None, comment=None, queue=None):
         self._comment(email, comment)
         assert queue is not None
         try:
-            q = self.issue.issue.repository.getQueue(queue)
+            q = self.issue.repository.getQueue(queue)
         except repo.NoSuchQueue:
-            q = self.issue.issue.repository.buildQueue(queue)
+            q = self.issue.repository.buildQueue(queue)
         self.issue.setState(issue.InQueue(q))

     def converse(self, fixer=None, finder=None):

Also attached as issues_models.diff.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: issues_models.diff
Type: text/x-diff
Size: 1516 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030604/c5ffcb08/attachment.diff 

From jml at ids.org.au  Thu Jun  5 08:45:31 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Thu, 5 Jun 2003 22:45:31 +1000
Subject: [Twisted-Python] The problem with Twisted...
Message-ID: <20030605124531.GC3988@mumak.net>


... is that we have no word for "entrepreneur".

Just had a conversation with a guy on #python, and he raised some valid
points. He appeared to be a programmer, and his concerns were focussed on his
job, and on pitching Twisted to mgmt.

Firstly, his biggest concern was documentation. He said that he doesn't want
to trawl through Twisted's source code to figure things out. These days, (most
of the time) you don't have to do that, but occasionally you do. Of course,
our code is generally quite readable (except for the odd module here and
there).

Suggestions: 
* API docs
    Ask ten Java developers what they like most about Java, and nine will say
    "the API docs". I humbly suggest that we should get better at writing
    these.
* Howtos
    I remain somewhat unconvinced that the best way to write a book is to
    present a series of HOWTOs. But then, I also reckon that most of what we
    call HOWTOs, aren't.


Secondly, he couldn't find any information on the twistedmatrix.com website
that said "Managers, this is why you should use Twisted". I hate writing that
sort of thing, but I imagine it needs to be done. It could call cred an
"Identity Server" and things like that. It could also not use "asynchronous"
as selling point. Managers want to hear words they've already heard. They want
to hear why Twisted isn't just something cobbled together by a bunch of geeks
in their bedrooms.

The Java website starts off with a page geared entirely towards management
(even if the headings don't say so), with all the useful programmer stuff
hidden away from view. Would it be a stupid idea to have:
- http://www.twistedmatrix.com/ : Twisted, the Framework of your Internet
- http://www.twistedmatrix.com/dev/ : You have been sucked into the vortex.
??

Or even dispense with a site that targets developers entirely, except for a
"This is why Twisted's technology is cool" page. After all, the grunts will be
happy with doco, and coders who want more than that will find it on the list
and the channel.


Thirdly, we should really, really, really get Coil done. This guy didn't
mention it, but I know many people (good programmers, even) who feel
uncomfortable at a command line, and much prefer web-based (or Windows-based)
administration. 

One of the cool things about Twisted is that it's extremely easy to start a
server for just about anything on your personal PC. This would be made much
more obvious with a GUI like Coil.


Now, all this is suggested humbly and tentatively. I'm not sure whether any of
these things are good things. I do know that they'd make ppl who I've worked
with in corporate environments more comfortable. (and not just the muppets)

I'm very interested in discussion, and what you all think of this. 

Also, I hope this email isn't critical in a vague way, and isn't
inflammatory. It's not meant that way, rather it's meant to note problems that
other people see and have told me, and to suggest ways of solving them.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030605/f794211c/attachment.pgp 

From jml at ids.org.au  Thu Jun  5 09:06:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Thu, 5 Jun 2003 23:06:17 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
References: <20030605124531.GC3988@mumak.net>
Message-ID: <20030605130617.GD3988@mumak.net>

On Thu, Jun 05, 2003 at 10:45:31PM +1000, jml at ids.org.au wrote:
> ... is that we have no word for "entrepreneur".

Summary: Twisted is scary to people with money. We can make it less scary.
1. Docs.
a) We need more docs, esp API docs. This needs to be a commitment to docs, and
   not just a writing binge. 
b) A book is more than a collection of howtos  

2. The website should target "decision makers" primarily. Hackers only need
   links to download, docs, mailing list, and why our tech is cool

3. Coil.

Not a flame. Not claiming amazing ideas. Just stuff to make ppl feel more warm
and fuzzy.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030605/760f01c0/attachment.pgp 

From dalke at dalkescientific.com  Wed Jun  4 22:10:23 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 4 Jun 2003 20:10:23 -0600
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
Message-ID: <DDA8308E-96FA-11D7-B9B9-000393C92466@dalkescientific.com>

jml:
> * API docs

I would like to see a set of state transition diagrams, to know how
the different services work.

					Andrew
					dalke at dalkescientific.com




From peter at engcorp.com  Wed Jun  4 22:15:01 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 04 Jun 2003 22:15:01 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net>
Message-ID: <3EDEA7A5.35C8A4DF@engcorp.com>

jml at ids.org.au wrote:
> 
> On Thu, Jun 05, 2003 at 10:45:31PM +1000, jml at ids.org.au wrote:
> > ... is that we have no word for "entrepreneur".
> 
> Summary: Twisted is scary to people with money. We can make it less scary.
> 1. Docs.
> a) We need more docs, esp API docs. This needs to be a commitment to docs, and
>    not just a writing binge.
> b) A book is more than a collection of howtos

As a manager, I more or less have to agree, even though I've defended 
Twisted's docs on c.l.p from time to time.  They certainly could be 
better, and I do agree that the API doc areas could stand some improvements.
What I really ought to do is start noting the fact each time we encounter
a less than useful description, and maybe even try to improve it once
we figure it out.

> 2. The website should target "decision makers" primarily. Hackers only need
>    links to download, docs, mailing list, and why our tech is cool

You might think about what _kind_ of decision maker you wish to target.
Do you definitely want to target all kinds?  Targetting those with an
adequate understanding of agile development, the value of Python, etc,
should be pretty easy.  Hardly need to spend more than a passing word
or two to catch them... it's the more traditional types, used to using
certain other technologies, who might be harder.  How do you target a
Java head, and more interestingly: why would you?  (Yes, I understand
the mandate for world domination, but aside from that? ;-))

> 3. Coil.

I have only one thing to say in this area, which is please don't anyone
think about developing this just because you think you need to in order to
help convince someone to use Twisted.  If you don't need it enough to do it
for yourself or for someone who has specific documented needs (a.k.a. "user
stories") you will not produce something useful to anyone and you'll waste
your time to boot.

-Peter



From andrew-twisted at puzzling.org  Wed Jun  4 22:36:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 12:36:41 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <3EDEA7A5.35C8A4DF@engcorp.com>
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com>
Message-ID: <20030605023641.GB17360@frobozz>

On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> jml at ids.org.au wrote:
> > 
> > 3. Coil.
> 
> I have only one thing to say in this area, which is please don't anyone
> think about developing this just because you think you need to in order to
> help convince someone to use Twisted.  If you don't need it enough to do it
> for yourself or for someone who has specific documented needs (a.k.a. "user
> stories") you will not produce something useful to anyone and you'll waste
> your time to boot.

I've seen the old coil, and heard discussion on what the new coil will do,
and I'm sufficiently excited to believe it's *very* worthwhile...  

So, Donovan, what happened to the code you were going to post to the list
yesterday?  :) 

Anyway, back to Peter's advice -- you have a point.  But couldn't the same
argument apply to making a manager-friendly web site?  I'm somewhat inclined
to simply keeping good code, and rely on the quality to eventually speak for
itself, rather than expending effort on a perceived need to market Twisted
to non-technical people.  (Of course, if marketing Twisted is someone's itch,
they should be welcome to scratch it!)

On the other hand, I think more and better docs for developers (i.e. the
APIs and "HOWTO"s, which are misnamed I think) is definitely worthwhile.
The more developers we can attract, the better tested our designs and
implementation will be, and the better quality our project will become.  At
the moment, the docs are still somewhat of a barrier to new developers, but
thankfully not the insurmountable hurdle they used to be :)

Basically, if I had a choice between spending time on improving docstrings
or writing manager-friendly prose, I'd choose to write docstrings.

Oh!  And don't forget, we have some *excellent* marketing material already:
the 1.0 Press Release, linked from the front page.

-Andrew.




From pje at telecommunity.com  Wed Jun  4 18:10:27 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Wed, 04 Jun 2003 18:10:27 -0400
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
Message-ID: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>

Hi.  I'm working on a new interface adaptation package for Python, called 
PyProtocols.  It's an extension of PEP 246 to include a standardized API 
for declaring support for particular interfaces, and how to adapt 
instances, types, and other interfaces to an interface.  It includes its 
own interface library, but also has adapters and monkeypatching for Zope 
interfaces to make them usable with the API.  That is, since the API is 
itself defined with interfaces, it uses itself to adapt Zope interfaces to 
the interface for interfaces it uses.  :)

Anyway, I'd like to add support for Twisted interfaces as well.  I started 
today on trying to write adapters to map Twisted's interface/adapter API 
onto the PyProtocols API, and I ran into a bit of a snag.

I was about to write the code to add an __adapt__ method to Twisted 
interfaces, when I noticed there is already some code related to 
__adapt__.  But that code isn't at all compatible with the PEP 246 spec for 
__adapt__, as I understand it.  PEP 246 wants to be able to call an 
object's __adapt__ method with a single argument, while MetaInterface 
expects to yank out 'im_func' and pass two arguments into it.

The only way I can see to get this to work with PEP 246, is to monkeypatch 
MetaInterface.__call__ to find '__adapt__' by checking the interface's 
dictionary, rather than using __getattr__.  In this way, I can give 
MetaInterface an __adapt__ method that will be found whenever you refer to 
ISomething.__adapt__, but MetaInterface.__call__ will still find any 
__adapt__ that was put in by a 'def' in the interface body.

Essentially, I would be monkeypatching to change these two lines:

         if hasattr(self, '__adapt__'):
             adapter = self.__adapt__.im_func(adaptable, default)

To:
         if '__adapt__' in self.__dict__:
             adapter = self.__dict__['__adapt__'](adaptable, default)

Because self.__adapt__ would no longer be the same value as 
self.__dict__['__adapt__'], due to my adding a MetaInterface.__adapt__ 
method.  I assume that no inheritance lookup would be required, because 
interface inheritance for adaptation purposes is reversed.  That is, a 
subclass of an interface would not want to inherit its base interface's 
__adapt__, because a subclass interface has more stringent requirements for 
its implementors.  Therefore, a superclass __adapt__ isn't guaranteed to 
work for a subclass.

Anyway...  I noticed that the only code in Twisted currently (that I could 
find) that actually uses the current __adapt__ setup is the test suite.  Is 
there any way this might be changeable to something more compatible with 
PEP 246?  I mean, if I jump through enough hoops building adapters and 
monkeypatching, I can probably make it so that this will work 
transparently, and anybody who uses PyProtocols will then be able to mix 
Twisted, Zope, and PyProtocols interfaces in their applications.  But it's 
pretty messy, and I'm wondering about the copyright status if I have to 
copy a lot of code from MetaInterface.__call__ in order to monkeypatch a 
replacement.  (I'd like to release PyProtocols under the PSF license.)

Anyway, if you'd like some background on PyProtocols, the reference manual 
is at:

     http://peak.telecommunity.com/protocol_ref/

I don't know if you guys have previously looked at PEP 246 or thought about 
any of the adapter precedence/implication/declaration issues that 
PyProtocols tries to address.  It may be that some of what I've done may be 
useful to you.  OTOH, you may have already looked at this sort of thing and 
have different requirements for your component architecture.  My goal is 
merely compatibility among Python frameworks, so that people who use more 
than one framework's "Interface" types (e.g. Zope, Twisted, PEAK, etc.) can 
have some common ground rules, similar to the DBAPI or the way most Python 
numeric types can be used in an expression together.




From jml at mumak.net  Thu Jun  5 08:15:39 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 5 Jun 2003 22:15:39 +1000
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
In-Reply-To: <200306041913.41478.pobrien@orbtech.com>
References: <200306041913.41478.pobrien@orbtech.com>
Message-ID: <20030605121539.GA3988@mumak.net>

On Wed, Jun 04, 2003 at 07:13:41PM -0500, Patrick K. O'Brien wrote:
> Index: models.py

Thank you.

However, the CVS repository for Issues no longer represents the latest branch
of the code. 

Issues has been moved to a Subversion repository. The move took place before I
launched on a significant refactoring of the code, which was required to change
persistence mechanisms.

The reasons for this are varied, but mainly, it's because Subversion is more
convenient for me, due to my low bandwitdh.

However, the CVS repository still serves as a valid example of working
(although not terribly good) Woven code. As such, I'll apply your patch.

I expect an alpha release of Issues to happen in 3-4 weeks time. This will
contain all the major features that I expect to have in version 1.0.

You can find the repos here: http://mumak.net/svn/Issues/
Subversion can be found here: http://subversion.tigris.org

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030605/8143b225/attachment.pgp 

From jml at mumak.net  Thu Jun  5 11:23:53 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Fri, 6 Jun 2003 01:23:53 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <20030605023641.GB17360@frobozz>
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com> <20030605023641.GB17360@frobozz>
Message-ID: <20030605152353.GE3988@mumak.net>

On Thu, Jun 05, 2003 at 12:36:41PM +1000, Andrew Bennetts wrote:
> On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> > jml at ids.org.au wrote:
> > > 
> > > 3. Coil.
> > 
> > I have only one thing to say in this area, which is please don't anyone
> > think about developing this just because you think you need to in order to
> > help convince someone to use Twisted. 
>
> I've seen the old coil, and heard discussion on what the new coil will do,
> and I'm sufficiently excited to believe it's *very* worthwhile...  
> 

Yes. Coil (if it lives up to it's promises) is something that I would almost
certainly use a great deal. 

I find TAPs and command-line twistd launchings to be somewhat ... confusing. At
least, inasmuch as I feel the need to remember where everything is at, and what
I've done, etc.

Coil promises to be an admin server that can be used to bring up your services,
configure them, add them, restart them, shut them down and all of that. Just
being able to *see* everything at once

So, yes, I agree with everything spiv said.

jml

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030606/17930d6c/attachment.pgp 

From itamar at itamarst.org  Thu Jun  5 01:44:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 5 Jun 2003 01:44:34 -0400
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030605014434.65e23dde.itamar@itamarst.org>

On Tue, 3 Jun 2003 23:28:12 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> That error report I made earlier this evening is not reproducible
> under Linux.  It's only under MS Windows.

Fixed in CVS.

> Here's the reproducible

Actually our test suite catches this, just no one got around to fixing
it. In general Win32 has worse support than Linux. Now that I have a
Windows machine though I am going to try to get *everything* working.

Thanks so much for the debug info - it saved me a lot of time figuring
out what the problem was.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Thu Jun  5 01:59:44 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Jun 2003 01:59:44 -0400
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
Message-ID: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Wednesday, June 4, 2003, at 06:10 PM, Phillip J. Eby wrote:

> Anyway...  I noticed that the only code in Twisted currently (that I 
> could find) that actually uses the current __adapt__ setup is the test 
> suite.  Is there any way this might be changeable to something more 
> compatible with PEP 246?

Thanks for bringing this to my attention.  As I was perusing the 
implementation, I realized that the reason we committed this particular 
incompatibility was being invalidated a scant two lines away :-).  I 
could have sworn it didn't used to have a try:except: block, but I've 
checked in a revised version now.

As I understand it, PEP 246 cannot be implemented without raising 
exceptions in __adapt__.  I want to avoid mandatory exceptions at all 
costs within the components system, because in a system such as 
NewReality, where every other method call goes through an interface of 
some kind, the fact that raising exceptions is more than 6x as 
expensive as calling functions becomes a noticeable cost.

> I mean, if I jump through enough hoops building adapters and 
> monkeypatching, I can probably make it so that this will work 
> transparently, and anybody who uses PyProtocols will then be able to 
> mix Twisted, Zope, and PyProtocols interfaces in their applications.  
> But it's pretty messy, and I'm wondering about the copyright status if 
> I have to copy a lot of code from MetaInterface.__call__ in order to 
> monkeypatch a replacement.  (I'd like to release PyProtocols under the 
> PSF license.)

PyProtocols looks like an interesting project, and I'd like to support 
such an effort at interoperability.  Monkey-patching MetaInterface is 
almost certainly the wrong thing to do.  Perhaps it would be best if we 
did not call our interface-aware adaptation mechanism "__adapt__", but 
something like "adaptWithDefault"?

I am not sure exactly how you're doing compatibility, but perhaps then 
you could provide a subclass of Interface that provided an 
adaptWithDefault that called __adapt__ with the proper arguments?




From j.jakl at era.cz  Thu Jun  5 02:15:45 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Thu, 5 Jun 2003 08:15:45 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <20030604110033.4bd4f97f.itamar@itamarst.org>
Message-ID: <001501c32b29$e72aa110$2d0214ac@jja>

It doesn't matter if socket is TCP or UDP, if it is set non-blocked and
there is no data to read,
it return EWOULDBLOCK.
Thanks for your replies and it will be fine to have it fixed soon.
Jaroslav Jakl



-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Wednesday, June 04, 2003 5:01 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted newbie question about UDP


On Wed, 4 Jun 2003 10:09:09 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> So is UDP in Twisted usable at all?
> Where to catch EWOULDBLOCK in UDP communication?

Sorry for the confusion before. Anyway - from what I understood UDP
sockets never raise EWOULDBLOCK, but apparently I was wrong if you are
seeing it. I'll do a fix sometime soon.

--
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


--5063502--





From lafou at wanadoo.fr  Thu Jun  5 03:10:38 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:10:38 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
References: <20030605124531.GC3988@mumak.net>
Message-ID: <1054797038.16160.252.camel@biproc>

On Thu, 2003-06-05 at 14:45, jml at ids.org.au wrote:
> ... is that we have no word for "entrepreneur".

Especially the website which seems really designed by and for
developpers (is it bad ?).

> Firstly, his biggest concern was documentation. He said that he doesn't want
> to trawl through Twisted's source code to figure things out. These days, (most
> of the time) you don't have to do that, but occasionally you do. Of course,
> our code is generally quite readable (except for the odd module here and
> there).
> 
> Suggestions: 
> * API docs
>     Ask ten Java developers what they like most about Java, and nine will say
>     "the API docs". I humbly suggest that we should get better at writing
>     these.

I'am quite happy with the API but some method & params really need more
doc. 

> * Howtos
>     I remain somewhat unconvinced that the best way to write a book is to
>     present a series of HOWTOs. But then, I also reckon that most of what we
>     call HOWTOs, aren't.

I think howtos have to be reorganized. It's pretty hard to get started
with twisted. Moreover, I'am trying to make an application with woven,
and have difficulties with documentation on it. Maybe we need more
exemples.


> Secondly, he couldn't find any information on the twistedmatrix.com website
> that said "Managers, this is why you should use Twisted". I hate writing that
> sort of thing, but I imagine it needs to be done. It could call cred an
> "Identity Server" and things like that. It could also not use "asynchronous"
> as selling point. Managers want to hear words they've already heard. They want
> to hear why Twisted isn't just something cobbled together by a bunch of geeks
> in their bedrooms.

It would be great. I'm also a manager, and have to convince also my
clients that twisted is good choice for us.






From lafou at wanadoo.fr  Thu Jun  5 03:12:07 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:12:07 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054712602.16157.133.camel@biproc>
References: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
	 <1054712602.16157.133.camel@biproc>
Message-ID: <1054797127.16160.254.camel@biproc>

On Wed, 2003-06-04 at 09:43, Philippe Lafoucri?re wrote:
> Hum 
> I get an exception when I use object/title
> 
> exceptions.Exception: Node had a model=object/title attribute, but the
> submodel was not found in [<twisted.web.woven.model.Wrapper instance at
> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
> 
> (with model = object)


Someone can help me ?? this still doesn't work !




From mario at ruggier.org  Thu Jun  5 03:18:54 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 5 Jun 2003 09:18:54 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054797127.16160.254.camel@biproc>
Message-ID: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>

> On Wed, 2003-06-04 at 09:43, Philippe Lafoucri?re wrote:
>> Hum
>> I get an exception when I use object/title
>>
>> exceptions.Exception: Node had a model=object/title attribute, but the
>> submodel was not found in [<twisted.web.woven.model.Wrapper instance 
>> at
>> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
>>
>> (with model = object)
>
>
> Someone can help me ?? this still doesn't work !

I'm a newbie myself... might this have something to do with the Wrapper
you are using? Have you tried using the provided generic object wrapper?

from twisted.web.woven import model, interfaces
components.registerAdapter(model.ObjectWrapper, myObject, 
interfaces.IModel)

mario




From andrew-twisted at puzzling.org  Thu Jun  5 03:22:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 17:22:54 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054797038.16160.252.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc>
Message-ID: <20030605072254.GA17887@frobozz>

On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> 
> I think howtos have to be reorganized. It's pretty hard to get started
> with twisted. Moreover, I'am trying to make an application with woven,
> and have difficulties with documentation on it. Maybe we need more
> exemples.

Just a brief note: The Woven docs are new, so any suggestions to improve
them are extremely welcome!

-Andrew.




From lafou at wanadoo.fr  Thu Jun  5 03:52:26 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:52:26 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605072254.GA17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc>  <20030605072254.GA17887@frobozz>
Message-ID: <1054799545.16199.259.camel@biproc>

On Thu, 2003-06-05 at 09:22, Andrew Bennetts wrote:
> On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> > 
> > I think howtos have to be reorganized. It's pretty hard to get started
> > with twisted. Moreover, I'am trying to make an application with woven,
> > and have difficulties with documentation on it. Maybe we need more
> > exemples.
> 
> Just a brief note: The Woven docs are new, so any suggestions to improve
> them are extremely welcome!
> 
> -Andrew.

I'll give you my feedback when I finish reading it.

_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From lafou at wanadoo.fr  Thu Jun  5 04:35:15 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 10:35:15 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>
References: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>
Message-ID: <1054802115.16199.261.camel@biproc>

> I'm a newbie myself... might this have something to do with the Wrapper
> you are using? Have you tried using the provided generic object wrapper?
> 
> from twisted.web.woven import model, interfaces
> components.registerAdapter(model.ObjectWrapper, myObject, 
> interfaces.IModel)


Exactly the same exception :(




From lafou at wanadoo.fr  Thu Jun  5 04:39:09 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 10:39:09 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054799545.16199.259.camel@biproc>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc>  <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc>
Message-ID: <1054802349.16157.265.camel@biproc>

> I'll give you my feedback when I finish reading it.

Ok, retain all doc in memory is hard. I don't see the difference between
wvfactory_ and wvupdate_ ?



-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From dalke at dalkescientific.com  Thu Jun  5 04:47:28 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Thu, 5 Jun 2003 02:47:28 -0600
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <20030605014434.65e23dde.itamar@itamarst.org>
Message-ID: <56A7F512-9732-11D7-B9B9-000393C92466@dalkescientific.com>

> Fixed in CVS.

Great!  Though since I'm preparing for a demo and this is something
I can work around, I'm not going to be able to verify the fix until
next month.

> Actually our test suite catches this, just no one got around to fixing
> it. In general Win32 has worse support than Linux. Now that I have a
> Windows machine though I am going to try to get *everything* working.

For now I only need simple client support.  I would like better support
for MS Windows in the server part, but I don't think I'll need it.

> Thanks so much for the debug info - it saved me a lot of time figuring
> out what the problem was.

While my co-supporters (not co-workers) were pointing out that since
I have a workaround and I need to get ready for the demo, I should have
just logged it for the future and not tried to track it down.  So don't
thank them ;)

(And I think it helped get a better feel for how Twisted works.  Still
could have waited until later....)

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Thu Jun  5 04:52:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 18:52:32 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054802349.16157.265.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
Message-ID: <20030605085232.GB17887@frobozz>

On Thu, Jun 05, 2003 at 10:39:09AM +0200, Philippe Lafoucri?re wrote:
> 
> > I'll give you my feedback when I finish reading it.
> 
> Ok, retain all doc in memory is hard. I don't see the difference between
> wvfactory_ and wvupdate_ ?

I'm no Woven expert, but wvupdate_ is described here:
    http://twistedmatrix.com/documents/howto/viewindepth#auto5

I presume you're saying that's not clear enough?

(I really should try to learn Woven myself sometime, so I can know how you
feel...  :)

-Andrew.




From Olivier.POYEN at clf-dexia.com  Thu Jun  5 04:54:01 2003
From: Olivier.POYEN at clf-dexia.com (POYEN OP Olivier (DCL))
Date: Thu, 5 Jun 2003 10:54:01 +0200
Subject: [Twisted-Python] (Summary) The problem with Twisted...
Message-ID: <8963D6370B323E4AA3241200F0EAF731235646@FCEXVEXM002.dcl.int.dexwired.net>


> On the other hand, I think more and better docs for 
> developers (i.e. the
> APIs and "HOWTO"s, which are misnamed I think) is definitely 
> worthwhile.
> The more developers we can attract, the better tested our designs and
> implementation will be, and the better quality our project 
> will become.  At
> the moment, the docs are still somewhat of a barrier to new 
> developers, but
> thankfully not the insurmountable hurdle they used to be :)
> 


If I may, I'd like to add a little something on Docs, from my little newbie point of few:

I've read cl.py a lot, and you can sometimes find people complaining about Twisted Docs.
And the usual response, which does not lack of common sense, is to *not* try to grasp all at the same time, but just go at a specific point, looking for *just* what you want. That's why there are lots of how to. 

But, you know, I'm just the average geek guy, and thus, went to twisted-matrix website, and download and print the whole How-To pdf, with it's 250 pages. 
And, like, I assume, every-one, I try read it first page-> last page. Confusing. 
Yes because there are lots of stuff to get your mind around, but also because you don't want to do that: at many point, you find introdocution stuff in the middle of an how to you would have needed before. 
Let me give an example: 
One of the first thing I read was the "visions" paragraph which quote something like that "in many place in others how-to, you'll find what is twisted; but here let's not speak about that, but let show what It should be". No, on the first page , I want to know what it is !
Then, followed an overview of many components. Great, but I did'nt get yet the whole picture of it (what is it ? What is twisted ?) . Because I need this big picture  before I can put each component in its own box. 
Then I've have a quite excellent overview of twisted enterprise. 
Reallly good, but I still didn't get the whole picture, and I've many details about lot's of other stuff. Even at the beginning of the paragraph, it's written something like 'in order to understand this overview, you should already know how to build a server, what is a reactor....'. It perhaps not quotes exactly that, but you get the point: I read from page one, and you want me to know stuff I did'nt even read yet !

Other example: latter, you have two of the most important how-to: 'make a server'& 'make a client'. 
These one, on the contrary, start very gently. And in the overview, I learn almost what I wanted, to get the "big picture" of twisted: an asynchroneous loop, and after that , no blocking calls, only callback. (maybe I'm wrong). 
Why did I not get those lines in the beginning. It really helps me understanding the big picture of twisted. 

Those commentaries are not agressif, because the docs are just "how to", not a book or a turorial. And those how-to are quite well made.

So, all my point is that the documentation is not so bad, because you did put all the necessary stuff. 
My point is that you need a book, with almost the same content, but a different organization of the data. You need a normal book, cecause people like to have a single entrance point they can read through, linearly.
And I think you should enforce the "try to get the whole thing, the big picture of twisted and then go to a specific point" mantra. 


BTW, I'll be happy to help, and since I'm still a newbie, and since I still did not get twisted , that may be helpful ! 


HTH

OPQ 

-------------- next part --------------
-----------------------------------------------------------------

Ce message est confidentiel ; son contenu ne represente en aucun

cas un engagement de la part de Dexia Credit Local ou de Dexia

CLF Banque. Toute publication, utilisation ou diffusion, meme

partielle, doit etre autorisee prealablement par l'emetteur. Si

vous n'etes pas destinataire de ce message, merci d'en avertir

immediatement l'expediteur.



This message is confidential ; its contents do not constitute a

commitment by Dexia Credit Local or Dexia CLF Banque. Any

unauthorised disclosure, use or dissemination, either whole or

partial, is prohibited. If you are not the intended recipient of

the message, please notify the sender immediately.

-----------------------------------------------------------------

Consultez notre site internet www.dexia-clf.fr

La cle d'une gestion optimisee du secteur public local

-----------------------------------------------------------------

From theller at python.net  Thu Jun  5 05:11:09 2003
From: theller at python.net (Thomas Heller)
Date: 05 Jun 2003 11:11:09 +0200
Subject: [Twisted-Python] Re: mishandling windows connect error
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com> <20030605014434.65e23dde.itamar@itamarst.org>
Message-ID: <he74x51u.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> [...] In general Win32 has worse support than Linux. Now that I have a
> Windows machine though I am going to try to get *everything* working.

If you now intend to look at the win32guireactor I posted some time ago,
I can also mail you a pure ctypes based version (no win32all needed)
which i'm actually using.

Thomas




From lafou at wanadoo.fr  Thu Jun  5 05:28:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 11:28:06 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605085232.GB17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
	 <20030605085232.GB17887@frobozz>
Message-ID: <1054805286.16160.274.camel@biproc>

> I'm no Woven expert, but wvupdate_ is described here:
>     http://twistedmatrix.com/documents/howto/viewindepth#auto5
> 
> I presume you're saying that's not clear enough?
> 
> (I really should try to learn Woven myself sometime, so I can know how you
> feel...  :)

Yes, Please try it. I a twisted newbie, but sometimes things happen
magically. I knew the page 

howto/viewindepth#auto5

(red all the doc already) but this is not clear enough for me (maybe
it's because I'm not english fluent). For me, wvupdate_ and wvfactory_
are used to create a new View for a page.Page. 

In exemples :

-----------------------------------------------------------------
class MyPage(page.Page):
    def wvupdate_foo(self, request, widget, data):
        if data > 10:
            newNode = widget.getPattern("large")
        else:
            newNode = widget.getPattern("small")
        newNode.appendChild(request.d.createTextNode(str(data)))
        widget.appendChild(newNode)

-----------------------------------------------------------------
class MyView(view.View):
  def generate(self, request, node, model):
      return request.d.createTextNode("Hello, world!")

class MyPage(page.Page):
    def wvfactory_foo(self, request, node, model):
        return MyView(model)
-----------------------------------------------------------------

I think I can put :
****
	if data > 10:
            newNode = widget.getPattern("large")
        else:
            newNode = widget.getPattern("small")
        newNode.appendChild(request.d.createTextNode(str(data)))
        widget.appendChild(newNode)
****
in the wvfactory_foo !?





==================================================================


By the way, I was looking for documentation on cred, since I want to
persist identies created on a twisted server. The cred howto needs some
rewrite with concrete exemples.
I can't pickle identities with Shelf since Indenties have references to
Auth, and Auth to Identities (infinite loop when pickeling).


-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From andrew-twisted at puzzling.org  Thu Jun  5 05:53:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 19:53:39 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054805286.16160.274.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc> <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc>
Message-ID: <20030605095339.GE17887@frobozz>

On Thu, Jun 05, 2003 at 11:28:06AM +0200, Philippe Lafoucri?re wrote:
[...]
> 
> I think I can put :
> ****
> 	if data > 10:
>             newNode = widget.getPattern("large")
>         else:
>             newNode = widget.getPattern("small")
>         newNode.appendChild(request.d.createTextNode(str(data)))
>         widget.appendChild(newNode)
> ****
> in the wvfactory_foo !?

But wvfactory_foo's third argument is a DOM node, not a generic Widget.
There is no 'widget' in a wvfactory_.

-Andrew.




From lafou at wanadoo.fr  Thu Jun  5 07:25:54 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 13:25:54 +0200
Subject: [Twisted-Python] Persistant Identities CRED
Message-ID: <1054812354.16199.278.camel@biproc>

[from another post]

I was looking for documentation on cred, since I want to
persist identies created on a twisted server. The cred howto needs some
rewrite with concrete exemples.
I can't pickle identities with Shelf since Indenties have references to
Auth, and Auth to Identities (infinite loop when pickeling).


-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From lafou at wanadoo.fr  Thu Jun  5 07:42:28 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 13:42:28 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605095339.GE17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
	 <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc>
	 <20030605095339.GE17887@frobozz>
Message-ID: <1054813348.16160.290.camel@biproc>

> But wvfactory_foo's third argument is a DOM node, not a generic Widget.
> There is no 'widget' in a wvfactory_.


ho ok, haven't seen that.

In pilePicture tutorial, in ImageDisplay class :

    def wchild_preview(self, request):        return static.File(self.image)

"static" comes from nowhere.


> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From peter at engcorp.com  Thu Jun  5 07:53:22 2003
From: peter at engcorp.com (Peter Hansen)
Date: Thu, 05 Jun 2003 07:53:22 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com> <20030605023641.GB17360@frobozz>
Message-ID: <3EDF2F32.D7B4C4A1@engcorp.com>

Andrew Bennetts wrote:
> 
> On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> > I have only one thing to say in this area, which is please don't anyone
> > think about developing this just because you think you need to in order to
> > help convince someone to use Twisted.  If you don't need it enough to do it
> > for yourself or for someone who has specific documented needs (a.k.a. "user
> > stories") you will not produce something useful to anyone and you'll waste
> > your time to boot.
> 
> I've seen the old coil, and heard discussion on what the new coil will do,
> and I'm sufficiently excited to believe it's *very* worthwhile...
> 
> Anyway, back to Peter's advice -- you have a point.  But couldn't the same
> argument apply to making a manager-friendly web site?  I'm somewhat inclined
> to simply keeping good code, and rely on the quality to eventually speak for
> itself, rather than expending effort on a perceived need to market Twisted
> to non-technical people.  (Of course, if marketing Twisted is someone's itch,
> they should be welcome to scratch it!)

Very true on all points!  Of course, marketing XP style should not involve
a whole lot of upfront packaging and cosmetics, but should be driven by
actual need.  After all, real marketing, the heart of what the very word
is supposed to mean as opposed to how its misused and abused by all the
glossy brochure types in the word, is _understanding customer needs and
developing products which fulfill them_.  So if marketing Twisted is someone's
itch, and they want to be most effective, they should, IMHO, go step by
step XP style and try to understand what the world needs in one particular 
area of Twisted (say, coil) based on real-world information: ask around,
write proposals and respond to feedback, and most important of all: develop
prototypes (quick and somewhat dirty) to elicit direct feedback on what
will actually work.

Basically, in my mind, there is no reason to distinguish between marketing
and "traditional" XP development, as both should look the same if one is
doing them most effectively.

Of course, if by "marketing Twisted" you meant someone actually wants to
do the glossy brochure thing on the product, like souping up the web site
and writing intros for managers, I'm not sure I have much advice except
I don't think it's such a good idea. :-)

> On the other hand, I think more and better docs for developers (i.e. the
> APIs and "HOWTO"s, which are misnamed I think) is definitely worthwhile.
> The more developers we can attract, the better tested our designs and
> implementation will be, and the better quality our project will become.  

Yes.  Yes, yes, yes.  YES!  That goes back to my original "what kind of
manager are you targeting" question.  The best kind to attract is the 
kind who will already be attracted by your approach, and by the quality 
of the product you are delivering.  Those things speak for themselves and
don't need the glossy brochure kind of "marketing", which is really about
selling inferior products to unsophisticated customers.  (Again, though,
if that's what you want to spend your time doing, I guess nobody should
be trying to stop you. ;-)

(Somewhat rambling, but it's very early in the morning and I didn't get
enough sleep... forgive me.)

-Peter



From pje at telecommunity.com  Thu Jun  5 09:00:25 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Thu, 05 Jun 2003 09:00:25 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>

At 01:59 AM 6/5/03 -0400, Glyph Lefkowitz wrote:
>On Wednesday, June 4, 2003, at 06:10 PM, Phillip J. Eby wrote:
>
>>Anyway...  I noticed that the only code in Twisted currently (that I 
>>could find) that actually uses the current __adapt__ setup is the test 
>>suite.  Is there any way this might be changeable to something more 
>>compatible with PEP 246?
>
>Thanks for bringing this to my attention.  As I was perusing the 
>implementation, I realized that the reason we committed this particular 
>incompatibility was being invalidated a scant two lines away :-).  I could 
>have sworn it didn't used to have a try:except: block, but I've checked in 
>a revised version now.
>
>As I understand it, PEP 246 cannot be implemented without raising 
>exceptions in __adapt__.

Actually, no.  __adapt__ is also allowed to return None to signal inability 
to adapt.  And, the consensus so far of people I've talked with (Jim Fulton 
and Guido) is that PEP 246 should be revised in that area anyway, such that 
it isn't even an *option* to raise TypeError to signal 
failure.  PyProtocols will only ignore TypeError if it looks like it came 
from calling an unbound class method, not if it looks like it came from the 
__conform__ or __adapt__ method body.


>>I mean, if I jump through enough hoops building adapters and 
>>monkeypatching, I can probably make it so that this will work 
>>transparently, and anybody who uses PyProtocols will then be able to mix 
>>Twisted, Zope, and PyProtocols interfaces in their applications.
>>But it's pretty messy, and I'm wondering about the copyright status if I 
>>have to copy a lot of code from MetaInterface.__call__ in order to 
>>monkeypatch a replacement.  (I'd like to release PyProtocols under the 
>>PSF license.)
>
>PyProtocols looks like an interesting project, and I'd like to support 
>such an effort at interoperability.  Monkey-patching MetaInterface is 
>almost certainly the wrong thing to do.  Perhaps it would be best if we 
>did not call our interface-aware adaptation mechanism "__adapt__", but 
>something like "adaptWithDefault"?

That would work; at least, it makes the monkeypatch quite a bit simpler.

Are you actually using the __adapt__ method for anything yet?  The only 
code I found with an actual __adapt__ method was in the test suite.


>I am not sure exactly how you're doing compatibility, but perhaps then you 
>could provide a subclass of Interface that provided an adaptWithDefault 
>that called __adapt__ with the proper arguments?

PyProtocols does compatibility by:

1. defining adapters to adapt "foreign" interface types (Zope, Twisted) to 
its own IOpenProtocol interface

2. monkeypatching the foreign interface type itself (Zope InterfaceClass, 
Twisted MetaInterface) to add an __adapt__ method that implements PEP 246 
by "calling down" to the foreign type's normal adaptation methods.  E.g. 
for Zope, the __adapt__ I patch in just does:

if self.isImplementedBy(obj):
     return obj

And for Twisted, the __adapt__ I add does the equivalent of:

     def __adapt__(self, obj):

         if implements(obj, self):
             return obj

         # Get Twisted to try and adapt
         return self(ob, None)

In other words, the __adapt__ I add checks whether Twisted says the object 
already implements the interface, and if so, return it.  Otherwise, adapt 
it by calling the interface on the object, with a default of None.

If you were to switch from using __adapt__ to adaptWithDefault in your 
__call__ method, and added the above as MetaInterface.__adapt__, your 
interfaces would be PEP 246 compatible without any monkeypatching.  For 
compatibility with PyProtocols' declaration API, I would just supply an 
adapter.

(From recent conversations with Jim Fulton, it sounds like he plans to 
eventually add a PEP 246-compatible __adapt__ method to Zope interfaces as 
well, so at that point I could drop the monkeypatching for Zope too.)

I've done a preliminary sketch of an adapter for Twisted interfaces, but 
there are a few holes because I'm not 100% clear on the intended semantics 
of Twisted interfaces in some areas.  Actually, I get the impression that 
that's because Twisted hasn't really defined those semantics either.  For 
example, Twisted doesn't appear to distinguish between "object implements" 
and "class implements".  If I call 'getInterfaces()' on a class, it will 
tell me that the class implements the same interfaces that its instances 
do.  From my POV, that doesn't make any sense, but perhaps it is a 
documented or at least intended limitation?  Certainly, I will need to 
document it in my "Compatibility" section (not yet written).

For right now, my Twisted adapter just pokes a new __implements__ onto 
whatever object is having declarations made about it, whether it's a type 
declaration or an instance declaration.  This means that PyProtocols will 
behave oddly if you pass a class to adapt().  Of course, Twisted will also 
behave oddly if you pass a class to ISomething().

I'm also having trouble figuring out how to apply transitive adapter 
semantics to Twisted.  AFAICT, Twisted adapters are not normally 
transitive.  However, unlike PyProtocols, Twisted interfaces don't know 
about all their adaptations, so there doesn't seem to be a way to issue 
declarations to make them transitive.  But I guess that's optional, since I 
didn't really intend to make PyProtocols add any new functionality to Zope 
or Twisted, just make it reasonably possible to interact with them.

It should be possible at this point to have a PyProtocols interface declare 
that it extends both a Twisted and a Zope interface, without any metaclass 
incompatibilities.  Of course, Twisted and Zope still use mutually 
incompatible definitions of '__implements__', so actually *using* an 
interface that extended both a Twisted and a Zope interface would be 
problematic.  :)




From pobrien at orbtech.com  Thu Jun  5 09:02:13 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 5 Jun 2003 08:02:13 -0500
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
In-Reply-To: <20030605121539.GA3988@mumak.net>
References: <200306041913.41478.pobrien@orbtech.com> <20030605121539.GA3988@mumak.net>
Message-ID: <200306050802.13693.pobrien@orbtech.com>

On Thursday 05 June 2003 07:15 am, Jonathan M. Lange wrote:
> On Wed, Jun 04, 2003 at 07:13:41PM -0500, Patrick K. O'Brien wrote:
> > Index: models.py
>
> Thank you.

You're welcome.

> However, the CVS repository for Issues no longer represents the latest
> branch of the code.
>
> Issues has been moved to a Subversion repository. The move took place
> before I launched on a significant refactoring of the code, which was
> required to change persistence mechanisms.

A mention of this in the NOTES file would be useful.

> The reasons for this are varied, but mainly, it's because Subversion is
> more convenient for me, due to my low bandwitdh.
>
> However, the CVS repository still serves as a valid example of working
> (although not terribly good) Woven code. As such, I'll apply your patch.
>
> I expect an alpha release of Issues to happen in 3-4 weeks time. This will
> contain all the major features that I expect to have in version 1.0.
>
> You can find the repos here: http://mumak.net/svn/Issues/
> Subversion can be found here: http://subversion.tigris.org

I was looking at Issues because I'm looking for an example of a Woven app.  If 
the new code is better, I'd rather look at it.  Is there an equivalent to an 
anonymous CVS checkout with Subversion, and do you allow that for Issues?  Or 
would it be possible to just get a tarball or something?  I'm not looking for 
production quality code, just a decent example of a Woven app to learn from.  

Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From andrew-twisted at puzzling.org  Thu Jun  5 09:17:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 23:17:13 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054813348.16160.290.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc> <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc> <20030605095339.GE17887@frobozz> <1054813348.16160.290.camel@biproc>
Message-ID: <20030605131713.GC18487@frobozz>

On Thu, Jun 05, 2003 at 01:42:28PM +0200, Philippe Lafoucri?re wrote:
> 
> > But wvfactory_foo's third argument is a DOM node, not a generic Widget.
> > There is no 'widget' in a wvfactory_.
> 
> ho ok, haven't seen that.

This difference is mentioned under the "wvupdate_" heading of
doc/howto/viewindepth.

> In pilePicture tutorial, in ImageDisplay class :
> 
>     def wchild_preview(self, request):        return static.File(self.image)
> 
> "static" comes from nowhere.

It comes from this import line:
    
    from twisted.web import server, static

-Andrew.




From nico at tekNico.net  Thu Jun  5 09:14:37 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 05 Jun 2003 15:14:37 +0200
Subject: [Twisted-Python] Learning unittest (was: ReverseProxy does not
 forward GET URL parameters)
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>
Message-ID: <3EDF423D.3090409@tekNico.net>

> I will look into writing one. I needed an excuse to learn unittest...
> :-)

Don't relay solely on the docs to do this, they'll drive you crazy. :^(

Instead, go to chapter 6 of http://diveintopython.org/ , and
everything will magically unfold in your mind. :^)

Chapter 17 of the "Python in a Nutshell" book is a good intro, too.

-- 
"I have been, and always will be, a programmer: even when designing,
Emacs is my canvas, and I expect C-x C-c to be engraved on my tombstone."
   Ren? Hollan

Nicola Larosa - nico at tekNico.net






From nico at tekNico.net  Thu Jun  5 09:57:13 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 05 Jun 2003 15:57:13 +0200
Subject: [Twisted-Python] Learning unittest
In-Reply-To: <3EDF423D.3090409@tekNico.net>
References: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net> <3EDF423D.3090409@tekNico.net>
Message-ID: <3EDF4C39.2010103@tekNico.net>

> Don't relay solely on the docs to do this, they'll drive you crazy. :^(

Argh, that should have been "rely", obviously. Sorry.

-- 
"I have been, and always will be, a programmer: even when designing,
Emacs is my canvas, and I expect C-x C-c to be engraved on my tombstone."
   Ren? Hollan

Nicola Larosa - nico at tekNico.net





From itamar at itamarst.org  Thu Jun  5 02:00:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 5 Jun 2003 02:00:29 -0400
Subject: [Twisted-Python] win32 status -- pretty good!
Message-ID: <20030605020029.66a178b4.itamar@itamarst.org>

Discounting tests that are unix only and shouldn't be run on win32 (I
will fix this too), there are only about 3 failures that look like real
bugs when using default reactor.

This is quite good. Looks like we're actually in good shape on Windows.
And hopefully soon all tests will pass.

Of course, then there's the win32event reactor to deal with.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pobrien at orbtech.com  Thu Jun  5 12:46:11 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 5 Jun 2003 11:46:11 -0500
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
Message-ID: <200306051146.11224.pobrien@orbtech.com>

I'm still learning Woven, but I noticed that the html files generated by the 
example programs are mostly devoid of newlines and other whitespace, making 
the html pretty hard to read.  Is there an easy way to enable newlines?  I 
see hints in microdom, but don't understand it well enough yet.

Here is a specific example - the calendar example listed in the docs:

http://www.twistedmatrix.com/documents/howto/viewindepth#auto4

I typed in that example and ran it.  The html it generated could really use 
some well-placed newlines.  Indentation wouldn't hurt either.  How would I 
modify that example to add newlines and indentation to the html?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From dp at twistedmatrix.com  Thu Jun  5 13:16:48 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 10:16:48 -0700
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054797127.16160.254.camel@biproc>
Message-ID: <7DC7C4AC-9779-11D7-A93E-000A95864FC4@twistedmatrix.com>


On Thursday, June 5, 2003, at 12:12 AM, Philippe Lafoucri?re wrote:

> On Wed, 2003-06-04 at 09:43, Philippe Lafoucri?re wrote:
>> Hum
>> I get an exception when I use object/title
>>
>> exceptions.Exception: Node had a model=object/title attribute, but the
>> submodel was not found in [<twisted.web.woven.model.Wrapper instance 
>> at
>> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
>>
>> (with model = object)
>
>
> Someone can help me ?? this still doesn't work !

Woven needs to know how to request Submodels of a Model object in order 
to work. It does this using objects which conform to the IModel 
protocol. Since no IModel adapter has been registered for your 
ObjectManager class, Woven wraps it in a generic Wrapper. The generic 
Wrapper does not allow submodel access at all, which is why you are 
getting the exception.

There are two solutions to your problem: The first is to make 
ObjectManager a subclass of model.AttributeModel. AttributeModel is an 
implementation of IModel which exposes attributes of an object as 
submodels. This is probably the easiest because all the code is already 
written for you.

The second solution is to write an IModel adapter which exposes 
attributes of the adapted object as submodels. I have never done this 
before, but it seems like a logical thing to do.

Attached are two pieces of code that show each technique.

Hope this helps! dp


-------------- next part --------------
A non-text attachment was scrubbed...
Name: attributeModelSubclass.rpy
Type: application/octet-stream
Size: 351 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030605/7ed52ecc/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attributeAdapter.rpy
Type: application/octet-stream
Size: 733 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030605/7ed52ecc/attachment-0001.obj 

From dp at twistedmatrix.com  Thu Jun  5 13:33:04 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 10:33:04 -0700
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <200306051146.11224.pobrien@orbtech.com>
Message-ID: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>

On Thursday, June 5, 2003, at 09:46 AM, Patrick K. O'Brien wrote:

> I'm still learning Woven, but I noticed that the html files generated 
> by the
> example programs are mostly devoid of newlines and other whitespace, 
> making
> the html pretty hard to read.  Is there an easy way to enable 
> newlines?  I
> see hints in microdom, but don't understand it well enough yet.

Indeed -- the ugly state of woven's output is something that irritates 
me quite a bit. My current solution is to copy and paste the output 
into BBEdit, and use the Formatting command, but that's only an option 
if you are on Mac OS X.

> Here is a specific example - the calendar example listed in the docs:
>
> http://www.twistedmatrix.com/documents/howto/viewindepth#auto4
>
> I typed in that example and ran it.  The html it generated could 
> really use
> some well-placed newlines.  Indentation wouldn't hurt either.  How 
> would I
> modify that example to add newlines and indentation to the html?

There is a reason the output looks like that, specifically buggy 
browsers. Browsers claim to be whitespace agnostic but appear to format 
certain things, such as tables with images in the cells, differently if 
there is any whitespace in the cell. This was the reason I was told 
woven couldn't output pretty-printed xml; I have not been able to 
reproduce this behavior however. Can someone who has experienced this 
problem (mesozoic, glyph?) please email me an example of the 
problematic HTML?

Anyway, here is a quick fix to the problem:

Edit twisted/web/woven/utils.py

Change this line in doSendPage:

     page = str(d.toxml())

to this:

     page = str(d.toprettyxml())

And if it doesn't cause any problems for you WRT the formatting of your 
pages in the browser, then you should be happy.

I think that I am going to add an option to Page which will allow you 
to turn on and off prettyprinting on a per-page basis. Another thing 
for my todo-in-my-sparetime list :(

dp




From mesozoic at polynode.com  Thu Jun  5 14:17:54 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 5 Jun 2003 14:17:54 -0400
Subject: [Twisted-Python] Strange behavior with Woven, getDynamicChild, addSlash
Message-ID: <20030605181754.GA15522@polynode.com>

I have two Page classes I'm trying to make play nicely, and they won't.

  class Folder(page.Page):
      def initialize(self, *args, **kwargs):
       	  self.items = kwargs.get('items', {})
      def getDynamicChild(self, name, request):
          return self.items.get(name)

  class Album(page.Page):
      # whatever...

  items = {'album': Album()}
  resource = Folder(items = items)

Straightforward enough, or so I thought.  Folder's template creates a list,
with an anchor tag for each one of its "items".  These links work fine, but
when clicked, all the children ignore the fact that addSlash=1.

So when I navigate to "/folder", it automatically redirects to "/folder/".

However, when "album" is a child returned by my Folder, navigating to
"/folder/album" does _not_ add the extra slash -- and I can't figure out
why.

Navigating manually to "/folder/album/" renders normally.  Also, the slash
is automatically added when Album is not a child of Folder, but instead its
own "base resource" in my web server's docroot.  That is, navigating to
"/album" redirects to "/album/" normally.

[The reason I'm doing this is to make a site where _every_ page shares the
same layout; even directory listings need to be templated.  Directory
listings won't always be tied to real filesystem paths, so extending
static.File seems like the wrong approach.]

Any ideas?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From dp at twistedmatrix.com  Thu Jun  5 15:15:12 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 12:15:12 -0700
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054805286.16160.274.camel@biproc>
Message-ID: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>

On Thursday, June 5, 2003, at 02:28 AM, Philippe Lafoucri?re wrote:

> I think I can put :

*snip*

> in the wvfactory_foo !?

You can, but you should not. Factory methods have one purpose and one 
purpose only: To return a new object.

Update methods are special because they allow you to write the 
equivalent of a new Widget class with an overridden setUp method, 
without writing a new class.

Why does it matter so much where the DOM manipulation occurs? Because 
one of the design goals of woven was to allow a portion of an 
already-rendered page to be re-rendered. The way this is currently 
implemented is by keeping the Widget instances produced by the 
wvfactory_ methods in memory so that the generate (and thus setUp) 
methods may be executed again multiple times.

How is wvupdate_ different? When woven notices a wvupdate_ method, it 
creates a generic Widget instance and places a function pointer to the 
wvupdate_ method on this instance. In this way, the wvupdate_ method 
can be executed multiple times in order to re-render that portion of 
the page.

I know it is confusing, and I hope to remove some of this complexity in 
a future woven version.

dp




From lafou at wanadoo.fr  Thu Jun  5 16:10:42 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 22:10:42 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>
References: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>
Message-ID: <1054843841.16199.295.camel@biproc>

> You can, but you should not. Factory methods have one purpose and one 
> purpose only: To return a new object.
> 
> Update methods are special because they allow you to write the 
> equivalent of a new Widget class with an overridden setUp method, 
> without writing a new class.
> 
> Why does it matter so much where the DOM manipulation occurs? Because 
> one of the design goals of woven was to allow a portion of an 
> already-rendered page to be re-rendered. The way this is currently 
> implemented is by keeping the Widget instances produced by the 
> wvfactory_ methods in memory so that the generate (and thus setUp) 
> methods may be executed again multiple times.
> 
> How is wvupdate_ different? When woven notices a wvupdate_ method, it 
> creates a generic Widget instance and places a function pointer to the 
> wvupdate_ method on this instance. In this way, the wvupdate_ method 
> can be executed multiple times in order to re-render that portion of 
> the page.
> 
> I know it is confusing, and I hope to remove some of this complexity in 
> a future woven version.
> 
> dp

Thank you for this clear explanation ! I understand now !




From arashi1 at pd.jaring.my  Fri Jun  6 05:28:00 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Fri, 6 Jun 2003 17:28:00 +0800
Subject: [Twisted-Python] How to use NameVirtualHost?
Message-ID: <200306061728.00870.arashi1@pd.jaring.my>

Hi all,

What is the correct name for this class? In the source it's NameVirtualHost 
but in the docs it's NamedVirtualHost. Also in the API docs it says:

addHost(self, name, resrc)

Add a host to this virtual host.
This will take a host named `name', and map it to a resource `resrc'. For 
example, a setup for our virtual hosts would be:

   nvh.addHost('divunal.com', divunalDirectory)
   nvh.addHost('www.divunal.com', divunalDirectory)
   nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)
   nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)


But what kind of object is divualDirectory (for example)? I tried to put 
something like:
 
nvh.addHost('divunal.com', "/home/website/divunal.com/")

But I get an error:
'str' has no method getChildWithDefault!

In the dir /home/website/divunal.com/ there is an .rpy file index.rpy where a 
resource is defined. Twisted web could not find it? I'm still confused about 
how to properly use the vhost.* classes...



From robert.penz at outertech.com  Fri Jun  6 06:01:26 2003
From: robert.penz at outertech.com (Robert Penz)
Date: Fri, 6 Jun 2003 12:01:26 +0200
Subject: [Twisted-Python] FTP client with TLS
Message-ID: <200306061201.26655.robert.penz@outertech.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!

I'm starting writting a ftp client script to a server which accepts only TLS 
connects. I'm currently deciding with framework/library I use. I had a look 
at m2crypto and twisted. 

At m2crypto I know it works, as there is an example which was able to login 
and it got a directory listing, but I would like also test twisted as it 
seems to go much further in many parts.

So my question is: Is FTP via TLS possible and can someone direct me to an 
example. Thx. 

- -- 
Regards,
Robert
- ----------------
Robert Penz
robert.penz AT outertech.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE+4GZ28tTsQqJDUBMRAmoSAJ4xbpWqCByogBPEJZyDjbofUPqpPQCcC5jO
fMeY71etLVEr1omfPFQOvao=
=YO3D
-----END PGP SIGNATURE-----




From justinjohnson at fastmail.fm  Fri Jun  6 09:13:19 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 06 Jun 2003 07:13:19 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <200306061201.26655.robert.penz@outertech.com>
References: <200306061201.26655.robert.penz@outertech.com>
Message-ID: <20030606131319.7DD402F17D@www.fastmail.fm>

Resend with different subject, since the last post seemed to slip off
into the Abyss....

-------
I currently have a really simple xmlrpc service defined.  I'd like to add
some authorization to the service so users must enter a user id and
password to use the service.  Can this be done with creds?  Anybody have
any code snippets that would fit the service defined below (most code is
snipped out).  I read the HOWTO, but wasn't sure how to make things work
with what I'm doing.

-----------------------------------------------------
from vob import VOB
import config
import os
from twisted.web import xmlrpc, server

class CCService(xmlrpc.XMLRPC):
        """Service for handling remote VOB creation, removal, and general
           ClearCase maintenance.
        """

        def xmlrpc_mkvob(self, vobs, group):
                """Create VOBs and apply standard triggers.
                """
                results = ""
                for tag in vobs:
                        log("Start mkvob for VOB '%s'" % tag)
                        vob = VOB(tag, group)
                        results += vob.make()
                        results += vob.applyTriggers()
                        log("End mkvob for VOB '%s'" % tag)
                return results

[...snip...]

def main():
        from twisted.internet.app import Application
        app = Application("ccservice")
        resource = CCService()
        app.listenTCP(config.portNumber, server.Site(resource))
        return app

application = main()

if __name__ == '__main__':
        application.run(save=0)
-----------------------------------------------------

Thanks much.
-Justin



From screwtape at froup.com  Fri Jun  6 09:16:17 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 6 Jun 2003 23:16:17 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>
References: <200306051146.11224.pobrien@orbtech.com> <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>
Message-ID: <20030606131617.GA13200@ferd2.thristian.org>

On Thu, Jun 05, 2003 at 10:33:04AM -0700, Donovan Preston wrote:
> On Thursday, June 5, 2003, at 09:46 AM, Patrick K. O'Brien wrote:
> >I typed in that example and ran it.  The html it generated could 
> >really use
> >some well-placed newlines.  Indentation wouldn't hurt either.  How 
> >would I
> >modify that example to add newlines and indentation to the html?
> 
> There is a reason the output looks like that, specifically buggy 
> browsers. Browsers claim to be whitespace agnostic but appear to format 
> certain things, such as tables with images in the cells, differently if 
> there is any whitespace in the cell. This was the reason I was told 
> woven couldn't output pretty-printed xml; I have not been able to 
> reproduce this behavior however. Can someone who has experienced this 
> problem (mesozoic, glyph?) please email me an example of the 
> problematic HTML?

The 'problematic' status of the HTML is an issue of quite some debate.
In short, traditional browsers had an edge-case with images inside
table cells, which modern browsers (because of the above-mentioned
whitespace agnosticism) should treat differently.

I'd go into more detail, but the problem is best described in detail
in the Mozilla bug database, where someone filed a bug because Mozilla
didn't follow the traditional behaviour. It was filed in December
1999, the last comment was posted in May 2003 (so far). There have
been 130 duplicate bugs filed.

http://bugzilla.mozilla.org/show_bug.cgi?id=22274

There may be other places where supposedly whitespace-agnostic
browsers are actually whitespace-sensitive, but that's the one you
mentioned.

In a perfect world, I'd have block HTML elements on their own lines,
and inline HTML elements, well, inline. But since Woven spits out XML
rather than HTML, that'd be quite hacky to implement. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "this confirms my theory that screwtape is god." -- kristen
|



From itamar at itamarst.org  Fri Jun  6 11:12:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 6 Jun 2003 11:12:14 -0400
Subject: [Twisted-Python] Removing broken/unused packages
Message-ID: <20030606111214.11d1a1cb.itamar@itamarst.org>

I propose we remove coil and popsicle. zoot should probably go too, all
it does is let you make useless gnutella ping/pong taps, and the actual
gnutella protocol code, such as it is, is in twisted.protocols.gnutella.
How about sibling?

Anyone disagree?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Fri Jun  6 13:04:44 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 6 Jun 2003 13:04:44 -0400
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <200306061201.26655.robert.penz@outertech.com>
References: <200306061201.26655.robert.penz@outertech.com>
Message-ID: <20030606170444.GA18140@meson.dyndns.org>

On Fri, Jun 06, 2003 at 12:01:26PM +0200, Robert Penz wrote:
> 
> Hi!
> 
> I'm starting writting a ftp client script to a server which accepts only TLS 
> connects. I'm currently deciding with framework/library I use. I had a look 
> at m2crypto and twisted. 
> 
> At m2crypto I know it works, as there is an example which was able to login 
> and it got a directory listing, but I would like also test twisted as it 
> seems to go much further in many parts.
> 
> So my question is: Is FTP via TLS possible and can someone direct me to an 
> example. Thx. 

  If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client issues
a command like "starttls" then issues no further commands until the server
acknowledges this, at which point some level of encryption is negotiated and
the remainder of the session is so encrypted.

  In this case, adding support for TLS to Twisted's FTP should be very
straightforward.  All that is required is a call to the transport object's
startTLS() method at the appropriate time.  There may be complications due
to the additional connections FTP creates, but this is the basic gist of
things.

  Just to clarify (I can't tell if you're aware or not), Twisted uses
PyOpenSSL for TLS, not m2crypto.

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030606/ae09c271/attachment.pgp 

From itamar at itamarst.org  Fri Jun  6 13:09:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 6 Jun 2003 13:09:18 -0400
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <20030606170444.GA18140@meson.dyndns.org>
References: <200306061201.26655.robert.penz@outertech.com>
	<20030606170444.GA18140@meson.dyndns.org>
Message-ID: <20030606130918.41798225.itamar@itamarst.org>

On Fri, 6 Jun 2003 13:04:44 -0400
Jp Calderone <exarkun at intarweb.us> wrote:

>   If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client
>   issues
> a command like "starttls" then issues no further commands until the
> server acknowledges this, at which point some level of encryption is
> negotiated and the remainder of the session is so encrypted.

It's a bit more complicated (e.g. I think on active FTP the client
initiates TLS even though server initiates TCP connection, but we
support that thanks to you!). And it's more like HTTP where you encrypt
the whole session, I think.

Shouldn't be too hard to do if the FTP code is clean enough.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From robert.penz at outertech.com  Fri Jun  6 14:01:47 2003
From: robert.penz at outertech.com (Robert Penz)
Date: Fri, 6 Jun 2003 20:01:47 +0200
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <20030606170444.GA18140@meson.dyndns.org>
References: <200306061201.26655.robert.penz@outertech.com> <20030606170444.GA18140@meson.dyndns.org>
Message-ID: <200306062001.56233.robert.penz@outertech.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday 06 June 2003 19:04, Jp Calderone wrote:

>   If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client issues
> a command like "starttls" then issues no further commands until the server
> acknowledges this, at which point some level of encryption is negotiated
> and the remainder of the session is so encrypted.
yes and no ;-)

you can only encrypted the control channel in that case you're right, but not 
if you e.g. want to encrypt all data, or only the directory listing but not 
the data transfers. In both of that cases you need at leasted sometimes 
encrypt the data connection too.

>   In this case, adding support for TLS to Twisted's FTP should be very
> straightforward.  All that is required is a call to the transport object's
> startTLS() method at the appropriate time.  There may be complications due
> to the additional connections FTP creates, but this is the basic gist of
> things.
that should work for control connection only encryption. 

>   Just to clarify (I can't tell if you're aware or not), Twisted uses
> PyOpenSSL for TLS, not m2crypto.
I've tested m2crypto not because I thought its used in twisted, but as it 
provides ftp via tls.


- -- 
Regards,
Robert
- ----------------
Robert Penz
robert.penz AT outertech.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE+4NcU8tTsQqJDUBMRAjjDAJsEX3wPNIv6lfxqdSDDezFjGH/reQCeLXnq
YEjjAQQyn8uNKUQ42wR3M7c=
=nuzz
-----END PGP SIGNATURE-----




From avdd at cantanker.net  Fri Jun  6 21:42:33 2003
From: avdd at cantanker.net (Adrian van den Dries)
Date: Sat, 7 Jun 2003 11:42:33 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030606131617.GA13200@ferd2.thristian.org>
References: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com> <20030606131617.GA13200@ferd2.thristian.org>
Message-ID: <20030607014233.GL1379@home.cantanker.net>

quoth screwtape at froup.com:

> In a perfect world, I'd have block HTML elements on their own lines,
> and inline HTML elements, well, inline. But since Woven spits out XML
> rather than HTML, that'd be quite hacky to implement. :)

Why would it be hacky?  HTML is naturally semantic, so it would be
appropriate for twisted.web.woven.widgets to have a registry of
elements and their default block display properties.  Woven could then
have an option to "pretty-format" the output according to the display
properties.

a.




From screwtape at froup.com  Fri Jun  6 21:57:03 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 11:57:03 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605072254.GA17887@frobozz>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
Message-ID: <20030607015703.GC13200@ferd2.thristian.org>

On Thu, Jun 05, 2003 at 05:22:54PM +1000, Andrew Bennetts wrote:
> On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> > 
> > I think howtos have to be reorganized. It's pretty hard to get started
> > with twisted. Moreover, I'am trying to make an application with woven,
> > and have difficulties with documentation on it. Maybe we need more
> > exemples.
> 
> Just a brief note: The Woven docs are new, so any suggestions to improve
> them are extremely welcome!

One thing I found confusing when reading the Woven docs:

In the PicturePile walkthrough, there's a section dealing with storing
data in a session variable. Basically it defines two empty classes and
tells Twisted they can be used to deal with Session objects.

This seemed (not so) subtly bizzare, so I read the components-and-
adapters introduction, which led me to believe that there would be all
sorts of clever magic in the Session object to deal with this sort of
thing. So I trundled over to the Session class in the API docs to see
how the Session object is *supposed* to be used, rather than a
cheating short-cut way.

The Session API docs say "This utility class contains no
functionality, but is used to represent a session."

The Session class doesn't appear to inhert from anything that actually
contains session-related functionality, and the adapter classes sure
don't contain session-related functionality, so I have no idea where
sessiony stuff is done, or how to do it in my own programs, or
anything clever that I might do.

In ASP, admittedly based on a much stupider language, the Session
object is effectively a dictionary. It's much simpler to understand. I
assume there's useful things the Twisted session object can do that
you can't do in ASP, but I'm not very clear on what those things might
be.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "You seem cool for a naked chick in a booth - let's be pals someday." -- PUSA
|



From screwtape at froup.com  Fri Jun  6 22:06:16 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 12:06:16 +1000
Subject: [Twisted-Python] t.web.woven.widgets.Anchor and .Link
Message-ID: <20030607020616.GD13200@ferd2.thristian.org>

Playing with Woven the other day, I tried to put a series of links
into a page (think "navigation bar"). I spent quite some time coaxing
and pleading with the Anchor widget before I discovered the Link
widget which did more or less exactly what I wanted.

After poking around with the Anchor widget a little more, I've decided
it does absolutely nothing at all, since it lacks a setUp method. Is
Anchor really as useless as it appears? Is it for backwards-
compatibility? Shouldn't some note be made in its docstring?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Earthworms are really good with dirt.. Is this too technical?" -- M*A*S*H
|



From screwtape at froup.com  Sat Jun  7 03:32:28 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 17:32:28 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030607014233.GL1379@home.cantanker.net>
References: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com> <20030606131617.GA13200@ferd2.thristian.org> <20030607014233.GL1379@home.cantanker.net>
Message-ID: <20030607073228.GE13200@ferd2.thristian.org>

On Sat, Jun 07, 2003 at 11:42:33AM +1000, Adrian van den Dries wrote:
> quoth screwtape at froup.com:
> 
> > In a perfect world, I'd have block HTML elements on their own lines,
> > and inline HTML elements, well, inline. But since Woven spits out XML
> > rather than HTML, that'd be quite hacky to implement. :)
> 
> Why would it be hacky?  HTML is naturally semantic, so it would be
> appropriate for twisted.web.woven.widgets to have a registry of
> elements and their default block display properties.  Woven could then
> have an option to "pretty-format" the output according to the display
> properties.

I think it would be hacky because Woven spits out XML, not HTML. One
thing I tried the other day (as noted on this list) is using Woven to
spit out WML for my mobile phone, instead of HTML for my browser. WML
doesn't (as far as I know) have even the concept of block-vs-inline
elements. 

An XSLT engine I worked with once had several 'output modes' which
changed how it spat out data - if you set it to XML mode, it would
work as you expect. If you set it to text mode, I think it refused to
do XML-style entity references and escaping. And if you set it to HTML
mode, it would 'tidy up' some tags ("<hr/>" -> "<hr>", etc), and
pretty-print.

That's all very nice and useful, but I expect it would be a reasonable
amount of work - work that will only ever become less important as
time wears on and XHTML becomes more common. It's not a sufficiently
crucial feature for me to look into creating.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Think of me as CVS with a brain and some taste" -- Linus Torvalds.
|



From 2002 at weholt.org  Sat Jun  7 07:05:17 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 7 Jun 2003 13:05:17 +0200
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
Message-ID: <005701c32ce4$ae1b82b0$0401a8c0@razor>

I'm trying to create a webserver using code from HEP Message Server, which
in turn is based on Twisted. I cannot use rpys in this project due to
limitations on other parts of the system. I need to be able to send huge
files in a non-blocking manner, preferrably supporting Byte-ranges and
partial downloads too, but that's secondary to just being able to download
normally.

My code hangs when the request is for big files. Smaller ones like JPEGs
etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
chewing up memory. The files are stored in a folder called wwwroot in the
same folder as the source file. I'm using Twisted 1.0.5.

The project is a normal webserver used for serving files from 10-500mb,
while also serving HTML-based content. I need to be able to control the
generated content, ie. a producer generates the core-content and I wrap that
content in a template which holds the overall design for the entire site. I
didn't find a way to do that using rpys so I'm trying this code instead. Ok,
that's not the important part, if somebody could just tell me why this
hangs. I can see that the server sends out the correct content-type, but it
seem to hang when it is suppose to write the binary content to the client.

PS! Any info on Twisted.webs status on Byte-ranges, partial download and
gzipped content in responses are also important.

Best regards,
Thomas Weholt

from twisted.protocols.http import HTTPFactory, HTTPChannel, Request
from twisted.internet import app
import time, os, sys, types, mimetypes, ConfigParser

def getFactory(config):
    f = HTTPFactory()
    f.config = config
    f.protocol = MyChannel
    return f

class MyChannel(HTTPChannel):
    def __init__(self):
        HTTPChannel.__init__(self)
        self.requestFactory = RequestHandler

class RequestHandler(Request):
    def __init__(*args):
        Request.__init__(*args)
        self = args[0]

    def process(self):

        if not self.authenticate():
            self.setResponseCode(401, "Unauthorized")
            self.setHeader('WWW-Authenticate', 'Basic realm="Some server"')
            self.write("Access denied")
            self.finish()
            return

        requestData = self.uri.split("?")
        self.pageName = requestData[0]
        if len(requestData) > 1:
            form = parse_qs(requestData[1])
        else:
            form = {}

        self.pageName = 'somehugefile.dat'
        self.sendRequestedFile()
        self.finish()

    def getLocalFileName(self, pageName):
        filenameParts = ['wwwroot'] + pageName.split("/")
        pagefilename = os.path.join(*filenameParts)
        if os.path.isfile(pagefilename):
            return pagefilename

    def sendRequestedFile(self):
        pagefilename = self.getLocalFileName(self.pageName)
        mimeInfo = mimetypes.guess_type(pagefilename)
        if mimeInfo[0]:
            mimetype = mimeInfo[0]
        else:
            mimetype = "text/plain"
        htmlFile = open(pagefilename, 'r+b')
        self.setHeader("Content-type",mimetype)
        chunk = htmlFile.read(1024)
        while chunk:
            self.write(chunk)
            chunk = htmlFile.read(1024)
        htmlFile.close()

    def authenticate(self):
        username = self.getUser()
        password = self.getPassword()
        if username and password:
            return username == 'thomas' and password == 'test.pass'

print "Running something ...",
app = app.Application("MyApp")
config = ConfigParser.ConfigParser()
config.readfp(open('config.ini'))
app.listenTCP(6060, getFactory(config))
print "ok"
app.run()
print "Stopped"




From radix at twistedmatrix.com  Sat Jun  7 07:54:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 7 Jun 2003 07:54:10 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>; from 2002@weholt.org on Sat, Jun 07, 2003 at 07:05:17 -0400
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607115410.GC27054@toshi.anaprd01.md.comcast.net>

On 2003.06.07 07:05, Thomas Weholt wrote:
> My code hangs when the request is for big files. Smaller ones like JPEGs
> etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
> chewing up memory. The files are stored in a folder called wwwroot in the
> same folder as the source file. I'm using Twisted 1.0.5.

Why aren't you using the static.File resource? Subclassing Request is the 
wrong (and a *horrible*) way to write custom web code, to say nothing about
the fact that you're reimplementing what twisted already supports (non-blocking
file transfer support in twisted.web.static.File).

Anyway, the reason that this code is broken is probably because it repeatedly
does blocking reads until the entire file is read. 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Sat Jun  7 08:41:26 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jun 2003 08:41:26 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Expand ITCPTransport
In-Reply-To: <E19OLCA-0000nU-00@pyramid.twistedmatrix.com>
Message-ID: <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Friday, June 6, 2003, at 01:40 PM, exarkun CVS wrote:

> +    def canStartTLS(self):

Hmm.  Wouldn't this be better expressed with a 
components.implements(self, ITLSTransport) ?




From glyph at twistedmatrix.com  Sat Jun  7 08:49:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jun 2003 08:49:39 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <3EDF2F32.D7B4C4A1@engcorp.com>
Message-ID: <806E8D6F-98E6-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Thursday, June 5, 2003, at 07:53 AM, Peter Hansen wrote:

> Basically, in my mind, there is no reason to distinguish between 
> marketing
> and "traditional" XP development, as both should look the same if one 
> is
> doing them most effectively.

Somehow, I feel as though the God of Ethical and Intelligent Marketing 
Practices is posting to this mailing list.

> Of course, if by "marketing Twisted" you meant someone actually wants 
> to
> do the glossy brochure thing on the product, like souping up the web 
> site
> and writing intros for managers, I'm not sure I have much advice except
> I don't think it's such a good idea. :-)

Yes.  This is definitely not a good idea.

First of all, do we really want to attract managers who are swayed by 
glossy brochure marketing material?  We have a top-notch user community 
at the moment, and I know there are a lot of really interesting 
projects going on in the Twistedverse; while it is certainly tempting 
to attempt Total World Domination (TM), eliminating PHP/mod_perl/your 
favorite sucky web technology, the only real benefit is enabling smart 
people who work for stupid people to have a good time.

We could always use improvement of our technical documentation, but I 
think that as a technical community, we generally have a poor 
understanding of what makes the stereotypical bad manager's mind work.  
We need to be able to understand their legitimate concerns without 
caving in to their apparently irrational need for a security blanket of 
"web services" and "b2b p2p" and "enterprise ready".

I have a feeling that if we _did_ try to produce such a website, the 
resulting material would sound indistinguishable (to our ears) from the 
average industry rag advertisement, but that it would feel vaguely 
insulting to the people we were trying to reach, because it would be an 
unintentional parody of that style.




From glyph at twistedmatrix.com  Fri Jun  6 11:26:30 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jun 2003 11:26:30 -0400
Subject: [Twisted-Python] Removing broken/unused packages
In-Reply-To: <20030606111214.11d1a1cb.itamar@itamarst.org>
Message-ID: <3F570E48-9833-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Friday, June 6, 2003, at 11:12 AM, Itamar Shtull-Trauring wrote:

> I propose we remove coil and popsicle. zoot should probably go too

Can we remove these from the release without killing them in CVS?  I'd 
like to have the code stay around for example purposes, but you're 
right that this stuff is too poorly documented and poorly maintained to 
stay in the release tarball.

Zoot should probably be killed entirely, unless Zooko intends to finish 
it at some point.




From m at moshez.org  Sat Jun  7 09:08:56 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jun 2003 13:08:56 -0000
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607130856.21408.qmail@green.zadka.com>

On Sat, 7 Jun 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> I'm trying to create a webserver using code from HEP Message Server, which
> in turn is based on Twisted. I cannot use rpys in this project due to
> limitations on other parts of the system. I need to be able to send huge
> files in a non-blocking manner, preferrably supporting Byte-ranges and
> partial downloads too, but that's secondary to just being able to download
> normally.
...
> My code hangs when the request is for big files.
...
> class RequestHandler(Request):
...

Why in god's name are you overriding the Request object?
Instead of using, say, a root resource which does simple dispatching?
That would allow you to actually *use* the code in Twisted.Web, instead
of hacking up your own stuff, which is buggy :)

>     def sendRequestedFile(self):
...
>         htmlFile = open(pagefilename, 'r+b')
>         self.setHeader("Content-type",mimetype)
>         chunk = htmlFile.read(1024)
>         while chunk:
>             self.write(chunk)
>             chunk = htmlFile.read(1024)
>         htmlFile.close()

Yes, when you write hanging code, it hangs. You are sending the whole file
in one go. Soon, .send() overflows the OS buffers, and then Twisted dutifully
starts to buffer for you. That should give the symptoms you see.

I suggest just substuting it with static.File(pagefilename).render(self)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From cce at clarkevans.com  Sat Jun  7 14:46:35 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sat, 7 Jun 2003 18:46:35 +0000
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com> <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <20030607184635.GA99808@doublegemini.com>

On Thu, Jun 05, 2003 at 01:59:44AM -0400, Glyph Lefkowitz wrote:
| As I understand it, PEP 246 cannot be implemented without raising 
| exceptions in __adapt__. 

PEP 246 does not require exceptions in __adapt__, it does require
that the caller of adapt catch TypeError.  Perhaps this isn't
clearly documented, but is definately part of the reference
implementation.

Best,

Clark




From cce at clarkevans.com  Sat Jun  7 14:51:49 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sat, 7 Jun 2003 18:51:49 +0000
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com> <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
Message-ID: <20030607185149.GB99808@doublegemini.com>

On Thu, Jun 05, 2003 at 09:00:25AM -0400, Phillip J. Eby wrote:
| >As I understand it, PEP 246 cannot be implemented without raising 
| >exceptions in __adapt__.
| 
| Actually, no.  __adapt__ is also allowed to return None to signal inability 
| to adapt.  And, the consensus so far of people I've talked with (Jim Fulton 
| and Guido) is that PEP 246 should be revised in that area anyway, such that 
| it isn't even an *option* to raise TypeError to signal 
| failure.  PyProtocols will only ignore TypeError if it looks like it came 
| from calling an unbound class method, not if it looks like it came from the 
| __conform__ or __adapt__ method body.

Phillip,

This is great that PEP 246 has found a supporter... let alone someone
who is doing an implementation!  Anyway, I support PEP 246 being 
modified to not catch TypeError; this was done in such a way as to
make writing adapters easier.  But alas, if setting up the try/catch
block is causing performance problems, then it should be dropped.

The python community does indeed need a common protocol implementation,
I do hope your work gains adoption.

Best,

Clark



From pje at telecommunity.com  Sat Jun  7 15:46:18 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 15:46:18 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <20030607185149.GB99808@doublegemini.com>
References: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
 <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
 <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030607154002.030e3970@mail.telecommunity.com>

At 06:51 PM 6/7/03 +0000, Clark C. Evans wrote:
>This is great that PEP 246 has found a supporter... let alone someone
>who is doing an implementation!  Anyway, I support PEP 246 being
>modified to not catch TypeError; this was done in such a way as to
>make writing adapters easier.  But alas, if setting up the try/catch
>block is causing performance problems, then it should be dropped.

The change isn't for performance reasons, but for debugging.  Jim and I 
both feel that masking users' TypeErrors is a bad idea.  So my 
implementation uses a sneaky trick to detect whether the TypeError came 
from *invoking* the method, as opposed to being from *within* the 
method.  This still lets you write simple protocols and components.


>The python community does indeed need a common protocol implementation,
>I do hope your work gains adoption.

As per my other e-mail (Re: PEP 246 comments), I certainly welcome your 
feedback on the current state of the PyProtocols API.  I expect to make a 
public release in the next day or two.




From pje at telecommunity.com  Sat Jun  7 15:47:12 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 15:47:12 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <20030607184635.GA99808@doublegemini.com>
References: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
 <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
 <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <5.1.0.14.0.20030607154631.03c56260@mail.telecommunity.com>

At 06:46 PM 6/7/03 +0000, Clark C. Evans wrote:
>On Thu, Jun 05, 2003 at 01:59:44AM -0400, Glyph Lefkowitz wrote:
>| As I understand it, PEP 246 cannot be implemented without raising
>| exceptions in __adapt__.
>
>PEP 246 does not require exceptions in __adapt__, it does require
>that the caller of adapt catch TypeError.

I think you mean the caller of __adapt__, not the caller of 
adapt().  adapt() allows a default value to be passed, so as not to receive 
an error.




From pje at telecommunity.com  Sat Jun  7 18:11:13 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 18:11:13 -0400
Subject: [Twisted-Python] PyProtocols 0.9
Message-ID: <5.1.0.14.0.20030607180620.02418c50@mail.telecommunity.com>

Do you hate having to write lots of if-then logic to test what type 
something is?  Wouldn't it be nice if you could just declare "I want this 
object to have this behavior" and magically convert whatever value you 
have, to the type you need?  PyProtocols lets you do just that, cleanly, 
quickly, and robustly -- even with built-in types or other people's classes.

PyProtocols extends the PEP 246 adapt() function with a new "declaration 
API" that lets you easily define your own interfaces and adapters, and 
declare what adapters should be used to adapt what types, objects, or 
interfaces.  In addition to its own Interface type, PyProtocols can also 
use Twisted and Zope X3's Interface types.  (Of course, since Twisted and 
Zope interfaces aren't as flexible, only a subset of the PyProtocols API 
works with them.  Specific limitations are listed in the documentation.)

If you're familiar with Interface objects in Zope, Twisted, or PEAK, the 
Interface objects in PyProtocols are very similar.  But, they can also do 
many things that no other Python interface types can do.  For example, 
PyProtocols supports "subsetting" of interfaces, where you can declare that 
one interface is a subset of another existing interface.  This is like 
declaring that somebody else's existing interface is actually a subclass of 
the new interface.  Twisted and Zope don't allow this, which makes them 
very hard to use if you're trying to define interfaces like "Read-only 
Mapping" as a subset of "Mapping Object".

Unlike Zope and Twisted, PyProtocols also doesn't force you to use a 
particular interface coding style or even a specific interface type.  You 
can use its built-in interface types, or define your own.  If there's 
another Python package out there with interface types that you'd like to 
use (CORBA? COM?), you can even create your own adapters to make them work 
with the PyProtocols API.

PyProtocols is also the only interface package that supports automatic 
"transitive adaptation".  That is, if you define an adapter from interface 
A to interface B, and another from B to C, PyProtocols automatically 
creates and registers a new adapter from A to C for you.  If you later 
declare an explicit adapter from A to C, it silently replaces the 
automatically created one.

PyProtocols may be used, modified, and distributed under the same terms
and conditions as Python or Zope.


PyProtocols resources include:

* Release notes, installation instructions, and browsable API docs:
   http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
   http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
   http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
   http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
   http://cvs.eby-sarna.com/PyProtocols/


Version 0.9 of PyProtocols is a complete, working release, so you can 
download it now and try it out.  But, the exact spellings of the API and 
other interfaces may be subject to change in the future.  We would like 
feedback from the community on the current API, as some API names may not 
be clear or obvious yet.  Please contact the author with your input.




From dalke at dalkescientific.com  Sat Jun  7 19:50:59 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sat, 7 Jun 2003 17:50:59 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030606131319.7DD402F17D@www.fastmail.fm>
Message-ID: <E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>

Justin Johnson:
 > I currently have a really simple xmlrpc service defined.  I'd like to 
add
> some authorization to the service so users must enter a user id and
> password to use the service.  Can this be done with creds?  Anybody 
> have
> any code snippets that would fit the service defined below (most code 
> is
> snipped out).  I read the HOWTO, but wasn't sure how to make things 
> work
> with what I'm doing.

I want to do something similar.  I looked at the code, and I think it
can do what I want, but I haven't tested it, and even after looking at
it for a while I'm still not certain.

There are two "normal" ways to do authentication for XML-RPC.  The first
is to pass the username/password in the request and the other is to use
HTTP authentication.

I prefer the latter.  I would do it by having a wrapper object around
the resource, which does the HTTP authentication and passes 
authenticated
requests to the actual resource.  Looking at the code, the code that's
the closest fit is 'twisted.web.guard.ResourceGuard', but this doesn't
seem to work right.  I can't figure out how it validates the user 
because
the render method doesn't do anything with variables which look like
it might validate username/password information.

And that code is marked as "unstable".

Anyone else have better information?

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sat Jun  7 19:54:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 7 Jun 2003 19:54:03 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030606131319.7DD402F17D@www.fastmail.fm>
	<E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030607195403.6046de7d.itamar@itamarst.org>

On Sat, 7 Jun 2003 17:50:59 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> I prefer the latter.  I would do it by having a wrapper object around
> the resource, which does the HTTP authentication and passes 
> authenticated
> requests to the actual resource.  Looking at the code, the code that's
> the closest fit is 'twisted.web.guard.ResourceGuard', but this doesn't
> seem to work right.  I can't figure out how it validates the user 
> because
> the render method doesn't do anything with variables which look like
> it might validate username/password information.

guard is for form-based session authentication. For HTTP auth you just
need to do request.getUser() and request.getPassword() or some similarly
named methods (and send back appropriate HTTP response code for
unauthenticated if they're None).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Sat Jun  7 20:55:35 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sat, 7 Jun 2003 18:55:35 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030607195403.6046de7d.itamar@itamarst.org>
Message-ID: <E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring:
> guard is for form-based session authentication. For HTTP auth you just
> need to do request.getUser() and request.getPassword() or some 
> similarly
> named methods (and send back appropriate HTTP response code for
> unauthenticated if they're None).

Ahhh, okay.  I saw the docstring which said "Cred integration for 
twisted.web"
and assumed it was used for any cred use related to twisted.web.

Is "cred" the standard authentication mechanism for Twisted?  That
is, if I want to do HTTP auth for XML-RPC shouldn't I hook into the
cred system?  (Don't know myself - haven't gotten to that part of
Twisted yet.)

And if that's the case, couldn't the functionality you mentioned
all be implemented in a class which is a wrapper to the corresponding
resource, rather than having Justin Johnson and I both reimplement that
same functionality?

And if it were available as a standard class for Twisted, wouldn't
twisted.web.guard.ResourceGuard be a good place for it?  ;)

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sat Jun  7 21:00:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 7 Jun 2003 21:00:38 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030607195403.6046de7d.itamar@itamarst.org>
	<E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030607210038.28441606.itamar@itamarst.org>

On Sat, 7 Jun 2003 18:55:35 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> Is "cred" the standard authentication mechanism for Twisted?  That
> is, if I want to do HTTP auth for XML-RPC shouldn't I hook into the
> cred system?  (Don't know myself - haven't gotten to that part of
> Twisted yet.)

As with most high-level libraries in twisted, it's totally optional. It
does give you a nice pluggable backend, so you can use same auth
database for all Twisted apps. That's the theory. It might even be true
if we manage to rewrite cred this month :)

> And if that's the case, couldn't the functionality you mentioned
> all be implemented in a class which is a wrapper to the corresponding
> resource, rather than having Justin Johnson and I both reimplement
> that same functionality?

I haven't needed one of these, neither have other Twisted developers
apparently. Thus, no code for it.

> And if it were available as a standard class for Twisted, wouldn't
> twisted.web.guard.ResourceGuard be a good place for it?  ;)

No, like I said, that does form based authentication. You'd want a
twisted.web.fuard.HTTPAuthResourceGuard. If you write one and contribute
it we can include it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From abe at fettig.net  Sat Jun  7 21:25:51 2003
From: abe at fettig.net (Abe Fettig)
Date: 07 Jun 2003 21:25:51 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <1055035550.708.13.camel@mingus>

On Sat, 2003-06-07 at 07:05, Thomas Weholt wrote:
> I'm trying to create a webserver using code from HEP Message Server, which
> in turn is based on Twisted. 

[look of horror on my face]

The web code in Hep 0.3.2 was crudely ported to Twisted from existing
asyncore-based code.  It should _not_ be viewed as an example of good
Twisted practices.  And, for that matter, neither should the web code in
Hep CVS :-).

Abe




From glyph at twistedmatrix.com  Sun Jun  8 00:26:54 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 00:26:54 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <1055035550.708.13.camel@mingus>
Message-ID: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>

On Saturday, June 7, 2003, at 09:25 PM, Abe Fettig wrote:

> [look of horror on my face]

You and me both :)

> The web code in Hep 0.3.2 was crudely ported to Twisted from existing
> asyncore-based code.  It should _not_ be viewed as an example of good
> Twisted practices.  And, for that matter, neither should the web code 
> in
> Hep CVS :-).

We're always around, here and on IRC, if you need help to get things 
better in-sync with Twisted "best practices".

Hep is a pretty interesting project, so it will likely attract this 
kind of attention in the future as well.  We both have an interest in 
seeing it more in-sync with the overall Twisted vibe, I think.




From glyph at twistedmatrix.com  Sun Jun  8 00:29:28 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 00:29:28 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030607210038.28441606.itamar@itamarst.org>
Message-ID: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>

On Saturday, June 7, 2003, at 09:00 PM, Itamar Shtull-Trauring wrote:

> As with most high-level libraries in twisted, it's totally optional. It
> does give you a nice pluggable backend, so you can use same auth
> database for all Twisted apps. That's the theory. It might even be true
> if we manage to rewrite cred this month :)

This is actually pretty likely.  I need cred implemented for LOTS of 
reasons this month.

> No, like I said, that does form based authentication. You'd want a
> twisted.web.fuard.HTTPAuthResourceGuard. If you write one and 
> contribute
> it we can include it.

What I'd really like is the ability to configure a guard to use HTTP 
auth depending on certain parameters, such as the user-agent.  For 
example, a site which traditionally uses form-based authentication with 
interactive browsers still might be better-suited to HTTP auth when one 
is fetching a file with wget.




From richard at starfighter.freeuk.com  Sun Jun  8 06:10:00 2003
From: richard at starfighter.freeuk.com (Richard Townsend)
Date: Sun, 8 Jun 2003 11:10:00 +0100
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports
Message-ID: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>

The Twisted docs state that an Application object "can switch to a different
uid/gid after binding reserved ports".

I have recently been experimenting with a simple app that creates a
server.Site object and an app.Application() object and calls the latter's
listenTCP() method.

I want it to listen on reserved port 80, and then switch to a different
uid/gid but it's not clear to me how to do this. Could someone please
explain what the necessary steps should be?

(Note: I can't use twistd because it would not compatible with our system
architecture).

Python 2.2 on HP-UX11i & Linux

best regards,
Richard


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 1796 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030608/2b0769aa/attachment.bin 

From itamar at itamarst.org  Sun Jun  8 07:54:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 8 Jun 2003 07:54:34 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding
 reserved ports
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
References: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
Message-ID: <20030608075434.2efbe84a.itamar@itamarst.org>

On Sun, 8 Jun 2003 11:10:00 +0100
"Richard Townsend" <richard at starfighter.freeuk.com> wrote:

> I want it to listen on reserved port 80, and then switch to a
> different uid/gid but it's not clear to me how to do this. Could
> someone please explain what the necessary steps should be?

At a guess, set uid and gid attributes on the Application instance, then
run() it as root.

> (Note: I can't use twistd because it would not compatible with our
> system architecture).

The sounds very unlikely. Are you aware of the "twistd -y" option?


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Sun Jun  8 08:37:26 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 08:37:26 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
Message-ID: <F5D18E7E-99AD-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Sunday, June 8, 2003, at 06:10 AM, Richard Townsend wrote:

> The Twisted docs state that an Application object "can switch to a 
> different
> uid/gid after binding reserved ports".

You can specify keyword arguments to Application's constructor.

	a = Application(uid=1001, gid=1001)

Then, call either the setUID or setEUID method of your Application 
instance.  You will need to call bindPorts before calling these 
methods, however.

> (Note: I can't use twistd because it would not compatible with our 
> system
> architecture).

Can you detail what about twistd is incompatible with your system 
architecture?  If your system is deployed for a long period of time, 
chances are you are going to find that you require more and more 
features from twistd and re-implement it one feature at a time.

We provide the ability to run Twisted without twistd for simplicity's 
sake and for certain special cases, but this is really not recommended. 
  Twisted is a framework, not a library, and should be used as one 
wherever possible.




From richard at starfighter.freeuk.com  Sun Jun  8 09:46:46 2003
From: richard at starfighter.freeuk.com (Richard Townsend)
Date: Sun, 8 Jun 2003 14:46:46 +0100
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports 
Message-ID: <ECEGJLPCEIFJKDPCFJDHEEPBCBAA.richard@starfighter.freeuk.com>

> You can specify keyword arguments to Application's constructor.
>
>	a = Application(uid=1001, gid=1001)

> Then, call either the setUID or setEUID method of your Application 
> instance.  You will need to call bindPorts before calling these 
> methods, however.

Thanks for the info - it was the bindPorts() call I was missing - now it
works OK! 

It didn't seem to matter (in my test program) if I called bindPorts() before
or after listenTCP() - is there a preference?

> Can you detail what about twistd is incompatible with your system 
> architecture?  If your system is deployed for a long period of time, 
> chances are you are going to find that you require more and more 
> features from twistd and re-implement it one feature at a time.

Our system uses a home-grown process controller application to start
background processes. If it receives a SIGCHLD, it restarts the application.
It appears to me that when you run twistd, it forks a new process and the
original twistd dies. Our controller would then keep trying to restart it...



-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 2252 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030608/df701efc/attachment.bin 

From glyph at twistedmatrix.com  Sun Jun  8 09:56:36 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 09:56:36 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports 
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHEEPBCBAA.richard@starfighter.freeuk.com>
Message-ID: <051FEDC2-99B9-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Sunday, June 8, 2003, at 09:46 AM, Richard Townsend wrote:

> Our system uses a home-grown process controller application to start
> background processes. If it receives a SIGCHLD, it restarts the 
> application.
> It appears to me that when you run twistd, it forks a new process and 
> the
> original twistd dies. Our controller would then keep trying to restart 
> it...

This is fixed easily enough.

glyph at parchment:~% twistd --help | grep -- --nodaemon
   -n, --nodaemon         don't daemonize

Make sure you pass a '-l' option as well, otherwise it will log to 
standard output.




From peter at engcorp.com  Sun Jun  8 12:47:05 2003
From: peter at engcorp.com (Peter Hansen)
Date: Sun, 08 Jun 2003 12:47:05 -0400
Subject: [Twisted-Python] Concern over "relentless hyping" (was Twisted - howto transport
 megabytes?)
Message-ID: <3EE36889.B1259CFD@engcorp.com>

I received the following message in private (I assume) email after
my last post to the newsgroup.  Comments are welcome, preferably
public ones (merely because I consider private discussions about
this kind of thing to be a severe waste of my limited time).

Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
Is anyone over-hyping it?  Is there a maximum acceptable target level 
of hype?

-Peter Hansen

-------- Original Message --------
From: <name suppressed>
Subject: Twisted - howto transport megabytes?
To: peter at engcorp.com

In article <3EE35666.965E6369 at engcorp.com> you write:
> I just realized something -- examples like yours and Moshe's 
> answer show how elegant the Twisted solution can be.
>
> Questions like Ed's and answers like these are probably the best publicity 
> Twisted can receive, if you're trying to attract new users.  ;-)

IMHO, if you're trying to attract experienced, multi-lingual programmers, 
this relentless hyping is a little off-putting. (Well, _I_ find it
off-putting.)

Cheers.
<name suppressed>



From dp at twistedmatrix.com  Sun Jun  8 13:09:19 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 8 Jun 2003 10:09:19 -0700
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030607014233.GL1379@home.cantanker.net>
Message-ID: <F11BD85D-99D3-11D7-BFBD-000A95864FC4@twistedmatrix.com>

On Friday, June 6, 2003, at 06:42 PM, Adrian van den Dries wrote:

> quoth screwtape at froup.com:
>
>> In a perfect world, I'd have block HTML elements on their own lines,
>> and inline HTML elements, well, inline. But since Woven spits out XML
>> rather than HTML, that'd be quite hacky to implement. :)
>
> Why would it be hacky?  HTML is naturally semantic, so it would be
> appropriate for twisted.web.woven.widgets to have a registry of
> elements and their default block display properties.  Woven could then
> have an option to "pretty-format" the output according to the display
> properties.

Woven widgets don't have anything to do with the display of the final 
html; they just manipulate the DOM. microdom is wholly responsible for 
turning this tree of objects into a string of characters.

However, this doesn't mean microdom can't do the same thing -- put 
inline HTML elements inline. Thanks for the idea, I'll implement it 
asap!

Donovan




From cce at clarkevans.com  Sun Jun  8 15:41:17 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 8 Jun 2003 19:41:17 +0000
Subject: [Twisted-Python] Concern over "relentless hyping" (was Twisted - howto transport megabytes?)
In-Reply-To: <3EE36889.B1259CFD@engcorp.com>
References: <3EE36889.B1259CFD@engcorp.com>
Message-ID: <20030608194117.GA3761@doublegemini.com>

Peter,

  I do not want to generalize.  However, I agree with the anonymous
  person involved.  In particular, your follow up post to Moshe's
  post didn't really add anything 'technical' to the discussion.  
  For your litmus test, I'd use this as the guideline: if it isn't
  responding to a technical issue (as Moshe did) and its not an 
  announcement then it probably does not help.   Anyway, hype is 
  best spread privately... beacuse then it carries credibility.
  Also, it's best to hype if you are only indirectly involved, for
  example, I can't hype YAML publicly.

Hope this helps.

Best,

Clark

On Sun, Jun 08, 2003 at 12:47:05PM -0400, Peter Hansen wrote:
| I received the following message in private (I assume) email after
| my last post to the newsgroup.  Comments are welcome, preferably
| public ones (merely because I consider private discussions about
| this kind of thing to be a severe waste of my limited time).
| 
| Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
| Is anyone over-hyping it?  Is there a maximum acceptable target level 
| of hype?
| 
| -Peter Hansen
| 
| -------- Original Message --------
| From: <name suppressed>
| Subject: Twisted - howto transport megabytes?
| To: peter at engcorp.com
| 
| In article <3EE35666.965E6369 at engcorp.com> you write:
| > I just realized something -- examples like yours and Moshe's 
| > answer show how elegant the Twisted solution can be.
| >
| > Questions like Ed's and answers like these are probably the best publicity 
| > Twisted can receive, if you're trying to attract new users.  ;-)
| 
| IMHO, if you're trying to attract experienced, multi-lingual programmers, 
| this relentless hyping is a little off-putting. (Well, _I_ find it
| off-putting.)
| 
| Cheers.
| <name suppressed>
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dalke at dalkescientific.com  Sun Jun  8 20:19:33 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 8 Jun 2003 18:19:33 -0600
Subject: [Twisted-Python] possible web server attacks
In-Reply-To: <84CEA432-94DA-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <0B872F1B-9A10-11D7-B9B9-000393C92466@dalkescientific.com>

There appears to be a trivial attack against the HTTP server.

The code doesn't restrict the number of header lines sent to the
server, so the following will do nasty things to it.

 >>> import socket
 >>> def go():
...  f=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
...  f.connect(("localhost", 8080))
...  f.send("GET / HTTP/1.0\r\n")
...  for i in range(1000000):
...   f.send("%s: X\r\n" % i)
...   if i%1000 == 0: print i
...
 >>> go()
  ....
 >>> go()
  ....

Keep going until the machine runs out of memory.  I didn't have
a machine I wanted to sacrifice for that, so I don't know if the
actual code will catch the MemoryError or not.  Even if not, an
attacker can bring the memory use right up to the limit, thus
preventing other actions from occuring.

There needs to be a limit to the total number of header lines read
(or, as with Apache, a limit to the total number of bytes read for
the header).

As was pointed out before when I brought this up, there is a limit
to the line size.  But that's not enough.

Also, this non-limit opens Twisted up to the hash collision attack
mentioned recently on python-dev.

BTW, I also note that Twisted passes non-ASCII characters to the log.
This can be used as an attack against some terminals.  Here's one
document describing the method

   http://www.digitaldefense.net/labs/papers/Termulation.txt

Twisted should do what Apache does and escape those characters.

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Sun Jun  8 20:35:49 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 8 Jun 2003 18:35:49 -0600
Subject: [Twisted-Python] typos
Message-ID: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>

The howto index page has typos
   http://www.twistedmatrix.com/documents/howto/

Woven
PicturePile, a Woven tutorial application.
Model in Depth
View in Depth
Controller in Depth
Form in Depth
Guard in Depth
LivePage
Page in Depth
Form in Depth   -- duplicate (and original doesn't have link)
Guard in Depth  -- duplicate (first has no link), and the URL
                       should be "depth" not "detph"


Dot Products
Names
Lore
Lore  -- should be "extending lore"


					Andrew




From alexander.winston at attbi.com  Sun Jun  8 21:32:50 2003
From: alexander.winston at attbi.com (Alexander Winston)
Date: Sun, 8 Jun 2003 20:32:50 -0500
Subject: [Twisted-Python] twisted.web.static.loadMimeTypes() patch
Message-ID: <20030609013250.GA2063@blue.24.125.118.3>

This patch is for twisted.web.static.loadMimeTypes().  It reads Python's built-in dictionary and updates its with a dictionary of our own (aka The Usual Suspects).  Support was added for reading/sourcing of an external file (the default being "/etc/mime.types"), which would update the aforementioned dictionary with the contents of the file.  The patch is attached to this E-mail.

----
Alexander Winston (Yeah.) <alexander.winston at attbi.com>
-------------- next part --------------
Index: Twisted/twisted/web/static.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/static.py,v
retrieving revision 1.92
diff -u -r1.92 static.py
--- Twisted/twisted/web/static.py	31 May 2003 05:42:42 -0000	1.92
+++ Twisted/twisted/web/static.py	8 Jun 2003 20:41:27 -0000
@@ -147,43 +147,48 @@
                           app.theApplication)
 
 
-def loadMimeTypes():
-    """Ugg, does this even need to exist anymore?  Stupid stdlib"""
+def loadMimeTypes(mimetypes_location='/etc/mime.types'):
+    '''Yay for mime(-type)s!'''
     import mimetypes
-    # let's try a few of the usual suspects...
-    contentTypes = {
-        ".css": "text/css",
-        ".exe": "application/x-executable",
-        ".flac": "audio/x-flac",
-        ".gif": "image/gif",
-        ".gtar": "application/x-gtar",
-        ".html": "text/html",
-        ".htm": "text/html",
-        ".java": "text/plain",
-        ".jpeg": "image/jpeg",
-        ".jpg": "image/jpeg",
-        ".lisp": "text/x-lisp",
-        ".mp3":  "audio/mpeg",
-        ".oz": "text/x-oz",
-        ".ogg": "application/x-ogg",
-        ".pdf": "application/x-pdf",
-        ".png": "image/png",
-        ".py": "text/plain",
-        ".swf": "application/x-shockwave-flash",
-        ".tar": "application/x-tar",
-        ".tgz": "application/x-gtar",
-        ".tif": "image/tiff",
-        ".tiff": "image/tiff",
-        ".txt": "text/plain",
-        ".wml": "text/vnd.wap.wml",
-        ".xul": "application/vnd.mozilla.xul+xml",
-        ".zip": "application/x-zip",
-        ".patch": "text/plain",
+    # Grab Python's built-in mimetypes dictionary.
+    contentTypes = mimetypes.types_map
+    # Update Python's dictionary with a few of our usual suspects.
+    contentTypes.update(
+        {
+            '.conf':  'text/plain',
+            '.css':   'text/css',
+            '.exe':   'application/x-executable',
+            '.flac':  'audio/x-flac',
+            '.gif':   'image/gif',
+            '.gtar':  'application/x-gtar',
+            '.html':  'text/html',
+            '.htm':   'text/html',
+            '.java':  'text/plain',
+            '.jpeg':  'image/jpeg',
+            '.jpg':   'image/jpeg',
+            '.lisp':  'text/x-lisp',
+            '.mp3':   'audio/mpeg',
+            '.ogg':   'application/ogg',
+            '.oz':    'text/x-oz',
+            '.patch': 'text/plain',
+            '.pdf':   'application/x-pdf',
+            '.png':   'image/png',
+            '.py':    'text/plain',
+            '.swf':   'application/x-shockwave-flash',
+            '.tar':   'application/x-tar',
+            '.tgz':   'application/x-gtar',
+            '.tif':   'image/tiff',
+            '.tiff':  'image/tiff',
+            '.txt':   'text/plain',
+            '.wml':   'text/vnd.wap.wml',
+            '.xul':   'application/vnd.mozilla.xul+xml',
+            '.zip':   'application/x-zip',
         }
-    upd = contentTypes.update
-    if os.path.exists("/etc/mime.types"):
-        upd(mimetypes.read_mime_types("/etc/mime.types"))
-
+    )
+    # Users can override these mime-types by loading them out of a system-wide
+    # configuration file (this defaults to "/etc/mime.types").
+    if os.path.exists(mimetypes_location):
+        contentTypes.update(mimetypes.read_mime_types(mimetypes_location))
     return contentTypes
 
 

From justin at gnubia.net  Mon Jun  9 03:55:05 2003
From: justin at gnubia.net (Justin Ryan)
Date: 09 Jun 2003 02:55:05 -0500
Subject: [Twisted-Python] How to use NameVirtualHost?
In-Reply-To: <200306061728.00870.arashi1@pd.jaring.my>
References: <200306061728.00870.arashi1@pd.jaring.my>
Message-ID: <1055145305.1231.34.camel@qutang.gnubian.org>

addHost appears to be expecting a twisted.web.resource instance, not a
string that points to a directory containing an .rpy which defines one.

So, it seems logical that you will need to find a way to import the
resource from the .rpy file.  Why not rename the index.rpy to
sitename.py, add the dir to sys.path, and import it?

On Fri, 2003-06-06 at 04:28, Mukhsein Johari wrote:
> Hi all,
> 
> What is the correct name for this class? In the source it's NameVirtualHost 
> but in the docs it's NamedVirtualHost. Also in the API docs it says:
> 
> addHost(self, name, resrc)
> 
> Add a host to this virtual host.
> This will take a host named `name', and map it to a resource `resrc'. For 
> example, a setup for our virtual hosts would be:
> 
>    nvh.addHost('divunal.com', divunalDirectory)
>    nvh.addHost('www.divunal.com', divunalDirectory)
>    nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)
>    nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)
> 
> 
> But what kind of object is divualDirectory (for example)? I tried to put 
> something like:
>  
> nvh.addHost('divunal.com', "/home/website/divunal.com/")
> 
> But I get an error:
> 'str' has no method getChildWithDefault!
> 
> In the dir /home/website/divunal.com/ there is an .rpy file index.rpy where a 
> resource is defined. Twisted web could not find it? I'm still confused about 
> how to properly use the vhost.* classes...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Mon Jun  9 04:55:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 9 Jun 2003 18:55:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>
References: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030609085545.GA11093@frobozz>

On Sun, Jun 08, 2003 at 06:35:49PM -0600, Andrew Dalke wrote:
> The howto index page has typos
>   http://www.twistedmatrix.com/documents/howto/

These were fixed in CVS a couple of weeks ago -- but thanks anyway!

-Andrew.




From Richard.Townsend at edl.uk.eds.com  Mon Jun  9 05:34:16 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 9 Jun 2003 10:34:16 +0100 
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports (G
 lyph Lefkowitz)
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E15E@EWHKA005>

> 
> You can specify keyword arguments to Application's constructor.
> 
> 	a = Application(uid=1001, gid=1001)
> 
> Then, call either the setUID or setEUID method of your Application 
> instance.  You will need to call bindPorts before calling these 
> methods, however.
> 

Hi Glyph,

I have now had a chance to test this on HP-UX11i and have discovered a
problem.

The code for Application.setUID() calls os.getgid() expecting it to return 0
for root. However, on HP-UX it returns 3.

# id
uid=0(root) gid=3(sys)
groups=0(root),1(other),2(bin),4(adm),5(daemon),6(mail),7(lp),20(users)

# /opt/python/bin/python          
Python 2.2.1 (#5, Jan 23 2003, 13:18:26) [C] on hp-ux11
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> os.getgid()
3

But:

>>> os.getgroups()
[3, 0, 1, 2, 4, 5, 6, 7, 20]

A possible solution would be:

    def setUID(self):
        """Retrieve persistent uid/gid pair (if possible) and set the
current process's uid/gid
        """
        if hasattr(os, 'getgroups'):
            if 0 in os.getgroups():
                os.setgid(self.gid)
                os.setuid(self.uid)
                log.msg('set uid/gid %s/%s' % (self.uid, self.gid))


Alternatively, you might use try/except & ignore OSError exceptions?

cheers,
Richard Townsend
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030609/c7eedc81/attachment.htm 

From miathan at goliath.darktech.org  Mon Jun  9 08:33:00 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Mon, 9 Jun 2003 14:33:00 +0200
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports (G
In-Reply-To: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>; from twisted-python-request@twistedmatrix.com on Mon, Jun 09, 2003 at 13:38:10 +0200
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20030609123300.GC29930@mercury.local.net>

> I have now had a chance to test this on HP-UX11i and have discovered a
> problem.
> 
> The code for Application.setUID() calls os.getgid() expecting it to
> return 0

Why on earth would you want to check or enforce someone is in group 0? 
Being in group 0 doesn't have any 'magic' like uid 0 has, well, it 
might have on some operating systems, but it's not a portable way.

Some unices don't even have a special *user* ID 0 but have security 
based on process privileges. You shouldn't assume setuid or setgid to 
fail/succeed based on those numbers.

IMO the best way is to just try to setuid/setgid if requested, if it is 
not allowed you'll get an EPERM soon enough anyway.

Wladimir



From justinjohnson at fastmail.fm  Mon Jun  9 09:39:41 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 09 Jun 2003 07:39:41 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>
References: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <20030609133941.7E7723335D@www.fastmail.fm>

FYI-

I ended up using the SimpleXMLRPCServer from python and adding the
necessary code to do http auth.  Posted my code to the python-list. 
However, if the functionality is added to cred at a later date, I'd love
to use it.

Thanks for the info.
-Justin

On Sun, 8 Jun 2003 00:29:28 -0400, "Glyph Lefkowitz"
<glyph at twistedmatrix.com> said:
> 
> On Saturday, June 7, 2003, at 09:00 PM, Itamar Shtull-Trauring wrote:
> 
> > As with most high-level libraries in twisted, it's totally optional. It
> > does give you a nice pluggable backend, so you can use same auth
> > database for all Twisted apps. That's the theory. It might even be true
> > if we manage to rewrite cred this month :)
> 
> This is actually pretty likely.  I need cred implemented for LOTS of 
> reasons this month.
> 
> > No, like I said, that does form based authentication. You'd want a
> > twisted.web.fuard.HTTPAuthResourceGuard. If you write one and 
> > contribute
> > it we can include it.
> 
> What I'd really like is the ability to configure a guard to use HTTP 
> auth depending on certain parameters, such as the user-agent.  For 
> example, a site which traditionally uses form-based authentication with 
> interactive browsers still might be better-suited to HTTP auth when one 
> is fetching a file with wget.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From abe at fettig.net  Mon Jun  9 13:35:56 2003
From: abe at fettig.net (Abe Fettig)
Date: 09 Jun 2003 13:35:56 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big
 files)
In-Reply-To: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <1055180156.11822.32.camel@mingus>

On Sun, 2003-06-08 at 00:26, Glyph Lefkowitz wrote:
> On Saturday, June 7, 2003, at 09:25 PM, Abe Fettig wrote:
> 
> > [look of horror on my face]
> 
> You and me both :)
> 
> > The web code in Hep 0.3.2 was crudely ported to Twisted from existing
> > asyncore-based code.  It should _not_ be viewed as an example of good
> > Twisted practices.  And, for that matter, neither should the web code 
> > in
> > Hep CVS :-).
> 
> We're always around, here and on IRC, if you need help to get things 
> better in-sync with Twisted "best practices".
> 
> Hep is a pretty interesting project, so it will likely attract this 
> kind of attention in the future as well.  We both have an interest in 
> seeing it more in-sync with the overall Twisted vibe, I think.

Agreed.  When I first started moving Hep to Twisted I hadn't yet come to
terms with the "framework, not a library" philosophy, and I didn't use
much beyond t.i.protocols.  But now I'm comfortable enough with Twisted
that I'm willing to make Hep a full-blown Twisted Application, and do
things the Twisted Way whenever possible.

That said, here are the areas that I know of where Hep doesn't do things
the Twisted way, and my thoughts on how to fix it.  Comments and
suggestions are welcome.

* The application: Hep should be a .tap-able twisted plugin.  At the
moment it's not.  This is assuming that it's possible to create a plugin
that combines multiple kinds of servers (http, pop3, imap, etc) into a
single application.  Also I believe that if I was using a twisted
Application object there would be some kind of official Twisted way to
share objects between my different servers.  It's been a while since I
read the plugin docs.  I'll do so soon.

* The web server: The current code is Hep CVS is an excellent example of
what happens when you write Twisted.web code without understanding how
Resources work.  Please refrain from commenting on just how bad it is - 
I started rewriting the web interface in Woven this weekend, so this
should be fixed soon :-)

* Users and authentication:  I have a vague idea that I should be using
Perspectives and/or Cred for authenticating users and accessing user
data.  Currently each server in Hep does the work of authentication and
setting up user access.  It would be nice to have this centralized, so
you could (for example) see which users are currently connected to Hep.

* The SMTP server: Currently going through a rewrite in CVS.  I need to
set up code to manage the outgoing message queue, and keep track of
which messages have been delivered to which locations.  Is there code in
twisted.mail to do this? (Keep in mind some messages are being delivered
to blogs and other non-SMTP locations)

I think that just about covers it... Thoughts?

Abe




From dalke at dalkescientific.com  Mon Jun  9 13:37:36 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 9 Jun 2003 11:37:36 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030609085545.GA11093@frobozz>
Message-ID: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>

Andrew Bennetts:
> These were fixed in CVS a couple of weeks ago -- but thanks anyway!
>

Any thoughts of either updating the online docs more frequently or
making a "development" section of the site, like what Python does?
(It has docs for the current release and docs for the most recent
CVS version.)

					Andrew
					dalke at dalkescientific.com




From m at moshez.org  Mon Jun  9 14:32:15 2003
From: m at moshez.org (Moshe Zadka)
Date: 9 Jun 2003 18:32:15 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big
 files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
References: <1055180156.11822.32.camel@mingus>, <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <20030609183215.15716.qmail@green.zadka.com>

On 09 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> * The application: Hep should be a .tap-able twisted plugin.  At the
> moment it's not.  This is assuming that it's possible to create a plugin
> that combines multiple kinds of servers (http, pop3, imap, etc) into a
> single application.  Also I believe that if I was using a twisted
> Application object there would be some kind of official Twisted way to
> share objects between my different servers.  It's been a while since I
> read the plugin docs.  I'll do so soon.

The bottom line: it should be dead easy. I recommend also reading
the "application" document. Also, there's no documentation for
ApplicationService, but there are lots of time where ApplicationServices
are the correct way to share information between services. The source
(and the API reference) is the best documentation here. Of course,
as always, more documentation would be appreciated.
 
> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code in
> twisted.mail to do this? (Keep in mind some messages are being delivered
> to blogs and other non-SMTP locations)

twisted.mail is also going a rewrite, so I'd wait for Jp to comment.
Note that again, ApplicationService may be a nice thing here, especially
if it's data that you *could* recover from the messages themselves on
startup. Otherwise, it is better to look into some safer persistence
strategy such as dirdbm or world (although world is fairly unstable).

Bottom line: put configuration data in the Application, share configuration
between multiple servers via ApplicationServices, put non-critical data
in ApplicationServices and critical data in safer formats like databases.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From grib at billgribble.com  Mon Jun  9 16:01:05 2003
From: grib at billgribble.com (Bill Gribble)
Date: 09 Jun 2003 15:01:05 -0500
Subject: [Twisted-Python] 5 small patches
Message-ID: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>

Here are some small patches I have made while working with Twisted
recently.  They are all harmless with the possible exception of #4.

(1) gtk2 manhole problem.  I got backtraces upon connecting to a
    manholed app.  This fixes them. 

Index: twisted/manhole/ui/gtk2manhole.py
===================================================================
RCS file: /cvs/Twisted/twisted/manhole/ui/gtk2manhole.py,v
retrieving revision 1.7
diff -r1.7 gtk2manhole.py
245c245
<             if isinstance(content, StringTypes):
---
>             if isinstance(content, types.StringTypes):


(2) Found this while grepping for the source of the gtk2 manhole
    problem.  It's the same problem. 

Index: twisted/internet/app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.96
diff -r1.96 app.py
415c415
<             if isinstance(port, StringTypes):
---
>             if isinstance(port, types.StringTypes):

(3) Fix Woven's string escaping for generation of JavaScript to be
    evaluated in LivePages.  This is pretty important; things like 
    <textarea> and <pre> content were mangled by the old code. 

Index: twisted/web/woven/controller.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/controller.py,v
retrieving revision 1.60
diff -r1.60 controller.py
368,369d367
<             nodeXML = nodeXML.replace('\n', '')
<             nodeXML = nodeXML.replace('\r', '')
371a370,378
>             nodeXML = nodeXML.replace('"', '\\"')
>             nodeXML = nodeXML.replace('\n', '\\n')
>             nodeXML = nodeXML.replace('\r', ' ')
>             nodeXML = nodeXML.replace('\b', ' ')
>             nodeXML = nodeXML.replace('\t', ' ')
>             nodeXML = nodeXML.replace('\000', ' ')
>             nodeXML = nodeXML.replace('\v', ' ')
>             nodeXML = nodeXML.replace('\f', ' ')
>

(4) Patch to Woven's Guard for setting up sessions in LivePages.  I'm
    not 100% sure about this one, but it works for me.  I have attached
a 
    simple demonstration that fails under CVS but (I believe) should
work. 

Index: twisted/web/woven/guard.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/guard.py,v
retrieving revision 1.17
diff -r1.17 guard.py
209,210c209,211
<             request.getSession = lambda interface=None: None
<             return self.resource.getChildWithDefault(path, request)
---
>             #request.getSession = lambda interface=None: None
>             #return self.resource.getChildWithDefault(path, request)
>             return Redirect(request.pathRef().fullURL(request) +
INIT_SESSION)

(5) Add a "template=" keyword arg to LivePage constructor.  This is
patterned
    after the existing code in Page. 

Index: twisted/web/woven/page.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/page.py,v
retrieving revision 1.21
diff -r1.21 page.py
76,78c76,80
<     def __init__(self, m=None, templateFile=None, inputhandlers=None,
templateDirectory=None,
<                  controllers=None, *args, **kwargs):
<         model.Model.__init__(self, *args, **kwargs)
---
>     def __init__(self, m=None, templateFile=None, inputhandlers=None,
>                  templateDirectory=None, controllers=None, *args,
**kwargs):
>         template = kwargs.setdefault('template', None)
>         del kwargs['template']
>
82a85
>
88c91,93
<                            templateFile=templateFile,
templateDirectory=templateDirectory)
---
>                            templateFile=templateFile,
>                            templateDirectory=templateDirectory,
>                            template=template)
90a96
>



-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch-4-demo.tgz
Type: application/x-compressed-tar
Size: 436 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030609/fb0e832e/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030609/fb0e832e/attachment.pgp 

From radix at twistedmatrix.com  Sat Jun  7 07:54:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 7 Jun 2003 07:54:10 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>; from 2002@weholt.org on Sat, Jun 07, 2003 at 07:05:17 -0400
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607115410.GC27054@toshi.anaprd01.md.comcast.net>

On 2003.06.07 07:05, Thomas Weholt wrote:
> My code hangs when the request is for big files. Smaller ones like JPEGs
> etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
> chewing up memory. The files are stored in a folder called wwwroot in the
> same folder as the source file. I'm using Twisted 1.0.5.

Why aren't you using the static.File resource? Subclassing Request is the 
wrong (and a *horrible*) way to write custom web code, to say nothing about
the fact that you're reimplementing what twisted already supports (non-blocking
file transfer support in twisted.web.static.File).

Anyway, the reason that this code is broken is probably because it repeatedly
does blocking reads until the entire file is read. 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From jml at ids.org.au  Tue Jun 10 05:42:06 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Tue, 10 Jun 2003 19:42:06 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030609085545.GA11093@frobozz> <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030610094206.GC24830@mumak.net>

On Mon, Jun 09, 2003 at 11:37:36AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >These were fixed in CVS a couple of weeks ago -- but thanks anyway!
> >
> 
> Any thoughts of either updating the online docs more frequently or
> making a "development" section of the site, like what Python does?

I think it's an excellent idea to have the CVS docs available on the
website. (i.e. outside of viewcvs)

Generating them on commit might be a problem, as the API doc creation
process is quite resource-consuming.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030610/30506467/attachment.pgp 

From cliechti at gmx.net  Mon Jun  9 19:49:33 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Tue, 10 Jun 2003 01:49:33 +0200
Subject: [Twisted-Python] comments about twisted.trial.unittest
Message-ID: <3EE51D0D.8080007@gmx.net>

you claim compatibility with pythons unittest from the stdlib, hm... i 
see some differences ;-)

i like to have a

if __name__ == '__main__':
     unittest.main()

in my test_*.py files, this does not work with twisteds unittest.
i have to use the following snippet:

if __name__ == '__main__':
     import sys
     from twisted.scripts import trial
     sys.argv.extend(['-f', sys.argv[0]])
     trial.run()

sugestion, why not adding the following func (or something better, that 
does not fiddle with sys.argv) to twisted.trial.unittest?

def main():
     import sys
     from twisted.scripts import trial
     sys.argv.extend(['-f', sys.argv[0]])
     trial.run()

also i like to run my tests with "-v" (verbose) but unfortunately does 
twisted output garbage in that case.. (i know, it's ANSI colors but i'm 
on Win32... :-(
either you should check for the terminal capabilities (however that 
works on win32...) or maybe check sys.platform (altough that's bad for 
portability) or easier, exchange the meanings of '-o' and '-v', making 
the bwoutput default for "-v" and use an other option for the nice 
colored output.

chris




From exarkun at intarweb.us  Mon Jun  9 20:10:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 9 Jun 2003 20:10:21 -0400
Subject: [Twisted-Python] 5 small patches
In-Reply-To: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>
References: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030610001021.GA29128@meson.dyndns.org>

On Mon, Jun 09, 2003 at 03:01:05PM -0500, Bill Gribble wrote:
> Here are some small patches I have made while working with Twisted
> recently.  They are all harmless with the possible exception of #4.
> 
> (1) gtk2 manhole problem.  I got backtraces upon connecting to a
>     manholed app.  This fixes them. 
> 
> (2) Found this while grepping for the source of the gtk2 manhole
>     problem.  It's the same problem. 
> 

  Thanks, these two fixes are now in CVS.

  Jp

-- 
No, `Eureka' is Greek for `This bath is too hot.'
                -- Dr. Who
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030609/0da613b9/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Jun  9 20:47:28 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 10:47:28 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030609085545.GA11093@frobozz> <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030610004728.GB14842@frobozz>

On Mon, Jun 09, 2003 at 11:37:36AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >These were fixed in CVS a couple of weeks ago -- but thanks anyway!
> 
> Any thoughts of either updating the online docs more frequently or
> making a "development" section of the site, like what Python does?
> (It has docs for the current release and docs for the most recent
> CVS version.)

I agree; this is an excellent idea.  Far too often we've said "but the docs
in the next release will be much better, so get CVS or wait for 1.0.xx"...

I think it would be too much effort to update the API docs automatically;
epydoc takes something like an hour to process all of Twisted (although
potentially this could be done nightly?).  I'd be happy to just see a
twistedmatrix.com/documents/dev/howto, mirroring the way python.org does it.

Who is the right person to pester to get this set up?  :)

-Andrew.




From glyph at twistedmatrix.com  Mon Jun  9 20:56:20 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jun 2003 20:56:20 -0400
Subject: [Twisted-Python] typos
In-Reply-To: <20030610004728.GB14842@frobozz>
Message-ID: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Monday, June 9, 2003, at 08:47 PM, Andrew Bennetts wrote:

> I agree; this is an excellent idea.  Far too often we've said "but the 
> docs
> in the next release will be much better, so get CVS or wait for 
> 1.0.xx"...

I disagree.  We say this about functionality as well, and CVS docs 
should have parity with CVS code, not released code.  (In other words - 
if you want CVS docs, download CVS code.)  The real problem is that we 
don't release often enough - we should be fixing that, not applying 
band-aids.

> I think it would be too much effort to update the API docs 
> automatically;

I do agree here.  This creates useless friction.  We should probably 
have another pass at automating release-oriented tasks, or at least 
documenting the procedure better.  doc/howto/release looks pretty dusty.




From glyph at twistedmatrix.com  Mon Jun  9 21:07:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jun 2003 21:07:39 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
Message-ID: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Monday, June 9, 2003, at 01:35 PM, Abe Fettig wrote:

> Agreed.  When I first started moving Hep to Twisted I hadn't yet come 
> to
> terms with the "framework, not a library" philosophy, and I didn't use
> much beyond t.i.protocols.  But now I'm comfortable enough with Twisted
> that I'm willing to make Hep a full-blown Twisted Application, and do
> things the Twisted Way whenever possible.

Great to hear it!

> That said, here are the areas that I know of where Hep doesn't do 
> things
> the Twisted way, and my thoughts on how to fix it.  Comments and
> suggestions are welcome.

I'll try to give you a brief survey.

> * The application: Hep should be a .tap-able twisted plugin.

As Moshe says, this should be super-easy.  Not much more to say here.

> * The web server: The current code is Hep CVS is an excellent example 
> of
> what happens when you write Twisted.web code without understanding how
> Resources work.

Yup.  That seems to be the case.

> Please refrain from commenting on just how bad it is -

Sorry, couldn't resist.

OMG IT IS SO BAD LOLOLOLOL

> I started rewriting the web interface in Woven this weekend, so this
> should be fixed soon :-)

Cool.  Much as it's improved, Woven needs more deployments to help it 
with polish :-)

> * Users and authentication:  I have a vague idea that I should be using
> Perspectives and/or Cred for authenticating users and accessing user
> data.  Currently each server in Hep does the work of authentication and
> setting up user access.  It would be nice to have this centralized, so
> you could (for example) see which users are currently connected to Hep.

Itamar and my aforementioned rewrite will help you with this.  Stall 
this a few weeks, and there should be good documentation on how to do 
it.

> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code 
> in
> twisted.mail to do this? (Keep in mind some messages are being 
> delivered
> to blogs and other non-SMTP locations)

I need to rewrite twisted.words to accomodate use-cases like this at 
some point; however, it keeps falling off the end of my queue.  It 
certainly wouldn't be a good idea to wait for me to come up with that, 
but in a few months we should re-group and see if we can refactor the 
code that we've both written into some generally useful core 
abstraction.

> I think that just about covers it... Thoughts?

Sounds like a good laundry list.  I would be interested to know where 
and if you hit any snags, even if you get past them on your own - I'd 
love to see a paper or something about this.  It would really be nice 
to show to other application authors who are struggling with the same 
sort of issues.  I even have a tentative title - "Submitting to the 
hive mind for fun and profit - making your project Twisted-friendly 
even though you don't want to".  What do you think? :)




From andrep at flow.com.au  Mon Jun  9 23:29:28 2003
From: andrep at flow.com.au (Andre Perry)
Date: 10 Jun 2003 13:29:28 +1000
Subject: [Twisted-Python] mktap searchpath
Message-ID: <1055215768.6094.7.camel@laptop.lanvise.com>

When calling mktap with a twisted dir in the current directory the real
twisted dir is not searched for plugins.tml.  The twisted dir in the
current directory does not contain a plugins.tml file.

Is this the desired behaviour or a bug?

$ pwd ; mktap -d
/home/splack
Debug:  Looking for plugin.tml files
Debug:  Looking for plugin.tml files
Debug:  Recursing through /home/splack
['bin', 'Mail', 'work', 'twisted', 'xml-rpc-todo', 'evolution',
'zzexpensce', 'ldap-restore']
Debug:  Failed /home/splack/bin/plugins.tml
Debug:  Failed /home/splack/Mail/plugins.tml
Debug:  Failed /home/splack/work/plugins.tml
Debug:  Failed /home/splack/twisted/plugins.tml
Debug:  Failed /home/splack/xml-rpc-todo/plugins.tml
Debug:  Failed /home/splack/evolution/plugins.tml
Debug:  Failed /home/splack/zzexpensce/plugins.tml
Debug:  Failed /home/splack/ldap-restore/plugins.tml
Debug:  Recursing through /usr/lib/python2.2
['xml', 'test', 'lib-dynload', 'email', 'distutils', 'lib-old',
'encodings', 'config', 'curses', 'compiler', 'lib-tk', 'site-packages',
'plat-linux2', 'hotshot']
Debug:  Failed /usr/lib/python2.2/xml/plugins.tml
Debug:  Failed /usr/lib/python2.2/test/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-dynload/plugins.tml
Debug:  Failed /usr/lib/python2.2/email/plugins.tml
Debug:  Failed /usr/lib/python2.2/distutils/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-old/plugins.tml
Debug:  Failed /usr/lib/python2.2/encodings/plugins.tml
Debug:  Failed /usr/lib/python2.2/config/plugins.tml
Debug:  Failed /usr/lib/python2.2/curses/plugins.tml
Debug:  Failed /usr/lib/python2.2/compiler/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-tk/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/plugins.tml
Debug:  Failed /usr/lib/python2.2/plat-linux2/plugins.tml
Debug:  Failed /usr/lib/python2.2/hotshot/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/plat-linux2
['regen']
Debug:  Failed /usr/lib/python2.2/plat-linux2/regen/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/lib-tk
Debug:  Recursing through /usr/lib/python2.2/lib-dynload
Debug:  Recursing through /usr/local/lib/python2.2/site-packages
['gstreamer']
Debug:  Failed
/usr/local/lib/python2.2/site-packages/gstreamer/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/site-packages
['PIL', 'ZSI', 'ogg', 'TMDA', 'ldap', 'Crypto', 'optik', 'README',
'ldaptor', '_xmlplus', 'offlineimap', 'wxPython', 'epydoc', 'twisted',
'Gnuplot']
Debug:  Failed /usr/lib/python2.2/site-packages/PIL/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ZSI/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ogg/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/TMDA/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ldap/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/Crypto/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/optik/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/README/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ldaptor/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/_xmlplus/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/offlineimap/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/wxPython/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/epydoc/plugins.tml
Debug:  Seen twisted already
Debug:  Failed /usr/lib/python2.2/site-packages/Gnuplot/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/site-packages/gtk-1.2
['pyglade', 'gnome']
Debug:  Failed
/usr/lib/python2.2/site-packages/gtk-1.2/pyglade/plugins.tml
Debug:  Failed
/usr/lib/python2.2/site-packages/gtk-1.2/gnome/plugins.tml
Debug:  Recursing through /usr/lib/site-python
Couldn't load the plugins file!







From jml at ids.org.au  Tue Jun 10 11:17:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Wed, 11 Jun 2003 01:17:17 +1000
Subject: [Twisted-Python] Suggestion: Test Drive
Message-ID: <20030610151717.GD24830@mumak.net>


A suggestion in response to the ever-present demand for more tests.

I've heard rumours that other open-source applications often have bug-fixing
initiatives, or similar, where lots of people are encouraged to fix as many
bugs as possible over a short period of time (a weekend or something).

Perhaps we could do the same, but with tests instead? Have a weekend where
people write as many tests as possible. 

It's a thought anyway. I'll probably do something like this individually
regardless of community concensus.

[it'll give us an opportunity to work out that todo feature, too ;-)]

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/7822cfa2/attachment.pgp 

From andrew-twisted at puzzling.org  Tue Jun 10 00:07:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 14:07:13 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <20030610004728.GB14842@frobozz> <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <20030610040713.GD14842@frobozz>

On Mon, Jun 09, 2003 at 08:56:20PM -0400, Glyph Lefkowitz wrote:
> 
> On Monday, June 9, 2003, at 08:47 PM, Andrew Bennetts wrote:
> 
> >I agree; this is an excellent idea.  Far too often we've said "but the
> >docs in the next release will be much better, so get CVS or wait for
> >1.0.xx"...
> 
> I disagree.  We say this about functionality as well, and CVS docs 
> should have parity with CVS code, not released code.  (In other words - 
> if you want CVS docs, download CVS code.)  The real problem is that we 
> don't release often enough - we should be fixing that, not applying 
> band-aids.

I'll happily settle for more frequent releases :)

-Andrew.




From exarkun at intarweb.us  Tue Jun 10 01:15:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 10 Jun 2003 01:15:54 -0400
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <1055215768.6094.7.camel@laptop.lanvise.com>
References: <1055215768.6094.7.camel@laptop.lanvise.com>
Message-ID: <20030610051554.GA29706@meson.dyndns.org>

On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> When calling mktap with a twisted dir in the current directory the real
> twisted dir is not searched for plugins.tml.  The twisted dir in the
> current directory does not contain a plugins.tml file.
> 
> Is this the desired behaviour or a bug?

  This is the desired behavior.  You cannot have them both searched, or you
will end up with doubly registered plugins, each of which refer to whatever
modules come first in the python import search path -- which means we should
pick up the information from whichever plugins.tml file we find first too,
and ignore anything found later.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030610/3046994a/attachment.pgp 

From dalke at dalkescientific.com  Tue Jun 10 01:43:05 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 9 Jun 2003 23:43:05 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>

Glyph:
> I disagree.  We say this about functionality as well, and CVS docs 
> should have parity with CVS code, not released code.  (In other words 
> - if you want CVS docs, download CVS code.)  The real problem is that 
> we don't release often enough - we should be fixing that, not applying 
> band-aids.

My main development platform is Python 2.3, and has been since the 
beginning of the
year.  I've helped find several Python problems this way.  But I use 
the on-line docs
for Python, and not the local copy - even though I have a copy of all 
the docs from
CVS.

Others said the doc build takes an hour.  I would rather not learn how 
to do that
myself, if for no other reason then that after I do a CVS update I 
don't want to
wait an hour to read the new docs.

I can't see that a cron job, run once every day or so, can be that 
hard.  If it is
hard, then it means building the docs is too hard, and yet that's 
something you
want me to do myself as a Twisted novice?

					Andrew
					dalke at dalkescientific.com




From abe at fettig.net  Tue Jun 10 01:54:43 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 01:54:43 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030609183215.15716.qmail@green.zadka.com>
References: <1055180156.11822.32.camel@mingus>
	 , <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <20030609183215.15716.qmail@green.zadka.com>
Message-ID: <1055224483.13587.21.camel@mingus>

On Mon, 2003-06-09 at 14:32, Moshe Zadka wrote:
> On 09 Jun 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > * The application: Hep should be a .tap-able twisted plugin.  At the
> > moment it's not.  This is assuming that it's possible to create a plugin
> > that combines multiple kinds of servers (http, pop3, imap, etc) into a
> > single application.  Also I believe that if I was using a twisted
> > Application object there would be some kind of official Twisted way to
> > share objects between my different servers.  It's been a while since I
> > read the plugin docs.  I'll do so soon.
> 
> The bottom line: it should be dead easy. I recommend also reading
> the "application" document. Also, there's no documentation for
> ApplicationService, but there are lots of time where ApplicationServices
> are the correct way to share information between services. The source
> (and the API reference) is the best documentation here. Of course,
> as always, more documentation would be appreciated.

I just spent some time looking playing with t.i.app. If I understand it
correctly, you run a bunch of services, each of which provides certain
functionality, and all of the services get registered with the
application.  So each service can access any of the other services like
so:

otherService = self.serviceParent.getServiceByName('otherService')

This is a really natural fit for Hep and looks easy as pie to
implement.  One question, though.  Say I run a server by creating a
Factory and running application.listenTCP(myFactory, port).  What's the
preferred way to access services from inside that Factory?

> twisted.mail is also going a rewrite, so I'd wait for Jp to comment.

Ok, I'll wait for Jp :)

> Note that again, ApplicationService may be a nice thing here, especially
> if it's data that you *could* recover from the messages themselves on
> startup. Otherwise, it is better to look into some safer persistence
> strategy such as dirdbm or world (although world is fairly unstable).
> 
> Bottom line: put configuration data in the Application, share configuration
> between multiple servers via ApplicationServices, put non-critical data
> in ApplicationServices and critical data in safer formats like databases.

The only variable that I think I'd want to maintain in the Application
is the location of it's data directory.  That way when the app starts it
knows where to look to find messages, user prefs, etc, and I can ditch
the hep.ini file.

Abe




From andrew-twisted at puzzling.org  Tue Jun 10 01:56:44 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 15:56:44 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
References: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com> <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610055644.GE14842@frobozz>

On Mon, Jun 09, 2003 at 11:43:05PM -0600, Andrew Dalke wrote:
> 
> Others said the doc build takes an hour.  I would rather not learn how to
> do that myself, if for no other reason then that after I do a CVS update I
> don't want to wait an hour to read the new docs.

The API doc build takes an hour; that's the heavily cross-linked docs
autogenerated from our docstrings that you can browse at
    http://twistedmatrix.com/documents/TwistedDocs/current/api/

If you're using CVS, you may as well just read the code directly rather than
use the API docs.

The "Howto" documents can be built quite quickly using admin/process-docs,
but this script does assume you have a latex and things installed for the PS
and PDF generation.

To just build the HTML docs from Lore source (which is generally fairly
readable in a web browser anyway), do:

    lore --config template=doc/howto/template.tpl \
         --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/public/%s.html \
         -l ../howto/ doc/howto/*.html

(You can omit the baseurl part if you don't mind the links to the API docs
being broken.)

Building just the HTML docs should only take about a minute.

-Andrew.




From itamar at itamarst.org  Tue Jun 10 01:55:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 01:55:03 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
 when serving big files)
In-Reply-To: <1055224483.13587.21.camel@mingus>
References: <1055180156.11822.32.camel@mingus>
	<6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	<20030609183215.15716.qmail@green.zadka.com>
	<1055224483.13587.21.camel@mingus>
Message-ID: <20030610015503.646ce8d3.itamar@itamarst.org>

On 10 Jun 2003 01:54:43 -0400
Abe Fettig <abe at fettig.net> wrote:

> This is a really natural fit for Hep and looks easy as pie to
> implement.  One question, though.  Say I run a server by creating a
> Factory and running application.listenTCP(myFactory, port).  What's
> the preferred way to access services from inside that Factory?

Pass a reference to the service when creating factory? Or even, have
service manage the factory, calling reactor.listenTCP in its
startService.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Jun 10 02:07:26 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:07:26 +1000
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610051554.GA29706@meson.dyndns.org>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org>
Message-ID: <20030610060726.GF14842@frobozz>

On Tue, Jun 10, 2003 at 01:15:54AM -0400, Jp Calderone wrote:
> On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> > When calling mktap with a twisted dir in the current directory the real
> > twisted dir is not searched for plugins.tml.  The twisted dir in the
> > current directory does not contain a plugins.tml file.
> > 
> > Is this the desired behaviour or a bug?
> 
>   This is the desired behavior.  You cannot have them both searched, or you
> will end up with doubly registered plugins, each of which refer to whatever
> modules come first in the python import search path -- which means we should
> pick up the information from whichever plugins.tml file we find first too,
> and ignore anything found later.

You're assuming his ~/twisted directory contains the Twisted source, rather
than just being a directory with random stuff in it.  If that directory
contained a __init__.py file, then it would be a Python package and
presumably Python would then be unable to import the real Twisted, so that's
not a problem with mktap.  But if the directory *doesn't* contain
__init__.py, then there's no ambiguity in Python's import search path, but
mktap still will check ~/twisted for plugins.tml, but not
os.path.basename(twisted.__file__).

So mktap will treat the search path differently to Python's import
mechanisms, at least in the case where a directory has a name that conflicts
with a later python package, but doesn't have an __init__.py.

This smells like a bug to me, but I could be wrong.

-Andrew.




From abe at fettig.net  Tue Jun 10 02:18:07 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 02:18:07 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <1055225886.13586.42.camel@mingus>

On Mon, 2003-06-09 at 21:07, Glyph Lefkowitz wrote:
> On Monday, June 9, 2003, at 01:35 PM, Abe Fettig wrote:
> > * The web server: The current code is Hep CVS is an excellent example 
> > of
> > what happens when you write Twisted.web code without understanding how
> > Resources work.
> 
> Yup.  That seems to be the case.
> 
> > Please refrain from commenting on just how bad it is -
> 
> Sorry, couldn't resist.
> 
> OMG IT IS SO BAD LOLOLOLOL

Actually it feels good to get that out of the way... :)

> > * Users and authentication:  I have a vague idea that I should be using
> > Perspectives and/or Cred for authenticating users and accessing user
> > data.  Currently each server in Hep does the work of authentication and
> > setting up user access.  It would be nice to have this centralized, so
> > you could (for example) see which users are currently connected to Hep.
> 
> Itamar and my aforementioned rewrite will help you with this.  Stall 
> this a few weeks, and there should be good documentation on how to do 
> it.

OK, I'll leave the authentication stuff as-is for now, besides maybe
putting it into a simple service.

> Sounds like a good laundry list.  I would be interested to know where 
> and if you hit any snags, even if you get past them on your own - I'd 
> love to see a paper or something about this.  It would really be nice 
> to show to other application authors who are struggling with the same 
> sort of issues.  I even have a tentative title - "Submitting to the 
> hive mind for fun and profit - making your project Twisted-friendly 
> even though you don't want to".  What do you think? :)

That sounds like an excellent idea.  I'll try to post frequently to my
weblog throughout this process, in hopes it will be useful to others
down the road.

Abe




From exarkun at intarweb.us  Tue Jun 10 02:25:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 10 Jun 2003 02:25:05 -0400
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610060726.GF14842@frobozz>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org> <20030610060726.GF14842@frobozz>
Message-ID: <20030610062505.GA30045@meson.dyndns.org>

On Tue, Jun 10, 2003 at 04:07:26PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 10, 2003 at 01:15:54AM -0400, Jp Calderone wrote:
> > On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> > > When calling mktap with a twisted dir in the current directory the real
> > > twisted dir is not searched for plugins.tml.  The twisted dir in the
> > > current directory does not contain a plugins.tml file.
> > > 
> > > Is this the desired behaviour or a bug?
> > 
> >   This is the desired behavior.  You cannot have them both searched, or you
> > will end up with doubly registered plugins, each of which refer to whatever
> > modules come first in the python import search path -- which means we should
> > pick up the information from whichever plugins.tml file we find first too,
> > and ignore anything found later.
> 
> You're assuming his ~/twisted directory contains the Twisted source, rather
> than just being a directory with random stuff in it.  If that directory
> contained a __init__.py file, then it would be a Python package and
> presumably Python would then be unable to import the real Twisted, so that's
> not a problem with mktap.  But if the directory *doesn't* contain
> __init__.py, then there's no ambiguity in Python's import search path, but
> mktap still will check ~/twisted for plugins.tml, but not
> os.path.basename(twisted.__file__).
> 
> So mktap will treat the search path differently to Python's import
> mechanisms, at least in the case where a directory has a name that conflicts
> with a later python package, but doesn't have an __init__.py.
> 
> This smells like a bug to me, but I could be wrong.
> 

  Close -- the directory won't be added to the seen-directory-cache unless
it also contains a file named "plugins.tml".  It is true that it is added to
this cache even if it does not contain __init__.py.  This is to keep it from
taking one hundred million years to run (if it checked to see if it was a
package in Python's eyes, it would need to do between 1 and 6 extra
os.path.exists() calls: utterly unacceptable in terms of performance).

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030610/727e5f57/attachment.pgp 

From andrew-twisted at puzzling.org  Tue Jun 10 02:37:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:37:03 +1000
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610062505.GA30045@meson.dyndns.org>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org> <20030610060726.GF14842@frobozz> <20030610062505.GA30045@meson.dyndns.org>
Message-ID: <20030610063703.GG14842@frobozz>

On Tue, Jun 10, 2003 at 02:25:05AM -0400, Jp Calderone wrote:
> On Tue, Jun 10, 2003 at 04:07:26PM +1000, Andrew Bennetts wrote:
> > 
> > So mktap will treat the search path differently to Python's import
> > mechanisms, at least in the case where a directory has a name that conflicts
> > with a later python package, but doesn't have an __init__.py.
> > 
> > This smells like a bug to me, but I could be wrong.
> 
>   Close -- the directory won't be added to the seen-directory-cache unless
> it also contains a file named "plugins.tml".  It is true that it is added to

But the ~/twisted directory didn't contain a plugins.tml -- from Andre's
mktap output:

    Debug:  Failed /home/splack/twisted/plugins.tml

-Andrew.




From m at moshez.org  Tue Jun 10 02:41:00 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:41:00 -0000
Subject: [Twisted-Python] typos
References: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610064100.25604.qmail@green.zadka.com>

On Mon, 9 Jun 2003, Andrew Dalke <dalke at dalkescientific.com> wrote:

> Others said the doc build takes an hour.

It shouldn't, on a sane machine. It takes about several minutes.
Of course, you only need to rebuild the docs when you want to,
not after every CVS update.

> I would rather not learn how to do that
> myself

I won't give you that option.
% ./admin/process-docs

There, now you learned how to do it yourself, whether you wanted
to or not.

> if for no other reason then that after I do a CVS update I 
> don't want to wait an hour to read the new docs.

It's several minutes. Please don't spread FUD.

> I can't see that a cron job, run once every day or so, can be that 
> hard.

Why can't you run that cronjob on your CVS updated copy every day
or so?

> If it is  hard, then it means building the docs is too hard, and yet that's 
> something you
> want me to do myself as a Twisted novice?

It's not hard. It's just that the only people who want to read docs about
CVS will need to have a checkout anyway, and those people can easily
run ./admin/process-docs.
This script was specifically written (and taken outside release-twisted)
so we can easily build docs ourself.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Tue Jun 10 02:48:09 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:48:09 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <1055224483.13587.21.camel@mingus>
References: <1055224483.13587.21.camel@mingus>, <1055180156.11822.32.camel@mingus>
	 , <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <20030609183215.15716.qmail@green.zadka.com>
Message-ID: <20030610064809.25662.qmail@green.zadka.com>

On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> This is a really natural fit for Hep and looks easy as pie to
> implement.  One question, though.  Say I run a server by creating a
> Factory and running application.listenTCP(myFactory, port).  What's the
> preferred way to access services from inside that Factory?

When the service creates the factory, it can set a .service on the
factory. 

class FooService(app.ApplicationService):

    def makeFactory(self):
        f = protocol.Factory()
        f.service = self
        return f

service = FooService()
application.listenTCP(1000, service.makeFactory())

> The only variable that I think I'd want to maintain in the Application
> is the location of it's data directory.  That way when the app starts it
> knows where to look to find messages, user prefs, etc, and I can ditch
> the hep.ini file.

That's good.
In fact, .ini files should die, in favour of a service holding that
information. Then, it's easy to configure HEP either via mktap hep,
or manually

% cat hep.tpy
from twisted.internet import app
from hep import service

application = app.Application("HEP")
s = service.HEPService(datadir="blah/blah")
application.listenTCP(25, s.makeMailFactory())
application.listenTCP(80, s.makeWebFactory())
% twistd -y hep.tpy

[This is written to an assumed HEP API, which probably has nothing
currently to do with the HEP API, and possibly is not the correct
way at all...this is just to give you an idea of what kind of flexibility
is easily available, once you drink the kool-aid]

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Tue Jun 10 02:50:36 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:50:36 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <1055225886.13586.42.camel@mingus>
References: <1055225886.13586.42.camel@mingus>, <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <20030610065036.25709.qmail@green.zadka.com>

On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> That sounds like an excellent idea.  I'll try to post frequently to my
> weblog throughout this process, in hopes it will be useful to others
> down the road.

For those of us watching from home: where is your blog? 
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Tue Jun 10 02:51:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:51:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <20030610064100.25604.qmail@green.zadka.com>
References: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com> <20030610064100.25604.qmail@green.zadka.com>
Message-ID: <20030610065145.GH14842@frobozz>

On Tue, Jun 10, 2003 at 06:41:00AM -0000, Moshe Zadka wrote:
> On Mon, 9 Jun 2003, Andrew Dalke <dalke at dalkescientific.com> wrote:
[...snip...]
> > if for no other reason then that after I do a CVS update I 
> > don't want to wait an hour to read the new docs.
> 
> It's several minutes. Please don't spread FUD.

Moshe, I'm not sure if he means that he wants to use the generated API docs
from epydoc (in which case he is correct), or if he didn't realise the
Howtos were independent of that timeframe (in which case I'm sure that's an
honest mistake).

Either way, crying "FUD" seems a little unfair.

-Andrew.




From abe at fettig.net  Tue Jun 10 02:58:31 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 02:58:31 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030610065036.25709.qmail@green.zadka.com>
References: <1055225886.13586.42.camel@mingus>
	 , <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
	 <20030610065036.25709.qmail@green.zadka.com>
Message-ID: <1055228311.13586.44.camel@mingus>

On Tue, 2003-06-10 at 02:50, Moshe Zadka wrote:
> On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > That sounds like an excellent idea.  I'll try to post frequently to my
> > weblog throughout this process, in hopes it will be useful to others
> > down the road.
> 
> For those of us watching from home: where is your blog? 

http://www.fettig.net

-Abe 




From cce at clarkevans.com  Tue Jun 10 05:05:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 10 Jun 2003 09:05:15 +0000
Subject: [Twisted-Python] Suggestion: Test Drive
In-Reply-To: <20030610151717.GD24830@mumak.net>
References: <20030610151717.GD24830@mumak.net>
Message-ID: <20030610090515.GA11747@doublegemini.com>

You may want to look at FIT, by Brian Ingerson.  He has basically
setup a Wiki to drive unit testing...

  http://fit.freepan.org/

Best,

Clark

On Wed, Jun 11, 2003 at 01:17:17AM +1000, jml at ids.org.au wrote:
| 
| A suggestion in response to the ever-present demand for more tests.
| 
| I've heard rumours that other open-source applications often have bug-fixing
| initiatives, or similar, where lots of people are encouraged to fix as many
| bugs as possible over a short period of time (a weekend or something).
| 
| Perhaps we could do the same, but with tests instead? Have a weekend where
| people write as many tests as possible. 
| 
| It's a thought anyway. I'll probably do something like this individually
| regardless of community concensus.
| 
| [it'll give us an opportunity to work out that todo feature, too ;-)]
| 
| cheers,
| jml





From cce at clarkevans.com  Tue Jun 10 05:21:45 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 10 Jun 2003 09:21:45 +0000
Subject: [Twisted-Python] signaling failure to IConsumer
Message-ID: <20030610092145.GB11747@doublegemini.com>

In the process of linking the flow module with IConsumer/IProducer,
I happened to lack any way for the producer to signal to the 
consumer that it had an exception and is now inactive.  A simple
'fail()' method should be added to IConsumer so that the receiver
of a data flow can have some resonable way of knowing the sender
has failed.  Without further ado,

--- interfaces.py.orig	Tue Jun 10 04:49:24 2003
+++ interfaces.py	Tue Jun 10 04:50:23 2003
@@ -682,6 +682,9 @@
     def write(self, data):
         """The producer will write data by calling this method."""
 
+    def fail(self, failure):
+        """The producer created an exception and has since died horribly."""
+
 class IFinishableConsumer(IConsumer):
     """A Consumer for producers that finish.





From justinjohnson at fastmail.fm  Tue Jun 10 10:10:50 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 08:10:50 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610151717.GD24830@mumak.net>
References: <20030610151717.GD24830@mumak.net>
Message-ID: <20030610141050.6DAB632BC3@www.fastmail.fm>

I have an xmlrpc service inheriting from xmlrpc.XMLRPC.  I override
render to allow for basic authentication as show below.  This all works,
except that I don't know what to call to send response 401 back to the
client.  self.send_response(401) is how I would do it with the
SimpleXMLRPCServer, but obviously doesn't work with the twisted xmlrpc
server.  Can someone point me in the right direction on this?

Thanks much.
-Justin

P.S. - Moshe, I figured out everything else I asked you on the
python-list about this.  Just need to know how to send response 401 now. 
Before I wasn't seeing the header, because request.headers doesn't
contain all headers.  Had to use request.getAllHeaders().


	def render(self, request):
		headers = request.getAllHeaders()
		if headers.has_key("authorization"):
			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
			auth = headers["authorization"]
			auth = auth.replace("Basic ","")
			decoded_auth = decodestring(auth)
			if decoded_auth == real_auth:
				return xmlrpc.XMLRPC.render(self, request)
		else:
			self.send_response(401)
			self.end_headers()




From justinjohnson at fastmail.fm  Tue Jun 10 10:50:40 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 08:50:40 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610141050.6DAB632BC3@www.fastmail.fm>
References: <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610145040.D0FB91DE2F@www.fastmail.fm>

I tried the following and it seemed to work.  Can someone let me know if
this is the correct way to do this in twisted?

	def render(self, request):
		headers = request.getAllHeaders()
		if headers.has_key("authorization"):
			log("User has authorization key: " + headers["authorization"])
			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
			auth = headers["authorization"]
			auth = auth.replace("Basic ","")
			decoded_auth = decodestring(auth)
			if decoded_auth == real_auth:
				request.setResponseCode(http.FOUND)
				return xmlrpc.XMLRPC.render(self, request)
		else:
			log("User not authorized")
			request.setResponseCode(http.UNAUTHORIZED)

On Tue, 10 Jun 2003 08:10:50 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> I have an xmlrpc service inheriting from xmlrpc.XMLRPC.  I override
> render to allow for basic authentication as show below.  This all works,
> except that I don't know what to call to send response 401 back to the
> client.  self.send_response(401) is how I would do it with the
> SimpleXMLRPCServer, but obviously doesn't work with the twisted xmlrpc
> server.  Can someone point me in the right direction on this?
> 
> Thanks much.
> -Justin
> 
> P.S. - Moshe, I figured out everything else I asked you on the
> python-list about this.  Just need to know how to send response 401 now. 
> Before I wasn't seeing the header, because request.headers doesn't
> contain all headers.  Had to use request.getAllHeaders().
> 
> 
> 	def render(self, request):
> 		headers = request.getAllHeaders()
> 		if headers.has_key("authorization"):
> 			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
> 			auth = headers["authorization"]
> 			auth = auth.replace("Basic ","")
> 			decoded_auth = decodestring(auth)
> 			if decoded_auth == real_auth:
> 				return xmlrpc.XMLRPC.render(self, request)
> 		else:
> 			self.send_response(401)
> 			self.end_headers()
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From m at moshez.org  Tue Jun 10 11:55:01 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 15:55:01 -0000
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610145040.D0FB91DE2F@www.fastmail.fm>
References: <20030610145040.D0FB91DE2F@www.fastmail.fm>, <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610155501.5751.qmail@green.zadka.com>

On Tue, 10 Jun 2003, "Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> 	def render(self, request):
...
> 		if headers.has_key("authorization"):
...
> 		else:
> 			log("User not authorized")
> 			request.setResponseCode(http.UNAUTHORIZED)
You want to add
                        return ''
Or maybe return '<html>nice error message</html>'

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From pobrien at orbtech.com  Tue Jun 10 13:02:35 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: 10 Jun 2003 12:02:35 -0500
Subject: [Twisted-Python] Organizing a Woven app
Message-ID: <m2ptllg91w.fsf@orbtech.com>

I'm starting a fairly large Woven application and I'm wondering if
anyone else has a directory structure and module organization approach
that works well with Woven.

As an experiment, we created a small application with the following
approach.  We created directories named model, page, and template.
Each directory holds a file that corresponds to the url in the
interface.  For example, lets say we display a list of customers at

  http://1.2.3.4/customer

Our page directory would have a customer.py file containing a Page
subclass pointing to a "customer.html" template located in our
template directory.  Data for the page comes from the customer.py file
in our model directory.  This worked, but just doesn't seem ideal.

I'm just not sure that this approach is going to scale well, or if the
way we're dividing up modules and directories is the best approach to
take for a large Woven application.  I think we might be splitting
things up too much.  I noticed that the twisted.issues project takes a
different approach, storing all models in models.py, all pages in
pages.py, and all views/widgets in widgets.py.

Rather than find out later we took a bad approach, I'd love to hear
from anyone who is farther along than we are.  It's hard enough to
figure out Woven, so I'd rather not complicate things with a poor file
arrangement.  All tips and suggestions would be greatly appreciated.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From justinjohnson at fastmail.fm  Tue Jun 10 13:31:11 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 11:31:11 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610155501.5751.qmail@green.zadka.com>
References: <20030610145040.D0FB91DE2F@www.fastmail.fm>, <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm> <20030610155501.5751.qmail@green.zadka.com>
Message-ID: <20030610173111.D85F332FA4@www.fastmail.fm>

Great, that helped.  It was returning 500 before adding return '', but
not 401 gets returned.

Thanks.

On 10 Jun 2003 15:55:01 -0000, "Moshe Zadka" <m at moshez.org> said:
> On Tue, 10 Jun 2003, "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > 	def render(self, request):
> ...
> > 		if headers.has_key("authorization"):
> ...
> > 		else:
> > 			log("User not authorized")
> > 			request.setResponseCode(http.UNAUTHORIZED)
> You want to add
>                         return ''
> Or maybe return '<html>nice error message</html>'
> 
> -- 
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
> shortness.
> Agile Programming Language -- http://www.python.org/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From itamar at itamarst.org  Tue Jun 10 13:39:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 13:39:20 -0400
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610141050.6DAB632BC3@www.fastmail.fm>
References: <20030610151717.GD24830@mumak.net>
	<20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610133920.0edc6c31.itamar@itamarst.org>

On Tue, 10 Jun 2003 08:10:50 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> 	def render(self, request):
> 		headers = request.getAllHeaders()
> 		if headers.has_key("authorization"):
> 			real_auth = '%s:%s' % (config.adminUser,
> 			config.adminPassword) auth = headers["authorization"]
> 			auth = auth.replace("Basic ","")
> 			decoded_auth = decodestring(auth)
> 			if decoded_auth == real_auth:
> 				return xmlrpc.XMLRPC.render(self, request)
> 		else:
> 			self.send_response(401)
> 			self.end_headers()

Note you can do request.getUser() and request.getPassword(), IIRC,
instead of parsing the Basic auth header yourself.



From itamar at itamarst.org  Tue Jun 10 13:46:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 13:46:08 -0400
Subject: [Twisted-Python] IMPORTANT: win32 status (for people with CVS access)
Message-ID: <20030610134608.293a4ee5.itamar@itamarst.org>

All tests are now passing, except for one timing issue with test_rebuild
reported by Cory that I can't reproduce, and possible problems with SSL
that may be result of using old version of pyOpenSSL.

So, any test failures on Win32 are *bugs*. DO NOT IGNORE THEM. Fix them.

And if you're adding new tests that only work on Unix, please make sure
they are skipped on Windows. it's really easy to do, look e.g. at
test_utils.py. Otherwise we're back in a situation where we have lots of
failing tests that may just be because they're unix only.

Test failures on windows are not acceptable. Unfortanutely setting up a
buildbot is not easy, so we have to rely on manual testing.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From developer at csrules.dyndns.org  Tue Jun 10 15:52:45 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 10 Jun 2003 14:52:45 -0500 (CDT)
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055225886.13586.42.camel@mingus>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
        <1055225886.13586.42.camel@mingus>
Message-ID: <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>

> That sounds like an excellent idea.  I'll try to post frequently to my
> weblog throughout this process, in hopes it will be useful to others
> down the road.
>
> Abe
>

Please post to your weblog as you progress. My attempts at twisted
are/were worse than yours and I wouldn't dare show any code. Since you
have jabber support in HEP are you going to do jabber the 'twisted' way?

-Darryl






From abe at fettig.net  Tue Jun 10 16:24:53 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 16:24:53 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
	 <1055225886.13586.42.camel@mingus>
	 <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>
Message-ID: <1055276692.17344.16.camel@mingus>

On Tue, 2003-06-10 at 15:52, darryl wrote:
> > That sounds like an excellent idea.  I'll try to post frequently to my
> > weblog throughout this process, in hopes it will be useful to others
> > down the road.

> Please post to your weblog as you progress. My attempts at twisted
> are/were worse than yours and I wouldn't dare show any code.

Will do, I think that keeping such a public record could be useful.

>  Since you
> have jabber support in HEP are you going to do jabber the 'twisted' way?

IM support in Hep is on hold at the moment - there are a bunch of other
things that are higher priority right now.  But at some point (after Hep
0.4 is released), I'll be working on getting IM support into Hep, and
then I'll defitely be doing it the Twisted way.  I'm not interested in
trying to integrate non-Twisted networking libraries into Hep.

Abe




From dalke at dalkescientific.com  Tue Jun 10 17:41:01 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 10 Jun 2003 15:41:01 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030610064100.25604.qmail@green.zadka.com>
Message-ID: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>

Moshe:
>> Others said the doc build takes an hour.
>
> It shouldn't, on a sane machine. It takes about several minutes.
> Of course, you only need to rebuild the docs when you want to,
> not after every CVS update.

Andrew Bennets:
 > I think it would be too much effort to update the API docs 
automatically;
 > epydoc takes something like an hour to process all of Twisted

One says "several minutes" and the other "an hour" ...

Andrew Bennets:
 > Moshe, I'm not sure if he means that he wants to use the generated 
API docs
 > from epydoc (in which case he is correct), or if he didn't realise the
 > Howtos were independent of that timeframe (in which case I'm sure 
that's an
 > honest mistake).

I didn't realize.

>> I would rather not learn how to do that
>> myself
>
> I won't give you that option.
> % ./admin/process-docs
>
> There, now you learned how to do it yourself, whether you wanted
> to or not.

Just because you told me doesn't mean I'll remember.  I have a small
brain, and the less I have to learn, the better.

BTW, I just did that on my machine.  I see it assumes I have some
software I don't actually have.

  ...
doc/howto/controllerindepth
sh: pngtopnm: command not found
sh: pnmtops: command not found
Traceback (most recent call last):
   File "./bin/lore", line 29, in ?
     run()
   File "./twisted/scripts/lore.py", line 88, in run
     w.generate()
   File "twisted/lore/process.py", line 60, in generate
     self.df(fullpath, linkrel)
   File "./twisted/lore/default.py", line 55, in <lambda>
     df = lambda file, linkrel: latex.convertFile(file, spitter)
   File "./twisted/lore/latex.py", line 450, in convertFile
     processFile(spitter, fin)
   File "./twisted/lore/latex.py", line 443, in processFile
     spitter.visitNode(dom)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 86, in visitNodeDefault
     self.visitNode(child)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 86, in visitNodeDefault
     self.visitNode(child)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 172, in visitNode_img
     f(fileName, target)
   File "./twisted/lore/latex.py", line 179, in convert_png
     raise OSError(r)
OSError: 32512

I then installed the netpbm package ("fink install netpbm"), which
took about 14 minutes and reran the process-docs program

./admin/process-docs: latex: command not found

That's it - I'm not wasting any more time to get a local copy
of the docs.  Yes, I could install latex, and iterate install
packages until it all works, but my point is that getting the
docs working is a non-trivial task, at least for some people.
And woe be to those running something without a 'sh' derived
shell.

(BTW, it appears the latex call is only needed for the PDF
howto, and occurs after the HTML generation, so the error message
above only means that PS/PDF output won't be generated, and not
that latex is needed to finish the HTML output; eg, if there are
equations generated by LaTeX.  I do see the howto html files.)


> Why can't you run that cronjob on your CVS updated copy every day
> or so?

I originally brought this up because I sent in some doc corrections
which had been updated in CVS.  Thus, the time I spent writing the
bug report was wasted.  If the latest ("unstable") docs were published
on the twisted site then I would have easily noticed that it had
since been corrected.

Now, I could make my own mirror of twisted on my local machine (though
since it's a laptop, a simple cron wouldn't work, and I hate having
jobs run when I'm on battery power because of the extra power demands;
I've got wireless and like working on the porch).

However, that suggestion implies some disregard on others' time because
you are raising the barrier for people to provide meaningful help.
It's very little work for you all to provide the latest docs on-line,
so why not do it?  Esp. as you've now seen, the doc build makes some
requirements on a system (sh, netpbm, latex, others?) which might not
exist.

Glyph:
 > We say this about functionality as well, and CVS docs should have 
parity
 > with CVS code, not released code.  (In other words - if you want CVS
 > docs, download CVS code.)

Okay, then make an "UNSTABLE" release which corresponds to the most
recent docs, both of which are created anew each day. This provide the
parity you want, and also helps developers who want to see if the most
recent code fixes a problem they've come across, or who like working
on the bleeding edge.  This is also helpful for people at companies
which don't allow anything but port 80 through their firewalls (and so
block CVS access) to get a copy of the latest CVS version.

Moshe:

> It's not hard. It's just that the only people who want to read docs 
> about
> CVS will need to have a checkout anyway, and those people can easily
> run ./admin/process-docs.
> This script was specifically written (and taken outside 
> release-twisted)
> so we can easily build docs ourself.

How does someone new to twisted learn about this?  Eg, there's nothing
in the README which mentions it.  (Actually, it should be something like
"README_CVS" which is directed to people using Twisted from CVS rather
than from a release.)  And it doesn't look like it's mentioned anywhere
in anything.

% grep -s "process_docs" `find . -print`
%

					Andrew
					dalke at dalkescientific.com




From m at moshez.org  Tue Jun 10 19:29:16 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 23:29:16 -0000
Subject: [Twisted-Python] typos
In-Reply-To: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
References: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610232916.13460.qmail@green.zadka.com>

> % grep -s "process_docs" `find . -print`

This should have immediately alerted you: you did _, not -.
[Not that it's mentioned in any documentation. Currently, the process
of working from CVS is non-trivial. Contribution of a "Working Out
Of CVS" HOWTO will be gladly welcomed.]

For the record, in Debian these are the packages which are needed
to run netpbm:

- tetex-extra
- netpbm
- gs-common

Having never had fink, I cannot tell you if this has anything to
do with the fink packages.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From stuart.hungerford at anu.edu.au  Tue Jun 10 21:33:14 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Wed, 11 Jun 2003 11:33:14 +1000
Subject: [Twisted-Python] Static file filenames and MIME types...
Message-ID: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>

Hi all,

I think these questions show my ignorance of HTTP request headers
as much has anything, but:

In a twisted.web based application I'm returning a file in a resource
render() call via the twisted.web.static.File class.

If I've understood right, it's possible to specify the MIME type
of the file in the static.file constructor call.  Between this
setting and a request.setHeader('Content-Type', 'foo') call which
one takes priority?

I think I still need to set a request.setHeader('Content-Length')
to the size of the file?  (Conveniently available via the
.getFileSize() method of static.file)?

If the person at the other end wants to save the file, what's the
best way to suggest the filename, is it a setHeader of
'Content-Location' or does static.File take care of that?


Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From radix at twistedmatrix.com  Tue Jun 10 21:45:06 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 10 Jun 2003 21:45:06 -0400
Subject: [Twisted-Python] Static file filenames and MIME types...
In-Reply-To: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>; from stuart.hungerford@anu.edu.au on Tue, Jun 10, 2003 at 21:33:14 -0400
References: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>
Message-ID: <20030611014506.GA1692@toshi.anaprd01.md.comcast.net>

On 2003.06.10 21:33, Stuart Hungerford wrote:
> Hi all,
> 
> I think these questions show my ignorance of HTTP request headers
> as much has anything, but:
> 
> In a twisted.web based application I'm returning a file in a resource
> render() call via the twisted.web.static.File class.
> 
> If I've understood right, it's possible to specify the MIME type
> of the file in the static.file constructor call.  Between this
> setting and a request.setHeader('Content-Type', 'foo') call which
> one takes priority?


The parameter that File takes is _default_Type, which just specifies 
which type to send (using request.setHeader) when no mime type can be
inferred from the extension of the file. So static.File itself does
request.setHeader('content-type', ...) (as well as 'content-encoding').

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Jun 10 22:42:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 12:42:54 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
References: <20030610064100.25604.qmail@green.zadka.com> <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030611024254.GC2113@frobozz>

On Tue, Jun 10, 2003 at 03:41:01PM -0600, Andrew Dalke wrote:
> 
> I then installed the netpbm package ("fink install netpbm"), which
> took about 14 minutes and reran the process-docs program
> 
> ./admin/process-docs: latex: command not found
> 
> That's it - I'm not wasting any more time to get a local copy
> of the docs.  Yes, I could install latex, and iterate install
> packages until it all works, but my point is that getting the
> docs working is a non-trivial task, at least for some people.
> And woe be to those running something without a 'sh' derived
> shell.

As mentioned in another email in this thread, this command should be
sufficient to generate the .xhtml for the howtos:

    bin/lore --config template=doc/howto/template.tpl \
             --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/public/%s.html \
             -l ../howto/ doc/howto/*.html

This shouldn't require any software other than Lore, which is part of
Twisted.  (It's the LaTeX/PS/PDF that requires external software for things
like image conversion, HTML is effectively Lore's "native" format.)

You could easily trim that command down to:

    lore --config template=doc/howto/template.tpl doc/howto/*.html

And not miss much.

This is certainly not obvious to most people (I suspect many of the Twisted
devs don't know how to invoke Lore, either), and probably does deserve to be
documented better -- a "Working from CVS" doc probably would be worthwhile.

-Andrew.




From dalke at dalkescientific.com  Wed Jun 11 00:04:24 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 10 Jun 2003 22:04:24 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030611024254.GC2113@frobozz>
Message-ID: <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>

Okay, if the latest docs won't be available on-line (thought I still 
don't see
why not) then how about a simple demo which serves the docs for the 
local
machine?

This would:
   - frob the doc directory and automatically generate the .html if the
  .xhtml file is newer

   - start a server pointing to that directory as a base, with the 
restriction
that only the local machine can connect to that port.

   - be documented

I can't see that it would take more than 30 minutes to write....  though
since I want the CVS docs on-line, I'm not going to encourage anyone ;)

For bonus points, it would also have a control page which updates from
CVS and which spawns off epydoc.

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Wed Jun 11 00:21:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 14:21:54 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>
References: <20030611024254.GC2113@frobozz> <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030611042154.GE2113@frobozz>

On Tue, Jun 10, 2003 at 10:04:24PM -0600, Andrew Dalke wrote:
> Okay, if the latest docs won't be available on-line (thought I still don't
> see why not) then how about a simple demo which serves the docs for the
> local machine?

The silly thing is the BuildBot already builds the docs on every checkin...
if it provided a way to browse the last successful builds, this problem
would be solved "for free" :)

-Andrew.




From exarkun at intarweb.us  Wed Jun 11 05:52:16 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 05:52:16 -0400
Subject: [Twisted-Python] Submitted for your consideration
Message-ID: <20030611095216.GA1346@meson.dyndns.org>

  Attached is a patch to add timeout support to t.web (via a minor
HTTPChannel change).

  The performance impact should be light, though it does impose an extra
function call per received line.  If this is found to unacceptable, I do not
thing it would be unreasonable to change the "__lastReceived" attribute's
name, document it as public, and require the update be made inline.

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.80
diff -u -r1.80 http.py
--- protocols/http.py	17 May 2003 20:54:12 -0000	1.80
+++ protocols/http.py	11 Jun 2003 09:46:39 -0000
@@ -47,6 +47,7 @@
 
 # twisted imports
 from twisted.internet import interfaces, reactor, protocol
+from twisted.protocols import policies
 from twisted.python import log
 
 
@@ -856,7 +857,7 @@
         pass
 
 
-class HTTPChannel(basic.LineReceiver):
+class HTTPChannel(basic.LineReceiver, policies.TimeoutMixin):
     """A receiver for HTTP requests."""
 
     length = 0
@@ -868,12 +869,19 @@
     # set in instances or subclasses
     requestFactory = Request
 
+    # Timeout connections after 12 hours of inactivity
+    timeOut = 60 * 60 * 12
 
     def __init__(self):
         # the request queue
         self.requests = []
 
+    def connectionMade(self):
+        self.setTimeout(self.timeOut)
+    
     def lineReceived(self, line):
+        self.resetTimeout()
+
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
@@ -1004,6 +1012,7 @@
             self.transport.loseConnection()
 
     def connectionLost(self, reason):
+        self.setTimeout(None)
         for request in self.requests:
             request.connectionLost(reason)
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/18f4347d/attachment.pgp 

From exarkun at intarweb.us  Wed Jun 11 06:14:09 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 06:14:09 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Expand ITCPTransport
In-Reply-To: <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <E19OLCA-0000nU-00@pyramid.twistedmatrix.com> <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <20030611101409.GA1423@meson.dyndns.org>

On Sat, Jun 07, 2003 at 08:41:26AM -0400, Glyph Lefkowitz wrote:
> 
> On Friday, June 6, 2003, at 01:40 PM, exarkun CVS wrote:
> 
> >+    def canStartTLS(self):
> 
> Hmm.  Wouldn't this be better expressed with a 
> components.implements(self, ITLSTransport) ?
> 

  Oops, forgot to reply to this:  Yes!  You are, as usually, brilliantly
correct.  Changed in CVS.

  Jp


> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/70af0911/attachment.pgp 

From exarkun at intarweb.us  Wed Jun 11 06:27:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 06:27:01 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com> <1055180156.11822.32.camel@mingus>
Message-ID: <20030611102701.GB1423@meson.dyndns.org>

On Mon, Jun 09, 2003 at 01:35:56PM -0400, Abe Fettig wrote:
> [snip]
> 
> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code in
> twisted.mail to do this? (Keep in mind some messages are being delivered
> to blogs and other non-SMTP locations)
> 

  There will be code for this in the relatively near the future -- this is a
subtask of an item high on my todo list.

I'll check out your blog and maybe some of the Hep source (if it is
appropriate to do so?) to get a better idea of your use case, so I can keep
it in mind.

  If you want to toss any info my way regarding the details of your use
case, I'll keep them in mind as I work on the implementation.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/3f0d164f/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Jun 11 06:27:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 20:27:52 +1000
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611095216.GA1346@meson.dyndns.org>
References: <20030611095216.GA1346@meson.dyndns.org>
Message-ID: <20030611102752.GH2113@frobozz>

On Wed, Jun 11, 2003 at 05:52:16AM -0400, Jp Calderone wrote:
>   Attached is a patch to add timeout support to t.web (via a minor
> HTTPChannel change).
> 
>   The performance impact should be light, though it does impose an extra
> function call per received line.  If this is found to unacceptable, I do not
> thing it would be unreasonable to change the "__lastReceived" attribute's
> name, document it as public, and require the update be made inline.

[I've already made this point on IRC, but anyway...]

It also will timeout clients if a request takes a long time to run.  Think
streaming web pages, e.g. LivePage, or a streaming log from a *very* slow
buildbot build.  This patch should use .setTimeout(None) to disable timeouts
while a request is being processed (and then of course re-enable timeouts
once all outstanding requests have been serviced).  I don't like the idea of
disconnecting a client simply because the server is taking a long time to
serve the request, or because a client has a slow link.

I realise the default timeout is 12 hours, but:
    - I can imagine cases where HTTP connections last longer than 12 hours
      without receiving traffic from the client, e.g. streaming HTTP, where
      the client sends nothing, but the server keeps streaming buildbot
      results/javascript events/music, or simply a very long running request
      (i.e. because of an unusually massive DB query, or something).  You'd
      *really* be annoyed if your query took 13 hours, only to discover
      after 12 hours Twisted Web arbitrarily decided your connection was
      idle and killed it.  
    - Another scenario: A dial-up user downloading an ISO of their favorite
      Linux distro.  This is a legitimate request, and shouldn't be
      arbitrarily cut-off halfway.  If a client wants to download 600Mb at
      5kB/s, Twisted Web should let them.
    - It should still work correctly if the default is changed.  Someone
      might be paranoid, and set the timeout down to, say, 5 minutes.  This
      shouldn't cause adverse affects (beyond killing connections that have
      been idle that long).

-Andrew.




From exarkun at intarweb.us  Wed Jun 11 07:36:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 07:36:42 -0400
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611102752.GH2113@frobozz>
References: <20030611095216.GA1346@meson.dyndns.org> <20030611102752.GH2113@frobozz>
Message-ID: <20030611113642.GA1580@meson.dyndns.org>

On Wed, Jun 11, 2003 at 08:27:52PM +1000, Andrew Bennetts wrote:
> On Wed, Jun 11, 2003 at 05:52:16AM -0400, Jp Calderone wrote:
> >   Attached is a patch to add timeout support to t.web (via a minor
> > HTTPChannel change).
> > 
> >   The performance impact should be light, though it does impose an extra
> > function call per received line.  If this is found to unacceptable, I do not
> > thing it would be unreasonable to change the "__lastReceived" attribute's
> > name, document it as public, and require the update be made inline.
> 
> [I've already made this point on IRC, but anyway...]
> 
> It also will timeout clients if a request takes a long time to run.  Think
> streaming web pages, e.g. LivePage, or a streaming log from a *very* slow
> buildbot build.  This patch should use .setTimeout(None) to disable timeouts
> while a request is being processed (and then of course re-enable timeouts
> once all outstanding requests have been serviced).  I don't like the idea of
> disconnecting a client simply because the server is taking a long time to
> serve the request, or because a client has a slow link.
> 
> I realise the default timeout is 12 hours, but:
>     - I can imagine cases where HTTP connections last longer than 12 hours
>       without receiving traffic from the client, e.g. streaming HTTP, where
>       the client sends nothing, but the server keeps streaming buildbot
>       results/javascript events/music, or simply a very long running request
>       (i.e. because of an unusually massive DB query, or something).  You'd
>       *really* be annoyed if your query took 13 hours, only to discover
>       after 12 hours Twisted Web arbitrarily decided your connection was
>       idle and killed it.  
>     - Another scenario: A dial-up user downloading an ISO of their favorite
>       Linux distro.  This is a legitimate request, and shouldn't be
>       arbitrarily cut-off halfway.  If a client wants to download 600Mb at
>       5kB/s, Twisted Web should let them.
>     - It should still work correctly if the default is changed.  Someone
>       might be paranoid, and set the timeout down to, say, 5 minutes.  This
>       shouldn't cause adverse affects (beyond killing connections that have
>       been idle that long).


  These are good points.  Thanks for making them on the ML :)  Here is a
modified patch (hopefully modified in the proper way).

  Jp
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.80
diff -u -r1.80 http.py
--- protocols/http.py	17 May 2003 20:54:12 -0000	1.80
+++ protocols/http.py	11 Jun 2003 11:36:00 -0000
@@ -47,6 +47,7 @@
 
 # twisted imports
 from twisted.internet import interfaces, reactor, protocol
+from twisted.protocols import policies
 from twisted.python import log
 
 
@@ -856,7 +857,7 @@
         pass
 
 
-class HTTPChannel(basic.LineReceiver):
+class HTTPChannel(basic.LineReceiver, policies.TimeoutMixin):
     """A receiver for HTTP requests."""
 
     length = 0
@@ -868,12 +869,20 @@
     # set in instances or subclasses
     requestFactory = Request
 
+    # Timeout connections after 12 hours of inactivity
+    timeOut = 60 * 60 * 12
+    _savedTimeOut = None
 
     def __init__(self):
         # the request queue
         self.requests = []
 
+    def connectionMade(self):
+        self.setTimeout(self.timeOut)
+    
     def lineReceived(self, line):
+        self.resetTimeout()
+
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
@@ -942,6 +951,11 @@
         self.__first_line = 1
         del self._command, self._path, self._version
 
+        # Disable the idle timeout, in case this request takes a long
+        # time to finish generating output.
+        if self.timeOut:
+            self._savedTimeOut = self.setTimeout(None)
+
         req = self.requests[-1]
         req.requestReceived(command, path, version)
 
@@ -1000,10 +1014,14 @@
             # notify next request it can start writing
             if self.requests:
                 self.requests[0].noLongerQueued()
+            else:
+                if self._savedTimeOut:
+                    self.setTimeout(self._savedTimeOut)
         else:
             self.transport.loseConnection()
 
     def connectionLost(self, reason):
+        self.setTimeout(None)
         for request in self.requests:
             request.connectionLost(reason)
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/69d758ac/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Jun 11 08:30:07 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 22:30:07 +1000
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611113642.GA1580@meson.dyndns.org>
References: <20030611095216.GA1346@meson.dyndns.org> <20030611102752.GH2113@frobozz> <20030611113642.GA1580@meson.dyndns.org>
Message-ID: <20030611123007.GB3381@frobozz>

On Wed, Jun 11, 2003 at 07:36:42AM -0400, Jp Calderone wrote:
>  
> +        # Disable the idle timeout, in case this request takes a long
> +        # time to finish generating output.
> +        if self.timeOut:
> +            self._savedTimeOut = self.setTimeout(None)

[...]

> +            else:
> +                if self._savedTimeOut:
> +                    self.setTimeout(self._savedTimeOut)

I wonder if this idiom would be simplified by having a .cancelTimeout
method, rather than overloading .setTimeout(None) to mean that?  

These snippets could then look like something like:

+        # Disable the idle timeout, in case this request takes a long
+        # time to finish generating output.
+        self.cancelTimeout()

and:

+            else:
+                self.setTimeout(self.timeOut)

Or perhaps I'm just in an overly fussy mood tonight :)

-Andrew.




From andrew-twisted at puzzling.org  Wed Jun 11 08:31:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 22:31:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <20030611042154.GE2113@frobozz>
References: <20030611024254.GC2113@frobozz> <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com> <20030611042154.GE2113@frobozz>
Message-ID: <20030611123145.GC3381@frobozz>

On Wed, Jun 11, 2003 at 02:21:54PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 10, 2003 at 10:04:24PM -0600, Andrew Dalke wrote:
> > Okay, if the latest docs won't be available on-line (thought I still don't
> > see why not) then how about a simple demo which serves the docs for the
> > local machine?
> 
> The silly thing is the BuildBot already builds the docs on every checkin...
> if it provided a way to browse the last successful builds, this problem
> would be solved "for free" :)

Hooray for BuildBot!

The latest build of the CVS docs can now be found at:
    
    http://twistedmatrix.com/users/warner/doc-latest/

Thanks Brian!

-Andrew.




From sf.lists at web.de  Wed Jun 11 09:11:28 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Wed, 11 Jun 2003 15:11:28 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess
Message-ID: <3EE72A80.7070409@web.de>

#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()




From sf.lists at web.de  Wed Jun 11 09:48:20 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Wed, 11 Jun 2003 15:48:20 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[2]
Message-ID: <3EE73324.7050003@web.de>

Hi,

somehow my last Message got truncated. :-/

I have two seperate processes communicatinbg by Perspective Broker.
One, the server, shall start an external program and send the output to 
the client.

See code below.

I get the following traceback (part of it):
---------------------------------------------
File "/export/home/s/stfl/Twisted/twisted/spread/pb.py", line 472, in 
expressionReceived
     raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
Failure: twisted.spread.pb.PBConnectionLost:

I've simplified the code to the following:

server (listener.py):
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor, app, protocol
from twisted.cred import authorizer
import os


class ABPP(protocol.ProcessProtocol):
     def __init__(self, receiver):
         self.receiver = receiver
     def connectionMade(self):
         print "connection to client-prg made!"
         # XXX Here the error is triggered
         mydef = self.receiver.callRemote("receiveMessage", "connection 
made!")
         mydef.addCallback(self.t)
     def t(self, x):
         print 't:', x


class ABListener(pb.Root):
     def __init__(self):
         self.receiver = None
     def remote_takeMessageReceiver(self, receiver):
         print 'self.receiver = receiver', receiver
         self.receiver = receiver
     def remote_dir(self):
         pp = ABPP(self.receiver)
         command = ['/bin/ls']
         reactor.spawnProcess(pp, command[0], command, env=os.environ)
         reactor.run()


if __name__ == '__main__':
     import listener
     ab_app = app.Application("ABListener")
     ab_app.listenTCP(8848, pb.BrokerFactory(ABListener()))
     ab_app.run(save=0)



client (client.py)
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()




From news at exultants.org  Sun Jun  8 17:58:59 2003
From: news at exultants.org (Van Gale)
Date: Sun, 08 Jun 2003 14:58:59 -0700
Subject: [Twisted-Python] Re: Concern over "relentless hyping" (was Twisted - howto transport
 megabytes?)
In-Reply-To: <3EE36889.B1259CFD@engcorp.com>
References: <3EE36889.B1259CFD@engcorp.com>
Message-ID: <bc0bdd$17b$1@main.gmane.org>

Peter Hansen wrote:
> I received the following message in private (I assume) email after
> my last post to the newsgroup.  Comments are welcome, preferably
> public ones (merely because I consider private discussions about
> this kind of thing to be a severe waste of my limited time).
> 
> Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
> Is anyone over-hyping it?  Is there a maximum acceptable target level 
> of hype?

I'm not sure why someone would send such a message.  Clearly "word of 
mouth" is the best marketing for open-source projects.  On top of that I 
don't want to invest time learning and using a major framework unless I 
know it's going to be around a while and has support.  An active 
community that can respond in mailing lists and newsgroups sends a 
signal, to me at least, that the project is serious and I won't be left 
hung out to dry.

Having said that, at some point a project probably gains enough momentum 
that it no longer needs evangelists.  Twisted *might* be at this stage 
as evidenced by newbish type questions appearing on c.l.py recently, but 
just answering those questions in a simple, straightforward way is great 
marketing in itself.

Van Gale





From rdrb at 123.cl  Mon Jun  9 23:20:35 2003
From: rdrb at 123.cl (rdrb at 123.cl)
Date: Mon, 9 Jun 2003 23:20:35 -0400
Subject: [Twisted-Python] Twisted cred perspective unicode support
Message-ID: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>

I got problems using Twisted cred with Python2.2.0.
My perspectives names are based on a url encoding.
I have found that there is a problem when PerspectiveName is  unicode.

I also discovered that the error message is not explicative.

The CVS does not have a solution for this problems.

Both diminute problem are solved in the next patch.

Twisted is a great tool.
Thanks you for Twisted.

RodrigoB.

- Post patch for twisted.cred.perspective (Type -> Types, report error type):

the cause:
----------

import types
isinstance(u"/test1", types.StringType) 
=>0

The patch:
----------

class Perspective:
    """I am an Identity's view onto a service.

    I am the interface through which most 'external' code should
    interact with a service; I represent the actions a user may
    perform upon a service, and the state associated with that
    user for that service.
    """

    _service_cached = 0 # Has my service cached me from a loaded store, or do I live in memory usually?

    def __init__(self, perspectiveName, identityName="Nobody"):
        """Create me.

        I require a name for myself and a reference to the service
        I participate in.  (My identity name will be 'Nobody' by
        default, which will normally not resolve.)
        """
        if not isinstance(perspectiveName, types.StringTypes):
            raise TypeError("Expected string, got '%s' (%s)."% (perspectiveName, type(perspectiveName)))
        if not isinstance(identityName, types.StringTypes):
            raise TypeError("Expected string, got '%s' (%s)."% (identityName, type(identityName)))
        self.perspectiveName = perspectiveName
        self.identityName = identityName


The diff
---------

$ diff perspective.py /usr/local/lib/python2.2/site-packages/twisted/cred/perspective.py 
49,52c49,52
<         if not isinstance(perspectiveName, types.StringType):
<             raise TypeError("Expected string, got %s."% perspectiveName)
<         if not isinstance(identityName, types.StringType):
<             raise TypeError("Expected string, got %s."% identityName)
---
>         if not isinstance(perspectiveName, types.StringTypes):
>             raise TypeError("Expected string, got '%s' (%s)."% (perspectiveName, type(perspectiveName)))
>         if not isinstance(identityName, types.StringTypes):
>             raise TypeError("Expected string, got '%s' (%s)."% (identityName, type(identityName)))





From jml at mumak.net  Wed Jun 11 13:56:15 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 12 Jun 2003 03:56:15 +1000
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <3EE51D0D.8080007@gmx.net>
References: <3EE51D0D.8080007@gmx.net>
Message-ID: <20030611175615.GF31175@mumak.net>

On Tue, Jun 10, 2003 at 01:49:33AM +0200, Chris Liechti wrote:
> you claim compatibility with pythons unittest from the stdlib, hm... i 
> see some differences ;-)
> 

Actually, we don't. We claim to be *almost* API compatible with python's
standard unittest module. Or at least, that is what I claim. If some docs say
otherwise, I'd like to hear about it.

> if __name__ == '__main__':
>     unittest.main()
> 
> sugestion, why not adding the following func (or something better, that 
> does not fiddle with sys.argv) to twisted.trial.unittest?
> 

The reason it's not there already is that I always found it slightly confusing
and magical, and no one has really mourned it's loss so far. Also, because it's
not entirely clear what it should do.

However, there's no real reason why it should not be added. If it were, I'd
imagine it would just give the most basic output, just like pyunit.

Oh, and even after this is added, trial will still not be fully API compatible
with pyunit. It never will be.
 
> also i like to run my tests with "-v" (verbose) but unfortunately does 
> twisted output garbage in that case.. (i know, it's ANSI colors but i'm 
> on Win32... :-(

trial --bwverbose does black-n-white verbose output. 

<snip recommendations for command-line UI change> 

Oh, wait, you know about --bwverbose. Yes, I agree, the command line options
for these could be much better.

What do you think about this?

trial -v (Black-n-white verbose output)
trial --color -v (Colorful verbose output)

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030612/ac7f2c13/attachment.pgp 

From glyph at twistedmatrix.com  Wed Jun 11 15:35:18 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jun 2003 15:35:18 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <20030611175615.GF31175@mumak.net>
Message-ID: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:

> trial -v (Black-n-white verbose output)
> trial --color -v (Colorful verbose output)

Perhaps color should only be used if sys.stdout.isatty()?




From theller at python.net  Wed Jun 11 13:42:25 2003
From: theller at python.net (Thomas Heller)
Date: 11 Jun 2003 19:42:25 +0200
Subject: [Twisted-Python] [Large] test results on windows (was Re: IMPORTANT: win32 status...)
References: <20030610134608.293a4ee5.itamar@itamarst.org>
Message-ID: <k7bspl32.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> All tests are now passing, except for one timing issue with test_rebuild
> reported by Cory that I can't reproduce, and possible problems with SSL
> that may be result of using old version of pyOpenSSL.
> 

Here's what I get with the win32eventreactor (I did a cvs update
yesterday night). Python 2.2.2, win32all-152, Windows XP pro.
It seems to hang after
  IMAP4ServerTestCase
    testAppend ...

After the '--------' line in this post is the output of the same test
using the default reactor, this one also seems to hang in the same test,
but it prints no FAIL messages.

c:\sf\Twisted>py22 bin\trial -p twisted.test -r win32eventreactor -v
Using twisted.internet.win32eventreactor reactor
c:\sf\Twisted\twisted\protocols\dns.py:50: RuntimeWarning: PyCrypto not available - proceeding with non-cryptographicall
y secure random source
  1
twisted.test.test_app
  AppTestCase
    testIllegalUnlistens ...                                               ?[32;1m[OK]?[0m
    testListenUnlistenTCP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUDP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUNIX ...                                             ?[32;1m[OK]?[0m
  ServiceTestCase
    testRegisterService ...                                                ?[32;1m[OK]?[0m
twisted.test.test_banana
  BananaTestCase
    testCrashString ...                                                    ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInteger ...                                                        ?[32;1m[OK]?[0m
    testList ...                                                           ?[32;1m[OK]?[0m
    testLong ...                                                           ?[32;1m[OK]?[0m
    testNegative ...                                                       ?[32;1m[OK]?[0m
    testNegativeLong ...                                                   ?[32;1m[OK]?[0m
    testOversizedList ...                                                  ?[32;1m[OK]?[0m
    testOversizedString ...                                                ?[32;1m[OK]?[0m
    testPartial ...                                                        ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
  MathTestCase
    testInt2b128 ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_bounce
  BounceTestCase
    testBounceFormat ...                                                   ?[32;1m[OK]?[0m
    testBounceMIME ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_coil
  CoilTest
    testConfigurable ...                                                   ?[32;1m[OK]?[0m
    testCustomConfigurable ...                                             ?[32;1m[OK]?[0m
    testRegistration ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_compat
  CompatTestCase
    testBool ...                                                           ?[32;1m[OK]?[0m
    testDict ...                                                           ?[32;1m[OK]?[0m
    testIsinstance ...                                                     ?[32;1m[OK]?[0m
    testIteration ...                                                      ?[32;1m[OK]?[0m
    testStrip ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_components
  AdapterTestCase
    testAllowDuplicates ...                                                ?[32;1m[OK]?[0m
    testBadRegister ...                                                    ?[32;1m[OK]?[0m
    testGetAdapter ...                                                     ?[32;1m[OK]?[0m
    testGetAdapterClass ...                                                ?[32;1m[OK]?[0m
    testGetSubAdapter ...                                                  ?[32;1m[OK]?[0m
    testNoAdapter ...                                                      ?[32;1m[OK]?[0m
    testParentInterface ...                                                ?[32;1m[OK]?[0m
    testSelfIsAdapter ...                                                  ?[32;1m[OK]?[0m
  ComponentizedTestCase
    testComponentized ...                                                  ?[32;1m[OK]?[0m
    testInheritanceAdaptation ...                                          ?[32;1m[OK]?[0m
    testMultiAdapter ...                                                   ?[32;1m[OK]?[0m
  InterfacesTestCase
    testClasses ...                                                        ?[32;1m[OK]?[0m
    testGetInterfaces ...                                                  ?[32;1m[OK]?[0m
    testInstanceOnlyImplements ...                                         ?[32;1m[OK]?[0m
    testInstances ...                                                      ?[32;1m[OK]?[0m
    testOther ...                                                          ?[32;1m[OK]?[0m
    testSuperInterfaces ...                                                ?[32;1m[OK]?[0m
    testTupleTrees ...                                                     ?[32;1m[OK]?[0m
  TestInterfaceInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
  TestMetaInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
    testComponentizedInteraction ...                                       ?[32;1m[OK]?[0m
    testCustomRegistry ...                                                 ?[32;1m[OK]?[0m
    testInterfaceAdaptMethod ...                                           ?[32;1m[OK]?[0m
    testRegistryPersistence ...                                            ?[32;1m[OK]?[0m
twisted.test.test_context
  ContextTest
    testBasicContext ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_cred
  AuthorizerTestCase
    test_addIdent ...                                                      ?[32;1m[OK]?[0m
    test_nonExistentIdent ...                                              ?[32;1m[OK]?[0m
  FunctionsTestCase
    test_challenge ...                                                     ?[32;1m[OK]?[0m
  IdentityTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    test_addKeyByString ...                                                ?[32;1m[OK]?[0m
    test_addKeyForPerspective ...                                          ?[32;1m[OK]?[0m
    test_getAllKeys ...                                                    ?[32;1m[OK]?[0m
    test_removeKey ...                                                     ?[32;1m[OK]?[0m
    test_removeKey_invalid ...                                             ?[32;1m[OK]?[0m
    test_setPassword_invalid ...                                           ?[32;1m[OK]?[0m
    test_verifyPassword ...                                                ?[32;1m[OK]?[0m
    test_verifyPlainPassword ...                                           ?[32;1m[OK]?[0m
  PerspectiveTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    testConstruction_invalidIdentityName ...                               ?[32;1m[OK]?[0m
    testConstruction_invalidPerspectiveName ...                            ?[32;1m[OK]?[0m
    testConstruction_invalidService ...                                    ?[32;1m[OK]?[0m
    test_identityWithNoPassword ...                                        ?[32;1m[OK]?[0m
    test_identityWithNoPassword_plain ...                                  ?[32;1m[OK]?[0m
    testgetService ...                                                     ?[32;1m[OK]?[0m
    testmakeIdentity ...                                                   ?[32;1m[OK]?[0m
    testmakeIdentity_invalid ...                                           ?[32;1m[OK]?[0m
    testsetIdentity ...                                                    ?[32;1m[OK]?[0m
    testsetIdentityName ...                                                ?[32;1m[OK]?[0m
    testsetIdentityName_invalid ...                                        ?[32;1m[OK]?[0m
    testsetIdentity_invalid ...                                            ?[32;1m[OK]?[0m
  ServiceTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    serviceName is frequently used as a key, thus it is expected ...       ?[32;1m[OK]?[0m
    testGetSetPerspetiveSanity ...                                         ?[32;1m[OK]?[0m
    testaddPerspective_invalid ...                                         ?[32;1m[OK]?[0m
    testgetPerspective ...                                                 ?[32;1m[OK]?[0m
    testgetPerspectiveNamed_invalid ...                                    ?[32;1m[OK]?[0m
    testgetServiceName ...                                                 ?[32;1m[OK]?[0m
    testgetServiceName_hashable ...                                        ?[32;1m[OK]?[0m
    testgetServiceType ...                                                 ?[32;1m[OK]?[0m
    testsetServiceParent ...                                               ?[32;1m[OK]?[0m
twisted.test.test_defer
  DeferredTestCase
    testCallbackWithArgs ...                                               ?[32;1m[OK]?[0m
    testCallbackWithKwArgs ...                                             ?[32;1m[OK]?[0m
    testCallbackWithoutArgs ...                                            ?[32;1m[OK]?[0m
    testDeferredList ...                                                   ?[32;1m[OK]?[0m
    testDeferredListFireOnOneError ...                                     ?[32;1m[OK]?[0m
    testGatherResults ...                                                  ?[32;1m[OK]?[0m
    testImmediateFailure ...                                               ?[32;1m[OK]?[0m
    testImmediateSuccess ...                                               ?[32;1m[OK]?[0m
    testMaybeDeferred ...                                                  ?[32;1m[OK]?[0m
    testPausedFailure ...                                                  ?[32;1m[OK]?[0m
    testReturnDeferred ...                                                 ?[32;1m[OK]?[0m
    testTimeOut ...                                                        ?[32;1m[OK]?[0m
    testTwoCallbacks ...                                                   ?[32;1m[OK]?[0m
    testUnpauseBeforeCallback ...                                          ?[32;1m[OK]?[0m
  DeferredTestCaseII
    Testing empty DeferredList. ...                                        ?[32;1m[OK]?[0m
  LogTestCase
    testErrorLog ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_dict
  ParamTest
    Testing command response handling ...                                  ?[32;1m[OK]?[0m
twisted.test.test_dirdbm
  DirDbmTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
  ShelfTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
twisted.test.test_dns
  RountripDNSTestCase
    testName ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testRR ...                                                             ?[32;1m[OK]?[0m
    testResources ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_doc
  DocCoverage
    Looking for docstrings in all modules. ...                        ?[34;1m[SKIPPED]?[0m
    Looking for docstrings in all packages. ...                            ?[32;1m[OK]?[0m
twisted.test.test_domhelpers
  DomHelpersTest
    test_clearNode ...                                                     ?[32;1m[OK]?[0m
    test_escape ...                                                        ?[32;1m[OK]?[0m
    test_findElementsWithAttribute ...                                     ?[32;1m[OK]?[0m
    test_findNodesNamed ...                                                ?[32;1m[OK]?[0m
    test_gatherTextNodes ...                                               ?[32;1m[OK]?[0m
    test_get ...                                                           ?[32;1m[OK]?[0m
    test_getAndClear ...                                                   ?[32;1m[OK]?[0m
    test_getElementsByTagName ...                                          ?[32;1m[OK]?[0m
    test_getIfExists ...                                                   ?[32;1m[OK]?[0m
    test_getParents ...                                                    ?[32;1m[OK]?[0m
    test_locateNodes ...                                                   ?[32;1m[OK]?[0m
    test_unescape ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_enterprise
  EnterpriseTestCase
    testBulk ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testUpdate ...                                                         ?[32;1m[OK]?[0m
  QuotingTestCase
    testQuoting ...                                                        ?[32;1m[OK]?[0m
twisted.test.test_ethernet
  EthernetTestCase
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a negative number raises an exception. ...      ?[32;1m[OK]?[0m
    Adding a wrong level protocol raises an exception. ...                 ?[32;1m[OK]?[0m
    testDemuxing ...                                                       ?[32;1m[OK]?[0m
    testMultiplePackets ...                                                ?[32;1m[OK]?[0m
    testMultipleSameProtos ...                                             ?[32;1m[OK]?[0m
    testPacketParsing ...                                                  ?[32;1m[OK]?[0m
    testWrongProtoNotSeen ...                                              ?[32;1m[OK]?[0m
twisted.test.test_explorer
  TestBrowseFunction
    Basic checks for browse_function. ...                                  ?[32;1m[OK]?[0m
    Testing function with crazy signature. ...                             ?[32;1m[OK]?[0m
    Testing zero-argument function signature. ...                          ?[32;1m[OK]?[0m
    Testing simple function signature. ...                                 ?[32;1m[OK]?[0m
    Testing variable-argument function signature. ...                      ?[32;1m[OK]?[0m
  TestBrowser
    Following a chain of Explorers. ...                                    ?[32;1m[OK]?[0m
twisted.test.test_factories
  ReconnectingFactoryTestCase
    testStopTrying ...
c:\sf\Twisted\twisted\internet\win32eventreactor.py:164: exceptions.DeprecationWarning: Foolish capitalist!  Your opulen
t toilet will be your undoing!!

c:\sf\Twisted\twisted\internet\win32eventreactor.py:181: exceptions.DeprecationWarning: The proletariat is victorious.

c:\sf\Twisted\twisted\internet\win32eventreactor.py:198: exceptions.DeprecationWarning: Foolish capitalist!  Your opulen
t toilet will be your undoing!!

c:\sf\Twisted\twisted\internet\win32eventreactor.py:213: exceptions.DeprecationWarning: The proletariat is victorious.
                                                    ?[32;1m[OK]?[0m
twisted.test.test_failure
  FailureTestCase
    Trapping a failure. ...                                                ?[32;1m[OK]?[0m
    testPrinting ...                                                       ?[32;1m[OK]?[0m
    Making sure trap doesn't trap what it shouldn't. ...                   ?[32;1m[OK]?[0m
twisted.test.test_formmethod
  ArgumentTestCase
    testBoolean ...                                                        ?[32;1m[OK]?[0m
    testChoice ...                                                         ?[32;1m[OK]?[0m
    testDate ...                                                           ?[32;1m[OK]?[0m
    testFlags ...                                                          ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInt ...                                                            ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
twisted.test.test_ftp
  FTPClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                             ?[31;1m[FAIL]?[0m
    testRetr ...                                                         ?[31;1m[FAIL]?[0m
    testShortFileListings ...                                            ?[31;1m[FAIL]?[0m
    testStor ...                                                         ?[34;1m[TODO]?[0m
  FTPClientTests
    testFailedRETR ...                                                     ?[32;1m[OK]?[0m
  FTPFileListingTests
    testOneLine ...                                                        ?[32;1m[OK]?[0m
  FTPPassiveClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                             ?[31;1m[FAIL]?[0m
    testRetr ...                                                         ?[31;1m[FAIL]?[0m
    testShortFileListings ...                                            ?[31;1m[FAIL]?[0m
    testStor ...                                                         ?[31;1m[FAIL]?[0m
  UtilTestCase
    testDecodeHostPort ...                                                 ?[32;1m[OK]?[0m
twisted.test.test_hashless
  TestHashlessDictionary
    test_EvilClass ...                                                     ?[32;1m[OK]?[0m
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakKeyDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakValueDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_hook
  HookTestCase
    make sure that the base class's hook is called reliably ...            ?[32;1m[OK]?[0m
    test interactions between base-class hooks and subclass hooks ...      ?[32;1m[OK]?[0m
twisted.test.test_htb
  ConsumerShaperTest
    testBucketRefs ...                                                     ?[32;1m[OK]?[0m
    testRate ...                                                           ?[32;1m[OK]?[0m
  TestBucket
    Testing the bucket's drain rate. ...                                   ?[32;1m[OK]?[0m
    Testing the size of the bucket. ...                                    ?[32;1m[OK]?[0m
  TestBucketNesting
    testBucketParentRate ...                                               ?[32;1m[OK]?[0m
    testBucketParentSize ...                                               ?[32;1m[OK]?[0m
twisted.test.test_http
  ChunkingTestCase
    testChunks ...                                                         ?[32;1m[OK]?[0m
    testConcatenatedChunks ...                                             ?[32;1m[OK]?[0m
  DateTimeTest
    testRoundtrip ...                                                      ?[32;1m[OK]?[0m
  HTTP0_9TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_0TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1_close_TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTPLoopbackTestCase
    testLoopback ...                                                       ?[32;1m[OK]?[0m
  ParsingTestCase
    testCookies ...                                                        ?[32;1m[OK]?[0m
    testGET ...                                                            ?[32;1m[OK]?[0m
    testHeaders ...                                                        ?[32;1m[OK]?[0m
    testPOST ...                                                           ?[32;1m[OK]?[0m
  PersistenceTestCase
    testAlgorithm ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_imap
  AuthenticatorTestCase
    testCramMD5 ...                                                        ?[32;1m[OK]?[0m
    testFailedCramMD5 ...                                                  ?[32;1m[OK]?[0m
  HandCraftedTestCase
    testTrailingLiteral ...                                                ?[32;1m[OK]?[0m
  IMAP4HelperTestCase
    testIdListParser ...                                                   ?[32;1m[OK]?[0m
    testLiterals ...                                                       ?[32;1m[OK]?[0m
    testParenParser ...                                                    ?[32;1m[OK]?[0m
    testQueryBuilder ...                                                   ?[32;1m[OK]?[0m
    testQuotedSplitter ...                                                 ?[32;1m[OK]?[0m
    testStringCollapser ...                                                ?[32;1m[OK]?[0m
  IMAP4ServerTestCase
    testAppend ...

--------


c:\sf\Twisted>py22 bin\trial -p twisted.test -v
c:\sf\Twisted\twisted\protocols\dns.py:50: RuntimeWarning: PyCrypto not available - proceeding with non-cryptographicall
y secure random source
  1
twisted.test.test_app
  AppTestCase
    testIllegalUnlistens ...                                               ?[32;1m[OK]?[0m
    testListenUnlistenTCP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUDP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUNIX ...                                             ?[32;1m[OK]?[0m
  ServiceTestCase
    testRegisterService ...                                                ?[32;1m[OK]?[0m
twisted.test.test_banana
  BananaTestCase
    testCrashString ...                                                    ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInteger ...                                                        ?[32;1m[OK]?[0m
    testList ...                                                           ?[32;1m[OK]?[0m
    testLong ...                                                           ?[32;1m[OK]?[0m
    testNegative ...                                                       ?[32;1m[OK]?[0m
    testNegativeLong ...                                                   ?[32;1m[OK]?[0m
    testOversizedList ...                                                  ?[32;1m[OK]?[0m
    testOversizedString ...                                                ?[32;1m[OK]?[0m
    testPartial ...                                                        ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
  MathTestCase
    testInt2b128 ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_bounce
  BounceTestCase
    testBounceFormat ...                                                   ?[32;1m[OK]?[0m
    testBounceMIME ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_coil
  CoilTest
    testConfigurable ...                                                   ?[32;1m[OK]?[0m
    testCustomConfigurable ...                                             ?[32;1m[OK]?[0m
    testRegistration ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_compat
  CompatTestCase
    testBool ...                                                           ?[32;1m[OK]?[0m
    testDict ...                                                           ?[32;1m[OK]?[0m
    testIsinstance ...                                                     ?[32;1m[OK]?[0m
    testIteration ...                                                      ?[32;1m[OK]?[0m
    testStrip ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_components
  AdapterTestCase
    testAllowDuplicates ...                                                ?[32;1m[OK]?[0m
    testBadRegister ...                                                    ?[32;1m[OK]?[0m
    testGetAdapter ...                                                     ?[32;1m[OK]?[0m
    testGetAdapterClass ...                                                ?[32;1m[OK]?[0m
    testGetSubAdapter ...                                                  ?[32;1m[OK]?[0m
    testNoAdapter ...                                                      ?[32;1m[OK]?[0m
    testParentInterface ...                                                ?[32;1m[OK]?[0m
    testSelfIsAdapter ...                                                  ?[32;1m[OK]?[0m
  ComponentizedTestCase
    testComponentized ...                                                  ?[32;1m[OK]?[0m
    testInheritanceAdaptation ...                                          ?[32;1m[OK]?[0m
    testMultiAdapter ...                                                   ?[32;1m[OK]?[0m
  InterfacesTestCase
    testClasses ...                                                        ?[32;1m[OK]?[0m
    testGetInterfaces ...                                                  ?[32;1m[OK]?[0m
    testInstanceOnlyImplements ...                                         ?[32;1m[OK]?[0m
    testInstances ...                                                      ?[32;1m[OK]?[0m
    testOther ...                                                          ?[32;1m[OK]?[0m
    testSuperInterfaces ...                                                ?[32;1m[OK]?[0m
    testTupleTrees ...                                                     ?[32;1m[OK]?[0m
  TestInterfaceInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
  TestMetaInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
    testComponentizedInteraction ...                                       ?[32;1m[OK]?[0m
    testCustomRegistry ...                                                 ?[32;1m[OK]?[0m
    testInterfaceAdaptMethod ...                                           ?[32;1m[OK]?[0m
    testRegistryPersistence ...                                            ?[32;1m[OK]?[0m
twisted.test.test_context
  ContextTest
    testBasicContext ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_cred
  AuthorizerTestCase
    test_addIdent ...                                                      ?[32;1m[OK]?[0m
    test_nonExistentIdent ...                                              ?[32;1m[OK]?[0m
  FunctionsTestCase
    test_challenge ...                                                     ?[32;1m[OK]?[0m
  IdentityTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    test_addKeyByString ...                                                ?[32;1m[OK]?[0m
    test_addKeyForPerspective ...                                          ?[32;1m[OK]?[0m
    test_getAllKeys ...                                                    ?[32;1m[OK]?[0m
    test_removeKey ...                                                     ?[32;1m[OK]?[0m
    test_removeKey_invalid ...                                             ?[32;1m[OK]?[0m
    test_setPassword_invalid ...                                           ?[32;1m[OK]?[0m
    test_verifyPassword ...                                                ?[32;1m[OK]?[0m
    test_verifyPlainPassword ...                                           ?[32;1m[OK]?[0m
  PerspectiveTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    testConstruction_invalidIdentityName ...                               ?[32;1m[OK]?[0m
    testConstruction_invalidPerspectiveName ...                            ?[32;1m[OK]?[0m
    testConstruction_invalidService ...                                    ?[32;1m[OK]?[0m
    test_identityWithNoPassword ...                                        ?[32;1m[OK]?[0m
    test_identityWithNoPassword_plain ...                                  ?[32;1m[OK]?[0m
    testgetService ...                                                     ?[32;1m[OK]?[0m
    testmakeIdentity ...                                                   ?[32;1m[OK]?[0m
    testmakeIdentity_invalid ...                                           ?[32;1m[OK]?[0m
    testsetIdentity ...                                                    ?[32;1m[OK]?[0m
    testsetIdentityName ...                                                ?[32;1m[OK]?[0m
    testsetIdentityName_invalid ...                                        ?[32;1m[OK]?[0m
    testsetIdentity_invalid ...                                            ?[32;1m[OK]?[0m
  ServiceTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    serviceName is frequently used as a key, thus it is expected ...       ?[32;1m[OK]?[0m
    testGetSetPerspetiveSanity ...                                         ?[32;1m[OK]?[0m
    testaddPerspective_invalid ...                                         ?[32;1m[OK]?[0m
    testgetPerspective ...                                                 ?[32;1m[OK]?[0m
    testgetPerspectiveNamed_invalid ...                                    ?[32;1m[OK]?[0m
    testgetServiceName ...                                                 ?[32;1m[OK]?[0m
    testgetServiceName_hashable ...                                        ?[32;1m[OK]?[0m
    testgetServiceType ...                                                 ?[32;1m[OK]?[0m
    testsetServiceParent ...                                               ?[32;1m[OK]?[0m
twisted.test.test_defer
  DeferredTestCase
    testCallbackWithArgs ...                                               ?[32;1m[OK]?[0m
    testCallbackWithKwArgs ...                                             ?[32;1m[OK]?[0m
    testCallbackWithoutArgs ...                                            ?[32;1m[OK]?[0m
    testDeferredList ...                                                   ?[32;1m[OK]?[0m
    testDeferredListFireOnOneError ...                                     ?[32;1m[OK]?[0m
    testGatherResults ...                                                  ?[32;1m[OK]?[0m
    testImmediateFailure ...                                               ?[32;1m[OK]?[0m
    testImmediateSuccess ...                                               ?[32;1m[OK]?[0m
    testMaybeDeferred ...                                                  ?[32;1m[OK]?[0m
    testPausedFailure ...                                                  ?[32;1m[OK]?[0m
    testReturnDeferred ...                                                 ?[32;1m[OK]?[0m
    testTimeOut ...                                                        ?[32;1m[OK]?[0m
    testTwoCallbacks ...                                                   ?[32;1m[OK]?[0m
    testUnpauseBeforeCallback ...                                          ?[32;1m[OK]?[0m
  DeferredTestCaseII
    Testing empty DeferredList. ...                                        ?[32;1m[OK]?[0m
  LogTestCase
    testErrorLog ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_dict
  ParamTest
    Testing command response handling ...                                  ?[32;1m[OK]?[0m
twisted.test.test_dirdbm
  DirDbmTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
  ShelfTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
twisted.test.test_dns
  RountripDNSTestCase
    testName ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testRR ...                                                             ?[32;1m[OK]?[0m
    testResources ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_doc
  DocCoverage
    Looking for docstrings in all modules. ...                        ?[34;1m[SKIPPED]?[0m
    Looking for docstrings in all packages. ...                            ?[32;1m[OK]?[0m
twisted.test.test_domhelpers
  DomHelpersTest
    test_clearNode ...                                                     ?[32;1m[OK]?[0m
    test_escape ...                                                        ?[32;1m[OK]?[0m
    test_findElementsWithAttribute ...                                     ?[32;1m[OK]?[0m
    test_findNodesNamed ...                                                ?[32;1m[OK]?[0m
    test_gatherTextNodes ...                                               ?[32;1m[OK]?[0m
    test_get ...                                                           ?[32;1m[OK]?[0m
    test_getAndClear ...                                                   ?[32;1m[OK]?[0m
    test_getElementsByTagName ...                                          ?[32;1m[OK]?[0m
    test_getIfExists ...                                                   ?[32;1m[OK]?[0m
    test_getParents ...                                                    ?[32;1m[OK]?[0m
    test_locateNodes ...                                                   ?[32;1m[OK]?[0m
    test_unescape ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_enterprise
  EnterpriseTestCase
    testBulk ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testUpdate ...                                                         ?[32;1m[OK]?[0m
  QuotingTestCase
    testQuoting ...                                                        ?[32;1m[OK]?[0m
twisted.test.test_ethernet
  EthernetTestCase
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a negative number raises an exception. ...      ?[32;1m[OK]?[0m
    Adding a wrong level protocol raises an exception. ...                 ?[32;1m[OK]?[0m
    testDemuxing ...                                                       ?[32;1m[OK]?[0m
    testMultiplePackets ...                                                ?[32;1m[OK]?[0m
    testMultipleSameProtos ...                                             ?[32;1m[OK]?[0m
    testPacketParsing ...                                                  ?[32;1m[OK]?[0m
    testWrongProtoNotSeen ...                                              ?[32;1m[OK]?[0m
twisted.test.test_explorer
  TestBrowseFunction
    Basic checks for browse_function. ...                                  ?[32;1m[OK]?[0m
    Testing function with crazy signature. ...                             ?[32;1m[OK]?[0m
    Testing zero-argument function signature. ...                          ?[32;1m[OK]?[0m
    Testing simple function signature. ...                                 ?[32;1m[OK]?[0m
    Testing variable-argument function signature. ...                      ?[32;1m[OK]?[0m
  TestBrowser
    Following a chain of Explorers. ...                                    ?[32;1m[OK]?[0m
twisted.test.test_factories
  ReconnectingFactoryTestCase
    testStopTrying ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_failure
  FailureTestCase
    Trapping a failure. ...                                                ?[32;1m[OK]?[0m
    testPrinting ...                                                       ?[32;1m[OK]?[0m
    Making sure trap doesn't trap what it shouldn't. ...                   ?[32;1m[OK]?[0m
twisted.test.test_formmethod
  ArgumentTestCase
    testBoolean ...                                                        ?[32;1m[OK]?[0m
    testChoice ...                                                         ?[32;1m[OK]?[0m
    testDate ...                                                           ?[32;1m[OK]?[0m
    testFlags ...                                                          ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInt ...                                                            ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
twisted.test.test_ftp
  FTPClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                               ?[32;1m[OK]?[0m
    testRetr ...                                                           ?[32;1m[OK]?[0m
    testShortFileListings ...                                              ?[32;1m[OK]?[0m
    testStor ...                                                         ?[34;1m[TODO]?[0m
  FTPClientTests
    testFailedRETR ...                                                     ?[32;1m[OK]?[0m
  FTPFileListingTests
    testOneLine ...                                                        ?[32;1m[OK]?[0m
  FTPPassiveClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                               ?[32;1m[OK]?[0m
    testRetr ...                                                           ?[32;1m[OK]?[0m
    testShortFileListings ...                                              ?[32;1m[OK]?[0m
    testStor ...                                                           ?[32;1m[OK]?[0m
  UtilTestCase
    testDecodeHostPort ...                                                 ?[32;1m[OK]?[0m
twisted.test.test_hashless
  TestHashlessDictionary
    test_EvilClass ...                                                     ?[32;1m[OK]?[0m
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakKeyDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakValueDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_hook
  HookTestCase
    make sure that the base class's hook is called reliably ...            ?[32;1m[OK]?[0m
    test interactions between base-class hooks and subclass hooks ...      ?[32;1m[OK]?[0m
twisted.test.test_htb
  ConsumerShaperTest
    testBucketRefs ...                                                     ?[32;1m[OK]?[0m
    testRate ...                                                           ?[32;1m[OK]?[0m
  TestBucket
    Testing the bucket's drain rate. ...                                   ?[32;1m[OK]?[0m
    Testing the size of the bucket. ...                                    ?[32;1m[OK]?[0m
  TestBucketNesting
    testBucketParentRate ...                                               ?[32;1m[OK]?[0m
    testBucketParentSize ...                                               ?[32;1m[OK]?[0m
twisted.test.test_http
  ChunkingTestCase
    testChunks ...                                                         ?[32;1m[OK]?[0m
    testConcatenatedChunks ...                                             ?[32;1m[OK]?[0m
  DateTimeTest
    testRoundtrip ...                                                      ?[32;1m[OK]?[0m
  HTTP0_9TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_0TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1_close_TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTPLoopbackTestCase
    testLoopback ...                                                       ?[32;1m[OK]?[0m
  ParsingTestCase
    testCookies ...                                                        ?[32;1m[OK]?[0m
    testGET ...                                                            ?[32;1m[OK]?[0m
    testHeaders ...                                                        ?[32;1m[OK]?[0m
    testPOST ...                                                           ?[32;1m[OK]?[0m
  PersistenceTestCase
    testAlgorithm ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_imap
  AuthenticatorTestCase
    testCramMD5 ...                                                        ?[32;1m[OK]?[0m
    testFailedCramMD5 ...                                                  ?[32;1m[OK]?[0m
  HandCraftedTestCase
    testTrailingLiteral ...                                                ?[32;1m[OK]?[0m
  IMAP4HelperTestCase
    testIdListParser ...                                                   ?[32;1m[OK]?[0m
    testLiterals ...                                                       ?[32;1m[OK]?[0m
    testParenParser ...                                                    ?[32;1m[OK]?[0m
    testQueryBuilder ...                                                   ?[32;1m[OK]?[0m
    testQuotedSplitter ...                                                 ?[32;1m[OK]?[0m
    testStringCollapser ...                                                ?[32;1m[OK]?[0m
  IMAP4ServerTestCase
    testAppend ...




From bob at redivi.com  Wed Jun 11 16:12:42 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 11 Jun 2003 16:12:42 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <0ECF8C78-9C49-11D7-8F8B-000A95686CD8@redivi.com>

On Wednesday, Jun 11, 2003, at 15:35 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
>
>> trial -v (Black-n-white verbose output)
>> trial --color -v (Colorful verbose output)
>
> Perhaps color should only be used if sys.stdout.isatty()?

and sys.platform != 'windows'

-bob




From 2002 at weholt.org  Wed Jun 11 16:11:47 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 11 Jun 2003 22:11:47 +0200
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
Message-ID: <005801c33055$b19ce9f0$0401a8c0@razor>

I got a root-resource object which handles generation of content for an
entire site. I need a server which serves xml-rpc *and* soap webservices on
the same port as the root-resource. How can I accomplish this? I've allready
subclassed the root-resource from twisted.web.resource. Can I use any sort
of mixin to do this?

Any hints?

Thomas




From cliechti at gmx.net  Wed Jun 11 16:27:59 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Wed, 11 Jun 2003 22:27:59 +0200
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <3EE790CF.9000202@gmx.net>

Glyph Lefkowitz wrote:
> 
> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
> 
>> trial -v (Black-n-white verbose output)
>> trial --color -v (Colorful verbose output)

yes, looks nice for me.

> Perhaps color should only be used if sys.stdout.isatty()?

but unfortunately:

Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.

C:\>python
Python 2.2.2 (#37, Oct 14 2002, 17:02:34) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
 >>> import sys
 >>> sys.stdout.isatty()
64
 >>>

isatty() may rule out captured output in an IDE, but it does not help 
for the stupid windows console window.

chris




From bob at redivi.com  Wed Jun 11 16:40:30 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 11 Jun 2003 16:40:30 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <3EE790CF.9000202@gmx.net>
Message-ID: <F0D1199B-9C4C-11D7-8F8B-000A95686CD8@redivi.com>

On Wednesday, Jun 11, 2003, at 16:27 America/New_York, Chris Liechti 
wrote:

> Glyph Lefkowitz wrote:
>> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
>>> trial -v (Black-n-white verbose output)
>>> trial --color -v (Colorful verbose output)
>
> yes, looks nice for me.
>
>> Perhaps color should only be used if sys.stdout.isatty()?
>
> but unfortunately:
>
> isatty() may rule out captured output in an IDE, but it does not help 
> for the stupid windows console window.

Yeah, but (sys.stdout.isatty() and sys.platform != 'windows') would.  
For the countable-on-hands number of windows python developers in the 
world that have ansi.sys (or equivalent) running, a --color flag could 
force it to be on.

-bob




From dalke at dalkescientific.com  Wed Jun 11 16:56:25 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 14:56:25 -0600
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <005801c33055$b19ce9f0$0401a8c0@razor>
Message-ID: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>

Thomas Weholt:
> I got a root-resource object which handles generation of content for an
> entire site. I need a server which serves xml-rpc *and* soap 
> webservices on
> the same port as the root-resource. How can I accomplish this? I've 
> allready
> subclassed the root-resource from twisted.web.resource. Can I use any 
> sort
> of mixin to do this?

You can do it as a mixin, like this

class MyXMLRPC(xmlrpc.XMLRPC):
   def xmlrpc_spam(self, i):
     return ", ".join(["spam"]*i)

class MySOAP(soap.SOAPPublisher):
   def soap_hello(self, name):
     return "Hello, %s" % (name,)

class YourRootResource(..., MyXMLRPC, MySOAP):
     def render(self, request):
       ct = request.getHeader("Content-Type"):
       if ct == "text/xml":
         # Either XML-RPC or SOAP
         if request.getHeader("SOAPAction") is None:
           return MyXMLRPC.render(self, request)
         return MySOAP.render(self, request)
       # proceed as normal

This works because both SOAP and XML-RPC send a "text/xml" in the
content-type, and SOAP also sends a SOAPAction in the header.

However, I would do it with composition, and not as a mixin.  That is,

class YourRootResource(Request):
     def __init__(self):
       self.xmlrpc_handler = MyXMLRPC()
       self.soap_handler = MySOAP()
     def render(self, request):
       ct = request.getHeader("Content-Type"):
       if ct == "text/xml":
         # Either XML-RPC or SOAP
         if request.getHeader("SOAPAction") is None:
           return self.xmlrpc_handler.render(self, request)
         return self.soap_heandler.render(self, request)
       # proceed as normal

This is because both the SOAP and XML-RPC implements make reference to
other methods in the class defintion, like "_gotResult", and I would
rather not have the possibility of reusing one of those methods by
accident.

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Wed Jun 11 20:04:24 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 18:04:24 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030611123145.GC3381@frobozz>
Message-ID: <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>

Andrew Bennetts:
> Hooray for BuildBot!
>
> The latest build of the CVS docs can now be found at:
>
>     http://twistedmatrix.com/users/warner/doc-latest/

Now if it's made available from the front page or some other
place people can more easily find it ...

And if the various problems (from webchecker.py) were fixed....


Error ('http error', 404, 'Not Found')
  HREF  http://twistedmatrix.com/users/warner/doc-latest/api/index.html
   from http://twistedmatrix.com/users/warner/doc-latest/  
(api/index.html)

Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
deferex.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/index.html  
(2003/pycon/deferex.html)
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/twisted- 
reality/twisted-reality.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/index.html  
(2003/twisted-reality/twisted-reality.html)

Error ('http error', 400, 'Bad Request')
  HREF  http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/  
twisted.internet.interface.Transport.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/ 
conch_client.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/ 
common.NS.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/ 
conch_client.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/ 
twisted.coil.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/glossary.xhtml

    ...
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
doc-standard
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
lore/lore.html
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
lore
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
lore/lore.html
   ...

    (Huh - those have a "1.0.3" when the others don't have a version
     number in the URL.)
   ...

Error ('http error', 404, 'Not Found')
  HREF  http://twistedmatrix.com/users/moshez/debian
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/basics.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
applications/stylesheet.css
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
applications/applications.html (stylesheet.css)
    ...
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/howto/listings/lore/ 
1st_example.xhtml
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/extend- 
lore.xhtml (listings/lore/1st_example.xhtml)
    ...
Error ('http error', 404, 'Not Found')
  HREF  http://purl.net/net/CVSToys/
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/pclients.xhtml
    ...


I'm hard to please, eh? ;)

(And I didn't include everything - just enough to get an idea
that links are broken.)

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Wed Jun 11 21:21:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Jun 2003 11:21:08 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>
References: <20030611123145.GC3381@frobozz> <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030612012107.GA4755@frobozz>

On Wed, Jun 11, 2003 at 06:04:24PM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >Hooray for BuildBot!
> >
> >The latest build of the CVS docs can now be found at:
> >
> >    http://twistedmatrix.com/users/warner/doc-latest/
> 
> Now if it's made available from the front page or some other
> place people can more easily find it ...
> 
> And if the various problems (from webchecker.py) were fixed....

At a glance, there are two main problems:

  - We don't build the API docs on every checkin, because that takes far too
    long.  Probably we should use
      --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/%s.html
    in the BuildBot to fix this.
  - The doc/examples and doc/historic directories aren't being built,
    either.

> 
>    ...
> Error ('http error', 404, 'Not Found')
>  HREF   
> http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
> doc-standard
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
> lore/lore.html
[...]
> 
>    (Huh - those have a "1.0.3" when the others don't have a version
>     number in the URL.)
>   ...

The PyCon Lore paper has a link to the 1.0.3 docs, because it's a
"historical" document.  1.0.3 was the version of Twisted that paper was
written for... I'm surprised those URLs don't work anymore :(

> Error ('http error', 404, 'Not Found')
>  HREF  http://twistedmatrix.com/users/moshez/debian
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/basics.xhtml

Fixed :)

> Error ('http error', 404, 'Not Found')
>  HREF   
> http://twistedmatrix.com/users/warner/doc-latest/howto/listings/lore/ 
> 1st_example.xhtml
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/extend- 
> lore.xhtml (listings/lore/1st_example.xhtml)

Hmm, that looks like perhaps doc/howto/listings isn't being built either.

>    ...
> Error ('http error', 404, 'Not Found')
>  HREF  http://purl.net/net/CVSToys/
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/pclients.xhtml
>    ...

Fixed :)

> 
> I'm hard to please, eh? ;)

So long as your bug reports are comprehensive, I don't mind... :)

-Andrew.




From radix at twistedmatrix.com  Wed Jun 11 20:38:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 11 Jun 2003 20:38:54 -0400
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Wed, Jun 11, 2003 at 16:56:25 -0400
References: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030612003854.GA535@toshi.anaprd01.md.comcast.net>

On 2003.06.11 16:56, Andrew Dalke wrote:
> Thomas Weholt:
> > I got a root-resource object which handles generation of content for an
> > entire site. I need a server which serves xml-rpc *and* soap 
> > webservices on
> > the same port as the root-resource. How can I accomplish this? I've 
> > allready
> > subclassed the root-resource from twisted.web.resource. Can I use any 
> > sort
> > of mixin to do this?
> 
> You can do it as a mixin, like this
> 
...

> 
> This works because both SOAP and XML-RPC send a "text/xml" in the
> content-type, and SOAP also sends a SOAPAction in the header.
> 

I'm pretty sure this isn't necessary (god, I hope it's not) -- XMLRPC, at 
least, is conventionally served at the /RPC2 path on the server. Just
putChild your XMLRPC resource onto your root resource at "RPC2". SOAP
probably has something similar...

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Wed Jun 11 22:49:59 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 20:49:59 -0600
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <20030612003854.GA535@toshi.anaprd01.md.comcast.net>
Message-ID: <8E9E3C30-9C80-11D7-875B-000393C92466@dalkescientific.com>

Christopher Armstrong wrote:
> I'm pretty sure this isn't necessary (god, I hope it's not) -- XMLRPC, 
> at
> least, is conventionally served at the /RPC2 path on the server. Just
> putChild your XMLRPC resource onto your root resource at "RPC2". SOAP
> probably has something similar...

Ahh, I misinterpreted the question.  I read "same port as the
root-resource" to be "same resource".  Given your (much more
likely to be the proper) interpretation, Andrew Bennetts
recently answered it at the bottom of

   http://twistedmatrix.com/pipermail/twisted-python/2003-May/004229.html

I think too I've been thinking too much about content negotiation
under ReST.  ;)

					Andrew
					dalke at dalkescientific.com




From vaughn at sewardconsulting.com  Wed Jun 11 21:07:21 2003
From: vaughn at sewardconsulting.com (Vaughn H. Seward)
Date: Wed, 11 Jun 2003 19:07:21 -0600
Subject: [Twisted-Python] Licensing
Message-ID: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>

Greetings,

Twisted appears to be just the thing that could assist us in a commercial 
product we are designing. The product requires some secure network 
transactions to be controlled by a central server. I haven't finished 
reading all the Twisted documentation yet but it looks promising so far.

What is your policy on licensing? I couldn't find any thing about it on 
your web site. I.e. are we allowed to incorporate in it our product?

Thanks,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030611/76478c6f/attachment.htm 

From andrew-twisted at puzzling.org  Thu Jun 12 02:02:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Jun 2003 16:02:15 +1000
Subject: [Twisted-Python] Licensing
In-Reply-To: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
References: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
Message-ID: <20030612060215.GD4755@frobozz>

On Wed, Jun 11, 2003 at 07:07:21PM -0600, Vaughn H. Seward wrote:
[...]
> 
>    What is your policy on licensing? I couldn't find any thing about it on
>    your web site. I.e. are we allowed to incorporate in it our product?

As stated on the front page of http://twistedmatrix.com/ :

    "... Twisted, an event-driven networking framework written in Python and
    licensed under the LGPL."

Also, if you download the software you'll find it contains a file named
"LICENSE", which contains the LGPL.

(Possibly this could be made clearer, though; maybe the "Download" page
should mention the license?)

-Andrew.




From m at moshez.org  Thu Jun 12 05:25:44 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jun 2003 09:25:44 -0000
Subject: [Twisted-Python] Licensing
In-Reply-To: <20030612060215.GD4755@frobozz>
References: <20030612060215.GD4755@frobozz>, <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
Message-ID: <20030612092544.14008.qmail@green.zadka.com>

On Thu, 12 Jun 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

>     "... Twisted, an event-driven networking framework written in Python and
>     licensed under the LGPL."

Complementing Andrew's response, if you do not want to download all
of Twisted, the LGPL can be found in:
http://www.gnu.org/licenses/lgpl.html

If you find the LGPL too restrictive, you should talk directly to Glyph:
he is the sole copyright owner, and has the power to negotiate with you
any license he wants. What "we" (the Twisted development team) think about
so this is not the correct forum to ask such questions.
 
This pretty sums up everything there is to know about Twisted licensing:
either use the LGPL, or ask Glyph how much money he wants for another
license. :)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From arashi1 at pd.jaring.my  Thu Jun 12 08:29:18 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Thu, 12 Jun 2003 20:29:18 +0800
Subject: [Twisted-Python] Default location for templates of .rpy's
Message-ID: <200306122029.18382.arashi1@pd.jaring.my>

Hello all, 

I've been playing with twisted.web stuff and I've come across an puzzle. When 
you're using web.static.File to 'serve' directories (using a custom 
webserver), and there are .rpy files you want to use in the directory tree, 
it seems necessary include the templateDirectory:

resource = page.Page("Hello World!", templateFile = "index.xhtml", \ 
templateDirectory = os.path.split(__file__)[0])

in the .rpy you use even when the template file is in the very same directory 
as the .rpy file. Otherwise twisted complains about file not found. Why is 
that? Isn't the same directory as the .rpy be a safe default to search first?
It just seems like making things more complicated than necessary.




From Karl.Lewin at BNSF.com  Thu Jun 12 09:12:29 2003
From: Karl.Lewin at BNSF.com (Lewin, Karl E)
Date: Thu, 12 Jun 2003 08:12:29 -0500
Subject: [Twisted-Python] Adding persistent db connections to twisted web server?
Message-ID: <EE8A3398977ED71195AC0002A5609B327F1ACB@ftwntexmp004.bnsf.com>

What is the best/accepted/preferred approach to adding a pool of db
connections that can be re-used in *.rpy's?

My first attempt is to add have a class like this:

# DBPool.py
from twisted.enterprise import adbapi 
from MySQLdb import cursors

class genericQuery(adbapi.Augmentation): 
        def __init__(self):
		adbapi.Augmentation.__init__(self,
                                         adbapi.ConnectionPool"MySQLdb",
                                         host='localhost',db='xxxxx',
                                         cursorclass=cursors.DictCursor))
	def getData(self,sql,parms=None):
	        if parms==None:
			return self.runQuery(sql)
		else:
			return self.runQuery(sql,parms)

And make a copy of web.py with the following added to the updateApplication
function:

    root.registry.setComponent(genericQuery,genericQuery())

(with the proper imports added as well) and then test it with something
like:


#test.rpy
from twisted.enterprise import adbapi 
from twisted.web import resource,server
from DBPool import genericQuery

class MyGreatResource(resource.Resource):
    def render(self, request):
        q = registry.getComponent(genericQuery)
        d = q.getData("select version()")
        d.addCallback(self.returnResult,request)
        return server.NOT_DONE_YET

    def returnResult(self, resultlist, request):
        request.write(`resultlist`)
	request.finish()

resource = MyGreatResource()

I realize that there can be some more paramaterization of the
dbmodule/database/etc parameters but I haven't don't that yet.

Is that a decent way of doing this(or rephrased, how stupid is this way of
doing this)?  How an *.rpy that needed to perform multiple queries work?  Is
there an example of using twisted.web and twisted.enterprise together
anywhere?  

Thanks-
Karl



From Karl.Lewin at BNSF.com  Thu Jun 12 10:32:51 2003
From: Karl.Lewin at BNSF.com (Lewin, Karl E)
Date: Thu, 12 Jun 2003 09:32:51 -0500
Subject: [Twisted-Python] DeferredList solves the multiple query issue
Message-ID: <EE8A3398977ED71195AC0002A5609B327F1ACE@ftwntexmp004.bnsf.com>

In my prior note asking about twisted.web and persistent connection pool I
though I had an issue with multiple database queries per rpy but as usual a
little more reading/digging popped up the solution and it is:

 twisted.internet.defer.DeferredList

I knew this had to have been something that was already in place but didn't
look hard enough earlier.  

Karl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030612/f8f3fd31/attachment.htm 

From abe at fettig.net  Thu Jun 12 11:15:32 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jun 2003 11:15:32 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030611102701.GB1423@meson.dyndns.org>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <1055180156.11822.32.camel@mingus> <20030611102701.GB1423@meson.dyndns.org>
Message-ID: <1055430931.7748.41.camel@mingus>

On Wed, 2003-06-11 at 06:27, Jp Calderone wrote:
> On Mon, Jun 09, 2003 at 01:35:56PM -0400, Abe Fettig wrote:
> > [snip]
> > 
> > * The SMTP server: Currently going through a rewrite in CVS.  I need to
> > set up code to manage the outgoing message queue, and keep track of
> > which messages have been delivered to which locations.  Is there code in
> > twisted.mail to do this? (Keep in mind some messages are being delivered
> > to blogs and other non-SMTP locations)
> > 
> 
>   There will be code for this in the relatively near the future -- this is a
> subtask of an item high on my todo list.
> 
> I'll check out your blog and maybe some of the Hep source (if it is
> appropriate to do so?) to get a better idea of your use case, so I can keep
> it in mind.
> 
>   If you want to toss any info my way regarding the details of your use
> case, I'll keep them in mind as I work on the implementation.

I'd like to be able to inherit from a class that handled all the queue
management bits (keeping track of which messages are in the queue,
calling back with a notification of which messages were and were not
delivered, etc).  Something like this:

Class MyQueue(MessageQueue):

	def deliverMessage(self, message, destinationAddress):
		[ my delivery code ]
                [ return a deferred ]
		

q = MyQueue()
d = q.addMessageToQueue(myMessage, destAddresses)
d.addCallback(allMessagesWereDelivered)
d.addErrback(someMessagesWereNotDelivered)


This doesn't take into account cases where you're delivering the same
message to several users on the same SMTP server (a very common case if
you're simply using an upstream server for all delivery).  In this case
calling deliverMessage() once for each address is bad.  Maybe it would
be better if the inheriting class could specify how different groups of
addresses should be delivered, like this:

def getDeliveryFunctionsForAddresess(self, addresses):
	deliveryFunctions = {
		self.deliverToLocalServer:[], 
		self.deliverToUpstreamServer: []}

	for address in addresses:
		if address.endswith("@mylocaldomain")
			deliveryFunctions[self.deliverToLocalServer].append(address)		
		else:
			deliveryFunctions[self.deliverToUpstreamServer].append(address)

	return deliveryFunctions

Another problem is that the queue should be maintained between
sessions.  The server may be shut down while a message is still waiting
to be delivered to one or more destinations.  In that case you may not
be able to rely on getting a callback when a message is delivered (since
the original deferred has probably been lost). Maybe it would be better
to register a function with the queue that gets called each time a
message is delivered, or fails?

q = MyQueue
q.notifierFunction = notifyUserOfDelivery

Anyhow, I'm sure you'll find a better solution than the ones I've listed
here. But hopefully that gives you an idea of what I'd be looking for -
the important thing is that I be able to change the delivery behavior
based on the destination address. If you'd like to take a look at the
code in Hep 0.3.3 you're welcome to - see servers/smtp.py and
agents/deliver.py.  Just keep in mind that this code is 6 months old,
and the architecture of Hep has changed somewhat since then.

Hep can easily convert messages to and from email.Message and/or rfc822
text objects, so I don't have a problem with your code depending on one
of those formats.

Abe




From iko at cd.chalmers.se  Thu Jun 12 11:56:19 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 12 Jun 2003 17:56:19 +0200
Subject: [Twisted-Python] twisted.protocols.imap4
Message-ID: <200306121556.h5CFuJu02228@haddock.cd.chalmers.se>

Hi!

I've started looking at the imap4 server implementation in twisted as
I need it for a project. Before I rip it apart completely to fix the
things I think need fixing, I thought I'd air my complaints and ask if
there was a particular reason things are the way they are. 

First of all, I don't understand why UID message references are
handled they way they are. As I understand it, bit operations on the
message number are used to determine if a particular message number
is a UID or a sequential message number. To me, this looks like an
attempt to optimise something which probably doesn't need it. Anyone
care to comment?

Two, the way the message numbers are parsed (whether UID or not),
result in SERIOUS preformance issues for a message range of the
form 1:*. I feel the message number parser needs to know what
messages are available, which needs some restructuring of the mailbox
interface.

Three, the obligatory patch. Empty strings need to be quoted in
responses.

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 533 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030612/f4b5c5c2/attachment.bin 
-------------- next part --------------
-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From typo at soniq.net  Thu Jun 12 17:43:15 2003
From: typo at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:43:15 +0200
Subject: [Twisted-Python] distrib.UserDirectory improvements
Message-ID: <20030612214315.GA20244@soniq.net>

hi,
moshez suggested me to extend distrib.UserDirectory for my needs.
attached is what i am using right now. 

i hope to integrate this into distrib.py for cvs, later.
please give me feedback!

  paul
-------------- next part --------------
from twisted.web import widgets, static
from twisted.web.distrib import *
import os

if (os.sys.platform != 'win32') and (os.name != 'java'):
        import pwd

# Lines below this, can be merged into distrib.py

def createUserPath(homedir, username, dirname, subdir=''):
    if dirname[0:1] == '~':
        userpath = os.path.join(homedir, dirname[1:])
    else:
        userpath = os.path.join(dirname, username, subdir)

    return userpath

class UserDirectory(widgets.Gadget, widgets.StreamWidget):
    def __init__(self, userDirName='~/public_html', 
                 userSocketName='~/.twistd-web-pb', pbextension='.twistd'):
        widgets.Gadget.__init__(self)

        self.userDirName = userDirName
        self.userSocketName = userSocketName
        self.pbextension = pbextension

    def stream(self, write, request):
        write('<UL>\n')
        for user in pwd.getpwall():
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = user
            realname = string.split(pw_gecos,',')[0]
            if not realname:
                realname = pw_name
            fmtStr = '<LI><A HREF="%s/">%s (%s)</a>\n'
            userdirpath = createUserPath(pw_dir, pw_name, self.userDirName)
            if os.path.exists(userdirpath):
                write(fmtStr% (pw_name,realname,'file'))
            twistdsock = createUserPath(pw_dir, pw_name, 
                                        self.userSocketName, "twistd-web-pb")
            if os.path.exists(twistdsock):
                linknm = '%s%s' % (pw_name, self.pbextension)
                write(fmtStr % (linknm, realname, self.pbextension))
        write('</UL>\n')

    def getWidget(self, chnam, request):
        print "x"
        if chnam[-len(self.pbextension):] == self.pbextension:
            username = chnam[:-len(self.pbextension)]
            sub = 1
        else:
            username = chnam
            sub = 0

        try:
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = pwd.getpwnam(username)
        except KeyError:
            return error.NoResource()

        if sub:
            userpath = createUserPath(pw_dir, username, self.userSocketName,
                                        "twistd-web-pb")
            rs = ResourceSubscription('unix', userpath)
            self.putChild(chnam, rs)
            return rs
        else:
            userpath = createUserPath(pw_dir, username, self.userDirName)
            return static.File(userpath)

From typo at soniq.net  Thu Jun 12 17:46:48 2003
From: typo at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:46:48 +0200
Subject: [Twisted-Python] Re: distrib.UserDirectory improvements
In-Reply-To: <20030612214315.GA20244@soniq.net>
References: <20030612214315.GA20244@soniq.net>
Message-ID: <20030612214648.GA20283@soniq.net>

the reason i've written this:
apache allows you to have user html dirs outside of the homedir,
which is useful when you don't want +x homedirs.

this patch modifies userdirectory so that it's backwards compatible,
but when the constructor is called with different paths,
it behaves like apache.

that is: anything that starts with a ~, is in the users homedir
(~/public_html, and ~/.twistd-web-pb being the defaults)
and everything else is an absolute path.

  paul




From alexander.winston at attbi.com  Thu Jun 12 19:01:45 2003
From: alexander.winston at attbi.com (alexander.winston at attbi.com)
Date: Thu, 12 Jun 2003 23:01:45 +0000
Subject: [Twisted-Python] Updated patch for twisted.web.static.loadMimeTypes()
Message-ID: <E19Qb5M-0006Fz-00@pyramid.twistedmatrix.com>

Attached is an updated patch for the twisted.web.static.loadMimeTypes() function
that now takes a list of mime-types files as an argument.  See the .diff for
more information and/or clarification.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 3052 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030612/0086d08e/attachment.obj 

From glyph at twistedmatrix.com  Fri Jun 13 02:34:43 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 01:34:43 -0500
Subject: [Twisted-Python] release fever
Message-ID: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>

We need a new release to get rolling soon.  Itamar and I have pretty 
much finished the design for newcred (it really feels like it's going 
to work _nicely_, but we haven't implemented anything yet, so stay 
tuned) and of course, this is going to involve some serious changes.  I 
think we can maintain backwards compatibility, but there are going to 
be small changes in lots of places in protocol code (z3p, we need to 
talk to you) that involve doing authentication.

We need to get a 1.0.6 release finalized before this sort of work 
starts hitting CVS; as soon as newcred is in, I want to start the 1.1 
release cycle.




From m at moshez.org  Fri Jun 13 02:49:22 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jun 2003 06:49:22 -0000
Subject: [Twisted-Python] release fever
In-Reply-To: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
References: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
Message-ID: <20030613064922.19103.qmail@green.zadka.com>

On Fri, 13 Jun 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> We need to get a 1.0.6 release finalized before this sort of work 
> starts hitting CVS; as soon as newcred is in, I want to start the 1.1 
> release cycle.

A. Where does it leave HTTP timeout code?
B. I really want some version of localonly (or Jp's rresource) in

These effect the twisted-web Debian package: right now, I wouldn't want
to upload it before these are done.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From 2002 at weholt.org  Fri Jun 13 08:48:49 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 13 Jun 2003 14:48:49 +0200
Subject: [Twisted-Python] Howto use the Gnutella-protocol
Message-ID: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>

Is the gnutella-protocol in Twisted so complete I can use it to query a
gnutella-network and download files? If so, does anybody have any example
code?

Any hints, clues etc. on this matter would be highly appreciated.

Best regards,
Thomas




From itamar at itamarst.org  Fri Jun 13 10:26:35 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 10:26:35 -0400
Subject: [Twisted-Python] release fever
In-Reply-To: <20030613064922.19103.qmail@green.zadka.com>
References: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
	<20030613064922.19103.qmail@green.zadka.com>
Message-ID: <20030613102635.135f383a.itamar@itamarst.org>

On 13 Jun 2003 06:49:22 -0000
Moshe Zadka <m at moshez.org> wrote:

> A. Where does it leave HTTP timeout code?

Checked in to CVS, as far as I know?

> B. I really want some version of localonly (or Jp's rresource) in

Huh?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sf.lists at web.de  Fri Jun 13 11:44:53 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Fri, 13 Jun 2003 17:44:53 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
Message-ID: <3EE9F175.9010401@web.de>

Hi,

I need this for a project, so this is quite urgent.
I got no answer to this until now, so I try again.
Maybe somebody could tell me where to ask, if nobody knows a solution, 
tkanks.

------

I have two seperate processes communicating by Perspective Broker.
One, the server, shall start an external program and send the output to
the client.

See code below.

I get the following traceback (part of it):
---------------------------------------------
File "/export/home/s/stfl/Twisted/twisted/spread/pb.py", line 472, in
expressionReceived
     raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
Failure: twisted.spread.pb.PBConnectionLost:

I've simplified the code to the following:

server (listener.py):
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor, app, protocol
from twisted.cred import authorizer
import os


class ABPP(protocol.ProcessProtocol):
     def __init__(self, receiver):
         self.receiver = receiver
     def connectionMade(self):
         print "connection to client-prg made!"
         # XXX Here the error is triggered
         mydef = self.receiver.callRemote("receiveMessage", "connection
made!")
         mydef.addCallback(self.t)
     def t(self, x):
         print 't:', x


class ABListener(pb.Root):
     def __init__(self):
         self.receiver = None
     def remote_takeMessageReceiver(self, receiver):
         print 'self.receiver = receiver', receiver
         self.receiver = receiver
     def remote_dir(self):
         pp = ABPP(self.receiver)
         command = ['/bin/ls']
         reactor.spawnProcess(pp, command[0], command, env=os.environ)
         reactor.run()


if __name__ == '__main__':
     import listener
     ab_app = app.Application("ABListener")
     ab_app.listenTCP(8848, pb.BrokerFactory(ABListener()))
     ab_app.run(save=0)



client (client.py)
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()





From glyph at twistedmatrix.com  Fri Jun 13 13:56:52 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 12:56:52 -0500
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <3EE9F175.9010401@web.de>
Message-ID: <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 10:44 AM, Stefan Fleiter wrote:

>     def remote_dir(self):
>         pp = ABPP(self.receiver)
>         command = ['/bin/ls']
>         reactor.spawnProcess(pp, command[0], command, env=os.environ)
>         reactor.run()

Remove the 'reactor.run()' here.  It should probably raise an 
exception, since the reactor is not reentrant, but there is no reason 
that you would need to do this.




From dp at twistedmatrix.com  Fri Jun 13 14:35:05 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 13 Jun 2003 14:35:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] enum type mapper bugfix - need a test for this
In-Reply-To: <E19PotX-0006Bb-00@pyramid.twistedmatrix.com>
Message-ID: <C080AC82-9DCD-11D7-874D-000A95864FC4@twistedmatrix.com>

Thanks for fixing that :-) Did it get closed in the tracker? /me 
looks...

The problem with testing this is that you have to start up a different 
process than the one which is currently running to observe the bug... 
Any thoughts on testing stuff like this?

dp




From gareth at omnipotent.net  Fri Jun 13 15:07:27 2003
From: gareth at omnipotent.net (Gareth Watts)
Date: Fri, 13 Jun 2003 20:07:27 +0100
Subject: [Twisted-Python] benchmarks for twisted.trial
Message-ID: <3EEA20EF.5070808@omnipotent.net>

Hi all

I wanted a means of being able to see whether changes to code (eg. bits 
of Woven) were having an impact on performance.  Rather than separate 
benchmarks i thought it'd make sense just to make use of the tests that 
are already written (or write new tests and use those as benchmarks)

So, attached is a small/simple patch to add a --benchmarks <iterations> 
option to trial to give an averaged result after running a test/tests a 
number of times.

A sanity check would be appreciated ;-)

Thanks

Gareth

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistedbench.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030613/327a0a69/attachment.txt 

From acohen at hyperfeed.com  Fri Jun 13 16:03:15 2003
From: acohen at hyperfeed.com (Andrew Cohen)
Date: Fri, 13 Jun 2003 15:03:15 -0500
Subject: [Twisted-Python] Jython
Message-ID: <21F861D3150ED2118B7F00805F65122D045CE953@exchsrv2.hyperfeed.com>

I'd like to run twisted under Jython.  Any hope? 
a.
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030613/050d1ea9/attachment.htm 

From glyph at twistedmatrix.com  Fri Jun 13 16:19:19 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 15:19:19 -0500
Subject: [Twisted-Python] Jython
In-Reply-To: <21F861D3150ED2118B7F00805F65122D045CE953@exchsrv2.hyperfeed.com>
Message-ID: <5008DF04-9DDC-11D7-B3BA-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 03:03 PM, Andrew Cohen wrote:

> I'd like to run twisted under Jython.? Any hope??

You will need CVS jython, you can't use jythonc, and you will probably 
need to spend a little time fixing bugs.  Nobody is really maintaining 
this support any more, and since we are using python2.2 now, there are 
some places it is clearly incompatible.




From justinjohnson at fastmail.fm  Fri Jun 13 16:24:41 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 14:24:41 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <3EEA20EF.5070808@omnipotent.net>
References: <3EEA20EF.5070808@omnipotent.net>
Message-ID: <20030613202441.0EC4834532@www.fastmail.fm>

Hi,

I wrote an xmlrpc service using twisted for the server portion but using
xmlrpclib on the client side to connect.  It is working beautifully, and
greatly simplifying my job.  However, now I decided that I'd like to take
advantage of Deferred's on the client side so that I can initiate
multiple requests at once.  These requests involve doing something on one
server, and then something on another if the first thing was successful. 
It seems like I'd have quite a chain of callbacks, but maybe this is
normal.  Below I posted the relevant code snippets of what I'm currently
doing on the client side.

Do I need to define methods for every step in the chain?  Would someone
mind giving me advice on how something like this should be written?

Thanks much.
-Justin



def connectToServer(server):
	# s = xmlrpclib.Server('http://%s:%s/' % (server, config.portNumber) )
	s = xmlrpclib.ServerProxy('http://%s:%s' % (server, config.portNumber), BasicAuthTransport(config.adminUser,config.adminPassword))
	return s

# Subcommand: mkvob
def doMkvob2(options):
	original_site = options["original"]
	group = options["group"]
	vobs = options["vobs"].split(",")
	sites = options["sites"].split(",")

	#s = connectToServer(config.siteToServer[original_site])
	#s = connectToTwistedServer(config.siteToServer[original_site])
	s = xmlrpclib.ServerProxy('http://%s:%s' % (server, config.portNumber), BasicAuthTransport(config.adminUser,config.adminPassword))

	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
	print "Calling remote mkvob ..."
	results = s.mkvob(vobs, group)
	results += s.mkReplicaExport(vobs,sites)
	results += s.renameReplica(vobs, "original", original_site)
	results += s.exportReplica(vobs,sites)
	for site in sites:
		thatServer = connectToServer(config.siteToServer[site])
		results += thatServer.mkReplicaImport(vobs)
		results += thatServer.importReplica(vobs)
		results += thatServer.applyTriggers(vobs)
	print "[output]\n%s[/output]" % results



From itamar at itamarst.org  Fri Jun 13 16:28:30 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 16:28:30 -0400
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613202441.0EC4834532@www.fastmail.fm>
References: <3EEA20EF.5070808@omnipotent.net>
	<20030613202441.0EC4834532@www.fastmail.fm>
Message-ID: <20030613162830.2ea3ac43.itamar@itamarst.org>

On Fri, 13 Jun 2003 14:24:41 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> I wrote an xmlrpc service using twisted for the server portion but
> using xmlrpclib on the client side to connect.  It is working
> beautifully, and greatly simplifying my job.  However, now I decided
> that I'd like to take advantage of Deferred's on the client side so
> that I can initiate multiple requests at once.  These requests involve
> doing something on one

Using Deferreds wont magically make requests run at once. You'd need to
use twisted event loop - i.e. the reactor - on the client side. xmlrpc
requests would need to be run by the xmlrpc client support in
twisted.web.xmlrpc, e.g.:

d = xmlrpc.Proxy("http://localhost:8080/").callRemote("foo.bar", 1, 2)
instead of 
xmlrpclib.ServerProxy("http://localhost:8080").foo.bar(1, 2)

For callbacks, yes, you need to use a function, bit that can be a lmbda
too.

d.addCallback(int).addCallback(lambda x: x*2) # convert to int and
multiply by 2

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jun 13 16:52:52 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 14:52:52 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613162830.2ea3ac43.itamar@itamarst.org>
References: <3EEA20EF.5070808@omnipotent.net>
 	<20030613202441.0EC4834532@www.fastmail.fm> <20030613162830.2ea3ac43.itamar@itamarst.org>
Message-ID: <20030613205252.8B7263357A@www.fastmail.fm>

> d = xmlrpc.Proxy("http://localhost:8080/").callRemote("foo.bar", 1, 2)
> instead of 
> xmlrpclib.ServerProxy("http://localhost:8080").foo.bar(1, 2)

Okay, that's what I thought.  I was more wondering about the callbacks.
 
> For callbacks, yes, you need to use a function, bit that can be a lmbda
> too.
> 
> d.addCallback(int).addCallback(lambda x: x*2) # convert to int and
> multiply by 2

What is the difference between chaining callbacks together like you did
above and doing it like...

d.addCallback(int)
d.addCallback(lambda x: x*2)

I apologize, I am in the process of reading the Deferred HOWTO, and
should've finished before posting.  :-(
-Justin



From itamar at itamarst.org  Fri Jun 13 17:24:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 17:24:18 -0400
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613205252.8B7263357A@www.fastmail.fm>
References: <3EEA20EF.5070808@omnipotent.net>
	<20030613202441.0EC4834532@www.fastmail.fm>
	<20030613162830.2ea3ac43.itamar@itamarst.org>
	<20030613205252.8B7263357A@www.fastmail.fm>
Message-ID: <20030613172418.49b039b9.itamar@itamarst.org>

On Fri, 13 Jun 2003 14:52:52 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> What is the difference between chaining callbacks together like you
> did above and doing it like...
> 
> d.addCallback(int)
> d.addCallback(lambda x: x*2)

It's identical. d.addCallback(f) returns d.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jun 13 19:37:03 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 17:37:03 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613172418.49b039b9.itamar@itamarst.org>
References: <3EEA20EF.5070808@omnipotent.net>
 	<20030613202441.0EC4834532@www.fastmail.fm>
 	<20030613162830.2ea3ac43.itamar@itamarst.org>
 	<20030613205252.8B7263357A@www.fastmail.fm> <20030613172418.49b039b9.itamar@itamarst.org>
Message-ID: <20030613233703.2C0703422B@www.fastmail.fm>

Okay, thanks.

On Fri, 13 Jun 2003 17:24:18 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Fri, 13 Jun 2003 14:52:52 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > What is the difference between chaining callbacks together like you
> > did above and doing it like...
> > 
> > d.addCallback(int)
> > d.addCallback(lambda x: x*2)
> 
> It's identical. d.addCallback(f) returns d.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From dkuhlman at cutter.rexx.com  Fri Jun 13 20:05:36 2003
From: dkuhlman at cutter.rexx.com (Dave Kuhlman)
Date: Fri, 13 Jun 2003 17:05:36 -0700
Subject: [Twisted-Python] Start-up code and passing its results
Message-ID: <20030613170536.A92693@cutter.rexx.com>

Here is a seemingly simple question.  But after searching the docs,
I still haven't figure it out.

How do I write some start-up code for a Web app, then pass values
from the start-up code to objects that respond to requests?  In
particular, how do I create a DB ConnectionPool, then pass that to
the implementation of a Web page?

If the above question made sense, ignore the following.  It's more
struggling with the same problem.

I'm learning Twisted.  I've made quite a bit of progress, although
I'm slower than most.  I've been able to build a small sample Web
application.  I like what I find in Twisted so far.

After some digging, I've been able to use
enterprise.adbapi.ConnectionPool in one of my Web pages.  But,
when I look in my log file, I see the messages "Connecting to
database: pyPgSQL.PgSQL" and "adbapi connecting: pyPgSQL.PgSQL"
for *every* time I visit that Web page.  That makes me think that
I'm creating a new connection every time I deliver that Web page,
which, of course, a connection pool should eliminate.  Am I right?

So, what am I doing wrong?  I'm guessing that I should not be
running the following statement every time I deliver this Web page:

    dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL",
        "localhost:5432:test:postgres:mypassword")

So, my question is: Where do I put the above statement?  And, how
do I share the same dbpool across delivery of that Web page and
across all sessions in my Web application?

By the way, I created my Twisted application with the following:

  mktap web --path Test1 --processor=.rtl=twisted.web.script.ResourceTemplate

And, I start up my server with the fillowing:

  twistd -f web.tap

Am I supposed to run mktap with the "--type=source" option, and
then create the connection pool in the resulting .tas file?  If so:

  1. How do I add code to the .tas file?  How do I get it called
    during start-up?

  2. How do I pass the dbpool (or any variable) to the Web page?

Another way of asking this question is: How do I execute code at
server start-up?  And, how do I make the results of that start-up
code available to the various parts of my application, in
particular to a Python module that implements the response to a
request?

Or, am I trying to do things the non-Twisted way?  If so, how do I
learn the Twisted way?

  - Dave

-- 
Dave Kuhlman
dkuhlman at rexx.com
http://www.rexx.com/~dkuhlman



From andrew-twisted at puzzling.org  Sat Jun 14 03:47:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 14 Jun 2003 17:47:06 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <E19QtXn-0001Ku-00@pyramid.twistedmatrix.com>
References: <E19QtXn-0001Ku-00@pyramid.twistedmatrix.com>
Message-ID: <20030614074706.GA17652@frobozz>

On Fri, Jun 13, 2003 at 01:44:59PM -0500, dp CVS wrote:
> Modified files:
> Twisted/twisted/trial/runner.py 1.4 1.5
> 
> Log message:
> Small hack that I need for the beginnings of my woven functional testing
> framework; hopefully this can be removed sometime later
[...]
>  
>      def runTests(self, output):
>          self.testCase = self.testClass()
> +        self.testCase.output = output
>          self.testCase.setUpClass()
>          for methodName in self.methodNames:
>              method = getattr(self.testCase, methodName)

This change broke 2 tests in Twisted that already used that attribute.
Should we change the tests, or this hack?  What is it for, anyway?

Oh, and please run tests before you checkin, this isn't the only thing that
has been broken recently.

-Andrew.




From dp at twistedmatrix.com  Sat Jun 14 20:27:07 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 14 Jun 2003 20:27:07 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <20030614074706.GA17652@frobozz>
Message-ID: <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>

On Saturday, June 14, 2003, at 03:47 AM, Andrew Bennetts wrote:
>
> This change broke 2 tests in Twisted that already used that attribute.
> Should we change the tests, or this hack?  What is it for, anyway?

Thanks for catching this. We should change the hack. The hack is so I 
can create and run a second TestSuite inside a UnitTest, so that the 
entire second TestSuite can run between the first UnitTest's setUp and 
tearDown. It's in Divmod/divmod/web/functionaltester.py

Feedback on how to do this better would be greatly appreciated...

> Oh, and please run tests before you checkin, this isn't the only thing 
> that
> has been broken recently.

I did run the tests before I checked in and it wasn't obvious that my 
changes had broken anything. There were broken tests, but I didn't 
realize they were my fault. Sorry.

dp




From andrew-twisted at puzzling.org  Sat Jun 14 22:14:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 15 Jun 2003 12:14:12 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>
References: <20030614074706.GA17652@frobozz> <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>
Message-ID: <20030615021412.GB23100@frobozz>

On Sat, Jun 14, 2003 at 08:27:07PM -0400, Donovan Preston wrote:
> 
> On Saturday, June 14, 2003, at 03:47 AM, Andrew Bennetts wrote:
> >
> >This change broke 2 tests in Twisted that already used that attribute.
> >Should we change the tests, or this hack?  What is it for, anyway?
> 
> Thanks for catching this. We should change the hack. The hack is so I 

I didn't catch this -- BuildBot did! :)

> can create and run a second TestSuite inside a UnitTest, so that the 
> entire second TestSuite can run between the first UnitTest's setUp and 
> tearDown. It's in Divmod/divmod/web/functionaltester.py
> 
> Feedback on how to do this better would be greatly appreciated...

[I'll let someone more qualified answer this]

> >Oh, and please run tests before you checkin, this isn't the only thing
> >that has been broken recently.
> 
> I did run the tests before I checked in and it wasn't obvious that my 
> changes had broken anything. There were broken tests, but I didn't 
> realize they were my fault. Sorry.

If checking against a clean checkout is too slow, I suggest checking against
BuildBot... have I mentioned today how much I love BuildBot?  :)

-Andrew.




From nicholas_wieland at yahoo.it  Sun Jun 15 10:09:02 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 16:09:02 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
Message-ID: <20030615140902.GA860@yahoo.it>

Hi,
    I want to implement a Native XML database in Python, so, after
    having used TM for a little work a pair of months ago, I'm thinking
    about using Twisted Matrix and implementing it as a plugin.
    All I need (at this stage) is a persistent DOM for storing XML files
    on disk instead of keeping them in memory.
    I need a little help, I don't want to reinvent the weel, I'd like a
    suggestion about where to look from you Twisted gurus :-]
    Twisted.persisted ?
    
TIA,
	nicholas



From radix at twistedmatrix.com  Sun Jun 15 11:03:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 15 Jun 2003 11:03:49 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615140902.GA860@yahoo.it>; from nicholas_wieland@yahoo.it on Sun, Jun 15, 2003 at 10:09:02 -0400
References: <20030615140902.GA860@yahoo.it>
Message-ID: <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>

On 2003.06.15 10:09, N. Wieland wrote:
> Hi,
>     I want to implement a Native XML database in Python, so, after

What do you mean by "XML database"?

>     having used TM for a little work a pair of months ago, I'm thinking
>     about using Twisted Matrix and implementing it as a plugin.
>     All I need (at this stage) is a persistent DOM for storing XML files
>     on disk instead of keeping them in memory.
>     I need a little help, I don't want to reinvent the weel, I'd like a
>     suggestion about where to look from you Twisted gurus :-]
>     Twisted.persisted ?

If you're looking to serialize arbitrary Python objects to XML, check out
twisted.persisted.marmalade

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nicholas_wieland at yahoo.it  Sun Jun 15 11:46:29 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 17:46:29 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>
Message-ID: <20030615154629.GA483@yahoo.it>

- radix at twistedmatrix.com :
> 
> On 2003.06.15 10:09, N. Wieland wrote:
> > Hi,
> >     I want to implement a Native XML database in Python, so, after
> 
> What do you mean by "XML database"?

It's a database tailored exactly for storing XML documents.
Apache XIndice or SoftwareAG Tamino are two examples.
Here is an interesting doc about the topic:
http://www.rpbourret.com/xml/XMLAndDatabases.htm

> If you're looking to serialize arbitrary Python objects to XML, check out
> twisted.persisted.marmalade

Not a Python Object, an XML document.

Thanks,
	nicholas



From radix at twistedmatrix.com  Sun Jun 15 11:59:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 15 Jun 2003 11:59:37 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615154629.GA483@yahoo.it>; from nicholas_wieland@yahoo.it on Sun, Jun 15, 2003 at 11:46:29 -0400
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net> <20030615154629.GA483@yahoo.it>
Message-ID: <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>

On 2003.06.15 11:46, N. Wieland wrote:
> - radix at twistedmatrix.com :
> > 
> > On 2003.06.15 10:09, N. Wieland wrote:
> > > Hi,
> > >     I want to implement a Native XML database in Python, so, after
> > 
> > What do you mean by "XML database"?
> 
> It's a database tailored exactly for storing XML documents.
> Apache XIndice or SoftwareAG Tamino are two examples.
> Here is an interesting doc about the topic:
> http://www.rpbourret.com/xml/XMLAndDatabases.htm
> 
> > If you're looking to serialize arbitrary Python objects to XML, check out
> > twisted.persisted.marmalade
> 
> Not a Python Object, an XML document.

So it sounds like all you need is twisted.web.microdom, the "open" 
built-in python function, and the "write" method of file
objects. Or is there something else I'm missing? :)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nicholas_wieland at yahoo.it  Sun Jun 15 12:26:41 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 18:26:41 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net> <20030615154629.GA483@yahoo.it> <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>
Message-ID: <20030615162641.GA615@yahoo.it>

- radix at twistedmatrix.com :
> snip > 
> > Not a Python Object, an XML document.
> 
> So it sounds like all you need is twisted.web.microdom, the "open" 
> built-in python function, and the "write" method of file
> objects. Or is there something else I'm missing? :)

I will start experimenting there.
Thank you very much, I hope coming out with something useful in a pair
of months...

	nicholas



From itamar at itamarst.org  Sun Jun 15 16:07:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Jun 2003 16:07:41 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615140902.GA860@yahoo.it>
References: <20030615140902.GA860@yahoo.it>
Message-ID: <20030615160741.2dbf9dda.itamar@itamarst.org>

On Sun, 15 Jun 2003 16:09:02 +0200
"N. Wieland" <nicholas_wieland at yahoo.it> wrote:

>     I want to implement a Native XML database in Python, so, after

Martijn Faassen wrote one with ZODB, I think:
http://cvs.infrae.com/forest/

and maybe it has a homepage somwhere as well.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From vijay at accellion.com  Mon Jun 16 00:27:13 2003
From: vijay at accellion.com (Vijay Rao)
Date: Mon, 16 Jun 2003 09:57:13 +0530
Subject: [Twisted-Python] Custom webserver
Message-ID: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>

Hi ,

I am trying to use twisted as a webserver that serves files only for 
requests from the localhost ie the desktop on which it is running by 
mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on 
windows ) so that a particular type of URL is served from this webserver.

Can anyone help me with these :

1) How do I refuse to serve any request from any other machine on the 
network ( external or internal ) ie is there any way of finding out from 
where the request originated ( or is it possible to use something like 
.htaccess ) . Currently the directory listing is exposed to any other 
machine that can access the machine.

2) It is easy to set up a web.tap file using mktap web --path 
<pathtoRootDirectory> to serve files but I dont want to map the URL to a 
path on disk directly. Is it possible to override the getChild function of 
static.File ( which is doing the publishing part ) so that certain 
components of the URL can be ignored or re-mapped to a different path on 
local storage. I tried using a .rpy but that seems to be ignored as I guess 
that given the --path argument mktap creates a root Resource which is used 
by the application.

Thanks,
E.Vijay Rao
vijay at accellion.com
http://www.accellion.com








From stuart.hungerford at anu.edu.au  Mon Jun 16 01:04:49 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Mon, 16 Jun 2003 15:04:49 +1000
Subject: [Twisted-Python] Looking for web authentication examples...
In-Reply-To: <20030613113820.21210.36099.Mailman@pyramid.twistedmatrix.c
 om>
Message-ID: <5.2.0.9.0.20030616145856.00b96ad8@anusf.anu.edu.au>

Hi all,

I'm looking for any examples people might have on using
username/password authentication via Twisted.web.  I guess
it's the sort of example that would appear under the
"Authentication on the web" heading in the HOWTO's, when it's
completed.


Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From tv at twistedmatrix.com  Mon Jun 16 03:03:52 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 16 Jun 2003 10:03:52 +0300
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>
References: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>
Message-ID: <20030616070352.GA25823@lapdog>

On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> I am trying to use twisted as a webserver that serves files only for 
> requests from the localhost ie the desktop on which it is running by 
> mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on 
> windows ) so that a particular type of URL is served from this webserver.

	Easiest way is to make it bind to 127.0.0.1. There's currently
	no support in mktap web for this, though there really should
	be.

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Mon Jun 16 06:28:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 05:28:46 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
Message-ID: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>

There are some new modules in CVS right now, and I would like some 
feedback on them.

The modules in question are a sketch of The Wave of the Future of 
authentication in Twisted, A.K.A. "New Cred".  A good place to start 
looking is sandbox/webhappyrealm.py

Unfortunately, this sets a bad precedent, since old cred was 
"semi-stable".  However, I think that the break with declared stability 
is a small price to pay for the _VASTLY_ improved interfaces which this 
package provides.  Since not too many people were using the old cred 
deeply, and the new interfaces are much smaller, hopefully we can 
migrate to the new code as quickly as possible.

Of course, no new Twisted functionality would be complete without a 
byzantine new set of terms.  In this case, the terms are hopefully more 
descriptive and more memorable; as a bonus, they do not conflict with 
the old names, so we can keep both versions of cred on-line until such 
time as the deprecation warnings can be resolved.

This message is primarily about those new names.  I hope that this 
provides enough fodder for someone with more time to produce a 
nice-looking HOWTO.  Without further ado, here are the new words you 
need to integrate into your basal nervous system:


#############################

Portal
======

This is the ineffable mystery at the core of login.  There is one 
concrete implementation of Portal, and no interface - it does a very 
simple task.  A Portal associates one (1) Realm with a collection of 
CredentialChecker instances.  (More on those later.)

The closest analogue of this in Old Cred was the Authorizer.

If you are writing a protocol that needs to authenticate against 
something, you will need a reference to a Portal, and to nothing else.  
This has only 2 methods -

	login(credentials, mind, *interfaces)

The docstring is quite expansive (see twisted.cred.portal), but in 
brief, this is what you call when you need to call in order to connect 
a user to the system.  The result is a deferred which fires a tuple of:

	- interface (which was one of the interfaces passed in the *interfaces 
tuple)
	- an object that implements that interface (an Aspect of an Avatar)	- 
logout, a 0-argument callable which disconnects the connection that was 
established by this call to login

	registerChecker(checker, *credentialInterfaces)

which adds a CredentialChecker to the portal.

Mind
====

Masters of Perspective Broker already know this object as the ill-named 
"client object".  There is no "mind" class, or even interface, but it 
is an object which serves an important role - any notifications which 
are to be relayed to an authenticated client are passed through a 
'mind'.

The name may seem rather unusual, but considering that a Mind is 
representative of the entity on the "other end" of a network connection 
that is both receiving updates and issuing commands, I believe it is 
appropriate.

Although many protocols will not use this, it serves an important role. 
  It is provided as an argument both to the Portal and to the Realm, 
although a CredentialChecker should interact with a client program 
exclusively through a Credentials instance.

Unlike the original Perspective Broker "client object", a Mind's 
implementation is most often dictated by the protocol that is 
connecting rather than the Realm.  A Realm which requires a particular 
interface to issue notifications will need to wrap the Protocol's mind 
implementation with an adapter in order to get one that conforms to its 
expected interface - however, Perspective Broker will likely continue 
to use the model where the client object has a pre-specified remote 
interface.

(If you don't quite understand this, it's fine.  It's hard to explain, 
and it's not used in simple usages of cred, so feel free to pass None 
until you find yourself requiring something like this.)

CredentialChecker
=================

This is an object which resolves some Credentials to an avatar ID.  
Some examples of CredentialChecker implementations would be: 
InMemoryUsernamePassword, ApacheStyleHTAccessFile, 
UNIXPasswordDatabase, SSHPublicKeyChecker.  A credential checker 
stipulates some requirements of the credentials it can check by 
specifying a credentialInterfaces attribute, which is a list of 
interfaces.  Credentials passed to its requestAvatarId method must 
implement one of those interfaces.

For the most part, these things will just check usernames and passwords 
and produce the username as the result, but hopefully we will be seeing 
some public-key, challenge-response, and certificate based credential 
checker mechanisms soon.  (If somebody were to write an 
ActiveDirectory-compatible LDAP login, they would be my best friend for 
EVER.)

A credential checker should raise an error if it cannot authenticate 
the user, and return '' for anonymous access.

Credentials
===========

Oddly enough, this represents some credentials that the user presents.  
Usually this will just be a small static blob of data, but in some 
cases it will actually be an object connected to a network protocol.  
For example, a username/password pair is static, but a 
challenge/response server is an active state-machine that will require 
several method calls in order to determine a result.

Realm
=====

A realm is an interface which connects your universe of "business 
objects" to the authentication system.  This is similar to the Old Cred 
"Service", but the name "Service" will be phased out when referring to 
cred - another planned refactoring is to move 
twisted.internet.app.ApplicationService into its own module and more 
heavily emphasize its use in start-up and shut-down.

IRealm is another one-method interface:

	requestAvatar(avatarId, mind, *interfaces)

This method will typically be called from 'Portal.login'.  The avatarId 
is the one returned by a CredentialChecker.

The important thing to realize about this method is that if it is being 
called, _the user has already authenticated_.  Therefore, if possible, 
the Realm should create a new user if one does not already exist 
whenever possible.  Of course, sometimes this will be impossible 
without more information, and that is the case that the interfaces 
argument is for.

Some protocols can only accept a fixed set of interfaces.  However, 
others (most notably PB) can deal with more arbitrary data being 
returned.  An online game may call Portal.login with:

     login(PBChallengeResponse(...), clientSideThingy,
           IServerPlayerInWorld, IUserChooser, ICharacterCreationThing)

This specifies that the client would most prefer a player in the world, 
but, failing that, a UserChooser (selection interface for a second step 
to get a PlayerInWorld) or a CharacterCreationThing (interface to 
create a new character in the world before returning it) would be 
acceptable.

Since requestAvatar should be called from a Deferred callback, it may 
return a Deferred or a synchronous result.

At the moment, there is only an interface for the Realm.  However, it 
is expected that a utility class will be written in the near future to 
facilitate log-in methods, a re-directing method similar to 
"Perspective.attached" for Avatars, and at least somewhat automated 
compositing of Realms.  However, in writing the code for cred and 
guard, there has been no need for such a thing yet.

Avatar
======

This object has the dubious distinction of appearing nowhere in the 
code; in fact, very few things will ever touch an actual Avatar, and it 
is not clear that it will have an interface.  However, _aspects_ of an 
avatar are returned in deferreds from the above methods, which is to 
say, things that implement particular interfaces which communicate with 
various protocols that may access your Realm.

This is (hopefully, obviously) similar to a 'Perspective'.  However, an 
Avatar separates 2 concerns which were muddied previously - _access_ to 
a realm and _storage of user data_ within a realm.  The avatar itself 
stores the data, and the aspects interface to it.  The avatar itself 
may of course implement its own aspects, but it is suggested in most 
cases to register adapters that do this.  (Perspective Broker will keep 
its name, because the Avatar Aspect that communicates with the remote 
object protocol will still be called a Perspective.)

#############################


While it's understandable to want to wait for this interface to fully 
stabilize, we suggest that you start porting code to it _now_, 
especially if you're already tracking CVS.  The old cred was, through 
the continued efforts of many developers, experimentally determined to 
be a piece of crap.  I humbly suggest that this interface is not only 
not a piece of crap, but totally awesome, and actually usable in real 
applications.  Not only is it a vastly better design, it makes use of 
Deferreds in such a way that it is almost effortless to provide or 
manipulate an implementation of one of these interfaces.  (As a 
yardstick, the code for woven.guard was 30% shorter and the example was 
almost unmeasureably shorter - sandbox/webhappyrealm.py is already 
doing things that were impossible under the old model.)

I hope this explanation was helpful.  Please give feedback.




From glyph at twistedmatrix.com  Mon Jun 16 06:30:45 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 05:30:45 -0500
Subject: [Twisted-Python] Looking for web authentication examples...
In-Reply-To: <5.2.0.9.0.20030616145856.00b96ad8@anusf.anu.edu.au>
Message-ID: <96EC6FA4-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Monday, June 16, 2003, at 12:04 AM, Stuart Hungerford wrote:

> I'm looking for any examples people might have on using
> username/password authentication via Twisted.web

I would encourage you to look at the other message I just posted to the 
list, "Lies, Damn Lies, and Stable Interfaces".  While unfortunately 
unstable, the New Cred stuff is already hooked up to web authentication 
and will almost certainly be a more pleasant ride (bumps and all) than 
the current situation with web-based auth.




From m at moshez.org  Mon Jun 16 07:06:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jun 2003 11:06:21 -0000
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <20030616110621.25109.qmail@green.zadka.com>

On Mon, 16 Jun 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 	login(credentials, mind, *interfaces)
> 
> The docstring is quite expansive (see twisted.cred.portal), but in 
> brief, this is what you call when you need to call in order to connect 
> a user to the system.  The result is a deferred which fires a tuple of:
<snip>

I'm guessing that is only true if the login succeeds?
In particular, if the callback is true, am I guaranteed the login
was approved? And if it isn't, will an errback be fired?
[context: I am trying to write a simple HTTP authenticator. I don't
give a damn who the user is, but I want to make sure he's in my
password file]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Mon Jun 16 07:33:38 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 06:33:38 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030616110621.25109.qmail@green.zadka.com>
Message-ID: <5FA921BE-9FEE-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Monday, June 16, 2003, at 06:06 AM, Moshe Zadka wrote:

> I'm guessing that is only true if the login succeeds?
> In particular, if the callback is true, am I guaranteed the login
> was approved? And if it isn't, will an errback be fired?

If the callback returns, the login was approved.  errbacks are fired, 
hopefully with defined values from twisted.cred.error, if the login has 
failed.

> [context: I am trying to write a simple HTTP authenticator. I don't
> give a damn who the user is, but I want to make sure he's in my
> password file]

Thank you.  We need HTTP auth.  Please try to use 
twisted.web.woven.guard.UsernamePasswordWrapper as an example...




From glyph at twistedmatrix.com  Mon Jun 16 07:45:24 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 06:45:24 -0500
Subject: [Twisted-Python] Getting Rid of Application in a Compatible Way
In-Reply-To: <20030523070247.10334.qmail@green.zadka.com>
Message-ID: <042219E6-9FF0-11D7-A2AB-000393C9700E@twistedmatrix.com>

(This is in reply to a message sent last month, so apologies if it 
doesn't thread properly.)

On Friday, May 23, 2003, at 02:02 AM, Moshe Zadka wrote:

> class TCPListener(ApplicationService):

I want to implement this, and also to move ApplicationService into its 
own module and rename it (commensurate with cred changes) - 
twisted.internet.service.Service

>     def __init__(self, port, factory, backlog=5, interface='', *args, 
> **kwargs):
...
>     def startService(self):
>         ApplicationService.startService(self)
>         self._port = reactor.listenTCP(self.port, self.factory, 
> self.backlog,
>                                        self.interface)

This is great, except for the fact that UNIX likes to make it so that 
only root can bind ports, and that would be way too much work to run in 
a privileged mode.  We need to separate initializeService() (which runs 
with privileges) and startService() (which runs without).  This would 
replace bindPorts().

> TCPListener(8080, server.Site(resource), 
> "foo").setServiceParent(application)

The 'setServiceParent' seems a little unweildy.  Why not in the 
__init__?

> The only problem is needing to choose unique names.

Rather than use the opaque key you suggest, which would be potentially 
confusing to sysadmins, we could use a simple sequence number?  Putting 
sequence number generation into Application is probably not such a bad 
idea anyway.

I would really like this refactoring to happen soon, because 
Application is an ungodly mess.  So, to sum up -

	* move Service to new module
	* write TCPListenerService, SSLConnectService, etc
	* write backwards-compatible listen|connectTCP/SSL/etc
	* update _all_ uses of app.(listen|connect)(TCP|SSL|UNIX) in Twisted.
	* write upgrade function to upgrade Application's mutable state.

Does anybody feel like doing something like this?




From Martin.Moellenbeck at t-online.de  Mon Jun 16 17:19:39 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Mon, 16 Jun 2003 23:19:39 +0200
Subject: AW: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <000701c3344c$fef67770$0400a8c0@joshua>

Hi,

I have had a small look to the new package, looks coherent.

But isn't it better to provide a modul (maybe "interfaces.py") 
with all interfaces of the package?

Greeting
	Martin

-----Urspr?ngliche Nachricht-----
Von: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag von Glyph
Lefkowitz
Gesendet: Montag, 16. Juni 2003 12:29
An: twisted-python at twistedmatrix.com
Betreff: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces


There are some new modules in CVS right now, and I would like some 
feedback on them.

The modules in question are a sketch of The Wave of the Future of 
authentication in Twisted, A.K.A. "New Cred".  A good place to start 
looking is sandbox/webhappyrealm.py

Unfortunately, this sets a bad precedent, since old cred was 
"semi-stable".  However, I think that the break with declared stability 
is a small price to pay for the _VASTLY_ improved interfaces which this 
package provides.  Since not too many people were using the old cred 
deeply, and the new interfaces are much smaller, hopefully we can 
migrate to the new code as quickly as possible.

Of course, no new Twisted functionality would be complete without a 
byzantine new set of terms.  In this case, the terms are hopefully more 
descriptive and more memorable; as a bonus, they do not conflict with 
the old names, so we can keep both versions of cred on-line until such 
time as the deprecation warnings can be resolved.

This message is primarily about those new names.  I hope that this 
provides enough fodder for someone with more time to produce a 
nice-looking HOWTO.  Without further ado, here are the new words you 
need to integrate into your basal nervous system:


#############################

Portal
======

This is the ineffable mystery at the core of login.  There is one 
concrete implementation of Portal, and no interface - it does a very 
simple task.  A Portal associates one (1) Realm with a collection of 
CredentialChecker instances.  (More on those later.)

The closest analogue of this in Old Cred was the Authorizer.

If you are writing a protocol that needs to authenticate against 
something, you will need a reference to a Portal, and to nothing else.  
This has only 2 methods -

	login(credentials, mind, *interfaces)

The docstring is quite expansive (see twisted.cred.portal), but in 
brief, this is what you call when you need to call in order to connect 
a user to the system.  The result is a deferred which fires a tuple of:

	- interface (which was one of the interfaces passed in the
*interfaces 
tuple)
	- an object that implements that interface (an Aspect of an
Avatar)	- 
logout, a 0-argument callable which disconnects the connection that was 
established by this call to login

	registerChecker(checker, *credentialInterfaces)

which adds a CredentialChecker to the portal.

Mind
====

Masters of Perspective Broker already know this object as the ill-named 
"client object".  There is no "mind" class, or even interface, but it 
is an object which serves an important role - any notifications which 
are to be relayed to an authenticated client are passed through a 
'mind'.

The name may seem rather unusual, but considering that a Mind is 
representative of the entity on the "other end" of a network connection 
that is both receiving updates and issuing commands, I believe it is 
appropriate.

Although many protocols will not use this, it serves an important role. 
  It is provided as an argument both to the Portal and to the Realm, 
although a CredentialChecker should interact with a client program 
exclusively through a Credentials instance.

Unlike the original Perspective Broker "client object", a Mind's 
implementation is most often dictated by the protocol that is 
connecting rather than the Realm.  A Realm which requires a particular 
interface to issue notifications will need to wrap the Protocol's mind 
implementation with an adapter in order to get one that conforms to its 
expected interface - however, Perspective Broker will likely continue 
to use the model where the client object has a pre-specified remote 
interface.

(If you don't quite understand this, it's fine.  It's hard to explain, 
and it's not used in simple usages of cred, so feel free to pass None 
until you find yourself requiring something like this.)

CredentialChecker
=================

This is an object which resolves some Credentials to an avatar ID.  
Some examples of CredentialChecker implementations would be: 
InMemoryUsernamePassword, ApacheStyleHTAccessFile, 
UNIXPasswordDatabase, SSHPublicKeyChecker.  A credential checker 
stipulates some requirements of the credentials it can check by 
specifying a credentialInterfaces attribute, which is a list of 
interfaces.  Credentials passed to its requestAvatarId method must 
implement one of those interfaces.

For the most part, these things will just check usernames and passwords 
and produce the username as the result, but hopefully we will be seeing 
some public-key, challenge-response, and certificate based credential 
checker mechanisms soon.  (If somebody were to write an 
ActiveDirectory-compatible LDAP login, they would be my best friend for 
EVER.)

A credential checker should raise an error if it cannot authenticate 
the user, and return '' for anonymous access.

Credentials
===========

Oddly enough, this represents some credentials that the user presents.  
Usually this will just be a small static blob of data, but in some 
cases it will actually be an object connected to a network protocol.  
For example, a username/password pair is static, but a 
challenge/response server is an active state-machine that will require 
several method calls in order to determine a result.

Realm
=====

A realm is an interface which connects your universe of "business 
objects" to the authentication system.  This is similar to the Old Cred 
"Service", but the name "Service" will be phased out when referring to 
cred - another planned refactoring is to move 
twisted.internet.app.ApplicationService into its own module and more 
heavily emphasize its use in start-up and shut-down.

IRealm is another one-method interface:

	requestAvatar(avatarId, mind, *interfaces)

This method will typically be called from 'Portal.login'.  The avatarId 
is the one returned by a CredentialChecker.

The important thing to realize about this method is that if it is being 
called, _the user has already authenticated_.  Therefore, if possible, 
the Realm should create a new user if one does not already exist 
whenever possible.  Of course, sometimes this will be impossible 
without more information, and that is the case that the interfaces 
argument is for.

Some protocols can only accept a fixed set of interfaces.  However, 
others (most notably PB) can deal with more arbitrary data being 
returned.  An online game may call Portal.login with:

     login(PBChallengeResponse(...), clientSideThingy,
           IServerPlayerInWorld, IUserChooser, ICharacterCreationThing)

This specifies that the client would most prefer a player in the world, 
but, failing that, a UserChooser (selection interface for a second step 
to get a PlayerInWorld) or a CharacterCreationThing (interface to 
create a new character in the world before returning it) would be 
acceptable.

Since requestAvatar should be called from a Deferred callback, it may 
return a Deferred or a synchronous result.

At the moment, there is only an interface for the Realm.  However, it 
is expected that a utility class will be written in the near future to 
facilitate log-in methods, a re-directing method similar to 
"Perspective.attached" for Avatars, and at least somewhat automated 
compositing of Realms.  However, in writing the code for cred and 
guard, there has been no need for such a thing yet.

Avatar
======

This object has the dubious distinction of appearing nowhere in the 
code; in fact, very few things will ever touch an actual Avatar, and it 
is not clear that it will have an interface.  However, _aspects_ of an 
avatar are returned in deferreds from the above methods, which is to 
say, things that implement particular interfaces which communicate with 
various protocols that may access your Realm.

This is (hopefully, obviously) similar to a 'Perspective'.  However, an 
Avatar separates 2 concerns which were muddied previously - _access_ to 
a realm and _storage of user data_ within a realm.  The avatar itself 
stores the data, and the aspects interface to it.  The avatar itself 
may of course implement its own aspects, but it is suggested in most 
cases to register adapters that do this.  (Perspective Broker will keep 
its name, because the Avatar Aspect that communicates with the remote 
object protocol will still be called a Perspective.)

#############################


While it's understandable to want to wait for this interface to fully 
stabilize, we suggest that you start porting code to it _now_, 
especially if you're already tracking CVS.  The old cred was, through 
the continued efforts of many developers, experimentally determined to 
be a piece of crap.  I humbly suggest that this interface is not only 
not a piece of crap, but totally awesome, and actually usable in real 
applications.  Not only is it a vastly better design, it makes use of 
Deferreds in such a way that it is almost effortless to provide or 
manipulate an implementation of one of these interfaces.  (As a 
yardstick, the code for woven.guard was 30% shorter and the example was 
almost unmeasureably shorter - sandbox/webhappyrealm.py is already 
doing things that were impossible under the old model.)

I hope this explanation was helpful.  Please give feedback.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From warner at lothar.com  Mon Jun 16 17:51:06 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 16 Jun 2003 14:51:06 -0700 (PDT)
Subject: [Twisted-Python] Twisted cred perspective unicode support
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
Message-ID: <20030616.145106.07639583.warner@lothar.com>

<rdrb at 123.cl> writes:

> I got problems using Twisted cred with Python2.2.0.
> My perspectives names are based on a url encoding.
> I have found that there is a problem when PerspectiveName is  unicode.

I've committed your fix into CVS, along with some new test cases. Thanks for
the patch!

I did some other s/types.StringType/types.StringTypes/ elsewhere in
twisted.cred.perspective too.

thanks,
 -Brian



From itamar at itamarst.org  Mon Jun 16 18:04:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 16 Jun 2003 18:04:58 -0400
Subject: [Twisted-Python] Twisted cred perspective unicode support
In-Reply-To: <20030616.145106.07639583.warner@lothar.com>
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
	<20030616.145106.07639583.warner@lothar.com>
Message-ID: <20030616180458.5e6bedfc.itamar@itamarst.org>

On Mon, 16 Jun 2003 14:51:06 -0700 (PDT)
Brian Warner <warner at lothar.com> wrote:

> > I got problems using Twisted cred with Python2.2.0.
> > My perspectives names are based on a url encoding.
> > I have found that there is a problem when PerspectiveName is 
> > unicode.
> 
> I've committed your fix into CVS, along with some new test cases.
> Thanks for the patch!

The patch should probably be reverted. The perspective name etc. should
always be a string because the storage you use for it may have no notion
of unicode. If you want to use unicode there they should just be UTF-8ed
anyway.

However, we now have a new cred, so this doesn't really matter. But, you
shouldn't be making *any* changes to old cred if at all possible. Any
uses cases should be made to fit new cred.

In new cred, avatar ids *must* be 8-bit strings. For a username a user
might type in, i.e. credentials, you could write a specific credentials
interface that supports unicode credentials and an associated checker.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jun 16 18:25:23 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 16 Jun 2003 15:25:23 -0700 (PDT)
Subject: [Twisted-Python] Twisted cred perspective unicode support
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
 <20030616.145106.07639583.warner@lothar.com>
 <20030616180458.5e6bedfc.itamar@itamarst.org>
Message-ID: <20030616.152523.122258763.warner@lothar.com>

> The patch should probably be reverted. The perspective name etc. should
> always be a string because the storage you use for it may have no notion
> of unicode. If you want to use unicode there they should just be UTF-8ed
> anyway.

*nod*. I've just reverted it. Sorry RodrigoB, look to itamar's suggestions
for some possibilities.

thanks,
 -Brian



From paul at soniq.net  Thu Jun 12 17:40:31 2003
From: paul at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:40:31 +0200
Subject: [Twisted-Python] distrib.UserDirectory improvements
Message-ID: <20030612214031.GA20191@soniq.net>

hi,
moshez suggested me to extend distrib.UserDirectory for my needs.
attached is what i am using right now. 

i hope to integrate this into distrib.py for cvs, later.
please give me feedback!

  paul
-------------- next part --------------
from twisted.web import widgets, static
from twisted.web.distrib import *
import os

if (os.sys.platform != 'win32') and (os.name != 'java'):
        import pwd

# Lines below this, can be merged into distrib.py

def createUserPath(homedir, username, dirname, subdir=''):
    if dirname[0:1] == '~':
        userpath = os.path.join(homedir, dirname[1:])
    else:
        userpath = os.path.join(dirname, username, subdir)

    return userpath

class UserDirectory(widgets.Gadget, widgets.StreamWidget):
    def __init__(self, userDirName='~/public_html', 
                 userSocketName='~/.twistd-web-pb', pbextension='.twistd'):
        widgets.Gadget.__init__(self)

        self.userDirName = userDirName
        self.userSocketName = userSocketName
        self.pbextension = pbextension

    def stream(self, write, request):
        write('<UL>\n')
        for user in pwd.getpwall():
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = user
            realname = string.split(pw_gecos,',')[0]
            if not realname:
                realname = pw_name
            fmtStr = '<LI><A HREF="%s/">%s (%s)</a>\n'
            userdirpath = createUserPath(pw_dir, pw_name, self.userDirName)
            if os.path.exists(userdirpath):
                write(fmtStr% (pw_name,realname,'file'))
            twistdsock = createUserPath(pw_dir, pw_name, 
                                        self.userSocketName, "twistd-web-pb")
            if os.path.exists(twistdsock):
                linknm = '%s%s' % (pw_name, self.pbextension)
                write(fmtStr % (linknm, realname, self.pbextension))
        write('</UL>\n')

    def getWidget(self, chnam, request):
        print "x"
        if chnam[-len(self.pbextension):] == self.pbextension:
            username = chnam[:-len(self.pbextension)]
            sub = 1
        else:
            username = chnam
            sub = 0

        try:
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = pwd.getpwnam(username)
        except KeyError:
            return error.NoResource()

        if sub:
            userpath = createUserPath(pw_dir, username, self.userSocketName,
                                        "twistd-web-pb")
            rs = ResourceSubscription('unix', userpath)
            self.putChild(chnam, rs)
            return rs
        else:
            userpath = createUserPath(pw_dir, username, self.userDirName)
            return static.File(userpath)

From eokyere at cox.net  Thu Jun 12 20:00:54 2003
From: eokyere at cox.net (e okyere)
Date: Thu, 12 Jun 2003 20:00:54 -0400
Subject: [Twisted-Python] socket communications in flash
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAalgyXu+u5Uq1Y9Yg3Mk7A8KAAAAQAAAAsHaPPOlOLUezyQszchWbAwEAAAAA@cox.net>

Hello:

I am looking at doing low-level sock comms with flash mx and hopefully c++
and upon hitting this thread: 

http://twistedmatrix.com/pipermail/twisted-python/2002-May/001121.html

thought I should contact you to see if you have any experience in that line.
If so, I'd appreciate any resources you can share or point to.

Thanks a lot.
       _______ 
      | \___/ 
       o(. .)o 
  --ooO--(_)--Ooo-- 
e okyere , clifton, va
 





From stefan.fleiter at web.de  Fri Jun 13 17:41:19 2003
From: stefan.fleiter at web.de (Stefan Fleiter)
Date: Fri, 13 Jun 2003 23:41:19 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>
References: <3EE9F175.9010401@web.de> <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>
Message-ID: <20030613214119.GA30109@shuttle.mothership.home.dhs.org>

Hi Glyph!

On Fri, 13 Jun 2003 Glyph Lefkowitz wrote:

Wow, I am lucky, Mr. Twisted himself is answering my beginner-Question!

> Remove the 'reactor.run()' here.
So add.run() automatically starts the reactor?

Thanks, a million, I was almost loosing my brains. ;-)

Greets,
Stefan



From ard at cs.oberlin.edu  Sat Jun 14 17:22:22 2003
From: ard at cs.oberlin.edu (Jonathan Ard)
Date: Sat, 14 Jun 2003 17:22:22 -0400
Subject: [Twisted-Python] Installing Twisted on Win32
Message-ID: <20030614212222.GA20226@cs.oberlin.edu>


Stupid question:

Is there any way to install Twisted on Windows XP without Administrator Privileges?  

I tried using the binary installer from the Web Site, but it keeps telling me that I don't have the rights to install it.  

Thanks,

Jonathan

-- 



From lafou at wanadoo.fr  Tue Jun 17 03:51:34 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 17 Jun 2003 09:51:34 +0200
Subject: [Twisted-Python] Installing Twisted on Win32
In-Reply-To: <20030614212222.GA20226@cs.oberlin.edu>
References: <20030614212222.GA20226@cs.oberlin.edu>
Message-ID: <1055836294.2818.98.camel@biproc>

Of course.

Just extract it in a directory and add c:\path\to\dir\twisted to your
PYTHONPATH env var. If there's no PYTHONPATH, create it of course.



On Sat, 2003-06-14 at 23:22, Jonathan Ard wrote:
> Stupid question:
> 
> Is there any way to install Twisted on Windows XP without Administrator Privileges?  
> 
> I tried using the binary installer from the Web Site, but it keeps telling me that I don't have the rights to install it.  
> 
> Thanks,
> 
> Jonathan
-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From glyph at twistedmatrix.com  Tue Jun 17 03:46:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2003 02:46:49 -0500
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <20030613214119.GA30109@shuttle.mothership.home.dhs.org>
Message-ID: <DA5670EC-A097-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 04:41 PM, Stefan Fleiter wrote:

> Wow, I am lucky, Mr. Twisted himself is answering my beginner-Question!

Technically it's "Sir Dr. Twisted, Esq.", to make sure that we don't 
get confused with Allen, the "Rt. Hon. Rev. Twisted".

> So add.run() automatically starts the reactor?

Yup.

> Thanks, a million, I was almost loosing my brains. ;-)

Although I've lost my mind with no apparent ill effects, I'd have to 
suggest keeping the reactor at least 4 feet from your brains at all 
time.  Twisted has NO WARRANTY, so I can't be liable if your eyeballs 
were to spontaneously melt...




From bob at redivi.com  Tue Jun 17 07:29:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 17 Jun 2003 07:29:54 -0400
Subject: [Twisted-Python] socket communications in flash
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAalgyXu+u5Uq1Y9Yg3Mk7A8KAAAAQAAAAsHaPPOlOLUezyQszchWbAwEAAAAA@cox.net>
Message-ID: <0492FFB5-A0B7-11D7-85A7-000A95686CD8@redivi.com>

On Thursday, Jun 12, 2003, at 20:00 America/New_York, e okyere wrote:
> I am looking at doing low-level sock comms with flash mx and hopefully  
> c++
> and upon hitting this thread:
>
> http://twistedmatrix.com/pipermail/twisted-python/2002-May/001121.html
>
> thought I should contact you to see if you have any experience in that  
> line.
> If so, I'd appreciate any resources you can share or point to.

This is similar to how I've done it in the past (warning: untested, not  
commented, mostly rape & paste from other code I've written):

########
import sys, random, md5
from twisted.python.compat import True, False
from twisted.python import log
from twisted.protocols.basic import LineReceiver
from twisted.web import microdom
from twisted.internet.protocol import Factory


class XMLPipe(LineReceiver):
     delimiter = '\0'

     def connectionMade(self):
         pass

     def sendMessage(self, message):
         self.transport.writeSequence(('<packet>', str(message),  
'</packet>', self.delimiter))

     def lineReceived(self, line):
         if not line:
             log.msg("WARNING:  Empty message from client")
             return
         packet = microdom.parseString(line).childNodes[0]
         if packet.nodeName != 'packet':
             raise ValueError, '%r is not a packet tag' % packet
         self.packetReceived(packet)

     def packetReceived(self, packet):
         raise NotImplementedError

     def connectionLost(self, reason):
         pass

class FlashPipe(XMLPipe):
     def connectionMade(self):
         self.authenticated = False
         self.user = None
         self.issueChallenge()

     def packetReceived(self, packet):
         for node in packet.childNodes:
             self.nodeReceived(node)

     def nodeReceived(self, node):
         return getattr(self, 'handle_'+node.nodeName,  
self.xmlerror)(node)

     def xmlerror(self, node):
         log.msg('Unrecognized Node %r %r' % (node, node.toxml()))
         self.sendMessage('<error>Unrecognized Node</error>')

     def issueChallenge(self):
         # some entropy
         self.pendingChallenge = md5.new(''.join((
             hex(id(self)),
             hex(random.randrange(sys.maxint)),
         ))).hexdigest()
         self.sendMessage(''.join(
             ('<challenge>', self.pendingChallenge, '</challenge>'
         )))

     def handle_response(self, node):
         resp = node.firstChild().nodeValue.strip()
         for possible, user in self.factory.authorized.iteritems():
             h = md5.new(self.pendingChallenge)
             h.update(possible)
             if h.hexdigest() == resp:
                 break
         else:
             return
         log.msg('authenticated as %s' % user)
         self.user = user
         self.authenticated = True
         self.sendMessage('<authenticated />')

class FlashXMLFactory(Factory):
     noisy = 0
     protocol = FlashPipe
     authorized = {'somerandomdata' : 'valid user'}

if __name__=='__main__':
     from twisted.internet import reactor
     log.startLogging(sys.stdout)
     reactor.listenTCP(8888, FlashXMLFactory())
     reactor.run()

####

A conversation would look like this:
SERVER:  
'<packet><challenge>d41d8cd98f00b204e9800998ecf8427e</challenge></ 
packet>\0'
CLIENT:  
'<packet><response>f87504a987151d223335f0753f010b74</response></ 
packet>\0'
SERVER: '<packet><authenticated /></packet>\0'

-bob




From tv at twistedmatrix.com  Tue Jun 17 15:54:16 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 17 Jun 2003 22:54:16 +0300
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <20030617195416.GA6113@tao.tv.debian.net>

On Mon, Jun 16, 2003 at 05:28:46AM -0500, Glyph Lefkowitz wrote:
> Portal
> ======

> Mind
> ====

> The name may seem rather unusual, but considering that a Mind is 
> representative of the entity on the "other end" of a network connection 
> that is both receiving updates and issuing commands, I believe it is 
> appropriate.

> Realm
> =====

> Avatar
> ======

	Man. You need to let let *go* of that pipe. You've been
	puffing a bit too much.

	I'd really appreciate it if Twisted would contain bad naming
	puns in the edges and things only used by Twisted developers,
	but not in the core facilities. I've already had trouble
	selling it due to the "twisted" name :)

> checker mechanisms soon.  (If somebody were to write an 
> ActiveDirectory-compatible LDAP login, they would be my best friend for 
> EVER.)

	Sooo.. what does ActiveDirectory need to check a users
	passphrase? If it's anywhere near what basic LDAP usage is,
	I'm already your friend.

	(And no, I will not look for myself. I can smell it already,
	I'm not going closer without bribery.)




	For those readers, who don't have a clue what I'm talking about:

	Ldaptor is a pure-python LDAP library, utilities and
	applications.

	apt-get install ldaptor-utils ldaptor-webui
	http://tv.debian.net/software/ldaptor/
	http://ldaptor.bkbits.net/

	It contains a fully-featured LDAP client library, a just-added
NEW-->	initial LDAP server support, a web server that allows users to
	browse/edit LDAP content, and a set of command line tools for
	e.g. doing LDAP searches, changing passwords, etc.

	Also a lot of infrastructure exists: Ldaptor groks Samba LDAP
	entries, DNS SRV, etc.

-- 
:(){ :|:&};:



From martin at tactilis.co.uk  Tue Jun 17 15:59:07 2003
From: martin at tactilis.co.uk (Martin Armstrong)
Date: Tue, 17 Jun 2003 20:59:07 +0100
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports
In-Reply-To: <20030609123300.GC29930@mercury.local.net>
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>
 <20030609123300.GC29930@mercury.local.net>
Message-ID: <9OJg9OFLM37+Ewv+@tactilis.co.uk>

In article <20030609123300.GC29930 at mercury.local.net>, W.J. 
<miathan at goliath.darktech.org> writes


In article <76ADB8C376C3D31193F50008C7E6D3B2F3E15E at EWHKA005>,
Richard.Townsend at edl.uk.eds.com writes

>> I have now had a chance to test this on HP-UX11i and have discovered a
>> problem.
>>  The code for Application.setUID() calls os.getgid() expecting it to
>> return 0

>Why on earth would you want to check or enforce someone is in group 0? 
>Being in group 0 doesn't have any 'magic' like uid 0 has, well, it 
>might have on some operating systems, but it's not a portable way.

>Some unices don't even have a special *user* ID 0 but have security 
>based on process privileges. You shouldn't assume setuid or setgid to 
>fail/succeed based on those numbers.

>IMO the best way is to just try to setuid/setgid if requested, if it is 
>not allowed you'll get an EPERM soon enough anyway.


Wladimir is correct.

Here's a patch (already tested by Richard) that provides the correct 
behaviour:



/usr/local/src/Twisted/twisted/internet: cvs diff app.py
Index: app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.97
diff -r1.97 app.py

695,699c695,701
<         if hasattr(os, 'getgid'):
<             if not os.getgid():
<                 os.setegid(self.gid)
<                 os.seteuid(self.uid)
<                 log.msg('set euid/egid %s/%s' % (self.uid, self.gid))
---
>         try:
>             os.setegid(self.gid)
>             os.seteuid(self.uid)
>         except (AttributeError, OSError):
>             pass
>         else:
>             log.msg('set euid/egid %s/%s' % (self.uid, self.gid))

704,708c706,712
<         if hasattr(os, 'getgid'):
<             if not os.getgid():
<                 os.setgid(self.gid)
<                 os.setuid(self.uid)
<                 log.msg('set uid/gid %s/%s' % (self.uid, self.gid))
---
>         try:
>             os.setgid(self.gid)
>             os.setuid(self.uid)
>         except (AttributeError, OSError):
>             pass
>         else:
>             log.msg('set uid/gid %s/%s' % (self.uid, self.gid))


-- 
Martin Armstrong                        <mailto:martin at tactilis.co.uk>



From itamar at itamarst.org  Tue Jun 17 15:59:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Jun 2003 15:59:36 -0400
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617195416.GA6113@tao.tv.debian.net>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
	<20030617195416.GA6113@tao.tv.debian.net>
Message-ID: <20030617155936.39455151.itamar@itamarst.org>

On Tue, 17 Jun 2003 22:54:16 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	Man. You need to let let *go* of that pipe. You've been
> 	puffing a bit too much.

For the record, cred was designed by glyph and me. And we chose the
names together, and they make a lot of sense, we didn't choose them
(just) because they sound cool.
 
> 	Sooo.. what does ActiveDirectory need to check a users
> 	passphrase? If it's anywhere near what basic LDAP usage is,
> 	I'm already your friend.

You would be implementing a credential checker. You write a IIRC check()
method that accepts certain credentials objects that comply to specific
interfaces (e.g. IUsernamePasswordCredentials) call methods and lookup
attributes on them, and then return a Deferred of either a string which
is their avatar id (i.e. unique ID representing the user) or a Failure.

So, you need to implement one method.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From bob at redivi.com  Tue Jun 17 16:36:40 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 17 Jun 2003 16:36:40 -0400
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <66187BAC-A103-11D7-85A7-000A95686CD8@redivi.com>

On Tuesday, Jun 17, 2003, at 15:59 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Tue, 17 Jun 2003 22:54:16 +0300
> Tommi Virtanen <tv at twistedmatrix.com> wrote:
>
>> 	Man. You need to let let *go* of that pipe. You've been
>> 	puffing a bit too much.
>
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

puff, puff, pass?  :)

I'm also not fond of the "mind" terminology, there's gotta be a better 
word for what it is.. entity, participant, client, user, foobar (prefix 
anything with "remote" if desired).. but not "mind".

-bob




From jasper at peak.org  Tue Jun 17 17:32:55 2003
From: jasper at peak.org (Jasper Phillips)
Date: Tue, 17 Jun 2003 14:32:55 -0700 (PDT)
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
 <20030617195416.GA6113@tao.tv.debian.net> <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <Pine.LNX.4.53.0306171341430.26539@a.shell.peak.org>

On Tue, 17 Jun 2003, Itamar Shtull-Trauring wrote:

> On Tue, 17 Jun 2003 22:54:16 +0300
> Tommi Virtanen <tv at twistedmatrix.com> wrote:
> 
> > 	Man. You need to let let *go* of that pipe. You've been
> > 	puffing a bit too much.
> 
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

They're not egregious, but some aren't very good either -- no offense.  As is
often the case, the first names presented aren't the best ones; why not make
it standard procedure to first discuss better names when adding something new
to Twisted?

The names I suggest most need changing:
Mind:          ClientProxy instead?
Realm, Avatar: I think they're fine, as lone as a Realm also includes internal
               state as the name implies, rather than being a mere gatekeeper
               as the description seems to imply...

I look forward to using the new cred; it sounds much improved!
-Jasper



From don at motorola.com  Tue Jun 17 18:10:55 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 17 Jun 2003 17:10:55 -0500
Subject: [Twisted-Python] restricting twisted web to a single connection
In-Reply-To: <20030612214031.GA20191@soniq.net>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>

Hello,

I'm just getting started with twisted and have a question
about twisted web. How would I go about limiting the web
server to accepting a single connection? I know you might
be asking your self why anyone would want to do such a 
stupid thing, but I'm controlling some hardware and need
to restrict access to it to a single user at a time.

Anyway, I'd appreciate any pointers. :-)

Cheers,

don




From glyph at twistedmatrix.com  Tue Jun 17 21:17:16 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2003 20:17:16 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <66187BAC-A103-11D7-85A7-000A95686CD8@redivi.com>
Message-ID: <99AA5764-A12A-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Tuesday, June 17, 2003, at 03:36 PM, Bob Ippolito wrote:

> I'm also not fond of the "mind" terminology, there's gotta be a better 
> word for what it is.. entity, participant, client, user, foobar 
> (prefix anything with "remote" if desired).. but not "mind".

The naming scheme is somewhat baroque on purpose.  Cred's domain is a 
_very_ semantically polluted one, where (A) the concepts are subtle and 
complex and (B) most all the *normal*-sounding names are already used 
by some other project or related concept to mean something apparently 
similar but in reality very confusingly different.

"Mind" is, honestly, the best word I've heard so far that will 
adequately distinguish the object in this role from other, similar 
objects which may be implemented as domains for a particular protocol.

When a simple or compound word will do, I try to use it.  
"CredentialChecker", for example, doesn't need to be "Portcullis" 
because its name unambiguously describes its function.

However, compound words like ClientProxy, AvatarClient, ClientObject, 
RemoteMethodEventHandlerProxyHandler and so on are very easy to 
misunderstand, especially (as many folks I'm sure do) if you have had 
experience with a similar system in a proprietary environment with its 
own naming quirks.

In short: in a system which involves subtle concepts, I prefer names 
which are memorable and unambiguous.  If possible, the terms should 
also be clear, but as users develop experience with the system, the 
initial clarity is less and less important but memorability remains 
just as important.

As an added bonus, if a term's actual meaning is subtle -- and. if and 
ONLY if the documentation is good -- the bizarre naming will force a 
new user to read the documentation to get a handle on what it means.  
While it would be nice to be able to clearly express to a user what a 
term means with only its name, it is better to have them confused and 
encouraged to read documentation than to have them _think_ they 
understand what it's supposed to do and be far more confused later when 
an apparently obvious interaction has some exceptionally bizarre 
side-effects.




From andrew-twisted at puzzling.org  Tue Jun 17 21:46:04 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 18 Jun 2003 11:46:04 +1000
Subject: [Twisted-Python] restricting twisted web to a single connection
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>
References: <20030612214031.GA20191@soniq.net> <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>
Message-ID: <20030618014604.GA4823@frobozz>

On Tue, Jun 17, 2003 at 05:10:55PM -0500, Don Hiatt wrote:
> Hello,
> 
> I'm just getting started with twisted and have a question
> about twisted web. How would I go about limiting the web
> server to accepting a single connection? I know you might
> be asking your self why anyone would want to do such a 
> stupid thing, but I'm controlling some hardware and need
> to restrict access to it to a single user at a time.
> 
> Anyway, I'd appreciate any pointers. :-)

You'll probably have to subclass twisted.web.server.Site to make
buildProtocol return None if a connection is active.  Untested code from the
top of my head:

from twisted.protocols.http import HTTPChannel
from twisted.web.server import Site

class SingleConnectionHTTPChannel(HTTPChannel):
    def connectionLost(self, reason):
        self.factory.connections -= 1
        HTTPChannel.connectionLost(self, reason)

class SingleConnectionSite(Site):
    protocol = SingleConnectionHTTPChannel
    connections = 0
    def buildProtocol(self, addr):
        # Reject concurrent connections
        if self.connections:
            return None
        self.connections += 1

        return Site.buildProtocol(self, addr)

-Andrew.




From exarkun at intarweb.us  Wed Jun 18 07:02:10 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 18 Jun 2003 07:02:10 -0400
Subject: [Twisted-Python] Howto use the Gnutella-protocol
In-Reply-To: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>
References: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>
Message-ID: <20030618110210.GA16380@meson.dyndns.org>

On Fri, Jun 13, 2003 at 02:48:49PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Is the gnutella-protocol in Twisted so complete I can use it to query a
> gnutella-network and download files? If so, does anybody have any example
> code?
> 
> Any hints, clues etc. on this matter would be highly appreciated.

  The gnutella.py module doc string --

    """
    Gnutella, v0.4
    http://www9.limewire.com/developer/gnutella_protocol_0.4.pdf

    This module is incomplete.  The "GnutellaTalker" class is complete.  The
    "GnutellaPinger" and "GnutellaPonger" are complete and able to chat with one
    another.  The "GnutellaRouter" and "GnutellaServent" classes are yet to be
    written.
    """

  From this, I would gather the answer is "no," but there seems to be a
reasonable basis for implementing that functionality.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030618/c46fa369/attachment.pgp 

From justinjohnson at fastmail.fm  Wed Jun 18 10:28:56 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 08:28:56 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
Message-ID: <20030618142856.40933366F2@www.fastmail.fm>

Hello,

I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
able to contect to it fine using just python's xmlrpclib on the client,
and am now switching over to use twisted on the client as well.  I'm
getting a wierd error though that I'm not sure how to track down.  Below
is are snippets of my client code, server code, and the error I'm
getting.

Any help you can provide is appreciated.
-Justin


[client]
def connectToServer(server):
	s = Proxy('http://%s:%s' % (server, config.portNumber))
	return s

def printValue(output):
	print "success"
	#print "success: %s" % output
	reactor.stop()

def printError(output):
	print "error"
	#print "error: %s" % output
	reactor.stop()

# Subcommand: mkvob
def doMkvob(options):
	vobs = options["vobs"].split(",")
	original_site = options["original"]
	group = options["group"]

	s = connectToServer(config.siteToServer[original_site])
	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
	print "Calling remote mkvob ..."

	d = s.callRemote('mkvob', vobs, group).addCallbacks(printValue, printError)
	reactor.run()
[/client]

[server]
class CCService(xmlrpc.XMLRPC):
	"""Service for handling remote VOB creation, removal, and general
	   ClearCase maintenance.
	"""

	def xmlrpc_mkvob(self, vobs, group):
		"""Create VOBs and apply standard triggers.
		"""
		log("we're in")
		output = ""
		rtn = SUCCESS
		for tag in vobs:
			log("Start mkvob for VOB '%s'" % tag)
			vob = VOB(tag, group)
			try:
				output += vob.make()
				output += vob.applyTriggers()
			except errors.CmdError, e:
				rtn = FAILURE
				output = e.stdout + e.stderr
				log("Error raised: cmd=%s, status=%s, stdout=%s, stderr=%s" % (e.cmd, e.status, e.stdout, e.stderr))
			log("End mkvob for VOB '%s'" % tag)
		return (rtn, output)
[/server]


Traceback (most recent call last):
  File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line
  173, in
dataReceived
    self.lineReceived(line)
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  893, in l
ineReceived
    self.allContentReceived()
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  932, in a
llContentReceived
    req.requestReceived(command, path, version)
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  504, in r
equestReceived
    self.process()
--- <exception caught here> ---
  File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 156,
  in proce
ss
    self.render(resrc)
  File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 162,
  in rende
r
    body = resrc.render(self)
  File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 103,
  in rende
r
    args, functionPath = xmlrpclib.loads(request.content.read())
  File "E:\Python22\lib\xmlrpclib.py", line 805, in loads
    p.close()
  File "E:\Python22\lib\xmlrpclib.py", line 393, in close
    self._parser.Parse("", 1) # end of data
xml.parsers.expat.ExpatError: no element found: line 1, column 0



From justinjohnson at fastmail.fm  Wed Jun 18 11:03:46 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 09:03:46 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618142856.40933366F2@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
Message-ID: <20030618150346.3A9F73639F@www.fastmail.fm>

I changed printError to...

def printError(error):
	print error
	print error.getErrorMessage()
	error.printDetailedTraceback()
	reactor.stop()

and got the following...

[Failure instance: Traceback: twisted.internet.error.ConnectionLost,
]

*--- Failure #4 ---
--- <exception caught here> ---
*--- End of Failure #4 ---

Not sure if this helps any.

On Wed, 18 Jun 2003 08:28:56 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> Hello,
> 
> I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> able to contect to it fine using just python's xmlrpclib on the client,
> and am now switching over to use twisted on the client as well.  I'm
> getting a wierd error though that I'm not sure how to track down.  Below
> is are snippets of my client code, server code, and the error I'm
> getting.
> 
> Any help you can provide is appreciated.
> -Justin
> 
> 
> [client]
> def connectToServer(server):
> 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> 	return s
> 
> def printValue(output):
> 	print "success"
> 	#print "success: %s" % output
> 	reactor.stop()
> 
> def printError(output):
> 	print "error"
> 	#print "error: %s" % output
> 	reactor.stop()
> 
> # Subcommand: mkvob
> def doMkvob(options):
> 	vobs = options["vobs"].split(",")
> 	original_site = options["original"]
> 	group = options["group"]
> 
> 	s = connectToServer(config.siteToServer[original_site])
> 	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
> 	print "Calling remote mkvob ..."
> 
> 	d = s.callRemote('mkvob', vobs, group).addCallbacks(printValue, printError)
> 	reactor.run()
> [/client]
> 
> [server]
> class CCService(xmlrpc.XMLRPC):
> 	"""Service for handling remote VOB creation, removal, and general
> 	   ClearCase maintenance.
> 	"""
> 
> 	def xmlrpc_mkvob(self, vobs, group):
> 		"""Create VOBs and apply standard triggers.
> 		"""
> 		log("we're in")
> 		output = ""
> 		rtn = SUCCESS
> 		for tag in vobs:
> 			log("Start mkvob for VOB '%s'" % tag)
> 			vob = VOB(tag, group)
> 			try:
> 				output += vob.make()
> 				output += vob.applyTriggers()
> 			except errors.CmdError, e:
> 				rtn = FAILURE
> 				output = e.stdout + e.stderr
> 				log("Error raised: cmd=%s, status=%s, stdout=%s, stderr=%s" % (e.cmd, e.status, e.stdout, e.stderr))
> 			log("End mkvob for VOB '%s'" % tag)
> 		return (rtn, output)
> [/server]
> 
> 
> Traceback (most recent call last):
>   File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line
>   173, in
> dataReceived
>     self.lineReceived(line)
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   893, in l
> ineReceived
>     self.allContentReceived()
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   932, in a
> llContentReceived
>     req.requestReceived(command, path, version)
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   504, in r
> equestReceived
>     self.process()
> --- <exception caught here> ---
>   File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 156,
>   in proce
> ss
>     self.render(resrc)
>   File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 162,
>   in rende
> r
>     body = resrc.render(self)
>   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 103,
>   in rende
> r
>     args, functionPath = xmlrpclib.loads(request.content.read())
>   File "E:\Python22\lib\xmlrpclib.py", line 805, in loads
>     p.close()
>   File "E:\Python22\lib\xmlrpclib.py", line 393, in close
>     self._parser.Parse("", 1) # end of data
> xml.parsers.expat.ExpatError: no element found: line 1, column 0
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From wari at home.wari.org  Wed Jun 18 12:15:16 2003
From: wari at home.wari.org (Wari Wahab)
Date: Thu, 19 Jun 2003 00:15:16 +0800
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618142856.40933366F2@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
Message-ID: <3EF09014.9000006@home.wari.org>

Justin Johnson wrote:
> Hello,
> 
> I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> able to contect to it fine using just python's xmlrpclib on the client,
> and am now switching over to use twisted on the client as well.  I'm
> getting a wierd error though that I'm not sure how to track down.  Below
> is are snippets of my client code, server code, and the error I'm
> getting.

I've got this problem a while ago as well.. It costs me a few days of 
headaches, and no one here seems to be able to answer the question, 
until I did some probing myself.

> [client]
> def connectToServer(server):
> 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> 	return s

Your fix:
s = Proxy('http://%s:%s/' % (server, config.portNumber))
-----------------------^

See if that solves your problem as it solves mine.

If it does, then the issue is that the request sent over to the twisted 
server looks like:

POST  HTTP/1.0 # Note the lack of '/'

Which then gets converted nicely to:

POST  HTTP/1.0 HTTP/0.9

-- 
Regards: Wari Wahab
RoughingIT - http://roughingit.subtlehints.net
PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom




From justinjohnson at fastmail.fm  Wed Jun 18 12:22:44 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 10:22:44 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <3EF09014.9000006@home.wari.org>
References: <20030618142856.40933366F2@www.fastmail.fm> <3EF09014.9000006@home.wari.org>
Message-ID: <20030618162244.71DEC36A84@www.fastmail.fm>

That was my problem.  Hmmm...  I don't quite understand why though. 
Would you mind explaining this further?  I didn't quite follow your
explanation.

Thanks so much.
-Justin

On Thu, 19 Jun 2003 00:15:16 +0800, "Wari Wahab" <wari at home.wari.org>
said:
> Justin Johnson wrote:
> > Hello,
> > 
> > I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> > able to contect to it fine using just python's xmlrpclib on the client,
> > and am now switching over to use twisted on the client as well.  I'm
> > getting a wierd error though that I'm not sure how to track down.  Below
> > is are snippets of my client code, server code, and the error I'm
> > getting.
> 
> I've got this problem a while ago as well.. It costs me a few days of 
> headaches, and no one here seems to be able to answer the question, 
> until I did some probing myself.
> 
> > [client]
> > def connectToServer(server):
> > 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> > 	return s
> 
> Your fix:
> s = Proxy('http://%s:%s/' % (server, config.portNumber))
> -----------------------^
> 
> See if that solves your problem as it solves mine.
> 
> If it does, then the issue is that the request sent over to the twisted 
> server looks like:
> 
> POST  HTTP/1.0 # Note the lack of '/'
> 
> Which then gets converted nicely to:
> 
> POST  HTTP/1.0 HTTP/0.9
> 
> -- 
> Regards: Wari Wahab
> RoughingIT - http://roughingit.subtlehints.net
> PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From itamar at itamarst.org  Wed Jun 18 12:26:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 12:26:34 -0400
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <3EF09014.9000006@home.wari.org>
References: <20030618142856.40933366F2@www.fastmail.fm>
	<3EF09014.9000006@home.wari.org>
Message-ID: <20030618122634.1b871e8d.itamar@itamarst.org>

On Thu, 19 Jun 2003 00:15:16 +0800
Wari Wahab <wari at home.wari.org> wrote:

> Your fix:
> s = Proxy('http://%s:%s/' % (server, config.portNumber))

Fixed in CVS so that if you don't pass end the URL with '/' and it will
add one for you.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Wed Jun 18 12:30:43 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 12:30:43 -0400
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618162244.71DEC36A84@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
	<3EF09014.9000006@home.wari.org>
	<20030618162244.71DEC36A84@www.fastmail.fm>
Message-ID: <20030618123043.0c214017.itamar@itamarst.org>

On Wed, 18 Jun 2003 10:22:44 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> That was my problem.  Hmmm...  I don't quite understand why though. 
> Would you mind explaining this further?  I didn't quite follow your
> explanation.

There were two bugs here - one in the client code for xmlrpc, which I
fixed, and another in the HTTP server code which made the error in the
client code harder to understand. I am looking at the second one right
now.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jun 18 13:03:05 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 11:03:05 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618123043.0c214017.itamar@itamarst.org>
References: <20030618142856.40933366F2@www.fastmail.fm>
 	<3EF09014.9000006@home.wari.org>
 	<20030618162244.71DEC36A84@www.fastmail.fm> <20030618123043.0c214017.itamar@itamarst.org>
Message-ID: <20030618170305.7124F36A95@www.fastmail.fm>

Okay, thanks.

On Wed, 18 Jun 2003 12:30:43 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Wed, 18 Jun 2003 10:22:44 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > That was my problem.  Hmmm...  I don't quite understand why though. 
> > Would you mind explaining this further?  I didn't quite follow your
> > explanation.
> 
> There were two bugs here - one in the client code for xmlrpc, which I
> fixed, and another in the HTTP server code which made the error in the
> client code harder to understand. I am looking at the second one right
> now.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From justinjohnson at fastmail.fm  Wed Jun 18 13:02:26 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 11:02:26 -0600
Subject: [Twisted-Python] passing exceptions to an xmlrpc client
Message-ID: <20030618170226.E5A73369C6@www.fastmail.fm>

When doing something like:

proxy.callRemote('add', 1, 2).addCallbacks(printValue, printError)

...my understanding is that the callback function (printValue) will get
called unless an exception is raised by 'add', or 'add' returns a
twisted.python.failure.Failure.  However, if I am calling a remote method
on a twisted xmlrpc service, raised exceptions and returned Failure's
can't really be returned to the client side.  So really my errback would
only get called if there were some other problem with the service, like
loss of network connection or something like that, right?  If I use the
perspective broker will I be able to raise exceptions or return failures
in my remote methods and have them get passed back to the client
appropriately?  I'm trying to make sure I can handle all errors in my
errbacks, and not have to do some special processing of errors specific
to my method in the callbacks.

Thanks.
-Justin



From wari at home.wari.org  Wed Jun 18 12:46:13 2003
From: wari at home.wari.org (Wari Wahab)
Date: Thu, 19 Jun 2003 00:46:13 +0800
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618162244.71DEC36A84@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm> <3EF09014.9000006@home.wari.org> <20030618162244.71DEC36A84@www.fastmail.fm>
Message-ID: <3EF09755.6050207@home.wari.org>

Justin Johnson wrote:
> That was my problem.  Hmmm...  I don't quite understand why though. 
> Would you mind explaining this further?  I didn't quite follow your
> explanation.

Sorry, just trying to point out that twisted's got two (minor) problem, 
the XMLRPC client issues an invalid request to the webserver "POST 
HTTP/1.0", go ask other web servers, they'll answer the same thing, 
either invalid request, or just closed the connection for you, Twisted 
webserver, returns a 404, which is not the correct behavior.

Anyway, whatever it is, since the reply is not valid XML, expat dies 
immediately (line 1, column 0 does not start with <?xml)

-- 
Regards: Wari Wahab
RoughingIT - http://roughingit.subtlehints.net
PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom




From radix at twistedmatrix.com  Wed Jun 18 16:16:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 18 Jun 2003 16:16:03 -0400
Subject: [Twisted-Python] passing exceptions to an xmlrpc client
In-Reply-To: <20030618170226.E5A73369C6@www.fastmail.fm>; from justinjohnson@fastmail.fm on Wed, Jun 18, 2003 at 13:02:26 -0400
References: <20030618170226.E5A73369C6@www.fastmail.fm>
Message-ID: <20030618201603.GA19089@toshi.anaprd01.md.comcast.net>

On 2003.06.18 13:02, Justin Johnson wrote:
> If I use the
> perspective broker will I be able to raise exceptions or return failures
> in my remote methods and have them get passed back to the client
> appropriately?  I'm trying to make sure I can handle all errors in my
> errbacks, and not have to do some special processing of errors specific
> to my method in the callbacks.

Yes, Perspective Broker has built-in support for passing Failures from one
end to another mostly-transparently (some low-level information that you
almost certainly won't need is lost in the transfer, but otherwise it's
transparent).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Wed Jun 18 17:53:51 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 18 Jun 2003 23:53:51 +0200
Subject: [Twisted-Python] Subclassing Resource, problems accessing persistent data/using registry
Message-ID: <005b01c335e4$256de300$0401a8c0@razor>

I've subclassed twisted.web.resource to create my own type of rpys where the
content is wrapped in a site-wide template before being returned to the
client. This makes it easier and quicker to generate content in the rpys
themselves. I've also created a response-object instead of returning just a
string from the render-method or using request.write. IMHO a server should
work with a response to a request, not use the request itself to send
content back to the client.

The code in the bottom of the posting works great ( making it into a rpy,
running mktap + twistd etc. ), but if I create a rpy file called test.rpy,
with something like :

--------------------- snip
snip --------------------------------------------------

from hs.twisted.eloperesource import ElopeRespource

class test(ElopeRespource):
    def content(self, request, response, server):
        response.add('hello world, once again')

resource = test()

--------------------- snip
snip --------------------------------------------------

I cannot get the persistent data in my custom server-class to be registered,
the registry.getComponent-method is not available. Can I register persistent
data in any other way and somehow pass it to my own rpys? How can I manually
register persistent data, not use the automagical-way in rpys? I create a
web.tap file and try to serve the data using twisted -f web.tap etc. but it
raises an exception.

Any hint, idea, flame or constructive comment would be appreciated.

Best regards,
Thomas W

--------------------- snip
snip --------------------------------------------------

import os, types, sys, cgi, time, string, cStringIO, gzip, traceback, PyMeld
from twisted.web import server, resource
from twisted.internet import reactor
from twisted.web import server, resource, error
from twisted.protocols import http
from twisted.web.static import File
from twisted.internet import reactor

# special custom classes
from hs.twisted.response import response
from hs.twisted.Server import Server

server = registry.getComponent(Server)
if not server:
    registry.setComponent(Server, Server())
server = registry.getComponent(Server)

class ElopeResource(resource.Resource):

    isLeaf = True

    def __init__(self):
        resource.Resource.__init__(self)

    def content(self, request, response, server):
        # Should be overridden by the rpy
        response.add('Should be overridden') # added content is accumulated
in the response-object

    def render(self, request):
        resp = response()
        self.content(request, resp, server)

        if resp.filename and not resp.content_type in ['text/xml',
'text/plain', 'text/html', 'text/css']:
            # special handler to return files not directly available online,
located somewhere on local filesystem
            filesize = os.stat(resp.filename)[6]
            modification_time = os.stat(resp.filename)[8]
            request.setHeader("Content-Length", filesize)
            request.setHeader("Last-modified",
time.ctime(modification_time))
            request.setHeader("Content-Disposition", 'file; filename="%s"' %
os.path.split(resp.filename)[1])
            return File(resp.filename,
getContentType(resp.filename)).render(request)

        elif resp.url:
            request.redirect(resp.url)
            return 'You should be redirect to %s' % resp.url

        else:
            if resp.filename: # a plain-text, html or xml-file
                resp.content = open(resp.filename).read()

            request.setResponseCode(resp.response_code, 'OK')
            request.setHeader("Content-type", resp.content_type)
            if request.received_headers.has_key('accept-encoding'): # custom
gzip-encoding
                if 'gzip' in map(string.strip,
request.received_headers['accept-encoding'].split(',')) and \
                   resp.content_type in ['text/xml', 'text/plain',
'text/html', 'text/css']:
                    try:
                        fd = cStringIO.StringIO()
                        gz = gzip.GzipFile(filename='', mode='wb',
compresslevel=9, fileobj=fd)
                        resp.content = '<html><body>%s</body></html>' %
resp.content
                        gz.write(resp.content)
                        gz.close()
                        gzHtml = fd.getvalue()
                        request.setHeader("Content-Length", len(gzHtml))
                        request.setHeader("Content-Encoding", 'gzip')
                        return gzHtml
                    except:
                        fp = cStringIO.StringIO()
                        traceback.print_exc(file=fp)
                        content = fp.getvalue()
                        return self.templates.populateSceleton(content,
'default')
            else:
                content = '<html><body>%s</body></html>' % resp.content
                request.setHeader("Content-Length", len(content))
                return content

class Simple(ElopeResource):

    def content(self, request, response, server):
        response.add('Hello world! And there\'s even some persistent data
from the server : %s' % vars(server))
        server.data['time'] = time.ctime(time.time())

resource = Simple()




From itamar at itamarst.org  Wed Jun 18 18:32:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 18:32:20 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <005b01c335e4$256de300$0401a8c0@razor>
References: <005b01c335e4$256de300$0401a8c0@razor>
Message-ID: <20030618183220.55d93249.itamar@itamarst.org>

This seems to be a common misunderstanding, so let me emphasise this.

   RPYs are *glue* for integration with static filesystem content. They
   should never contain large amounts of code.

In general, development for twisted.web should be done by a tree of
resources in memory, hooked up manually to a site object in your code.
RPYs are intended for easy integration of code with static content, but
if you want your resource to be persistent, don't use them - or at
least, hook them into an object that is persistent in memory.

If you need objects to be persistent in memory, don't use RPYs.

Twisted is not PHP, you can have objects persist in memory without *any
work*. You'd be better off never using RPYs at all, in the vast majority
of cases.

Doing "mktap web --path=foo" and then starting to build your site is
*not* how you should do it. Instead, start with the example code at
http://twistedmatrix.com/documents/howto/using-twistedweb#auto12

 from twisted.web import server, resource
 from twisted.internet import reactor

  class Simple(resource.Resource):
     isLeaf = True
     def render(self, request):
         return "<html>Hello, world!</html>"

  site = server.Site(Simple())
  reactor.listenTCP(8080, site)
  reactor.run()

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pp64 at cornell.edu  Thu Jun 19 00:18:33 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Thu, 19 Jun 2003 00:18:33 -0400
Subject: [Twisted-Python] Bad inconsistency with buildProtocol
Message-ID: <20030619001833.33439e01.pp64@cornell.edu>

It looks like buildProtocol gets passed inconsistent values for addr. In a program that connects to itself:
pahan at dunce:~/Twisted$ python echo.py
EchoServerFactory from ('127.0.0.1', 43044)
EchoClientFactory to ('INET', 'localhost', 8000)

For incoming connections, addr gets passed straight from <socketobj>.accept, which is not in the proper format.



From vijay at accellion.com  Thu Jun 19 01:57:55 2003
From: vijay at accellion.com (Vijay Rao)
Date: Thu, 19 Jun 2003 11:27:55 +0530
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <20030616113403.460.68059.Mailman@pyramid.twistedmatrix.com
 >
Message-ID: <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>

At 06:34 16/06/2003 -0500, you wrote:

>Message: 9
>Date: Mon, 16 Jun 2003 10:03:52 +0300
>From: Tommi Virtanen <tv at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Custom webserver
>Reply-To: twisted-python at twistedmatrix.com
>
>On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> > I am trying to use twisted as a webserver that serves files only for
> > requests from the localhost ie the desktop on which it is running by
> > mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on
> > windows ) so that a particular type of URL is served from this webserver.
>
>         Easiest way is to make it bind to 127.0.0.1. There's currently
>         no support in mktap web for this, though there really should
>         be.
>
>--
>:(){ :|:&};:

Thanks , any pointer as to how to achieve this binding.
Also for refusing any external request I tried this hack and it works :

(from protocols/http.py)

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
......
.....
......
             if len(parts) != 3:
                 self.transport.write("HTTP/1.1 400 Bad Request\r\n\r\n")
                 self.transport.loseConnection()
                 return
             client = self.transport.getPeer()
             host = self.transport.getHost()
             if client[1] != '127.0.0.1' or host[1] != '127.0.0.1' :
                 self.transport.write("HTTP/1.1 404 Forbidden\r\n\r\n")
                 self.transport.loseConnection()
                 return
.......
....

Can this cause any other problem ( One thing I can see is that new channels 
are created for each external request refused in this manner )
And the requesting client browser is also not being able to display the 
result sent.

Regards,
Vijay




From mesozoic at polynode.com  Thu Jun 19 02:04:11 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 19 Jun 2003 02:04:11 -0400
Subject: [Twisted-Python] Subclassing Resource, problems accessing persistent data/using registry
In-Reply-To: <005b01c335e4$256de300$0401a8c0@razor>
References: <005b01c335e4$256de300$0401a8c0@razor>
Message-ID: <20030619060411.GA32264@polynode.com>

If what you're looking to do is make site-wide templates for your pages,
subclassing Resource may be overkill.  twisted.web.woven provides a very
flexible, powerful way of generating web pages.

Glance through the Woven HOWTOs on the Twisted site.  Of particular help to
me was PicturePile, a step-by-step example of a basic Woven application
<http://twistedmatrix.com/documents/howto/picturepile>.

I use Woven to generate my own site, and while my code is nowhere near being
finished (or even worth making public), it works.  My experience is that,
given a bit of patience and a willingness to ask for help [try #twisted],
you can get a lot done.

(I make heavy use of woven.widgets.ExpandMacro, which is not mentioned in
the online docs [as far as I can tell].  You may find it useful also.)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From gradha at efaber.net  Thu Jun 19 03:11:12 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Thu, 19 Jun 2003 09:11:12 +0200
Subject: [Twisted-Python] A fake SMTP server
Message-ID: <20030619071112.GA1518@ns.local>

Hi.

I've written a small script which implements a very basic dummy
SMTP server. It only listens to email and dumps the contents on
the screen. I needed it for debugging mail functions at work, where
touching the server SMTP is not allowed/dangerous.  Maybe somebody
else finds it useful.

 http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From jml at ids.org.au  Thu Jun 19 15:33:58 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Fri, 20 Jun 2003 05:33:58 +1000
Subject: [Twisted-Python] New Guard question
Message-ID: <20030619193358.GA27711@mumak.net>


I've been trying to figure out the new guard and cred, with the goal of perhaps
switching Issues over to use guard rather than the custom auth it does now.

Looking at the webhappyrealm.py example in the sandbox, it's not very clear
what the returned resources represent.

Also, returning Resources seems a little weird. To me, a resource is whole
page, why would I want a whole page returned?

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030620/685402da/attachment.pgp 

From tv at twistedmatrix.com  Tue Jun 17 16:30:11 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 17 Jun 2003 23:30:11 +0300
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com> <20030617195416.GA6113@tao.tv.debian.net> <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <20030617203011.GA6696@tao.tv.debian.net>

On Tue, Jun 17, 2003 at 03:59:36PM -0400, Itamar Shtull-Trauring wrote:
> > 	Man. You need to let let *go* of that pipe. You've been
> > 	puffing a bit too much.
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

	It always makes sense when you're still on the trip :)

> > 	Sooo.. what does ActiveDirectory need to check a users
> > 	passphrase? If it's anywhere near what basic LDAP usage is,
> > 	I'm already your friend.
> You would be implementing a credential checker. You write a IIRC check()

	Thank you for not helping.

	What does *ActiveDirectory* need to check a users passphrase?

-- 
:(){ :|:&};:



From itamar at itamarst.org  Thu Jun 19 12:51:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 12:51:12 -0400
Subject: [Twisted-Python] Bad inconsistency with buildProtocol
In-Reply-To: <20030619001833.33439e01.pp64@cornell.edu>
References: <20030619001833.33439e01.pp64@cornell.edu>
Message-ID: <20030619125112.18098f89.itamar@itamarst.org>

On Thu, 19 Jun 2003 00:18:33 -0400
Pavel Pergamenshchik <pp64 at cornell.edu> wrote:

> It looks like buildProtocol gets passed inconsistent values for addr.
> In a program that connects to itself: pahan at dunce:~/Twisted$ python
> echo.py EchoServerFactory from ('127.0.0.1', 43044)
> EchoClientFactory to ('INET', 'localhost', 8000)
> 
> For incoming connections, addr gets passed straight from
> <socketobj>.accept, which is not in the proper format.

Shit. Suggestions for how to fix this? I'm thinking a class with
__getitem__ and __len__ for backwards compatability and attributes as
the correct way of getting stuff?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Thu Jun 19 14:18:16 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 14:18:16 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619071112.GA1518@ns.local>; from gradha@efaber.net on Thu, Jun 19, 2003 at 03:11:12 -0400
References: <20030619071112.GA1518@ns.local>
Message-ID: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>

On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> Hi.
> 
> I've written a small script which implements a very basic dummy
> SMTP server. It only listens to email and dumps the contents on
> the screen. I needed it for debugging mail functions at work, where
> touching the server SMTP is not allowed/dangerous.  Maybe somebody
> else finds it useful.
> 
>  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz


This would be great to have in doc/examples. Would you be willing to
consign copyright to glyph and contribute fake_SMTP_server.py?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Thu Jun 19 14:44:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2003 13:44:10 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617203011.GA6696@tao.tv.debian.net>
Message-ID: <03BC0B05-A286-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Tuesday, June 17, 2003, at 03:30 PM, Tommi Virtanen wrote:

> 	What does *ActiveDirectory* need to check a users passphrase?

Sorry, I don't really know anything about ActiveDirectory on a 
technical level. :-\

The reason I mentioned it is that certain large corporations use it for 
single-sign-on (SSO) across their entire intranet, that they consider 
this important, and that a problem with OSS adoption is that not enough 
OSS software can authenticate against it.

Well, really the problem is that not enough OSS software has pluggable 
authentication at _all_, but AD support is important because places 
which really want SSO have often deployed a Microsoft solution already.

This is all second- or third-hand information, so I'd appreciate some 
enlightenment too...




From radix at twistedmatrix.com  Thu Jun 19 14:18:16 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 14:18:16 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619071112.GA1518@ns.local>; from gradha@efaber.net on Thu, Jun 19, 2003 at 03:11:12 -0400
References: <20030619071112.GA1518@ns.local>
Message-ID: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>

On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> Hi.
> 
> I've written a small script which implements a very basic dummy
> SMTP server. It only listens to email and dumps the contents on
> the screen. I needed it for debugging mail functions at work, where
> touching the server SMTP is not allowed/dangerous.  Maybe somebody
> else finds it useful.
> 
>  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz


This would be great to have in doc/examples. Would you be willing to
consign copyright to glyph and contribute fake_SMTP_server.py?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Thu Jun 19 17:13:07 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 19 Jun 2003 23:13:07 +0200
Subject: [Twisted-Python] Simplifying database access in Twisted
Message-ID: <007901c336a7$96444240$0401a8c0@razor>

Just read thru http://www.twistedmatrix.com/documents/howto/enterprise and
tried to fit the code to my needs, but ... this seems way too complicated.
All I want is to execute a SQL-query and do something similar to fetchone or
fetchall etc. in the DB-API 2.0 spec. I don't want to be forced to write
classes and callbacks etc. just for a simple list of tuples or something
returned from a SQL-query.

Is there no other way to do simple database access in Twisted? Something
more like the DB-API 2.0? The docs says "This is straightforward ...". No,
it's not. The example a bit further up on the same page, now that's
straightforward. Perhaps it's just me not getting all the callbacks and
whatnot, but this seems too hard, too much code for such a simple task. All
I want is a database-object to feed sql-statements, which returns the
results as dictionaries or list of tuples, as close to DB-API 2.0 as
possible. Any hint or clue would be highly appreciated.

PS! I don't mean to step on anyones toes or anything, so forgive me if I'm a
bit harsh. But this might be the bitter end of my journey into the realms of
Twisted. Quick, fast and easy access to a database will make-or-break all of
my current projects, all of which are based on Twisted.

Thomas




From radix at twistedmatrix.com  Thu Jun 19 18:22:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 18:22:49 -0400
Subject: [Twisted-Python] 1.0.6alpha3
Message-ID: <20030619222249.GA13055@toshi.anaprd01.md.comcast.net>

1.0.6alpha3 is out there, and it's got new HTTP timeout code
activated, thanks to Jp Calderone. I've deployed it on pyramid,
and hopefully we won't be having any more downtime due to FD
"leakage".

1.0.6 final should be out by the end of the month.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Thu Jun 19 18:24:33 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 19 Jun 2003 18:24:33 -0400
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <CD65C4FA-A2A4-11D7-9259-000A95686CD8@redivi.com>

On Thursday, Jun 19, 2003, at 17:13 America/New_York, Thomas Weholt 
wrote:

> Just read thru http://www.twistedmatrix.com/documents/howto/enterprise 
> and
> tried to fit the code to my needs, but ... this seems way too 
> complicated.
> All I want is to execute a SQL-query and do something similar to 
> fetchone or
> fetchall etc. in the DB-API 2.0 spec. I don't want to be forced to 
> write
> classes and callbacks etc. just for a simple list of tuples or 
> something
> returned from a SQL-query.
>
> Is there no other way to do simple database access in Twisted? 
> Something
> more like the DB-API 2.0? The docs says "This is straightforward ...". 
> No,
> it's not. The example a bit further up on the same page, now that's
> straightforward. Perhaps it's just me not getting all the callbacks and
> whatnot, but this seems too hard, too much code for such a simple 
> task. All
> I want is a database-object to feed sql-statements, which returns the
> results as dictionaries or list of tuples, as close to DB-API 2.0 as
> possible. Any hint or clue would be highly appreciated.
>
> PS! I don't mean to step on anyones toes or anything, so forgive me if 
> I'm a
> bit harsh. But this might be the bitter end of my journey into the 
> realms of
> Twisted. Quick, fast and easy access to a database will make-or-break 
> all of
> my current projects, all of which are based on Twisted.

Here are some doc-examplets not using Augmentation.

from twisted.enterprise import adbapi

noop = lambda x:x
cp = adbapi.ConnectionPool('pyPgSQL.PgSQL', '::yourdatabase::')

deferred = cp.interaction(yourcallback, noop, *yourcallbackargs, 
**yourcallbackkwargs)
#	pass in a callback that receives a cursor as its first argument, 
DBAPI your little heart out.#
#	returns whatever you return in your callback.
#	note that 'yourcallback' does not run in the main reactor thread!  be 
careful not to try and call into it directly from here.

deferred = cp.operation(noop, noop, *executeargs, **executekwargs)
#	does cursor.execute(*executeargs, **executekwargs)
#	returns a deferred that calls back with None.  It fetches no data at 
all, useful for insert/update/stored procedure type stuff.

deferred = cp.query(noop, noop, *executeargs, **executekwargs)
#	does cursor.execute(*executeargs, **executekwargs)
#	returns a deferred that calls back with the fetchall()

noop is used to make these things act more like newer Twisted 
interfaces that were designed with Deferred in mind.

Presumably if all of your current projects are based on Twisted, you're 
comfortable enough with Deferred, so I won't go into that.

-bo




From exarkun at intarweb.us  Thu Jun 19 20:15:58 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 19 Jun 2003 20:15:58 -0400
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>
References: <20030616113403.460.68059.Mailman@pyramid.twistedmatrix.com> <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>
Message-ID: <20030620001558.GA3092@meson.dyndns.org>

On Thu, Jun 19, 2003 at 11:27:55AM +0530, Vijay Rao wrote:
> At 06:34 16/06/2003 -0500, you wrote:
> 
> >Message: 9
> >Date: Mon, 16 Jun 2003 10:03:52 +0300
> >From: Tommi Virtanen <tv at twistedmatrix.com>
> >To: twisted-python at twistedmatrix.com
> >Subject: Re: [Twisted-Python] Custom webserver
> >Reply-To: twisted-python at twistedmatrix.com
> >
> >On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> >> I am trying to use twisted as a webserver that serves files only for
> >> requests from the localhost ie the desktop on which it is running by
> >> mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on
> >> windows ) so that a particular type of URL is served from this webserver.
> >
> >        Easiest way is to make it bind to 127.0.0.1. There's currently
> >        no support in mktap web for this, though there really should
> >        be.
> >
> >--
> >:(){ :|:&};:
> 
> Thanks , any pointer as to how to achieve this binding.

  You can mktap --source or mktap --xml, then edit the resulting .tas or
.tax relatively easily.  The value to change will in tcpPorts and be '' or
"", representing "all interfaces".  Changing it to "127.0.0.1" will cause
the app to bind only to localhost when run.

  There certainly should be better support for this.

> Also for refusing any external request I tried this hack and it works :
> 
> (from protocols/http.py)
> 
>     def lineReceived(self, line):
>         if self.__first_line:
>             # if this connection is not persistent, drop any data which
>             # the client (illegally) sent after the last request.
> ......
> .....
> ......
>             if len(parts) != 3:
>                 self.transport.write("HTTP/1.1 400 Bad Request\r\n\r\n")
>                 self.transport.loseConnection()
>                 return
>             client = self.transport.getPeer()
>             host = self.transport.getHost()
>             if client[1] != '127.0.0.1' or host[1] != '127.0.0.1' :
>                 self.transport.write("HTTP/1.1 404 Forbidden\r\n\r\n")
>                 self.transport.loseConnection()
>                 return
> .......
> ....
> 
> Can this cause any other problem ( One thing I can see is that new channels 
> are created for each external request refused in this manner )
> And the requesting client browser is also not being able to display the 
> result sent.

  A better way would be to separate this accept/deny logic out into a
separate class, perhaps a Resource subclass.

  Both moshez and I have recently written code to support this.  Moshez's
version is by far the simpler of the two, and is available at
http://moshez.org/localonly.py.  My version uses a mini-language for
creating accept/deny rulesets, and is available in current Twisted CVS, in
sandbox/exarkun/rresource.py.

  Hope this helps,
 
  Jp

-- 
http://catandgirl.com/view.cgi?90
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030619/4cf9163e/attachment.pgp 

From itamar at itamarst.org  Thu Jun 19 20:58:11 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 20:58:11 -0400
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
References: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <20030619205811.6b1a0ae6.itamar@itamarst.org>

On Thu, 19 Jun 2003 23:13:07 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Just read thru http://www.twistedmatrix.com/documents/howto/enterprise
> and tried to fit the code to my needs, but ... this seems way too
> complicated. All I want is to execute a SQL-query and do something
> similar to fetchone or fetchall etc. in the DB-API 2.0 spec. I don't
> want to be forced to write classes and callbacks etc. just for a
> simple list of tuples or something returned from a SQL-query.

I updated the docs in CVS so they don't discuss Augmentation and instead
talk about the nice clean API that ConnectionPool exposes.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Thu Jun 19 21:07:28 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 11:07:28 +1000
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <20030619205811.6b1a0ae6.itamar@itamarst.org>
References: <007901c336a7$96444240$0401a8c0@razor> <20030619205811.6b1a0ae6.itamar@itamarst.org>
Message-ID: <20030620010727.GA12096@frobozz>

On Thu, Jun 19, 2003 at 08:58:11PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 19 Jun 2003 23:13:07 +0200
> "Thomas Weholt" <2002 at weholt.org> wrote:
> 
> > Just read thru http://www.twistedmatrix.com/documents/howto/enterprise
> > and tried to fit the code to my needs, but ... this seems way too
> > complicated. All I want is to execute a SQL-query and do something
> > similar to fetchone or fetchall etc. in the DB-API 2.0 spec. I don't
> > want to be forced to write classes and callbacks etc. just for a
> > simple list of tuples or something returned from a SQL-query.
> 
> I updated the docs in CVS so they don't discuss Augmentation and instead
> talk about the nice clean API that ConnectionPool exposes.

Does this mean that Augmentation should raise DeprecationWarnings?

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 19 21:09:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 11:09:39 +1000
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports
In-Reply-To: <9OJg9OFLM37+Ewv+@tactilis.co.uk>
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com> <20030609123300.GC29930@mercury.local.net> <9OJg9OFLM37+Ewv+@tactilis.co.uk>
Message-ID: <20030620010939.GB12096@frobozz>

On Tue, Jun 17, 2003 at 08:59:07PM +0100, Martin Armstrong wrote:
> In article <20030609123300.GC29930 at mercury.local.net>, W.J. 
> <miathan at goliath.darktech.org> writes
> 
> >IMO the best way is to just try to setuid/setgid if requested, if it is 
> >not allowed you'll get an EPERM soon enough anyway.
> 
> Wladimir is correct.
> 
> Here's a patch (already tested by Richard) that provides the correct 
> behaviour:

[snip replace "if not" tests with try/except]

This looks sensible to me.  Would anyone object if I checked it in?

-Andrew.




From glyph at twistedmatrix.com  Thu Jun 19 21:18:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2003 20:18:47 -0500
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>

On Thursday, June 19, 2003, at 04:13 PM, Thomas Weholt wrote:

> Is there no other way to do simple database access in Twisted? 
> Something
> more like the DB-API 2.0?

Feel free to just use DB-API modules directly, if that's appropriate.  
twisted.enterprise exists to facilitate non-blocking access; if your 
database queries are quick, you can block your server.  The API 
certainly is a bit grotty from disuse; a few cleanups and some better 
documentation would probably be better.

Speaking of being grotty - Bob's examples were correct, but there is a 
more natural API that you can use.  (The methods he suggested using 
pre-date Deferreds.)  Assuming you want to run a bunch of code which 
munges some data from a database, you can write something like this:

--

def myInteraction(t):
     t.execute('select * from my_numbers')
     # need some arbitrary code, so I'll sum these in memory rather than 
db
     sum = 0
     while True:
         row = t.fetchone()
         if not row:
             break
         num = row[0]
         sum += num
     return sum

def printx(x):
     print x

cp.runInteraction(myInteraction).addCallback(printx)

--

Assuming that your 'interaction' method doesn't touch any 
non-thread-safe state, this will work for pretty much any massaging you 
want to do to your data.  Since it's a Deferred, you can return it to 
various places in Twisted that can already manage waiting on deferreds 
for you, including woven.

runInteraction is probably the only method you really need, and it has 
the added benefit of allowing you to combine reads and writes in a 
single function, and rolling back any changes if there is a bug in your 
Python code.

> PS! I don't mean to step on anyones toes or anything, so forgive me if 
> I'm a
> bit harsh. But this might be the bitter end of my journey into the 
> realms of
> Twisted. Quick, fast and easy access to a database will make-or-break 
> all of
> my current projects, all of which are based on Twisted.

I can understand your frustration (twisted.enterprise is crap, 
especially the docs), but this is a bit much.

If you feel you're getting to this point with any bit of Twisted, 
remember that it's all just python code.  Twisted provides these 
components together in order to ease deployment and provide as complete 
an environment as possible, not to ram them down your throat.  There 
are many parts of Twisted which could use improvement, and we've 
attempted to do quite a few things that we are not expert at.

Certainly implementing your own database threadpool on top of 
reactor.callFromThread/callInThread or making database calls 
synchronously is easier than throwing out all of Twisted and starting 
over.




From stuart.hungerford at anu.edu.au  Thu Jun 19 22:18:07 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Fri, 20 Jun 2003 12:18:07 +1000
Subject: [Twisted-Python] Python 2.3 logging package and Twisted...
Message-ID: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>

Hi all,

As part of the Python 2.3 releases, the standard library now
includes a logging module.

In applications using Twisted.web is writing logs with this
new module the kind of operation that would need to be done in
a deferred?

I understand there's also twisted.python.log, but the issue
comes up for applications being moved to Twisted that already
use external logging libraries.



Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From andrew-twisted at puzzling.org  Thu Jun 19 22:37:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 12:37:22 +1000
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620023722.GC12096@frobozz>

On Thu, Jun 19, 2003 at 02:18:16PM -0400, Christopher Armstrong wrote:
> 
> On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> > Hi.
> > 
> > I've written a small script which implements a very basic dummy
> > SMTP server. It only listens to email and dumps the contents on
> > the screen. I needed it for debugging mail functions at work, where
> > touching the server SMTP is not allowed/dangerous.  Maybe somebody
> > else finds it useful.
> > 
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> 
> This would be great to have in doc/examples. Would you be willing to
> consign copyright to glyph and contribute fake_SMTP_server.py?

If you do, then I'll gladly spend a little bit of time to make it slightly
more idiomatic, i.e. use twisted.python.usage rather than getopt, and
probably make it work with twistd -y.

Actually, it may even be an idea to have both the "before" and "after" to
help demonstrate how easy it is to use twistd ;)

-Andrew.




From itamar at itamarst.org  Thu Jun 19 22:40:49 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 22:40:49 -0400
Subject: [Twisted-Python] Python 2.3 logging package and Twisted...
In-Reply-To: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>
References: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>
Message-ID: <20030619224049.261b1dde.itamar@itamarst.org>

On Fri, 20 Jun 2003 12:18:07 +1000
Stuart Hungerford <stuart.hungerford at anu.edu.au> wrote:

> In applications using Twisted.web is writing logs with this
> new module the kind of operation that would need to be done in
> a deferred?

Uh. It can't be *blocking*. Writing to a log file is fine. Writing to a
socket would block, so don't do that. Using a Deferred doesn't magically
make it not block.

> I understand there's also twisted.python.log, but the issue
> comes up for applications being moved to Twisted that already
> use external logging libraries.

You can use it, sure, or whatever library you want, as long as they
don't block. In fact you can hook up logging to t.p.log too if you want
(log.addObserver with a little glue function.)


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From gradha at efaber.net  Fri Jun 20 03:21:53 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Fri, 20 Jun 2003 09:21:53 +0200
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620023722.GC12096@frobozz> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620072153.GA7564@ns.local>

On 2003-06-19, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> 
> This would be great to have in doc/examples. Would you be willing to
> consign copyright to glyph and contribute fake_SMTP_server.py?

Never done such a thing. Does it hurt? Or involve greedy lawyers? As
far as I'm concerned, you can have this same version as public
domain to do what you want with it, my employer is not SCO. In fact,
after stripping the user interface you have a 20 lines server class,
and looks like Andrew would like to rewrite them anyway...

On 2003-06-20, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> If you do, then I'll gladly spend a little bit of time to make
> it slightly more idiomatic, i.e. use twisted.python.usage rather
> than getopt, and probably make it work with twistd -y.
> 
> Actually, it may even be an idea to have both the "before" and
> "after" to help demonstrate how easy it is to use twistd ;)

That would be very nice, even though it was my first time and
felt quite easy to write. I guess packaging took more time than
development. If you want to know, long distance improvements I had
planned for this are making the server autonomous, with clients
being able to connect to it through telnet to read the mail activity.

And after that, just for the sake of it, implement a little web
server to have a nice user interface ala hotmail, where sent mails
would be logged and available for x time. Now emails are forgotten
as soon as they come, and its difficult to read them when you send
many at once.

But since it does now the important feature (help debugging mails),
I'm unlikely to continue improving it, and least in work time.

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From radix at twistedmatrix.com  Fri Jun 20 03:34:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 20 Jun 2003 03:34:49 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620072153.GA7564@ns.local>; from gradha@efaber.net on Fri, Jun 20, 2003 at 03:21:53 -0400
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620072153.GA7564@ns.local>
Message-ID: <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>

On 2003.06.20 03:21, Grzegorz Adam Hankiewicz wrote:
> On 2003-06-19, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> > 
> > This would be great to have in doc/examples. Would you be willing to
> > consign copyright to glyph and contribute fake_SMTP_server.py?
> 
> Never done such a thing. Does it hurt? Or involve greedy lawyers? As
> far as I'm concerned, you can have this same version as public
> domain to do what you want with it, my employer is not SCO. In fact,
> after stripping the user interface you have a 20 lines server class,
> and looks like Andrew would like to rewrite them anyway...

Not at all. All you have to do is give some indication on this mailing
list or elsewhere that you _won't_ sue glyph if he says the code is 
Copyright (C) him. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From gradha at efaber.net  Fri Jun 20 03:43:55 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Fri, 20 Jun 2003 09:43:55 +0200
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620072153.GA7564@ns.local> <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620074355.GA7804@ns.local>

On 2003-06-20, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
>
> This would be great to have in doc/examples. Would you be willing
> to consign copyright to glyph and contribute fake_SMTP_server.py?

I give indication on this mailing list that I won't sue glyph if
he says the code contained in the package above is Copyright (C)
him. :-)

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From erik at letterror.com  Fri Jun 20 09:26:20 2003
From: erik at letterror.com (Erik van Blokland)
Date: Fri, 20 Jun 2003 15:26:20 +0200
Subject: [Twisted-Python] IP address, server
Message-ID: <r01050400-1026-C89A35BCA32211D7B312000A956A726C@[10.0.0.21]>

Hello,

a humble question for a nudge in the right direction. I'm
utterly new to twisted, but I have a lot of experience in
python. I'm trying to get a tiny working demo to play with
and learn. I've installed twisted 1.0.5 on a Mac G3 running
10.2.6 OSX. Python 2.3b1. runtests seems to work.

The tiny http server script works when I take a browser on
the same machine as the server and look at
http://127.0.0.1:801, I get the expected result, so the
server is alive. When I take a look from a different machine
using the local IP address of the server http://10.0.0.5:801
I get no response. Other services over my network to the
server work fine. Do I need to do more, listen to a specific
port, tell the server the IP address? Is this supposed to
work and the problem lies elsewhere, OS perhaps (would be
good to know too)

This is my test script:

from twisted.web import resource
from twisted.web import server
from twisted.internet import reactor

HTTP_PORT = 801

class MyServer(resource.Resource):
    isLeaf = True
    def render(self, httprequest):
        hdr = httprequest.getAllHeaders()
        html = '<html><body>Have a nice day
%d</body></html>'
        httprequest.write(html)

        httprequest.setHeader('Content-Length', len(html))
        httprequest.setHeader('Content-Type', 'html/plain')
        httprequest.setResponseCode(200)

        httprequest.finish()
        
aserver = MyServer()
site = server.Site(aserver)
reactor.listenTCP(HTTP_PORT, site)
reactor.run()



Any pointers would be appreciated. Sorry if this is a dumb
question..

Thanks,
Erik van Blokland



From cce at clarkevans.com  Fri Jun 20 14:22:05 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 20 Jun 2003 18:22:05 +0000
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>
References: <007901c336a7$96444240$0401a8c0@razor> <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>
Message-ID: <20030620182205.GA44012@doublegemini.com>

Thomas,

  If you have *big* result sets which you have to 
  process incrementally, then you may want to look
  at flow.py in the sandbox.    It has a QueryIterator
  that I use, essentially it executes the query in
  a separate thread, and you can use generators to 
  write your data processing code.

  When I get time, I intend to hook in postgresql's
  async query library so that threads are not required.

Best,

Clark



From missive at hotmail.com  Fri Jun 20 14:27:49 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 20 Jun 2003 18:27:49 +0000
Subject: [Twisted-Python] PATCH: doc/historic/index.html  reality link
Message-ID: <BAY2-F108DgC81TbdkS00002f4a@hotmail.com>

>cvs diff -u index.html
Index: index.html
===================================================================
RCS file: /cvs/Twisted/doc/historic/index.html,v
retrieving revision 1.4
diff -u -r1.4 index.html
--- index.html  22 Apr 2003 03:51:26 -0000      1.4
+++ index.html  20 Jun 2003 18:25:03 -0000
@@ -100,7 +100,7 @@
     we use, and explain how we built tools on top of them which help us 
make
     releasing as painless as possible.</p></dd>

-    <dt><a href="2003/twisted-reality/twisted-reality.html"><cite>Twisted 
Reality: A Flexible Framework for Virtual Worlds</cite></a></dt>
+    <dt><a 
href="2003/pycon/twisted-reality/twisted-reality.html"><cite>Twisted 
Reality: A Flexible Framework for Virtual Worlds</cite></a></dt>

     <dd><p>Flexibly modelling virtual worlds in object-oriented languages 
has
       historically been difficult; the issues arising from multiple

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From corydodt at yahoo.com  Fri Jun 20 17:06:11 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 20 Jun 2003 14:06:11 -0700
Subject: [Twisted-Python] Fair warning: case-insensitive attributes
Message-ID: <3EF37743.9070004@yahoo.com>

Since this could be both a very useful and a very harmful change, I'm 
posting a set of fairly short diffs to tm.com:
   http://twistedmatrix.com/users/moonfallen/diffs.txt
If anyone thinks this patch will slow things down (possible) or break 
stuff (unlikely; current tests pass), I want to know that.

Of course there are new tests to go with it:
   http://twistedmatrix.com/users/moonfallen/test_diffs.txt

In particular, Woven appears to be unaffected.  If I don't get any 
significant backlash over the weekend, this goes in.  This makes the 
following code possible:

 >>> d=microdom.parseString('<script LANGUAGE="JScript"></script>')
 >>> d.documentElement.setAttribute('language', 'javascript')
 >>> d.toxml()
'<?xml version="1.0"?><script language="javascript"></script>'

(Note that caseInsensitive=1 and preserveCase=0 are the defaults, and 
always have been.  They just affect attribute names now, as well as 
element names.)





From itamar at itamarst.org  Fri Jun 20 17:11:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 20 Jun 2003 17:11:51 -0400
Subject: [Twisted-Python] Fair warning: case-insensitive attributes
In-Reply-To: <3EF37743.9070004@yahoo.com>
References: <3EF37743.9070004@yahoo.com>
Message-ID: <20030620171151.5fef5269.itamar@itamarst.org>

On Fri, 20 Jun 2003 14:06:11 -0700
Cory Dodt <corydodt at yahoo.com> wrote:

> (Note that caseInsensitive=1 and preserveCase=0 are the defaults, and 
> always have been.  They just affect attribute names now, as well as 
> element names.)

And I assume in microdom.parseXML and friends it won't be case
insensitive?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Sat Jun 21 02:05:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jun 2003 01:05:47 -0500
Subject: [Twisted-Python] New Guard question
In-Reply-To: <20030619193358.GA27711@mumak.net>
Message-ID: <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>

On Thursday, June 19, 2003, at 02:33 PM, jml at ids.org.au wrote:

> I've been trying to figure out the new guard and cred, with the goal 
> of perhaps
> switching Issues over to use guard rather than the custom auth it does 
> now.

Hooray!  (Subtext - everyone should do this and give feedback)

> Looking at the webhappyrealm.py example in the sandbox, it's not very 
> clear
> what the returned resources represent.

Ah yes.  This is due to my peculiar ... idiom, when dealing with web 
login.

> Also, returning Resources seems a little weird. To me, a resource is 
> whole
> page, why would I want a whole page returned?

You're going to have to remember that I still think of Twisted as a big 
multiplayer game, and all this HTTP stuff is just kind of a grotty way 
to display room descriptions.  If you haven't already done so, please 
check your assumptions about web development at the door.  It's cool, I 
can wait.

Okay then.

So, the idea here is that with any login to an interactive system, you 
have a session.  You log in, you interact with the system for a while, 
and then you log out.  Conceptually, there is an object on a "client" 
that connects to an object on a "server".  [New] Cred's model for 
representing this interaction is the connection between the 
AvatarAspect and the Mind (see previous email for definitions of the 
contentious verbiage), which is established when 
IRealm.requestAvatar(...) is called, and ends when the 'logout' method 
returned from that call is called.

The AvatarAspect that is returned is expected to conform to an 
interface (in this case, IResource) that has some meaning to the 
protocol it's going to be talking to.  In the simplest case, for 
example, some cred junk that merely password protects a directory 
structure, this resource can be the same for all users.

However, when the application that you're interacting with is actually 
an *application*, and you're trying to mimic a "real" client program 
with the browser, you want to provide custom logic for each user who 
logs in.

Now to answer the question you actually asked: the Resource that 
woven.guard is requesting from your Realm is supposed to represent the 
UI to present to a particular user of your application.  In theory, 
you've got some domain data (perhaps an IssuesPerson) which represents 
the user (their Persona) - you can wrap a Resource around this and then 
provide web-specific functionality to communicate with your domain 
objects; hooray, it is object-oriented programming for the web.

Then, this Resource is not only a "whole page", but an encapsulation of 
the user's entire experience of the web component of your system.  
Typically you will provide a customized top-level facade that has a 
small amount of dynamic content and then references to shared objects, 
such as static data on the filesystem or dynamic objects which are 
calculated on each view but are the same for all users.

That was how to do things right.  Now I will explain why you should not 
do them wrong.

You may be wondering, "but what about the session!? I can keep this 
data on a session object, can't I?"  The answer is "yes, but why would 
you?"  Even given the fact that Session is componentized and may 
provide custom, separated functionality, this is a protocol detail that 
leads to unpleasant code.  Consider, if you want to use woven.guard's 
nifty session-negotiation feature, but also keep your user-specific 
code in a session, your code will look like this:

     # WHAT FOLLOWS IS AN EXAMPLE OF A MISTAKEN ASSUMPTION THAT IS 
COMMON DUE TO
     # HOW AWFUL THE WEB IS.  PLEASE DO NOT WRITE NEW-CRED WEB 
APPLICATIONS THIS
     # WAY.

     from twisted.web.resource import Resource
     from twisted.cred.badidea import ICredSession

     class MySingletonResource(Resource):
         data = 'hello %s, do you like sunshine?'
         def __init__(self, realm):
             Resource.__init__(self)
             self.realm = realm

         def render(self, request):
             # negotiate session
             s = request.getSession()
             if s is None:
                 return request.setupSession()

             # return data
             request.setHeader('content-type', 'text/plain')
             c = s.getComponent(ICredSession)
             if c is None:
                 return 'it looks like you are anonymous please log in!'
             else:
                 avatar = c.getLoggedInForRealm(self.realm)
                 return self.data % avatar.username

Now, isn't that ugly?  Granted, the guard-style session negotiation 
makes it slightly more perverse, but regardless, there will be 
boilerplate in every render() and getChild() for every resource you 
have in order to identify the appropriate user, plus code for 
Anonymous, unless you make your resources depend upon a specifc 
execution context to work.

If this seems normal to you, or not particularly unpleasant, have a 
look at some sample code for the suggested approach:

     # THIS, ON THE OTHER HAND, IS NOT SO BAD.
     from twisted.web.resource import Resource

     class MyResource(Resource):
         data = 'hello %s, do you like sunshine?'

         def __init__(self, avatar):
             Resource.__init__(self)
             self.avatar = avatar

         def render(self, request):
             request.setHeader('content-type', 'text/plain')
             return self.data % self.avatar.username

     class MyAnonymousResource(Resource):

         def render(self, request):
             return 'it looks like you are anonymous please log in!'

I mentioned games at the start of the email.  This sort of approach is 
important in a game system because you want to perform on-the-fly 
updates of the user's interface without necessarily altering the state 
of their avatar object.  Giving every user's connection its own 
resource is much more flexible.  Even in this small example, we've 
exposed some small customizability by accident: the realm could 
maintain an active pool of MyResource instances and set self.data = 
'Sorry %s, *** YOU HAVE DIED ***' on one of them; the next time the 
user loads their page, they will see a different message.  There is 
nowhere to put this in MySingletonResource.

(Of course, the right way to do this is with a Mind object for HTTP, 
but the browser will be unable to do any real updating unless it is 
taking Donovan's psychoactive LivePage javascript.  That particular 
potent mix is unfortunately not yet suitable for beginners, but newcred 
should be soon.  Think of woven.guard as a 'gateway drug' to LivePage's 
full flexibility.)

Please feel free to ask more questions, as I'd like to provide a 
resource for doc-writers here on the list :)




From smurf at smurf.noris.de  Sat Jun 21 07:21:30 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 21 Jun 2003 13:21:30 +0200
Subject: [Twisted-Python] Allow static.Data to be at the root
References: <pan.2003.05.13.08.25.34.929793@smurf.noris.de> <20030513104748.14913.qmail@green.zadka.com>
Message-ID: <pan.2003.06.21.11.21.27.607014@smurf.noris.de>

Hi, Moshe Zadka wrote:

> On Tue, 13 May 2003, "Matthias Urlichs" <smurf at smurf.noris.de> wrote:
> 
>> Here's a small patch to allow a twisted.web.static.Data element at the
>> root of your web space.
> 
> This detracts functionality, not enhances it.
> If you really want it, it's better to have a 
> 
> root = resource.Resource()
> root.putChild('', static.Data('text/plain', 'hello world'))

... but it's OK to do essentially the same thing to t.w.static.File?

  CVS: 2003-06-20 07:09:12
  Make static.File used as a root resource work as expected when serving a file.

IMHO: Please do either both, or neither.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
The State of California has no business subsidizing intellectual curiosity.
					-- Ronald Reagan




From andrew-twisted at puzzling.org  Sat Jun 21 11:18:51 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 22 Jun 2003 01:18:51 +1000
Subject: [Twisted-Python] Allow static.Data to be at the root
In-Reply-To: <pan.2003.06.21.11.21.27.607014@smurf.noris.de>
References: <pan.2003.05.13.08.25.34.929793@smurf.noris.de> <20030513104748.14913.qmail@green.zadka.com> <pan.2003.06.21.11.21.27.607014@smurf.noris.de>
Message-ID: <20030621151851.GD15578@frobozz>

On Sat, Jun 21, 2003 at 01:21:30PM +0200, Matthias Urlichs wrote:
> Hi, Moshe Zadka wrote:
> 
> > On Tue, 13 May 2003, "Matthias Urlichs" <smurf at smurf.noris.de> wrote:
> > 
> >> Here's a small patch to allow a twisted.web.static.Data element at the
> >> root of your web space.
> > 
> > This detracts functionality, not enhances it.
> > If you really want it, it's better to have a 
> > 
> > root = resource.Resource()
> > root.putChild('', static.Data('text/plain', 'hello world'))
> 
> ... but it's OK to do essentially the same thing to t.w.static.File?
> 
>   CVS: 2003-06-20 07:09:12
>   Make static.File used as a root resource work as expected when serving a file.
> 
> IMHO: Please do either both, or neither.

I agree; I made this change to static.File because it worked fine as a root
resource when serving a directory, but not when serving a single file[1],
which seemed inconsistent to me.  As Matthias points out, static.Data should
be consistent with static.File (which of course should be consistent with
itself!).

If someone more familiar with Twisted Web wants to undo that change because
I've misunderstood the way things are meant to work, I won't mind.  In that
case, though, I'd like to see static.File used as root resource to serve a
directory fail, or at least raise a deprecation warning.  I volunteer to
update the using-twistedweb howto to mention this restriction if this is the
way we go.

-Andrew.

[1] Yes, I realise a web server that only serves a single file isn't very
    interesting.  This happened when a colleague at work tried to demostrate
    Twisted Web to another colleague; this behaviour was surprised them (and
    me, although I'm hardly a Twisted Web expert).  A use-case does spring
    to mind, though: a "Sorry, the site is temporarily unavailable due to
    planned maintenance" message that lives on-disk for easy editing -- when
    the maintenance is done, the root resource could be replaced with the
    real site again without restarting the server...




From exarkun at intarweb.us  Sat Jun 21 15:19:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 21 Jun 2003 15:19:54 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] explanation of () for anonymity
In-Reply-To: <E19Rrfo-0007Q8-00@pyramid.twistedmatrix.com>
References: <E19Rrfo-0007Q8-00@pyramid.twistedmatrix.com>
Message-ID: <20030621191954.GA8154@meson.dyndns.org>

On Mon, Jun 16, 2003 at 05:57:16AM -0500, glyph CVS wrote:
> Modified files:
> Twisted/twisted/cred/checkers.py 1.2 1.3
> 
> Log message:
> explanation of () for anonymity
> 

  Might an instance of object be a better value for ANONYMOUS?

  It should be even harder to use this by accident (though I admit I don't
see any way to accidentally enter an empty tuple).

  Jp

-- 
#!/bin/bash
( LIST=(~/.sigs/*.sig)
  cat ${LIST[$(($RANDOM % ${#LIST[*]}))]}
  echo -- $'\n' `uptime | sed -e 's/.*m//'` ) > ~/.signature
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030621/df7b4467/attachment.pgp 

From glyph at twistedmatrix.com  Sat Jun 21 19:10:35 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jun 2003 18:10:35 -0500
Subject: Fwd: [Twisted-Python] New Guard question
Message-ID: <9079C2D3-A43D-11D7-B52C-000393C9700E@twistedmatrix.com>

Begin forwarded message:

> From: adalke at mindspring.com

> Hi Glyph,
>
>   I'm travelling right now, and can't send from the account I use
> to send mail to Twisted, so I'm sending this via personal email.
> Feel free to CC to Twisted as needed.

Your wish is my command.

> You gave two examples, a badidea one and a sketch of a new
> one.  I think you are presenting a straw-man badidea.

They were demonstrations of a coding style which I have actually seen 
several examples of.  I think you're actually agreeing with me, because 
I can't find anything in this message that indicates otherwise.

Let me be clear on the distinction between these styles: what I am 
saying is *good* is keeping the avatar in the resource (which the 
new-cred enabled UsernamePasswordWrapper pretty much requires).

This is good because resources are lightweight and it establishes a 
good encapsulation barrier.  Rather than having a Resource which 
depends on state in the session, or a non-Resource which does 
resource-like things and accept different arguments.  You have a 
resource that can _always_ render itself as long as it is internally 
consistent.

What I am saying is *bad* is retrieving the avatar from the session 
every time in your own application code.  Now, obviously the code-path 
to retrieve the avatar object does have to interact with your session, 
because HTTP sucks, but this is tricky and you should wrap it if you 
can.  Guard does it for you, and I think it does a good job, but if it 
doesn't you should probably contribute fixes or suggestions for how it 
could be better, and not write your own session-masher.

> Were I to write such code, it would look like
>
> import weakref
> request_info = WeakRef.WeakKeyDictionary()
>
> class MyGuardResource(Resource):
>   def __init__(self, guarded_resource, realm):
>     Resource.__init__(self)
>     self.realm = realm
>     self.guarded_resource = guarded_resource
>
>   def getChild(self, name):
>     # Fix as needed if getChild is supposed to return None for no 
> named child
>     return MyGuardResource(self.realm, 
> self.guarded_resource.getChild(name))
>
>   def render(self, request):
>     # negotiate session
>     s = request.getSession()
>     if s is None:
>       return request.setupSession()
>
>     # Logged in?
>     c = s.getComponent(ICredSession)
>     if c is None:
>       request.setHeader('content-type', 'text/plain')
>       return 'it looks like you are anonymous please log in!'
>     avatar = c.getLoggedInForRealm(self.realm)
>     # Either use a weakref like this
>     request_info[request] = {"avatar": avatar}
>     return self.guarded_resource.render(request)
>     # or change the call API for request, like
>     # return self.guarded_resource.render(request, avatar)

In this example, self.guarded_resource would not be a Resource, but 
some special GuardedResource subclass which produced output for an 
avatar rather than a request.

> Neither the weakref nor the tweaked parameters are
> particularly satisfying.  I could make it nicer by assuming I
> can call the Resource constructor, as you seem to allow.

But then, what would you call the Resource constructor with?  Perhaps 
the avatar? :).

> It's hard to compare to your "not so bad" example because
> you don't show how your two resources are added to the
> system.  As written, you don't allow either one to have dynamic
> children, so that being the case, the following would be a
> simpler replacement for your "badidea" code

The "bad idea" resource is a resource that is statically added on the 
"web" side of things by a putChild or a .rpy or somesuch, and thus can 
only know what realm it is being added for, and must be added in 
parallel with the guard object.

The "not so bad" resource is meant to be instantiated by a Realm.  Most 
likely, adaption to the appropriate interface using the components 
system will be automated by some common Realm base class when we add 
one, but for now it's up to you to figure out to return a Resource.  In 
this case, only the UsernamePasswordWrapper has to know about the 
Portal, and the realm can create an appropriate Resource without 
knowing anything else about the structure of other web code.

Actually the "bad idea" resource can't do dynamic children without 
doing boilerplate, whereas the "not so bad" resource may implement 
getChild in a naive way and it will work properly.

> class MySimpleGuardResource(Resource):
>   def __init__(self, realm, authorized, not_authorized):
>     Resource.__init__(self):
>     self.realm = realm
>      .. same for the other two parameter...
>   def render(self, request):
>     # negotiate session
>      ... getSession() .. if is None ... setupSession
>     c = s.getComponent(ICredSession)
>     if c is None:
>       return self.not_authorized().render(session)
>     return self.authorized(c).render(session)
>
> in which case I can identically use your not-so-bad
> classes.

Well, yes, that is the whole point of guard.

> So you say:
>> Consider, if you want to use woven.guard's nifty session-negotiation
>> feature, but also keep your user-specific code in a session, your code
>> will look like this:

Let me clarify:

If you want to use woven.guard's nifty session-negotiation feature, but 
also implement service-specific functionality in the resource and 
retrieve it from the session yourself rather than just creating an 
intelligent stateful resource, your code will look like this:


> but I don't see why the latter follows from the former, given that with
> a simple adapter it appears to allow your code.

... which is what Guard is doing.  The point is that I am encouraging 
users to use this adapter and have the Realm create an appropriate 
resource by calling its constructor, rather than attempting to have a 
resource initialized dumb and then re-customize itself on each call to 
render().

If you still really think this is a straw-man example of bad style, 
then I applaud your optimism, but it's seriously a very common mistake 
:-).  After all, most web frameworks have the notion of rendering a 
page as pretty basic, and then things that are "dynamic" are 
implemented with do-I-have-a-logged-in-user conditionals, not object 
references.

> Mind you, I'm still trying to understand how to do authentication in 
> Twisted, either cred or mind style.  I know how to do it myself, so 
> that's my starting point.

"cred or mind style"?  There are only two styles, one of which is 
old-cred (Service/Perspective/Authorizer), which is awful and horrible 
and don't use it please unless you have to interact with code that 
hasn't been ported from it yet, and new-cred 
(Realm/Avatar/CredentialsChecker), which will be available in 1.0.6, 
and all this discussion is about.

> Regarding names, IMHO, "Guard" is a better name than "Portal",
> and you could use "UsernamePasswordGuard", etc. rather than
> "...Wrapper".

Hmm.  'Guard' is a different thing from 'Portal', but I think that 
you're right about UsernamePasswordGuard rather than 
UsernamePasswordWrapper.




From pp64 at cornell.edu  Sun Jun 22 00:17:50 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 22 Jun 2003 00:17:50 -0400
Subject: [Twisted-Python] Weirdness in flow
Message-ID: <20030622001750.7bcab15d.pp64@cornell.edu>

Hi.
I couldn't catch cce in IRC for  while, so here goes:
flow._Deferred does not handle errors properly. I cannot find the place where flow._Deferred.errback is called, and it doesn't work anyway.
I put a short program that demonstrates the behavior on http://dunce.mine.nu:8080/flow_simplefailure_test.py
No matter what I do, I cannot get "got from getPage yield" to get printed or errback to get triggered.

Paul



From pp64 at cornell.edu  Sun Jun 22 01:53:56 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 22 Jun 2003 01:53:56 -0400
Subject: [Twisted-Python] flow again
Message-ID: <20030622015356.0d16ac59.pp64@cornell.edu>

The fix is trivial and it seems to give the expected behavior. Diff is at http://dunce.mine.nu:8080/flow.diff



From smurf at smurf.noris.de  Sun Jun 22 11:14:24 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sun, 22 Jun 2003 17:14:24 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
Message-ID: <200306221714.24485@smurf.noris.de>

Since "suck" doesn't work for me for a variety of reasons, I decided to 
replace it with a solution based on twisted.protocol.nntp. After a few hours 
of hacking, I now have a nice program which nicely saturates my downlink 
bandwidth. ;-)

To make a long story short, the attached patch implements the changes and 
fixes I needed to actually get there.

The "Allow the article text to be a callable or deferred" change implements 
the common situation where I ask server B whether it would like to be fed 
article X before actually pulling that article from server A, and/or where 
the pull is still in progress.

There is one somewhat- incompatible change here, in that I return the GROUP 
results (article count, high and low numbers) as integers, not as text. In 
practice they're going to be int()ized anyway, so this should not be a 
problem.

# twisted/protocols/nntp.py
#     Fixes for news gateways / 'suck'-style operation / INN as server:
#     - The client uses \n and does NOT esacpe start-of-line dots.
#       The server uses \r\n and escapes dots ONCE, not twice (ouch).
#     - POST temporarily blocks streaming. Make sure this is observed,
#       pass a Deferred out for clients to restart themselves with
#     - Add a command to allow MODE READER
#     - Allow bare reply numbers without text
#     - Allow the article text to be a callable or a deferred
#     - use CHECK/TAKETHIS if there's a message ID
#     - return group article numbers (GROUP reply) as numbers
#     - Clean up article linefeed handling
# twisted/test/test_nntp.py
#     Make sure that dot escapes are passed cleanly.
#     Make sure that no empty lines are added at the end.
#     Use the unittest object for checking.
#     Use client-side line endings for the client,
#       assume that the server side is transparent.
#     Make sure that the test doesn't just peter out halfway through.
#     Remove the commented-out iterate() calls.
#       loopback() already does the work for us.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Standards are different for all things, so the standard set by man is by
no means the only 'certain' standard.  If you mistake what is relative for
something certain, you have strayed far from the ultimate truth.
		-- Chuang Tzu
-------------- next part --------------
A non-text attachment was scrubbed...
Name: nntp.patch
Type: text/x-diff
Size: 18384 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030622/8449162b/attachment.patch 

From lordvan at lordvan.com  Sun Jun 22 11:58:44 2003
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 22 Jun 2003 17:58:44 +0200 (CEST)
Subject: [Twisted-Python] Twisted.web and adbapi example?
In-Reply-To: <FF816FA079A11949BE655A693DC02D104D96E3@exchange2.loyaltyworks.com>
References: <FF816FA079A11949BE655A693DC02D104D96E3@exchange2.loyaltyworks.com>
Message-ID: <54364.62.218.218.165.1056297524.squirrel@mail-at.net>

sorry really forgot about that .. here it comes ;)

regards
P.S.: how the db looks like is left as an exercise to the user grin

<quote who="Morrow, Paul">
> I've been pouring through the docs and examples, but can't find an
> example of a .rpy that generates a page containing the results of a
> database query.  How would such a thing be properly architected?
> Clearly the adbapi would be involved, but then how do I get the query
> results into the string returned by my resource?  Or would I use a
> deferred instead?
>
> Would someone please share a little code snippet (or point me at
> one)illustrating how that would best be accomplished?
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbtest.py
Type: application/octet-stream
Size: 988 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030622/02f911e7/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbtest.xhtml
Type: application/xhtml+xml
Size: 317 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030622/02f911e7/attachment.xhtml 

From tv at twistedmatrix.com  Sun Jun 22 12:12:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 22 Jun 2003 19:12:32 +0300
Subject: [Twisted-Python] twisted.web.client and status 202
Message-ID: <20030622161232.GA23227@tao.tv.debian.net>

	Hi. In making TouRSSt (http://toursst.sf.net/,
	soon in a Debian mirror near you), I noticed
	Slashdot's RSS feed gives status code 202.

http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

10.2.3 202 Accepted

The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.

The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent's connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request's current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.

	Current twisted.web.client believes this to be an
	error, and aborts fetching the RSS. Liiwi finally
	prodded me into doing something about it. Here's
	a change he suggested and I agree with:

--- twisted/web/client.py	20 Jun 2003 17:14:16 -0000	1.19
+++ twisted/web/client.py	22 Jun 2003 16:01:20 -0000
@@ -59,6 +59,8 @@
     def handleStatus_200(self):
         self.factory.gotHeaders(self.headers)
 
+    handleStatus_202 = handleStatus_200
+
     def handleStatusDefault(self):
         self.failed = 1
 

	Yell now or forever clean up the CVS tree I commit
	that into :)

-- 
:(){ :|:&};:



From jml at ids.org.au  Mon Jun 23 13:02:00 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Tue, 24 Jun 2003 03:02:00 +1000
Subject: [Twisted-Python] New Guard question
In-Reply-To: <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <20030619193358.GA27711@mumak.net> <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <20030623170200.GB2124@mumak.net>

On Sat, Jun 21, 2003 at 01:05:47AM -0500, Glyph Lefkowitz wrote:
> On Thursday, June 19, 2003, at 02:33 PM, jml at ids.org.au wrote:
> > What does the returned Resource represent?
>
> [confuso-ray generating padding]
> The whole UI for that user.
> Send more questions.

I assume this is a correct summary.

So, I guess this means that for a web application with that allows anonymous
users to do and see many things on many pages, there'll be many Portal and
Realm instances? Or is this where the mysterious mind comes into play?

Also, your badidea example didn't really help me. Firstly, I don't use weird
guard sessions, I just use normal sessions. Secondly, much of the if/then
logic is wrapped in Views that provide patterns to the templates. Example:

<div view="authProtected">
  <span pattern="anonymous"><a href="login">Login</a></span>
  <span pattern="loggedIn"><a href="logout">Logout</a> 
    (<a view="personLink"/>)</span>
</div>

It's hard to see how to do this with guard.

This email is probably premature, as I'm still fiddling around with some
trivial examples trying to get stuff to work. (Examples using Page.wchild_*
and getDynamicChild methods, rather than resource.putChild)

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030624/92c6cc17/attachment.pgp 

From exarkun at intarweb.us  Mon Jun 23 02:11:35 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 02:11:35 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <200306221714.24485@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de>
Message-ID: <20030623061135.GA12797@meson.dyndns.org>

On Sun, Jun 22, 2003 at 05:14:24PM +0200, Matthias Urlichs wrote:
> Since "suck" doesn't work for me for a variety of reasons, I decided to 
> replace it with a solution based on twisted.protocol.nntp. After a few hours 
> of hacking, I now have a nice program which nicely saturates my downlink 
> bandwidth. ;-)
> 

  Cool!

> To make a long story short, the attached patch implements the changes and 
> fixes I needed to actually get there.
> 
> The "Allow the article text to be a callable or deferred" change implements 
> the common situation where I ask server B whether it would like to be fed 
> article X before actually pulling that article from server A, and/or where 
> the pull is still in progress.
> 

  Hmm, this is the only part of the patch I am unsure about.  The API seems
a little too tuned to your use-case.  I think the way to go for this would
be to have a Producer passed in and make the NNTP protocol a Consumer
for that (in turn acting as a Producer for its transport object).  Would you
be willing to make this change? (If you need an example of how this might
work, check out smtp.py)

> There is one somewhat- incompatible change here, in that I return the GROUP 
> results (article count, high and low numbers) as integers, not as text. In 
> practice they're going to be int()ized anyway, so this should not be a 
> problem.

  I think this is fine.

> 
> # twisted/protocols/nntp.py
> #     Fixes for news gateways / 'suck'-style operation / INN as server:
> #     - The client uses \n and does NOT esacpe start-of-line dots.
> #       The server uses \r\n and escapes dots ONCE, not twice (ouch).
> #     - POST temporarily blocks streaming. Make sure this is observed,
> #       pass a Deferred out for clients to restart themselves with
> #     - Add a command to allow MODE READER
> #     - Allow bare reply numbers without text
> #     - Allow the article text to be a callable or a deferred
> #     - use CHECK/TAKETHIS if there's a message ID
> #     - return group article numbers (GROUP reply) as numbers
> #     - Clean up article linefeed handling
> # twisted/test/test_nntp.py
> #     Make sure that dot escapes are passed cleanly.
> #     Make sure that no empty lines are added at the end.
> #     Use the unittest object for checking.
> #     Use client-side line endings for the client,
> #       assume that the server side is transparent.
> #     Make sure that the test doesn't just peter out halfway through.
> #     Remove the commented-out iterate() calls.
> #       loopback() already does the work for us.

  Thanks for these test fixes/cleanups, too.

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030623/55af174a/attachment.pgp 

From glyph at twistedmatrix.com  Mon Jun 23 04:20:17 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2003 03:20:17 -0500
Subject: [Twisted-Python] New Guard question
In-Reply-To: <20030623170200.GB2124@mumak.net>
Message-ID: <85F23C61-A553-11D7-B52C-000393C9700E@twistedmatrix.com>

On Monday, June 23, 2003, at 12:02 PM, Jonathan Lange wrote:

> So, I guess this means that for a web application with that allows 
> anonymous
> users to do and see many things on many pages, there'll be many Portal 
> and
> Realm instances? Or is this where the mysterious mind comes into play?

Assuming you mean a single application, there will be one Portal to 
access the site, one Realm to dish out resources, and then each 
resource will return a tree.  But, of course, "application" is a funny 
word; if you are making a site that integrates lots of different 
pre-existing components there may be multiple Realms, arranged in some 
sort of hierarchy with rules for how and when one dispatches to 
another.  (For example, the top-level Realm, attached to the Portal, 
may specify that a certain child URL maps to another Realm's IResource 
children, and that the user is preauthenticated ... this will probably 
need some infrastructure work.)

> Also, your badidea example didn't really help me. Firstly, I don't use 
> weird
> guard sessions, I just use normal sessions.

"normal" sessions are kinda broken; you should probably update your 
code to use guarded sessions.  In fact, I sure would like to deprecate 
the old session code (for reasons related to browser eccentricities 
that are out of scope for this discussion) but I will probably never be 
able to because it's so widely used at this point.

> Secondly, much of the if/then logic is wrapped in Views that provide 
> patterns to the templates. Example:
>
> <div view="authProtected">
>   <span pattern="anonymous"><a href="login">Login</a></span>
>   <span pattern="loggedIn"><a href="logout">Logout</a>
>     (<a view="personLink"/>)</span>
> </div>
>
> It's hard to see how to do this with guard.

Your Realm will return a View which wraps a Model.  The anonymous model 
is different from the logged-in one, but the top-level Views will 
likely be of the same class.  You might want to write a generic 
'switch' view that looks something like this:

<div view="switch" attribute="hasUser">
   <span case="1"><a href="logout">Logout</a></span>
   <span case="0"><a href="login">Login</a></span>
</div>

If this is not obvious - the idea is that you specify a submodel (or 
perhaps some other interface which the View can talk to) "hasUser".  
The 'anonymous' model will say "0" and the logged-in-user model will 
say "1".  This kind of functionality is also useful to specify 
'template adapters' in your template code, to specify different display 
styles in-line in a list for different model classes.

I've done this in ad-hoc ways once or twice; I should probably check in 
a "real" version to woven at some point.

> This email is probably premature, as I'm still fiddling around with 
> some
> trivial examples trying to get stuff to work. (Examples using 
> Page.wchild_*
> and getDynamicChild methods, rather than resource.putChild)

Nevertheless, I don't have the time to write coherent documentation for 
this stuff right now, so hopefully these emails are generating fodder 
for someone who can :).




From lafou at wanadoo.fr  Mon Jun 23 05:01:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 11:01:27 +0200
Subject: [Twisted-Python] WOVEN Question
Message-ID: <1056358887.2276.55.camel@biproc>

Hi all

I have a question : I want to create a business platform using Woven.
Like Zope (ZPT), I saw woven is separating logic/presentation (and
control, yes, woven is based on MVC). But In zope, I can define some
macros that could expand when I want. I mean, if I have a site like this

+--------------------+
|  Menu1 menu2 ----- |
|                    |
|                    |
| some text          |
|                    |
+--------------------+

and want an "include" of the menu in several pages. Should I use a new
view ? It would be weird since I would have some large pieces of HTML in
python code.


Any suggestion ?



-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From smurf at smurf.noris.de  Mon Jun 23 06:51:40 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 23 Jun 2003 12:51:40 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org>
Message-ID: <pan.2003.06.23.10.51.38.783891@smurf.noris.de>

Hi, Jp Calderone wrote:

> Hmm, this is the only part of the patch I am unsure about.  The API
> seems a little too tuned to your use-case.  I think the way to go for
> this would be to have a Producer passed in and make the NNTP protocol a
> Consumer for that (in turn acting as a Producer for its transport
> object).  Would you be willing to make this change? (If you need an
> example of how this might work, check out smtp.py)

Hmm. Looking at the SMTP case, it needs refactoring in that the producer
isn't decoupled from the file object it ends up reading, thus I can't plug
a different kind of producer in there.

Looking further, there's a slightly-broken data-from-file producer in
doc/historic/2003/pycon/twisted-internet/twisted-internet.py ...

Anyway, I need NNTP to be a streaming protocol. With a Deferred, this is
easy -- each Deferred gets a callback which writes TAKETHIS plus the
message to the server (and queues the result code recognition), so these
can complete in any order, which is very nice. A producer interface would
instead have an arbitrary number of producers, all of which are active,
but as soon as the first one returns anything I have to temporarily
deactivate all the others. That sounds dangerous -- what if a producer
can't be paused? Then I need to buffer their data, too, which is no
different from the current case where the article data also end up in
memory.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Man: I know how to please a woman.
Woman: Then please leave me alone.




From tv at twistedmatrix.com  Mon Jun 23 03:01:18 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 23 Jun 2003 10:01:18 +0300
Subject: [Twisted-Python] FYI: .tap name clash
Message-ID: <20030623070118.GA18634@lapdog>

	FYI, there's another project using the filename extension ".tap".

	http://wav-prg.sourceforge.net/

-- 
:(){ :|:&};:



From itamar at itamarst.org  Mon Jun 23 11:30:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 11:30:14 -0400
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056358887.2276.55.camel@biproc>
References: <1056358887.2276.55.camel@biproc>
Message-ID: <20030623113014.492f0f59.itamar@itamarst.org>

On 23 Jun 2003 11:01:27 +0200
Philippe Lafoucri?re <lafou at wanadoo.fr> wrote:

> I have a question : I want to create a business platform using Woven.
> Like Zope (ZPT), I saw woven is separating logic/presentation (and
> control, yes, woven is based on MVC). But In zope, I can define some
> macros that could expand when I want. I mean, if I have a site like
> this

Woven has macros that are essentially identical to ZPT METAL macros -
see twisted.web.widgets.ExpandMacro.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From lafou at wanadoo.fr  Mon Jun 23 11:43:14 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 17:43:14 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030623113014.492f0f59.itamar@itamarst.org>
References: <1056358887.2276.55.camel@biproc>
	 <20030623113014.492f0f59.itamar@itamarst.org>
Message-ID: <1056382994.2276.101.camel@biproc>

> Woven has macros that are essentially identical to ZPT METAL macros -
> see twisted.web.widgets.ExpandMacro.

found at: twisted.web.woven.widgets.ExpandMacro
but thanks a lot, I'll take a look at it !




From mesozoic at polynode.com  Mon Jun 23 11:50:47 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 23 Jun 2003 11:50:47 -0400
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056358887.2276.55.camel@biproc>
References: <1056358887.2276.55.camel@biproc>
Message-ID: <20030623155047.GA8824@polynode.com>

On Mon, Jun 23, 2003 at 11:01:27AM +0200, Philippe Lafoucri?re wrote:
-- snip --
> macros that could expand when I want
-- snip --

I was making the same complaint in #twisted a couple weeks ago, and was
pointed to a wonderful piece of code: woven.widgets.ExpandMacro.  Check it
out; I've included a brief example below.

I have a macro file:

-- template.xhtml --

<html>
<head macro="head">
  <link rel="stylesheet" href="style.css"/>
  <title slot="title">Fill me</title>
</head>
<body macro="body">
  <h1>My site</h1>
  <div>Nav bar goes here</div>
  <div slot="content">Content</div>
</body>
</html>

-- end --

...and then my Page does something like this:

-- mypage.py --

class MyPage(page.Page):

  template = """
  <html>
  <head view="headMacro">
    <title fill-slot="title">My title</title>
  </head>
  <body view="bodyMacro">
    <div fill-slot="content">Whatever</div>
  </body>
  </html>"""
  
  def wvfactory_headMacro(self, request, node, m):
    return widgets.ExpandMacro(m,
                               macroFileDirectory = '/path/to/templates',
                               macroFile = 'template.xhtml',
                               macroName = 'head')

  def wvfactory_bodyMacro(self, request, node, m):
    return widgets.ExpandMacro(m,
                               macroFileDirectory = '/path/to/templates',
                               macroFile = 'template.xhtml',
                               macroName = 'body')

-- end --

I really like this functionality, and I think it should be pointed out in
the documentation.  Dunno if that's already done for 1.0.6 docs, but the
above code works with Twisted 1.0.5.

Hope this helps.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From lafou at wanadoo.fr  Mon Jun 23 11:59:11 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 17:59:11 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030623155047.GA8824@polynode.com>
References: <1056358887.2276.55.camel@biproc>
	 <20030623155047.GA8824@polynode.com>
Message-ID: <1056383951.2282.105.camel@biproc>

On Mon, 2003-06-23 at 17:50, Alex Levy wrote:
> On Mon, Jun 23, 2003 at 11:01:27AM +0200, Philippe Lafoucri?re wrote:
> -- snip --
> > macros that could expand when I want
> -- snip --
> 
> I was making the same complaint in #twisted a couple weeks ago, and was
> pointed to a wonderful piece of code: woven.widgets.ExpandMacro.  Check it
> out; I've included a brief example below.
> 
> I have a macro file:
> 
> -- template.xhtml --
> 
> <html>
> <head macro="head">
>   <link rel="stylesheet" href="style.css"/>
>   <title slot="title">Fill me</title>
> </head>
> <body macro="body">
>   <h1>My site</h1>
>   <div>Nav bar goes here</div>
>   <div slot="content">Content</div>
> </body>
> </html>
> 
> -- end --
> 
> ...and then my Page does something like this:
> 
> -- mypage.py --
> 
> class MyPage(page.Page):
> 
>   template = """
>   <html>
>   <head view="headMacro">
>     <title fill-slot="title">My title</title>
>   </head>
>   <body view="bodyMacro">
>     <div fill-slot="content">Whatever</div>
>   </body>
>   </html>"""
>   
>   def wvfactory_headMacro(self, request, node, m):
>     return widgets.ExpandMacro(m,
>                                macroFileDirectory = '/path/to/templates',
>                                macroFile = 'template.xhtml',
>                                macroName = 'head')
> 
>   def wvfactory_bodyMacro(self, request, node, m):
>     return widgets.ExpandMacro(m,
>                                macroFileDirectory = '/path/to/templates',
>                                macroFile = 'template.xhtml',
>                                macroName = 'body')
> 
> -- end --
> 
> I really like this functionality, and I think it should be pointed out in
> the documentation.  Dunno if that's already done for 1.0.6 docs, but the
> above code works with Twisted 1.0.5.
> 
> Hope this helps.


A LOT :)
It's similar to what Itamar pointed in the API doc.

Hope most of the woven Magic will be explained in 1.0.6 doc !
I definitly want to try it now ...

BTW, thank you all

Philippe




From mesozoic at polynode.com  Mon Jun 23 12:13:15 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 23 Jun 2003 12:13:15 -0400
Subject: [Twisted-Python] Minor addition to woven.widgets.ExpandMacro
Message-ID: <20030623161315.GA9664@polynode.com>

The following diff does two things which are fairly unrelated.

One change allows woven.widgets.ExpandMacro to receive a 'macroTemplate'
argument instead of requiring a macro's template to reside in a file
somewhere.  I find this Very Useful(tm).

The other is a typo/glitch that I pointed out to Glyph a while back and he
hasn't fixed yet.  <nudge/><nudge/>  ;)


Index: twisted/web/woven/widgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/widgets.py,v
retrieving revision 1.91
diff -u -r1.91 widgets.py
--- twisted/web/woven/widgets.py	23 Jun 2003 07:38:48 -0000	1.91
+++ twisted/web/woven/widgets.py	23 Jun 2003 16:03:48 -0000
@@ -933,17 +933,23 @@
             <h3><span slot="greeting" />, <span slot="greetee" />!</h3>
         </div>
     """
-    def __init__(self, model, macroFile="", macroFileDirectory="", macroName="", **kwargs):
+    def __init__(self, model, macroTemplate="", macroFile="", macroFileDirectory="", macroName="", **kwargs):
+        self.macroTemplate = macroTemplate
         self.macroFile=macroFile
         self.macroFileDirectory=macroFileDirectory
         self.macroName=macroName
         Widget.__init__(self, model, **kwargs)
 
     def generate(self, request, node):
-        templ = view.View(
-            self.model,
-            templateFile=self.macroFile, 
-            templateDirectory=self.macroFileDirectory).lookupTemplate(request)
+        if self.macroTemplate:
+            templ = view.View(
+                self.model,
+                template = self.macroTemplate).lookupTemplate(request)
+        else:
+            templ = view.View(
+                self.model,
+                templateFile=self.macroFile, 
+                templateDirectory=self.macroFileDirectory).lookupTemplate(request)
 
         ## We are going to return the macro node from the metatemplate,
         ## after replacing any slot= nodes in it with fill-slot= nodes from `node'
Index: twisted/world/structfile.py
===================================================================
RCS file: /cvs/Twisted/twisted/world/structfile.py,v
retrieving revision 1.5
diff -u -r1.5 structfile.py
--- twisted/world/structfile.py	8 Jun 2003 11:27:39 -0000	1.5
+++ twisted/world/structfile.py	23 Jun 2003 16:03:48 -0000
@@ -195,7 +195,7 @@
         for row in self:
             f.write('<tr><td>')
             f.write('</td><td>'.join([str(x) for x in row]))
-            f.write('</tr>')
+            f.write('</td></tr>')
         f.write("</table>")
 
     def close(self):



-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_




From exarkun at intarweb.us  Mon Jun 23 12:16:47 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 12:16:47 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <pan.2003.06.23.10.51.38.783891@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org> <pan.2003.06.23.10.51.38.783891@smurf.noris.de>
Message-ID: <20030623161647.GA14057@meson.dyndns.org>

On Mon, Jun 23, 2003 at 12:51:40PM +0200, Matthias Urlichs wrote:
> Hi, Jp Calderone wrote:
> 
> > Hmm, this is the only part of the patch I am unsure about.  The API
> > seems a little too tuned to your use-case.  I think the way to go for
> > this would be to have a Producer passed in and make the NNTP protocol a
> > Consumer for that (in turn acting as a Producer for its transport
> > object).  Would you be willing to make this change? (If you need an
> > example of how this might work, check out smtp.py)
> 
> Hmm. Looking at the SMTP case, it needs refactoring in that the producer
> isn't decoupled from the file object it ends up reading, thus I can't plug
> a different kind of producer in there.

  Yea, it isn't perfect.

> 
> Looking further, there's a slightly-broken data-from-file producer in
> doc/historic/2003/pycon/twisted-internet/twisted-internet.py ...
> 
> Anyway, I need NNTP to be a streaming protocol. With a Deferred, this is
> easy -- each Deferred gets a callback which writes TAKETHIS plus the
> message to the server (and queues the result code recognition), so these
> can complete in any order, which is very nice.

  They can complete in any order because the code responsible for the
Deferred's callback must buffer the message in memory.

> A producer interface would instead have an arbitrary number of producers,
> all of which are active, but as soon as the first one returns anything I
> have to temporarily deactivate all the others. That sounds dangerous --
> what if a producer can't be paused? Then I need to buffer their data, too,
> which is no different from the current case where the article data also
> end up in memory.

  At the very least, the object that is currently a string should become a
file object (This should have minimal impact on your code -- if buffering in
memory is acceptable to you, you only have to build a StringIO object from
your string), and the NNTP protocol class should consume it in a manner
similar to that of smtp.py.  It -does- seem that this is becoming a common
task (smtp.py and pop3.py do it, imap4.py needs to do, and now nntp.py), so
maybe I'll write a utility mixin to help out, and I'll see if I can
generalize it away from just file-like objects too.

  This gives clients at least the opportunity to avoid loading entire
messages into memory, which is what I am looking for.  Am I right in
thinking this leaves you with all the functionality you want?

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030623/749b3f5b/attachment.pgp 

From grib at billgribble.com  Mon Jun 23 15:20:02 2003
From: grib at billgribble.com (Bill Gribble)
Date: 23 Jun 2003 14:20:02 -0500
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030618183220.55d93249.itamar@itamarst.org>
References: <005b01c335e4$256de300$0401a8c0@razor>
	 <20030618183220.55d93249.itamar@itamarst.org>
Message-ID: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>

On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> Twisted is not PHP, you can have objects persist in memory without *any
> work*. You'd be better off never using RPYs at all, in the vast majority
> of cases.

You guys need to get your story straight.  radix and moshez both told me
unequivocally on IRC that as a twisted.web beginner I should
*definitely* be using RPYs, in fact that all twisted.web development
should be done using RPY until the app was ready to be packaged and
deployed. 

>   site = server.Site(Simple())
>   reactor.listenTCP(8080, site)
>   reactor.run()

... and moshez barfed up a kidney when I said I was doing listenTCP
manually, saying that listenTCP was about to be deprecated with extreme
prejudice and should be avoided.  No real reason given other than "it's
a bad idea". 

b.g.

 





From exarkun at intarweb.us  Mon Jun 23 16:31:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 16:31:52 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623203152.GA17592@meson.dyndns.org>

On Mon, Jun 23, 2003 at 02:20:02PM -0500, Bill Gribble wrote:
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea". 

  listenTCP (and friends) will be around until 2.0, at least.  They may not
be the -preferred- approach long before then, but they will at least be
available (as a rather central part of a core, stable API, taking them away
would be like hacking off both of Twisted's legs at the knee).

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030623/529d5ff9/attachment.pgp 

From itamar at itamarst.org  Mon Jun 23 16:33:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 16:33:51 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
References: <005b01c335e4$256de300$0401a8c0@razor>
	<20030618183220.55d93249.itamar@itamarst.org>
	<1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623163351.606914be.itamar@itamarst.org>

On 23 Jun 2003 14:20:02 -0500
Bill Gribble <grib at billgribble.com> wrote:

> You guys need to get your story straight.  radix and moshez both told
> me unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed. 

This works great if you understand twisted.web well and know that web
applications aren't *pages*. Once you understand that you will typically
develop using a single RPY for your whole application, which has some
nice benefits for debugging.

If you think you should have multiple RPYs plonked in folders as a way
of developing your application, you are most likely doing something
wrong and should avoid using RPYs altogether.

As is usually the case, if you *do* know what you're doing it may be the
right thing, so an expert twisted user may recommend doing something
else depending on what your application is.

> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with
> extreme prejudice and should be avoided.  No real reason given other
> than "it's a bad idea". 

app.listenTCP is going to be deprecated, not reactor.listenTCP. And yes,
app.listenTCP is a bad idea.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From 2002 at weholt.org  Mon Jun 23 16:39:06 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 23 Jun 2003 22:39:06 +0200
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <004201c339c7$7f5c33d0$0401a8c0@razor>

I have the same experience. Making RPYs and running them using twistd has
been hyped as the right and *only* way to correctly develop web-apps in
Twisted. My current solutions is subclassing Resource and listenTCP etc. and
the thing works great.

Hopefully this is just misunderstandings and the documentation will be
updated to show us the perfect way to Twisted-enlightenment ;-)

Anyway, twisted is cool.

Thomas


----- Original Message -----
From: "Bill Gribble" <grib at billgribble.com>
To: <twisted-python at twistedmatrix.com>
Sent: Monday, June 23, 2003 9:20 PM
Subject: Re: [Twisted-Python] To twisted.web beginners: don't use RPYs


> On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> > Twisted is not PHP, you can have objects persist in memory without *any
> > work*. You'd be better off never using RPYs at all, in the vast majority
> > of cases.
>
> You guys need to get your story straight.  radix and moshez both told me
> unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed.
>
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
>
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea".
>
> b.g.
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From abe at fettig.net  Mon Jun 23 16:58:44 2003
From: abe at fettig.net (Abe Fettig)
Date: 23 Jun 2003 16:58:44 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030623163351.606914be.itamar@itamarst.org>
References: <005b01c335e4$256de300$0401a8c0@razor>
	 <20030618183220.55d93249.itamar@itamarst.org>
	 <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
	 <20030623163351.606914be.itamar@itamarst.org>
Message-ID: <1056401924.1912.5.camel@mingus>

On Mon, 2003-06-23 at 16:33, Itamar Shtull-Trauring wrote:

> app.listenTCP is going to be deprecated, not reactor.listenTCP. And yes,
> app.listenTCP is a bad idea.

Well, then, in the spirit of Twisted Best Practices, what is the
preferred way to listen on a port within the context of an application?

Abe




From smurf at smurf.noris.de  Mon Jun 23 17:07:18 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 23 Jun 2003 23:07:18 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org> <pan.2003.06.23.10.51.38.783891@smurf.noris.de> <20030623161647.GA14057@meson.dyndns.org>
Message-ID: <pan.2003.06.23.21.07.18.104943@smurf.noris.de>

Hi, Jp Calderone wrote:

>  They can complete in any order because the code responsible for the
> Deferred's callback must buffer the message in memory.
> 
Nope. Converting the code to assemble the articles in file-like objects,
or whatever, instead, wouldn't make much of a difference to my current
code -- they would still be able to complete in any order.  Part of the
niceness of streaming CHECK and TAKETHIS messages to an NNTP server is
that there is no ordering required; you can't do that with SMTP.

On the other hand, thinking about this I just had an idea how to manage
the transition from a bunch of parallel Deferreds to a serialized
producer/consumer scheme (addCallback() a code snipped which enqueues the
Deferred onto a queue, and take it from there one-by-one). It's still
going to start out as a Deferred, though; "a producer which needs to do
something special when it first delivers data and which might trigger an
error instead" is complicated code which lumps at least three concepts
into one piece of code, while using a Deferred in the first step leads to
nicely separated stages with distinct code -- always a win in my book.

> At the very least, the object that is currently a string should become a
> file object (This should have minimal impact on your code -- if
> buffering in memory is acceptable to you, you only have to build a
> StringIO object from your string)

That would be no problem. Whether the Deferred returns an in-memory string
or a file object doesn't make a whole lot of difference, esp. as a simple
'if not hasattr(f,"read"): f = StringIO.StringIO(f)' is sufficient for
turning one into the other.

> It -does- seem that this is becoming a common task (smtp.py and pop3.py
> do it, imap4.py needs to do, and now nntp.py), so maybe I'll write a
> utility mixin to help out, and I'll see if I can generalize it away from
> just file-like objects too.

That would be nice to have. I'd write it as an adapter or similar, i.e. a
class which turns an LF-based dots-ignorant possibly-without-final-LF
producer into one which has CRLFs, dot-escapes, and a guaranteed CRLF at
the end. That way it'd be useable for things which aren't a streaming
protocol. Direct back-end access to the NNTP storage comes to mind;
it stores articles in the latter format.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
There will always be some delightful mysteries in your life.




From radix at twistedmatrix.com  Mon Jun 23 18:29:29 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 18:29:29 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>; from grib@billgribble.com on Mon, Jun 23, 2003 at 15:20:02 -0400
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>

On 2003.06.23 15:20, Bill Gribble wrote:
> On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> > Twisted is not PHP, you can have objects persist in memory without *any
> > work*. You'd be better off never using RPYs at all, in the vast majority
> > of cases.
> 
> You guys need to get your story straight.  radix and moshez both told me
> unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed. 

Well, it's like sex education. Itamar wants to go with the religious
"Tell them not to do it", I want to go with "explain to them the proper
way to do it". :-)

Lots of people are using rpys in a horrible manner; the problem is that
they're not being viewed as a deployment mechanism, but rather as the actual
"scripting" mechanism -- that rpy is Twisted's way to do web applications.

The truth is that Woven is (usually) Twisted's way to do web applications, and
rpy is Twisted's way to do deployment of web applications, be them Woven
or just plain Resource subclasses.

Thus, rpys should have as little code as possible in them -- on the order of 10
lines or less (maybe more if you decide to put very simple configuration 
in them, which I have been known to do; but you should probably standardize on
a ~/.config or somesuch eventually). They should import your resource subclass
from somewhere, instantiate it (or use an already-cached one), and assign it to
the `resource' variable.

I apologise for the inconsistency.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From warner at lothar.com  Mon Jun 23 18:36:31 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2003 15:36:31 -0700 (PDT)
Subject: [Twisted-Python] PATCH: doc/historic/index.html  reality link
References: <BAY2-F108DgC81TbdkS00002f4a@hotmail.com>
Message-ID: <20030623.153631.01456115.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> >cvs diff -u index.html

Committed to CVS.

thanks!
 -Brian



From radix at twistedmatrix.com  Mon Jun 23 18:44:29 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 18:44:29 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>; from grib@billgribble.com on Mon, Jun 23, 2003 at 15:20:02 -0400
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623224429.GA5396@toshi.anaprd01.md.comcast.net>

On 2003.06.23 15:20, Bill Gribble wrote:
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea".

The reason was that .rpy *is* the stardard way to deploy twisted.web 
applications, and if you want to be friendly to other twisted.web users,
you should give an .rpy so it's easy for them to install your software
on their existing web server.

And listenTCP is not about to be deprecated with extreme prejudice -- I 
don't remember talking about that, although there have been ideas to
replace it in the long run. As exarkun said, it won't be depracated until
2.0, because it's already a stabilized interface.

( I've noticed that when people see some musings on future development
  in Twisted, they start freaking out about what the current standard
  practice is and have a panic attack. DISCLAIMER: The following 
  paragraph is full of musings about future directions of Twisted;
  it's not implemented, and nothing is changing about standard practice
  now.

moshez also has other interesting ideas for deployment on twisted.web
servers. We may come up with a scheme that allows you to easily run your
web applications in a separate process, listening on a unix domain 
socket, and then using a standard parameterized .rpy to connect to the
domain socket and serve the app from the main server. The point, of 
course, would be to have process separation so you don't have to worry
about bugs in the app bringing down your server (if they're that rude).
Stay tuned for more.
)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Mon Jun 23 18:43:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 18:43:16 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056401924.1912.5.camel@mingus>
References: <005b01c335e4$256de300$0401a8c0@razor>
	<20030618183220.55d93249.itamar@itamarst.org>
	<1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
	<20030623163351.606914be.itamar@itamarst.org>
	<1056401924.1912.5.camel@mingus>
Message-ID: <20030623184316.2e6d1723.itamar@itamarst.org>

On 23 Jun 2003 16:58:44 -0400
Abe Fettig <abe at fettig.net> wrote:

> On Mon, 2003-06-23 at 16:33, Itamar Shtull-Trauring wrote:
> 
> > app.listenTCP is going to be deprecated, not reactor.listenTCP. And
> > yes, app.listenTCP is a bad idea.
> 
> Well, then, in the spirit of Twisted Best Practices, what is the
> preferred way to listen on a port within the context of an
> application?

At the moment, there isn't really. So using it is fine. There will be a
better, cleaner, easier to understand solution once someone gets around
to implementing it. See moshez's TCPListenerService in the mailing list
archive for a sketch of how that's going to look.

Meanwhile, feel free to use app.listenTCP, it's always going to keep on
working.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jun 23 19:01:20 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2003 16:01:20 -0700 (PDT)
Subject: [Twisted-Python] IP address, server
References: <r01050400-1026-C89A35BCA32211D7B312000A956A726C@[10.0.0.21]>
Message-ID: <20030623.160120.65736666.warner@lothar.com>

Erik van Blokland <erik at letterror.com> writes:

> The tiny http server script works when I take a browser on
> the same machine as the server and look at
> http://127.0.0.1:801, I get the expected result, so the
> server is alive. When I take a look from a different machine
> using the local IP address of the server http://10.0.0.5:801
> I get no response. Other services over my network to the
> server work fine. Do I need to do more, listen to a specific
> port, tell the server the IP address? Is this supposed to
> work and the problem lies elsewhere, OS perhaps (would be
> good to know too)

Very strange. There's nothing in your code that should treat requests coming
from the local host any differently than requests coming in over the
network. My suspicion is that there's some kind of packet filter in place
that is dropping inbound connections to low-numbered ports.

You say other services on that same machine work fine, so it doesn't sound
like a network problem, or a filter that rejects *all* incoming connection
requests. Try having your Twisted server listen on a port like 9999 and see
what happens. Port 801 falls into the "privileged" range, so on many systems
you must be root to bind to it.. maybe OS-X does something special with
these kinds of ports.

I ran your script (on an older box, with python 2.2.0), and didn't see the
behavior you describe. (I did have to run it as root, and of course with
2.2.0 I had to turn True into 1). I do see a few other problems, though.
render() is supposed to either return a string with the HTML (or whatever)
to be sent to the client, *or* return NOT_DONE_YET and do .write/.finish .
Your code does .write, .finish, and then returns None, which isn't quite the
same (it calls .finish twice). I think it's ok to call .finish before you
return NOT_DONE_YET. I would write the code one of these two ways:

    def render(self, httprequest):
        hdr = httprequest.getAllHeaders()
        html = '<html><body>Have a nice day</body></html>'
        httprequest.write(html)
        httprequest.setHeader('Content-Length', len(html))
        httprequest.setHeader('Content-Type', 'html/plain')
        httprequest.setResponseCode(200)
        return server.NOT_DONE_YET

or:

    def render(self, httprequest):
        return '<html><body>Have a nice day</body></html>'

Note also that you're "html" variable has a %d that isn't currently being
used in a % format operation, so it will wind up as a literal % in the data
sent to the client.

You might want to add the following to the beginning of your code to see the
double-.finish warning and other log messages:

 from twisted.python import log
 import sys
 log.startLogging(sys.stdout)


Hope that gives you some new directions to try out..

cheers,
 -Brian



From iko at cd.chalmers.se  Mon Jun 23 19:38:32 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 24 Jun 2003 01:38:32 +0200
Subject: [Twisted-Python] Hacking imap
Message-ID: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>

Hi,

Just wanted to give a heads-up that I intend feed you guys a patch for
the imap server to properly handle literals in all places they need to
be handled towards the end of this week.

Unfortunately, it's quite a large change since it requires a complete
restructuring of how arguments are parsed. Basically, instead of
having each command parse it's own arguments, the idea is to list
what arguments each command expects, and have the command dispatcher
parse the arguments and possibly request continuation for literals.

I expect to have more patches coming, as I need this for the project
we're working on. It'd be nice if we could coordinate the work, so
we don't end up with incompatible fixes and improvements, and try to
avoid duplicate work.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From andrew-twisted at puzzling.org  Mon Jun 23 21:11:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 11:11:41 +1000
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com> <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>
Message-ID: <20030624011141.GA7668@frobozz>

On Mon, Jun 23, 2003 at 06:29:29PM -0400, Christopher Armstrong wrote:
> 
> Thus, rpys should have as little code as possible in them -- on the order of 10
> lines or less (maybe more if you decide to put very simple configuration 

This reminds me of the MSDN recommending that ASP scripts should never be
more than 100 lines, because they're just glue for your COM objects.  A
previous employer of mine knew that, and still had ~100000 lines of ASP
anyway, including a charting system in about ~20000 lines.  I understand
that this is not uncommon :)

People *will* misuse software -- particularly if the documention isn't
excellent...

-Andrew.




From andrew-twisted at puzzling.org  Mon Jun 23 21:19:10 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 11:19:10 +1000
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056383951.2282.105.camel@biproc>
References: <1056358887.2276.55.camel@biproc> <20030623155047.GA8824@polynode.com> <1056383951.2282.105.camel@biproc>
Message-ID: <20030624011910.GB7668@frobozz>

On Mon, Jun 23, 2003 at 05:59:11PM +0200, Philippe Lafoucri?re wrote:
> 
> Hope most of the woven Magic will be explained in 1.0.6 doc !
> I definitly want to try it now ...

I'm pretty sure the Woven docs haven't been touched significantly since
1.0.5 (except for some minor reformatting?) -- thanks to the persistence of
Andrew Dalke, you can find the current build of the howtos from CVS here:

    http://twistedmatrix.com/users/warner/doc-latest/

If you find expandMacro, or anything else, isn't covered... documentation
patches would be very gratefully accepted! :)

-Andrew.




From screwtape at froup.com  Mon Jun 23 21:31:53 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 11:31:53 +1000
Subject: [Twisted-Python] Twisted and NT Services
Message-ID: <20030624013153.GA11491@ferd2.thristian.org>

At $FIRM, a good number of processes around the place are Python
scripts using Twisted. Since they're functionally equivalent to Unix
daemons, what's the best way of turning a Twisted script into a
service?

Also, I've gotten into the habit of using py2exe to turn scripts into
standalone Win32 programs, and it would be really nice to be able to
ship a standalone NT service. Unfortunately, there seems to be a "pick
any two" relationship between Twisted, NT Services, and py2exe - when
I try and combine all three, I get the following traceback inside my
Application.run() call:

      File "twisted\internet\app.pyc", line 861, in run
    
    --- <exception caught here> ---
      File "twisted\python\log.pyc", line 64, in callWithLogger
    
      File "twisted\python\log.pyc", line 51, in callWithContext
    
      File "twisted\python\context.pyc", line 32, in callWithContext
    
      File "twisted\internet\default.pyc", line 122, in run
    
      File "twisted\internet\default.pyc", line 116, in startRunning
    
      File "twisted\internet\default.pyc", line 88, in _handleSignals
    
    exceptions.ValueError: signal only works in main thread

If, in the Python source which contains the Service subclass, I put
(at the top):

	from twisted.internet import win32eventreactor
	win32eventreactor.install()

...and then make it into a service, I get the same error
(Entertainingly, if I put it *not* at the top, when I run the
resulting exe I get the entertaining dialog box "Could not get Script
info").

As you might have gathered, I'm not using .taps for these services -
although I suspect they'd meet the 'don't reveal our source code to
random people' requirement, I suspect they wouldn't help with the
issue of installing Python and half a dozen extension modules on every
server.

Anyone have any hints or suggestions?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Nice sensible hobbits stay with Sm?agol.
|



From itamar at itamarst.org  Mon Jun 23 22:09:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 22:09:47 -0400
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624013153.GA11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org>
Message-ID: <20030623220947.43b9f941.itamar@itamarst.org>

On Tue, 24 Jun 2003 11:31:53 +1000
screwtape at froup.com wrote:

> At $FIRM, a good number of processes around the place are Python
> scripts using Twisted. Since they're functionally equivalent to Unix
> daemons, what's the best way of turning a Twisted script into a
> service?

Well, ideally we'd want some equivalent of twistd that runs an NT
service, so you could write a python script that's runnable with "twistd
-y" or a TAP or whatever and do that. And then presumably you would
write the equivalent of tap2deb (tap2msi, probably) so you could easily
install and uninstall them.

No one's ever written one, though, for lack of motivation. If you'd
write this and submit it I'd love to have this in Twisted, which along
with a decent win32 reactor would give us really good win32 support. Or
you could pay someone to do it.

Or, and this is what everyone else has done, write a few mini-scripts
that run your NT services and that's it. See list archives for code that
will start a NT service.  This is of course the fastest route.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Mon Jun 23 22:46:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 22:46:21 -0400
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
Message-ID: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>

Here's a patch that changes semantics of Stage.next. Currently,
if a Deferred errbacks with an exception that you haven't 
explicitly trapped, Stage.next will raise the Failure object
(via the failure's trap method). I've changed this so it rather
does `raise type(failure.value), failure.value, failure.tb'.

What this means is that you can write code like this:

    d = flow.wrap(getDeferred())
    yield d
    try:
        result = d.next()
    except ParticularError, e:
        traceback.print_exc()

Two benefits here. One, I can actually say 
"except ParticularError" -- before, the type of the exception
raised would be Failure. Two, the traceback printed by 
traceback.print_exc() will actually be useful and show you the
stack trace of the original code that raised the error, rather
than the traceback starting from the Failure.trap call. 

Of course, the traceback is cleaned once Deferred.runCallbacks
finishes, but this only matters when the Deferred is resolved
synchronously, as far as I can tell. In that case, you will
get a pretty useless traceback, but it won't  be any more 
useless than the tracebacks that used to be reported.

The only drawback I see is that it breaks a flow test. :-)

  FailTest: exceptions.ZeroDivisionError raised instead of Failure

Because the test is expecting a Failure to be raised, not 
the original, and more useful, exception.

  self.assertRaises(flow.Failure, list, flow.Block(badgen()))

Clark, I'll be waiting for confirmation from you to commit this or
trash it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
? better-synchronous-exceptions.diff
? flow.xhtml
Index: flow.py
===================================================================
RCS file: /cvs/Twisted/sandbox/flow.py,v
retrieving revision 1.107
diff -u -r1.107 flow.py
--- flow.py	22 Jun 2003 06:45:12 -0000	1.107
+++ flow.py	24 Jun 2003 02:35:46 -0000
@@ -297,9 +297,19 @@
                 return self.results.pop(0)
         if self.stop:
             raise StopIteration()
+
         if self.failure:
             self.stop = True
-            return self.failure.trap(*self._trap)
+
+            cr = self.failure.check(*self._trap)
+
+            if cr:
+                return cr
+
+            if self.failure.tb:
+                raise self.failure.value.__class__, self.failure.value, self.failure.tb
+            raise self.failure.value
+
         raise NotReadyError("Must 'yield' this object before calling next()")
 
     def _yield(self):
@@ -492,11 +502,13 @@
         obj = obj()
 
     typ = type(obj)
+
     if typ is type([]) or typ is type(tuple()):
         return _List(obj)
+
     if typ is type(''):
         return _String(obj)
-     
+
     if isinstance(obj, defer.Deferred):
         return _Deferred(obj, *trap)
 

From andrew-twisted at puzzling.org  Mon Jun 23 22:54:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 12:54:32 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624013153.GA11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org>
Message-ID: <20030624025432.GC7970@frobozz>

On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
[...]
> Also, I've gotten into the habit of using py2exe to turn scripts into
> standalone Win32 programs, and it would be really nice to be able to
> ship a standalone NT service. Unfortunately, there seems to be a "pick
> any two" relationship between Twisted, NT Services, and py2exe - when
> I try and combine all three, I get the following traceback inside my
> Application.run() call:
> 
>       File "twisted\internet\app.pyc", line 861, in run
>     --- <exception caught here> ---
>       File "twisted\python\log.pyc", line 64, in callWithLogger
>       File "twisted\python\log.pyc", line 51, in callWithContext
>       File "twisted\python\context.pyc", line 32, in callWithContext
>       File "twisted\internet\default.pyc", line 122, in run
>       File "twisted\internet\default.pyc", line 116, in startRunning
>       File "twisted\internet\default.pyc", line 88, in _handleSignals
>     exceptions.ValueError: signal only works in main thread

Try passing installSignalHandlers=0 to Application.run to work around this.

-Andrew.




From screwtape at froup.com  Tue Jun 24 00:07:13 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 14:07:13 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624025432.GC7970@frobozz>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz>
Message-ID: <20030624040713.GB11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> [...]
> > Also, I've gotten into the habit of using py2exe to turn scripts into
> > standalone Win32 programs, and it would be really nice to be able to
> > ship a standalone NT service. Unfortunately, there seems to be a "pick
> > any two" relationship between Twisted, NT Services, and py2exe - when
> > I try and combine all three, I get the following traceback inside my
> > Application.run() call:
> > 
> >       File "twisted\internet\app.pyc", line 861, in run
> >     --- <exception caught here> ---
> >       File "twisted\python\log.pyc", line 64, in callWithLogger
> >       File "twisted\python\log.pyc", line 51, in callWithContext
> >       File "twisted\python\context.pyc", line 32, in callWithContext
> >       File "twisted\internet\default.pyc", line 122, in run
> >       File "twisted\internet\default.pyc", line 116, in startRunning
> >       File "twisted\internet\default.pyc", line 88, in _handleSignals
> >     exceptions.ValueError: signal only works in main thread
> 
> Try passing installSignalHandlers=0 to Application.run to work around this.

Out of curiosity, does Win32 even have signal handlers? Or are these
signal handlers something entirely different from the Unix concept?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| ... that every day's a rerun and the laughter's always canned.
|



From stuart.hungerford at anu.edu.au  Tue Jun 24 00:35:31 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Tue, 24 Jun 2003 14:35:31 +1000
Subject: [Twisted-Python] Re: Python 2.3 logging package and Twisted...
In-Reply-To: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
References: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20030624043531.GA11358@anu.edu.au>

Itamar wrote:

| > In applications using Twisted.web is writing logs with this
| > new module the kind of operation that would need to be done in
| > a deferred?
| 
| Uh. It can't be *blocking*. Writing to a log file is fine. Writing to a
| socket would block, so don't do that. Using a Deferred doesn't magically
| make it not block.
| 
| > I understand there's also twisted.python.log, but the issue
| > comes up for applications being moved to Twisted that already
| > use external logging libraries.
| 
| You can use it, sure, or whatever library you want, as long as they
| don't block. In fact you can hook up logging to t.p.log too if you want
| (log.addObserver with a little glue function.)

   I don't think I asked the original question very clearly. What I
   should of asked is "has anyone using the new 2.3 logging package
   found blocking behaviour?".  Yes would mean I'd have to handle the
   logging with a different package.

   As it turns out, the new logging package can listen on a socket for
   configuration instructions and it uses threading locks to ensure
   thread-safety of its shared data structures, so I'm proceeding with
   caution ;-)



Cheers,

Stu

--

Stuart Hungerford
ANU Internet Futures Project




From andrew-twisted at puzzling.org  Tue Jun 24 00:47:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 14:47:52 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624040713.GB11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz> <20030624040713.GB11491@ferd2.thristian.org>
Message-ID: <20030624044752.GD7970@frobozz>

On Tue, Jun 24, 2003 at 02:07:13PM +1000, screwtape at froup.com wrote:
> On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> > On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> > [...]
> > >     exceptions.ValueError: signal only works in main thread
> > 
> > Try passing installSignalHandlers=0 to Application.run to work around this.
> 
> Out of curiosity, does Win32 even have signal handlers? Or are these
> signal handlers something entirely different from the Unix concept?

Python does have a signal module on Win32, although I'm not sure what the
underlying Win32 API supports.
twisted.internet.default.PosixReactorBase._handleSignals might be
instructive, though:

    def _handleSignals(self):
        """Install the signal handlers for the Twisted event loop."""
        import signal
        signal.signal(signal.SIGINT, self.sigInt)
        signal.signal(signal.SIGTERM, self.sigTerm)

        # Catch Ctrl-Break in windows (only available in Python 2.2 and up)
        if hasattr(signal, "SIGBREAK"):
            signal.signal(signal.SIGBREAK, self.sigBreak)

        if platform.getType() == 'posix':
            signal.signal(signal.SIGCHLD, self._handleSigchld)

-Andrew.




From itamar at itamarst.org  Tue Jun 24 01:03:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2003 01:03:36 -0400
Subject: [Twisted-Python] Re: Python 2.3 logging package and Twisted...
In-Reply-To: <20030624043531.GA11358@anu.edu.au>
References: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
	<20030624043531.GA11358@anu.edu.au>
Message-ID: <20030624010336.7e08488a.itamar@itamarst.org>

On Tue, 24 Jun 2003 14:35:31 +1000
Stuart Hungerford <stuart.hungerford at anu.edu.au> wrote:

>    I don't think I asked the original question very clearly. What I
>    should of asked is "has anyone using the new 2.3 logging package
>    found blocking behaviour?".  Yes would mean I'd have to handle the
>    logging with a different package.
> 
>    As it turns out, the new logging package can listen on a socket for
>    configuration instructions and it uses threading locks to ensure
>    thread-safety of its shared data structures, so I'm proceeding with
>    caution ;-)

Locks do not imply non-blocking. From what glyph tells me logging over
sockets blocks, do not use them with Twisted unless you do the actual
write to the logging thingie in a thread.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From cce at clarkevans.com  Tue Jun 24 01:31:05 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 24 Jun 2003 05:31:05 +0000
Subject: [Twisted-Python] flow again
In-Reply-To: <20030622015356.0d16ac59.pp64@cornell.edu>
References: <20030622015356.0d16ac59.pp64@cornell.edu>
Message-ID: <20030624053105.GA55443@doublegemini.com>

Pavel,

Thank you.  It appears as if someone has already applied this patch.

Best,

Clark



From exarkun at intarweb.us  Tue Jun 24 01:23:53 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 01:23:53 -0400
Subject: [Twisted-Python] Hacking imap
In-Reply-To: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>
Message-ID: <20030624052353.GA20033@meson.dyndns.org>

On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
> Hi,
> 
> Just wanted to give a heads-up that I intend feed you guys a patch for
> the imap server to properly handle literals in all places they need to
> be handled towards the end of this week.

  Could you elaborate on "properly handle"?  I am currently making changes
in this area as well, mainly in the direction of avoiding all the in-memory
buffering the code currently does.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030624/1e84f3fe/attachment.pgp 

From cce at clarkevans.com  Tue Jun 24 01:42:39 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 24 Jun 2003 05:42:39 +0000
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>
References: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>
Message-ID: <20030624054239.GB55443@doublegemini.com>

Thank you for applying this patch, it is a big improvement.
Also, to summarize our IRC chat:

  1.  You think it is about time to move flow into twisted and
      Glyph/Itamar support this move; great.

  2.  You like the idea of adding it as a top level, 
      twisted.flow.* module; this means breaking flow.py 
      into several chunks.

  3.  For the public stages and controllers, flow.py could be broken
      down into the facility that they use: twisted.flow.thread, 
      twisted.flow.defer

  4.  The core of flow, 'wrap' function and its private stages, could
      be put into flow/flow.py; it is a bit redundant, but we could
      not think of another option.

  5.  We didn't discuss where the abstract interfaces, "Stage", and
      "Callback" should go.   Perhaps flow.interface?

  6.  We didn't discuss other public stages that are not directly
      associated with a facility, such as Zip.  Perhaps these could
      be put into flow.misc or flow.tools?

  7.  Most importantly (for me), due to the redundancy of flow/flow.py
      I'd like to ask glyph if a limited form of __init__.py import
      could be used in the case of a module/module.py mechansim so
      that the public objects in module.py could be imported into the
      module itself.    ie, in flow/__init__.py having:

         "from flow import wrap, Cooperate"

Thank you so much.

Clark

On Mon, Jun 23, 2003 at 10:46:21PM -0400, Christopher Armstrong wrote:
| Here's a patch that changes semantics of Stage.next. Currently,
| if a Deferred errbacks with an exception that you haven't 
| explicitly trapped, Stage.next will raise the Failure object
| (via the failure's trap method). I've changed this so it rather
| does `raise type(failure.value), failure.value, failure.tb'.
| 
| What this means is that you can write code like this:
| 
|     d = flow.wrap(getDeferred())
|     yield d
|     try:
|         result = d.next()
|     except ParticularError, e:
|         traceback.print_exc()



From andrew-twisted at puzzling.org  Tue Jun 24 01:41:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 15:41:50 +1000
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624054239.GB55443@doublegemini.com>
References: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net> <20030624054239.GB55443@doublegemini.com>
Message-ID: <20030624054150.GE7970@frobozz>

On Tue, Jun 24, 2003 at 05:42:39AM +0000, Clark C. Evans wrote:
> 
>   7.  Most importantly (for me), due to the redundancy of flow/flow.py
>       I'd like to ask glyph if a limited form of __init__.py import
>       could be used in the case of a module/module.py mechansim so
>       that the public objects in module.py could be imported into the
>       module itself.    ie, in flow/__init__.py having:
> 
>          "from flow import wrap, Cooperate"

I think I mentioned this on IRC, but: aarragghgah no!

That path leads to Zope 2.  It's painful.  I'd far prefer to have to type:
    
    from twisted.flow import flow
    # or
    from twisted.flow.flow import wrap, Cooperate

in my code than deal with magical __init__.py in packages.

I recognise the desire to make using the package more convenient, but I
think the trade-off isn't worth it.  The rest of Twisted manages very nicely
without this, and it would be nice if we could keep it like that.  No
exceptions, please.

-Andrew.




From screwtape at froup.com  Tue Jun 24 01:54:00 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 15:54:00 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624025432.GC7970@frobozz>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz>
Message-ID: <20030624055400.GC11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> [...]
> > Also, I've gotten into the habit of using py2exe to turn scripts into
> > standalone Win32 programs, and it would be really nice to be able to
> > ship a standalone NT service. Unfortunately, there seems to be a "pick
> > any two" relationship between Twisted, NT Services, and py2exe - when
> > I try and combine all three, I get the following traceback inside my
> > Application.run() call:
> > 
> >       File "twisted\internet\app.pyc", line 861, in run
> >     --- <exception caught here> ---
> >       File "twisted\python\log.pyc", line 64, in callWithLogger
> >       File "twisted\python\log.pyc", line 51, in callWithContext
> >       File "twisted\python\context.pyc", line 32, in callWithContext
> >       File "twisted\internet\default.pyc", line 122, in run
> >       File "twisted\internet\default.pyc", line 116, in startRunning
> >       File "twisted\internet\default.pyc", line 88, in _handleSignals
> >     exceptions.ValueError: signal only works in main thread
> 
> Try passing installSignalHandlers=0 to Application.run to work around this.
> 
> -Andrew.

For any lurking FAQ maintainers, that seemed to do the trick quite
nicely. I lose the ability to kill a service with ^C, but you can't
really send a ^C to a service anyway.

If I have time in the near future, I'll try and have a look at what
twistd does, what NT services need, and whether the two can be made to
meet.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I don't lick skyscrapers.
|



From m at moshez.org  Tue Jun 24 02:13:28 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 06:13:28 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
Message-ID: <20030624061328.12768.qmail@green.zadka.com>

First, let me clarify: I never said "don't use listenTCP". I merely
said that using application.listenTCP(0,...) is a bad idea, and if you
want to listen on an arbitrary port, you should do it with an
ApplicationService.

Now, let me clarify the position about RPYs: The official line is
"your development must be orthogonal to your deployment". What this
means is that if you are developing a web application, it should be
a resource with children, and internal links. Some of the children
may use Woven, some may be resources manually using .write, etc. The
point is, the code should be in a Python module, or package, *outside*
the web tree. You will probably want to test your application as you
develop it. There are many ways to test, starting with dropping an
.rpy which looks like

"""
from mypackage import toplevel
resource = toplevel.Resource(file="foo/bar", color="blue")
"""

into a directory, and then running

% mktap web --path=/directory
% twistd -f web.tap

to writing a Python script like

"""
#!/usr/bin/python2.2
from twisted.web import server
from twisted.internet import reactor
from mypackage import toplevel
reactor.listenTCP(8080,
    server.Site(toplevel.Resource(file="foo/bar", color="blue")))
reactor.run()
"""

Which one of these strategies you use is not terribly important, since
(and this is the important part) deployment is *orthogonal*. Later, when
you want users to actually *use* your code, you should worry about what
to do -- or rather, don't. Users may have widely different needs. Some
may want to run your code in a different process, so they'll use distributed
web. Some may be using the Debian package, and will drop in

% cat > /etc/local.d/99addmypackage.py
from mypackage import toplevel
default.putChild("mypackage", toplevel.Resource(file="foo/bar", color="blue"))
^D

If you want to be friendly to your users, you can supply many examples
in your package, like the above .rpy and the Debian-package drop-in.
But the *ultimate* friendliness is to write a useful resource which does
not have deployment assumptions built in.

This is what itamar meant by "Twisted.Web is not PHP": since we have
a better tool for organizing code (Python modules and packages), use it.
In PHP, the only tool for organizing is web pages, which leads to silly
things like PHP pages full of functions that other pages import, etc.
etc. If you translate this wholesale into Python, you may assume the
correct way to do web development is to have many RPYs, all importing
some Python module. This is a *bad idea* -- it mashes deployment with
development, and makes sure your users will be *tied* to the file-system.

We respect you enough to assume you're using Twisted.Web to write non-trivial
applications. This means that you will eventually have the Twisted.Web Zen,
by the time you finish to write your application. Using itamar's methodology
insures that when you *do* have the Zen, you will have less of an itch to
throw it away and start anew because it is crap.

So, to sum up: We have .rpys because they are useful and necessary. But
using them incorrectly leads to horribly unmaintainable applications. The
best way to insure using them correctly is to not use them at all, until
you are on your *final* deployment stages. By then, the whole "An RPY must
be less than 10 lines" will be superfluous because you will not *have*
more than 10 lines to write.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Tue Jun 24 02:30:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 01:30:22 -0500
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624054239.GB55443@doublegemini.com>
Message-ID: <55771098-A60D-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 12:42 AM, Clark C. Evans wrote:

>   7.  Most importantly (for me), due to the redundancy of flow/flow.py
>       I'd like to ask glyph if a limited form of __init__.py import
>       could be used in the case of a module/module.py mechansim so
>       that the public objects in module.py could be imported into the
>       module itself.    ie, in flow/__init__.py having:

This is a general problem that needs to be solved within Twisted.  
Packages should be able to specify public interfaces which you can 
import directly, such as

	from twisted.internet import Application
	from twisted.web import Resource
	from twisted.cred import IRealm

These interfaces are generally much smaller than the total of the 
classes in all the modules, and specifying things this way would make 
documentation simpler and allow us to change implementations and 
provide backwards compatibility in a much nicer way.

The problem is that the Python import system does not give us the right 
kind of hooks to provide this without importing things in advance or 
giving a performance hit to objects imported this way (making them 
getattr wrappers), as far as I can tell; while you can patch 
__import__, you can't catch the *first* import mid-way, so if someone 
starts a program with

	from twisted.internet import Application

you could not patch __import__ in twisted/__init__.py because it is not 
called recursively.

I am not opposed to evil in order to make this work, but I am very 
opposed to _fragile_ evil; something as basic as the import system 
should not be prone to surprising behavior and subtle misconfiguration.

So, I am opposed to flow implementing its own ad-hoc name promotion 
until we can come up with a standardizeable way to promote names to the 
package level, but I would very much like to figure out how to promote 
names in a generic way.




From glyph at twistedmatrix.com  Mon Jun 23 18:26:11 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2003 17:26:11 -0500
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056401924.1912.5.camel@mingus>
Message-ID: <B173510E-A5C9-11D7-B52C-000393C9700E@twistedmatrix.com>

On Monday, June 23, 2003, at 03:58 PM, Abe Fettig wrote:

>> app.listenTCP is going to be deprecated, not reactor.listenTCP. And 
>> yes,
>> app.listenTCP is a bad idea.
>
> Well, then, in the spirit of Twisted Best Practices, what is the
> preferred way to listen on a port within the context of an application?

There isn't one, yet.  Itamar is talking about a deprecation that will 
happen as part of a more central refactoring of Application, that will 
clean up lots of cruft.  When this happens, the deprecation warnings 
for Application.listenTCP will be very clear on what it should be 
migrated to :-).  For the moment, continue using app.listenTCP as 
usual.  (You can see an earlier thread where I responded to Moshe's 
suggestion for refactoring Application for more details.)

Unfortunately our design skills have really been outpacing our 
implementation speed lately.  I'm sorry for the divergence in "what 
will be the right thing" and "what is currently a working thing" that 
this creates.  Luckily at least newcred is mostly done now :)




From glyph at twistedmatrix.com  Tue Jun 24 02:41:05 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 01:41:05 -0500
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624061328.12768.qmail@green.zadka.com>
Message-ID: <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 01:13 AM, Moshe Zadka wrote:

> using them incorrectly leads to horribly unmaintainable applications.  
> The
> best way to insure using them correctly is to not use them at all,  
> until
> you are on your *final* deployment stages. By then, the whole "An RPY  
> must
> be less than 10 lines" will be superfluous because you will not *have*
> more than 10 lines to write.

This is a great description of RPYs.

In fact, I propose that we put a hack into ResourceScript which stats  
the .rpy file after it's been run, and if it is more than 512 bytes,  
print a UserWarning like:

	Woah there, code cowboy!  It's likely you've misunderstood what RPYs  
are for.  Have you read this?
		  
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
004693.html
	If you are quite sure that you are not committing an awful hack that  
will bring doom to you and shame to your family, set  
__no_seriously_this_rpy_needs_to_be_this_long__ = 5192

where 5192 is a new maximum size based on the current length of that  
file, calculated for the user's convenience to include some extra  
padding for the new attribute.




From andrew-twisted at puzzling.org  Tue Jun 24 02:55:48 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 16:55:48 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <20030624065548.GF7970@frobozz>

On Tue, Jun 24, 2003 at 01:41:05AM -0500, Glyph Lefkowitz wrote:
> 
> On Tuesday, June 24, 2003, at 01:13 AM, Moshe Zadka wrote:
> 
> >using them incorrectly leads to horribly unmaintainable applications.
> >The best way to insure using them correctly is to not use them at all,
> >until you are on your *final* deployment stages. By then, the whole "An
> >RPY  must be less than 10 lines" will be superfluous because you will not
> >*have* more than 10 lines to write.
> 
> This is a great description of RPYs.
> 
> In fact, I propose that we put a hack into ResourceScript which stats  
> the .rpy file after it's been run, and if it is more than 512 bytes,  
> print a UserWarning like:
> 
> 	Woah there, code cowboy!  It's likely you've misunderstood what RPYs 
> are for.  Have you read this?
> 		  
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> 004693.html
[...]

Except that it should refer to actual documentation, rather than the mailing
list archives!  I think Moshe's post is quite readily adaptable to slightly
more formal documentation, though, so I volunteer to do some trivial editing
and include it in the HOWTOs if people agree that's a good idea... :)

-Andrew.




From lafou at wanadoo.fr  Tue Jun 24 03:39:31 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 09:39:31 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030624011910.GB7668@frobozz>
References: <1056358887.2276.55.camel@biproc>
	 <20030623155047.GA8824@polynode.com> <1056383951.2282.105.camel@biproc>
	 <20030624011910.GB7668@frobozz>
Message-ID: <1056440371.2279.113.camel@biproc>

>     http://twistedmatrix.com/users/warner/doc-latest/
> 
> If you find expandMacro, or anything else, isn't covered... documentation
> patches would be very gratefully accepted! :)


thank you very much. Hmm, the woven part hasn't been touched, yes.
I can't help to write some help now (don't have enough time), but maybe later (next month)

Philippe




From lafou at wanadoo.fr  Tue Jun 24 04:38:53 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 10:38:53 +0200
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624065548.GF7970@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>
Message-ID: <1056443933.2282.120.camel@biproc>

> > In fact, I propose that we put a hack into ResourceScript which stats  
> > the .rpy file after it's been run, and if it is more than 512 bytes,  
> > print a UserWarning like:
> > 
> > 	Woah there, code cowboy!  It's likely you've misunderstood what RPYs 
> > are for.  Have you read this?
> > 		  
> > http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/
> > 004693.html
> [...]

I think we **really** need some complete doc about that. Building a
large web app with half written doc is quite hard (no doc for macros,
guard, Form, ...). Btw, I don't know how (and where !) to start
developping my application :(

RPY seems to be a good starting point to me. But I think I was using it
in a wrong way.
If I understand it well, I should have :

- xhtml templates.
- xhtml macro templates eventually.
- rpy files.
- py files.


xhtml templates are used for presentation
python files are used for logic
rpy are glue between presentation and logic. 

that's it ?






From egor at iplus.ru  Tue Jun 24 05:20:53 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Tue, 24 Jun 2003 13:20:53 +0400
Subject: [Twisted-Python] Q: PyQt and error handling in Deferreds
Message-ID: <200306241320.53288.egor@iplus.ru>

Hello!

I'm writing client application using Twisted and PyQt. I want to handle 
connection errors by showing the message box that describes it, so my errback  
looks like this:

    def _ebSessionRequest(self, err):
        QMessageBox.critical(self, "Warder", "Can't connect to server.")
        self.setEnabled(1)
        self.editAccesCode.setFocus()

It works nice but when the errback fired i get two tracebacks:

Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 249, 
in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 262, 
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "main.py", line 185, in _ebSessionRequest
    QMessageBox.critical(self, "Warder", "Can't connect to server.")
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
74, in read
    why = w.doRead()
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 378, 
in doConnect
    self.failIfNotConnected(error.getConnectError((connectResult, 
os.strerror(connectResult))))
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 315, 
in failIfNotConnected
    self.connector.connectionFailed(failure.Failure(err))
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 527, 
in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
clientConnectionLost
    self.deferred.errback(reason)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
in _startRunCallbacks
    raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:
Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 249, 
in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 262, 
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "main.py", line 185, in _ebSessionRequest
    QMessageBox.critical(self, "Warder", "Can't connect to server.")
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
83, in read
    w.connectionLost(failure.Failure(why))
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 396, 
in connectionLost
    self.failIfNotConnected(error.ConnectError())
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 315, 
in failIfNotConnected
    self.connector.connectionFailed(failure.Failure(err))
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 527, 
in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
clientConnectionLost
    self.deferred.errback(reason)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
in _startRunCallbacks
    raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:

My question is: is it normal? How can I avoid such tracebacks?


-- 
Egor Cheshkov <egor at iplus.ru>





From m at moshez.org  Tue Jun 24 05:44:47 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 09:44:47 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056443933.2282.120.camel@biproc>
References: <1056443933.2282.120.camel@biproc>, <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>
Message-ID: <20030624094447.20513.qmail@green.zadka.com>

On 24 Jun 2003, Philippe <lafou at wanadoo.fr> wrote:

> RPY seems to be a good starting point to me.

It isn't. That was itamar's point: don't use RPYs. It's not that they
are not useful, but...
OK, here's an analogy. When teaching kids correct table manners, you put
books under their arms, and tell them not to let the books fall. It's not
that being able to hold books while eating is a useful skill -- it's that
the books force the kid to constrain the movements of his hands.

In a similar way, not using RPYs will force you to think about the
correct way to build your application. If you feel yourself forced
to use RPY *avoid the temptation*, and know that what you're feeling
is actually a way to build the application *incorrectly*. If you're
still not sure what to do, ask advice -- here or on #twisted. But
in no case succumb to the "just write RPYs".

You should only use RPY when you are able to build applications without
RPYs. This is why you see tools like Issues, say, use RPYs -- notice
how you *can* use Issues *without* RPYs.

> If I understand it well, I should have :
> 
> - xhtml templates.
> - xhtml macro templates eventually.
> - rpy files.
> - py files.

NO!
You should *not* have RPY files
Some Python modules will be used for pure, non-web-related business
logic. Some Python modules will define resource trees which bind
together logic and presentation, for example by using Page instances
and defining wchild_* methods. Perhaps you'll find a need to write
an ApplicationService which holds various resources, usually not.
Notice the one thing missing from this paragraph: .rpy files. That's
right, you should not have *any* .rpy files. You *may* have need for
Python modules with long and tortorous functions like:

def buildBlogResource(
  realName,
  numberOfArticles,
  numberOfLines,
  colorScheme,
  ....
  ):
    blogObject = blog.DataRespository(...)
    root = blog.rootResource(blogObject)
    showArticles = blog.Show(blogObject)
    root.putChild('show', showArticles)
    # Notice how I use relative URLs here:
    updateArticlesForm = blog.UpdateForm(blogObject, url="doupdate")
    root.putChild('update', updateArticles)
    doUpdate = blog.DoUpdate(blogObject)
    root.putChild('doupdate', doUpdate)
    return root
    
But there should be *no* RPYs. Now, when testing, you might use a script
similar to

"""
#!/usr/bin/python2.2
from blog import buildBlogResource
from twisted.web import server
from twisted.internet import reactor

resource = buildBlogResource("Moshe", 10, 20, "RED", ...)
reactor.listenTCP(8080, server.Site(resource))
"""

When you are done testing, you package your Python library. Now,
you may do several things:

1. Put a .rpy in your doc/examples which looks something like

"""
# change these lines to configure
name = "Moshe"
articles = 10
lines = 20
colorScheme = "RED"
...

# touch nothing below this line
from blog import buildBlogResource
resource = buildBlogResource(name, articles, lines, colorScheme, ...)
"""

2. Write a TAP plugin to easily generate blogs. See plugin.html for
   full details, I'll show an excerpt here:

""""
from blog import buildBlogResource

def updateApplication(app, config):
    name, articles, lines, colorScheme = (config['name'], config['articles'],
                                   config['lines'], config['colorScheme]')
    resource = buildBlogResource(name, articles, lines, colorScheme, ...)
    app.listenTCP(config['port'], server.Site(resource))
"""

Your users can now do

% mktap myblog --name=Moshe --colorScheme=RED
% twistd -f myblog

3. Supply a twisted-web Debian plugin, which looks like

"""
# change these lines to configure
name = "Moshe"
articles = 10
lines = 20
colorScheme = "RED"
...

# touch nothing below this line
from blog import buildBlogResource
resource = buildBlogResource(name, articles, lines, colorScheme, ...)
default.putChild('myblog', resource)
"""

Sitting in /etc/twisted-web/local.d/99myblog.py

4. Document buildBlogResource in your API docs, so savvy Twisted programmers
   can deliver more and better ways to integrate it with a Python app.
   For example, writing through-the-web management to add a blog to a site.

5. Write TRPs (Twisted Resource Pickles) command-line generators.

etc. etc. etc.

Please notice when the RPY arrived on the scene: a long time after
you had a fully functioning blog, and you were *documenting* it. This
is the proper time to think about deployment issues.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Tue Jun 24 05:47:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 19:47:13 +1000
Subject: [Twisted-Python] Q: PyQt and error handling in Deferreds
In-Reply-To: <200306241320.53288.egor@iplus.ru>
References: <200306241320.53288.egor@iplus.ru>
Message-ID: <20030624094713.GG7970@frobozz>

On Tue, Jun 24, 2003 at 01:20:53PM +0400, Egor Cheshkov wrote:
> Hello!
> 
> I'm writing client application using Twisted and PyQt. I want to handle 
> connection errors by showing the message box that describes it, so my errback  
> looks like this:
> 
>     def _ebSessionRequest(self, err):
>         QMessageBox.critical(self, "Warder", "Can't connect to server.")
>         self.setEnabled(1)
>         self.editAccesCode.setFocus()
> 
> It works nice but when the errback fired i get two tracebacks:

I've trimmed down the traceback to a few "interesting" lines:

> Traceback (most recent call last):
>   File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
> in errback
>     self._startRunCallbacks(fail, 1)
[...]
>   File "main.py", line 185, in _ebSessionRequest
>     QMessageBox.critical(self, "Warder", "Can't connect to server.")
> --- <exception caught here> ---
>   File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
> 74, in read
>     why = w.doRead()
[...]
>   File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
> clientConnectionLost
>     self.deferred.errback(reason)
[...]
>   File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
> in _startRunCallbacks
>     raise AlreadyCalledError()
> twisted.internet.defer.AlreadyCalledError:

And then the second traceback looks to be the same as the first.

> My question is: is it normal? How can I avoid such tracebacks?

It appears that the t.web.xmlrpc.QueryFactory.clientConnectionLost handler
is being called twice on the same connection, somehow.  I'm guessing that
creating a QMessageBox in the handler re-enters the qtreactor, but the
reactor isn't re-entrant, so it re-runs the same events.  Or something.

Try this:

    def _ebSessionRequest(self, err):
        reactor.callLater(0, QMessageBox.critical, self, "Warder", 
                          "Can't connect to server.")
        self.setEnabled(1)
        self.editAccesCode.setFocus()

Or something like it.  This is mostly guesswork though, so I could easily be
completely wrong about what the problem is.

On a related note: perhaps we need to make the reactors smarter about
accidental re-entrancy, so that weird stuff like this can't happen?

-Andrew.




From joel at memes.com  Fri Jun 20 19:58:20 2003
From: joel at memes.com (Joel Boehland)
Date: Fri, 20 Jun 2003 16:58:20 -0700
Subject: [Twisted-Python] Interactive control of client?
Message-ID: <3EF39F9C.6020005@memes.com>

Hi,
I'm fairly new to Twisted, so this may 
be a stupid question, but that's never 
stopped me before! :-) Anyhow, I would 
like to be able to script a tcp client 
to play around with sending different 
protocol elements from within the python 
interpreter. To boil it down to a 
super-simple example I'll take the 
EchoClient example. Is there anyway to 
get a handle to that client and have it 
send different strings to the 
EchoServer. I'm imagining being able to 
do something like this in the python 
interpreter:

 >>>echoclient = SomeWayToGetClient(...)
 >>>echoclient.sendLine("blah")
 >>>echoclient.sendLine("bleh")

I'm assuming I would have to have the 
client run in another thread to be able 
to allow the python interpreter thread 
to run as well, but I'm not sure how I 
would do that. Any Info/help appreciated!

cheers,
Joel Boehland




From andrew-twisted at puzzling.org  Tue Jun 24 06:10:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 20:10:38 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624094447.20513.qmail@green.zadka.com>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624094447.20513.qmail@green.zadka.com>
Message-ID: <20030624101038.GH7970@frobozz>

On Tue, Jun 24, 2003 at 09:44:47AM -0000, Moshe Zadka wrote:
> On 24 Jun 2003, Philippe <lafou at wanadoo.fr> wrote:
> 
> > RPY seems to be a good starting point to me.
> 
> It isn't. That was itamar's point: don't use RPYs. It's not that they
> are not useful, but...

[...]

> When you are done testing, you package your Python library. Now,
> you may do several things:
> 
> 1. Put a .rpy in your doc/examples which looks something like
[...]
> 
> Please notice when the RPY arrived on the scene: a long time after
> you had a fully functioning blog, and you were *documenting* it. This
> is the proper time to think about deployment issues.

Just to elaborate a little on what Moshe said, notice what function the RPY
in Moshe's example is serving here: *it's a configuration file*.  It's not a
place for arbitrary code and logic, it's merely somewhere you configure a
predefined Resource class.

[Someone please correct me if I'm wrong!]

-Andrew.




From 2002 at weholt.org  Tue Jun 24 06:11:04 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 24 Jun 2003 12:11:04 +0200
Subject: [Twisted-Python] Metakit and Twisted ??
Message-ID: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>

Has anybody tried to use Metakit with Twisted? Is there anyway to avoid
blocking using Metakit, using Deferred etc. ??

Best regards,
Thomas Weholt




From andrew-twisted at puzzling.org  Tue Jun 24 06:16:48 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 20:16:48 +1000
Subject: [Twisted-Python] Interactive control of client?
In-Reply-To: <3EF39F9C.6020005@memes.com>
References: <3EF39F9C.6020005@memes.com>
Message-ID: <20030624101648.GI7970@frobozz>

[Wow, your MUA must have the narrowest editing area I've ever seen!]

On Fri, Jun 20, 2003 at 04:58:20PM -0700, Joel Boehland wrote:

[..snip..]

> I'm imagining being able to do something like this in the python
> interpreter:
> 
> >>>echoclient = SomeWayToGetClient(...)
> >>>echoclient.sendLine("blah")
> >>>echoclient.sendLine("bleh")
> 
> I'm assuming I would have to have the client run in another thread to be
> able to allow the python interpreter thread to run as well, but I'm not
> sure how I would do that. Any Info/help appreciated!

Slightly different to what you're asking...

Try adding a "manhole" to your application.  The quick and dodgy way is 

    from twisted.tap.telnet import updateApplication
    updateApplication(app, 
                      {'username':'admin', 'password': '****', 'port':2323})

(where app is your Application instance)

This will add telnet interface to your program that presents you with a
python prompt.  It can be convenient for playing around in a live Twisted
app.

-Andrew.




From m at moshez.org  Tue Jun 24 06:39:52 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 10:39:52 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624101038.GH7970@frobozz>
References: <20030624101038.GH7970@frobozz>, <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624094447.20513.qmail@green.zadka.com>
Message-ID: <20030624103952.22422.qmail@green.zadka.com>

On Tue, 24 Jun 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Just to elaborate a little on what Moshe said, notice what function the RPY
> in Moshe's example is serving here: *it's a configuration file*.  It's not a
> place for arbitrary code and logic, it's merely somewhere you configure a
> predefined Resource class.
> 
> [Someone please correct me if I'm wrong!]

Well, in my example, it was a configuration file. It could easily have
been the place of "arbitrary" code:

"""
d = {}
execfile("/etc/myblog.py", d)
from blog import buildBlogResource
resource = buildBlogResource(**d)
"""

And have /etc/myblog.py look like

"""
name="Moshe"
colorScheme="RED"
articles=10
lines=20
"""

The .rpy file, more than a configuration file, is a "place indicator" --
it is a link back from the filesystem (which, in the Twisted.Web view,
is just a particularily ugly resource hierearchy) back into a "nice" resource
hierarchy. It's just that the filesystem is very easy to use for "static"
resources. The RPY file is a *deployment* choice. Deployment often
ties in with configuration: sometimes intimately (as in my original
example) and sometimes not so intimately (like in this example, where
the configuration is in a different file).

You can also do even less trivial things in the RPY:

"""
import ConfigParser
config = ConfigParser.ConfigParser("/etc/myblog.ini")
from blog import buildBlogResource
resource = buildBlogResource(config.get("name"), config.getint("articles"),
                             config.getint("lines"), config.get("colorScheme"))
"""

You can choose whether to put cache() at the top or not, etc. etc.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From iko at cd.chalmers.se  Tue Jun 24 07:28:41 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 24 Jun 2003 13:28:41 +0200
Subject: [Twisted-Python] Hacking imap 
In-Reply-To: <20030624052353.GA20033@meson.dyndns.org> 
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> 
Message-ID: <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>

In a message of Tue, 24 Jun 2003 01:23:53 EDT, Jp Calderone writes:
>On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
>  Could you elaborate on "properly handle"?  I am currently making changes
>in this area as well, mainly in the direction of avoiding all the in-memory
>buffering the code currently does.

Certainly,

There are lots of places where literals aren't handled (I think that
the only place where they are handled is in APPEND, at least from what
my testing show). Anyplace where the syntax allows a string, a literal
is allowed.

The idea is to have the command dispatcher parse the arguments for each
command, and then pass the arguments to the command handling function.
This way, if the argument is a literal or a string, it can be passed as
a file object (but there is no need - for example, if a mailbox name
is given as a literal, there is little reason to give it in a file object).

So instead of naming the handler functions <state>_<COMMAND>, I'll have
<state>_<COMMAND> be a tuple containing ( <handler_function>,
<arg_parser>, <arg_parser>, ...) and then call the handler_function
with the results of the arg_parser functions.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From screwtape at froup.com  Tue Jun 24 08:35:07 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 22:35:07 +1000
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030624011141.GA7668@frobozz>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com> <20030623222929.GA9891@toshi.anaprd01.md.comcast.net> <20030624011141.GA7668@frobozz>
Message-ID: <20030624123507.GD11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 11:11:41AM +1000, Andrew Bennetts wrote:
> On Mon, Jun 23, 2003 at 06:29:29PM -0400, Christopher Armstrong wrote:
> > 
> > Thus, rpys should have as little code as possible in them -- on the order of 10
> > lines or less (maybe more if you decide to put very simple configuration 
> 
> This reminds me of the MSDN recommending that ASP scripts should never be
> more than 100 lines, because they're just glue for your COM objects.  A
> previous employer of mine knew that, and still had ~100000 lines of ASP
> anyway, including a charting system in about ~20000 lines.  I understand
> that this is not uncommon :)
> 
> People *will* misuse software -- particularly if the documention isn't
> excellent...

Ah, but ASP is a lot more friendly to that kind of misuse than Twisted
seems to be. The fact that Twisted doesn't have a simple ASP-style way
of flipping between code and raw HTML output should make all but the
most persistent misusers cry out 'There Has To Be A Better Way!' in
fairly short order.

I guess it's just a matter of having ample documentation.
Documentation and sample code. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| At night, rave near the guard's compartment naked with a blue light.
|



From andrew-twisted at puzzling.org  Tue Jun 24 09:29:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 23:29:12 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624065548.GF7970@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz>
Message-ID: <20030624132912.GA9058@frobozz>

On Tue, Jun 24, 2003 at 04:55:48PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 01:41:05AM -0500, Glyph Lefkowitz wrote:
> > 
> > http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> > 004693.html
> [...]
> 
> Except that it should refer to actual documentation, rather than the mailing
> list archives!  I think Moshe's post is quite readily adaptable to slightly
> more formal documentation, though, so I volunteer to do some trivial editing
> and include it in the HOWTOs if people agree that's a good idea... :)

I've now done this -- you can see the result, fresh off the buildbot, at:
    http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml

As with all of our docs, feedback is welcome!

-Andrew.




From 2002 at weholt.org  Tue Jun 24 10:38:01 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 24 Jun 2003 16:38:01 +0200
Subject: [Twisted-Python] Setting up a HTTPS-server
Message-ID: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>

Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
the past ad saw that the latest release also supports secure FTP. I'm not
clear on the status of the current FTP-implementation in Twisted, so if
anybody would like to shed some light on the current status of HTTPS and
secure FTP that would be great.

( Any information on how to implement a simple authenticating FTP server
running alongside a HTTP(S)-server would also be cool. )

Regards,
Thomas Weholt




From andrew-twisted at puzzling.org  Tue Jun 24 10:44:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 00:44:32 +1000
Subject: [Twisted-Python] Setting up a HTTPS-server
In-Reply-To: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
References: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
Message-ID: <20030624144432.GB9058@frobozz>

On Tue, Jun 24, 2003 at 04:38:01PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
> the past ad saw that the latest release also supports secure FTP. I'm not
> clear on the status of the current FTP-implementation in Twisted, so if
> anybody would like to shed some light on the current status of HTTPS and
> secure FTP that would be great.

Twisted currently has no support for secure FTP.

-Andrew.




From jml at ids.org.au  Tue Jun 24 22:17:35 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Wed, 25 Jun 2003 12:17:35 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
Message-ID: <20030625021734.GA12731@mumak.net>


Issues, a issue tracking system built on Twisted technology, has been released
for the first time today!

Homepage: http://www.twistedmatrix.com/users/jml
Download: http://www.twistedmatrix.com/users/jml/Issues-0.1alpha1.tar.gz
Demo: http://www.twistedmatrix.com/users/jml.twistd (TRY IT!)

This is an alpha release, so please don't trust it with important, backup-less
data. The intent of this release is to get people playing with Issues, to
identify usage bugs and missing features.

The full 0.1 release, once the most crucial of these bugs have been dealt
with. Hopefully in a week or two.

Issues does have an email notification feature, but this has been disabled on
the demo, as I didn't want to send out automated emails from twistedmatrix.com
without first clearing it with the relevant authorities.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030625/8d890cf2/attachment.pgp 

From twisted at goldenspud.com  Tue Jun 24 11:29:11 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Tue, 24 Jun 2003 10:29:11 -0500
Subject: [Twisted-Python] Setting up a HTTPS-server
In-Reply-To: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
References: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
Message-ID: <200306241029.11572.twisted@goldenspud.com>

On Tue 2003-06-24 09:38, Thomas Weholt \( PRIVAT \) wrote:
> Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
> the past ad saw that the latest release also supports secure FTP. I'm not
> clear on the status of the current FTP-implementation in Twisted, so if
> anybody would like to shed some light on the current status of HTTPS and
> secure FTP that would be great.


The package I needed to install to get SSL working in twisted was pyOpenSSL.  
With Debian unstable I used the package 'python2.2-pyopenssl' 

I was able to set up a HTTPS server running alongside an HTTP server by using 
some hints in twisted/doc/examples/echoserv_ssl.py

Basically what it boiled down to for my use was:

[ ... ]

class ServerContextFactory:

    def getContext(self):
        """Create an SSL context.

        Similar to twisted's echoserv_ssl example, except the private key
        and certificate are in separate files."""
        ctx = SSL.Context(SSL.SSLv23_METHOD)
        ctx.use_privatekey_file('serverkey.pem')
        ctx.use_certificate_file('servercert.pem')
        return ctx

[ ... ]

site = twisted.web.server.Site(...)
application.listenTCP(8080, site)
application.listenSSL(8443, site, ServerContextFactory())

[ ... ]

To play around with a dummy private key and certificate I used the following 
commands:

openssl genrsa -out serverkey.pem 2048
openssl req -new -x509 -key serverkey.pem -out servercert.pem -days 1095

Have fun :)

-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From screwtape at froup.com  Tue Jun 24 11:54:07 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 25 Jun 2003 01:54:07 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624132912.GA9058@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
Message-ID: <20030624155407.GF11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 11:29:12PM +1000, Andrew Bennetts wrote:
> I've now done this -- you can see the result, fresh off the buildbot, at:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml
> 
> As with all of our docs, feedback is welcome!

One of the nice things about .rpy is that they work well with the
usual HTML development tweak-source-reload-browser cycle. The
(excellent and informative) document above says "The best way to
ensure you are using [.rpys] correctly is to not use them at all until
you are on your final deployment stages" - I feel it might be nice to
mention, if only briefly or in a footnote or at the other end of a
hyperlink, the Twisted Way of debugging a live web app.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The doctor walked in, sminking of gin... he was really sminking." -- McCartney
|



From lafou at wanadoo.fr  Tue Jun 24 12:14:41 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:14:41 +0200
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624132912.GA9058@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>  <20030624132912.GA9058@frobozz>
Message-ID: <1056471281.6825.4.camel@biproc>

> I've now done this -- you can see the result, fresh off the buildbot, at:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml


hmm make things a little more clearer. But it still looks like an intro for me :
How can I develop a large woven application ??

I don't see how to make links between pages (resources). I know I can define some new
Child resource, but how do manage several Pages ?
Will I have to do a 

from MyResources import myresource1, myresource2 
??

            





From lafou at wanadoo.fr  Tue Jun 24 12:19:21 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:19:21 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030625021734.GA12731@mumak.net>
References: <20030625021734.GA12731@mumak.net>
Message-ID: <1056471561.6831.7.camel@biproc>

Ho Issues is comming on right time :)
I'll check this code to understand why I shouldn't use RPY. It's so
easier to understand with a complete and concrete exemple, instead of
pieces of code.

thank you jml




From lafou at wanadoo.fr  Tue Jun 24 12:20:32 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:20:32 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030625021734.GA12731@mumak.net>
References: <20030625021734.GA12731@mumak.net>
Message-ID: <1056471632.6831.9.camel@biproc>

On Wed, 2003-06-25 at 04:17, Jonathan Lange wrote:
> Issues, a issue tracking system built on Twisted technology, has been released
> for the first time today!
> 
> Homepage: http://www.twistedmatrix.com/users/jml
> Download: http://www.twistedmatrix.com/users/jml/Issues-0.1alpha1.tar.gz

The link is broken on your page JML.
it points to http://www.twistedmatrix.com/users/jml/Issues-0.1a1.tar.gz




From lafou at wanadoo.fr  Tue Jun 24 12:33:23 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:33:23 +0200
Subject: [Twisted-Python] twisted.world is missing ??
Message-ID: <1056472403.6825.13.camel@biproc>

Hi,

I was trying to test Issues. But in issues-admin, there's a
twisted.world import which fails on my machine (gentoo Linux 1.4,
twisted 1.0.5).

Moreover :


>>> from twisted import world
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: cannot import name world
>>> 

thought it was a gentoo bug. But, after downloading
Twisted-1.0.5.tar.bz2 :

$ tar tjpf Twisted-1.0.5.tar.bz2 |grep world
$

world disappeared ???

 
-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From 2002 at weholt.org  Tue Jun 24 13:54:34 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 24 Jun 2003 19:54:34 +0200
Subject: [Twisted-Python] Loading pageproducers dynamically
Message-ID: <006201c33a79$ad931fe0$0401a8c0@razor>

I'm porting a project to Twisted where I loaded what was then called
pageproducer, similar to subclasses of Resource in Twisted. They were in a
given folder and located, created an instance of at run time and stored in a
lookup-structure. The files were organized something like this :

www/index.py
www/folder1/hello1.py
www/folder2/subfolder3/hellotoo.py
[ ... etc ...]

www/index.py maps to index.html, www/folder1/hello1.py to
/folder1/hello.html etc. The main point being that the server didn't know
what classes to import and create before run time. How can I create someting
similar to this, using Resource's putChild etc and keeping the things
discussed lately about keeping python modules out of the webtree ??

I want my users to be able to add pages with ease, not having to edit import
statements in the main modules, put simple doing something like this in a
module named helloworld.py, located in www/test/helloworld.py :

class helloworld(Resource):
    def render(self, request):
        return 'hello world'

and pointing your browser to /test/helloword.py should then show "Hello
world".

Most examples discussed lately has imported all needed modules explicitly at
start up. My setup needs to be more dynamic.

Thomas





From glyph at twistedmatrix.com  Tue Jun 24 13:57:44 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 12:57:44 -0500
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <1056472403.6825.13.camel@biproc>
Message-ID: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 11:33 AM, Philippe Lafoucri?re wrote:

> thought it was a gentoo bug. But, after downloading
> Twisted-1.0.5.tar.bz2 :

If anyone well-acquainted with Twisted releases software marked as 
"alpha", you may safely assume it requires the latest CVS :-).  Twisted 
World is a new feature in Twisted, still heavily under development.



From lafou at wanadoo.fr  Tue Jun 24 14:11:47 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 20:11:47 +0200
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <1056478307.6825.15.camel@biproc>

> If anyone well-acquainted with Twisted releases software marked as 
> "alpha", you may safely assume it requires the latest CVS :-).  Twisted 
> World is a new feature in Twisted, still heavily under development.


ho well.

so why twisted.world is in the stable api doc ?




From abe at fettig.net  Tue Jun 24 14:15:19 2003
From: abe at fettig.net (Abe Fettig)
Date: 24 Jun 2003 14:15:19 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624155407.GF11491@ferd2.thristian.org>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
	 <20030624155407.GF11491@ferd2.thristian.org>
Message-ID: <1056478519.3069.127.camel@mingus>

On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:

> One of the nice things about .rpy is that they work well with the
> usual HTML development tweak-source-reload-browser cycle.

This is true - most web developers are not used to having to stop and
restart the server after every change.  Is there anything wrong with
putting all your code into /index.rpy during development, so that code
gets reloaded on every page visit?  It's easy enough to move the code
into a regular module later.

Abe




From itamar at itamarst.org  Tue Jun 24 14:10:59 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2003 14:10:59 -0400
Subject: [Twisted-Python] Metakit and Twisted ??
In-Reply-To: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>
References: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>
Message-ID: <20030624141059.7ffb9802.itamar@itamarst.org>

On Tue, 24 Jun 2003 12:11:04 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Has anybody tried to use Metakit with Twisted? Is there anyway to
> avoid blocking using Metakit, using Deferred etc. ??

I know Glyph was using it at some point, and the assumption was it's
fast enough that you don't need to do anything special.

IMPORTANT: Deferreds do not make code magically not-block! They make
working with non-blocking code easier, but to make blocking code not
block you need to either split it up (e.g. long calculations), switch to
non-blocking API, or use threads.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From rdrb at 123.cl  Tue Jun 24 14:16:05 2003
From: rdrb at 123.cl (rdrb at 123.cl)
Date: Tue, 24 Jun 2003 14:16:05 -0400
Subject: [Twisted-Python] Woven newby question
Message-ID: <20030624181820.RQKK4792.mta3@mta3.real.mail.entelchile.net>

I have tried different formulas but I still not guessing how to use the Widget Paragraph text in order to show a StringModel as "<p>line1</p><p>line2</p><p>line3</p>" html.

This should be trivial but I do not get it.

Could some one help me?

Thanks.

Rodrigob.




From m at moshez.org  Tue Jun 24 14:36:12 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 18:36:12 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056478519.3069.127.camel@mingus>
References: <1056478519.3069.127.camel@mingus>, <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
	 <20030624155407.GF11491@ferd2.thristian.org>
Message-ID: <20030624183612.7356.qmail@green.zadka.com>

On 24 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> This is true - most web developers are not used to having to stop and
> restart the server after every change.  Is there anything wrong with
> putting all your code into /index.rpy during development, so that code
> gets reloaded on every page visit?  It's easy enough to move the code
> into a regular module later.

Depends on how much code that is. Of course, you can also do that if you
don't put all your code in the .rpy, by having a short .rpy which
reloads modules:

'''
import blog
reload(blog)
resource = blog.buildBlogResource(...)
'''
 
is a perfectly sane short RPY which will allow you to code properly.
However, I tend to dislike this kind of solutions. While in CGI,
this kind of strategy makes sense, in real web applications, it
starts to break down. My vague memories of using HTML::Mason
and OpenACS indicate that at one point I was so tired of remembering
which parts were cached and which parts weren't that I actually
did restart the web server whenever I wanted to test my changes.

I usually do my web development with a web browser open, and whenever
I change I restart the server, and reload the page. Moving from two
clicks per change to one doesn't seem worth remembering what's
cached and what isn't, sorry... :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at intarweb.us  Tue Jun 24 16:15:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 16:15:03 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <200306221714.24485@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de>
Message-ID: <20030624201503.GA22074@meson.dyndns.org>

On Sun, Jun 22, 2003 at 05:14:24PM +0200, Matthias Urlichs wrote:
> Since "suck" doesn't work for me for a variety of reasons, I decided to 
> replace it with a solution based on twisted.protocol.nntp. After a few hours 
> of hacking, I now have a nice program which nicely saturates my downlink 
> bandwidth. ;-)
> 
> To make a long story short, the attached patch implements the changes and 
> fixes I needed to actually get there.

  I think this patch is against a version of nntp.py that I don't have. 
Could you make sure it is against current CVS, or at least a previously
released version (I'm quite certain we've never had 1.0.5smurf-6)

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030624/2a8d384b/attachment.pgp 

From exarkun at intarweb.us  Tue Jun 24 16:30:38 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 16:30:38 -0400
Subject: [Twisted-Python] Hacking imap
In-Reply-To: <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>
Message-ID: <20030624203038.GB22074@meson.dyndns.org>

On Tue, Jun 24, 2003 at 01:28:41PM +0200, Anders Hammarquist wrote:
> In a message of Tue, 24 Jun 2003 01:23:53 EDT, Jp Calderone writes:
> >On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
> >  Could you elaborate on "properly handle"?  I am currently making changes
> >in this area as well, mainly in the direction of avoiding all the in-memory
> >buffering the code currently does.
> 
> Certainly,
> 
> There are lots of places where literals aren't handled (I think that
> the only place where they are handled is in APPEND, at least from what
> my testing show). Anyplace where the syntax allows a string, a literal
> is allowed.

  Ahh yes, I believe I blocked out that particular memory :(  Thanks for
tackling it :)

> 
> The idea is to have the command dispatcher parse the arguments for each
> command, and then pass the arguments to the command handling function.
> This way, if the argument is a literal or a string, it can be passed as
> a file object (but there is no need - for example, if a mailbox name
> is given as a literal, there is little reason to give it in a file object).
> 
> So instead of naming the handler functions <state>_<COMMAND>, I'll have
> <state>_<COMMAND> be a tuple containing ( <handler_function>,
> <arg_parser>, <arg_parser>, ...) and then call the handler_function
> with the results of the arg_parser functions.

  This sounds like a great approach.  If I could make a request (and maybe
you were going to do this anway), it would be nice if the arg_parsers could
work incrementally: this is mostly of use when receiving an actual message,
to avoid buffering it all in memory (or even buffering it on disk and
pushing off parsing it until it is completely received).

  Maybe this means <arg_parser> should be a factory that returns a parser,
so that state can be more easily managed when parsing the full
list-expression returned with from a fetch command.

  Sound reasonable?

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030624/f361a576/attachment.pgp 

From missive at hotmail.com  Tue Jun 24 17:36:42 2003
From: missive at hotmail.com (Lee Harr)
Date: Tue, 24 Jun 2003 21:36:42 +0000
Subject: CVS Tag  (was Re: [Twisted-Python] PATCH: doc/historic/index.html reality link)
Message-ID: <BAY2-F127hxJKocJqj00000c37b@hotmail.com>

> > I think that patch I sent in may have had line-wrap problems...
> > I updated and the link to the reality doc is still off by one.
>
>Hmm, I did an update on a separate machine and it looks ok from here:
>

>
>This is version 1.5 of doc/historic/index.html .. is that the same version
>you're seeing?
>
>puzzled,
>  -Brian


Wow, I am really glad I looked in to this....   Looks like my cvs copy was
set to use a tag from 2 weeks ago (June 10? -- D2003.06.10.04.00.00)
Not sure how it got that way (bit of a cvs newbie  :o)

I used
cvs update -r HEAD -d -P
and now when I look in the CVS/Tag files it shows
NHEAD

Is that the correct one?   Can I now just
cvs update -d -P
to continue getting the latest revisions?

Thanks for your time.

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From radix at twistedmatrix.com  Tue Jun 24 18:31:24 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:31:24 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056471281.6825.4.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 12:14:41 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <1056471281.6825.4.camel@biproc>
Message-ID: <20030624223124.GK5396@toshi.anaprd01.md.comcast.net>

On 2003.06.24 12:14, Philippe Lafoucri?re wrote:
> I don't see how to make links between pages (resources). I know I can define some new
> Child resource, but how do manage several Pages ?

You should have a single root resource that knows the layout of 
your entire web app. Once you've got that, the only kinds of
links you need are child and sibling. Also, if you set 
appRoot = True in your root Page subclass, you can call 
request.getRootURL() anywhere else to get a URL that points to
the root of your web app.

You would manage several Pages by making them all children of
your main app-root Page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 18:31:24 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:31:24 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056471281.6825.4.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 12:14:41 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <1056471281.6825.4.camel@biproc>
Message-ID: <20030624223124.GK5396@toshi.anaprd01.md.comcast.net>

On 2003.06.24 12:14, Philippe Lafoucri?re wrote:
> I don't see how to make links between pages (resources). I know I can define some new
> Child resource, but how do manage several Pages ?

You should have a single root resource that knows the layout of 
your entire web app. Once you've got that, the only kinds of
links you need are child and sibling. Also, if you set 
appRoot = True in your root Page subclass, you can call 
request.getRootURL() anywhere else to get a URL that points to
the root of your web app.

You would manage several Pages by making them all children of
your main app-root Page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 18:37:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:37:10 -0400
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <1056478307.6825.15.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 14:11:47 -0400
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com> <1056478307.6825.15.camel@biproc>
Message-ID: <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>

On 2003.06.24 14:11, Philippe Lafoucri?re wrote:
> 
> > If anyone well-acquainted with Twisted releases software marked as 
> > "alpha", you may safely assume it requires the latest CVS :-).  Twisted 
> > World is a new feature in Twisted, still heavily under development.
> 
> 
> ho well.
> 
> so why twisted.world is in the stable api doc ?

Well, it's in the "current API doc", which is for 1.0.6alpha3.

Issues probably works with 1.0.6alpha3. If you don't want to
get CVS, get that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 18:38:59 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:38:59 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056478519.3069.127.camel@mingus>; from abe@fettig.net on Tue, Jun 24, 2003 at 14:15:19 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <20030624155407.GF11491@ferd2.thristian.org> <1056478519.3069.127.camel@mingus>
Message-ID: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>

On 2003.06.24 14:15, Abe Fettig wrote:
> On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:
> 
> > One of the nice things about .rpy is that they work well with the
> > usual HTML development tweak-source-reload-browser cycle.
> 
> This is true - most web developers are not used to having to stop and
> restart the server after every change.  Is there anything wrong with
> putting all your code into /index.rpy during development, so that code
> gets reloaded on every page visit?  It's easy enough to move the code
> into a regular module later.

I would strongly recommend, rather than shoving all of your
code into an .rpy file for its reloading semantics, just 
calling reload() (or twisted.python.rebuild.rebuild()) on the
modules that are part of your project in the .rpy file.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From don at motorola.com  Tue Jun 24 19:13:29 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 24 Jun 2003 18:13:29 -0500
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
Message-ID: <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>

Greetings,

Sorry about the newbie question, but... :)

I have a custom server running a byte-oriented protocol
(sockets, written in C) and would like to use twisted to implement
the client. I see from looking at the "simpleclient" how
you can use an existing protocol (e.g. Echo) but I am not
sure how to create a client using my own byte-oriented (e.g.
"raw") protocol. If anyone could give me a little advice I
would certainly appreciate it. :) Also, is ClientFactory appropriate
for this sort of application?

Cheers,

Don




From andrew-twisted at puzzling.org  Tue Jun 24 21:54:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 11:54:17 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <20030624155407.GF11491@ferd2.thristian.org> <1056478519.3069.127.camel@mingus> <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
Message-ID: <20030625015417.GA11072@frobozz>

On Tue, Jun 24, 2003 at 06:38:59PM -0400, Christopher Armstrong wrote:
> 
> On 2003.06.24 14:15, Abe Fettig wrote:
> > On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:
> > 
> > > One of the nice things about .rpy is that they work well with the
> > > usual HTML development tweak-source-reload-browser cycle.
> > 
> > This is true - most web developers are not used to having to stop and
> > restart the server after every change.  Is there anything wrong with
> > putting all your code into /index.rpy during development, so that code
> > gets reloaded on every page visit?  It's easy enough to move the code
> > into a regular module later.
> 
> I would strongly recommend, rather than shoving all of your
> code into an .rpy file for its reloading semantics, just 
> calling reload() (or twisted.python.rebuild.rebuild()) on the
> modules that are part of your project in the .rpy file.

Note that there are now docs on rebuild in CVS, too:
    http://twistedmatrix.com/users/warner/doc-latest/howto/upgrading.xhtml

-Andrew.




From andrew-twisted at puzzling.org  Tue Jun 24 22:00:11 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 12:00:11 +1000
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>
References: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net> <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>
Message-ID: <20030625020011.GB11072@frobozz>

On Tue, Jun 24, 2003 at 06:13:29PM -0500, Don Hiatt wrote:
> Greetings,
> 
> Sorry about the newbie question, but... :)
> 
> I have a custom server running a byte-oriented protocol
> (sockets, written in C) and would like to use twisted to implement
> the client. I see from looking at the "simpleclient" how
> you can use an existing protocol (e.g. Echo) but I am not
> sure how to create a client using my own byte-oriented (e.g.
> "raw") protocol. If anyone could give me a little advice I
> would certainly appreciate it. :) Also, is ClientFactory appropriate
> for this sort of application?

Well, the 'data' parameter of an Protocol's dataReceived method is just a
string, i.e. bytes directly from the network.  I've used Twisted in the past
for working with byte stream protocols -- it works very nicely.

A key part is the 'struct' module in Python's standard library, which can
convert bytes to numbers, and so forth.  Take a look at the source to
twisted.protocols.basic.Int32Receiver, which receives strings prefixed by a
32-bit length.  There's really nothing to it :)

Regarding ClientFactory -- yes, whenever you are using clients, you probably
want some sort of ClientFactory (quite possibly a ReconnectingClientFactory,
depending on the application).  See
    http://twistedmatrix.com/documents/howto/clients
for an overview of using ClientFactory.

-Andrew.




From andrew-twisted at puzzling.org  Tue Jun 24 22:15:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 12:15:01 +1000
Subject: [Twisted-Python] Loading pageproducers dynamically
In-Reply-To: <006201c33a79$ad931fe0$0401a8c0@razor>
References: <006201c33a79$ad931fe0$0401a8c0@razor>
Message-ID: <20030625021501.GC11072@frobozz>

On Tue, Jun 24, 2003 at 07:54:34PM +0200, Thomas Weholt wrote:
> I'm porting a project to Twisted where I loaded what was then called
> pageproducer, similar to subclasses of Resource in Twisted. They were in a
> given folder and located, created an instance of at run time and stored in a
> lookup-structure. The files were organized something like this :
> 
> www/index.py
> www/folder1/hello1.py
> www/folder2/subfolder3/hellotoo.py
> [ ... etc ...]
> 
> www/index.py maps to index.html, www/folder1/hello1.py to
> /folder1/hello.html etc. The main point being that the server didn't know
> what classes to import and create before run time. How can I create someting
> similar to this, using Resource's putChild etc and keeping the things
> discussed lately about keeping python modules out of the webtree ??

I think you might you might want to set 'isLeaf = 1' on your resource.  This
will stop Twisted Web calling getChild on that resource, even if there are
more path elements left.  Instead, your resource's .render method will be
called immediately, so resource is then free to deal with the rest of the
path however it likes (it can get the remainder of path looking at
request.postpath, if it cares).

twisted.web.twcgi.CGIScript does this, and it sounds like what you want is
similar in some respects to CGI.  It might be a useful reference.

> I want my users to be able to add pages with ease, not having to edit import
> statements in the main modules, put simple doing something like this in a
> module named helloworld.py, located in www/test/helloworld.py :
> 
> class helloworld(Resource):
>     def render(self, request):
>         return 'hello world'
> 
> and pointing your browser to /test/helloword.py should then show "Hello
> world".

I'm not sure that having these inherit from twisted.web.resource.Resource
really makes sense; the tree of the filesystem doesn't really offer the same
features as a tree of Resources.  That's just a guess though -- I'm actually
not a Twisted Web expert (I just play one on mailing lists ;).

> Most examples discussed lately has imported all needed modules explicitly at
> start up. My setup needs to be more dynamic.

I hope I've helped.

-Andrew.




From exarkun at intarweb.us  Tue Jun 24 22:26:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 22:26:21 -0400
Subject: [Twisted-Python] mainloop exception
Message-ID: <20030625022621.GA24154@meson.dyndns.org>

  Using conch:

exarkun at pyramid:~$ exit
logout
Traceback (most recent call last):
                                    File "/usr/local/bin/conch", line 32, in ?
                                                                                  run()
                                                                                         File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 176, in run
                                         reactor.run()
                                                        File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 123, in run
           self.mainLoop()
                            File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 134, in mainLoop
                                                                                                                               self.doIteration(t)
       --- <exception caught here> ---
                                        File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 439, in doSelect
                                                                                                                                           [], timeout)
            exceptions.ValueError: I/O operation on closed file
                                                               Connection to twistedmatrix.com closed.

  Reproducable, but not on every run on conch.  I am using connection
sharing (conch --noshell --fork), python2.3b1+, current CVS HEAD of Twisted. 
The process controlling the shared connection survives the exception.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030624/2731b81e/attachment.pgp 

From jml at ids.org.au  Tue Jun 24 23:26:35 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Wed, 25 Jun 2003 13:26:35 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <1056471632.6831.9.camel@biproc>; from lafou@wanadoo.fr on Wed, Jun 25, 2003 at 02:20:32 +1000
References: <20030625021734.GA12731@mumak.net> <1056471632.6831.9.camel@biproc>
Message-ID: <20030625032635.GC712@sting>

On 2003.06.25 02:20, Philippe Lafoucri?re wrote:
> On Wed, 2003-06-25 at 04:17, Jonathan Lange wrote:
> 
> The link is broken on your page JML. it points to
> http://www.twistedmatrix.com/users/jml/Issues-0.1a1.tar.gz

Fixed! Thanks.



From warner at lothar.com  Wed Jun 25 01:26:53 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 24 Jun 2003 22:26:53 -0700 (PDT)
Subject: [Twisted-Python] Re: CVS Tag
References: <BAY2-F127hxJKocJqj00000c37b@hotmail.com>
Message-ID: <20030624.222653.24671623.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> Is that the correct one?   Can I now just
> cvs update -d -P
> to continue getting the latest revisions?

That's what I use. When I check out a tree, I just do:

 cvs -d ... checkout Twisted

and then when I update, I do:

 cvs -z6 update -dP .

(the -z6 turns on compression, to conserve the limited upstream bandwidth of
our CVS server. Apart from that it's identical to your command).

It is conceivable (but I haven't been able to prove it) that updating with
-rHEAD sets some kind of sticky date which would effectively disable later
updates. In general, if I've been using tags and want to get rid of them, I
do:

 cvs -z6 update -A -dP .

which clears all sticky tags, both symbolic and date.

When I *do* use branch tags, I usually create a new tree which is
exclusively for that particular branch. If I keep switching back and forth
between branches, eventually I forget and then have to wonder where my
changes are going.

Finally, trees that have been checked out with date tags are effectively
read-only, since you can't check anything into them. The most you can do is
to create a patch from it and then apply that patch to a non-date-locked
tree.


cheers,
 -Brian



From lafou at wanadoo.fr  Wed Jun 25 02:45:25 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 25 Jun 2003 08:45:25 +0200
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <1056478307.6825.15.camel@biproc>
	 <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>
Message-ID: <1056523525.7693.17.camel@biproc>

> Issues probably works with 1.0.6alpha3. If you don't want to
> get CVS, get that.

yes, API Reference on front page points to current API (strange !?).

-- 
Philippe Lafoucri?re <lafou at wanadoo.fr>
InFuzzion




From miathan at goliath.darktech.org  Wed Jun 25 05:19:00 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Wed, 25 Jun 2003 11:19:00 +0200 (CEST)
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030625022702.6278.57219.Mailman@pyramid.twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>

> is a perfectly sane short RPY which will allow you to code properly.
> However, I tend to dislike this kind of solutions. While in CGI,
> this kind of strategy makes sense, in real web applications, it
> starts to break down. My vague memories of using HTML::Mason
> and OpenACS indicate that at one point I was so tired of remembering
> which parts were cached and which parts weren't that I actually
> did restart the web server whenever I wanted to test my changes.

It all starts to make sense again with servers that combine several
services into one application, especially if some involve persistent
connections.
You don't want to bounce offline all users currently using the IMAP and
IRC servers every time you make a small change to a web page.

Or, if you have a large application which takes serious time to startup,
the waiting gets you mad in no time.

> I usually do my web development with a web browser open, and whenever
> I change I restart the server, and reload the page. Moving from two
> clicks per change to one doesn't seem worth remembering what's
> cached and what isn't, sorry... :)

The rebuild() solution mentioned by Christopher Armstrong mostly takes
care of that.
On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
what I *really* disgusted in most J2EE implementations. I really hope
twisted is not going to enforce this.

Wladimir




From m at moshez.org  Wed Jun 25 05:36:45 2003
From: m at moshez.org (Moshe Zadka)
Date: 25 Jun 2003 09:36:45 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>
References: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>
Message-ID: <20030625093645.9546.qmail@green.zadka.com>

On Wed, 25 Jun 2003, "W.J." <miathan at goliath.darktech.org> wrote:

> It all starts to make sense again with servers that combine several
> services into one application, especially if some involve persistent
> connections.
> You don't want to bounce offline all users currently using the IMAP and
> IRC servers every time you make a small change to a web page.

If you're doing development on the live server the users are using,
bouncing them off every now and then is a good way to let them know
they are morons for using such a sketchy server.

> The rebuild() solution mentioned by Christopher Armstrong mostly takes
> care of that.

The rebuild() solution will probably consume most of the start-up time.

> On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
> what I *really* disgusted in most J2EE implementations. I really hope
> twisted is not going to enforce this.

Twisted is not about enforcement. Twisted is about mocking people who are
using the technology in non-optimal ways. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From mmoellenbeck at plus.de  Wed Jun 25 08:01:41 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Wed, 25 Jun 2003 14:01:41 +0200
Subject: [Twisted-Python] read form parameter inside a rpy-script
Message-ID: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>

Hi,

I try to read form-parameter inside a rpy-script.

Can anybody help me?

Thanks.

Martin Moellenbeck 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030625/ddd2994b/attachment.htm 

From andrew-twisted at puzzling.org  Wed Jun 25 08:41:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 22:41:03 +1000
Subject: [Twisted-Python] read form parameter inside a rpy-script
In-Reply-To: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>
References: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>
Message-ID: <20030625124103.GA12089@frobozz>

On Wed, Jun 25, 2003 at 02:01:41PM +0200, mmoellenbeck at plus.de wrote:
>    Hi,
> 
>    I try to read form-parameter inside a rpy-script.
> 
>    Can anybody help me?

Resource scripts have been a rather active topic of discussion on the list the
past few days -- you really should check the archives.  You probably don't want
to be using them, as explained by Moshe Zadka in this post:

    http://twistedmatrix.com/pipermail/twisted-python/2003-June/004693.html 

Regarding form parameters, you'll find them in the .args attribute of a
request.  A trivial example would be:

    from twisted.web.resource import Resource
    from twisted.web.microdom import escape
    
    class RequestArgResource(Resource):
        def render(self, request):
            return 'request.args: ' + escape(repr(request.args))

-Andrew.




From mmoellenbeck at plus.de  Wed Jun 25 09:42:08 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Wed, 25 Jun 2003 15:42:08 +0200
Subject: Antwort: Re: [Twisted-Python] read form parameter inside a rpy-script
Message-ID: <OF967D450D.1454E68A-ONC1256D50.004B2372@uz.tengelmann.de>

Thank you ;-)

Martin Moellenbeck 





An:     twisted-python at twistedmatrix.com
Kopie: 
 

Thema:  Re: [Twisted-Python] read form parameter inside a rpy-script

 
Andrew Bennetts <andrew-twisted at puzzling.org>
Gesendet von:
twisted-python-admin at twistedmatrix.com
25.06.2003 14:41
Bitte antworten an twisted-python






On Wed, Jun 25, 2003 at 02:01:41PM +0200, mmoellenbeck at plus.de wrote:
>    Hi,
> 
>    I try to read form-parameter inside a rpy-script.
> 
>    Can anybody help me?

Resource scripts have been a rather active topic of discussion on the list 
the
past few days -- you really should check the archives.  You probably don't 
want
to be using them, as explained by Moshe Zadka in this post:

    http://twistedmatrix.com/pipermail/twisted-python/2003-June/004693.html 

Regarding form parameters, you'll find them in the .args attribute of a
request.  A trivial example would be:

    from twisted.web.resource import Resource
    from twisted.web.microdom import escape
 
    class RequestArgResource(Resource):
        def render(self, request):
            return 'request.args: ' + escape(repr(request.args))

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030625/a6165416/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 47 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030625/a6165416/attachment.gif 

From miathan at goliath.darktech.org  Wed Jun 25 10:40:55 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Wed, 25 Jun 2003 16:40:55 +0200 (CEST)
Subject: [Twisted-Python] Re: Getting Stories Straight (RPYs)
In-Reply-To: <20030625113956.5524.82568.Mailman@pyramid.twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0306251621010.8620-100000@redbull.xs4all.nl>

> > You don't want to bounce offline all users currently using the IMAP and
> > IRC servers every time you make a small change to a web page.
>
> If you're doing development on the live server the users are using,
> bouncing them off every now and then is a good way to let them know
> they are morons for using such a sketchy server.

Agreed, users deserve to be kicked real hard once in a while, and
application updates are a socially accepted moment in that.

Very much in the same way that moving a chair or changing a lightbulb
is reason enough for kicking everyone out of the building.

...

> > The rebuild() solution mentioned by Christopher Armstrong mostly takes
> > care of that.
>
> The rebuild() solution will probably consume most of the start-up time.

You don't have to rebuild all, just the part that has changed, which is
the presentation layer, most of the time.

You're missing the point. Even live servers sometimes have bugs that need
to fixed *fast*, and customers love you if you can roll in change requests
quickly without bringing down everything.

> > On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
> > what I *really* disgusted in most J2EE implementations. I really hope
> > twisted is not going to enforce this.
>
> Twisted is not about enforcement. Twisted is about mocking people who are
> using the technology in non-optimal ways.

It is good to be sceptical of people their coding practices.

But the 'one true way' is still to be found.

Wladimir




From typo at soniq.net  Wed Jun 25 11:49:56 2003
From: typo at soniq.net (Paul Boehm)
Date: Wed, 25 Jun 2003 17:49:56 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] Fix call to non-existent function, remove unused import
In-Reply-To: <E19V9VC-00027I-00@pyramid.twistedmatrix.com>
References: <E19V9VC-00027I-00@pyramid.twistedmatrix.com>
Message-ID: <20030625154956.GA16195@soniq.net>

On Wed, Jun 25, 2003 at 07:35:54AM -0500, spiv CVS wrote:
> Index: Twisted/twisted/web/html.py
> diff -u Twisted/twisted/web/html.py:1.16 Twisted/twisted/web/html.py:1.17
> --- Twisted/twisted/web/html.py:1.16	Thu Jun 12 19:28:34 2003
> +++ Twisted/twisted/web/html.py	Wed Jun 25 07:35:53 2003
[...]
>  def PRE(text):
>      "Wrap <pre> tags around some text and escape it with web.escapehtml."
> -    return "<pre>"+escapehtml(text)+"</pre>"
> +    return "<pre>"+escape(text)+"</pre>"
[...]

documentation for PRE is out of synch



From glyph at twistedmatrix.com  Wed Jun 25 15:22:37 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Jun 2003 14:22:37 -0500
Subject: [Twisted-Python] Re: Getting Stories Straight (RPYs)
In-Reply-To: <Pine.LNX.4.44.0306251621010.8620-100000@redbull.xs4all.nl>
Message-ID: <61BB7710-A742-11D7-8924-000393C9700E@twistedmatrix.com>

On Wednesday, June 25, 2003, at 09:40 AM, W.J. wrote:

>>> You don't want to bounce offline all users currently using the IMAP 
>>> and
>>> IRC servers every time you make a small change to a web page.
>>
>> If you're doing development on the live server the users are using,
>> bouncing them off every now and then is a good way to let them know
>> they are morons for using such a sketchy server.
>
> Very much in the same way that moving a chair or changing a lightbulb
> is reason enough for kicking everyone out of the building.

I think there is a slight miscommunication in terms of what is meant by 
'every time you make a small change'.  I get the impression that what 
is being said here is:

	<moshez> you should not be doing your development on a live server.
	<W.J.> so you're saying I shouldn't be able to load updates on a live 
server?

One of Twisted's original design goals was _fast server restart_, 
because restarting the server is pretty much inevitable if you want to 
make substantial changes; I wanted to make it super-easy for developers 
to bounce their servers every minute while making minor changes.  I 
even had a 'bounce my Twisted server' key in emacs for a while when I 
was working on a more deeply interactive system than I am now.  This 
was based on some pretty bitter experience with a server that I was 
coding on at the time which took almost an hour to start up.  EJB 
servers also have this problem; it's not just that you have to restart 
them, it's that you have to _wait_ when they restart.

Another design goal is _restart-free code reload_, which you can see 
still in twisted.python.rebuild, because I know there are times when a 
deployed server needs to be fixed _right now_ and although it can lose 
a few seconds of time, it could not brook an interruption of service.

The choice of how you do your development with these tools is really a 
matter of taste, and I don't have any feelings about it one way or 
another; however, deployment is contingent upon how reliable restart 
vs. reload is.

You should NEVER make live server code changes without first setting up 
a test environment, making the changes, testing the changes, and then 
bringing up an OLD server environment and testing the upgrade path from 
one version to the other however you intend to do it live.

Python's reloading is handy, but dangerous, and Twisted's 'rebuild' 
utility adds to both the power and the danger.  If you use Python's 
reload() thinking it will simply update your server to the most recent 
code revision, you will be in for a nasty shock when you find that 
objects using both the new AND the old code are still around, 
isinstance() will fail sometimes for instances of a particular class, 
and tracebacks have incorrect code in them.

rebuild() 'does more' for you, however, it can still be surprising.  
You may find that objects which were previously initialized to a 
consistent state are now missing attributes which the new code expects 
the initializer to set.  You may find that objects that were old-style 
and are now new-style simply didn't reload.  It has been too long since 
I've looked at the code to remember every dark corner, but there are 
definitely things that can be made to fail.  You have to be careful 
with what kinds of changes you load, and understand how the change will 
interact with the existing code and objects you're updating.

So, despite the conveniences that Twisted can provide for you, you 
can't escape the inevitable software reality that "Development", 
"Test", and "Production" should be three completely separate 
installations on which you can perform upgrades independently, in a way 
suitable to their purpose.  Anything less will result in an unstable 
production environment where, whether you like it or not, your users 
will all fall out of a 30th story window every time you change a 
certain lightbulb.




From iko at cd.chalmers.se  Wed Jun 25 17:16:04 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Wed, 25 Jun 2003 23:16:04 +0200
Subject: [Twisted-Python] Hacking imap 
In-Reply-To: <20030624203038.GB22074@meson.dyndns.org> 
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> <200306241128.h5OBSgk12750@haddock.cd.chalmers.se> <20030624203038.GB22074@meson.dyndns.org> 
Message-ID: <200306252116.h5PLG4k24185@haddock.cd.chalmers.se>

In a message of Tue, 24 Jun 2003 16:30:38 EDT, Jp Calderone writes:
>> So instead of naming the handler functions <state>_<COMMAND>, I'll have
>> <state>_<COMMAND> be a tuple containing ( <handler_function>,
>> <arg_parser>, <arg_parser>, ...) and then call the handler_function
>> with the results of the arg_parser functions.
>
>  This sounds like a great approach.  If I could make a request (and maybe
>you were going to do this anway), it would be nice if the arg_parsers could
>work incrementally: this is mostly of use when receiving an actual message,

That was the idea. Each arg_parser gets (what's left of) the current line,
and if they need more data, they'll have to arrange for reading it.
(Otherwise the easy fix would have been to have lineReceived() read
literals as well. I tried this approach first, but I didn't like it.)

>  Maybe this means <arg_parser> should be a factory that returns a parser,
>so that state can be more easily managed when parsing the full
>list-expression returned with from a fetch command.

That's a thought. I'll keep it in mind.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From don at motorola.com  Wed Jun 25 17:50:57 2003
From: don at motorola.com (Don Hiatt)
Date: Wed, 25 Jun 2003 16:50:57 -0500
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <20030625020011.GB11072@frobozz>
Message-ID: <FPEBLIAFGDEEOHHAGOKBOENLCBAA.don@motorola.com>

This is exactly what I was looking for, thanks Andrew!

Cheers,

don

P.S. Thanks also for your previous hint on restricting the web
server to single connections. 

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Andrew
Bennetts
Sent: Tuesday, June 24, 2003 9:00 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Help creating a client for a custom
protocol


On Tue, Jun 24, 2003 at 06:13:29PM -0500, Don Hiatt wrote:
> I have a custom server running a byte-oriented protocol
> (sockets, written in C) and would like to use twisted to implement
> the client. I see from looking at the "simpleclient" how


A key part is the 'struct' module in Python's standard library, which can
convert bytes to numbers, and so forth.  Take a look at the source to
twisted.protocols.basic.Int32Receiver, which receives strings prefixed by a
32-bit length.  There's really nothing to it :)



From andrew-twisted at puzzling.org  Wed Jun 25 20:59:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 10:59:05 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Fix call to non-existent function, remove unused import
In-Reply-To: <20030625154956.GA16195@soniq.net>
References: <E19V9VC-00027I-00@pyramid.twistedmatrix.com> <20030625154956.GA16195@soniq.net>
Message-ID: <20030626005905.GA16989@frobozz>

On Wed, Jun 25, 2003 at 05:49:56PM +0200, Paul Boehm wrote:
> On Wed, Jun 25, 2003 at 07:35:54AM -0500, spiv CVS wrote:
> [...]
> >  def PRE(text):
> >      "Wrap <pre> tags around some text and escape it with web.escapehtml."
> > -    return "<pre>"+escapehtml(text)+"</pre>"
> > +    return "<pre>"+escape(text)+"</pre>"
> [...]
> 
> documentation for PRE is out of synch

Oops, yeah.  Duh.  Fixed :)

-Andrew.




From cce at clarkevans.com  Thu Jun 26 02:09:17 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 26 Jun 2003 06:09:17 +0000
Subject: [Twisted-Python] flow is now in twisted
Message-ID: <20030626060917.GA62774@doublegemini.com>

As of this early morning, the flow module has moved from the
sandbox into twisted.flow; for those using the sandbox version,
simply change:

   import flow

to

   from twisted.flow import flow


The only change was to break flow.py into several chunks

   flow/base          exceptions and abstract base classes

   flow/stage         public stages such as Zip, Merge, Callback, etc.

   flow/controller    controllers, such as Block and Deferred

   flow/threads       threading support and QueryIterator

   flow/protocol      makeProtocol and Protocol

However, to make it easy, all of the public classes in
the above files have been imported into a 'mega' module:
 
   flow/flow.py          This is just a file which imports
                         public objects from the other files.


On the TODO list includes:

   1.  Link flow to what ever the next generation Consumer/Producer
       interfaces are so that flow just slips in.

   2.  Add more to flow/protocol to support various sorts of
       filters on protocols (such as an equivalent to LineReader)

   3.  More documentation (can there ever be enough?)

   4.  A "C" version, when the time is ripe; this will mostly
       focus on two functions: Stage.next() and _Iterator._yield()

In the next 3 months I won't have much time to throw at this, but
I am always open to suggestions and improvements.

Extra thank-yous to Etrepum, Itamar, Exarkun, Radix, Glyph, and Pahan.

Share and Enjoy!

Clark



From 2002 at weholt.org  Thu Jun 26 03:08:30 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 09:08:30 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
Message-ID: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>

I want to start a webserver which have object ( or whatever ) available in
all Resource-instances running in that server which holds common information
for the entire site. What's the appropriate module to use for this;
Application, Factory ??

In the same server I need to start tasks ( ie. run functions ) at different
intervals. These function-calls can take some time ( they can fetch files
from the net, scan the local filesystem etc. ) so I guess I need threads,
deferred or something similar. These function-calls must return a result and
update the persistent object mentioned above.

Can anybody show me a very basic example on how to do this?

Thanks.

Best regards,
Thomas




From glyph at twistedmatrix.com  Thu Jun 26 04:05:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jun 2003 03:05:55 -0500
Subject: [Twisted-Python] Get the data while it's fresh
Message-ID: <0361DFB4-A7AD-11D7-8924-000393C9700E@twistedmatrix.com>

While the #1 article here is still about Twisted, I just wanted to link:

	http://www.ibm.com/developerworks

permalink for archive readers:

	http://www-106.ibm.com/developerworks/linux/library/l-twist1.html

Maybe if somebody could post this to slashdot as well, I will actually 
be /physically unable/ to access the internet!  Hooray!

(Many thanks to Dr. Mertz for this excellent article.)




From andrew-twisted at puzzling.org  Thu Jun 26 04:26:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 18:26:23 +1000
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
In-Reply-To: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>
Message-ID: <20030626082623.GD17335@frobozz>

On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:
> I want to start a webserver which have object ( or whatever ) available in
> all Resource-instances running in that server which holds common information
> for the entire site. What's the appropriate module to use for this;
> Application, Factory ??

I'll let someone else answer this, but I think you want a Service.

> In the same server I need to start tasks ( ie. run functions ) at different
> intervals. These function-calls can take some time ( they can fetch files
> from the net, scan the local filesystem etc. ) so I guess I need threads,
> deferred or something similar. These function-calls must return a result and
> update the persistent object mentioned above.

(Btw, you seem to think Deferreds make blocking code magically non-blocking.
They don't -- they're actually very straightforward and non-magical.)

For the "fetch files from the net", you don't need threads.  Just do
something like (warning -- untested code):

    from twisted.web.client import getPage
    from twisted.internet import reactor
    from twisted.python import log

    refreshInterval = 30

    def periodicFileFetch(url):
        d = getPage(url)
        # Process the page, and "update the persistent object"
        d.addCallback(processPage).addCallback(updateObject)

        # Log any errors in downloading or processing
        d.addErrback(log.err)

        # Reschedule this function
        d.addBoth(reactor.callLater, refreshInterval, periodicFileFetch, url)

    def processPage(x):
        "Your code goes here!"
    def updateObject(x):
        "Your code goes here!"

    reactor.callLater(refreshInterval, periodicFileFetch, url)

For scanning the local filesystem, you could treat it like one big blocking
operation, or you could break it into small chunks (i.e. one directory at a
time), and process each chunk with callLater(0, processNextChunk).  For the
sake of discussion, I'm going to choose a thread :)

The trick with threads is to avoid interacting directly with *any* of your
existing objects that your main event loop uses.  Disregarding this advice
will lead to race conditions, and thus horrid, horrid bugs.  So, we scan for
files in a thread, but to make it safe we send the instruction to do work to
the thread via a Queue.Queue, and make sure it returns the results to the
deferred via reactor.callFromThread.

    # WARNING: More completely untested code.

    from twisted.python import log, failure
    from twisted.internet import reactor, defer
    import Queue, threading

    refreshInterval = 30

    def processEvents(queue):
        """A thread that processes events. 
        
        It receives (deferred, function) 2-tuples from a Queue.Queue, runs
        the function, and fires the deferred with the result.
        """
        while 1:
            try:
                deferred, func = queue.get()
            except:
                log.err()
                continue
            try:
                reactor.callFromThread(deferred.callback, func())
            except Exception, e:
                reactor.callFromThread(deferred.errback, failure.Failure(e))

    def periodicFileScanner(queue, path):
        # Tell the thread it's time to do some work
        d = defer.Deferred()
        q.put((d, lambda: scanFiles(path)))

        # Arrange for the result/error to be dealt with
        d.addCallback(updateObject)
        d.addErrback(log.err)

        # Schedule this fun merry-go-round to happen again
        d.addBoth(reactor.callLater, refreshInterval, periodicFileScanner,
                  queue, path)

    def initFileScanning(path):
        q = Queue.Queue()
        t = threading.Thread(target=processEvents, args=(q,))
        t.start()
        reactor.callLater(refreshInterval, periodicFileScanner, q, path)

    def scanFiles(path):
        "Your code goes here!"
    def updateObject(x):
        "Your code goes here!"
        
    initFileScanning('/path')

This is actually more-or-less what twisted.internet.threads.deferToThread
does (once you dig deep enough), so you probably want to use it rather than
my completely untested code.  I've written it out explicitly in the hope
that you'll have a better understanding of how it all works.  

Note also how Deferreds are just messengers -- they don't do any interesting
work beyond calling callbacks when they're told to.

> Can anybody show me a very basic example on how to do this?

I hope I've my example code is basic enough that it makes sense for you --
let us know if you're still uncertain about anything.

-Andrew.




From jjanecek at telusplanet.net  Thu Jun 26 04:29:35 2003
From: jjanecek at telusplanet.net (John Janecek)
Date: Thu, 26 Jun 2003 02:29:35 -0600
Subject: [Twisted-Python] Using Guard and Woven (Newbie)
Message-ID: <5.1.0.14.2.20030626022354.00b33b40@mail.telusplanet.net>

I have been examining Twisted and it seems excellent.
The only problem is that twisted seems to require an adjustment in my 
thinking :)

Are there any examples somewhere on how to use.

Module twisted.web.woven.guard
and
Module twisted.web.guard

I am not too good with explanations and just prefer the code so i can 
figure out how it works
I have searched the web but obviously I am looking in the wrong places :)

basically right now what i would like to do is modify the Words server web 
interface
so it requires a username/password to view it.

Would it be advantagous/possible to like convert it to a woven server, or 
am i out to lunch :)


Thanx in advance for reajusting my thinking ;)





From lafou at wanadoo.fr  Thu Jun 26 05:07:13 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 26 Jun 2003 11:07:13 +0200
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <20030626060917.GA62774@doublegemini.com>
References: <20030626060917.GA62774@doublegemini.com>
Message-ID: <1056618433.25387.2.camel@biproc>

On Thu, 2003-06-26 at 08:09, Clark C. Evans wrote:
> As of this early morning, the flow module has moved from the
> sandbox into twisted.flow; 

Congratulations Clarck. You've done such great work on flow, I enjoy it.
Don't forget to put your doc in the howto section.

Philippe




From andrew-twisted at puzzling.org  Thu Jun 26 05:19:44 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 19:19:44 +1000
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <1056618433.25387.2.camel@biproc>
References: <20030626060917.GA62774@doublegemini.com> <1056618433.25387.2.camel@biproc>
Message-ID: <20030626091944.GG17335@frobozz>

On Thu, Jun 26, 2003 at 11:07:13AM +0200, Philippe Lafoucri?re wrote:
> On Thu, 2003-06-26 at 08:09, Clark C. Evans wrote:
> > As of this early morning, the flow module has moved from the
> > sandbox into twisted.flow; 
> 
> Congratulations Clarck. You've done such great work on flow, I enjoy it.
> Don't forget to put your doc in the howto section.

He already did :)

Fresh from the buildbot:
    http://twistedmatrix.com/users/warner/doc-latest/howto/flow.xhtml

-Andrew.




From lafou at wanadoo.fr  Thu Jun 26 06:01:45 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 26 Jun 2003 12:01:45 +0200
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <20030626091944.GG17335@frobozz>
References: <20030626060917.GA62774@doublegemini.com>
	 <1056618433.25387.2.camel@biproc>  <20030626091944.GG17335@frobozz>
Message-ID: <1056621704.2225.0.camel@biproc>

> He already did :)
> 
> Fresh from the buildbot:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/flow.xhtml

Wonderfull :)




From jml at ids.org.au  Thu Jun 26 18:05:43 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 27 Jun 2003 08:05:43 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <200306261420.51157.richardjones@optushome.com.au>
References: <20030625021734.GA12731@mumak.net> <200306261420.51157.richardjones@optushome.com.au>
Message-ID: <20030626220543.GA18733@mumak.net>

On Thu, Jun 26, 2003 at 02:20:51PM +1000, Richard Jones wrote:
Content-Description: signed data
> On Wednesday 25 June 2003 12:17 pm, Jonathan Lange wrote:
> > Issues, a issue tracking system built on Twisted technology, has been
> > released for the first time today!
> 
> Could I ask why you've developed this from scratch rather than use Roundup's 
> core?
> 

Sure. The answer is that I didn't know about it.

No one has told me about Roundup, and it didn't stand out in any of my previous
investigations into bug trackers (some of which were more than cursory).

I guess I'll have to investigate Roundup further.

Oops,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030627/a55b0694/attachment.pgp 

From 2002 at weholt.org  Thu Jun 26 07:31:18 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 13:31:18 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz>
Message-ID: <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>

----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, June 26, 2003 10:26 AM
Subject: Re: [Twisted-Python] Storing site-wide information and scheduling
tasks


> On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:
> > I want to start a webserver which have object ( or whatever ) available
in
> > all Resource-instances running in that server which holds common
information
> > for the entire site. What's the appropriate module to use for this;
> > Application, Factory ??
>
> I'll let someone else answer this, but I think you want a Service.

I'll look at the API-reference, but I think Service is somewhat missing from
the docs. Or .. ???

>
> > In the same server I need to start tasks ( ie. run functions ) at
different
> > intervals. These function-calls can take some time ( they can fetch
files
> > from the net, scan the local filesystem etc. ) so I guess I need
threads,
> > deferred or something similar. These function-calls must return a result
and
> > update the persistent object mentioned above.
>
> (Btw, you seem to think Deferreds make blocking code magically
non-blocking.
> They don't -- they're actually very straightforward and non-magical.)
>
> For the "fetch files from the net", you don't need threads.  Just do
> something like (warning -- untested code):
>
>     from twisted.web.client import getPage
>     from twisted.internet import reactor
>     from twisted.python import log
>
>     refreshInterval = 30
>
>     def periodicFileFetch(url):
>         d = getPage(url)
>         # Process the page, and "update the persistent object"
>         d.addCallback(processPage).addCallback(updateObject)
>
>         # Log any errors in downloading or processing
>         d.addErrback(log.err)
>
>         # Reschedule this function
>         d.addBoth(reactor.callLater, refreshInterval, periodicFileFetch,
url)
>
>     def processPage(x):
>         "Your code goes here!"
>     def updateObject(x):
>         "Your code goes here!"
>
>     reactor.callLater(refreshInterval, periodicFileFetch, url)
>

Can I call reactor.callLater anywhere in my code, inside a running
Webserver? Actually, I'll have a list of objects, each  having a execute
method, and iterate thru the list for instance once a minute, call the
objects-execute method and it will decide if it is configured to start once
a minute, or once an hour. It's not a specified number of functions I want
to call. I want users to be able to put a module into a folder, the folder
will be scanned at startup of the webserver and the classes in that module
will be created instances of and put in the mentioned list.

Another question about getPage; I'll probably have a list of urls too. Will
getPage work asynch or in serial-mode?

> For scanning the local filesystem, you could treat it like one big
blocking
> operation, or you could break it into small chunks (i.e. one directory at
a
> time), and process each chunk with callLater(0, processNextChunk).  For
the
> sake of discussion, I'm going to choose a thread :)

Again, I'll have to look into callLater in the docs, but this will also just
be one of many possible tasks the user has defined.

>
> The trick with threads is to avoid interacting directly with *any* of your
> existing objects that your main event loop uses.  Disregarding this advice
> will lead to race conditions, and thus horrid, horrid bugs.  So, we scan
for
> files in a thread, but to make it safe we send the instruction to do work
to
> the thread via a Queue.Queue, and make sure it returns the results to the
> deferred via reactor.callFromThread.
>
>     # WARNING: More completely untested code.
>
>     from twisted.python import log, failure
>     from twisted.internet import reactor, defer
>     import Queue, threading
>
>     refreshInterval = 30
>
>     def processEvents(queue):
>         """A thread that processes events.
>
>         It receives (deferred, function) 2-tuples from a Queue.Queue, runs
>         the function, and fires the deferred with the result.
>         """
>         while 1:
>             try:
>                 deferred, func = queue.get()
>             except:
>                 log.err()
>                 continue
>             try:
>                 reactor.callFromThread(deferred.callback, func())
>             except Exception, e:
>                 reactor.callFromThread(deferred.errback,
failure.Failure(e))
>
>     def periodicFileScanner(queue, path):
>         # Tell the thread it's time to do some work
>         d = defer.Deferred()
>         q.put((d, lambda: scanFiles(path)))
>
>         # Arrange for the result/error to be dealt with
>         d.addCallback(updateObject)
>         d.addErrback(log.err)
>
>         # Schedule this fun merry-go-round to happen again
>         d.addBoth(reactor.callLater, refreshInterval, periodicFileScanner,
>                   queue, path)
>
>     def initFileScanning(path):
>         q = Queue.Queue()
>         t = threading.Thread(target=processEvents, args=(q,))
>         t.start()
>         reactor.callLater(refreshInterval, periodicFileScanner, q, path)
>
>     def scanFiles(path):
>         "Your code goes here!"
>     def updateObject(x):
>         "Your code goes here!"
>
>     initFileScanning('/path')
>
> This is actually more-or-less what twisted.internet.threads.deferToThread
> does (once you dig deep enough), so you probably want to use it rather
than
> my completely untested code.  I've written it out explicitly in the hope
> that you'll have a better understanding of how it all works.
>
> Note also how Deferreds are just messengers -- they don't do any
interesting
> work beyond calling callbacks when they're told to.
>
> > Can anybody show me a very basic example on how to do this?
>
> I hope I've my example code is basic enough that it makes sense for you --
> let us know if you're still uncertain about anything.

Thanks for the code, and even though I've commented it abit already I'll try
to get a better look at it and test some things later tonight. Hopefully
some of my comments has cleared things up too.

If anybody's interested this is what I'm trying to develop; a webserver for
blogging, image-galleries, messaging ( perhaps with interfaces to IRC and
jabber, hopefully ICQ too), news aggregator/syndication and distributed/p2p
content exchange ( not just filesharing, more like creating a virtual
cluster of webservers and get some communication going between them so they
can discover new nodes and query nodes for information ). It's a crossover
between Radio.Userland/MovableType and Gnutella ( I won't use the
gnutella-protocoll, just let the server use FOAF-files, which can contain
info about other nodes, which can provide a FOAF-file etc. and base
node-discovery on information in FOAF-files. ) HEP Messaging Server is
somewhat similar and has been one source of inspiration so far, both in
concept and code.

One of the tasks I have to do is fetch RDF/RSS files for syndication. But I
want to make a dynamic system where a user can just subclass/implement a
specified class/interface and put his module into a specified folder and it
will automatically be imported and run from the server.

Ok, this was a terrible mess of info, but hopefully it makes some sense. Any
comments, hints, ideas etc. would be very appreciated.

Thomas




From andrew-twisted at puzzling.org  Thu Jun 26 08:43:31 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 22:43:31 +1000
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
In-Reply-To: <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz> <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>
Message-ID: <20030626124331.GA18207@frobozz>

On Thu, Jun 26, 2003 at 01:31:18PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Andrew wrote:
> > On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:

> > > In the same server I need to start tasks ( ie. run functions ) at
> > > different intervals. These function-calls can take some time ( they
> > > can fetch files from the net, scan the local filesystem etc. ) so I
> > > guess I need threads, deferred or something similar. These
> > > function-calls must return a result and update the persistent object
> > > mentioned above.
[...]
> >
> > For the "fetch files from the net", you don't need threads.  Just do
> > something like (warning -- untested code):
> >
[..snip code..]
> >
> >     reactor.callLater(refreshInterval, periodicFileFetch, url)
> >
> 
> Can I call reactor.callLater anywhere in my code, inside a running
> Webserver? Actually, I'll have a list of objects, each  having a execute
> method, and iterate thru the list for instance once a minute, call the
> objects-execute method and it will decide if it is configured to start once
> a minute, or once an hour. It's not a specified number of functions I want
> to call. I want users to be able to put a module into a folder, the folder
> will be scanned at startup of the webserver and the classes in that module
> will be created instances of and put in the mentioned list.

You can call reactor.callLater whenever you like.  It simply schedules a
function to be run by the reactor.  See:
    http://twistedmatrix.com/documents/howto/time

> Another question about getPage; I'll probably have a list of urls too. Will
> getPage work asynch or in serial-mode?

getPage works asynchronously, that's why it returns a Deferred.

If it was "serial", i.e. blocking, there wouldn't be much point returning a
Deferred -- it could just return the result immediately.

However, if the result of a function might take a while, but the function
wants to be asynchronous (so it doesn't hold up the rest of Twisted from
doing its stuff), it will return a Deferred -- i.e. a result that hasn't
arrived yet (hence the word "deferred" :).  It's really just a placeholder
for a result that's still to come.

> > For scanning the local filesystem, you could treat it like one big
> > blocking operation, or you could break it into small chunks (i.e. one
> > directory at a time), and process each chunk with callLater(0,
> > processNextChunk).  For the sake of discussion, I'm going to choose a
> > thread :)
> 
> Again, I'll have to look into callLater in the docs, but this will also
> just be one of many possible tasks the user has defined.

Note that like callLater isn't very special.  It simply says to the reactor
"in N seconds time, I want you to run this function".  The reactor will then
run that function in around N seconds time (possibly a little later, but not
sooner, iirc).  Like other events the reactor processes, like network
traffic, this all happens in the main thread.  So you can think of it as
being the same as if e.g. a dataReceived handler got triggered at the
appropriate time, and it called your function.  Anyway, read that document I
gave an URL to, and it should all become clear :)

Are you intending on pre-defining all the tasks the user might want to use,
or are you expecting users to want to plugin random code?

> >     # WARNING: More completely untested code.
[...]
> >
> > This is actually more-or-less what twisted.internet.threads.deferToThread
> > does (once you dig deep enough), so you probably want to use it rather
> > than my completely untested code.  I've written it out explicitly in the
> > hope that you'll have a better understanding of how it all works.

(I just want to re-emphasise that using deferToThread rather than my code is
probably a good idea)

> Thanks for the code, and even though I've commented it abit already I'll
> try to get a better look at it and test some things later tonight.
> Hopefully some of my comments has cleared things up too.
> 
> If anybody's interested this is what I'm trying to develop; a webserver
[..snip the usual omni-uber-server-that-will-take-over-the-world thing that
   Twisted does so well ;) ..]
> 
> One of the tasks I have to do is fetch RDF/RSS files for syndication. But
> I want to make a dynamic system where a user can just subclass/implement a
> specified class/interface and put his module into a specified folder and
> it will automatically be imported and run from the server.

Ok.  A couple of things...

First, Twisted already has a system for dealing with plugins (it's how mktap
works!), so you possibly want to re-use that :)   See twisted.python.plugins

Second, the two snippets of example code I've given you could easily be
adapted into a standard interface:

    from twisted.python.components import Interface

    class IUberServerPlugin(Interface):
        def startPlugin(self):
            """Called to start the plugin.

            This will typically be called when the program starts, similarly
            to e.g. twisted.internet.protocols.Factory.startFactory, or
            twisted.internet.app.ApplicationService.startService.
            """

        def stopPlugin(self):
            """Called to stop the plugin.

            Typically this will be called on shutdown, e.g. like stopFactory
            or stopService.
            """

        # ...etc...

So, my earlier code for getting a page could become something like:

    from twisted.web.client import getPage
    from twisted.internet import reactor
    from twisted.python import log

    from uberserver.interfaces import IUberServerPlugin   # ;)

    class PageFetchPlugin:
        __implements__ = (IUberServerPlugin,)
        
        def __init__(self, uberServer, url, refreshInterval=30):
            self.uberServer = uberServer
            self.url = url
            self.refreshInterval = refreshInterval

        def startPlugin(self):
            reactor.callLater(refreshInterval, self.periodicFileFetch)

        def periodicFileFetch(self):
            d = getPage(self.url)

            # Process the page, (e.g. to extract URLs, or something)
            d.addCallback(self.processPage)

            # Update the central uberServer
            d.addCallback(self.uberServer.updateObject)

            # Log any errors in downloading or processing
            d.addErrback(log.err)

            # Reschedule this function
            d.addBoth(reactor.callLater, self.refreshInterval, 
                      self.periodicFileFetch)

        def processPage(self):
            """Your code *still* goes here ;)"""


I hope I've given you some helpful ideas! :)

-Andrew.




From richard at commonground.com.au  Thu Jun 26 08:48:31 2003
From: richard at commonground.com.au (Richard Jones)
Date: Thu, 26 Jun 2003 22:48:31 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030626220543.GA18733@mumak.net>
Message-ID: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday, June 27, 2003, at 08:05  AM, Jonathan
> No one has told me about Roundup, and it didn't stand out in any of my 
> previous
> investigations into bug trackers (some of which were more than 
> cursory).
>
> I guess I'll have to investigate Roundup further.

I posted about developing a twisted frontend to Roundup a while ago, I 
guess you a) weren't subscribed then or b) missed it :)

I've been told that developing a front-end will be a doddle - similar 
to Roundup's current HTTPServer (roundup-server) frontend. That'll get 
you going right now.

I believe the backend will need a little more attention to make it play 
nicely with the async nature of twisted (speaking from my basic 
knowledge of twisted here). That should be pretty easy to do too - the 
backend has fairly simple requirements. Anthony Baxter's looking into 
an Oracle backend, which would rock :)


    Richard
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE++uumrGisBEHG6TARArNvAJ0epYWpRwIal4JPuToKz8Ebxe7GzgCdFX+n
trhCqm90o3xW0nZp9kctc70=
=8ZV/
-----END PGP SIGNATURE-----




From 2002 at weholt.org  Thu Jun 26 09:50:22 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 15:50:22 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz> <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no> <20030626124331.GA18207@frobozz>
Message-ID: <000701c33be9$e35c6d90$3ba8a8c0@gatsoft.no>

[snip]

> Are you intending on pre-defining all the tasks the user might want to
use,
> or are you expecting users to want to plugin random code?

What I'm making now is a sceleton for a IMHO *very* dynamic server :
1. pages ( ie. Resource-classes ) will be loaded at startup. They're located
in a specific folder. Nothing will be hardcoded. Each module can have
N-number of classes subclassing Resource and if they have a render-method it
will be added to the server. Something like :
/pages/test.py -> contains classes hello and goodbye which again have a
render method, will become available on the server as /test/hello.html and
/test/goddbye.html
I'm writing my own class to produce the content, which takes request,
response and server as parameter to the render-method, where server is a
persistent-data-holder and response is a object in which you store content,
content-type etc. which again will be used to produce the actual content
sent to server. Using request.write is for mye counter-intuitive, since the
server should be working on a response to send back. Just a thought. This
point might need some code examples to clarify. I'll try and make some code
available online later.

2. services. Like mentioned earlier webservices implemented in both xml-rpc
and soap. Define folder, it has a class of some sort with a lot of
rpc_<method-name> in it. I want to find some way of mapping those methods in
a generic XML-RCP and SOAP-resource so the server can respond to both type
of calls, but the definition/implementation of the method is stored in one
class, one time.

3. tasks. Once again, this will subclass one class and be in a seperate
folder, scanned at startup and run at times specified in the source-code of
the task, or better, in a config someplace.

[snip lots of cool-looking code I'll try as soon as this workday is over
:-) ]

Thanks alot for your help so far. I'll try and get some code online which
will make it easier to understand what I'm looking for.

Best regards,
Thomas




From anthony at interlink.com.au  Thu Jun 26 10:07:04 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 27 Jun 2003 00:07:04 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release 
In-Reply-To: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au> 
Message-ID: <200306261407.h5QE74m2025382@localhost.localdomain>

>>> Richard Jones wrote
> I believe the backend will need a little more attention to make it play 
> nicely with the async nature of twisted (speaking from my basic 
> knowledge of twisted here). That should be pretty easy to do too - the 
> backend has fairly simple requirements. Anthony Baxter's looking into 
> an Oracle backend, which would rock :)

I'm still working on the design issues - trying to de-serialise the hyperdb
code...

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From mesozoic at polynode.com  Thu Jun 26 12:45:56 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 26 Jun 2003 12:45:56 -0400
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
Message-ID: <20030626164556.GA2373@polynode.com>

I'm using Debian sarge for my server, with twisted-web and twisted-python,
and until recently was very happy at never having to touch Apache again.

Now it's all dead.

I did a standard 'apt-get upgrade', which moved me up to twisted-python
version 1.0.5+1.0.6rc2.  I am running a server thusly:

mktap web --path ./docroot --allow-ignore-ext --logfile ./web.log

That's all.  No more.  And when I browse to http://mysite/, instead of
serving up 'index.html' (which exists), it endlessly redirects, with my log
files piling up with requests for http://mysite/////////////////////

Now, if the docroot directory is _empty_, or if it has no index files, it
displays a directory listing normally.  So it seems the problem is only when
returning an index file.

Additionally, navigating to http://mysite/index.html works fine.  It's only
when you have http://mysite/ that things get weird.

When I signed up for Debian 'unstable', this isn't quite what I expected ;)

Help?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From danny.milo at gmx.net  Thu Jun 26 15:23:15 2003
From: danny.milo at gmx.net (Danny)
Date: 26 Jun 2003 21:23:15 +0200
Subject: [Twisted-Python] Want CVS Write Access
Message-ID: <1056655394.21648.7.camel@pyramid.niea.at>

Hi!

I'm requesting CVS Write Access to twisted repository because I want to
work on stuff at twisted/protocols/jabber.py and multiple stuff in the
twisted/im directory :)

Also, if the twisted.im is currently unmaintained, I want to offer
myself as a sacrif... uhm maintainer of the im stuff :)

Also, which cvs tags are in use and should be honored etc ?

@ Moshez : yah yah sorry yadda yadda :) I'm very late :)

cheers,
  Danny





From glyph at twistedmatrix.com  Thu Jun 26 15:58:32 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jun 2003 14:58:32 -0500
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030626164556.GA2373@polynode.com>
Message-ID: <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>

On Thursday, June 26, 2003, at 11:45 AM, Alex Levy wrote:

> it endlessly redirects, with my log files piling up with requests for 
> http://mysite/////////////////////

!@#!@%$~!

I thought this was just spiv's bug, but I just had a look in 
twisted.web.static.File.  When did it get this bad?  Is this my fault? 
:-)  getChild() and render() are both _disasters_, which look like 
they've been hacked on by in excess of 10 people who didn't really 
understand what they're doing.  I can't immediately unravel it enough 
to get a bugfix in, and there are no tests.

I am pulling the emergency brake on the release until static.File has 
tests and they pass.  I would _really_ like it if someone could take 
the time to eliminate PathReferenceAcquisitionContext as well, since 
this is a major part of the confusion and it violates a central 
contract in twisted.web.




From syver-en at online.no  Thu Jun 26 17:03:10 2003
From: syver-en at online.no (Syver Enstad)
Date: 26 Jun 2003 23:03:10 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030607015703.GC13200@ferd2.thristian.org>
References: <20030605124531.GC3988@mumak.net>
	<1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	<20030607015703.GC13200@ferd2.thristian.org>
Message-ID: <u4r2c7drl.fsf@online.no>

screwtape at froup.com writes:

> The Session class doesn't appear to inhert from anything that actually
> 
> contains session-related functionality, and the adapter classes sure
> don't contain session-related functionality, so I have no idea where
> sessiony stuff is done, or how to do it in my own programs, or
> anything clever that I might do.
> 
> In ASP, admittedly based on a much stupider language, the Session
> object is effectively a dictionary. It's much simpler to understand. I
> 
> assume there's useful things the Twisted session object can do that
> you can't do in ASP, but I'm not very clear on what those things might
> 
> be.

I am a newbie to Woven, but I just used the session like this and it
seemed to work fine. Just like in asp you can use it to store you own
data, but instead of being limitited to primitive datatypes like in
ASP you use your own classes like in the example below.

... Some Page derived class
    def getChild(self, postpath, request):
        if request.method == 'POST':
            session = request.getSession()
            session.user = User(request.args['user'][0],
                                request.args['password'][0])
            session.user.logIn()
            if session.user.isLoggedIn():
                return Redirect('../projectorder')
....

 

-- 

Vennlig hilsen 

Syver Enstad




From andrew-twisted at puzzling.org  Thu Jun 26 20:28:58 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 10:28:58 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
Message-ID: <20030627002858.GA20956@frobozz>

On Thu, Jun 26, 2003 at 02:58:32PM -0500, Glyph Lefkowitz wrote:
> 
> On Thursday, June 26, 2003, at 11:45 AM, Alex Levy wrote:
> 
> >it endlessly redirects, with my log files piling up with requests for 
> >http://mysite/////////////////////
> 
> !@#!@%$~!
> 
> I thought this was just spiv's bug, but I just had a look in 
> twisted.web.static.File.  When did it get this bad?  Is this my fault? 
> :-)  getChild() and render() are both _disasters_, which look like 
> they've been hacked on by in excess of 10 people who didn't really 
> understand what they're doing.  I can't immediately unravel it enough 
> to get a bugfix in, and there are no tests.

Actually, I think this is *still* my bug.  Tests would *really* help here ;)

I suspect this patch will fix it:

Index: twisted/web/static.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/static.py,v
retrieving revision 1.95
diff -u -r1.95 static.py
--- twisted/web/static.py       22 Jun 2003 01:01:57 -0000      1.95
+++ twisted/web/static.py       27 Jun 2003 00:26:38 -0000
@@ -288,7 +288,7 @@
         if path == '..':
             return error.NoResource("Invalid request URL.")
 
-        if path == '':
+        if path == '' and os.path.isfile(self.path):
             childPath = self.path
         else:
             childPath = os.path.join(self.path, path)

But I don't have time to test right at the moment.

On the weekend, if no-one else gets to it first, I'll probably have a look
at writing tests, and cleaning up static.File.  It does look rather messy.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 26 20:37:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 10:37:53 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030627002858.GA20956@frobozz>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com> <20030627002858.GA20956@frobozz>
Message-ID: <20030627003753.GB20956@frobozz>

On Fri, Jun 27, 2003 at 10:28:58AM +1000, Andrew Bennetts wrote:
> On Thu, Jun 26, 2003 at 02:58:32PM -0500, Glyph Lefkowitz wrote:
> > 
> > !@#!@%$~!
> > 
> > I thought this was just spiv's bug, but I just had a look in 
> > twisted.web.static.File.  When did it get this bad?  Is this my fault? 
> > :-)  getChild() and render() are both _disasters_, which look like 
> > they've been hacked on by in excess of 10 people who didn't really 
> > understand what they're doing.  I can't immediately unravel it enough 
> > to get a bugfix in, and there are no tests.
> 
> Actually, I think this is *still* my bug.  Tests would *really* help here ;)
> 
> I suspect this patch will fix it:

[snip]

Oh, I see glyph's already gone and fixed it properly, with tests :)

-Andrew.




From itamar at itamarst.org  Thu Jun 26 20:35:54 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 26 Jun 2003 20:35:54 -0400
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030627003753.GB20956@frobozz>
References: <20030626164556.GA2373@polynode.com>
	<904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
	<20030627002858.GA20956@frobozz>
	<20030627003753.GB20956@frobozz>
Message-ID: <20030626203554.34a3b7d8.itamar@itamarst.org>

On Fri, 27 Jun 2003 10:37:53 +1000
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Oh, I see glyph's already gone and fixed it properly, with tests :)

I think it could do with about 10 more tests.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Thu Jun 26 21:27:27 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 11:27:27 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030626203554.34a3b7d8.itamar@itamarst.org>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com> <20030627002858.GA20956@frobozz> <20030627003753.GB20956@frobozz> <20030626203554.34a3b7d8.itamar@itamarst.org>
Message-ID: <20030627012727.GC20956@frobozz>

On Thu, Jun 26, 2003 at 08:35:54PM -0400, Itamar Shtull-Trauring wrote:
> On Fri, 27 Jun 2003 10:37:53 +1000
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> > Oh, I see glyph's already gone and fixed it properly, with tests :)
> 
> I think it could do with about 10 more tests.

Yes -- I posted too soon (again!)... on closer examination, there's just one
new test method.

-Andrew.




From jml at ids.org.au  Fri Jun 27 09:28:08 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 27 Jun 2003 23:28:08 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
References: <20030626220543.GA18733@mumak.net> <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
Message-ID: <20030627132808.GC18733@mumak.net>

On Thu, Jun 26, 2003 at 10:48:31PM +1000, Richard Jones wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> On Friday, June 27, 2003, at 08:05  AM, Jonathan
> >No one has told me about Roundup, and it didn't stand out in any of my 
> >previous
> >investigations into bug trackers (some of which were more than 
> >cursory).
> >
> >I guess I'll have to investigate Roundup further.
> 
> I posted about developing a twisted frontend to Roundup a while ago, I 
> guess you a) weren't subscribed then or b) missed it :)
> 

Probably b), being a heartless b., I tend to skip through the "I'm using
twisted and I don't understand" posts (you know, the one's that would go to
twisted-user if there was such a thing). Invariably I miss a few important
ones.

Here comes the pseudo-intelligent, almost-thought-out response to compliments
yesterday's "oops" post.

I've had a brief look at Roundup and I agree that a Twisted frontend to it
would rock. However, Issues seems to have distinctly different design goals.

I wasn't joking when I said Issues was all about simplicity (at least, in these
first few releases). We've (the Issues dev team) been thinking about how to do
the simplest possible bugtrack, mostly without reference to existing
implementations (although we've looked at a lot of design docs).

The basic "workflow" is modelled on something between a two-player conversation
and a singles tennis match. The ball is in court A, court B, or the game is
over. That's it. 

However, Roundup is way more featureful than that. It has a guiding principle
of generality, which is far removed from Issues guiding principle of
simplicity. Which of course doesn't rule out the idea of me making Issues some
sort of Roundup plugin. It's certainly worth considering.

Roundup looks like it rocks, and it obviously kicks some design ass. However,
Issues (so far) is a mini experiment in how simple an issue-tracking workflow
can get. 

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030627/ae710b16/attachment.pgp 

From golux at comcast.net  Thu Jun 26 22:10:06 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 26 Jun 2003 22:10:06 -0400
Subject: [Twisted-Python] Weird, apparently platform-dependent bug that hoses reactor
Message-ID: <3EFBA77E.1030604@comcast.net>

Help!

This is a bug that I discovered after I had just completed
a change of name for one of the packages in my app, from
"common" (bad name) to "enterprise" (sounds too broad
but is actually appropriate in this case).  Yes, I am
using t.enterprise modules (adbapi) and yes, I've made
sure that all our imports of that and of our module by that
name (pangalactic.enterprise :^) are fully-qualified.

The traceback we're getting is:

Traceback (most recent call last):
   File "test_pger_get.py", line 37, in ?
     reactor.run() # start the main loop
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 121, in run
     self.startRunning(installSignalHandlers=installSignalHandlers)
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 115, in startRunning
     self._handleSignals()
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 87, in _handleSignals
     signal.signal(signal.SIGINT, self.sigInt)
SystemError: error return without exception set

--------------------------------------------------------------

This is coming from a pretty simple test script that
initializes some things and does a reactor.run() and
prints the result or the error.

(There's too much context to include all the code in this
message, but I'll send it off-list to anyone who's
interested.)

The platform-dependent aspect is that we have run the
exact same code on Debian (unstable) have *not* seen
this traceback there.  We get the traceback on a
Red Hat 9 (2.4.20-18.9) machine.

Basically curious if anyone else has seen anything like
this.

(We are still in the process of trying to narrow the
differences between the code that ran -- before the
module name change [big time sed script job] and
after ... will post if we have a breakthrough.)

Thanks!
Steve




From itamar at itamarst.org  Thu Jun 26 22:12:28 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 26 Jun 2003 22:12:28 -0400
Subject: [Twisted-Python] Weird, apparently platform-dependent bug that
 hoses reactor
In-Reply-To: <3EFBA77E.1030604@comcast.net>
References: <3EFBA77E.1030604@comcast.net>
Message-ID: <20030626221228.13f6ff0a.itamar@itamarst.org>

On Thu, 26 Jun 2003 22:10:06 -0400
Steve Waterbury <golux at comcast.net> wrote:

> The platform-dependent aspect is that we have run the
> exact same code on Debian (unstable) have *not* seen
> this traceback there.  We get the traceback on a
> Red Hat 9 (2.4.20-18.9) machine.

We had one other report, Redhat 7.3.

Are you using Redhat Python RPMs? Can you reproduce the bug without
depending on Twisted? If doing signal.signal(...etc..) by itself causes
this problem, it's obviously not a Twisted problem.

Are you doing reactor.run() in a thread?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From wari at home.wari.org  Fri Jun 27 05:06:45 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 11:06:45 +0200
Subject: [Twisted-Python] flow threading fix (hopeful...)
In-Reply-To: <E19Vi4h-000292-00@pyramid.twistedmatrix.com>
References: <E19Vi4h-000292-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC0925.4080308@home.wari.org>

cce CVS wrote:

>Log message:
>threading fix (hopeful...)
>  
>
I had to do a `kill -9` for this test, no other forms of murder works.




From missive at hotmail.com  Thu Jun 26 23:05:31 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 27 Jun 2003 03:05:31 +0000
Subject: [Twisted-Python] PATCH: doc/howto/flow.py   two typos
Message-ID: <BAY2-F99xo6AmX3qrB000000764@hotmail.com>

>cvs diff -u doc/howto/flow.html
Index: doc/howto/flow.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/flow.html,v
retrieving revision 1.3
diff -u -r1.3 flow.html
--- doc/howto/flow.html 26 Jun 2003 09:26:15 -0000      1.3
+++ doc/howto/flow.html 27 Jun 2003 02:59:41 -0000
@@ -14,7 +14,7 @@

<h3>Handling more than one Request</h3>

-<p>When creating services to handle simoutaneous requests, processing state
+<p>When creating services to handle simultaneous requests, processing state
must be managed.  A common approach, threading, applies the method used
for single user operations:  keeping processing state within local variables
and function arguments.  In this case, the operating environment handles
@@ -62,7 +62,7 @@
are done in a parallel, cooperative manner.   While this is a good start,
it isn't perfect as the event loop is stopped with a hard-coded timeout.
It would be better for each Request object to signal when it is completed
-so that the event loop can be shuot down sooner.</p>
+so that the event loop can be shut down sooner.</p>

<h3>Deferred Callbacks</h3>

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From golux at comcast.net  Thu Jun 26 23:57:23 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 26 Jun 2003 23:57:23 -0400
Subject: [Twisted-Python] Weird,
 apparently platform-dependent bug that hoses reactor
In-Reply-To: <20030626221228.13f6ff0a.itamar@itamarst.org>
References: <3EFBA77E.1030604@comcast.net>
 <20030626221228.13f6ff0a.itamar@itamarst.org>
Message-ID: <3EFBC0A3.2020901@comcast.net>

Itamar Shtull-Trauring wrote:
> On Thu, 26 Jun 2003 22:10:06 -0400
> Steve Waterbury <golux at comcast.net> wrote:
> 
>>The platform-dependent aspect is that we have run the
>>exact same code on Debian (unstable) have *not* seen
>>this traceback there.  We get the traceback on a
>>Red Hat 9 (2.4.20-18.9) machine.
> 
> We had one other report, Redhat 7.3.

Aha.  I wonder what version of Python.

> Are you using Redhat Python RPMs? 

Sort of -- not the one that comes with the RH distro, but this
one from python.org:

python-2.2.3-26.src.rpm (Red Hat 9 updated Source RPM, 7007263 bytes)

> Can you reproduce the bug without
> depending on Twisted? If doing signal.signal(...etc..) by itself causes
> this problem, it's obviously not a Twisted problem.

signal.signal by itself seems to be okay:

[waterbug at golux test]$ python
Python 2.2.3 (#1, Jun 25 2003, 22:41:47)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
 >>> import signal
 >>> signal.signal(signal.SIGINT, signal.SIG_DFL)
<built-in function default_int_handler>
 >>>

> Are you doing reactor.run() in a thread

Nope, not invoking any threads at all in my code.

Thanks for the suggestions, Itamar.

Cheers,
Steve.




From richard at commonground.com.au  Fri Jun 27 02:37:50 2003
From: richard at commonground.com.au (Richard Jones)
Date: Fri, 27 Jun 2003 16:37:50 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030627132808.GC18733@mumak.net>
Message-ID: <DFC2E5B3-A869-11D7-BFDB-000393D560FC@commonground.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday, June 27, 2003, at 11:28  PM, Jonathan Lange wrote:
> The basic "workflow" is modelled on something between a two-player 
> conversation
> and a singles tennis match. The ball is in court A, court B, or the 
> game is
> over. That's it.
>
> However, Roundup is way more featureful than that. It has a guiding 
> principle
> of generality, which is far removed from Issues guiding principle of
> simplicity. Which of course doesn't rule out the idea of me making 
> Issues some
> sort of Roundup plugin. It's certainly worth considering.

That's not necessarily true. The Roundup default tracker schema (see 
the online demo or the "instant gratification" python demo.py when you 
download the source) aims for simplicity. One of the implementation 
goals is flexibility of schema and workflow, which is what you get when 
you delve under the covers to make the tracker work just the way you 
wish it to. The ball game workflow you describe above (if I follow it 
correctly) could trivially be implemented in Roundup with the simple 
addition of some reactor code (which may be what you're referring to by 
the term "plugin" :)


> Roundup looks like it rocks, and it obviously kicks some design ass. 
> However,
> Issues (so far) is a mini experiment in how simple an issue-tracking 
> workflow
> can get.

Fair enough. I'd just hate to see effort wasted on developing Yet 
Another Tracker just to fit the Twisted framework - when I believe that 
it'd be such a simple job getting Roundup running in that framework. 
Roundup's development has been going for two years now (and it seemed 
like it'd be such a quick-n-simple job when I started - there always 
seems to be some new feature that's really cool and just has to be 
implemented ;)

One of these days, I might find some spare time to actually do the job 
myself, but don't hold your breath :)


     Richard
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+++ZFrGisBEHG6TARAmDkAJ9HxgopsemztL84e4PWNdCHw335MACfS/eG
GImWfhu5/NoeeyBFdUvc9o0=
=3MT2
-----END PGP SIGNATURE-----




From lafou at wanadoo.fr  Fri Jun 27 03:26:59 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 27 Jun 2003 09:26:59 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030627132808.GC18733@mumak.net>
References: <20030626220543.GA18733@mumak.net>
	 <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
	 <20030627132808.GC18733@mumak.net>
Message-ID: <1056698819.2442.0.camel@biproc>

> Probably b), being a heartless b., I tend to skip through the "I'm using
> twisted and I don't understand" posts (you know, the one's that would go to
> twisted-user if there was such a thing). Invariably I miss a few important
> ones.


I proposed a few weeks ago to create a web forum such as forums.gentoo.org, but every body
here said that the mailing is doing its job quite well :-(




From wari at home.wari.org  Fri Jun 27 04:50:16 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 10:50:16 +0200
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC0548.20803@home.wari.org>

cce CVS wrote:

>Modified files:
>Twisted/twisted/flow/threads.py 1.3 1.4
>  
>
It seems that flows testing can pass 1% of the time and most of the 
time, it'll stop on testThreaded, as seen in the screen dump below:

    testProtocol 
...                                                       [OK]
    testProtocolLocalhost 
...                                              [OK]
    testThreaded 
...                                                       [OK]
    testThreadedSleep 
...                                                  [OK]
    testThreadedYield 
...                                                  [OK]
    testZip 
...                                                            [OK]
    testZipFailure 
...                                                     [OK]

-------------------------------------------------------------------------------
Ran 26 tests in 2.927s

OK
[wari at sync wari]$ trial -v twisted.test.test_flow
twisted.test.test_flow
  FlowTest
    testBasic 
...                                                          [OK]
[..snip..]
    testProtocolLocalhost 
...                                              [OK]
    testThreaded ...

 From here, I tried doing strace on the process and just got this:
gettimeofday({1056703375, 307699}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 308951}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 310242}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 311093}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 311504}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 312164}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 312646}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 313504}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 313888}, NULL) = 0
select(8, [4 7], [], [], {0, 0} <unfinished ...>
[wari at sync wari]$

Infinitely, of course.. Have not really gone thru the code at all, but 
anyway, my machine specs are the typical ones you get from 
johncompanies.com, Redhat 8.0, python 2.2.1, dual CPU and 2GB of RAM.




From wari at home.wari.org  Fri Jun 27 04:52:54 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 10:52:54 +0200
Subject: [Twisted-Python] more on flow testThreaded
In-Reply-To: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC05E6.90008@home.wari.org>

cce CVS wrote:

>Modified files:
>Twisted/twisted/flow/threads.py 1.3 1.4
>
One more thing, here's a traceback (when pressing CTRL-C), hope it helps.

    testThreaded ... Traceback (most recent call last):
  File "/usr/bin/trial", line 35, in ?
    run()
  File "/usr/lib/python2.2/site-packages/twisted/scripts/trial.py", line 
311, in run
    suite.run(reporter, config['random'])
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 313, in run
    test.runTests(output)
  File "/usr/lib/python2.2/site-packages/twisted/trial/runner.py", line 
110, in runTests
    method, self.runTest).run()
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 209, in run
    self.setUp_and_test()
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 184, in setUp_and_test
    def setUp_and_test(self): self._runPhase(self._main)
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 160, in _runPhase
    stage(*args, **kwargs)
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 182, in _main
    self.runner(self.method)
  File "/usr/lib/python2.2/site-packages/twisted/trial/runner.py", line 
100, in runTest
    method()
  File "/usr/lib/python2.2/site-packages/twisted/test/test_flow.py", 
line 401, in testThreaded
    self.assertEquals(result, unittest.deferredResult(d))
  File "/usr/lib/python2.2/site-packages/twisted/trial/util.py", line 
70, in deferredResult
    result = _getDeferredResult(d, timeout)
  File "/usr/lib/python2.2/site-packages/twisted/trial/util.py", line 
63, in _getDeferredResult
    reactor.iterate()
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 
257, in iterate
    self.doIteration(delay)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", 
line 436, in doSelect
    [], timeout)




From egor at iplus.ru  Fri Jun 27 05:40:32 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Fri, 27 Jun 2003 13:40:32 +0400
Subject: [Twisted-Python] blocking code in object constructors
Message-ID: <200306271340.32390.egor@iplus.ru>

Hi,
I need to do some blocking stuff in object constructor. However constructors 
can't return deferreds. The solution I see is to put all blocking 
initialization to some method and use factory to generate objects. Factory 
will return deferred wich will be called back when object initialization is 
complete. Is there Twisted Standard way to do such things?

-- 
Egor Cheshkov 





From smurf at smurf.noris.de  Fri Jun 27 06:20:17 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 12:20:17 +0200
Subject: [Twisted-Python] flow testThreaded thingy
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org>
Message-ID: <pan.2003.06.27.10.20.17.5421@smurf.noris.de>

Hi, Wari Wahab wrote:

>  I tried doing strace on the process and just got this:

You can't strace a threaded process, at least not the main thread.

This seems to be exactly the sort of almost-intractable timing-dependent
problem which gives threading in general a well-deserved reputation for
bugginess.  :-/

I'll have a chance to dig around in flow+threading over the weekend.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:kgbvax: /K-G-B'vaks/ n. See {kremvax}.




From wari at home.wari.org  Fri Jun 27 07:21:27 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 13:21:27 +0200
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <pan.2003.06.27.10.20.17.5421@smurf.noris.de>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de>
Message-ID: <3EFC28B7.4070807@home.wari.org>

Matthias Urlichs wrote:

>> I tried doing strace on the process and just got this:
>>    
>>
>This seems to be exactly the sort of almost-intractable timing-dependent
>problem which gives threading in general a well-deserved reputation for
>bugginess.  :-/
>
>I'll have a chance to dig around in flow+threading over the weekend.
>
Oh btw, before you do more digging, I've tested the testThreaded thing 
again on a single CPU machine, and the result is pass everytime. I think 
this is more of a dual CPU issue, where out of ten times I runned 
twisted.test.test_flow, only one time it passes, and the rest of the 
test hangs on testThreaded.

Also, the test passes everytime if I do 'trial -v 
twisted.test.test_flow.FlowTest.testThreaded' on the dual CPU. So I 
think that the other tests can affect the successful running of 
testThreaded.




From smurf at smurf.noris.de  Fri Jun 27 08:30:30 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 14:30:30 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030624201503.GA22074@meson.dyndns.org>
Message-ID: <pan.2003.06.27.12.30.30.91174@smurf.noris.de>

Hi, Jp Calderone wrote:

>   I think this patch is against a version of nntp.py that I don't have. 
> Could you make sure it is against current CVS, or at least a previously
> released version (I'm quite certain we've never had 1.0.5smurf-6)

Sorry about that.

I'll merge up to current CVS and then send you a complete patch directly.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
If the shoe fits, it's ugly.




From tv at twistedmatrix.com  Fri Jun 27 08:17:21 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 27 Jun 2003 15:17:21 +0300
Subject: [Twisted-Python] blocking code in object constructors
In-Reply-To: <200306271340.32390.egor@iplus.ru>
References: <200306271340.32390.egor@iplus.ru>
Message-ID: <20030627121721.GA16292@lapdog>

On Fri, Jun 27, 2003 at 01:40:32PM +0400, Egor Cheshkov wrote:
> I need to do some blocking stuff in object constructor. However constructors 
> can't return deferreds. The solution I see is to put all blocking 
> initialization to some method and use factory to generate objects. Factory 
> will return deferred wich will be called back when object initialization is 
> complete. Is there Twisted Standard way to do such things?

	Not that I know of, but it's dead simple.

	Of course, first you have to replace all that blocking stuff.
	Deferred doesn't make it ok for you to block; it makes it ok
	for async things to complete later.

class ThingieThatUsedToBlock:
    def __init__(self, foo, bar):
	# don't block or even do the async thing here
	pass

    def setUp(self):
	# don't block here, but do start the async init.
	deferred = startTheAsyncThingie()
	deferred.addCallback(lambda _: self)
	return deferred

def createThingie(*a, **kw):
    t = ThingieThatUsedToBlock(*a, **kw)
    d = t.setUp()
    return d

-- 
:(){ :|:&};:



From smurf at smurf.noris.de  Fri Jun 27 11:49:29 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 17:49:29 +0200
Subject: [Twisted-Python] flow testThreaded thingy
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de> <3EFC28B7.4070807@home.wari.org>
Message-ID: <pan.2003.06.27.15.49.29.661761@smurf.noris.de>

Hi, Wari Wahab wrote:

> Oh btw, before you do more digging, I've tested the testThreaded thing 
> again on a single CPU machine, and the result is pass everytime.

Thanks for the additional info. I do have a dual-CPU system and some
experience with threaded programs (Python and otherwise), so maybe I'll
get lucky.

Then again, this weekend is forecast to have much too good weather to sit
in front of a computer the whole time. We'll see. ;-)

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Smile! You're on Candid Cookie!




From cce at clarkevans.com  Fri Jun 27 13:42:09 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 27 Jun 2003 17:42:09 +0000
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <3EFC28B7.4070807@home.wari.org>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de> <3EFC28B7.4070807@home.wari.org>
Message-ID: <20030627174209.GA66859@doublegemini.com>

On Fri, Jun 27, 2003 at 01:21:27PM +0200, Wari Wahab wrote:
| Matthias Urlichs wrote:
| >This seems to be exactly the sort of almost-intractable timing-dependent
| >problem which gives threading in general a well-deserved reputation for
| >bugginess.  :-/
|  
| Oh btw, before you do more digging, I've tested the testThreaded thing 
| again on a single CPU machine, and the result is pass everytime. I think 
| this is more of a dual CPU issue, where out of ten times I runned 
| twisted.test.test_flow, only one time it passes, and the rest of the 
| test hangs on testThreaded.

This could explain why it is a bit harder to produce.  Anyway, I 
re-thought the logic and the current CVS version should be much
cleaner, as I'm more careful about modifying shared variables only
in the main thread (split process in two, one chunk per thread)

Could you give it one more round-about?

Best,

Clark



From mesozoic at polynode.com  Fri Jun 27 16:28:50 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Fri, 27 Jun 2003 16:28:50 -0400
Subject: [Twisted-Python] t.w.microdom and empty HTML elements
Message-ID: <20030627202850.GA3488@polynode.com>

While looking into a problem where my pages were showing up blank on IE,
Moonfallen pointed me to the NEVERSINGLETON list in t.w.microdom.toxml().
There is a list of elements which should never be rendered as <node/>, and
instead should always be <node></node>.

Upon looking through the specs for XHTML at w3c.org, however, I found that
the _only_ XHTML elements which are allowed as singletons are those whose
content models are "EMPTY" -- <br/>, <hr/>, and so on.  The list of EMPTY
elements is not huge.

I understand the issue that microdom cannot get bogged down with HTML
tweaks; it is, after all, supposed to produce XML.  But it seems like
t.w.microdom shouldn't be spitting out invalid XHTML, even if (for now) it
doesn't look like it breaks anyone's browser.

As I understand it there is no real difference in XML between <node/> and
<node></node>.  Given that, wouldn't it be better for toxml() to use an
ALLOWSINGLETON list instead of NEVERSINGLETON?  That is, unless an element
is explicitly allowed to be <foo/>, it would be <foo></foo>?

If this is of interest to anyone, below is a diff that implements this; the
list of elements is from the XHTML 1.0 DTD.  I haven't tested it, so someone
else will have to do that, but it works on my page.


Index: twisted/web/microdom.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/microdom.py,v
retrieving revision 1.93
diff -u -r1.93 microdom.py
--- twisted/web/microdom.py	27 Jun 2003 19:10:35 -0000	1.93
+++ twisted/web/microdom.py	27 Jun 2003 20:16:17 -0000
@@ -449,8 +449,9 @@
 
     def writexml(self, stream, indent='', addindent='', newl='', strip=0):
         # write beginning
-        NEVERSINGLETON = ('a', 'li', 'div', 'span', 'title', 'script',
-                          'textarea', 'select', 'style')
+        ALLOWSINGLETON = ('img', 'br', 'hr', 'base', 'meta', 'link', 'param',
+                          'area', 'input', 'col', 'basefont', 'isindex',
+                          'frame')
         # this should never be necessary unless people start
         # changing .tagName on the fly(?)
         if not self.preserveCase:
@@ -468,7 +469,7 @@
             for child in self.childNodes:
                 child.writexml(stream, newindent, addindent, newl, strip)
             w(j((newl, indent, "</", self.endTagName, '>')))
-        elif self.tagName.lower() in NEVERSINGLETON:
+        elif self.tagName.lower() not in ALLOWSINGLETON:
             w(j(('></', self.endTagName, '>')))
         else:
             w(" />")


-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From Martin.Moellenbeck at t-online.de  Fri Jun 27 16:41:47 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Fri, 27 Jun 2003 22:41:47 +0200
Subject: [Twisted-Python] Some Question about on woven and rpy/page.Page
Message-ID: <000801c33cec$87b26630$0400a8c0@joshua>

Hello,

I have setup a simple web-server (see the files attached).

When I comment out the render-method of MyPage (start.rpy), I get
this output:
<snip>
Some stuff goes here-
this is the 'submit not in request.args'
Some more stuff goes here.
this is the None
</snip>

It seems the request parameter 'submit' are not set.

If I comment in the render-method of MyPage, I get this output:
<snip>
send via submit
<snip>

When I have a look to the request, it seems that the first request 
(with the correct parameter, return with 302) and then a second 
request will be done with 200.

Have anybody an answer for me ;-)

Martin

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_web.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment.txt 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: start.rpy
Type: application/octet-stream
Size: 1308 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment.obj 

From missive at hotmail.com  Fri Jun 27 18:47:59 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 27 Jun 2003 22:47:59 +0000
Subject: [Twisted-Python] PATCH: twisted/coil/plugins/portforward.py  docstring
Message-ID: <BAY2-F68uktJ3GOeym800005778@hotmail.com>

>cvs diff -u twisted/coil/plugins/portforward.py
Index: twisted/coil/plugins/portforward.py
===================================================================
RCS file: /cvs/Twisted/twisted/coil/plugins/portforward.py,v
retrieving revision 1.2
diff -u -r1.2 portforward.py
--- twisted/coil/plugins/portforward.py 5 Jun 2002 22:24:16 -0000       1.2
+++ twisted/coil/plugins/portforward.py 27 Jun 2003 22:36:28 -0000
@@ -14,7 +14,7 @@
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-"""Coil plugin for telnet shell."""
+"""Coil plugin for port forwarding."""

# Twisted Imports
from twisted.coil import coil

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From dp at twistedmatrix.com  Fri Jun 27 23:13:00 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 27 Jun 2003 20:13:00 -0700
Subject: [Twisted-Python] Some Question about on woven and rpy/page.Page
In-Reply-To: <000801c33cec$87b26630$0400a8c0@joshua>
References: <000801c33cec$87b26630$0400a8c0@joshua>
Message-ID: <6C4AA9DA-A916-11D7-9236-000A95864FC4@twistedmatrix.com>

(Snip Martin having a problem with arguments not being in the request)

Change:

<form action="start.rpy">

To:

<form action="start.rpy/">

Woven automatically adds a slash to the end of urls which are rendered 
by Page instances. This is to make writing relative links easier, by 
ensuring consistent behavior. It does this by performing a redirect, 
which loses the request arguments, because it causes the browser to 
perform another request.

If you don't like this, and would prefer your urls to remain 
trailing-slashless, add the following attribute to your Page subclass:

class MyPage(page.Page):
	addSlash = False

Hope that helps.
dp




From Martin.Moellenbeck at t-online.de  Sat Jun 28 11:33:17 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Sat, 28 Jun 2003 17:33:17 +0200
Subject: AW: [Twisted-Python] Some Question about on woven and rpy/page.Page
In-Reply-To: <6C4AA9DA-A916-11D7-9236-000A95864FC4@twistedmatrix.com>
Message-ID: <000301c33d8a$9945b750$0400a8c0@joshua>

Hi Donovan,

this was the right answer, it's the way.

Thanks a lot.

Martin

-----Urspr?ngliche Nachricht-----
Von: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag von Donovan
Preston
Gesendet: Samstag, 28. Juni 2003 05:13
An: twisted-python at twistedmatrix.com
Betreff: Re: [Twisted-Python] Some Question about on woven and
rpy/page.Page


(Snip Martin having a problem with arguments not being in the request)

Change:

<form action="start.rpy">

To:

<form action="start.rpy/">

Woven automatically adds a slash to the end of urls which are rendered 
by Page instances. This is to make writing relative links easier, by 
ensuring consistent behavior. It does this by performing a redirect, 
which loses the request arguments, because it causes the browser to 
perform another request.

If you don't like this, and would prefer your urls to remain 
trailing-slashless, add the following attribute to your Page subclass:

class MyPage(page.Page):
	addSlash = False

Hope that helps.
dp


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dp at twistedmatrix.com  Sat Jun 28 14:49:42 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 28 Jun 2003 11:49:42 -0700
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
Message-ID: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>

Just thought I'd let people know I posted a fairly long piece about the 
problems inherent with creating URLs in Twisted Web, and a hopeful 
solution:

http://www.ulaluma.com/pyx/archives/000581.html

BTW, if anyone has a better moveabletype template, or a good Blog 
written in Python (and twisted? :) I would like to expend as little 
energy as possible with perl-related software but still have a nice 
Blog...

dp




From itamar at itamarst.org  Sat Jun 28 18:18:19 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 18:18:19 -0400
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
Message-ID: <20030628181819.2f130867.itamar@itamarst.org>

On Sat, 28 Jun 2003 11:49:42 -0700
Donovan Preston <dp at twistedmatrix.com> wrote:

> Just thought I'd let people know I posted a fairly long piece about
> the problems inherent with creating URLs in Twisted Web, and a hopeful
> 
> solution:

One way to do reverse proxying that works correctly is to use what Zope
calls VirtualHostMonster - you pass the real domain and path as part of
a rewritten Zope server and it extracts them and mangles the reqyest
correctly.

Twisted currently supports this for domains (though not paths, the code
needs to be extended) using some code which is in twisted.web.vhost
IIRC. twisted-web does this out of the box, so you can do:

<VirtualHost 1.2.3.4>
ServerName www.example.com
ProxyPass / http://localhost:8234/vhost/http/www.example.com:80/
</VirtualHost>

in apache, which will forward requests to the twisted-web server and
DTRT regarding the request generated URLs.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From abe at fettig.net  Sat Jun 28 19:45:12 2003
From: abe at fettig.net (Abe Fettig)
Date: 28 Jun 2003 19:45:12 -0400
Subject: [Twisted-Python] MailboxError in imap4.py
Message-ID: <1056843911.609.12.camel@mingus>

There's a number of places in twisted/protocols/imap4.py where code
makes reference to MailboxError - if I'm not mistaken it's supposed to
be MailboxException.

trivial patch attached.

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: imap.patch
Type: text/x-patch
Size: 1255 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030628/f6ef296f/attachment.bin 

From dp at twistedmatrix.com  Sat Jun 28 20:03:59 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 28 Jun 2003 17:03:59 -0700
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <20030628181819.2f130867.itamar@itamarst.org>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com> <20030628181819.2f130867.itamar@itamarst.org>
Message-ID: <2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>

On Saturday, June 28, 2003, at 3:18PM, Itamar Shtull-Trauring wrote:
>
> One way to do reverse proxying that works correctly is to use what Zope
> calls VirtualHostMonster - you pass the real domain and path as part of
> a rewritten Zope server and it extracts them and mangles the reqyest
> correctly.

> Twisted currently supports this for domains (though not paths, the code
> needs to be extended) using some code which is in twisted.web.vhost
> IIRC. twisted-web does this out of the box, so you can do:

<snip>

Yes, I am aware of twisted.web.vhost and this is simply a slight 
variation on the ProxyPass method I was discussing in my post. I am 
suggesting that whatever code in Twisted which is responsible for 
generating URLPath instances (a method on the request, perhaps) be 
aware of this and handle it properly, isolating the Woven programmer 
from the details of the configuration of the web server.

Incidentally, if Apache sets the x-forwarded-host header upon 
requesting the page from the proxy, why is it necessary to pass this 
information on to the proxy as a part of the url?

dp




From warner at lothar.com  Sat Jun 28 21:20:34 2003
From: warner at lothar.com (Brian Warner)
Date: Sat, 28 Jun 2003 18:20:34 -0700 (PDT)
Subject: [Twisted-Python] PATCH: twisted/coil/plugins/portforward.py 
 docstring
References: <BAY2-F68uktJ3GOeym800005778@hotmail.com>
Message-ID: <20030628.182034.129552457.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> -"""Coil plugin for telnet shell."""
> +"""Coil plugin for port forwarding."""

Committed. Also be aware that coil is begging to be rewritten and there's
been talk about not even including it in the release until it shapes up.

thanks,
 -Brian



From itamar at itamarst.org  Sat Jun 28 22:33:42 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 22:33:42 -0400
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
	<20030628181819.2f130867.itamar@itamarst.org>
	<2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>
Message-ID: <20030628223342.7055d4f4.itamar@itamarst.org>

On Sat, 28 Jun 2003 17:03:59 -0700
Donovan Preston <dp at twistedmatrix.com> wrote:

> Incidentally, if Apache sets the x-forwarded-host header upon 
> requesting the page from the proxy, why is it necessary to pass this 
> information on to the proxy as a part of the url?

Because that's just the host, not the path, i.e. what if you're
proxyhosting not www.example.com but www.example.com/foo?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sat Jun 28 23:58:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 23:58:14 -0400
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
Message-ID: <20030628235814.41d95bdc.itamar@itamarst.org>

   IMPORTANT: This release includes security updates to twisted.web.
   It is strongly recommended that you upgrade to this version of
   Twisted.

Twisted is an event-driven networking framework for server and client
applications.

For more information, visit http://www.twistedmatrix.com, join the list
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python or
visit us on #twisted at irc.freenode.net.


What's New in 1.0.6
===================

- Security fixes for twisted.web.

- Cred, Twisted's unified authentication and authorization framework,
was rewritten. While still not stable, the new system is far superior
and developers are encouraged to start using it.

- Flow, an utility page for integrating asynchronous control flow with
generators and iterators.

- Many improvements to the UDP subsystem.

- Many Windows-specific networking bug fixes.

- Cleanups in Woven - outputted HTML no longer includes attributes used
by templating, removed fake-acquisition for templates.

- Support switching over to TLS from TCP connections (useful for e.g.
STARTTLS in SMTP.)

- Improvements to the mail protocols and infrastructure.

- Fixed 2.2.0 compatibility.

- Index support for Lore.

- Bug fixes, documentation updates and small feature improvements.




From 2002 at weholt.org  Sun Jun 29 18:39:11 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 30 Jun 2003 00:39:11 +0200
Subject: [Twisted-Python] Keeping the same design sitewide?
Message-ID: <007701c33e8f$45061da0$0401a8c0@razor>

Hi,

I was wondering how I can use Woven and keep the overall "sceleton" of my
design in one file and wrap that around my templates at run-time? I mean, I
want to create one page which links to my stylesheet, displays a logo, some
header-text and a footer that will be the same site wide, and then just glue
what the different pages generate into the sceleton-file.

Any clues on how to keep the design in one file and still use Woven?

Thomas




From mmoellenbeck at plus.de  Mon Jun 30 04:35:31 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Mon, 30 Jun 2003 10:35:31 +0200
Subject: Antwort: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
Message-ID: <OF02CC66BD.6FF2A0CA-ONC1256D55.002EFE7D@uz.tengelmann.de>

Hi,

Thanks for the 1.0.6 release, but the windows-binary includes the docs 
twice. The download is about 10 MB large.

regards

Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030630/d8906c25/attachment.htm 

From abe at fettig.net  Mon Jun 30 10:19:21 2003
From: abe at fettig.net (Abe Fettig)
Date: 30 Jun 2003 10:19:21 -0400
Subject: [Twisted-Python] PATCH: imap4.py: fix when calling splitQuoted on empty string
Message-ID: <1056982761.1533.12.camel@mingus>

To get a list of all folders, Evolution's IMAP client uses this syntax:

LIST "" ""

This results in an error, since the "" "" part goes through splitQuoted
twice (once in IMAP4Server.listWork, the second in
IMAP4Server._parseMbox).  The second time through the quotes have been
removed (leaving an empty string), which causes splitQuoted to return []
instead of [''].

I've attached a simple patch that demonstrates one possible way to fix
the problem.

Abe

-------------- next part --------------
--- imap4.py-cvs	2003-06-30 10:05:03.000000000 -0400
+++ imap4.py	2003-06-30 09:54:49.000000000 -0400
@@ -2547,6 +2547,8 @@
     @raise MismatchedQuoting: Raised if an odd number of quotes are present
     """
     s = s.strip()
+    if s == '': return ['']
+
     result = []
     inQuote = inWord = start = 0
     for (i, c) in zip(range(len(s)), s):

From lists at ghaering.de  Mon Jun 30 10:27:05 2003
From: lists at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Mon, 30 Jun 2003 16:27:05 +0200
Subject: [Twisted-Python] Getting mails from list twice
Message-ID: <3F0048B9.60909@ghaering.de>

I'm lately getting all mail from the Twisted mailing list twice. Am I 
the only one experiencing this?

-- Gerhard



From glyph at twistedmatrix.com  Mon Jun 30 10:48:21 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jun 2003 09:48:21 -0500
Subject: [Twisted-Python] Big Shot
Message-ID: <E4F46FD6-AB09-11D7-A92B-000393C9700E@twistedmatrix.com>

Amir Bakhtiar, international man of mystery, has authorized me to offer 
a $100 bounty on a feature for Twisted.  We need a performance testing 
and regression tool.  Some parameters on its functionality: it has to 
have a graphical display of performance history.  It should be able to 
show at least three parameters: wall clock time, memory usage, and CPU 
usage.  The more, the better.  It should be able to rapidly show a 
developer the impact of a particular change on a performance metric.  
It will have to have at least a little integration with divmod and/or 
trial so that it can be run with the rest of the tests to produce a 
graph of where various bits of performance are going.  Last but not 
least, it would be _really_ nice if it included some actually 
meaningful metrics, like "HTTP requests per second", "IRC messages per 
second", "PB bytes per message".  One that I would personally really 
like to see is "reactor responsiveness" parameterized by various kinds 
of load.

I've written a little sketch which may give you some ideas in 
sandbox/timings.py.  Only one bounty is being offered, so if you're 
thinking about working on this, please discuss your intentions here!  
If two folks work together, you're welcome to split it, but if we get 
multiple implementations, only the "winner" (the one accepted for 
inclusion in Twisted) gets it.

So Long Space Cowboy...




From andrew-twisted at puzzling.org  Mon Jun 30 10:49:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Jul 2003 00:49:39 +1000
Subject: [Twisted-Python] Getting mails from list twice
In-Reply-To: <3F0048B9.60909@ghaering.de>
References: <3F0048B9.60909@ghaering.de>
Message-ID: <20030630144939.GA17479@frobozz>

On Mon, Jun 30, 2003 at 04:27:05PM +0200, Gerhard H?ring wrote:
> I'm lately getting all mail from the Twisted mailing list twice. Am I 
> the only one experiencing this?

It all looks fine to me.

-Andrew.




From gh at ghaering.de  Mon Jun 30 11:42:15 2003
From: gh at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Mon, 30 Jun 2003 17:42:15 +0200
Subject: [Twisted-Python] Getting mails from list twice
In-Reply-To: <20030630144939.GA17479@frobozz>
References: <3F0048B9.60909@ghaering.de> <20030630144939.GA17479@frobozz>
Message-ID: <3F005A57.9080709@ghaering.de>

Andrew Bennetts wrote:
> On Mon, Jun 30, 2003 at 04:27:05PM +0200, Gerhard H?ring wrote:
> 
>>I'm lately getting all mail from the Twisted mailing list twice. Am I 
>>the only one experiencing this?
> 
> It all looks fine to me.

Ah. I'm subscribed under two addresses, but had disabled mail delivery 
for one. Looks like this option got reset in Mailman somehow. I changed 
that back and everything's back to normal now.

-- Gerhard



From domma at procoders.net  Mon Jun 30 11:45:22 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Mon, 30 Jun 2003 17:45:22 +0200
Subject: [Twisted-Python] map Url to function
Message-ID: <FCEMIEFBFOIDAOJDEPIAGEDDFKAA.domma@procoders.net>

Hi,

I started playing around with twisted.web and want to map the Url to
function calls with parameters. For example

http://myserver.net/mainhandler/somefkt/parama/paramb

should be call some 'mainhandler'. This should be a script which gets
'/somefkt/parama/paramb' and knows what to do with it. What's the easiest
way to do this?

regards,
Achim




From mario at ruggier.org  Mon Jun 30 12:21:47 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 30 Jun 2003 18:21:47 +0200
Subject: [Twisted-Python] map Url to function
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAGEDDFKAA.domma@procoders.net>
Message-ID: <F2484BBB-AB16-11D7-880F-000393756786@ruggier.org>

You may use getChild() on each child to traverse down the URL path
(and doing whatever you want at each step) or, if as you say you want
to make mainhandler just treat the rest of the url path as parameter
data, then you can declare your resource as a leaf, as below (this
just prints the dict of the request -- in particular look at the values
for path, prepath & postpath). But see also the web howto's.

## reqdict.rpy (mainhandler)

from twisted.web import resource

def prettyDict(name,d):
     s = []
     s.append('<table width="100%" border="0">')
     s.append('<tr><th align="left" colspan="2">'+name+'</th></tr>')
     for key in d.keys():
         s.append('<tr>')
         s.append('<td width="25%">' +key+ 
'</td><td>'+str(d[key])+'</td>')
         s.append('</tr>')
     s.append('<tr>')
     s.append('</tr>')
     s.append('</table>')
     return '\n'.join(s)

class TestResource(resource.Resource):
     isLeaf = 1
     def render(self, request):
         return prettyDict('request', request.__dict__ )

resource = TestResource()
##

Cheers, mario


On lundi, juin 30, 2003, at 17:45 Europe/Amsterdam, Achim Domma 
((ProCoders)) wrote:

> Hi,
>
> I started playing around with twisted.web and want to map the Url to
> function calls with parameters. For example
>
> http://myserver.net/mainhandler/somefkt/parama/paramb
>
> should be call some 'mainhandler'. This should be a script which gets
> '/somefkt/parama/paramb' and knows what to do with it. What's the 
> easiest
> way to do this?
>
> regards,
> Achim
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matt at pollenation.net  Mon Jun 30 17:05:16 2003
From: matt at pollenation.net (Matt Goodall)
Date: 30 Jun 2003 22:05:16 +0100
Subject: [Twisted-Python] Keeping the same design sitewide?
In-Reply-To: <007701c33e8f$45061da0$0401a8c0@razor>
References: <007701c33e8f$45061da0$0401a8c0@razor>
Message-ID: <1057007115.5575.19.camel@localhost>

It sounds like you need twisted.web.woven.widgets.ExpandMacro. See
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html for an example.

- Matt

On Sun, 2003-06-29 at 23:39, Thomas Weholt wrote:
> Hi,
> 
> I was wondering how I can use Woven and keep the overall "sceleton" of my
> design in one file and wrap that around my templates at run-time? I mean, I
> want to create one page which links to my stylesheet, displays a logo, some
> header-text and a footer that will be the same site wide, and then just glue
> what the different pages generate into the sceleton-file.
> 
> Any clues on how to keep the design in one file and still use Woven?
> 
> Thomas
-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt at pollenation.net



From exarkun at intarweb.us  Mon Jun 30 21:20:32 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 30 Jun 2003 21:20:32 -0400
Subject: [Twisted-Python] MailboxError in imap4.py
In-Reply-To: <1056843911.609.12.camel@mingus>
References: <1056843911.609.12.camel@mingus>
Message-ID: <20030701012032.GA22828@intarweb.us>

On Sat, Jun 28, 2003 at 07:45:12PM -0400, Abe Fettig wrote:
> There's a number of places in twisted/protocols/imap4.py where code
> makes reference to MailboxError - if I'm not mistaken it's supposed to
> be MailboxException.
> 
> trivial patch attached.
> 
> Abe

  Thanks, applied.

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more the the wisest man can answer.
                -- C.C. Colton
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030630/4242b701/attachment.pgp 

From michal at sabren.com  Mon Jun 30 21:52:34 2003
From: michal at sabren.com (Michal Wallace)
Date: Mon, 30 Jun 2003 21:52:34 -0400 (EDT)
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <20030701012032.GA22828@intarweb.us>
Message-ID: <Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>

Hey there,

I wsa trying to get a MoinMoin instance running
through twisted today. It looks to me like MoinMoin
needs some refactoring to get it to work. Aat first
glance it seems to want to pass around a Request
object instead of grabbing certain things out of
global variables.

But... It also looks like it was working at some
point, and there seem to be a few places where it's
actually running out there on the web.

Is there a nonstandard MoinMoin somewhere? I'm
looking at the latest CVS version and latest 
release and both are definitely not ready. 
Or am I missing something? :)

Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From itamar at itamarst.org  Mon Jun 30 22:02:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Jun 2003 22:02:29 -0400
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>
References: <20030701012032.GA22828@intarweb.us>
	<Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>
Message-ID: <20030630220229.38b873ad.itamar@itamarst.org>

On Mon, 30 Jun 2003 21:52:34 -0400 (EDT)
Michal Wallace <michal at sabren.com> wrote:

> But... It also looks like it was working at some
> point, and there seem to be a few places where it's
> actually running out there on the web.

Are you sure it's not people running moin as a CGI? That's what
twistedmatrix.com does.



From glyph at twistedmatrix.com  Mon Jun 30 23:20:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jun 2003 22:20:47 -0500
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <20030630220229.38b873ad.itamar@itamarst.org>
Message-ID: <0257A723-AB73-11D7-A92B-000393C9700E@twistedmatrix.com>

On Monday, June 30, 2003, at 09:02 PM, Itamar Shtull-Trauring wrote:

> Are you sure it's not people running moin as a CGI? That's what
> twistedmatrix.com does.

Considering that the CGI support in Twisted was developed for MoinMoin 
and Mailman, and almost all the bugfixes that made it stable were from 
MoinMoin's maintainer, you could even say that MoinMoin+Twisted CGI 
*is* "Twisted-enabled" MoinMoin :)




From dalke at dalkescientific.com  Sun Jun  1 01:23:51 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 01:23:51 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
Message-ID: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>

Hi,

   I'm working on an add-in for Excel, under MS Windows.  This takes 
information
from the current selection and uses XML-RPC to call a remote server.

   The call may take a while, so I want to have a "Cancel" button.  I
decided to use wxPython for the GUI, with a modal dialog.  Basically,
a wxGauge (for the progress bar) and a "Cancel" button.

   The RPC call itself may take several minutes, so I need to use either
threads or Twisted, and obviously I decided on the latter.  (This is an
in-process add-in; I'm worried about using threads inside the Excel
process itself.)

   I can't figure out how to make this all work together.  There's some
support code in Twisted for wxPython, but it appears to only support
the main event loop, while I'm running a modal window, and never call
my wxApp's MainLoop.

   I tried replacing my wxDialog with a wxFrame, which kinda works, 
except
that the background is very strange.  It looks like it hasn't been
fully initialized.

   I've attached my code, in the hopes that someone here can help me
figure out what to do.

   BTW, Twisted's wxPython support subsumes wx's main loop code.  Is
there any reason there can't be an implementation which hooks into
wx's idle loop, so that users can decide who's in charge?  I think that
would actually fix my problem, since Modals (I think) process the
idle loop ...  Nope, I'm not clever enough to figure that out - my
attempt is attached as "Progress2.py"

					Andrew
					dalke at dalkescientific.com

  
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Progress.py
Type: application/octet-stream
Size: 3780 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030601/3e133d50/attachment-0004.obj>
-------------- next part --------------

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Progress2.py
Type: application/octet-stream
Size: 3784 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030601/3e133d50/attachment-0005.obj>

From andrew-twisted at puzzling.org  Sun Jun  1 01:32:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 1 Jun 2003 17:32:57 +1000
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
References: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601073257.GF19445@frobozz>

On Sun, Jun 01, 2003 at 01:23:51AM -0600, Andrew Dalke wrote:
[...]
>   I can't figure out how to make this all work together.  There's some
> support code in Twisted for wxPython, but it appears to only support
> the main event loop, while I'm running a modal window, and never call
> my wxApp's MainLoop.

Just a quick suggestion (I don't have access to win32 machines) -- does the
recipe at http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
help at all?

-Andrew.




From uwe at oss4u.com  Sun Jun  1 02:57:06 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 1 Jun 2003 01:57:06 -0700
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
References: <FE33DCFC-9401-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <200306010157.06429.uwe@oss4u.com>

Well, I have no idea if you can get this working, but here are my $0.02

The problem with twisted and wx is that both systems are event driven and both 
have a never-ending mainloop to process those events.
As you figured out already, wx is particularly weird with event loops. The wx 
MainLoop processes only non-modal UI events. The moment you open a modal 
window (or a pulldown menu) the mainloop stops looping and waits for some 
"sub-loop" to terminate. Unfortunately this sub-loop depends on the platform 
you are on. AFAIK wxWindows simply uses the loops from the different toolkits 
(GTK, MS ....), so there is basically no way to hook into those loops in a 
platform independant way. Maybe Robin can shed some light on this.

This is also the problem with the twisted wx support code. It works nicely as 
long as you don't use a modal window. Then the code simply stops working. 
That's why I posted a recipe on activestate's python cookbook, which uses a 
timer to run the twisted reactor without actually running the reactor loop. 
This is the only way I could get it working without using threads and as I 
see in your Python2 file you figured that one out.

I am not sure what the wxApp Mainloop does internally. Maybe you try calling 
the Dispatch and ProcessIdle methods once in a while, or dig into the source 
and figure out what they do internally. My guess would be that some UI events 
aren't processed properly.
Another wild idea that just jumped to my mind. Try an event.Skip() at the end 
of you OnIdle handler.  Maybe there is some other internal idle event handler 
that never gets called since you have your own and thus you miss some 
internal handling.

Not much, but maybe it helps.


On Sunday 01 June 2003 12:23 am, Andrew Dalke wrote:
> Hi,
>
>    I'm working on an add-in for Excel, under MS Windows.  This takes
> information
> from the current selection and uses XML-RPC to call a remote server.
>
>    The call may take a while, so I want to have a "Cancel" button.  I
> decided to use wxPython for the GUI, with a modal dialog.  Basically,
> a wxGauge (for the progress bar) and a "Cancel" button.
>
>    The RPC call itself may take several minutes, so I need to use either
> threads or Twisted, and obviously I decided on the latter.  (This is an
> in-process add-in; I'm worried about using threads inside the Excel
> process itself.)
>
>    I can't figure out how to make this all work together.  There's some
> support code in Twisted for wxPython, but it appears to only support
> the main event loop, while I'm running a modal window, and never call
> my wxApp's MainLoop.
>
>    I tried replacing my wxDialog with a wxFrame, which kinda works,
> except
> that the background is very strange.  It looks like it hasn't been
> fully initialized.
>
>    I've attached my code, in the hopes that someone here can help me
> figure out what to do.
>
>    BTW, Twisted's wxPython support subsumes wx's main loop code.  Is
> there any reason there can't be an implementation which hooks into
> wx's idle loop, so that users can decide who's in charge?  I think that
> would actually fix my problem, since Modals (I think) process the
> idle loop ...  Nope, I'm not clever enough to figure that out - my
> attempt is attached as "Progress2.py"
>
> 					Andrew
> 					dalke at dalkescientific.com


--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From dalke at dalkescientific.com  Sun Jun  1 03:10:52 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 03:10:52 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <20030601073257.GF19445@frobozz>
Message-ID: <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>

Andrew Bennetts:
> Just a quick suggestion (I don't have access to win32 machines) -- 
> does the
> recipe at 
> http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
> help at all?

Huh.  I looked there earlier for wxPython examples but didn't see it.  
Turns
out I looked under 'user interfaces' and not 'network', which is where 
that
recipe is located.

Anyone want to add links from the wiki to the wxPython recipes?

Uwe C. Schroeder:
 > [who wrote that recipe, offered additional suggestions]

Cool!  Those should help.  I'll try them out tomorrow (err, today ;)

BTW, I think the problem with my "Progress2.py" is that I need to
remove the IDLE listener when the window exits, but I don't know
how to remove a event listener.

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Sun Jun  1 03:23:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 1 Jun 2003 19:23:40 +1000
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601073257.GF19445@frobozz> <F1B7C615-9410-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601092340.GG19445@frobozz>

On Sun, Jun 01, 2003 at 03:10:52AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >Just a quick suggestion (I don't have access to win32 machines) -- does
> >the recipe at
> >http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780 help at
> >all?
> 
> Huh.  I looked there earlier for wxPython examples but didn't see it.
> Turns out I looked under 'user interfaces' and not 'network', which is
> where that recipe is located.

Well, I just found it by googling for "wxpython twisted" -- of course, I
knew it was there, which always helps when searching :)

-Andrew.




From tv at twistedmatrix.com  Sun Jun  1 03:25:39 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 1 Jun 2003 12:25:39 +0300
Subject: [Twisted-Python] tuntap and friends
In-Reply-To: <20030531220229.7977bbbf.itamar@itamarst.org>
References: <20030531220229.7977bbbf.itamar@itamarst.org>
Message-ID: <20030601092539.GB2659@lapdog>

On Sat, May 31, 2003 at 10:02:28PM -0400, Itamar Shtull-Trauring wrote:
> I think this code should be in its own package.

	Do you mean something like
	twisted.somethingthatisnotinternet.tuntap, or something
	totally separate from Twisted?

	If the former, I'll likely move them to twisted.pair; future
	usage probably includes tuntap, libpcap/libnet, packet(7)
	sockets, etc, and these should probably be in the same
	package. twisted.pair.tuntap, twisted.pair.pcap, etc..

-- 
:(){ :|:&};:



From itamar at itamarst.org  Sun Jun  1 09:24:17 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 11:24:17 -0400
Subject: [Twisted-Python] tuntap and friends
In-Reply-To: <20030601092539.GB2659@lapdog>
References: <20030531220229.7977bbbf.itamar@itamarst.org>
	<20030601092539.GB2659@lapdog>
Message-ID: <20030601112417.7c812e05.itamar@itamarst.org>

On Sun, 1 Jun 2003 12:25:39 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	If the former, I'll likely move them to twisted.pair; future
> 	usage probably includes tuntap, libpcap/libnet, packet(7)
> 	sockets, etc, and these should probably be in the same
> 	package. twisted.pair.tuntap, twisted.pair.pcap, etc..

Yeah, twisted.pair or some other name was what I meant.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From miathan at goliath.darktech.org  Sun Jun  1 09:59:48 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Sun, 1 Jun 2003 17:59:48 +0200
Subject: [Twisted-Python] twisted.internet.stdio: wrong initialisation
Message-ID: <20030601155948.GC2149@mercury.local.net>

Hello,

In twisted.internet.stdio, makeConnection is called on the protocol 
before the writer is set. This is Not Good(TM) because the 
makeConnection might write a welcome banner in some protocols
(twisted.protcols.telnet, for example).

This patch will fix this

--- Twisted/twisted/internet/stdio.py   2003-03-31 21:31:15.000000000 
+0200
+++ Twisted-1.0.5/twisted/internet/stdio.py     2003-06-01 
17:55:26.000000000 +0200
@@ -82,10 +82,11 @@
          _stdio_in_use = 1
          self.fileno = sys.__stdin__.fileno
          fdesc.setNonBlocking(self.fileno())
+        self.writer = StandardIOWriter()
          self.protocol = protocol
          self.protocol.makeConnection(self)
          self.startReading()
-        self.writer = StandardIOWriter()
       def write(self, data):
          """Write some data to standard output.


Wladimir



From tv at twistedmatrix.com  Sun Jun  1 11:40:13 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 1 Jun 2003 20:40:13 +0300
Subject: [Twisted-Python] Patch to improve usability of DNS caching
Message-ID: <20030601174013.GA3782@lapdog>

	Hi. At http://twistedmatrix.com/~tv/dnscache.patch there is a
	patch that adds some things to twisted.names:

	1. Make the resolv.conf location configurable at mktap time.

	2. Reload resolv.conf regularly. resolv_read_interval is the
	   time period, in seconds; currently 60.

	3. Note that pickServer may now return None, if there are no
	   hardcoded servers and resolv.conf is empty/cannot be read.

	This allows me to run a local DNS server bound to
	127.0.0.1:53, list that in /etc/resolv.conf, make my DHCP
	client write it's resolv.conf to
	/var/run/dhclient.resolv.conf, and point my local DNS server
	to that.

	And all this because glibc doesn't reread /etc/resolv.conf for
	long-living processes. And because I want to control the
	.local namespace..

-- 
:(){ :|:&};:



From 2002 at weholt.org  Sun Jun  1 13:59:46 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 1 Jun 2003 21:59:46 +0200
Subject: [Twisted-Python] Twiested.Web supports HTTP-compression and Resume/Rest on HTTP-Requests??
Message-ID: <006401c32878$5d31fed0$0401a8c0@razor>

Does Twisted.Web support request for compressed content, like gzip etc. ??
And does it support Byte-ranges so that you can use resume a disconnected
download?

Can anyone shed some light on these features??

Best regards,
Thomas




From itamar at itamarst.org  Sun Jun  1 14:17:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 16:17:58 -0400
Subject: [Twisted-Python] Twiested.Web supports HTTP-compression and
 Resume/Rest on HTTP-Requests??
In-Reply-To: <006401c32878$5d31fed0$0401a8c0@razor>
References: <006401c32878$5d31fed0$0401a8c0@razor>
Message-ID: <20030601161758.54096536.itamar@itamarst.org>

On Sun, 1 Jun 2003 21:59:46 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Does Twisted.Web support request for compressed content, like gzip
> etc. ??

Not at the moment. There've been patches on the list though.

> And does it support Byte-ranges so that you can use resume a
> disconnected download?

Static file downloads support it (twisted.web.static), IIRC.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Sun Jun  1 16:27:38 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 16:27:38 -0600
Subject: [Twisted-Python] HTTP versions
Message-ID: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>

Speaking of HTTP, I'm starting to look at WebDAV support for
Twisted.  Still evaluating if that's what I need.  Pointers
on how I should start?

Right now I'm just reviewing the existing http code and I've found
various problems.  I've previously reviewed the Python 2.3 code for
similar reasons, so I have a reasonable idea of how the two compare.


I see that protocols/http.py regards the version as a string,
as in

                 if ((version == "HTTP/1.1") and


The HTTP 1.1 spec (RFC 2616) says

    The version of an HTTP message is indicated by an HTTP-Version field
    in the first line of the message.

        HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT

    Note that the major and minor numbers MUST be treated as separate
    integers ... Leading zeros MUST be ignored by recipients and
    MUST NOT be sent.

A fix is to use the 2-ple of (major, minor) version numbers,
as integers, rather than a string.  This is what Python 2.3 does

         if len(words) == 3:
             [command, path, version] = words
             if version[:5] != 'HTTP/':
                 self.send_error(400, "Bad request version (%s)" % 
`version`)
                 return False
             try:
                 base_version_number = version.split('/', 1)[1]
                 version_number = base_version_number.split(".")
                 # RFC 2145 section 3.1 says there can be only one "." 
and
                 #   - major and minor numbers MUST be treated as
                 #      separate integers;
                 #   - HTTP/2.4 is a lower version than HTTP/2.13, which 
in
                 #      turn is lower than HTTP/12.3;
                 #   - Leading zeros MUST be ignored by recipients.
                 if len(version_number) != 2:
                     raise ValueError
                 version_number = int(version_number[0]), 
int(version_number[1]
)
             except (ValueError, IndexError):
                 self.send_error(400, "Bad request version (%s)" % 
`version`)
                 return False
             if version_number >= (1, 1) and self.protocol_version >= 
"HTTP/1.1
":
                 self.close_connection = 0
             if version_number >= (2, 0):
                 self.send_error(505,
                           "Invalid HTTP Version (%s)" % 
base_version_number)
                 return False

While the Twisted code will work for more real-life cases, it isn't
RFC compliant.  Also, the server accepts any sort of version string, 
including
"QWE/1.2".  It should send an error 400, "Bad request version".


I noticed that the headers parsing assumes unique names, with

         self.requests[-1].received_headers[header] = data

the RFC says

    Multiple message-header fields with the same field-name MAY be
    present in a message if and only if the entire field-value for that
    header field is defined as a comma-separated list [i.e., #(values)].
    It MUST be possible to combine the multiple header fields into one
    "field-name: field-value" pair, without changing the semantics of the
    message, by appending each subsequent field-value to the first, each
    separated by a comma. The order in which header fields with the same


Python's code solves this with an rfc822.Header which is dict-like,
but has a way to get all headers which match a given name.

The header code also has some small problems, like suppose that a
header line doesn't have a ":".  Then headerReceived fails in the

         header, data = line.split(':', 1)

and no error code is sent back to the client.  Eg, I started up
the server just now and did

% telnet localhost 8080
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
GET / HTTP/1.1
Spam

Connection closed by foreign host.
%

and the log says

2003/06/01 16:16 MDT [HTTPChannel,0,127.0.0.1] Traceback (most recent 
call last):
           File "./twisted/internet/default.py", line 475, in doSelect
             _logrun(selectable, _drdw, selectable, method, dict)
           File "./twisted/python/log.py", line 65, in callWithLogger
             callWithContext({"system": lp}, func, *args, **kw)
           File "./twisted/python/log.py", line 52, in callWithContext
             return context.call({ILogContext: newCtx}, func, *args, 
**kw)
           File "./twisted/python/context.py", line 32, in 
callWithContext
             return func(*args,**kw)
         --- <exception caught here> ---
           File "./twisted/internet/default.py", line 484, in 
_doReadOrWrite
             why = getattr(selectable, method)()
           File "./twisted/internet/tcp.py", line 222, in doRead
             return self.protocol.dataReceived(data)
           File "./twisted/protocols/basic.py", line 175, in dataReceived
             why = self.lineReceived(line)
           File "./twisted/protocols/http.py", line 910, in lineReceived
             self.headerReceived(self.__header)
           File "./twisted/protocols/http.py", line 927, in 
headerReceived
             header, data = line.split(':', 1)
         exceptions.ValueError: unpack list of wrong size



The cookie parsing code is

     def parseCookies(self):
         """Parse cookie headers.

         This method is not intended for users."""
         cookietxt = self.getHeader("cookie")
         if cookietxt:
             for cook in cookietxt.split('; '):
                 try:
                     k, v = cook.split('=')
                     self.received_cookies[k] = v
                 except ValueError:
                     pass

This doesn't handle quoting, which the standard Cookie.py module does
support.  (Ditto for writing cookies out.)  While I realize that
the cookie code has been there for a while (from 2nd 1/2 of 2001), the
Python code was added to CVS a year previous, and was based on a
older, publically available package.

Overall, I like the code in standard Python better.  Given
my interests though, it seems appropriate that I use Twisted as
the basis for what I'm working on.

Therefore, suppose I were to work on a replacement module for the
http server parsing code, one which assumes 2.3 code (eg, for
datetime parsing).  What else needs to be done to update that
module?


					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sun Jun  1 16:40:23 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 18:40:23 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>
References: <40355912-9480-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601184023.2db5f2c3.itamar@itamarst.org>

On Sun, 1 Jun 2003 16:27:38 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> While the Twisted code will work for more real-life cases, it isn't
> RFC compliant.  Also, the server accepts any sort of version string, 
> including
> "QWE/1.2".  It should send an error 400, "Bad request version".

I don't really care about this, working with real life code is more
important. But if you send me a patch I'll accept it.

> I noticed that the headers parsing assumes unique names, with
> 
>          self.requests[-1].received_headers[header] = data

This is indeed a problem. I had a patch that solved it, but had to back
it out. Sooner or later it will be reintroduced.

> Therefore, suppose I were to work on a replacement module for the
> http server parsing code, one which assumes 2.3 code (eg, for
> datetime parsing).  What else needs to be done to update that
> module?

Twisted depends on 2.2. If you want code to be added to Twisted, it'll
have to require 2.2 only. We also ned backwards compatability with
existing code. Most of the problems you mentioned can be solved with
only a little work using the existing codebase.

Probably what you should do is write a series of patches and send them
to me. They'll have to be backwards compatible, have tests and work on
2.2 in order to be accepted.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From asohn at plus.de  Sun Jun  1 17:00:16 2003
From: asohn at plus.de (asohn at plus.de)
Date: Mon, 2 Jun 2003 01:00:16 +0200
Subject: [Twisted-Python] Andreas Sohn/PLUS/MHM/TUG/DE ist =?iso-8859-1?Q?au=DFer_Haus=2E?=
Message-ID: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>

Ich werde ab  02.06.2003 nicht im Büro sein. Ich kehre zurück am
23.06.2003.

Ich werde Ihre Nachricht nach meiner Rückkehr beantworten.




From lists at ghaering.de  Sun Jun  1 17:25:52 2003
From: lists at ghaering.de (Gerhard Haering)
Date: Mon, 2 Jun 2003 01:25:52 +0200
Subject: [Twisted-Python] Andreas Sohn/PLUS/MHM/TUG/DE ist au?er Haus.
In-Reply-To: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>
References: <OF33DA6818.9F1E9BB5-ONC1256D38.007E5E20@uz.tengelmann.de>
Message-ID: <20030601232551.GA2910@mephisto.ghaering.de>

* asohn at plus.de <asohn at plus.de> [2003-06-02 01:00 +0200]:
> Ich werde ab  02.06.2003 nicht im B?ro sein. Ich kehre zur?ck am
> 23.06.2003.
> 
> Ich werde Ihre Nachricht nach meiner R?ckkehr beantworten.

In English:

"I'll not be in the office from 02.06.2003 on. I'll be back [1] at
23.06.2003.

I'll respond to your message once I'm back."

That's just the corporate email user's way of asking to be unsubscribed
from this list so we don't get tons of such "meaningful" autoresponder
messages.

Gerhard

[1] This is meant to be spoken with an austrian accent, of course.
-- 
http://ghaering.de/



From dalke at dalkescientific.com  Sun Jun  1 17:54:45 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 17:54:45 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601184023.2db5f2c3.itamar@itamarst.org>
Message-ID: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar:
> I don't really care about this, working with real life code is more
> important. But if you send me a patch I'll accept it.

I can send a patch, but I don't know the dependencies of clients
on having a version string over a 2-ple, which is what I would
prefer.

What about something like

class Version:
   def __init__(self, s, v):
     self.s = s  # a string, as in "HTTP/1.1"
     self.v = v  # a 2-ple, as in (1, 1)
   def __cmp__(self, other):
     if isinstance(other, Version):
       return cmp(self.v, other.v)
     if isinstance(other, basestring):  # or as appropriate for Python 
2.1
       # generate a deprecation warning here
       return cmp(self.s, other)
     return cmp(self.v, other)
   def __rcmp__(self, other):
     return -cmp(self, other)
   def __getitem__(self, i):
     return self.v[i]

which would be an interim solution that would pass the
existing regression tests and provide a transition to a 2-ple
based version.


>> I noticed that the headers parsing assumes unique names, with
>>
>>          self.requests[-1].received_headers[header] = data
>
> This is indeed a problem. I had a patch that solved it, but had to back
> it out. Sooner or later it will be reintroduced.

What about using just rfc822.Message?  That's in Python 2.2.

> Twisted depends on 2.2. If you want code to be added to Twisted, it'll
> have to require 2.2 only. We also ned backwards compatability with
> existing code. Most of the problems you mentioned can be solved with
> only a little work using the existing codebase.
>
> Probably what you should do is write a series of patches and send them
> to me. They'll have to be backwards compatible, have tests and work on
> 2.2 in order to be accepted.

I used the wrong term.  I said "replacement" when I should have
said "in addition to".  That is, code which would eventually become
the standard code for Twisted once it requires 2.3 (after all, 2.3
isn't out yet!)

My major complaint, by the way, is not that there are small problems
with the code.  It's that Twisted duplicates functionality from standard
Python, when the Python code is just as usable for that situation and
has fewer problems.  And going the other way, the Python 2.3 
implementation
doesn't have the "\r\n" workaround Twisted has for handling IE problems.
If those could be combined, then there are more people supporting the 
same
codebase, so hopefully fewer bugs, and easier to share experience 
between
the two.

A downside is the dependency on Python releases to fix patches, but
any bugs at this point will be distributed at the patch level, and
there's always the possibility of just including the patched code
with Twisted until the next Python update.

"Backwards compatible" is somewhat of an issue.  I don't know which
methods are published and which are unpublished.  Is it expected that
people will (or do) derive from twisted.protocols.http.HTTPChannel ?
If so, then can I change the behaviour or simply eliminate the
headerReceived method?  (I would rather accumulate all headers then
parse them into a Message in one go.)  What about the other methods?

I can make the existing regressions all pass, but a review of the
regressions show that it doesn't test everything that could be tested,
so I need to either ask questions first (as I'm doing) or be extreme
about it and say that if it passes the tests then it must be fine ;)

					Andrew
					dalke at dalkescientific.com




From gary at zope.com  Sun Jun  1 18:05:02 2003
From: gary at zope.com (Gary Poster)
Date: Sun, 01 Jun 2003 20:05:02 -0400
Subject: [Twisted-Python] Deferred usage clarification
Message-ID: <3EDA94AE.1090303@zope.com>

Hi.  A newbie question: I'd like a bit of clarification in Deferred 
usage.  More specifically, it would be nice if one of the examples on 
the Twisted Deferred howto page used a real blocking call rather than a 
reactor.callLater.

So, to see if I'm on the right track, I'd like to modify the third code 
example to use a sleep, to make it better parallel the first code 
snippet on the howto page.

First, here it is from the page, without modification:

-----8<-----8<-----8<-----
from twisted.internet import reactor, defer

class Getter:
     def getData(self, x):
         # this won't block
         d = defer.Deferred()
         reactor.callLater(2, d.callback, x * 3)
         return d

def printData(d):
     print d

g = Getter()
d = g.getData(3)
d.addCallback(printData)

reactor.callLater(4, reactor.stop); reactor.run()
-----8<-----8<-----8<-----

Here's my modification.  Is this the right usage?

-----8<-----8<-----8<-----
from twisted.internet import reactor, defer
import time

class Getter:
     def getData(self, x):
         # this won't block
         d = defer.Deferred()
         reactor.callLater(0, self.doWork, x, d)
         return d

     def doWork(self, x, deferred):
         # churn, churn, churn
         time.sleep(2)
         deferred.callback(x * 3)

def printData(d):
     print d

g = Getter()
d = g.getData(3)
d.addCallback(printData)

reactor.callLater(4, reactor.stop); reactor.run()
-----8<-----8<-----8<-----

Thanks!

Gary




From andrew-twisted at puzzling.org  Sun Jun  1 18:31:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 2 Jun 2003 10:31:39 +1000
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <3EDA94AE.1090303@zope.com>
References: <3EDA94AE.1090303@zope.com>
Message-ID: <20030602003139.GA3067@frobozz>

On Sun, Jun 01, 2003 at 08:05:02PM -0400, Gary Poster wrote:
> Hi.  A newbie question: I'd like a bit of clarification in Deferred 
> usage.  More specifically, it would be nice if one of the examples on 
> the Twisted Deferred howto page used a real blocking call rather than a 
> reactor.callLater.
> 
> So, to see if I'm on the right track, I'd like to modify the third code 
> example to use a sleep, to make it better parallel the first code 
> snippet on the howto page.
> 
> First, here it is from the page, without modification:
> 
[...]
> 
> Here's my modification.  Is this the right usage?

No -- see below.

> -----8<-----8<-----8<-----
[...]
> class Getter:
>     def getData(self, x):
>         # this won't block
>         d = defer.Deferred()
>         reactor.callLater(0, self.doWork, x, d)
>         return d
> 
>     def doWork(self, x, deferred):
>         # churn, churn, churn
>         time.sleep(2)
>         deferred.callback(x * 3)
[...]
> -----8<-----8<-----8<-----

You're misunderstanding the purpose of Deferreds.  They don't do any magic
to make blocking calls happen asynchronously.

A Deferred is simply a result that hasn't arrived yet.  When the result of
some function can take some arbitrary amount of time to happen, it will
return a Deferred, rather than holding up the execution of the rest of the
program.  A Deferred is a promise that a result (or failure) will arrive
eventually, and provides a convenient abstraction to attach callbacks to
that is far more usuable than riddling your code with functions that take a
method to callback when they're done.

How the result arrives later is entirely up to the code that returns the
Deferred.  It might simply send an HTTP request, and wait for the result to
arrive off the network; it might query a database; it might split the work
up into small chunks that it schedules using callLater; or it might just use
deferToThread.  All that matters is that at some point "d.callback(result)"
or "d.errback(failure)" is called (or you could call d.setTimeout(...) if
you aren't sure you want to wait indefinitely).

Does this make sense?

Regards,

-Andrew.




From gary at zope.com  Sun Jun  1 19:27:09 2003
From: gary at zope.com (Gary Poster)
Date: Sun, 01 Jun 2003 21:27:09 -0400
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <20030602003139.GA3067@frobozz>
References: <3EDA94AE.1090303@zope.com> <20030602003139.GA3067@frobozz>
Message-ID: <3EDAA7ED.7030600@zope.com>

Thanks for the quick reply!

Andrew Bennetts wrote:
> You're misunderstanding the purpose of Deferreds.  They don't do any magic
> to make blocking calls happen asynchronously.
...snip...
> 
> Does this make sense?

Yes.  Looks like deferToThread would be the simplest way to do what I 
want.  I wonder if you (or someone) would answer a similarly newbie-like 
follow up, though.

I see the pattern
   reactor.callLater(0, function)
a lot--this doesn't have thread semantics, though, so what is 
accomplished by specifying the 0 second delay?

Thanks again

Gary




From andrew-twisted at puzzling.org  Sun Jun  1 19:52:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 2 Jun 2003 11:52:06 +1000
Subject: [Twisted-Python] Deferred usage clarification
In-Reply-To: <3EDAA7ED.7030600@zope.com>
References: <3EDA94AE.1090303@zope.com> <20030602003139.GA3067@frobozz> <3EDAA7ED.7030600@zope.com>
Message-ID: <20030602015206.GB3067@frobozz>

On Sun, Jun 01, 2003 at 09:27:09PM -0400, Gary Poster wrote:
> Andrew Bennetts wrote:
> >You're misunderstanding the purpose of Deferreds.  They don't do any magic
> >to make blocking calls happen asynchronously.
> ...snip...
> >
> >Does this make sense?
> 
> Yes.  Looks like deferToThread would be the simplest way to do what I 
> want.  I wonder if you (or someone) would answer a similarly newbie-like 
> follow up, though.
> 
> I see the pattern
>   reactor.callLater(0, function)
> a lot--this doesn't have thread semantics, though, so what is 
> accomplished by specifying the 0 second delay?

This one's easy ;)

That idiom just runs that function in the next iteration of the event loop
-- so more events (more network traffic, or other delayed calls, gui events,
or whatever) can be processed immediately if necessary.

A single reactor.callLater(0, ...) won't make a big improvement to the
responsiveness of the program -- delaying a 3-second blocking call still
blocks the program for 3 seconds.  But if you can break up a long-running
calculation into smaller pieces, then it can help alot.  Imagine you just
suddenly received 20000 rows of data from a database; processing that all in
one hit will probably take a noticeable amount of time, even if that
processing is trivial.  But if you break up the processing into chunks of,
say, 100 rows at a time, your app will be much more responsive to external
events while still getting the work done.

Another use for postponing something to the next iteration of the event-loop
is simply to ensure that the function doesn't run until something else has
happened in *this* iteration.  Using it like this is fairly subtle; you'd be
well-advised to comment thoroughly what you're doing if you do this.

-Andrew.




From itamar at itamarst.org  Sun Jun  1 21:10:40 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 23:10:40 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601184023.2db5f2c3.itamar@itamarst.org>
	<6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030601231040.27222818.itamar@itamarst.org>

On Sun, 1 Jun 2003 17:54:45 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> I can send a patch, but I don't know the dependencies of clients
> on having a version string over a 2-ple, which is what I would
> prefer.

All backwards compatability has to be in the Request class interfaces -
whatever stuff a end user might be using.

> What about using just rfc822.Message?  That's in Python 2.2.

Not good enough - MIME stuff should be stored on disk if its large (i.e.
file uploads). I did it using cgi.FieldStorage, and it was backwards
compatible too, but it broke twisted.web.distrib, which *sucked* :(
distrib needs to be fixed so it gets a stream, and then we can mess with
Request as much as we want.

> I used the wrong term.  I said "replacement" when I should have
> said "in addition to".  That is, code which would eventually become
> the standard code for Twisted once it requires 2.3 (after all, 2.3
> isn't out yet!)

I'd have to see the code before deciding.

> My major complaint, by the way, is not that there are small problems
> with the code.  It's that Twisted duplicates functionality from
> standard Python, when the Python code is just as usable for that
> situation and has fewer problems.  And going the other way, the Python
> 2.3 implementation
> doesn't have the "\r\n" workaround Twisted has for handling IE
> problems. If those could be combined, then there are more people
> supporting the same
> codebase, so hopefully fewer bugs, and easier to share experience 
> between
> the two.

A lot of this is for historical reasons - Twisted only depending on
1.5.2, and then 2.1. 2.2 support is really new.

> A downside is the dependency on Python releases to fix patches, but
> any bugs at this point will be distributed at the patch level, and
> there's always the possibility of just including the patched code
> with Twisted until the next Python update.

Because we can release Twisted so much faster, we usually prefer to just
patch Twisted.

> "Backwards compatible" is somewhat of an issue.  I don't know which
> methods are published and which are unpublished.  Is it expected that
> people will (or do) derive from twisted.protocols.http.HTTPChannel ?
> If so, then can I change the behaviour or simply eliminate the
> headerReceived method?  (I would rather accumulate all headers then
> parse them into a Message in one go.)  What about the other methods?

Request methods and attributes that users are likely to use is what
counts.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sun Jun  1 21:15:46 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 1 Jun 2003 23:15:46 -0400
Subject: [Twisted-Python] twisted.internet.stdio: wrong initialisation
In-Reply-To: <20030601155948.GC2149@mercury.local.net>
References: <20030601155948.GC2149@mercury.local.net>
Message-ID: <20030601231546.24528bad.itamar@itamarst.org>

On Sun, 1 Jun 2003 17:59:48 +0200
"W.J." <miathan at goliath.darktech.org> wrote:

> In twisted.internet.stdio, makeConnection is called on the protocol 
> before the writer is set. This is Not Good(TM) because the 
> makeConnection might write a welcome banner in some protocols
> (twisted.protcols.telnet, for example).

Done, thanks for the bug report.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Sun Jun  1 21:46:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 1 Jun 2003 23:46:54 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Sun, Jun 01, 2003 at 19:54:45 -0400
References: <6BBAEBF6-948C-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602034654.GA543@toshi.anaprd01.md.comcast.net>

On 2003.06.01 19:54, Andrew Dalke wrote:
> Itamar:
> > I don't really care about this, working with real life code is more
> > important. But if you send me a patch I'll accept it.
> 
> I can send a patch, but I don't know the dependencies of clients
> on having a version string over a 2-ple, which is what I would
> prefer.
> 
> What about something like

[snip Version class]

This is over-doing it; just store the tuple-ified version in a different
attribute.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Sun Jun  1 22:22:36 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 22:22:36 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601231040.27222818.itamar@itamarst.org>
Message-ID: <D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar:
> All backwards compatability has to be in the Request class interfaces -
> whatever stuff a end user might be using.

Okay, much easier.  I wasn't sure if the HTTPChannel was meant to
be derivable.

>> What about using just rfc822.Message?  That's in Python 2.2.
>
> Not good enough - MIME stuff should be stored on disk if its large 
> (i.e.
> file uploads). I did it using cgi.FieldStorage, and it was backwards
> compatible too, but it broke twisted.web.distrib, which *sucked* :(
> distrib needs to be fixed so it gets a stream, and then we can mess 
> with
> Request as much as we want.

The Message is used only for parsing the headers, so file uploads
aren't relevant.  As it is now, the headers are processed, line by line.
Partial lines are stored in-memory as "__header", when a full line,
including continuations, is read, it's passed to an in-memory dict,
which is eventually passed to the Request.  There's no disk involvement
at all, and this is all that I plan to change.

My replacement would write those header lines into a cStringIO.StringIO
then use Message to get the headers out of that StringIO.

So I don't know what you mean about storing MIME stuff on disk.

Now, if there are a large number of headers, there might be a problem,
but then again, there's a problem with the current implementation.

BTW, is there a way to limit the amount of data which can be passed
in a header?  I don't like the potential DoS attack possible either
through dumping 1GB of header to the server, or by the hash collision
attack mentioned recently on c.l.py.  One solution is to do as Apache
does and limit the header to N bytes total.

> A lot of this is for historical reasons - Twisted only depending on
> 1.5.2, and then 2.1. 2.2 support is really new.

Oh, I understand that.  Is there a reason to keep the historical
differences?  I think there should be a migration path to make
Twisted use more of existing Python libraries.

> Request methods and attributes that users are likely to use is what
> counts.

Understood.  I don't think that interface code will change all
that much, except that I would like a 2-ple version ... ahh! I
can just make a "version" and a "version_tuple", rather like
what Python does.  Those are just attributes, after all.

					Andrew




From dalke at dalkescientific.com  Sun Jun  1 22:23:22 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 1 Jun 2003 22:23:22 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602034654.GA543@toshi.anaprd01.md.comcast.net>
Message-ID: <F22D4929-94B1-11D7-B9B9-000393C92466@dalkescientific.com>

Christopher Armstrong:
> This is over-doing it; just store the tuple-ified version in a 
> different
> attribute.

Yup!

					andrew




From itamar at itamarst.org  Sun Jun  1 22:55:01 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 00:55:01 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030601231040.27222818.itamar@itamarst.org>
	<D69B306C-94B1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602005501.7b8da5d9.itamar@itamarst.org>

On Sun, 1 Jun 2003 22:22:36 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> The Message is used only for parsing the headers, so file uploads
> aren't relevant.  As it is now, the headers are processed, line by
> line. Partial lines are stored in-memory as "__header", when a full
> line, including continuations, is read, it's passed to an in-memory
> dict, which is eventually passed to the Request.  There's no disk
> involvement at all, and this is all that I plan to change.

I'm pretty sure cgi.FieldStorage parses *everything*, headers, file
uploads, request args, etc, and so we may as well use that. You can see
my patch somewhere around the 0.99.7 release, IIRC, in CVS (check out
the viewcvs web interface to find it).

> BTW, is there a way to limit the amount of data which can be passed
> in a header?  I don't like the potential DoS attack possible either
> through dumping 1GB of header to the server, or by the hash collision
> attack mentioned recently on c.l.py.  One solution is to do as Apache
> does and limit the header to N bytes total.

Lines length is limited by LineReceiver class.

> Oh, I understand that.  Is there a reason to keep the historical
> differences?  I think there should be a migration path to make
> Twisted use more of existing Python libraries.

A migration path isn't necessary. If you can make Twisted be shorter,
less buggy by using Python standard lib, feel free. Just as long as its
backwards compatible.

> Understood.  I don't think that interface code will change all
> that much, except that I would like a 2-ple version ... ahh! I
> can just make a "version" and a "version_tuple", rather like
> what Python does.  Those are just attributes, after all.

Right, that's the general approach.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From arashi1 at pd.jaring.my  Mon Jun  2 00:54:02 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Mon, 2 Jun 2003 14:54:02 +0800
Subject: [Twisted-Python] Woven and WML
In-Reply-To: <D1706E21-932B-11D7-A64D-000A95864FC4@twistedmatrix.com>
References: <D1706E21-932B-11D7-A64D-000A95864FC4@twistedmatrix.com>
Message-ID: <200306021454.03046.arashi1@pd.jaring.my>

> The woven-specific attributes should really all be removed -- any that
> are left in are just there because I have been lazy about it, since as
> you observe modern browsers don't care. I'll try to go through and make
> sure woven outputs clean XHTML by the next release... I have been
> meaning to do it for a while anyway.
>

Could we set this removal of woven 'html' attributes (on final output html) on 
a flag or option? I have found that the attributes can be helpful in tracking 
down some silly bugs in my code (like not setting controller to the right 
object and so on). 



From dalke at dalkescientific.com  Mon Jun  2 00:55:29 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 00:55:29 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602005501.7b8da5d9.itamar@itamarst.org>
Message-ID: <328553F2-94C7-11D7-B9B9-000393C92466@dalkescientific.com>

I've been reviewing the http.py code.  It seems there's a bug in the
following, when there is an IE connect.

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
             if not self.persistent:
                 self.dataReceived = self.lineReceived = lambda *args: 
None
                 return

             # create a new Request object
             request = self.requestFactory(self, len(self.requests))
             self.requests.append(request)

             # IE sends an extraneous empty line (\r\n) after a POST 
request;
             # eat up such a line, but only ONCE
             if not line and self.__first_line == 1:
                 self.__first_line = 2
                 return


As written, IE with the bug will create two Request objects.

Here's a bugfix, which swaps the last two sections

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
             if not self.persistent:
                 self.dataReceived = self.lineReceived = lambda *args: 
None
                 return

             # IE sends an extraneous empty line (\r\n) after a POST 
request;
             # eat up such a line, but only ONCE
             if not line and self.__first_line == 1:
                 self.__first_line = 2
                 return

             # create a new Request object
             request = self.requestFactory(self, len(self.requests))
             self.requests.append(request)


					Andrew




From dalke at dalkescientific.com  Mon Jun  2 00:56:38 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 00:56:38 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030602005501.7b8da5d9.itamar@itamarst.org>
Message-ID: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>

Oops!  Sorry about that ... bug report should have gone to the
bug tracker.

					Andrew




From radix at twistedmatrix.com  Mon Jun  2 01:03:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 2 Jun 2003 03:03:37 -0400
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Mon, Jun 02, 2003 at 02:56:38 -0400
References: <5B66952A-94C7-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030602070337.GC543@toshi.anaprd01.md.comcast.net>

On 2003.06.02 02:56, Andrew Dalke wrote:
> Oops!  Sorry about that ... bug report should have gone to the
> bug tracker.

Sending to the list is fine - generally we recommend posting to the bug
tracker after you've sent to the list and have been ignored for a few
days :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Mon Jun  2 03:13:48 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 03:13:48 -0600
Subject: [Twisted-Python] HTTP versions
In-Reply-To: <20030601231040.27222818.itamar@itamarst.org>
Message-ID: <84CEA432-94DA-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring
> I'd have to see the code before deciding.

I've attached a sketch, as it were, of how the new code would look.
I've not tested it at all.  The goal is to have something more concrete
to talk about.  The major change is in the HTTPChannel, with a few
changes to how the Request constructor is called & works.


I've also reviewed the code and made comments on a few sections which
might also be cleared up.  These are marked with "APD".  (Some require
python 2.3 modules, others don't.)

Oh, and the requestDone method in http.py currently has

   if request != self.requests[0]: raise TypeError

That "!=" should be an "is not"

					Andrew
					dalke at dalkescientific.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: http2.py
Type: application/octet-stream
Size: 19186 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030602/765f7f76/attachment-0002.obj>

From exarkun at intarweb.us  Mon Jun  2 04:28:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 2 Jun 2003 06:28:05 -0400
Subject: [Twisted-Python] Conch connection caching behavior over (laptop) suspend actions
Message-ID: <20030602102805.GA3463@meson.dyndns.org>

  I use conch connection sharing pretty extensively, and I love it.  As I've
been working on a laptop a lot lately, I've noticed something a little
undesirable though.  When I suspend long enough to disrupt my network
connection, then resume, the conch process seems not to be aware that it no
longer has a network connection.  The ~/.conch-* unix socket remains, and
any attempts to connect with conch to the host hang indefinitely.  Killing
the owner of the unix socket, or simply deleting the unix socket resolves
the issue.

  Could conch be made to act a little better in this situation?

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030602/d229a48c/attachment.sig>

From mkimpenhaus at plus.de  Mon Jun  2 08:26:13 2003
From: mkimpenhaus at plus.de (mkimpenhaus at plus.de)
Date: Mon, 2 Jun 2003 16:26:13 +0200
Subject: [Twisted-Python] Is twisted supposed to run on AIX/HPUX?
Message-ID: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>

Hi @all,

is it possible to run twisted on an AIX/HPUX System?

Best regards,

Marcus Kimpenhaus 

Plus Warenhandelsgesellschaft mbH 
Zentrale Anwendungs- und Entwicklungssysteme 
Wissollstr. 5 - 43 
45478   Mülheim an der Ruhr 

Telefon:   +49 (208) 583 2194 
Telefax:   +49 (208) 583 xxxx 
 
mailto:mkimpenhaus at plus.de
http://www.plus.de 
PS: Kennen Sie schon unseren Plus Online Shop unter http://www.plus.de ?
Hier können Sie in Ruhe in unseren pluspunkt Aktions-Angeboten stöbern, 
diese schon vor
der Verfügbarkeit in den Filialen online bestellen und sich bequem nach 
Hause liefern lassen!
Zusätzlich finden Sie hier attraktive Online Specials zu "Kleinen Preisen" 
sowie unseren
Digitalen Fotoservice - hier werden Ihre Bilder schon ab 0,15 Euro 
entwickelt.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030602/bbe2ffb0/attachment.html>

From m at moshez.org  Mon Jun  2 09:03:41 2003
From: m at moshez.org (Moshe Zadka)
Date: 2 Jun 2003 15:03:41 -0000
Subject: [Twisted-Python] Is twisted supposed to run on AIX/HPUX?
In-Reply-To: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>
References: <OF3BA66607.1859CFE2-ONC1256D39.004F25D4@uz.tengelmann.de>
Message-ID: <20030602150341.16294.qmail@green.zadka.com>

There's no need for HTML mail, nor for 5-line signatures in German
(this mailing list is in English)

On Mon, 2 Jun 2003, mkimpenhaus at plus.de wrote:

> is it possible to run twisted on an AIX/HPUX System?

Possibly. Did you try it? None of the core Twisted developers
(AFAIK) has access to such systems.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From lkurisaki at ambiron.net  Mon Jun  2 11:03:53 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 12:03:53 -0500
Subject: [Twisted-Python] Problem with ReverseProxy and POST requests
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>

I'm trying to use the Reverse Proxy, and found that the example
(proxy.py) works fine for GET requests, but not for POSTs. The problem
was that the body of the POST was not being forwarded, so the request
would hang while the destination server waited for the rest of the body.

I fixed it with the following patch to the ReverseProxyResource method
in the module twisted.web.proxy.

					Lance


Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.11
diff -c -r1.11 proxy.py
*** twisted/web/proxy.py        8 Jan 2003 14:18:56 -0000       1.11
--- twisted/web/proxy.py        2 Jun 2003 16:54:36 -0000
***************
*** 178,183 ****
--- 178,184 ----

      def render(self, request):
          request.received_headers['host'] = self.host
+         request.content.seek(0, 0)
          clientFactory = ProxyClientFactory(request.method, self.path,
                                       request.clientproto,
                                       request.getAllHeaders(),



From itamar at itamarst.org  Mon Jun  2 12:12:00 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 14:12:00 -0400
Subject: [Twisted-Python] Problem with ReverseProxy and POST requests
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11144D@chi03-mail.usambiron.net>
Message-ID: <20030602141200.55b4cde0.itamar@itamarst.org>

On Mon, 2 Jun 2003 12:03:53 -0500
"Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> I fixed it with the following patch to the ReverseProxyResource method
> in the module twisted.web.proxy.

Done. Thanks!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Mon Jun  2 15:33:37 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 15:33:37 -0600
Subject: [Twisted-Python] Excel, Twisted, and wxPython
In-Reply-To: <200306010157.06429.uwe@oss4u.com>
Message-ID: <DED10FC3-9541-11D7-B9B9-000393C92466@dalkescientific.com>

Uwe C. Schroeder:
> This is also the problem with the twisted wx support code. It works 
> nicely as
> long as you don't use a modal window. Then the code simply stops 
> working.
> That's why I posted a recipe on activestate's python cookbook, which 
> uses a
> timer to run the twisted reactor without actually running the reactor 
> loop.
> This is the only way I could get it working without using threads and 
> as I
> see in your Python2 file you figured that one out.

Okay, I used your recipe and got it to work.  Thanks!

I did have a problem with it.  wxApp under MS Windows starts a new 
window
to show stdout and stderr.  That window wasn't closed when the app 
finished,
which caused the error

  Debug: e:\projects\wx\src\msw\app.cpp(466): 'UnregisterClass(no redraw 
canvas)'
  failed with error 0x00000584 (class still has open windows.).

Deriving from wxPythonSimpleApp fixed it, and it turns out the real fix
is to set "redirect" to 0 in the wxApp constructor.  This prevents the
output window from opening.

I added this comment to the recipe as well.

					Andrew
					dalke at dalkescientific.com




From lkurisaki at ambiron.net  Mon Jun  2 17:24:57 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 18:24:57 -0500
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>

The ReverseProxy doesn't send an X-Forwarded-For header field with the
real client's IP address. This convention is used by Squid, Pound, and
other proxies to communicate the real client's IP address to the
destination server.

I added the header with the following patch.

					Lance

Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.12
diff -c -r1.12 proxy.py
*** twisted/web/proxy.py        2 Jun 2003 18:14:59 -0000       1.12
--- twisted/web/proxy.py        2 Jun 2003 23:14:59 -0000
***************
*** 178,183 ****
--- 178,184 ----

      def render(self, request):
          request.received_headers['host'] = self.host
+       request.received_headers["x-forwarded-for"] = request.client[1]
          request.content.seek(0, 0)
          clientFactory = ProxyClientFactory(request.method, self.path,
                                       request.clientproto,



From itamar at itamarst.org  Mon Jun  2 19:53:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 2 Jun 2003 21:53:20 -0400
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
 header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
Message-ID: <20030602215320.268eff5f.itamar@itamarst.org>

Done. Thanks!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From lkurisaki at ambiron.net  Mon Jun  2 21:21:29 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Mon, 2 Jun 2003 22:21:29 -0500
Subject: [Twisted-Python] ReverseProxy does not log requests
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>

The ReverseProxy does not log its requests.

The following patch adds request logging and silences the "Starting
factory..." and "Stopping factory..." log messages.

I'm not sure if the "proper" place to do the logging is in the render()
method of ReverseProxyResource, but it seems to work... :-)

					Lance


Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.13
diff -c -r1.13 proxy.py
*** twisted/web/proxy.py        3 Jun 2003 01:56:22 -0000       1.13
--- twisted/web/proxy.py        3 Jun 2003 03:11:39 -0000
***************
*** 177,182 ****
--- 177,184 ----
          return ReverseProxyResource(self.host, self.port,
self.path+'/'+path)

      def render(self, request):
+       request.channel.factory.log(request)    # log request...
+
          request.received_headers['host'] = self.host
          request.received_headers["x-forwarded-for"] =
request.client[1]
          request.content.seek(0, 0)
***************
*** 185,189 ****
--- 187,194 ----
                                       request.getAllHeaders(),
                                       request.content.read(),
                                       request)
+
+       clientFactory.noisy = 0
+
          reactor.connectTCP(self.host, self.port, clientFactory)
          return server.NOT_DONE_YET



From m at moshez.org  Mon Jun  2 22:48:02 2003
From: m at moshez.org (Moshe Zadka)
Date: 3 Jun 2003 04:48:02 -0000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
 header
In-Reply-To: <20030602215320.268eff5f.itamar@itamarst.org>
References: <20030602215320.268eff5f.itamar@itamarst.org>, <71041B2C80BFDE4493468955AFAC59DB111459@chi03-mail.usambiron.net>
Message-ID: <20030603044802.13408.qmail@green.zadka.com>

On Mon, 2 Jun 2003, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> Done. Thanks!

I have reverted this patch, for the following reasons:

1. It removes functionality: there is no way for subclasses to avoid sending
   this header, while it is easy, the way the code is now, for a subclass
   to add this header if it so wishes.

2. It divulges private information (the client's IP) to possibly hostile
   parties.

If you really want this, just do it in a custom subclass.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From dalke at dalkescientific.com  Mon Jun  2 23:05:27 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 23:05:27 -0600
Subject: [Twisted-Python] xmlrpc doesn't catch XML parsing exceptions
Message-ID: <FDA0F9FA-9580-11D7-B9B9-000393C92466@dalkescientific.com>

I used the Twisted code to connect to a URI which wasn't providing 
XML-RPC
services but is providing HTML.  The XML-RPC code tried to parse the
HTML response, and failed.  It reported the failure correctly, but also
spewed a traceback to stdout.  Here's what stdout looks like


Traceback (most recent call last):
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 473, in
  doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 64, 
in callWi
thLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 51, 
in callWi
thContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\context.py", line 
32, in ca
llWithContext
     return func(*args,**kw)
--- <exception caught here> ---
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 482, in
  _doReadOrWrite
     why = getattr(selectable, method)()
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
219, in doR
ead
     return self.protocol.dataReceived(data)
   File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line 
179, in
dataReceived
     return self.rawDataReceived(data)
   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line 
341, in r
awDataReceived
     self.handleResponseEnd()
   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line 
323, in h
andleResponseEnd
     self.handleResponse(b)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 174, 
in handl
eResponse
     self.factory.parseResponse(contents)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 199, 
in parse
Response
     response = xmlrpclib.loads(contents)
   File "E:\Python22\lib\xmlrpclib.py", line 804, in loads
     p.feed(data)
   File "E:\Python22\lib\xmlrpclib.py", line 390, in feed
     self._parser.Parse(data, 0)
xml.parsers.expat.ExpatError: mismatched tag: line 10, column

The reason is twisted.web.xmlrpc, which has

     def parseResponse(self, contents):
         if not self.deferred:
             return
         try:
             response = xmlrpclib.loads(contents)
         except xmlrpclib.Fault, error:
             self.deferred.errback(error)
             self.deferred = None
         else:
             self.deferred.callback(response[0][0])
             self.deferred = None

There's nothing which handles an XML parsing error.

I don't know who to blame here.  I would like a

         except "XML parsing error", error:

here as well, but there's no way to spell that.  The xmlrpclib code 
chooses
the fastest parser available, and the different parsers could throw 
different
exceptions.  Eg, the Expat parser throws an ExpatError, which is derived
directly from Exception, and shares no other base class with

The best I can think of now is to catch anything which isn't a "normal"
Python exception, that is

         except (StandardError, SystemExit, StopIteration):
             raise
         except (xmlrpclib.Fault, Exception), error:
             self.deferred.errback(error)

(could also use a bare except, but I think that's overkill for this 
case.)
Even that's not perfect.  xmllib.Error is derived from RuntimeError(!).
OTOH, that module is deprecated ....

Oh! Since Fault is derived from exception, could just catch Exception
instead of the 2-ple I have there.

Let me point out that Twisted did a good job of catching the error at a 
higher
level and correctly sending it to my handler, so even if this had 
occurred in
production code the app would have kept working as expected.  This is 
good.

					Andrew
					dalke at dalkescientific.com




From lkurisaki at ambiron.net  Mon Jun  2 23:08:33 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Tue, 3 Jun 2003 00:08:33 -0500
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>

I understand your reasons and agree. My only reservation is that if
someone wants to send the header, it's not immediately obvious (wasn't
to me, anyway) what the proper line of code is and where it should go.
It took me a while to figure it out.

Perhaps if we make it dependent on an instance attribute, such as
"sendXForwardedFor", which is by default set to 0?

I have no problem if you decide to leave it out entirely, though...

					Lance

-----Original Message-----
From: Moshe Zadka [mailto:m at moshez.org] 
Sent: Monday, June 02, 2003 9:48 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For
header


On Mon, 2 Jun 2003, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> Done. Thanks!

I have reverted this patch, for the following reasons:

1. It removes functionality: there is no way for subclasses to avoid
sending
   this header, while it is easy, the way the code is now, for a
subclass
   to add this header if it so wishes.

2. It divulges private information (the client's IP) to possibly hostile
   parties.

If you really want this, just do it in a custom subclass.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
Agile Programming Language -- http://www.python.org/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From andrew-twisted at puzzling.org  Mon Jun  2 23:18:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 3 Jun 2003 15:18:19 +1000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
Message-ID: <20030603051819.GB11968@frobozz>

On Tue, Jun 03, 2003 at 12:08:33AM -0500, Lance Kurisaki wrote:
> I understand your reasons and agree. My only reservation is that if
> someone wants to send the header, it's not immediately obvious (wasn't
> to me, anyway) what the proper line of code is and where it should go.
> It took me a while to figure it out.
> 
> Perhaps if we make it dependent on an instance attribute, such as
> "sendXForwardedFor", which is by default set to 0?

A simpler solution may be to simply stick a note in the docstring saying "To
be a polite proxy that announces what address the request originates from,
use this line: ...".  This might be more verbose than simply adding the
flag, though.

-Andrew.




From m at moshez.org  Mon Jun  2 23:29:41 2003
From: m at moshez.org (Moshe Zadka)
Date: 3 Jun 2003 05:29:41 -0000
Subject: [Twisted-Python] ReverseProxy doesn't send X-Forwarded-For header
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111461@chi03-mail.usambiron.net>
Message-ID: <20030603052941.14205.qmail@green.zadka.com>

On Tue, 3 Jun 2003, "Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> I understand your reasons and agree. My only reservation is that if
> someone wants to send the header, it's not immediately obvious (wasn't
> to me, anyway) what the proper line of code is and where it should go.
> It took me a while to figure it out.

Indeed, I wouldn't say no to a "Reverse Proxying HOWTO" if you wrote
one, which seems to be the proper solution to this kind of problems.
Nor to an example .rpy. Send either, if you're feeling like it, to
the list, and I'll make sure they get into doc/

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From dalke at dalkescientific.com  Mon Jun  2 23:51:01 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 2 Jun 2003 23:51:01 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <DED10FC3-9541-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <5B75B0FC-9587-11D7-B9B9-000393C92466@dalkescientific.com>

I've attached some example code which shows how to use
a modal wxPython dialog and Twisted to produce a responsive
GUI which uses XML-RPC to query a remote XML-RPC service to
get a US state name given it's position in a sorted list.

I've also contributed this as an ActiveState recipe.

					Andrew
					dalke at dalkescientific.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wx_modal_twisted.py
Type: application/octet-stream
Size: 6316 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030602/bee82f63/attachment-0002.obj>

From rudy.schockaert at pandora.be  Tue Jun  3 02:41:52 2003
From: rudy.schockaert at pandora.be (Rudy Schockaert)
Date: Tue, 03 Jun 2003 10:41:52 +0200
Subject: [Twisted-Python] ReverseProxy performance??
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11145C@chi03-mail.usambiron.net>
Message-ID: <3EDC5F50.8010700@pandora.be>

Hi,

The very proof that I'm a total Twisted newby is the fact I didn't know 
of a ReverseProxy product in it. So, please bear with me if I ask for 
the obvious. I'm still trying to find my way around the huge amount of 
information.

Does anyone have figures about the performance of ReverseProxy?
How many connections can it handle simultaneously.
Does it support SSL?
Can it terminate an SSL-tunnel and forward the request unencrypted?
How does it compare to other reverse-proxies with respect to performance.
Is there a performance difference when running it on Linux or Windows 
(same hardware of course).

If I can come up with real data I'd maybe able to convince my colleagues 
at work to start using it.

Thanks in advance,

Rudy




From 2002 at weholt.org  Tue Jun  3 04:46:23 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 3 Jun 2003 12:46:23 +0200
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
Message-ID: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>

Q1 : I need to get started using Twisted building a simple IRC-bot. It
should listen to everything being said on a given channel ( or channels )
and perform certain tasks when trigger-words are found, printing the result
in the channel it was called from. Does anybody have any code I can look at.
Tried the code in the test-folder in the source-distr, but that didn't make
much sense to me, so I was hoping somebody had a piece of code more in the
line of what I described above.

Q2: What about ICQ support in Twisted? Does Twisted.IM support current
implementations of ICQ??

Thanks in advance,
Thomas Weholt




From j.jakl at era.cz  Tue Jun  3 05:07:27 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Tue, 3 Jun 2003 13:07:27 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
Message-ID: <000401c329c0$51e38230$2d0214ac@jja>

Hello all,
I have the following problem with UDP communication in twisted:

I tried an example from howto doc. chapter 4.4.2 and it produce
EWOULDBLOCK error after first received packet.
Question is how to handle EWOULDBLOCK exception, because
it isn't handled EWOULDBLOCK in udp.port.doRead().

The second question is how to set REUSEADDR on UDP socket in twisted.
I need it because we have several processes communicating on the same UDP
port (not all writen in python).

Thanks in advance,
Jaroslav Jakl






From itamar at itamarst.org  Tue Jun  3 08:11:59 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2003 10:11:59 -0400
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <000401c329c0$51e38230$2d0214ac@jja>
References: <000401c329c0$51e38230$2d0214ac@jja>
Message-ID: <20030603101159.5c232c37.itamar@itamarst.org>

On Tue, 3 Jun 2003 13:07:27 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> I tried an example from howto doc. chapter 4.4.2 and it produce
> EWOULDBLOCK error after first received packet.
> Question is how to handle EWOULDBLOCK exception, because
> it isn't handled EWOULDBLOCK in udp.port.doRead().

I'm going to change it so EWOULDBLOCK gets turned into a callback on the
protocol.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Tue Jun  3 08:12:35 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2003 10:12:35 -0400
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
In-Reply-To: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
References: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
Message-ID: <20030603101235.34c58740.itamar@itamarst.org>

On Tue, 3 Jun 2003 12:46:23 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Q1 : I need to get started using Twisted building a simple IRC-bot. It
> should listen to everything being said on a given channel ( or
> channels ) and perform certain tasks when trigger-words are found,
> printing the result in the channel it was called from. Does anybody
> have any code I can look at.

doc/examples/ircLogBot.py?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From developer at csrules.dyndns.org  Tue Jun  3 09:33:52 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 3 Jun 2003 10:33:52 -0500 (CDT)
Subject: [Twisted-Python] Twisted.IM : Simple IRC-bot?? ICQ-support?
In-Reply-To: <20030603101235.34c58740.itamar@itamarst.org>
References: <000901c329bd$600df0f0$3ba8a8c0@gatsoft.no>
        <20030603101235.34c58740.itamar@itamarst.org>
Message-ID: <15324.209.5.247.105.1054654432.squirrel@home.vandorp.ca>

For a bigger example try pynfo.

sf.net/projects/pynfo

-Darryl

> On Tue, 3 Jun 2003 12:46:23 +0200
> "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
>
>> Q1 : I need to get started using Twisted building a simple IRC-bot. It
>> should listen to everything being said on a given channel ( or
>> channels ) and perform certain tasks when trigger-words are found,
>> printing the result in the channel it was called from. Does anybody
>> have any code I can look at.
>
> doc/examples/ircLogBot.py?
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From dalke at dalkescientific.com  Tue Jun  3 19:43:57 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 3 Jun 2003 19:43:57 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <5B75B0FC-9587-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <020853C9-962E-11D7-B9B9-000393C92466@dalkescientific.com>

Me:
> I've attached some example code which shows how to use
> a modal wxPython dialog and Twisted to produce a responsive
> GUI which uses XML-RPC to query a remote XML-RPC service to
> get a US state name given it's position in a sorted list.
>
> I've also contributed this as an ActiveState recipe.

However, it fails for some cases of a modal in a modal.

I have a set of error cases in the code, which looks like this (except
the last one, which I added today).

         if TEST_ERRORS:
             i = self.i
             if i == 3:
                 proxy = Proxy("http://illegal-host_name/")
             elif i == 6:
                 proxy = Proxy("http://beatty.userland.com/")
             elif i == 8:
                 proxy = 
Proxy("http://beatty.userland.com/testing_xmlrpc_error_case")
             elif i == 9:
                 proxy = Proxy("http://beatty.userland.com:9876/")

The last one cases an error during making the connection, and so I get
a "unable to connect to remote host" message.  Now, I want to show that 
message
in another modal, which doesn't use Twisted, so I just opened the modal 
window.

This starts up the wxPython event loop again, which triggers another 
timer
event, which calls back to the Twisted reactor to run another iteration.

It appears that my defered is still active, because I then get an 
'AlreadyCalledError'.
Here's the full stack trace.


Traceback (most recent call last):
   File "Progress.py", line 158, in Bad
     try_again = task.bad(fail)
   File "Progress.py", line 52, in bad
     wxCANCEL | wxYES_NO | wxICON_QUESTION)
   File "Progress.py", line 208, in OnTimer
     reactor.doIteration(0)
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 473, in
  doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 64, 
in callWithLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\log.py", line 51, 
in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "E:\Python22\Lib\site-packages\twisted\python\context.py", line 
32, in callWithContext
     return func(*args,**kw)
   File "E:\Python22\Lib\site-packages\twisted\internet\default.py", 
line 498, in _doReadOrWrite
     selectable.connectionLost(failure.Failure(why))
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
396, in connectionLost
     self.failIfNotConnected(error.ConnectError())
   File "E:\Python22\Lib\site-packages\twisted\internet\tcp.py", line 
315, in failIfNotConnected
     self.connector.connectionFailed(failure.Failure(err))
   File "E:\Python22\Lib\site-packages\twisted\internet\base.py", line 
527, in connectionFailed
     self.factory.clientConnectionFailed(self, reason)
   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 209, 
in clientConnectionLost
     self.deferred.errback(reason)
   File "E:\Python22\lib\site-packages\twisted\internet\defer.py", line 
215, in errback
     self._startRunCallbacks(fail, 1)
   File "E:\Python22\lib\site-packages\twisted\internet\defer.py", line 
244, in _startRunCallbacks
     raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:


I can't figure out what's going on.  The code I could find for the 
reactor is very
careful to take defereds off the pending list before calling, so 
there's no way to
call them twice.

There's a clue in that only the last of these trigger this error 
condition.  This
suggests something with how the connection is established, and not 
after it's
put into place.  What I think is happening is that that
twisted.internet.base.BaseConnector allows the factory to reattempt the 
connection
when the intial connection failed, and there isn't a guard in case the 
connectionFailed
gets called again.

I still haven't grokked how the deep part of Twisted works - tried for 
the last
while to track this bug further - so I'll leave it up to you all.

In the meanwhile, since I don't need Twisted in the new (sub)modal, my 
workaround
is to do

     def OnTimer(self, event):
         if self.recursive:
             return
         self.recursive = 1
         try:
             reactor.runUntilCurrent()
             reactor.doIteration(0)
         finally:
             self.recursive = 0

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Tue Jun  3 23:28:12 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 3 Jun 2003 23:28:12 -0600
Subject: [Twisted-Python] mishandling windows connect error
Message-ID: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>

That error report I made earlier this evening is not reproducible under
Linux.  It's only under MS Windows.

Here's some more information.  Twisted isn't reporting the correct
error message for when a TCP connection fails under MS Windows.

Here's the reproducible

E:\dalke>..\Python22\python.exe
Python 2.2.3c1 (#41, May 22 2003, 19:16:28) [MSC 32 bit (Intel)] on 
win32
Type "help", "copyright", "credits" or "license" for more information.
 >>> from twisted.web.xmlrpc import Proxy
 >>> from twisted.internet import reactor
 >>> def printValue(value):
...   print value
...   reactor.stop()
...
 >>> proxy = Proxy("http://beatty.userland.com:34686")
 >>> proxy.callRemote('test.sumprod', 3, 5).addCallbacks(printValue, 
printValue)
<Deferred at 0xc38f40>
 >>> reactor.run()
[Failure instance: Traceback: twisted.internet.error.ConnectError, [160]
]
 >>>

Under Linux, this reports "Connection refused" as expected.

The ConnectError contains the value [160].  Looking at the stack trace, 
I found
it was created in tcp.py in BaseClient.doConnect where it says

         # on windows failed connects are reported on exception
         # list, not write or read list.
         if platform.getType() == "win32":
             r, w, e = select.select([], [], [self.fileno()], 0.0)
             if e:
                 self.failIfNotConnected(error.getConnectError(e))
                 return

If there is an error then 'e' will contain a list of size one, which is
the fileno.  Now look at the getConnectError definition in 
internet/error.py

def getConnectError(e):
     """Given a socket exception, return connection error."""
     try:
         number, string = e
     except ValueError:
         return ConnectError(string=e)

This will always give a ValueError (list of size 1 can't be assigned to
two terms) so it returns a ConnectError with the 'string' set to the
single element list.

And this is the '[160]' reported in the ConnectError of the failure,
which means it was on fileno 160.

I do not claim to be a network person.  It's all confusing to me.  I
tried commenting out that block, to see what the connect_ex does.
It returns a EWOULDBLOCK.  That's as far as I took it.

It feels to me like there's a bug around there someplace.

					Andrew
					dalke at dalkescientific.com




From glyph at twistedmatrix.com  Tue Jun  3 23:35:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jun 2003 01:35:08 -0400
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <020853C9-962E-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <4D75C62A-964E-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Tuesday, June 3, 2003, at 09:43 PM, Andrew Dalke wrote:

> I can't figure out what's going on.

Just a hunch here - are you calling doSelect from within doSelect?  
Your stack trace implies you're not, but I'm wondering if that's the 
full stack.




From lafou at wanadoo.fr  Wed Jun  4 01:25:36 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jun 2003 09:25:36 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
Message-ID: <1054711533.16157.124.camel@biproc>

hi all

I'am trying to display some information via a .rpy script. My model is a
complex object with several properties such as :

object.title
object.name
object.creationDate
...

The only way I found to display title & name is 

<span model="object" view="None">
	<span model="title" view="Text" />
	...
</span>

Is it possible to access directly object.title ?
model="object.title" doesn't work of course.

Thanks for your help.



-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From dp at twistedmatrix.com  Wed Jun  4 01:33:20 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 4 Jun 2003 00:33:20 -0700
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054711533.16157.124.camel@biproc>
Message-ID: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>

On Wednesday, June 4, 2003, at 12:25 AM, Philippe Lafoucrière wrote:

> hi all
>
> I'am trying to display some information via a .rpy script. My model is 
> a
> complex object with several properties such as :
>
> object.title
> object.name
> object.creationDate
> ...
>
> The only way I found to display title & name is
>
> <span model="object" view="None">
> 	<span model="title" view="Text" />
> 	...
> </span>
>
> Is it possible to access directly object.title ?
> model="object.title" doesn't work of course.

Certainly. Woven uses / rather than . as the submodel name separator. 
So simply do this:

<span model="object/title" view="Text" />

/ is used rather than . because / can indicate any method of accessing 
a conceptual child object, whether it occurs by attribute access, 
dictionary or list lookup, or method call; it's up to the IModel 
adapter to decide how to access children. I believe this is covered in 
the "Model in Depth" section of the documentation.

Hope that helps!

Donovan




From lafou at wanadoo.fr  Wed Jun  4 01:43:22 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jun 2003 09:43:22 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
References: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
Message-ID: <1054712602.16157.133.camel@biproc>

Hum 
I get an exception when I use object/title

exceptions.Exception: Node had a model=object/title attribute, but the
submodel was not found in [<twisted.web.woven.model.Wrapper instance at
0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].

(with model = object)



On Wed, 2003-06-04 at 09:33, Donovan Preston wrote:
> On Wednesday, June 4, 2003, at 12:25 AM, Philippe Lafoucrière wrote:
> 
> > hi all
> >
> > I'am trying to display some information via a .rpy script. My model is 
> > a
> > complex object with several properties such as :
> >
> > object.title
> > object.name
> > object.creationDate
> > ...
> >
> > The only way I found to display title & name is
> >
> > <span model="object" view="None">
> > 	<span model="title" view="Text" />
> > 	...
> > </span>
> >
> > Is it possible to access directly object.title ?
> > model="object.title" doesn't work of course.
> 
> Certainly. Woven uses / rather than . as the submodel name separator. 
> So simply do this:
> 
> <span model="object/title" view="Text" />
> 
> / is used rather than . because / can indicate any method of accessing 
> a conceptual child object, whether it occurs by attribute access, 
> dictionary or list lookup, or method call; it's up to the IModel 
> adapter to decide how to access children. I believe this is covered in 
> the "Model in Depth" section of the documentation.
> 
> Hope that helps!
> 
> Donovan
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From j.jakl at era.cz  Wed Jun  4 02:09:09 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Wed, 4 Jun 2003 10:09:09 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <20030603101159.5c232c37.itamar@itamarst.org>
Message-ID: <000901c32a70$9409a670$2d0214ac@jja>

So is UDP in Twisted usable at all?
Where to catch EWOULDBLOCK in UDP communication?
And second question: how to set REUSEADDR option on UDP socket?
It must be done before bind.
Thanks for your help.
Jaroslav Jakl


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Tuesday, June 03, 2003 4:12 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted newbie question about UDP


On Tue, 3 Jun 2003 13:07:27 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> I tried an example from howto doc. chapter 4.4.2 and it produce
> EWOULDBLOCK error after first received packet.
> Question is how to handle EWOULDBLOCK exception, because
> it isn't handled EWOULDBLOCK in udp.port.doRead().

I'm going to change it so EWOULDBLOCK gets turned into a callback on the
protocol.

--
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


--8910776--





From dalke at dalkescientific.com  Wed Jun  4 02:27:23 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 4 Jun 2003 02:27:23 -0600
Subject: [Twisted-Python] modal wxPython, Twisted, xml-rpc; example code
In-Reply-To: <4D75C62A-964E-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <5DA134FC-9666-11D7-B9B9-000393C92466@dalkescientific.com>

Glyph:
 > Just a hunch here - are you calling doSelect from within doSelect?  
Your stack trace
 > implies you're not, but I'm wondering if that's the full stack.

I sent the full stack that I saw.  I don't call doSelect myself.
The code I'm using is at 
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/203471
with the addition of the test case

             elif i == 9:
                 proxy = Proxy("http://beatty.userland.com:9876/")

The other test cases don't exhibit this failure case, which means it's
something specific to this call.  In addition, the failure occurs under
MS Windows but not under Linux, and it contains an unexpected error 
message.

I pointed out in another email where that error message is generated.  I
think there's something subtle in the state transitions for MS Windows
related to connecting to port which isn't accepting connections.

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Wed Jun  4 09:00:33 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 11:00:33 -0400
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <000901c32a70$9409a670$2d0214ac@jja>
References: <20030603101159.5c232c37.itamar@itamarst.org>
	<000901c32a70$9409a670$2d0214ac@jja>
Message-ID: <20030604110033.4bd4f97f.itamar@itamarst.org>

On Wed, 4 Jun 2003 10:09:09 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> So is UDP in Twisted usable at all?
> Where to catch EWOULDBLOCK in UDP communication?

Sorry for the confusion before. Anyway - from what I understood UDP
sockets never raise EWOULDBLOCK, but apparently I was wrong if you are
seeing it. I'll do a fix sometime soon.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Wed Jun  4 09:03:56 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 11:03:56 -0400
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030604110356.3e1cb5c1.itamar@itamarst.org>

On Tue, 3 Jun 2003 23:28:12 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> It feels to me like there's a bug around there someplace.

Indeed! I'll try to fix this some time over the next few days.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jun  4 09:44:35 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 04 Jun 2003 09:44:35 -0600
Subject: [Twisted-Python] creds and xmlrpc
In-Reply-To: <000401c329c0$51e38230$2d0214ac@jja>
References: <000401c329c0$51e38230$2d0214ac@jja>
Message-ID: <20030604154436.0C21C313CA@www.fastmail.fm>

I currently have a really simple xmlrpc service defined.  I'd like to add
some authorization to the service so users must enter a user id and
password to use the service.  Can this be done with creds?  Anybody have
any code snippets that would fit the service defined below (most code is
snipped out).  I read the HOWTO, but wasn't sure how to make things work
with what I'm doing.

-----------------------------------------------------
from vob import VOB
import config
import os
from twisted.web import xmlrpc, server

class CCService(xmlrpc.XMLRPC):
	"""Service for handling remote VOB creation, removal, and general
	   ClearCase maintenance.
	"""

	def xmlrpc_mkvob(self, vobs, group):
		"""Create VOBs and apply standard triggers.
		"""
		results = ""
		for tag in vobs:
			log("Start mkvob for VOB '%s'" % tag)
			vob = VOB(tag, group)
			results += vob.make()
			results += vob.applyTriggers()
			log("End mkvob for VOB '%s'" % tag)
		return results

...
[snip]
...

def main():
	from twisted.internet.app import Application
	app = Application("ccservice")
	resource = CCService()
	app.listenTCP(config.portNumber, server.Site(resource))
	return app

application = main()

if __name__ == '__main__':
	application.run(save=0)
-----------------------------------------------------

Thanks much.
-Justin



From lkurisaki at ambiron.net  Wed Jun  4 11:46:32 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 12:46:32 -0500
Subject: [Twisted-Python] ReverseProxy does not forward GET URL parameters
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>

The ReverseProxy does not forward GET parameters in a URL. For example,
if the client GETs "/script?arg1=a&arg2=b", the destination server sees
only "GET /script".

The following patch fixes that.
					Lance



Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.14
diff -u -r1.14 proxy.py
--- twisted/web/proxy.py        3 Jun 2003 04:45:35 -0000       1.14
+++ twisted/web/proxy.py        4 Jun 2003 17:37:20 -0000
@@ -179,7 +179,12 @@
     def render(self, request):
         request.received_headers['host'] = self.host
         request.content.seek(0, 0)
-        clientFactory = ProxyClientFactory(request.method, self.path,
+
+       path = self.path
+       x = request.uri.split("?")
+       if len(x) == 2: path += "?" + x[1]
+
+        clientFactory = ProxyClientFactory(request.method, path,
                                      request.clientproto,
                                      request.getAllHeaders(),
                                      request.content.read(),



From lkurisaki at ambiron.net  Wed Jun  4 13:39:12 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 14:39:12 -0500
Subject: [Twisted-Python] ReverseProxy performance??
Message-ID: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>

Since no one else has responded, I'll give it a shot...

>Does anyone have figures about the performance of ReverseProxy?
I have not done (or seen) any performance evaluation of the
ReverseProxy.

>How many connections can it handle simultaneously.
Unknown.

>Does it support SSL?
>Can it terminate an SSL-tunnel and forward the request unencrypted?
Yes, that's how I'm using it. I want an SSL reverse proxy in front of a
Zope server and don't want something as heavy as Apache or Squid. My
application doesn't expect to be heavily loaded, so performance is not a
critical issue for me.

Check out the example echoserv_ssl.py for how to set up an SSL server.
It's very simple. Just apply that to the proxy.py example.

I'm making some changes to the ReverseProxyResource class to make it a
bit more efficient (less object creation per request), but it's not
finished yet...

>How does it compare to other reverse-proxies with respect to
performance.
>Is there a performance difference when running it on Linux or Windows 
>(same hardware of course).
Can't answer these, either.

					Lance




From itamar at itamarst.org  Wed Jun  4 13:47:07 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 4 Jun 2003 15:47:07 -0400
Subject: [Twisted-Python] ReverseProxy does not forward GET URL
 parameters
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111490@chi03-mail.usambiron.net>
Message-ID: <20030604154707.056c252c.itamar@itamarst.org>

On Wed, 4 Jun 2003 12:46:32 -0500
"Lance Kurisaki" <lkurisaki at ambiron.net> wrote:

> The ReverseProxy does not forward GET parameters in a URL. For
> example, if the client GETs "/script?arg1=a&arg2=b", the destination
> server sees only "GET /script".

Me or moshe will take a look later today.

While you're at it, a set of tests would be great and help you find
remaining bugs ;)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From rudy.schockaert at pandora.be  Wed Jun  4 15:26:54 2003
From: rudy.schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 04 Jun 2003 23:26:54 +0200
Subject: [Twisted-Python] ReverseProxy performance??
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB111493@chi03-mail.usambiron.net>
Message-ID: <3EDE641E.30302@pandora.be>

>
>
>Check out the example echoserv_ssl.py for how to set up an SSL server.
>It's very simple. Just apply that to the proxy.py example.
>  
>
Thanks for pointing this out . Saves me some time searching :-)

>I'm making some changes to the ReverseProxyResource class to make it a
>bit more efficient (less object creation per request), but it's not
>finished yet...
>
>  
>
I would be interested in testing it.

I  plan to do some tests reverse-proxying an Exchange 2000 Outlook Web 
Access. This requires adding an extra http header and also Webdav.




From lkurisaki at ambiron.net  Wed Jun  4 15:32:55 2003
From: lkurisaki at ambiron.net (Lance Kurisaki)
Date: Wed, 4 Jun 2003 16:32:55 -0500
Subject: [Twisted-Python] ReverseProxy does not forward GET URL parameters
Message-ID: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>

> While you're at it, a set of tests would be great and help you find
> remaining bugs ;)

I will look into writing one. I needed an excuse to learn unittest...
:-)

					Lance



From pobrien at orbtech.com  Wed Jun  4 18:13:41 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 4 Jun 2003 19:13:41 -0500
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
Message-ID: <200306041913.41478.pobrien@orbtech.com>

Index: models.py
===================================================================
RCS file: /cvs/Issues/issues/web/models.py,v
retrieving revision 1.19
diff -c -u -r1.19 models.py
--- models.py   9 May 2003 07:47:38 -0000       1.19
+++ models.py   5 Jun 2003 00:08:52 -0000
@@ -186,7 +186,7 @@
         return form.FormDisplayModel(self.commentMethod)

     def getPerson(self, name):
-        return self.issue.issue.repository.buildPerson(name)
+        return self.issue.repository.buildPerson(name)

     def wchild_postComment(self, request):
         return form.FormProcessor(self.commentMethod, RedirectToParent)
@@ -218,16 +218,16 @@
         assert oldFixer is not None and newFixer is not None
         oldFixer = self.getPerson(oldFixer)
         newFixer = self.getPerson(newFixer)
-        self.issue.issue.setState(issue.InTransfer(oldFixer, newFixer))
+        self.issue.setState(issue.InTransfer(oldFixer, newFixer))
         self._comment(oldFixer, comment)

     def queue(self, email=None, comment=None, queue=None):
         self._comment(email, comment)
         assert queue is not None
         try:
-            q = self.issue.issue.repository.getQueue(queue)
+            q = self.issue.repository.getQueue(queue)
         except repo.NoSuchQueue:
-            q = self.issue.issue.repository.buildQueue(queue)
+            q = self.issue.repository.buildQueue(queue)
         self.issue.setState(issue.InQueue(q))

     def converse(self, fixer=None, finder=None):

Also attached as issues_models.diff.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: issues_models.diff
Type: text/x-diff
Size: 1516 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030604/c5ffcb08/attachment-0002.diff>

From jml at ids.org.au  Thu Jun  5 06:45:31 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Thu, 5 Jun 2003 22:45:31 +1000
Subject: [Twisted-Python] The problem with Twisted...
Message-ID: <20030605124531.GC3988@mumak.net>


... is that we have no word for "entrepreneur".

Just had a conversation with a guy on #python, and he raised some valid
points. He appeared to be a programmer, and his concerns were focussed on his
job, and on pitching Twisted to mgmt.

Firstly, his biggest concern was documentation. He said that he doesn't want
to trawl through Twisted's source code to figure things out. These days, (most
of the time) you don't have to do that, but occasionally you do. Of course,
our code is generally quite readable (except for the odd module here and
there).

Suggestions: 
* API docs
    Ask ten Java developers what they like most about Java, and nine will say
    "the API docs". I humbly suggest that we should get better at writing
    these.
* Howtos
    I remain somewhat unconvinced that the best way to write a book is to
    present a series of HOWTOs. But then, I also reckon that most of what we
    call HOWTOs, aren't.


Secondly, he couldn't find any information on the twistedmatrix.com website
that said "Managers, this is why you should use Twisted". I hate writing that
sort of thing, but I imagine it needs to be done. It could call cred an
"Identity Server" and things like that. It could also not use "asynchronous"
as selling point. Managers want to hear words they've already heard. They want
to hear why Twisted isn't just something cobbled together by a bunch of geeks
in their bedrooms.

The Java website starts off with a page geared entirely towards management
(even if the headings don't say so), with all the useful programmer stuff
hidden away from view. Would it be a stupid idea to have:
- http://www.twistedmatrix.com/ : Twisted, the Framework of your Internet
- http://www.twistedmatrix.com/dev/ : You have been sucked into the vortex.
??

Or even dispense with a site that targets developers entirely, except for a
"This is why Twisted's technology is cool" page. After all, the grunts will be
happy with doco, and coders who want more than that will find it on the list
and the channel.


Thirdly, we should really, really, really get Coil done. This guy didn't
mention it, but I know many people (good programmers, even) who feel
uncomfortable at a command line, and much prefer web-based (or Windows-based)
administration. 

One of the cool things about Twisted is that it's extremely easy to start a
server for just about anything on your personal PC. This would be made much
more obvious with a GUI like Coil.


Now, all this is suggested humbly and tentatively. I'm not sure whether any of
these things are good things. I do know that they'd make ppl who I've worked
with in corporate environments more comfortable. (and not just the muppets)

I'm very interested in discussion, and what you all think of this. 

Also, I hope this email isn't critical in a vague way, and isn't
inflammatory. It's not meant that way, rather it's meant to note problems that
other people see and have told me, and to suggest ways of solving them.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030605/f794211c/attachment.sig>

From jml at ids.org.au  Thu Jun  5 07:06:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Thu, 5 Jun 2003 23:06:17 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
References: <20030605124531.GC3988@mumak.net>
Message-ID: <20030605130617.GD3988@mumak.net>

On Thu, Jun 05, 2003 at 10:45:31PM +1000, jml at ids.org.au wrote:
> ... is that we have no word for "entrepreneur".

Summary: Twisted is scary to people with money. We can make it less scary.
1. Docs.
a) We need more docs, esp API docs. This needs to be a commitment to docs, and
   not just a writing binge. 
b) A book is more than a collection of howtos  

2. The website should target "decision makers" primarily. Hackers only need
   links to download, docs, mailing list, and why our tech is cool

3. Coil.

Not a flame. Not claiming amazing ideas. Just stuff to make ppl feel more warm
and fuzzy.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030605/760f01c0/attachment.sig>

From dalke at dalkescientific.com  Wed Jun  4 20:10:23 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 4 Jun 2003 20:10:23 -0600
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
Message-ID: <DDA8308E-96FA-11D7-B9B9-000393C92466@dalkescientific.com>

jml:
> * API docs

I would like to see a set of state transition diagrams, to know how
the different services work.

					Andrew
					dalke at dalkescientific.com




From peter at engcorp.com  Wed Jun  4 20:15:01 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 04 Jun 2003 22:15:01 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net>
Message-ID: <3EDEA7A5.35C8A4DF@engcorp.com>

jml at ids.org.au wrote:
> 
> On Thu, Jun 05, 2003 at 10:45:31PM +1000, jml at ids.org.au wrote:
> > ... is that we have no word for "entrepreneur".
> 
> Summary: Twisted is scary to people with money. We can make it less scary.
> 1. Docs.
> a) We need more docs, esp API docs. This needs to be a commitment to docs, and
>    not just a writing binge.
> b) A book is more than a collection of howtos

As a manager, I more or less have to agree, even though I've defended 
Twisted's docs on c.l.p from time to time.  They certainly could be 
better, and I do agree that the API doc areas could stand some improvements.
What I really ought to do is start noting the fact each time we encounter
a less than useful description, and maybe even try to improve it once
we figure it out.

> 2. The website should target "decision makers" primarily. Hackers only need
>    links to download, docs, mailing list, and why our tech is cool

You might think about what _kind_ of decision maker you wish to target.
Do you definitely want to target all kinds?  Targetting those with an
adequate understanding of agile development, the value of Python, etc,
should be pretty easy.  Hardly need to spend more than a passing word
or two to catch them... it's the more traditional types, used to using
certain other technologies, who might be harder.  How do you target a
Java head, and more interestingly: why would you?  (Yes, I understand
the mandate for world domination, but aside from that? ;-))

> 3. Coil.

I have only one thing to say in this area, which is please don't anyone
think about developing this just because you think you need to in order to
help convince someone to use Twisted.  If you don't need it enough to do it
for yourself or for someone who has specific documented needs (a.k.a. "user
stories") you will not produce something useful to anyone and you'll waste
your time to boot.

-Peter



From andrew-twisted at puzzling.org  Wed Jun  4 20:36:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 12:36:41 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <3EDEA7A5.35C8A4DF@engcorp.com>
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com>
Message-ID: <20030605023641.GB17360@frobozz>

On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> jml at ids.org.au wrote:
> > 
> > 3. Coil.
> 
> I have only one thing to say in this area, which is please don't anyone
> think about developing this just because you think you need to in order to
> help convince someone to use Twisted.  If you don't need it enough to do it
> for yourself or for someone who has specific documented needs (a.k.a. "user
> stories") you will not produce something useful to anyone and you'll waste
> your time to boot.

I've seen the old coil, and heard discussion on what the new coil will do,
and I'm sufficiently excited to believe it's *very* worthwhile...  

So, Donovan, what happened to the code you were going to post to the list
yesterday?  :) 

Anyway, back to Peter's advice -- you have a point.  But couldn't the same
argument apply to making a manager-friendly web site?  I'm somewhat inclined
to simply keeping good code, and rely on the quality to eventually speak for
itself, rather than expending effort on a perceived need to market Twisted
to non-technical people.  (Of course, if marketing Twisted is someone's itch,
they should be welcome to scratch it!)

On the other hand, I think more and better docs for developers (i.e. the
APIs and "HOWTO"s, which are misnamed I think) is definitely worthwhile.
The more developers we can attract, the better tested our designs and
implementation will be, and the better quality our project will become.  At
the moment, the docs are still somewhat of a barrier to new developers, but
thankfully not the insurmountable hurdle they used to be :)

Basically, if I had a choice between spending time on improving docstrings
or writing manager-friendly prose, I'd choose to write docstrings.

Oh!  And don't forget, we have some *excellent* marketing material already:
the 1.0 Press Release, linked from the front page.

-Andrew.




From pje at telecommunity.com  Wed Jun  4 16:10:27 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Wed, 04 Jun 2003 18:10:27 -0400
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
Message-ID: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>

Hi.  I'm working on a new interface adaptation package for Python, called 
PyProtocols.  It's an extension of PEP 246 to include a standardized API 
for declaring support for particular interfaces, and how to adapt 
instances, types, and other interfaces to an interface.  It includes its 
own interface library, but also has adapters and monkeypatching for Zope 
interfaces to make them usable with the API.  That is, since the API is 
itself defined with interfaces, it uses itself to adapt Zope interfaces to 
the interface for interfaces it uses.  :)

Anyway, I'd like to add support for Twisted interfaces as well.  I started 
today on trying to write adapters to map Twisted's interface/adapter API 
onto the PyProtocols API, and I ran into a bit of a snag.

I was about to write the code to add an __adapt__ method to Twisted 
interfaces, when I noticed there is already some code related to 
__adapt__.  But that code isn't at all compatible with the PEP 246 spec for 
__adapt__, as I understand it.  PEP 246 wants to be able to call an 
object's __adapt__ method with a single argument, while MetaInterface 
expects to yank out 'im_func' and pass two arguments into it.

The only way I can see to get this to work with PEP 246, is to monkeypatch 
MetaInterface.__call__ to find '__adapt__' by checking the interface's 
dictionary, rather than using __getattr__.  In this way, I can give 
MetaInterface an __adapt__ method that will be found whenever you refer to 
ISomething.__adapt__, but MetaInterface.__call__ will still find any 
__adapt__ that was put in by a 'def' in the interface body.

Essentially, I would be monkeypatching to change these two lines:

         if hasattr(self, '__adapt__'):
             adapter = self.__adapt__.im_func(adaptable, default)

To:
         if '__adapt__' in self.__dict__:
             adapter = self.__dict__['__adapt__'](adaptable, default)

Because self.__adapt__ would no longer be the same value as 
self.__dict__['__adapt__'], due to my adding a MetaInterface.__adapt__ 
method.  I assume that no inheritance lookup would be required, because 
interface inheritance for adaptation purposes is reversed.  That is, a 
subclass of an interface would not want to inherit its base interface's 
__adapt__, because a subclass interface has more stringent requirements for 
its implementors.  Therefore, a superclass __adapt__ isn't guaranteed to 
work for a subclass.

Anyway...  I noticed that the only code in Twisted currently (that I could 
find) that actually uses the current __adapt__ setup is the test suite.  Is 
there any way this might be changeable to something more compatible with 
PEP 246?  I mean, if I jump through enough hoops building adapters and 
monkeypatching, I can probably make it so that this will work 
transparently, and anybody who uses PyProtocols will then be able to mix 
Twisted, Zope, and PyProtocols interfaces in their applications.  But it's 
pretty messy, and I'm wondering about the copyright status if I have to 
copy a lot of code from MetaInterface.__call__ in order to monkeypatch a 
replacement.  (I'd like to release PyProtocols under the PSF license.)

Anyway, if you'd like some background on PyProtocols, the reference manual 
is at:

     http://peak.telecommunity.com/protocol_ref/

I don't know if you guys have previously looked at PEP 246 or thought about 
any of the adapter precedence/implication/declaration issues that 
PyProtocols tries to address.  It may be that some of what I've done may be 
useful to you.  OTOH, you may have already looked at this sort of thing and 
have different requirements for your component architecture.  My goal is 
merely compatibility among Python frameworks, so that people who use more 
than one framework's "Interface" types (e.g. Zope, Twisted, PEAK, etc.) can 
have some common ground rules, similar to the DBAPI or the way most Python 
numeric types can be used in an expression together.




From jml at mumak.net  Thu Jun  5 06:15:39 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 5 Jun 2003 22:15:39 +1000
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
In-Reply-To: <200306041913.41478.pobrien@orbtech.com>
References: <200306041913.41478.pobrien@orbtech.com>
Message-ID: <20030605121539.GA3988@mumak.net>

On Wed, Jun 04, 2003 at 07:13:41PM -0500, Patrick K. O'Brien wrote:
> Index: models.py

Thank you.

However, the CVS repository for Issues no longer represents the latest branch
of the code. 

Issues has been moved to a Subversion repository. The move took place before I
launched on a significant refactoring of the code, which was required to change
persistence mechanisms.

The reasons for this are varied, but mainly, it's because Subversion is more
convenient for me, due to my low bandwitdh.

However, the CVS repository still serves as a valid example of working
(although not terribly good) Woven code. As such, I'll apply your patch.

I expect an alpha release of Issues to happen in 3-4 weeks time. This will
contain all the major features that I expect to have in version 1.0.

You can find the repos here: http://mumak.net/svn/Issues/
Subversion can be found here: http://subversion.tigris.org

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030605/8143b225/attachment.sig>

From jml at mumak.net  Thu Jun  5 09:23:53 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Fri, 6 Jun 2003 01:23:53 +1000
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <20030605023641.GB17360@frobozz>
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com> <20030605023641.GB17360@frobozz>
Message-ID: <20030605152353.GE3988@mumak.net>

On Thu, Jun 05, 2003 at 12:36:41PM +1000, Andrew Bennetts wrote:
> On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> > jml at ids.org.au wrote:
> > > 
> > > 3. Coil.
> > 
> > I have only one thing to say in this area, which is please don't anyone
> > think about developing this just because you think you need to in order to
> > help convince someone to use Twisted. 
>
> I've seen the old coil, and heard discussion on what the new coil will do,
> and I'm sufficiently excited to believe it's *very* worthwhile...  
> 

Yes. Coil (if it lives up to it's promises) is something that I would almost
certainly use a great deal. 

I find TAPs and command-line twistd launchings to be somewhat ... confusing. At
least, inasmuch as I feel the need to remember where everything is at, and what
I've done, etc.

Coil promises to be an admin server that can be used to bring up your services,
configure them, add them, restart them, shut them down and all of that. Just
being able to *see* everything at once

So, yes, I agree with everything spiv said.

jml

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030606/17930d6c/attachment.sig>

From itamar at itamarst.org  Wed Jun  4 23:44:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 5 Jun 2003 01:44:34 -0400
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030605014434.65e23dde.itamar@itamarst.org>

On Tue, 3 Jun 2003 23:28:12 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> That error report I made earlier this evening is not reproducible
> under Linux.  It's only under MS Windows.

Fixed in CVS.

> Here's the reproducible

Actually our test suite catches this, just no one got around to fixing
it. In general Win32 has worse support than Linux. Now that I have a
Windows machine though I am going to try to get *everything* working.

Thanks so much for the debug info - it saved me a lot of time figuring
out what the problem was.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Wed Jun  4 23:59:44 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Jun 2003 01:59:44 -0400
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
Message-ID: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Wednesday, June 4, 2003, at 06:10 PM, Phillip J. Eby wrote:

> Anyway...  I noticed that the only code in Twisted currently (that I 
> could find) that actually uses the current __adapt__ setup is the test 
> suite.  Is there any way this might be changeable to something more 
> compatible with PEP 246?

Thanks for bringing this to my attention.  As I was perusing the 
implementation, I realized that the reason we committed this particular 
incompatibility was being invalidated a scant two lines away :-).  I 
could have sworn it didn't used to have a try:except: block, but I've 
checked in a revised version now.

As I understand it, PEP 246 cannot be implemented without raising 
exceptions in __adapt__.  I want to avoid mandatory exceptions at all 
costs within the components system, because in a system such as 
NewReality, where every other method call goes through an interface of 
some kind, the fact that raising exceptions is more than 6x as 
expensive as calling functions becomes a noticeable cost.

> I mean, if I jump through enough hoops building adapters and 
> monkeypatching, I can probably make it so that this will work 
> transparently, and anybody who uses PyProtocols will then be able to 
> mix Twisted, Zope, and PyProtocols interfaces in their applications.  
> But it's pretty messy, and I'm wondering about the copyright status if 
> I have to copy a lot of code from MetaInterface.__call__ in order to 
> monkeypatch a replacement.  (I'd like to release PyProtocols under the 
> PSF license.)

PyProtocols looks like an interesting project, and I'd like to support 
such an effort at interoperability.  Monkey-patching MetaInterface is 
almost certainly the wrong thing to do.  Perhaps it would be best if we 
did not call our interface-aware adaptation mechanism "__adapt__", but 
something like "adaptWithDefault"?

I am not sure exactly how you're doing compatibility, but perhaps then 
you could provide a subclass of Interface that provided an 
adaptWithDefault that called __adapt__ with the proper arguments?




From j.jakl at era.cz  Thu Jun  5 00:15:45 2003
From: j.jakl at era.cz (Jaroslav Jakl)
Date: Thu, 5 Jun 2003 08:15:45 +0200
Subject: [Twisted-Python] twisted newbie question about UDP
In-Reply-To: <20030604110033.4bd4f97f.itamar@itamarst.org>
Message-ID: <001501c32b29$e72aa110$2d0214ac@jja>

It doesn't matter if socket is TCP or UDP, if it is set non-blocked and
there is no data to read,
it return EWOULDBLOCK.
Thanks for your replies and it will be fine to have it fixed soon.
Jaroslav Jakl



-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Wednesday, June 04, 2003 5:01 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted newbie question about UDP


On Wed, 4 Jun 2003 10:09:09 +0200
"Jaroslav Jakl" <j.jakl at era.cz> wrote:

> So is UDP in Twisted usable at all?
> Where to catch EWOULDBLOCK in UDP communication?

Sorry for the confusion before. Anyway - from what I understood UDP
sockets never raise EWOULDBLOCK, but apparently I was wrong if you are
seeing it. I'll do a fix sometime soon.

--
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


--5063502--





From lafou at wanadoo.fr  Thu Jun  5 01:10:38 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:10:38 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605124531.GC3988@mumak.net>
References: <20030605124531.GC3988@mumak.net>
Message-ID: <1054797038.16160.252.camel@biproc>

On Thu, 2003-06-05 at 14:45, jml at ids.org.au wrote:
> ... is that we have no word for "entrepreneur".

Especially the website which seems really designed by and for
developpers (is it bad ?).

> Firstly, his biggest concern was documentation. He said that he doesn't want
> to trawl through Twisted's source code to figure things out. These days, (most
> of the time) you don't have to do that, but occasionally you do. Of course,
> our code is generally quite readable (except for the odd module here and
> there).
> 
> Suggestions: 
> * API docs
>     Ask ten Java developers what they like most about Java, and nine will say
>     "the API docs". I humbly suggest that we should get better at writing
>     these.

I'am quite happy with the API but some method & params really need more
doc. 

> * Howtos
>     I remain somewhat unconvinced that the best way to write a book is to
>     present a series of HOWTOs. But then, I also reckon that most of what we
>     call HOWTOs, aren't.

I think howtos have to be reorganized. It's pretty hard to get started
with twisted. Moreover, I'am trying to make an application with woven,
and have difficulties with documentation on it. Maybe we need more
exemples.


> Secondly, he couldn't find any information on the twistedmatrix.com website
> that said "Managers, this is why you should use Twisted". I hate writing that
> sort of thing, but I imagine it needs to be done. It could call cred an
> "Identity Server" and things like that. It could also not use "asynchronous"
> as selling point. Managers want to hear words they've already heard. They want
> to hear why Twisted isn't just something cobbled together by a bunch of geeks
> in their bedrooms.

It would be great. I'm also a manager, and have to convince also my
clients that twisted is good choice for us.






From lafou at wanadoo.fr  Thu Jun  5 01:12:07 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:12:07 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054712602.16157.133.camel@biproc>
References: <D0FA569E-965E-11D7-8387-000A95864FC4@twistedmatrix.com>
	 <1054712602.16157.133.camel@biproc>
Message-ID: <1054797127.16160.254.camel@biproc>

On Wed, 2003-06-04 at 09:43, Philippe Lafoucrière wrote:
> Hum 
> I get an exception when I use object/title
> 
> exceptions.Exception: Node had a model=object/title attribute, but the
> submodel was not found in [<twisted.web.woven.model.Wrapper instance at
> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
> 
> (with model = object)


Someone can help me ?? this still doesn't work !




From mario at ruggier.org  Thu Jun  5 01:18:54 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 5 Jun 2003 09:18:54 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054797127.16160.254.camel@biproc>
Message-ID: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>

> On Wed, 2003-06-04 at 09:43, Philippe Lafoucrière wrote:
>> Hum
>> I get an exception when I use object/title
>>
>> exceptions.Exception: Node had a model=object/title attribute, but the
>> submodel was not found in [<twisted.web.woven.model.Wrapper instance 
>> at
>> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
>>
>> (with model = object)
>
>
> Someone can help me ?? this still doesn't work !

I'm a newbie myself... might this have something to do with the Wrapper
you are using? Have you tried using the provided generic object wrapper?

from twisted.web.woven import model, interfaces
components.registerAdapter(model.ObjectWrapper, myObject, 
interfaces.IModel)

mario




From andrew-twisted at puzzling.org  Thu Jun  5 01:22:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 17:22:54 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054797038.16160.252.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc>
Message-ID: <20030605072254.GA17887@frobozz>

On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> 
> I think howtos have to be reorganized. It's pretty hard to get started
> with twisted. Moreover, I'am trying to make an application with woven,
> and have difficulties with documentation on it. Maybe we need more
> exemples.

Just a brief note: The Woven docs are new, so any suggestions to improve
them are extremely welcome!

-Andrew.




From lafou at wanadoo.fr  Thu Jun  5 01:52:26 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 09:52:26 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605072254.GA17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc>  <20030605072254.GA17887@frobozz>
Message-ID: <1054799545.16199.259.camel@biproc>

On Thu, 2003-06-05 at 09:22, Andrew Bennetts wrote:
> On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> > 
> > I think howtos have to be reorganized. It's pretty hard to get started
> > with twisted. Moreover, I'am trying to make an application with woven,
> > and have difficulties with documentation on it. Maybe we need more
> > exemples.
> 
> Just a brief note: The Woven docs are new, so any suggestions to improve
> them are extremely welcome!
> 
> -Andrew.

I'll give you my feedback when I finish reading it.

_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From lafou at wanadoo.fr  Thu Jun  5 02:35:15 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 10:35:15 +0200
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>
References: <F6DDB1B7-9725-11D7-AD16-000393756786@ruggier.org>
Message-ID: <1054802115.16199.261.camel@biproc>

> I'm a newbie myself... might this have something to do with the Wrapper
> you are using? Have you tried using the provided generic object wrapper?
> 
> from twisted.web.woven import model, interfaces
> components.registerAdapter(model.ObjectWrapper, myObject, 
> interfaces.IModel)


Exactly the same exception :(




From lafou at wanadoo.fr  Thu Jun  5 02:39:09 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 10:39:09 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054799545.16199.259.camel@biproc>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc>  <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc>
Message-ID: <1054802349.16157.265.camel@biproc>

> I'll give you my feedback when I finish reading it.

Ok, retain all doc in memory is hard. I don't see the difference between
wvfactory_ and wvupdate_ ?



-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From dalke at dalkescientific.com  Thu Jun  5 02:47:28 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Thu, 5 Jun 2003 02:47:28 -0600
Subject: [Twisted-Python] mishandling windows connect error
In-Reply-To: <20030605014434.65e23dde.itamar@itamarst.org>
Message-ID: <56A7F512-9732-11D7-B9B9-000393C92466@dalkescientific.com>

> Fixed in CVS.

Great!  Though since I'm preparing for a demo and this is something
I can work around, I'm not going to be able to verify the fix until
next month.

> Actually our test suite catches this, just no one got around to fixing
> it. In general Win32 has worse support than Linux. Now that I have a
> Windows machine though I am going to try to get *everything* working.

For now I only need simple client support.  I would like better support
for MS Windows in the server part, but I don't think I'll need it.

> Thanks so much for the debug info - it saved me a lot of time figuring
> out what the problem was.

While my co-supporters (not co-workers) were pointing out that since
I have a workaround and I need to get ready for the demo, I should have
just logged it for the future and not tried to track it down.  So don't
thank them ;)

(And I think it helped get a better feel for how Twisted works.  Still
could have waited until later....)

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Thu Jun  5 02:52:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 18:52:32 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054802349.16157.265.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
Message-ID: <20030605085232.GB17887@frobozz>

On Thu, Jun 05, 2003 at 10:39:09AM +0200, Philippe Lafoucri?re wrote:
> 
> > I'll give you my feedback when I finish reading it.
> 
> Ok, retain all doc in memory is hard. I don't see the difference between
> wvfactory_ and wvupdate_ ?

I'm no Woven expert, but wvupdate_ is described here:
    http://twistedmatrix.com/documents/howto/viewindepth#auto5

I presume you're saying that's not clear enough?

(I really should try to learn Woven myself sometime, so I can know how you
feel...  :)

-Andrew.




From Olivier.POYEN at clf-dexia.com  Thu Jun  5 02:54:01 2003
From: Olivier.POYEN at clf-dexia.com (POYEN OP Olivier (DCL))
Date: Thu, 5 Jun 2003 10:54:01 +0200
Subject: [Twisted-Python] (Summary) The problem with Twisted...
Message-ID: <8963D6370B323E4AA3241200F0EAF731235646@FCEXVEXM002.dcl.int.dexwired.net>


> On the other hand, I think more and better docs for 
> developers (i.e. the
> APIs and "HOWTO"s, which are misnamed I think) is definitely 
> worthwhile.
> The more developers we can attract, the better tested our designs and
> implementation will be, and the better quality our project 
> will become.  At
> the moment, the docs are still somewhat of a barrier to new 
> developers, but
> thankfully not the insurmountable hurdle they used to be :)
> 


If I may, I'd like to add a little something on Docs, from my little newbie point of few:

I've read cl.py a lot, and you can sometimes find people complaining about Twisted Docs.
And the usual response, which does not lack of common sense, is to *not* try to grasp all at the same time, but just go at a specific point, looking for *just* what you want. That's why there are lots of how to. 

But, you know, I'm just the average geek guy, and thus, went to twisted-matrix website, and download and print the whole How-To pdf, with it's 250 pages. 
And, like, I assume, every-one, I try read it first page-> last page. Confusing. 
Yes because there are lots of stuff to get your mind around, but also because you don't want to do that: at many point, you find introdocution stuff in the middle of an how to you would have needed before. 
Let me give an example: 
One of the first thing I read was the "visions" paragraph which quote something like that "in many place in others how-to, you'll find what is twisted; but here let's not speak about that, but let show what It should be". No, on the first page , I want to know what it is !
Then, followed an overview of many components. Great, but I did'nt get yet the whole picture of it (what is it ? What is twisted ?) . Because I need this big picture  before I can put each component in its own box. 
Then I've have a quite excellent overview of twisted enterprise. 
Reallly good, but I still didn't get the whole picture, and I've many details about lot's of other stuff. Even at the beginning of the paragraph, it's written something like 'in order to understand this overview, you should already know how to build a server, what is a reactor....'. It perhaps not quotes exactly that, but you get the point: I read from page one, and you want me to know stuff I did'nt even read yet !

Other example: latter, you have two of the most important how-to: 'make a server'& 'make a client'. 
These one, on the contrary, start very gently. And in the overview, I learn almost what I wanted, to get the "big picture" of twisted: an asynchroneous loop, and after that , no blocking calls, only callback. (maybe I'm wrong). 
Why did I not get those lines in the beginning. It really helps me understanding the big picture of twisted. 

Those commentaries are not agressif, because the docs are just "how to", not a book or a turorial. And those how-to are quite well made.

So, all my point is that the documentation is not so bad, because you did put all the necessary stuff. 
My point is that you need a book, with almost the same content, but a different organization of the data. You need a normal book, cecause people like to have a single entrance point they can read through, linearly.
And I think you should enforce the "try to get the whole thing, the big picture of twisted and then go to a specific point" mantra. 


BTW, I'll be happy to help, and since I'm still a newbie, and since I still did not get twisted , that may be helpful ! 


HTH

OPQ 

-------------- next part --------------
-----------------------------------------------------------------

Ce message est confidentiel ; son contenu ne represente en aucun

cas un engagement de la part de Dexia Credit Local ou de Dexia

CLF Banque. Toute publication, utilisation ou diffusion, meme

partielle, doit etre autorisee prealablement par l'emetteur. Si

vous n'etes pas destinataire de ce message, merci d'en avertir

immediatement l'expediteur.



This message is confidential ; its contents do not constitute a

commitment by Dexia Credit Local or Dexia CLF Banque. Any

unauthorised disclosure, use or dissemination, either whole or

partial, is prohibited. If you are not the intended recipient of

the message, please notify the sender immediately.

-----------------------------------------------------------------

Consultez notre site internet www.dexia-clf.fr

La cle d'une gestion optimisee du secteur public local

-----------------------------------------------------------------

From theller at python.net  Thu Jun  5 03:11:09 2003
From: theller at python.net (Thomas Heller)
Date: 05 Jun 2003 11:11:09 +0200
Subject: [Twisted-Python] Re: mishandling windows connect error
References: <5567FCC8-964D-11D7-B9B9-000393C92466@dalkescientific.com> <20030605014434.65e23dde.itamar@itamarst.org>
Message-ID: <he74x51u.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> [...] In general Win32 has worse support than Linux. Now that I have a
> Windows machine though I am going to try to get *everything* working.

If you now intend to look at the win32guireactor I posted some time ago,
I can also mail you a pure ctypes based version (no win32all needed)
which i'm actually using.

Thomas




From lafou at wanadoo.fr  Thu Jun  5 03:28:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 11:28:06 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605085232.GB17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
	 <20030605085232.GB17887@frobozz>
Message-ID: <1054805286.16160.274.camel@biproc>

> I'm no Woven expert, but wvupdate_ is described here:
>     http://twistedmatrix.com/documents/howto/viewindepth#auto5
> 
> I presume you're saying that's not clear enough?
> 
> (I really should try to learn Woven myself sometime, so I can know how you
> feel...  :)

Yes, Please try it. I a twisted newbie, but sometimes things happen
magically. I knew the page 

howto/viewindepth#auto5

(red all the doc already) but this is not clear enough for me (maybe
it's because I'm not english fluent). For me, wvupdate_ and wvfactory_
are used to create a new View for a page.Page. 

In exemples :

-----------------------------------------------------------------
class MyPage(page.Page):
    def wvupdate_foo(self, request, widget, data):
        if data > 10:
            newNode = widget.getPattern("large")
        else:
            newNode = widget.getPattern("small")
        newNode.appendChild(request.d.createTextNode(str(data)))
        widget.appendChild(newNode)

-----------------------------------------------------------------
class MyView(view.View):
  def generate(self, request, node, model):
      return request.d.createTextNode("Hello, world!")

class MyPage(page.Page):
    def wvfactory_foo(self, request, node, model):
        return MyView(model)
-----------------------------------------------------------------

I think I can put :
****
	if data > 10:
            newNode = widget.getPattern("large")
        else:
            newNode = widget.getPattern("small")
        newNode.appendChild(request.d.createTextNode(str(data)))
        widget.appendChild(newNode)
****
in the wvfactory_foo !?





==================================================================


By the way, I was looking for documentation on cred, since I want to
persist identies created on a twisted server. The cred howto needs some
rewrite with concrete exemples.
I can't pickle identities with Shelf since Indenties have references to
Auth, and Auth to Identities (infinite loop when pickeling).


-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From andrew-twisted at puzzling.org  Thu Jun  5 03:53:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 19:53:39 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054805286.16160.274.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc> <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc>
Message-ID: <20030605095339.GE17887@frobozz>

On Thu, Jun 05, 2003 at 11:28:06AM +0200, Philippe Lafoucri?re wrote:
[...]
> 
> I think I can put :
> ****
> 	if data > 10:
>             newNode = widget.getPattern("large")
>         else:
>             newNode = widget.getPattern("small")
>         newNode.appendChild(request.d.createTextNode(str(data)))
>         widget.appendChild(newNode)
> ****
> in the wvfactory_foo !?

But wvfactory_foo's third argument is a DOM node, not a generic Widget.
There is no 'widget' in a wvfactory_.

-Andrew.




From lafou at wanadoo.fr  Thu Jun  5 05:25:54 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 13:25:54 +0200
Subject: [Twisted-Python] Persistant Identities CRED
Message-ID: <1054812354.16199.278.camel@biproc>

[from another post]

I was looking for documentation on cred, since I want to
persist identies created on a twisted server. The cred howto needs some
rewrite with concrete exemples.
I can't pickle identities with Shelf since Indenties have references to
Auth, and Auth to Identities (infinite loop when pickeling).


-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From lafou at wanadoo.fr  Thu Jun  5 05:42:28 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 13:42:28 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605095339.GE17887@frobozz>
References: <20030605124531.GC3988@mumak.net>
	 <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	 <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc>
	 <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc>
	 <20030605095339.GE17887@frobozz>
Message-ID: <1054813348.16160.290.camel@biproc>

> But wvfactory_foo's third argument is a DOM node, not a generic Widget.
> There is no 'widget' in a wvfactory_.


ho ok, haven't seen that.

In pilePicture tutorial, in ImageDisplay class :

    def wchild_preview(self, request):        return static.File(self.image)

"static" comes from nowhere.


> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From peter at engcorp.com  Thu Jun  5 05:53:22 2003
From: peter at engcorp.com (Peter Hansen)
Date: Thu, 05 Jun 2003 07:53:22 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
References: <20030605124531.GC3988@mumak.net> <20030605130617.GD3988@mumak.net> <3EDEA7A5.35C8A4DF@engcorp.com> <20030605023641.GB17360@frobozz>
Message-ID: <3EDF2F32.D7B4C4A1@engcorp.com>

Andrew Bennetts wrote:
> 
> On Wed, Jun 04, 2003 at 10:15:01PM -0400, Peter Hansen wrote:
> > I have only one thing to say in this area, which is please don't anyone
> > think about developing this just because you think you need to in order to
> > help convince someone to use Twisted.  If you don't need it enough to do it
> > for yourself or for someone who has specific documented needs (a.k.a. "user
> > stories") you will not produce something useful to anyone and you'll waste
> > your time to boot.
> 
> I've seen the old coil, and heard discussion on what the new coil will do,
> and I'm sufficiently excited to believe it's *very* worthwhile...
> 
> Anyway, back to Peter's advice -- you have a point.  But couldn't the same
> argument apply to making a manager-friendly web site?  I'm somewhat inclined
> to simply keeping good code, and rely on the quality to eventually speak for
> itself, rather than expending effort on a perceived need to market Twisted
> to non-technical people.  (Of course, if marketing Twisted is someone's itch,
> they should be welcome to scratch it!)

Very true on all points!  Of course, marketing XP style should not involve
a whole lot of upfront packaging and cosmetics, but should be driven by
actual need.  After all, real marketing, the heart of what the very word
is supposed to mean as opposed to how its misused and abused by all the
glossy brochure types in the word, is _understanding customer needs and
developing products which fulfill them_.  So if marketing Twisted is someone's
itch, and they want to be most effective, they should, IMHO, go step by
step XP style and try to understand what the world needs in one particular 
area of Twisted (say, coil) based on real-world information: ask around,
write proposals and respond to feedback, and most important of all: develop
prototypes (quick and somewhat dirty) to elicit direct feedback on what
will actually work.

Basically, in my mind, there is no reason to distinguish between marketing
and "traditional" XP development, as both should look the same if one is
doing them most effectively.

Of course, if by "marketing Twisted" you meant someone actually wants to
do the glossy brochure thing on the product, like souping up the web site
and writing intros for managers, I'm not sure I have much advice except
I don't think it's such a good idea. :-)

> On the other hand, I think more and better docs for developers (i.e. the
> APIs and "HOWTO"s, which are misnamed I think) is definitely worthwhile.
> The more developers we can attract, the better tested our designs and
> implementation will be, and the better quality our project will become.  

Yes.  Yes, yes, yes.  YES!  That goes back to my original "what kind of
manager are you targeting" question.  The best kind to attract is the 
kind who will already be attracted by your approach, and by the quality 
of the product you are delivering.  Those things speak for themselves and
don't need the glossy brochure kind of "marketing", which is really about
selling inferior products to unsophisticated customers.  (Again, though,
if that's what you want to spend your time doing, I guess nobody should
be trying to stop you. ;-)

(Somewhat rambling, but it's very early in the morning and I didn't get
enough sleep... forgive me.)

-Peter



From pje at telecommunity.com  Thu Jun  5 07:00:25 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Thu, 05 Jun 2003 09:00:25 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>

At 01:59 AM 6/5/03 -0400, Glyph Lefkowitz wrote:
>On Wednesday, June 4, 2003, at 06:10 PM, Phillip J. Eby wrote:
>
>>Anyway...  I noticed that the only code in Twisted currently (that I 
>>could find) that actually uses the current __adapt__ setup is the test 
>>suite.  Is there any way this might be changeable to something more 
>>compatible with PEP 246?
>
>Thanks for bringing this to my attention.  As I was perusing the 
>implementation, I realized that the reason we committed this particular 
>incompatibility was being invalidated a scant two lines away :-).  I could 
>have sworn it didn't used to have a try:except: block, but I've checked in 
>a revised version now.
>
>As I understand it, PEP 246 cannot be implemented without raising 
>exceptions in __adapt__.

Actually, no.  __adapt__ is also allowed to return None to signal inability 
to adapt.  And, the consensus so far of people I've talked with (Jim Fulton 
and Guido) is that PEP 246 should be revised in that area anyway, such that 
it isn't even an *option* to raise TypeError to signal 
failure.  PyProtocols will only ignore TypeError if it looks like it came 
from calling an unbound class method, not if it looks like it came from the 
__conform__ or __adapt__ method body.


>>I mean, if I jump through enough hoops building adapters and 
>>monkeypatching, I can probably make it so that this will work 
>>transparently, and anybody who uses PyProtocols will then be able to mix 
>>Twisted, Zope, and PyProtocols interfaces in their applications.
>>But it's pretty messy, and I'm wondering about the copyright status if I 
>>have to copy a lot of code from MetaInterface.__call__ in order to 
>>monkeypatch a replacement.  (I'd like to release PyProtocols under the 
>>PSF license.)
>
>PyProtocols looks like an interesting project, and I'd like to support 
>such an effort at interoperability.  Monkey-patching MetaInterface is 
>almost certainly the wrong thing to do.  Perhaps it would be best if we 
>did not call our interface-aware adaptation mechanism "__adapt__", but 
>something like "adaptWithDefault"?

That would work; at least, it makes the monkeypatch quite a bit simpler.

Are you actually using the __adapt__ method for anything yet?  The only 
code I found with an actual __adapt__ method was in the test suite.


>I am not sure exactly how you're doing compatibility, but perhaps then you 
>could provide a subclass of Interface that provided an adaptWithDefault 
>that called __adapt__ with the proper arguments?

PyProtocols does compatibility by:

1. defining adapters to adapt "foreign" interface types (Zope, Twisted) to 
its own IOpenProtocol interface

2. monkeypatching the foreign interface type itself (Zope InterfaceClass, 
Twisted MetaInterface) to add an __adapt__ method that implements PEP 246 
by "calling down" to the foreign type's normal adaptation methods.  E.g. 
for Zope, the __adapt__ I patch in just does:

if self.isImplementedBy(obj):
     return obj

And for Twisted, the __adapt__ I add does the equivalent of:

     def __adapt__(self, obj):

         if implements(obj, self):
             return obj

         # Get Twisted to try and adapt
         return self(ob, None)

In other words, the __adapt__ I add checks whether Twisted says the object 
already implements the interface, and if so, return it.  Otherwise, adapt 
it by calling the interface on the object, with a default of None.

If you were to switch from using __adapt__ to adaptWithDefault in your 
__call__ method, and added the above as MetaInterface.__adapt__, your 
interfaces would be PEP 246 compatible without any monkeypatching.  For 
compatibility with PyProtocols' declaration API, I would just supply an 
adapter.

(From recent conversations with Jim Fulton, it sounds like he plans to 
eventually add a PEP 246-compatible __adapt__ method to Zope interfaces as 
well, so at that point I could drop the monkeypatching for Zope too.)

I've done a preliminary sketch of an adapter for Twisted interfaces, but 
there are a few holes because I'm not 100% clear on the intended semantics 
of Twisted interfaces in some areas.  Actually, I get the impression that 
that's because Twisted hasn't really defined those semantics either.  For 
example, Twisted doesn't appear to distinguish between "object implements" 
and "class implements".  If I call 'getInterfaces()' on a class, it will 
tell me that the class implements the same interfaces that its instances 
do.  From my POV, that doesn't make any sense, but perhaps it is a 
documented or at least intended limitation?  Certainly, I will need to 
document it in my "Compatibility" section (not yet written).

For right now, my Twisted adapter just pokes a new __implements__ onto 
whatever object is having declarations made about it, whether it's a type 
declaration or an instance declaration.  This means that PyProtocols will 
behave oddly if you pass a class to adapt().  Of course, Twisted will also 
behave oddly if you pass a class to ISomething().

I'm also having trouble figuring out how to apply transitive adapter 
semantics to Twisted.  AFAICT, Twisted adapters are not normally 
transitive.  However, unlike PyProtocols, Twisted interfaces don't know 
about all their adaptations, so there doesn't seem to be a way to issue 
declarations to make them transitive.  But I guess that's optional, since I 
didn't really intend to make PyProtocols add any new functionality to Zope 
or Twisted, just make it reasonably possible to interact with them.

It should be possible at this point to have a PyProtocols interface declare 
that it extends both a Twisted and a Zope interface, without any metaclass 
incompatibilities.  Of course, Twisted and Zope still use mutually 
incompatible definitions of '__implements__', so actually *using* an 
interface that extended both a Twisted and a Zope interface would be 
problematic.  :)




From pobrien at orbtech.com  Thu Jun  5 07:02:13 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 5 Jun 2003 08:02:13 -0500
Subject: [Twisted-Python] Patch to fix issues/web/models.py from CVS
In-Reply-To: <20030605121539.GA3988@mumak.net>
References: <200306041913.41478.pobrien@orbtech.com> <20030605121539.GA3988@mumak.net>
Message-ID: <200306050802.13693.pobrien@orbtech.com>

On Thursday 05 June 2003 07:15 am, Jonathan M. Lange wrote:
> On Wed, Jun 04, 2003 at 07:13:41PM -0500, Patrick K. O'Brien wrote:
> > Index: models.py
>
> Thank you.

You're welcome.

> However, the CVS repository for Issues no longer represents the latest
> branch of the code.
>
> Issues has been moved to a Subversion repository. The move took place
> before I launched on a significant refactoring of the code, which was
> required to change persistence mechanisms.

A mention of this in the NOTES file would be useful.

> The reasons for this are varied, but mainly, it's because Subversion is
> more convenient for me, due to my low bandwitdh.
>
> However, the CVS repository still serves as a valid example of working
> (although not terribly good) Woven code. As such, I'll apply your patch.
>
> I expect an alpha release of Issues to happen in 3-4 weeks time. This will
> contain all the major features that I expect to have in version 1.0.
>
> You can find the repos here: http://mumak.net/svn/Issues/
> Subversion can be found here: http://subversion.tigris.org

I was looking at Issues because I'm looking for an example of a Woven app.  If 
the new code is better, I'd rather look at it.  Is there an equivalent to an 
anonymous CVS checkout with Subversion, and do you allow that for Issues?  Or 
would it be possible to just get a tarball or something?  I'm not looking for 
production quality code, just a decent example of a Woven app to learn from.  

Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From andrew-twisted at puzzling.org  Thu Jun  5 07:17:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 5 Jun 2003 23:17:13 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054813348.16160.290.camel@biproc>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz> <1054799545.16199.259.camel@biproc> <1054802349.16157.265.camel@biproc> <20030605085232.GB17887@frobozz> <1054805286.16160.274.camel@biproc> <20030605095339.GE17887@frobozz> <1054813348.16160.290.camel@biproc>
Message-ID: <20030605131713.GC18487@frobozz>

On Thu, Jun 05, 2003 at 01:42:28PM +0200, Philippe Lafoucri?re wrote:
> 
> > But wvfactory_foo's third argument is a DOM node, not a generic Widget.
> > There is no 'widget' in a wvfactory_.
> 
> ho ok, haven't seen that.

This difference is mentioned under the "wvupdate_" heading of
doc/howto/viewindepth.

> In pilePicture tutorial, in ImageDisplay class :
> 
>     def wchild_preview(self, request):        return static.File(self.image)
> 
> "static" comes from nowhere.

It comes from this import line:
    
    from twisted.web import server, static

-Andrew.




From nico at tekNico.net  Thu Jun  5 07:14:37 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 05 Jun 2003 15:14:37 +0200
Subject: [Twisted-Python] Learning unittest (was: ReverseProxy does not
 forward GET URL parameters)
In-Reply-To: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>
References: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net>
Message-ID: <3EDF423D.3090409@tekNico.net>

> I will look into writing one. I needed an excuse to learn unittest...
> :-)

Don't relay solely on the docs to do this, they'll drive you crazy. :^(

Instead, go to chapter 6 of http://diveintopython.org/ , and
everything will magically unfold in your mind. :^)

Chapter 17 of the "Python in a Nutshell" book is a good intro, too.

-- 
"I have been, and always will be, a programmer: even when designing,
Emacs is my canvas, and I expect C-x C-c to be engraved on my tombstone."
   René Hollan

Nicola Larosa - nico at tekNico.net






From nico at tekNico.net  Thu Jun  5 07:57:13 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 05 Jun 2003 15:57:13 +0200
Subject: [Twisted-Python] Learning unittest
In-Reply-To: <3EDF423D.3090409@tekNico.net>
References: <71041B2C80BFDE4493468955AFAC59DB11149A@chi03-mail.usambiron.net> <3EDF423D.3090409@tekNico.net>
Message-ID: <3EDF4C39.2010103@tekNico.net>

> Don't relay solely on the docs to do this, they'll drive you crazy. :^(

Argh, that should have been "rely", obviously. Sorry.

-- 
"I have been, and always will be, a programmer: even when designing,
Emacs is my canvas, and I expect C-x C-c to be engraved on my tombstone."
   René Hollan

Nicola Larosa - nico at tekNico.net





From itamar at itamarst.org  Thu Jun  5 00:00:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 5 Jun 2003 02:00:29 -0400
Subject: [Twisted-Python] win32 status -- pretty good!
Message-ID: <20030605020029.66a178b4.itamar@itamarst.org>

Discounting tests that are unix only and shouldn't be run on win32 (I
will fix this too), there are only about 3 failures that look like real
bugs when using default reactor.

This is quite good. Looks like we're actually in good shape on Windows.
And hopefully soon all tests will pass.

Of course, then there's the win32event reactor to deal with.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pobrien at orbtech.com  Thu Jun  5 10:46:11 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 5 Jun 2003 11:46:11 -0500
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
Message-ID: <200306051146.11224.pobrien@orbtech.com>

I'm still learning Woven, but I noticed that the html files generated by the 
example programs are mostly devoid of newlines and other whitespace, making 
the html pretty hard to read.  Is there an easy way to enable newlines?  I 
see hints in microdom, but don't understand it well enough yet.

Here is a specific example - the calendar example listed in the docs:

http://www.twistedmatrix.com/documents/howto/viewindepth#auto4

I typed in that example and ran it.  The html it generated could really use 
some well-placed newlines.  Indentation wouldn't hurt either.  How would I 
modify that example to add newlines and indentation to the html?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From dp at twistedmatrix.com  Thu Jun  5 11:16:48 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 10:16:48 -0700
Subject: [Twisted-Python] twisted newbie question about woven and model
In-Reply-To: <1054797127.16160.254.camel@biproc>
Message-ID: <7DC7C4AC-9779-11D7-A93E-000A95864FC4@twistedmatrix.com>


On Thursday, June 5, 2003, at 12:12 AM, Philippe Lafoucrière wrote:

> On Wed, 2003-06-04 at 09:43, Philippe Lafoucrière wrote:
>> Hum
>> I get an exception when I use object/title
>>
>> exceptions.Exception: Node had a model=object/title attribute, but the
>> submodel was not found in [<twisted.web.woven.model.Wrapper instance 
>> at
>> 0x843be3c: wrapped data: <ObjectManager instance at 0x8a24b5c>>].
>>
>> (with model = object)
>
>
> Someone can help me ?? this still doesn't work !

Woven needs to know how to request Submodels of a Model object in order 
to work. It does this using objects which conform to the IModel 
protocol. Since no IModel adapter has been registered for your 
ObjectManager class, Woven wraps it in a generic Wrapper. The generic 
Wrapper does not allow submodel access at all, which is why you are 
getting the exception.

There are two solutions to your problem: The first is to make 
ObjectManager a subclass of model.AttributeModel. AttributeModel is an 
implementation of IModel which exposes attributes of an object as 
submodels. This is probably the easiest because all the code is already 
written for you.

The second solution is to write an IModel adapter which exposes 
attributes of the adapted object as submodels. I have never done this 
before, but it seems like a logical thing to do.

Attached are two pieces of code that show each technique.

Hope this helps! dp


-------------- next part --------------
A non-text attachment was scrubbed...
Name: attributeModelSubclass.rpy
Type: application/octet-stream
Size: 351 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030605/7ed52ecc/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attributeAdapter.rpy
Type: application/octet-stream
Size: 733 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030605/7ed52ecc/attachment-0005.obj>

From dp at twistedmatrix.com  Thu Jun  5 11:33:04 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 10:33:04 -0700
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <200306051146.11224.pobrien@orbtech.com>
Message-ID: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>

On Thursday, June 5, 2003, at 09:46 AM, Patrick K. O'Brien wrote:

> I'm still learning Woven, but I noticed that the html files generated 
> by the
> example programs are mostly devoid of newlines and other whitespace, 
> making
> the html pretty hard to read.  Is there an easy way to enable 
> newlines?  I
> see hints in microdom, but don't understand it well enough yet.

Indeed -- the ugly state of woven's output is something that irritates 
me quite a bit. My current solution is to copy and paste the output 
into BBEdit, and use the Formatting command, but that's only an option 
if you are on Mac OS X.

> Here is a specific example - the calendar example listed in the docs:
>
> http://www.twistedmatrix.com/documents/howto/viewindepth#auto4
>
> I typed in that example and ran it.  The html it generated could 
> really use
> some well-placed newlines.  Indentation wouldn't hurt either.  How 
> would I
> modify that example to add newlines and indentation to the html?

There is a reason the output looks like that, specifically buggy 
browsers. Browsers claim to be whitespace agnostic but appear to format 
certain things, such as tables with images in the cells, differently if 
there is any whitespace in the cell. This was the reason I was told 
woven couldn't output pretty-printed xml; I have not been able to 
reproduce this behavior however. Can someone who has experienced this 
problem (mesozoic, glyph?) please email me an example of the 
problematic HTML?

Anyway, here is a quick fix to the problem:

Edit twisted/web/woven/utils.py

Change this line in doSendPage:

     page = str(d.toxml())

to this:

     page = str(d.toprettyxml())

And if it doesn't cause any problems for you WRT the formatting of your 
pages in the browser, then you should be happy.

I think that I am going to add an option to Page which will allow you 
to turn on and off prettyprinting on a per-page basis. Another thing 
for my todo-in-my-sparetime list :(

dp




From mesozoic at polynode.com  Thu Jun  5 12:17:54 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 5 Jun 2003 14:17:54 -0400
Subject: [Twisted-Python] Strange behavior with Woven, getDynamicChild, addSlash
Message-ID: <20030605181754.GA15522@polynode.com>

I have two Page classes I'm trying to make play nicely, and they won't.

  class Folder(page.Page):
      def initialize(self, *args, **kwargs):
       	  self.items = kwargs.get('items', {})
      def getDynamicChild(self, name, request):
          return self.items.get(name)

  class Album(page.Page):
      # whatever...

  items = {'album': Album()}
  resource = Folder(items = items)

Straightforward enough, or so I thought.  Folder's template creates a list,
with an anchor tag for each one of its "items".  These links work fine, but
when clicked, all the children ignore the fact that addSlash=1.

So when I navigate to "/folder", it automatically redirects to "/folder/".

However, when "album" is a child returned by my Folder, navigating to
"/folder/album" does _not_ add the extra slash -- and I can't figure out
why.

Navigating manually to "/folder/album/" renders normally.  Also, the slash
is automatically added when Album is not a child of Folder, but instead its
own "base resource" in my web server's docroot.  That is, navigating to
"/album" redirects to "/album/" normally.

[The reason I'm doing this is to make a site where _every_ page shares the
same layout; even directory listings need to be templated.  Directory
listings won't always be tied to real filesystem paths, so extending
static.File seems like the wrong approach.]

Any ideas?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From dp at twistedmatrix.com  Thu Jun  5 13:15:12 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 5 Jun 2003 12:15:12 -0700
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <1054805286.16160.274.camel@biproc>
Message-ID: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>

On Thursday, June 5, 2003, at 02:28 AM, Philippe Lafoucrière wrote:

> I think I can put :

*snip*

> in the wvfactory_foo !?

You can, but you should not. Factory methods have one purpose and one 
purpose only: To return a new object.

Update methods are special because they allow you to write the 
equivalent of a new Widget class with an overridden setUp method, 
without writing a new class.

Why does it matter so much where the DOM manipulation occurs? Because 
one of the design goals of woven was to allow a portion of an 
already-rendered page to be re-rendered. The way this is currently 
implemented is by keeping the Widget instances produced by the 
wvfactory_ methods in memory so that the generate (and thus setUp) 
methods may be executed again multiple times.

How is wvupdate_ different? When woven notices a wvupdate_ method, it 
creates a generic Widget instance and places a function pointer to the 
wvupdate_ method on this instance. In this way, the wvupdate_ method 
can be executed multiple times in order to re-render that portion of 
the page.

I know it is confusing, and I hope to remove some of this complexity in 
a future woven version.

dp




From lafou at wanadoo.fr  Thu Jun  5 14:10:42 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jun 2003 22:10:42 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>
References: <07A2485A-978A-11D7-A93E-000A95864FC4@twistedmatrix.com>
Message-ID: <1054843841.16199.295.camel@biproc>

> You can, but you should not. Factory methods have one purpose and one 
> purpose only: To return a new object.
> 
> Update methods are special because they allow you to write the 
> equivalent of a new Widget class with an overridden setUp method, 
> without writing a new class.
> 
> Why does it matter so much where the DOM manipulation occurs? Because 
> one of the design goals of woven was to allow a portion of an 
> already-rendered page to be re-rendered. The way this is currently 
> implemented is by keeping the Widget instances produced by the 
> wvfactory_ methods in memory so that the generate (and thus setUp) 
> methods may be executed again multiple times.
> 
> How is wvupdate_ different? When woven notices a wvupdate_ method, it 
> creates a generic Widget instance and places a function pointer to the 
> wvupdate_ method on this instance. In this way, the wvupdate_ method 
> can be executed multiple times in order to re-render that portion of 
> the page.
> 
> I know it is confusing, and I hope to remove some of this complexity in 
> a future woven version.
> 
> dp

Thank you for this clear explanation ! I understand now !




From arashi1 at pd.jaring.my  Fri Jun  6 03:28:00 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Fri, 6 Jun 2003 17:28:00 +0800
Subject: [Twisted-Python] How to use NameVirtualHost?
Message-ID: <200306061728.00870.arashi1@pd.jaring.my>

Hi all,

What is the correct name for this class? In the source it's NameVirtualHost 
but in the docs it's NamedVirtualHost. Also in the API docs it says:

addHost(self, name, resrc)

Add a host to this virtual host.
This will take a host named `name', and map it to a resource `resrc'. For 
example, a setup for our virtual hosts would be:

   nvh.addHost('divunal.com', divunalDirectory)
   nvh.addHost('www.divunal.com', divunalDirectory)
   nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)
   nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)


But what kind of object is divualDirectory (for example)? I tried to put 
something like:
 
nvh.addHost('divunal.com', "/home/website/divunal.com/")

But I get an error:
'str' has no method getChildWithDefault!

In the dir /home/website/divunal.com/ there is an .rpy file index.rpy where a 
resource is defined. Twisted web could not find it? I'm still confused about 
how to properly use the vhost.* classes...



From robert.penz at outertech.com  Fri Jun  6 04:01:26 2003
From: robert.penz at outertech.com (Robert Penz)
Date: Fri, 6 Jun 2003 12:01:26 +0200
Subject: [Twisted-Python] FTP client with TLS
Message-ID: <200306061201.26655.robert.penz@outertech.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!

I'm starting writting a ftp client script to a server which accepts only TLS 
connects. I'm currently deciding with framework/library I use. I had a look 
at m2crypto and twisted. 

At m2crypto I know it works, as there is an example which was able to login 
and it got a directory listing, but I would like also test twisted as it 
seems to go much further in many parts.

So my question is: Is FTP via TLS possible and can someone direct me to an 
example. Thx. 

- -- 
Regards,
Robert
- ----------------
Robert Penz
robert.penz AT outertech.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE+4GZ28tTsQqJDUBMRAmoSAJ4xbpWqCByogBPEJZyDjbofUPqpPQCcC5jO
fMeY71etLVEr1omfPFQOvao=
=YO3D
-----END PGP SIGNATURE-----




From justinjohnson at fastmail.fm  Fri Jun  6 07:13:19 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 06 Jun 2003 07:13:19 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <200306061201.26655.robert.penz@outertech.com>
References: <200306061201.26655.robert.penz@outertech.com>
Message-ID: <20030606131319.7DD402F17D@www.fastmail.fm>

Resend with different subject, since the last post seemed to slip off
into the Abyss....

-------
I currently have a really simple xmlrpc service defined.  I'd like to add
some authorization to the service so users must enter a user id and
password to use the service.  Can this be done with creds?  Anybody have
any code snippets that would fit the service defined below (most code is
snipped out).  I read the HOWTO, but wasn't sure how to make things work
with what I'm doing.

-----------------------------------------------------
from vob import VOB
import config
import os
from twisted.web import xmlrpc, server

class CCService(xmlrpc.XMLRPC):
        """Service for handling remote VOB creation, removal, and general
           ClearCase maintenance.
        """

        def xmlrpc_mkvob(self, vobs, group):
                """Create VOBs and apply standard triggers.
                """
                results = ""
                for tag in vobs:
                        log("Start mkvob for VOB '%s'" % tag)
                        vob = VOB(tag, group)
                        results += vob.make()
                        results += vob.applyTriggers()
                        log("End mkvob for VOB '%s'" % tag)
                return results

[...snip...]

def main():
        from twisted.internet.app import Application
        app = Application("ccservice")
        resource = CCService()
        app.listenTCP(config.portNumber, server.Site(resource))
        return app

application = main()

if __name__ == '__main__':
        application.run(save=0)
-----------------------------------------------------

Thanks much.
-Justin



From screwtape at froup.com  Fri Jun  6 07:16:17 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 6 Jun 2003 23:16:17 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>
References: <200306051146.11224.pobrien@orbtech.com> <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com>
Message-ID: <20030606131617.GA13200@ferd2.thristian.org>

On Thu, Jun 05, 2003 at 10:33:04AM -0700, Donovan Preston wrote:
> On Thursday, June 5, 2003, at 09:46 AM, Patrick K. O'Brien wrote:
> >I typed in that example and ran it.  The html it generated could 
> >really use
> >some well-placed newlines.  Indentation wouldn't hurt either.  How 
> >would I
> >modify that example to add newlines and indentation to the html?
> 
> There is a reason the output looks like that, specifically buggy 
> browsers. Browsers claim to be whitespace agnostic but appear to format 
> certain things, such as tables with images in the cells, differently if 
> there is any whitespace in the cell. This was the reason I was told 
> woven couldn't output pretty-printed xml; I have not been able to 
> reproduce this behavior however. Can someone who has experienced this 
> problem (mesozoic, glyph?) please email me an example of the 
> problematic HTML?

The 'problematic' status of the HTML is an issue of quite some debate.
In short, traditional browsers had an edge-case with images inside
table cells, which modern browsers (because of the above-mentioned
whitespace agnosticism) should treat differently.

I'd go into more detail, but the problem is best described in detail
in the Mozilla bug database, where someone filed a bug because Mozilla
didn't follow the traditional behaviour. It was filed in December
1999, the last comment was posted in May 2003 (so far). There have
been 130 duplicate bugs filed.

http://bugzilla.mozilla.org/show_bug.cgi?id=22274

There may be other places where supposedly whitespace-agnostic
browsers are actually whitespace-sensitive, but that's the one you
mentioned.

In a perfect world, I'd have block HTML elements on their own lines,
and inline HTML elements, well, inline. But since Woven spits out XML
rather than HTML, that'd be quite hacky to implement. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "this confirms my theory that screwtape is god." -- kristen
|



From itamar at itamarst.org  Fri Jun  6 09:12:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 6 Jun 2003 11:12:14 -0400
Subject: [Twisted-Python] Removing broken/unused packages
Message-ID: <20030606111214.11d1a1cb.itamar@itamarst.org>

I propose we remove coil and popsicle. zoot should probably go too, all
it does is let you make useless gnutella ping/pong taps, and the actual
gnutella protocol code, such as it is, is in twisted.protocols.gnutella.
How about sibling?

Anyone disagree?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Fri Jun  6 11:04:44 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 6 Jun 2003 13:04:44 -0400
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <200306061201.26655.robert.penz@outertech.com>
References: <200306061201.26655.robert.penz@outertech.com>
Message-ID: <20030606170444.GA18140@meson.dyndns.org>

On Fri, Jun 06, 2003 at 12:01:26PM +0200, Robert Penz wrote:
> 
> Hi!
> 
> I'm starting writting a ftp client script to a server which accepts only TLS 
> connects. I'm currently deciding with framework/library I use. I had a look 
> at m2crypto and twisted. 
> 
> At m2crypto I know it works, as there is an example which was able to login 
> and it got a directory listing, but I would like also test twisted as it 
> seems to go much further in many parts.
> 
> So my question is: Is FTP via TLS possible and can someone direct me to an 
> example. Thx. 

  If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client issues
a command like "starttls" then issues no further commands until the server
acknowledges this, at which point some level of encryption is negotiated and
the remainder of the session is so encrypted.

  In this case, adding support for TLS to Twisted's FTP should be very
straightforward.  All that is required is a call to the transport object's
startTLS() method at the appropriate time.  There may be complications due
to the additional connections FTP creates, but this is the basic gist of
things.

  Just to clarify (I can't tell if you're aware or not), Twisted uses
PyOpenSSL for TLS, not m2crypto.

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030606/ae09c271/attachment.sig>

From itamar at itamarst.org  Fri Jun  6 11:09:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 6 Jun 2003 13:09:18 -0400
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <20030606170444.GA18140@meson.dyndns.org>
References: <200306061201.26655.robert.penz@outertech.com>
	<20030606170444.GA18140@meson.dyndns.org>
Message-ID: <20030606130918.41798225.itamar@itamarst.org>

On Fri, 6 Jun 2003 13:04:44 -0400
Jp Calderone <exarkun at intarweb.us> wrote:

>   If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client
>   issues
> a command like "starttls" then issues no further commands until the
> server acknowledges this, at which point some level of encryption is
> negotiated and the remainder of the session is so encrypted.

It's a bit more complicated (e.g. I think on active FTP the client
initiates TLS even though server initiates TCP connection, but we
support that thanks to you!). And it's more like HTTP where you encrypt
the whole session, I think.

Shouldn't be too hard to do if the FTP code is clean enough.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From robert.penz at outertech.com  Fri Jun  6 12:01:47 2003
From: robert.penz at outertech.com (Robert Penz)
Date: Fri, 6 Jun 2003 20:01:47 +0200
Subject: [Twisted-Python] FTP client with TLS
In-Reply-To: <20030606170444.GA18140@meson.dyndns.org>
References: <200306061201.26655.robert.penz@outertech.com> <20030606170444.GA18140@meson.dyndns.org>
Message-ID: <200306062001.56233.robert.penz@outertech.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday 06 June 2003 19:04, Jp Calderone wrote:

>   If FTP TLS is anything like TLS in SMTP or IMAP or POP, the client issues
> a command like "starttls" then issues no further commands until the server
> acknowledges this, at which point some level of encryption is negotiated
> and the remainder of the session is so encrypted.
yes and no ;-)

you can only encrypted the control channel in that case you're right, but not 
if you e.g. want to encrypt all data, or only the directory listing but not 
the data transfers. In both of that cases you need at leasted sometimes 
encrypt the data connection too.

>   In this case, adding support for TLS to Twisted's FTP should be very
> straightforward.  All that is required is a call to the transport object's
> startTLS() method at the appropriate time.  There may be complications due
> to the additional connections FTP creates, but this is the basic gist of
> things.
that should work for control connection only encryption. 

>   Just to clarify (I can't tell if you're aware or not), Twisted uses
> PyOpenSSL for TLS, not m2crypto.
I've tested m2crypto not because I thought its used in twisted, but as it 
provides ftp via tls.


- -- 
Regards,
Robert
- ----------------
Robert Penz
robert.penz AT outertech.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE+4NcU8tTsQqJDUBMRAjjDAJsEX3wPNIv6lfxqdSDDezFjGH/reQCeLXnq
YEjjAQQyn8uNKUQ42wR3M7c=
=nuzz
-----END PGP SIGNATURE-----




From avdd at cantanker.net  Fri Jun  6 19:42:33 2003
From: avdd at cantanker.net (Adrian van den Dries)
Date: Sat, 7 Jun 2003 11:42:33 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030606131617.GA13200@ferd2.thristian.org>
References: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com> <20030606131617.GA13200@ferd2.thristian.org>
Message-ID: <20030607014233.GL1379@home.cantanker.net>

quoth screwtape at froup.com:

> In a perfect world, I'd have block HTML elements on their own lines,
> and inline HTML elements, well, inline. But since Woven spits out XML
> rather than HTML, that'd be quite hacky to implement. :)

Why would it be hacky?  HTML is naturally semantic, so it would be
appropriate for twisted.web.woven.widgets to have a registry of
elements and their default block display properties.  Woven could then
have an option to "pretty-format" the output according to the display
properties.

a.




From screwtape at froup.com  Fri Jun  6 19:57:03 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 11:57:03 +1000
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030605072254.GA17887@frobozz>
References: <20030605124531.GC3988@mumak.net> <1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
Message-ID: <20030607015703.GC13200@ferd2.thristian.org>

On Thu, Jun 05, 2003 at 05:22:54PM +1000, Andrew Bennetts wrote:
> On Thu, Jun 05, 2003 at 09:10:38AM +0200, Philippe Lafoucri?re wrote:
> > 
> > I think howtos have to be reorganized. It's pretty hard to get started
> > with twisted. Moreover, I'am trying to make an application with woven,
> > and have difficulties with documentation on it. Maybe we need more
> > exemples.
> 
> Just a brief note: The Woven docs are new, so any suggestions to improve
> them are extremely welcome!

One thing I found confusing when reading the Woven docs:

In the PicturePile walkthrough, there's a section dealing with storing
data in a session variable. Basically it defines two empty classes and
tells Twisted they can be used to deal with Session objects.

This seemed (not so) subtly bizzare, so I read the components-and-
adapters introduction, which led me to believe that there would be all
sorts of clever magic in the Session object to deal with this sort of
thing. So I trundled over to the Session class in the API docs to see
how the Session object is *supposed* to be used, rather than a
cheating short-cut way.

The Session API docs say "This utility class contains no
functionality, but is used to represent a session."

The Session class doesn't appear to inhert from anything that actually
contains session-related functionality, and the adapter classes sure
don't contain session-related functionality, so I have no idea where
sessiony stuff is done, or how to do it in my own programs, or
anything clever that I might do.

In ASP, admittedly based on a much stupider language, the Session
object is effectively a dictionary. It's much simpler to understand. I
assume there's useful things the Twisted session object can do that
you can't do in ASP, but I'm not very clear on what those things might
be.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "You seem cool for a naked chick in a booth - let's be pals someday." -- PUSA
|



From screwtape at froup.com  Fri Jun  6 20:06:16 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 12:06:16 +1000
Subject: [Twisted-Python] t.web.woven.widgets.Anchor and .Link
Message-ID: <20030607020616.GD13200@ferd2.thristian.org>

Playing with Woven the other day, I tried to put a series of links
into a page (think "navigation bar"). I spent quite some time coaxing
and pleading with the Anchor widget before I discovered the Link
widget which did more or less exactly what I wanted.

After poking around with the Anchor widget a little more, I've decided
it does absolutely nothing at all, since it lacks a setUp method. Is
Anchor really as useless as it appears? Is it for backwards-
compatibility? Shouldn't some note be made in its docstring?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Earthworms are really good with dirt.. Is this too technical?" -- M*A*S*H
|



From screwtape at froup.com  Sat Jun  7 01:32:28 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 7 Jun 2003 17:32:28 +1000
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030607014233.GL1379@home.cantanker.net>
References: <C3784E80-977B-11D7-A93E-000A95864FC4@twistedmatrix.com> <20030606131617.GA13200@ferd2.thristian.org> <20030607014233.GL1379@home.cantanker.net>
Message-ID: <20030607073228.GE13200@ferd2.thristian.org>

On Sat, Jun 07, 2003 at 11:42:33AM +1000, Adrian van den Dries wrote:
> quoth screwtape at froup.com:
> 
> > In a perfect world, I'd have block HTML elements on their own lines,
> > and inline HTML elements, well, inline. But since Woven spits out XML
> > rather than HTML, that'd be quite hacky to implement. :)
> 
> Why would it be hacky?  HTML is naturally semantic, so it would be
> appropriate for twisted.web.woven.widgets to have a registry of
> elements and their default block display properties.  Woven could then
> have an option to "pretty-format" the output according to the display
> properties.

I think it would be hacky because Woven spits out XML, not HTML. One
thing I tried the other day (as noted on this list) is using Woven to
spit out WML for my mobile phone, instead of HTML for my browser. WML
doesn't (as far as I know) have even the concept of block-vs-inline
elements. 

An XSLT engine I worked with once had several 'output modes' which
changed how it spat out data - if you set it to XML mode, it would
work as you expect. If you set it to text mode, I think it refused to
do XML-style entity references and escaping. And if you set it to HTML
mode, it would 'tidy up' some tags ("<hr/>" -> "<hr>", etc), and
pretty-print.

That's all very nice and useful, but I expect it would be a reasonable
amount of work - work that will only ever become less important as
time wears on and XHTML becomes more common. It's not a sufficiently
crucial feature for me to look into creating.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Think of me as CVS with a brain and some taste" -- Linus Torvalds.
|



From 2002 at weholt.org  Sat Jun  7 05:05:17 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 7 Jun 2003 13:05:17 +0200
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
Message-ID: <005701c32ce4$ae1b82b0$0401a8c0@razor>

I'm trying to create a webserver using code from HEP Message Server, which
in turn is based on Twisted. I cannot use rpys in this project due to
limitations on other parts of the system. I need to be able to send huge
files in a non-blocking manner, preferrably supporting Byte-ranges and
partial downloads too, but that's secondary to just being able to download
normally.

My code hangs when the request is for big files. Smaller ones like JPEGs
etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
chewing up memory. The files are stored in a folder called wwwroot in the
same folder as the source file. I'm using Twisted 1.0.5.

The project is a normal webserver used for serving files from 10-500mb,
while also serving HTML-based content. I need to be able to control the
generated content, ie. a producer generates the core-content and I wrap that
content in a template which holds the overall design for the entire site. I
didn't find a way to do that using rpys so I'm trying this code instead. Ok,
that's not the important part, if somebody could just tell me why this
hangs. I can see that the server sends out the correct content-type, but it
seem to hang when it is suppose to write the binary content to the client.

PS! Any info on Twisted.webs status on Byte-ranges, partial download and
gzipped content in responses are also important.

Best regards,
Thomas Weholt

from twisted.protocols.http import HTTPFactory, HTTPChannel, Request
from twisted.internet import app
import time, os, sys, types, mimetypes, ConfigParser

def getFactory(config):
    f = HTTPFactory()
    f.config = config
    f.protocol = MyChannel
    return f

class MyChannel(HTTPChannel):
    def __init__(self):
        HTTPChannel.__init__(self)
        self.requestFactory = RequestHandler

class RequestHandler(Request):
    def __init__(*args):
        Request.__init__(*args)
        self = args[0]

    def process(self):

        if not self.authenticate():
            self.setResponseCode(401, "Unauthorized")
            self.setHeader('WWW-Authenticate', 'Basic realm="Some server"')
            self.write("Access denied")
            self.finish()
            return

        requestData = self.uri.split("?")
        self.pageName = requestData[0]
        if len(requestData) > 1:
            form = parse_qs(requestData[1])
        else:
            form = {}

        self.pageName = 'somehugefile.dat'
        self.sendRequestedFile()
        self.finish()

    def getLocalFileName(self, pageName):
        filenameParts = ['wwwroot'] + pageName.split("/")
        pagefilename = os.path.join(*filenameParts)
        if os.path.isfile(pagefilename):
            return pagefilename

    def sendRequestedFile(self):
        pagefilename = self.getLocalFileName(self.pageName)
        mimeInfo = mimetypes.guess_type(pagefilename)
        if mimeInfo[0]:
            mimetype = mimeInfo[0]
        else:
            mimetype = "text/plain"
        htmlFile = open(pagefilename, 'r+b')
        self.setHeader("Content-type",mimetype)
        chunk = htmlFile.read(1024)
        while chunk:
            self.write(chunk)
            chunk = htmlFile.read(1024)
        htmlFile.close()

    def authenticate(self):
        username = self.getUser()
        password = self.getPassword()
        if username and password:
            return username == 'thomas' and password == 'test.pass'

print "Running something ...",
app = app.Application("MyApp")
config = ConfigParser.ConfigParser()
config.readfp(open('config.ini'))
app.listenTCP(6060, getFactory(config))
print "ok"
app.run()
print "Stopped"




From radix at twistedmatrix.com  Sat Jun  7 05:54:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 7 Jun 2003 07:54:10 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>; from 2002@weholt.org on Sat, Jun 07, 2003 at 07:05:17 -0400
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607115410.GC27054@toshi.anaprd01.md.comcast.net>

On 2003.06.07 07:05, Thomas Weholt wrote:
> My code hangs when the request is for big files. Smaller ones like JPEGs
> etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
> chewing up memory. The files are stored in a folder called wwwroot in the
> same folder as the source file. I'm using Twisted 1.0.5.

Why aren't you using the static.File resource? Subclassing Request is the 
wrong (and a *horrible*) way to write custom web code, to say nothing about
the fact that you're reimplementing what twisted already supports (non-blocking
file transfer support in twisted.web.static.File).

Anyway, the reason that this code is broken is probably because it repeatedly
does blocking reads until the entire file is read. 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Sat Jun  7 06:41:26 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jun 2003 08:41:26 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Expand ITCPTransport
In-Reply-To: <E19OLCA-0000nU-00@pyramid.twistedmatrix.com>
Message-ID: <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Friday, June 6, 2003, at 01:40 PM, exarkun CVS wrote:

> +    def canStartTLS(self):

Hmm.  Wouldn't this be better expressed with a 
components.implements(self, ITLSTransport) ?




From glyph at twistedmatrix.com  Sat Jun  7 06:49:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jun 2003 08:49:39 -0400
Subject: [Twisted-Python] (Summary) The problem with Twisted...
In-Reply-To: <3EDF2F32.D7B4C4A1@engcorp.com>
Message-ID: <806E8D6F-98E6-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Thursday, June 5, 2003, at 07:53 AM, Peter Hansen wrote:

> Basically, in my mind, there is no reason to distinguish between 
> marketing
> and "traditional" XP development, as both should look the same if one 
> is
> doing them most effectively.

Somehow, I feel as though the God of Ethical and Intelligent Marketing 
Practices is posting to this mailing list.

> Of course, if by "marketing Twisted" you meant someone actually wants 
> to
> do the glossy brochure thing on the product, like souping up the web 
> site
> and writing intros for managers, I'm not sure I have much advice except
> I don't think it's such a good idea. :-)

Yes.  This is definitely not a good idea.

First of all, do we really want to attract managers who are swayed by 
glossy brochure marketing material?  We have a top-notch user community 
at the moment, and I know there are a lot of really interesting 
projects going on in the Twistedverse; while it is certainly tempting 
to attempt Total World Domination (TM), eliminating PHP/mod_perl/your 
favorite sucky web technology, the only real benefit is enabling smart 
people who work for stupid people to have a good time.

We could always use improvement of our technical documentation, but I 
think that as a technical community, we generally have a poor 
understanding of what makes the stereotypical bad manager's mind work.  
We need to be able to understand their legitimate concerns without 
caving in to their apparently irrational need for a security blanket of 
"web services" and "b2b p2p" and "enterprise ready".

I have a feeling that if we _did_ try to produce such a website, the 
resulting material would sound indistinguishable (to our ears) from the 
average industry rag advertisement, but that it would feel vaguely 
insulting to the people we were trying to reach, because it would be an 
unintentional parody of that style.




From glyph at twistedmatrix.com  Fri Jun  6 09:26:30 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jun 2003 11:26:30 -0400
Subject: [Twisted-Python] Removing broken/unused packages
In-Reply-To: <20030606111214.11d1a1cb.itamar@itamarst.org>
Message-ID: <3F570E48-9833-11D7-ABC5-000393C9700E@twistedmatrix.com>

On Friday, June 6, 2003, at 11:12 AM, Itamar Shtull-Trauring wrote:

> I propose we remove coil and popsicle. zoot should probably go too

Can we remove these from the release without killing them in CVS?  I'd 
like to have the code stay around for example purposes, but you're 
right that this stuff is too poorly documented and poorly maintained to 
stay in the release tarball.

Zoot should probably be killed entirely, unless Zooko intends to finish 
it at some point.




From m at moshez.org  Sat Jun  7 07:08:56 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jun 2003 13:08:56 -0000
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607130856.21408.qmail@green.zadka.com>

On Sat, 7 Jun 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> I'm trying to create a webserver using code from HEP Message Server, which
> in turn is based on Twisted. I cannot use rpys in this project due to
> limitations on other parts of the system. I need to be able to send huge
> files in a non-blocking manner, preferrably supporting Byte-ranges and
> partial downloads too, but that's secondary to just being able to download
> normally.
...
> My code hangs when the request is for big files.
...
> class RequestHandler(Request):
...

Why in god's name are you overriding the Request object?
Instead of using, say, a root resource which does simple dispatching?
That would allow you to actually *use* the code in Twisted.Web, instead
of hacking up your own stuff, which is buggy :)

>     def sendRequestedFile(self):
...
>         htmlFile = open(pagefilename, 'r+b')
>         self.setHeader("Content-type",mimetype)
>         chunk = htmlFile.read(1024)
>         while chunk:
>             self.write(chunk)
>             chunk = htmlFile.read(1024)
>         htmlFile.close()

Yes, when you write hanging code, it hangs. You are sending the whole file
in one go. Soon, .send() overflows the OS buffers, and then Twisted dutifully
starts to buffer for you. That should give the symptoms you see.

I suggest just substuting it with static.File(pagefilename).render(self)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From cce at clarkevans.com  Sat Jun  7 12:46:35 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sat, 7 Jun 2003 18:46:35 +0000
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com> <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <20030607184635.GA99808@doublegemini.com>

On Thu, Jun 05, 2003 at 01:59:44AM -0400, Glyph Lefkowitz wrote:
| As I understand it, PEP 246 cannot be implemented without raising 
| exceptions in __adapt__. 

PEP 246 does not require exceptions in __adapt__, it does require
that the caller of adapt catch TypeError.  Perhaps this isn't
clearly documented, but is definately part of the reference
implementation.

Best,

Clark




From cce at clarkevans.com  Sat Jun  7 12:51:49 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sat, 7 Jun 2003 18:51:49 +0000
Subject: [Twisted-Python] Interface.adaptWith and Interface.__adapt__
In-Reply-To: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
References: <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com> <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
Message-ID: <20030607185149.GB99808@doublegemini.com>

On Thu, Jun 05, 2003 at 09:00:25AM -0400, Phillip J. Eby wrote:
| >As I understand it, PEP 246 cannot be implemented without raising 
| >exceptions in __adapt__.
| 
| Actually, no.  __adapt__ is also allowed to return None to signal inability 
| to adapt.  And, the consensus so far of people I've talked with (Jim Fulton 
| and Guido) is that PEP 246 should be revised in that area anyway, such that 
| it isn't even an *option* to raise TypeError to signal 
| failure.  PyProtocols will only ignore TypeError if it looks like it came 
| from calling an unbound class method, not if it looks like it came from the 
| __conform__ or __adapt__ method body.

Phillip,

This is great that PEP 246 has found a supporter... let alone someone
who is doing an implementation!  Anyway, I support PEP 246 being 
modified to not catch TypeError; this was done in such a way as to
make writing adapters easier.  But alas, if setting up the try/catch
block is causing performance problems, then it should be dropped.

The python community does indeed need a common protocol implementation,
I do hope your work gains adoption.

Best,

Clark



From pje at telecommunity.com  Sat Jun  7 13:46:18 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 15:46:18 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <20030607185149.GB99808@doublegemini.com>
References: <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
 <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
 <5.1.0.14.0.20030605082143.03f09ec0@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030607154002.030e3970@mail.telecommunity.com>

At 06:51 PM 6/7/03 +0000, Clark C. Evans wrote:
>This is great that PEP 246 has found a supporter... let alone someone
>who is doing an implementation!  Anyway, I support PEP 246 being
>modified to not catch TypeError; this was done in such a way as to
>make writing adapters easier.  But alas, if setting up the try/catch
>block is causing performance problems, then it should be dropped.

The change isn't for performance reasons, but for debugging.  Jim and I 
both feel that masking users' TypeErrors is a bad idea.  So my 
implementation uses a sneaky trick to detect whether the TypeError came 
from *invoking* the method, as opposed to being from *within* the 
method.  This still lets you write simple protocols and components.


>The python community does indeed need a common protocol implementation,
>I do hope your work gains adoption.

As per my other e-mail (Re: PEP 246 comments), I certainly welcome your 
feedback on the current state of the PyProtocols API.  I expect to make a 
public release in the next day or two.




From pje at telecommunity.com  Sat Jun  7 13:47:12 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 15:47:12 -0400
Subject: [Twisted-Python] Interface.adaptWith and
  Interface.__adapt__
In-Reply-To: <20030607184635.GA99808@doublegemini.com>
References: <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
 <5.1.0.14.0.20030604172903.024cb5c0@mail.telecommunity.com>
 <E7FFA7EE-971A-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <5.1.0.14.0.20030607154631.03c56260@mail.telecommunity.com>

At 06:46 PM 6/7/03 +0000, Clark C. Evans wrote:
>On Thu, Jun 05, 2003 at 01:59:44AM -0400, Glyph Lefkowitz wrote:
>| As I understand it, PEP 246 cannot be implemented without raising
>| exceptions in __adapt__.
>
>PEP 246 does not require exceptions in __adapt__, it does require
>that the caller of adapt catch TypeError.

I think you mean the caller of __adapt__, not the caller of 
adapt().  adapt() allows a default value to be passed, so as not to receive 
an error.




From pje at telecommunity.com  Sat Jun  7 16:11:13 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sat, 07 Jun 2003 18:11:13 -0400
Subject: [Twisted-Python] PyProtocols 0.9
Message-ID: <5.1.0.14.0.20030607180620.02418c50@mail.telecommunity.com>

Do you hate having to write lots of if-then logic to test what type 
something is?  Wouldn't it be nice if you could just declare "I want this 
object to have this behavior" and magically convert whatever value you 
have, to the type you need?  PyProtocols lets you do just that, cleanly, 
quickly, and robustly -- even with built-in types or other people's classes.

PyProtocols extends the PEP 246 adapt() function with a new "declaration 
API" that lets you easily define your own interfaces and adapters, and 
declare what adapters should be used to adapt what types, objects, or 
interfaces.  In addition to its own Interface type, PyProtocols can also 
use Twisted and Zope X3's Interface types.  (Of course, since Twisted and 
Zope interfaces aren't as flexible, only a subset of the PyProtocols API 
works with them.  Specific limitations are listed in the documentation.)

If you're familiar with Interface objects in Zope, Twisted, or PEAK, the 
Interface objects in PyProtocols are very similar.  But, they can also do 
many things that no other Python interface types can do.  For example, 
PyProtocols supports "subsetting" of interfaces, where you can declare that 
one interface is a subset of another existing interface.  This is like 
declaring that somebody else's existing interface is actually a subclass of 
the new interface.  Twisted and Zope don't allow this, which makes them 
very hard to use if you're trying to define interfaces like "Read-only 
Mapping" as a subset of "Mapping Object".

Unlike Zope and Twisted, PyProtocols also doesn't force you to use a 
particular interface coding style or even a specific interface type.  You 
can use its built-in interface types, or define your own.  If there's 
another Python package out there with interface types that you'd like to 
use (CORBA? COM?), you can even create your own adapters to make them work 
with the PyProtocols API.

PyProtocols is also the only interface package that supports automatic 
"transitive adaptation".  That is, if you define an adapter from interface 
A to interface B, and another from B to C, PyProtocols automatically 
creates and registers a new adapter from A to C for you.  If you later 
declare an explicit adapter from A to C, it silently replaces the 
automatically created one.

PyProtocols may be used, modified, and distributed under the same terms
and conditions as Python or Zope.


PyProtocols resources include:

* Release notes, installation instructions, and browsable API docs:
   http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
   http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
   http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
   http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
   http://cvs.eby-sarna.com/PyProtocols/


Version 0.9 of PyProtocols is a complete, working release, so you can 
download it now and try it out.  But, the exact spellings of the API and 
other interfaces may be subject to change in the future.  We would like 
feedback from the community on the current API, as some API names may not 
be clear or obvious yet.  Please contact the author with your input.




From dalke at dalkescientific.com  Sat Jun  7 17:50:59 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sat, 7 Jun 2003 17:50:59 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030606131319.7DD402F17D@www.fastmail.fm>
Message-ID: <E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>

Justin Johnson:
 > I currently have a really simple xmlrpc service defined.  I'd like to 
add
> some authorization to the service so users must enter a user id and
> password to use the service.  Can this be done with creds?  Anybody 
> have
> any code snippets that would fit the service defined below (most code 
> is
> snipped out).  I read the HOWTO, but wasn't sure how to make things 
> work
> with what I'm doing.

I want to do something similar.  I looked at the code, and I think it
can do what I want, but I haven't tested it, and even after looking at
it for a while I'm still not certain.

There are two "normal" ways to do authentication for XML-RPC.  The first
is to pass the username/password in the request and the other is to use
HTTP authentication.

I prefer the latter.  I would do it by having a wrapper object around
the resource, which does the HTTP authentication and passes 
authenticated
requests to the actual resource.  Looking at the code, the code that's
the closest fit is 'twisted.web.guard.ResourceGuard', but this doesn't
seem to work right.  I can't figure out how it validates the user 
because
the render method doesn't do anything with variables which look like
it might validate username/password information.

And that code is marked as "unstable".

Anyone else have better information?

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sat Jun  7 17:54:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 7 Jun 2003 19:54:03 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030606131319.7DD402F17D@www.fastmail.fm>
	<E35357BC-9942-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030607195403.6046de7d.itamar@itamarst.org>

On Sat, 7 Jun 2003 17:50:59 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> I prefer the latter.  I would do it by having a wrapper object around
> the resource, which does the HTTP authentication and passes 
> authenticated
> requests to the actual resource.  Looking at the code, the code that's
> the closest fit is 'twisted.web.guard.ResourceGuard', but this doesn't
> seem to work right.  I can't figure out how it validates the user 
> because
> the render method doesn't do anything with variables which look like
> it might validate username/password information.

guard is for form-based session authentication. For HTTP auth you just
need to do request.getUser() and request.getPassword() or some similarly
named methods (and send back appropriate HTTP response code for
unauthenticated if they're None).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dalke at dalkescientific.com  Sat Jun  7 18:55:35 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sat, 7 Jun 2003 18:55:35 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030607195403.6046de7d.itamar@itamarst.org>
Message-ID: <E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring:
> guard is for form-based session authentication. For HTTP auth you just
> need to do request.getUser() and request.getPassword() or some 
> similarly
> named methods (and send back appropriate HTTP response code for
> unauthenticated if they're None).

Ahhh, okay.  I saw the docstring which said "Cred integration for 
twisted.web"
and assumed it was used for any cred use related to twisted.web.

Is "cred" the standard authentication mechanism for Twisted?  That
is, if I want to do HTTP auth for XML-RPC shouldn't I hook into the
cred system?  (Don't know myself - haven't gotten to that part of
Twisted yet.)

And if that's the case, couldn't the functionality you mentioned
all be implemented in a class which is a wrapper to the corresponding
resource, rather than having Justin Johnson and I both reimplement that
same functionality?

And if it were available as a standard class for Twisted, wouldn't
twisted.web.guard.ResourceGuard be a good place for it?  ;)

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Sat Jun  7 19:00:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 7 Jun 2003 21:00:38 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030607195403.6046de7d.itamar@itamarst.org>
	<E9C2F90B-994B-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030607210038.28441606.itamar@itamarst.org>

On Sat, 7 Jun 2003 18:55:35 -0600
Andrew Dalke <dalke at dalkescientific.com> wrote:

> Is "cred" the standard authentication mechanism for Twisted?  That
> is, if I want to do HTTP auth for XML-RPC shouldn't I hook into the
> cred system?  (Don't know myself - haven't gotten to that part of
> Twisted yet.)

As with most high-level libraries in twisted, it's totally optional. It
does give you a nice pluggable backend, so you can use same auth
database for all Twisted apps. That's the theory. It might even be true
if we manage to rewrite cred this month :)

> And if that's the case, couldn't the functionality you mentioned
> all be implemented in a class which is a wrapper to the corresponding
> resource, rather than having Justin Johnson and I both reimplement
> that same functionality?

I haven't needed one of these, neither have other Twisted developers
apparently. Thus, no code for it.

> And if it were available as a standard class for Twisted, wouldn't
> twisted.web.guard.ResourceGuard be a good place for it?  ;)

No, like I said, that does form based authentication. You'd want a
twisted.web.fuard.HTTPAuthResourceGuard. If you write one and contribute
it we can include it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From abe at fettig.net  Sat Jun  7 19:25:51 2003
From: abe at fettig.net (Abe Fettig)
Date: 07 Jun 2003 21:25:51 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <1055035550.708.13.camel@mingus>

On Sat, 2003-06-07 at 07:05, Thomas Weholt wrote:
> I'm trying to create a webserver using code from HEP Message Server, which
> in turn is based on Twisted. 

[look of horror on my face]

The web code in Hep 0.3.2 was crudely ported to Twisted from existing
asyncore-based code.  It should _not_ be viewed as an example of good
Twisted practices.  And, for that matter, neither should the web code in
Hep CVS :-).

Abe




From glyph at twistedmatrix.com  Sat Jun  7 22:26:54 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 00:26:54 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <1055035550.708.13.camel@mingus>
Message-ID: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>

On Saturday, June 7, 2003, at 09:25 PM, Abe Fettig wrote:

> [look of horror on my face]

You and me both :)

> The web code in Hep 0.3.2 was crudely ported to Twisted from existing
> asyncore-based code.  It should _not_ be viewed as an example of good
> Twisted practices.  And, for that matter, neither should the web code 
> in
> Hep CVS :-).

We're always around, here and on IRC, if you need help to get things 
better in-sync with Twisted "best practices".

Hep is a pretty interesting project, so it will likely attract this 
kind of attention in the future as well.  We both have an interest in 
seeing it more in-sync with the overall Twisted vibe, I think.




From glyph at twistedmatrix.com  Sat Jun  7 22:29:28 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 00:29:28 -0400
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <20030607210038.28441606.itamar@itamarst.org>
Message-ID: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>

On Saturday, June 7, 2003, at 09:00 PM, Itamar Shtull-Trauring wrote:

> As with most high-level libraries in twisted, it's totally optional. It
> does give you a nice pluggable backend, so you can use same auth
> database for all Twisted apps. That's the theory. It might even be true
> if we manage to rewrite cred this month :)

This is actually pretty likely.  I need cred implemented for LOTS of 
reasons this month.

> No, like I said, that does form based authentication. You'd want a
> twisted.web.fuard.HTTPAuthResourceGuard. If you write one and 
> contribute
> it we can include it.

What I'd really like is the ability to configure a guard to use HTTP 
auth depending on certain parameters, such as the user-agent.  For 
example, a site which traditionally uses form-based authentication with 
interactive browsers still might be better-suited to HTTP auth when one 
is fetching a file with wget.




From richard at starfighter.freeuk.com  Sun Jun  8 04:10:00 2003
From: richard at starfighter.freeuk.com (Richard Townsend)
Date: Sun, 8 Jun 2003 11:10:00 +0100
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports
Message-ID: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>

The Twisted docs state that an Application object "can switch to a different
uid/gid after binding reserved ports".

I have recently been experimenting with a simple app that creates a
server.Site object and an app.Application() object and calls the latter's
listenTCP() method.

I want it to listen on reserved port 80, and then switch to a different
uid/gid but it's not clear to me how to do this. Could someone please
explain what the necessary steps should be?

(Note: I can't use twistd because it would not compatible with our system
architecture).

Python 2.2 on HP-UX11i & Linux

best regards,
Richard


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 1796 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030608/2b0769aa/attachment-0002.bin>

From itamar at itamarst.org  Sun Jun  8 05:54:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 8 Jun 2003 07:54:34 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding
 reserved ports
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
References: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
Message-ID: <20030608075434.2efbe84a.itamar@itamarst.org>

On Sun, 8 Jun 2003 11:10:00 +0100
"Richard Townsend" <richard at starfighter.freeuk.com> wrote:

> I want it to listen on reserved port 80, and then switch to a
> different uid/gid but it's not clear to me how to do this. Could
> someone please explain what the necessary steps should be?

At a guess, set uid and gid attributes on the Application instance, then
run() it as root.

> (Note: I can't use twistd because it would not compatible with our
> system architecture).

The sounds very unlikely. Are you aware of the "twistd -y" option?


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Sun Jun  8 06:37:26 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 08:37:26 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHGEPACBAA.richard@starfighter.freeuk.com>
Message-ID: <F5D18E7E-99AD-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Sunday, June 8, 2003, at 06:10 AM, Richard Townsend wrote:

> The Twisted docs state that an Application object "can switch to a 
> different
> uid/gid after binding reserved ports".

You can specify keyword arguments to Application's constructor.

	a = Application(uid=1001, gid=1001)

Then, call either the setUID or setEUID method of your Application 
instance.  You will need to call bindPorts before calling these 
methods, however.

> (Note: I can't use twistd because it would not compatible with our 
> system
> architecture).

Can you detail what about twistd is incompatible with your system 
architecture?  If your system is deployed for a long period of time, 
chances are you are going to find that you require more and more 
features from twistd and re-implement it one feature at a time.

We provide the ability to run Twisted without twistd for simplicity's 
sake and for certain special cases, but this is really not recommended. 
  Twisted is a framework, not a library, and should be used as one 
wherever possible.




From richard at starfighter.freeuk.com  Sun Jun  8 07:46:46 2003
From: richard at starfighter.freeuk.com (Richard Townsend)
Date: Sun, 8 Jun 2003 14:46:46 +0100
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports 
Message-ID: <ECEGJLPCEIFJKDPCFJDHEEPBCBAA.richard@starfighter.freeuk.com>

> You can specify keyword arguments to Application's constructor.
>
>	a = Application(uid=1001, gid=1001)

> Then, call either the setUID or setEUID method of your Application 
> instance.  You will need to call bindPorts before calling these 
> methods, however.

Thanks for the info - it was the bindPorts() call I was missing - now it
works OK! 

It didn't seem to matter (in my test program) if I called bindPorts() before
or after listenTCP() - is there a preference?

> Can you detail what about twistd is incompatible with your system 
> architecture?  If your system is deployed for a long period of time, 
> chances are you are going to find that you require more and more 
> features from twistd and re-implement it one feature at a time.

Our system uses a home-grown process controller application to start
background processes. If it receives a SIGCHLD, it restarts the application.
It appears to me that when you run twistd, it forks a new process and the
original twistd dies. Our controller would then keep trying to restart it...



-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 2252 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030608/df701efc/attachment-0002.bin>

From glyph at twistedmatrix.com  Sun Jun  8 07:56:36 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Jun 2003 09:56:36 -0400
Subject: [Twisted-Python] Switch to a different uid/gid after binding reserved ports 
In-Reply-To: <ECEGJLPCEIFJKDPCFJDHEEPBCBAA.richard@starfighter.freeuk.com>
Message-ID: <051FEDC2-99B9-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Sunday, June 8, 2003, at 09:46 AM, Richard Townsend wrote:

> Our system uses a home-grown process controller application to start
> background processes. If it receives a SIGCHLD, it restarts the 
> application.
> It appears to me that when you run twistd, it forks a new process and 
> the
> original twistd dies. Our controller would then keep trying to restart 
> it...

This is fixed easily enough.

glyph at parchment:~% twistd --help | grep -- --nodaemon
   -n, --nodaemon         don't daemonize

Make sure you pass a '-l' option as well, otherwise it will log to 
standard output.




From peter at engcorp.com  Sun Jun  8 10:47:05 2003
From: peter at engcorp.com (Peter Hansen)
Date: Sun, 08 Jun 2003 12:47:05 -0400
Subject: [Twisted-Python] Concern over "relentless hyping" (was Twisted - howto transport
 megabytes?)
Message-ID: <3EE36889.B1259CFD@engcorp.com>

I received the following message in private (I assume) email after
my last post to the newsgroup.  Comments are welcome, preferably
public ones (merely because I consider private discussions about
this kind of thing to be a severe waste of my limited time).

Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
Is anyone over-hyping it?  Is there a maximum acceptable target level 
of hype?

-Peter Hansen

-------- Original Message --------
From: <name suppressed>
Subject: Twisted - howto transport megabytes?
To: peter at engcorp.com

In article <3EE35666.965E6369 at engcorp.com> you write:
> I just realized something -- examples like yours and Moshe's 
> answer show how elegant the Twisted solution can be.
>
> Questions like Ed's and answers like these are probably the best publicity 
> Twisted can receive, if you're trying to attract new users.  ;-)

IMHO, if you're trying to attract experienced, multi-lingual programmers, 
this relentless hyping is a little off-putting. (Well, _I_ find it
off-putting.)

Cheers.
<name suppressed>



From dp at twistedmatrix.com  Sun Jun  8 11:09:19 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 8 Jun 2003 10:09:19 -0700
Subject: [Twisted-Python] Woven-generated html needs newlines and whitespace
In-Reply-To: <20030607014233.GL1379@home.cantanker.net>
Message-ID: <F11BD85D-99D3-11D7-BFBD-000A95864FC4@twistedmatrix.com>

On Friday, June 6, 2003, at 06:42 PM, Adrian van den Dries wrote:

> quoth screwtape at froup.com:
>
>> In a perfect world, I'd have block HTML elements on their own lines,
>> and inline HTML elements, well, inline. But since Woven spits out XML
>> rather than HTML, that'd be quite hacky to implement. :)
>
> Why would it be hacky?  HTML is naturally semantic, so it would be
> appropriate for twisted.web.woven.widgets to have a registry of
> elements and their default block display properties.  Woven could then
> have an option to "pretty-format" the output according to the display
> properties.

Woven widgets don't have anything to do with the display of the final 
html; they just manipulate the DOM. microdom is wholly responsible for 
turning this tree of objects into a string of characters.

However, this doesn't mean microdom can't do the same thing -- put 
inline HTML elements inline. Thanks for the idea, I'll implement it 
asap!

Donovan




From cce at clarkevans.com  Sun Jun  8 13:41:17 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 8 Jun 2003 19:41:17 +0000
Subject: [Twisted-Python] Concern over "relentless hyping" (was Twisted - howto transport megabytes?)
In-Reply-To: <3EE36889.B1259CFD@engcorp.com>
References: <3EE36889.B1259CFD@engcorp.com>
Message-ID: <20030608194117.GA3761@doublegemini.com>

Peter,

  I do not want to generalize.  However, I agree with the anonymous
  person involved.  In particular, your follow up post to Moshe's
  post didn't really add anything 'technical' to the discussion.  
  For your litmus test, I'd use this as the guideline: if it isn't
  responding to a technical issue (as Moshe did) and its not an 
  announcement then it probably does not help.   Anyway, hype is 
  best spread privately... beacuse then it carries credibility.
  Also, it's best to hype if you are only indirectly involved, for
  example, I can't hype YAML publicly.

Hope this helps.

Best,

Clark

On Sun, Jun 08, 2003 at 12:47:05PM -0400, Peter Hansen wrote:
| I received the following message in private (I assume) email after
| my last post to the newsgroup.  Comments are welcome, preferably
| public ones (merely because I consider private discussions about
| this kind of thing to be a severe waste of my limited time).
| 
| Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
| Is anyone over-hyping it?  Is there a maximum acceptable target level 
| of hype?
| 
| -Peter Hansen
| 
| -------- Original Message --------
| From: <name suppressed>
| Subject: Twisted - howto transport megabytes?
| To: peter at engcorp.com
| 
| In article <3EE35666.965E6369 at engcorp.com> you write:
| > I just realized something -- examples like yours and Moshe's 
| > answer show how elegant the Twisted solution can be.
| >
| > Questions like Ed's and answers like these are probably the best publicity 
| > Twisted can receive, if you're trying to attract new users.  ;-)
| 
| IMHO, if you're trying to attract experienced, multi-lingual programmers, 
| this relentless hyping is a little off-putting. (Well, _I_ find it
| off-putting.)
| 
| Cheers.
| <name suppressed>
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dalke at dalkescientific.com  Sun Jun  8 18:19:33 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 8 Jun 2003 18:19:33 -0600
Subject: [Twisted-Python] possible web server attacks
In-Reply-To: <84CEA432-94DA-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <0B872F1B-9A10-11D7-B9B9-000393C92466@dalkescientific.com>

There appears to be a trivial attack against the HTTP server.

The code doesn't restrict the number of header lines sent to the
server, so the following will do nasty things to it.

 >>> import socket
 >>> def go():
...  f=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
...  f.connect(("localhost", 8080))
...  f.send("GET / HTTP/1.0\r\n")
...  for i in range(1000000):
...   f.send("%s: X\r\n" % i)
...   if i%1000 == 0: print i
...
 >>> go()
  ....
 >>> go()
  ....

Keep going until the machine runs out of memory.  I didn't have
a machine I wanted to sacrifice for that, so I don't know if the
actual code will catch the MemoryError or not.  Even if not, an
attacker can bring the memory use right up to the limit, thus
preventing other actions from occuring.

There needs to be a limit to the total number of header lines read
(or, as with Apache, a limit to the total number of bytes read for
the header).

As was pointed out before when I brought this up, there is a limit
to the line size.  But that's not enough.

Also, this non-limit opens Twisted up to the hash collision attack
mentioned recently on python-dev.

BTW, I also note that Twisted passes non-ASCII characters to the log.
This can be used as an attack against some terminals.  Here's one
document describing the method

   http://www.digitaldefense.net/labs/papers/Termulation.txt

Twisted should do what Apache does and escape those characters.

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Sun Jun  8 18:35:49 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Sun, 8 Jun 2003 18:35:49 -0600
Subject: [Twisted-Python] typos
Message-ID: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>

The howto index page has typos
   http://www.twistedmatrix.com/documents/howto/

Woven
PicturePile, a Woven tutorial application.
Model in Depth
View in Depth
Controller in Depth
Form in Depth
Guard in Depth
LivePage
Page in Depth
Form in Depth   -- duplicate (and original doesn't have link)
Guard in Depth  -- duplicate (first has no link), and the URL
                       should be "depth" not "detph"


Dot Products
Names
Lore
Lore  -- should be "extending lore"


					Andrew




From alexander.winston at attbi.com  Sun Jun  8 19:32:50 2003
From: alexander.winston at attbi.com (Alexander Winston)
Date: Sun, 8 Jun 2003 20:32:50 -0500
Subject: [Twisted-Python] twisted.web.static.loadMimeTypes() patch
Message-ID: <20030609013250.GA2063@blue.24.125.118.3>

This patch is for twisted.web.static.loadMimeTypes().  It reads Python's built-in dictionary and updates its with a dictionary of our own (aka The Usual Suspects).  Support was added for reading/sourcing of an external file (the default being "/etc/mime.types"), which would update the aforementioned dictionary with the contents of the file.  The patch is attached to this E-mail.

----
Alexander Winston (Yeah.) <alexander.winston at attbi.com>
-------------- next part --------------
Index: Twisted/twisted/web/static.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/static.py,v
retrieving revision 1.92
diff -u -r1.92 static.py
--- Twisted/twisted/web/static.py	31 May 2003 05:42:42 -0000	1.92
+++ Twisted/twisted/web/static.py	8 Jun 2003 20:41:27 -0000
@@ -147,43 +147,48 @@
                           app.theApplication)
 
 
-def loadMimeTypes():
-    """Ugg, does this even need to exist anymore?  Stupid stdlib"""
+def loadMimeTypes(mimetypes_location='/etc/mime.types'):
+    '''Yay for mime(-type)s!'''
     import mimetypes
-    # let's try a few of the usual suspects...
-    contentTypes = {
-        ".css": "text/css",
-        ".exe": "application/x-executable",
-        ".flac": "audio/x-flac",
-        ".gif": "image/gif",
-        ".gtar": "application/x-gtar",
-        ".html": "text/html",
-        ".htm": "text/html",
-        ".java": "text/plain",
-        ".jpeg": "image/jpeg",
-        ".jpg": "image/jpeg",
-        ".lisp": "text/x-lisp",
-        ".mp3":  "audio/mpeg",
-        ".oz": "text/x-oz",
-        ".ogg": "application/x-ogg",
-        ".pdf": "application/x-pdf",
-        ".png": "image/png",
-        ".py": "text/plain",
-        ".swf": "application/x-shockwave-flash",
-        ".tar": "application/x-tar",
-        ".tgz": "application/x-gtar",
-        ".tif": "image/tiff",
-        ".tiff": "image/tiff",
-        ".txt": "text/plain",
-        ".wml": "text/vnd.wap.wml",
-        ".xul": "application/vnd.mozilla.xul+xml",
-        ".zip": "application/x-zip",
-        ".patch": "text/plain",
+    # Grab Python's built-in mimetypes dictionary.
+    contentTypes = mimetypes.types_map
+    # Update Python's dictionary with a few of our usual suspects.
+    contentTypes.update(
+        {
+            '.conf':  'text/plain',
+            '.css':   'text/css',
+            '.exe':   'application/x-executable',
+            '.flac':  'audio/x-flac',
+            '.gif':   'image/gif',
+            '.gtar':  'application/x-gtar',
+            '.html':  'text/html',
+            '.htm':   'text/html',
+            '.java':  'text/plain',
+            '.jpeg':  'image/jpeg',
+            '.jpg':   'image/jpeg',
+            '.lisp':  'text/x-lisp',
+            '.mp3':   'audio/mpeg',
+            '.ogg':   'application/ogg',
+            '.oz':    'text/x-oz',
+            '.patch': 'text/plain',
+            '.pdf':   'application/x-pdf',
+            '.png':   'image/png',
+            '.py':    'text/plain',
+            '.swf':   'application/x-shockwave-flash',
+            '.tar':   'application/x-tar',
+            '.tgz':   'application/x-gtar',
+            '.tif':   'image/tiff',
+            '.tiff':  'image/tiff',
+            '.txt':   'text/plain',
+            '.wml':   'text/vnd.wap.wml',
+            '.xul':   'application/vnd.mozilla.xul+xml',
+            '.zip':   'application/x-zip',
         }
-    upd = contentTypes.update
-    if os.path.exists("/etc/mime.types"):
-        upd(mimetypes.read_mime_types("/etc/mime.types"))
-
+    )
+    # Users can override these mime-types by loading them out of a system-wide
+    # configuration file (this defaults to "/etc/mime.types").
+    if os.path.exists(mimetypes_location):
+        contentTypes.update(mimetypes.read_mime_types(mimetypes_location))
     return contentTypes
 
 

From justin at gnubia.net  Mon Jun  9 01:55:05 2003
From: justin at gnubia.net (Justin Ryan)
Date: 09 Jun 2003 02:55:05 -0500
Subject: [Twisted-Python] How to use NameVirtualHost?
In-Reply-To: <200306061728.00870.arashi1@pd.jaring.my>
References: <200306061728.00870.arashi1@pd.jaring.my>
Message-ID: <1055145305.1231.34.camel@qutang.gnubian.org>

addHost appears to be expecting a twisted.web.resource instance, not a
string that points to a directory containing an .rpy which defines one.

So, it seems logical that you will need to find a way to import the
resource from the .rpy file.  Why not rename the index.rpy to
sitename.py, add the dir to sys.path, and import it?

On Fri, 2003-06-06 at 04:28, Mukhsein Johari wrote:
> Hi all,
> 
> What is the correct name for this class? In the source it's NameVirtualHost 
> but in the docs it's NamedVirtualHost. Also in the API docs it says:
> 
> addHost(self, name, resrc)
> 
> Add a host to this virtual host.
> This will take a host named `name', and map it to a resource `resrc'. For 
> example, a setup for our virtual hosts would be:
> 
>    nvh.addHost('divunal.com', divunalDirectory)
>    nvh.addHost('www.divunal.com', divunalDirectory)
>    nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)
>    nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)
> 
> 
> But what kind of object is divualDirectory (for example)? I tried to put 
> something like:
>  
> nvh.addHost('divunal.com', "/home/website/divunal.com/")
> 
> But I get an error:
> 'str' has no method getChildWithDefault!
> 
> In the dir /home/website/divunal.com/ there is an .rpy file index.rpy where a 
> resource is defined. Twisted web could not find it? I'm still confused about 
> how to properly use the vhost.* classes...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Mon Jun  9 02:55:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 9 Jun 2003 18:55:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>
References: <51267AF7-9A12-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030609085545.GA11093@frobozz>

On Sun, Jun 08, 2003 at 06:35:49PM -0600, Andrew Dalke wrote:
> The howto index page has typos
>   http://www.twistedmatrix.com/documents/howto/

These were fixed in CVS a couple of weeks ago -- but thanks anyway!

-Andrew.




From Richard.Townsend at edl.uk.eds.com  Mon Jun  9 03:34:16 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 9 Jun 2003 10:34:16 +0100 
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports (G
 lyph Lefkowitz)
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E15E@EWHKA005>

> 
> You can specify keyword arguments to Application's constructor.
> 
> 	a = Application(uid=1001, gid=1001)
> 
> Then, call either the setUID or setEUID method of your Application 
> instance.  You will need to call bindPorts before calling these 
> methods, however.
> 

Hi Glyph,

I have now had a chance to test this on HP-UX11i and have discovered a
problem.

The code for Application.setUID() calls os.getgid() expecting it to return 0
for root. However, on HP-UX it returns 3.

# id
uid=0(root) gid=3(sys)
groups=0(root),1(other),2(bin),4(adm),5(daemon),6(mail),7(lp),20(users)

# /opt/python/bin/python          
Python 2.2.1 (#5, Jan 23 2003, 13:18:26) [C] on hp-ux11
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> os.getgid()
3

But:

>>> os.getgroups()
[3, 0, 1, 2, 4, 5, 6, 7, 20]

A possible solution would be:

    def setUID(self):
        """Retrieve persistent uid/gid pair (if possible) and set the
current process's uid/gid
        """
        if hasattr(os, 'getgroups'):
            if 0 in os.getgroups():
                os.setgid(self.gid)
                os.setuid(self.uid)
                log.msg('set uid/gid %s/%s' % (self.uid, self.gid))


Alternatively, you might use try/except & ignore OSError exceptions?

cheers,
Richard Townsend
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030609/c7eedc81/attachment.html>

From miathan at goliath.darktech.org  Mon Jun  9 06:33:00 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Mon, 9 Jun 2003 14:33:00 +0200
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports (G
In-Reply-To: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>; from twisted-python-request@twistedmatrix.com on Mon, Jun 09, 2003 at 13:38:10 +0200
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20030609123300.GC29930@mercury.local.net>

> I have now had a chance to test this on HP-UX11i and have discovered a
> problem.
> 
> The code for Application.setUID() calls os.getgid() expecting it to
> return 0

Why on earth would you want to check or enforce someone is in group 0? 
Being in group 0 doesn't have any 'magic' like uid 0 has, well, it 
might have on some operating systems, but it's not a portable way.

Some unices don't even have a special *user* ID 0 but have security 
based on process privileges. You shouldn't assume setuid or setgid to 
fail/succeed based on those numbers.

IMO the best way is to just try to setuid/setgid if requested, if it is 
not allowed you'll get an EPERM soon enough anyway.

Wladimir



From justinjohnson at fastmail.fm  Mon Jun  9 07:39:41 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 09 Jun 2003 07:39:41 -0600
Subject: [Twisted-Python] XMLRPC Authentication
In-Reply-To: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>
References: <CAC2E64B-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <20030609133941.7E7723335D@www.fastmail.fm>

FYI-

I ended up using the SimpleXMLRPCServer from python and adding the
necessary code to do http auth.  Posted my code to the python-list. 
However, if the functionality is added to cred at a later date, I'd love
to use it.

Thanks for the info.
-Justin

On Sun, 8 Jun 2003 00:29:28 -0400, "Glyph Lefkowitz"
<glyph at twistedmatrix.com> said:
> 
> On Saturday, June 7, 2003, at 09:00 PM, Itamar Shtull-Trauring wrote:
> 
> > As with most high-level libraries in twisted, it's totally optional. It
> > does give you a nice pluggable backend, so you can use same auth
> > database for all Twisted apps. That's the theory. It might even be true
> > if we manage to rewrite cred this month :)
> 
> This is actually pretty likely.  I need cred implemented for LOTS of 
> reasons this month.
> 
> > No, like I said, that does form based authentication. You'd want a
> > twisted.web.fuard.HTTPAuthResourceGuard. If you write one and 
> > contribute
> > it we can include it.
> 
> What I'd really like is the ability to configure a guard to use HTTP 
> auth depending on certain parameters, such as the user-agent.  For 
> example, a site which traditionally uses form-based authentication with 
> interactive browsers still might be better-suited to HTTP auth when one 
> is fetching a file with wget.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From abe at fettig.net  Mon Jun  9 11:35:56 2003
From: abe at fettig.net (Abe Fettig)
Date: 09 Jun 2003 13:35:56 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big
 files)
In-Reply-To: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <1055180156.11822.32.camel@mingus>

On Sun, 2003-06-08 at 00:26, Glyph Lefkowitz wrote:
> On Saturday, June 7, 2003, at 09:25 PM, Abe Fettig wrote:
> 
> > [look of horror on my face]
> 
> You and me both :)
> 
> > The web code in Hep 0.3.2 was crudely ported to Twisted from existing
> > asyncore-based code.  It should _not_ be viewed as an example of good
> > Twisted practices.  And, for that matter, neither should the web code 
> > in
> > Hep CVS :-).
> 
> We're always around, here and on IRC, if you need help to get things 
> better in-sync with Twisted "best practices".
> 
> Hep is a pretty interesting project, so it will likely attract this 
> kind of attention in the future as well.  We both have an interest in 
> seeing it more in-sync with the overall Twisted vibe, I think.

Agreed.  When I first started moving Hep to Twisted I hadn't yet come to
terms with the "framework, not a library" philosophy, and I didn't use
much beyond t.i.protocols.  But now I'm comfortable enough with Twisted
that I'm willing to make Hep a full-blown Twisted Application, and do
things the Twisted Way whenever possible.

That said, here are the areas that I know of where Hep doesn't do things
the Twisted way, and my thoughts on how to fix it.  Comments and
suggestions are welcome.

* The application: Hep should be a .tap-able twisted plugin.  At the
moment it's not.  This is assuming that it's possible to create a plugin
that combines multiple kinds of servers (http, pop3, imap, etc) into a
single application.  Also I believe that if I was using a twisted
Application object there would be some kind of official Twisted way to
share objects between my different servers.  It's been a while since I
read the plugin docs.  I'll do so soon.

* The web server: The current code is Hep CVS is an excellent example of
what happens when you write Twisted.web code without understanding how
Resources work.  Please refrain from commenting on just how bad it is - 
I started rewriting the web interface in Woven this weekend, so this
should be fixed soon :-)

* Users and authentication:  I have a vague idea that I should be using
Perspectives and/or Cred for authenticating users and accessing user
data.  Currently each server in Hep does the work of authentication and
setting up user access.  It would be nice to have this centralized, so
you could (for example) see which users are currently connected to Hep.

* The SMTP server: Currently going through a rewrite in CVS.  I need to
set up code to manage the outgoing message queue, and keep track of
which messages have been delivered to which locations.  Is there code in
twisted.mail to do this? (Keep in mind some messages are being delivered
to blogs and other non-SMTP locations)

I think that just about covers it... Thoughts?

Abe




From dalke at dalkescientific.com  Mon Jun  9 11:37:36 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 9 Jun 2003 11:37:36 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030609085545.GA11093@frobozz>
Message-ID: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>

Andrew Bennetts:
> These were fixed in CVS a couple of weeks ago -- but thanks anyway!
>

Any thoughts of either updating the online docs more frequently or
making a "development" section of the site, like what Python does?
(It has docs for the current release and docs for the most recent
CVS version.)

					Andrew
					dalke at dalkescientific.com




From m at moshez.org  Mon Jun  9 12:32:15 2003
From: m at moshez.org (Moshe Zadka)
Date: 9 Jun 2003 18:32:15 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big
 files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
References: <1055180156.11822.32.camel@mingus>, <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
Message-ID: <20030609183215.15716.qmail@green.zadka.com>

On 09 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> * The application: Hep should be a .tap-able twisted plugin.  At the
> moment it's not.  This is assuming that it's possible to create a plugin
> that combines multiple kinds of servers (http, pop3, imap, etc) into a
> single application.  Also I believe that if I was using a twisted
> Application object there would be some kind of official Twisted way to
> share objects between my different servers.  It's been a while since I
> read the plugin docs.  I'll do so soon.

The bottom line: it should be dead easy. I recommend also reading
the "application" document. Also, there's no documentation for
ApplicationService, but there are lots of time where ApplicationServices
are the correct way to share information between services. The source
(and the API reference) is the best documentation here. Of course,
as always, more documentation would be appreciated.
 
> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code in
> twisted.mail to do this? (Keep in mind some messages are being delivered
> to blogs and other non-SMTP locations)

twisted.mail is also going a rewrite, so I'd wait for Jp to comment.
Note that again, ApplicationService may be a nice thing here, especially
if it's data that you *could* recover from the messages themselves on
startup. Otherwise, it is better to look into some safer persistence
strategy such as dirdbm or world (although world is fairly unstable).

Bottom line: put configuration data in the Application, share configuration
between multiple servers via ApplicationServices, put non-critical data
in ApplicationServices and critical data in safer formats like databases.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From grib at billgribble.com  Mon Jun  9 14:01:05 2003
From: grib at billgribble.com (Bill Gribble)
Date: 09 Jun 2003 15:01:05 -0500
Subject: [Twisted-Python] 5 small patches
Message-ID: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>

Here are some small patches I have made while working with Twisted
recently.  They are all harmless with the possible exception of #4.

(1) gtk2 manhole problem.  I got backtraces upon connecting to a
    manholed app.  This fixes them. 

Index: twisted/manhole/ui/gtk2manhole.py
===================================================================
RCS file: /cvs/Twisted/twisted/manhole/ui/gtk2manhole.py,v
retrieving revision 1.7
diff -r1.7 gtk2manhole.py
245c245
<             if isinstance(content, StringTypes):
---
>             if isinstance(content, types.StringTypes):


(2) Found this while grepping for the source of the gtk2 manhole
    problem.  It's the same problem. 

Index: twisted/internet/app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.96
diff -r1.96 app.py
415c415
<             if isinstance(port, StringTypes):
---
>             if isinstance(port, types.StringTypes):

(3) Fix Woven's string escaping for generation of JavaScript to be
    evaluated in LivePages.  This is pretty important; things like 
    <textarea> and <pre> content were mangled by the old code. 

Index: twisted/web/woven/controller.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/controller.py,v
retrieving revision 1.60
diff -r1.60 controller.py
368,369d367
<             nodeXML = nodeXML.replace('\n', '')
<             nodeXML = nodeXML.replace('\r', '')
371a370,378
>             nodeXML = nodeXML.replace('"', '\\"')
>             nodeXML = nodeXML.replace('\n', '\\n')
>             nodeXML = nodeXML.replace('\r', ' ')
>             nodeXML = nodeXML.replace('\b', ' ')
>             nodeXML = nodeXML.replace('\t', ' ')
>             nodeXML = nodeXML.replace('\000', ' ')
>             nodeXML = nodeXML.replace('\v', ' ')
>             nodeXML = nodeXML.replace('\f', ' ')
>

(4) Patch to Woven's Guard for setting up sessions in LivePages.  I'm
    not 100% sure about this one, but it works for me.  I have attached
a 
    simple demonstration that fails under CVS but (I believe) should
work. 

Index: twisted/web/woven/guard.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/guard.py,v
retrieving revision 1.17
diff -r1.17 guard.py
209,210c209,211
<             request.getSession = lambda interface=None: None
<             return self.resource.getChildWithDefault(path, request)
---
>             #request.getSession = lambda interface=None: None
>             #return self.resource.getChildWithDefault(path, request)
>             return Redirect(request.pathRef().fullURL(request) +
INIT_SESSION)

(5) Add a "template=" keyword arg to LivePage constructor.  This is
patterned
    after the existing code in Page. 

Index: twisted/web/woven/page.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/page.py,v
retrieving revision 1.21
diff -r1.21 page.py
76,78c76,80
<     def __init__(self, m=None, templateFile=None, inputhandlers=None,
templateDirectory=None,
<                  controllers=None, *args, **kwargs):
<         model.Model.__init__(self, *args, **kwargs)
---
>     def __init__(self, m=None, templateFile=None, inputhandlers=None,
>                  templateDirectory=None, controllers=None, *args,
**kwargs):
>         template = kwargs.setdefault('template', None)
>         del kwargs['template']
>
82a85
>
88c91,93
<                            templateFile=templateFile,
templateDirectory=templateDirectory)
---
>                            templateFile=templateFile,
>                            templateDirectory=templateDirectory,
>                            template=template)
90a96
>



-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch-4-demo.tgz
Type: application/x-compressed-tar
Size: 436 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030609/fb0e832e/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030609/fb0e832e/attachment.sig>

From radix at twistedmatrix.com  Sat Jun  7 05:54:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 7 Jun 2003 07:54:10 -0400
Subject: [Twisted-Python] Twisted-webserver hangs when serving big files
In-Reply-To: <005701c32ce4$ae1b82b0$0401a8c0@razor>; from 2002@weholt.org on Sat, Jun 07, 2003 at 07:05:17 -0400
References: <005701c32ce4$ae1b82b0$0401a8c0@razor>
Message-ID: <20030607115410.GC27054@toshi.anaprd01.md.comcast.net>

On 2003.06.07 07:05, Thomas Weholt wrote:
> My code hangs when the request is for big files. Smaller ones like JPEGs
> etc. is ok, but for a test-file on approx. 33MB it just hangs and starts
> chewing up memory. The files are stored in a folder called wwwroot in the
> same folder as the source file. I'm using Twisted 1.0.5.

Why aren't you using the static.File resource? Subclassing Request is the 
wrong (and a *horrible*) way to write custom web code, to say nothing about
the fact that you're reimplementing what twisted already supports (non-blocking
file transfer support in twisted.web.static.File).

Anyway, the reason that this code is broken is probably because it repeatedly
does blocking reads until the entire file is read. 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From jml at ids.org.au  Tue Jun 10 03:42:06 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Tue, 10 Jun 2003 19:42:06 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030609085545.GA11093@frobozz> <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030610094206.GC24830@mumak.net>

On Mon, Jun 09, 2003 at 11:37:36AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >These were fixed in CVS a couple of weeks ago -- but thanks anyway!
> >
> 
> Any thoughts of either updating the online docs more frequently or
> making a "development" section of the site, like what Python does?

I think it's an excellent idea to have the CVS docs available on the
website. (i.e. outside of viewcvs)

Generating them on commit might be a problem, as the API doc creation
process is quite resource-consuming.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030610/30506467/attachment.sig>

From cliechti at gmx.net  Mon Jun  9 17:49:33 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Tue, 10 Jun 2003 01:49:33 +0200
Subject: [Twisted-Python] comments about twisted.trial.unittest
Message-ID: <3EE51D0D.8080007@gmx.net>

you claim compatibility with pythons unittest from the stdlib, hm... i 
see some differences ;-)

i like to have a

if __name__ == '__main__':
     unittest.main()

in my test_*.py files, this does not work with twisteds unittest.
i have to use the following snippet:

if __name__ == '__main__':
     import sys
     from twisted.scripts import trial
     sys.argv.extend(['-f', sys.argv[0]])
     trial.run()

sugestion, why not adding the following func (or something better, that 
does not fiddle with sys.argv) to twisted.trial.unittest?

def main():
     import sys
     from twisted.scripts import trial
     sys.argv.extend(['-f', sys.argv[0]])
     trial.run()

also i like to run my tests with "-v" (verbose) but unfortunately does 
twisted output garbage in that case.. (i know, it's ANSI colors but i'm 
on Win32... :-(
either you should check for the terminal capabilities (however that 
works on win32...) or maybe check sys.platform (altough that's bad for 
portability) or easier, exchange the meanings of '-o' and '-v', making 
the bwoutput default for "-v" and use an other option for the nice 
colored output.

chris




From exarkun at intarweb.us  Mon Jun  9 18:10:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 9 Jun 2003 20:10:21 -0400
Subject: [Twisted-Python] 5 small patches
In-Reply-To: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>
References: <1055188865.2078.2.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030610001021.GA29128@meson.dyndns.org>

On Mon, Jun 09, 2003 at 03:01:05PM -0500, Bill Gribble wrote:
> Here are some small patches I have made while working with Twisted
> recently.  They are all harmless with the possible exception of #4.
> 
> (1) gtk2 manhole problem.  I got backtraces upon connecting to a
>     manholed app.  This fixes them. 
> 
> (2) Found this while grepping for the source of the gtk2 manhole
>     problem.  It's the same problem. 
> 

  Thanks, these two fixes are now in CVS.

  Jp

-- 
No, `Eureka' is Greek for `This bath is too hot.'
                -- Dr. Who
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030609/0da613b9/attachment.sig>

From andrew-twisted at puzzling.org  Mon Jun  9 18:47:28 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 10:47:28 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
References: <20030609085545.GA11093@frobozz> <0EF8812C-9AA1-11D7-B9B9-000393C92466@dalkescientific.com>
Message-ID: <20030610004728.GB14842@frobozz>

On Mon, Jun 09, 2003 at 11:37:36AM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >These were fixed in CVS a couple of weeks ago -- but thanks anyway!
> 
> Any thoughts of either updating the online docs more frequently or
> making a "development" section of the site, like what Python does?
> (It has docs for the current release and docs for the most recent
> CVS version.)

I agree; this is an excellent idea.  Far too often we've said "but the docs
in the next release will be much better, so get CVS or wait for 1.0.xx"...

I think it would be too much effort to update the API docs automatically;
epydoc takes something like an hour to process all of Twisted (although
potentially this could be done nightly?).  I'd be happy to just see a
twistedmatrix.com/documents/dev/howto, mirroring the way python.org does it.

Who is the right person to pester to get this set up?  :)

-Andrew.




From glyph at twistedmatrix.com  Mon Jun  9 18:56:20 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jun 2003 20:56:20 -0400
Subject: [Twisted-Python] typos
In-Reply-To: <20030610004728.GB14842@frobozz>
Message-ID: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Monday, June 9, 2003, at 08:47 PM, Andrew Bennetts wrote:

> I agree; this is an excellent idea.  Far too often we've said "but the 
> docs
> in the next release will be much better, so get CVS or wait for 
> 1.0.xx"...

I disagree.  We say this about functionality as well, and CVS docs 
should have parity with CVS code, not released code.  (In other words - 
if you want CVS docs, download CVS code.)  The real problem is that we 
don't release often enough - we should be fixing that, not applying 
band-aids.

> I think it would be too much effort to update the API docs 
> automatically;

I do agree here.  This creates useless friction.  We should probably 
have another pass at automating release-oriented tasks, or at least 
documenting the procedure better.  doc/howto/release looks pretty dusty.




From glyph at twistedmatrix.com  Mon Jun  9 19:07:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jun 2003 21:07:39 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
Message-ID: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Monday, June 9, 2003, at 01:35 PM, Abe Fettig wrote:

> Agreed.  When I first started moving Hep to Twisted I hadn't yet come 
> to
> terms with the "framework, not a library" philosophy, and I didn't use
> much beyond t.i.protocols.  But now I'm comfortable enough with Twisted
> that I'm willing to make Hep a full-blown Twisted Application, and do
> things the Twisted Way whenever possible.

Great to hear it!

> That said, here are the areas that I know of where Hep doesn't do 
> things
> the Twisted way, and my thoughts on how to fix it.  Comments and
> suggestions are welcome.

I'll try to give you a brief survey.

> * The application: Hep should be a .tap-able twisted plugin.

As Moshe says, this should be super-easy.  Not much more to say here.

> * The web server: The current code is Hep CVS is an excellent example 
> of
> what happens when you write Twisted.web code without understanding how
> Resources work.

Yup.  That seems to be the case.

> Please refrain from commenting on just how bad it is -

Sorry, couldn't resist.

OMG IT IS SO BAD LOLOLOLOL

> I started rewriting the web interface in Woven this weekend, so this
> should be fixed soon :-)

Cool.  Much as it's improved, Woven needs more deployments to help it 
with polish :-)

> * Users and authentication:  I have a vague idea that I should be using
> Perspectives and/or Cred for authenticating users and accessing user
> data.  Currently each server in Hep does the work of authentication and
> setting up user access.  It would be nice to have this centralized, so
> you could (for example) see which users are currently connected to Hep.

Itamar and my aforementioned rewrite will help you with this.  Stall 
this a few weeks, and there should be good documentation on how to do 
it.

> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code 
> in
> twisted.mail to do this? (Keep in mind some messages are being 
> delivered
> to blogs and other non-SMTP locations)

I need to rewrite twisted.words to accomodate use-cases like this at 
some point; however, it keeps falling off the end of my queue.  It 
certainly wouldn't be a good idea to wait for me to come up with that, 
but in a few months we should re-group and see if we can refactor the 
code that we've both written into some generally useful core 
abstraction.

> I think that just about covers it... Thoughts?

Sounds like a good laundry list.  I would be interested to know where 
and if you hit any snags, even if you get past them on your own - I'd 
love to see a paper or something about this.  It would really be nice 
to show to other application authors who are struggling with the same 
sort of issues.  I even have a tentative title - "Submitting to the 
hive mind for fun and profit - making your project Twisted-friendly 
even though you don't want to".  What do you think? :)




From andrep at flow.com.au  Mon Jun  9 21:29:28 2003
From: andrep at flow.com.au (Andre Perry)
Date: 10 Jun 2003 13:29:28 +1000
Subject: [Twisted-Python] mktap searchpath
Message-ID: <1055215768.6094.7.camel@laptop.lanvise.com>

When calling mktap with a twisted dir in the current directory the real
twisted dir is not searched for plugins.tml.  The twisted dir in the
current directory does not contain a plugins.tml file.

Is this the desired behaviour or a bug?

$ pwd ; mktap -d
/home/splack
Debug:  Looking for plugin.tml files
Debug:  Looking for plugin.tml files
Debug:  Recursing through /home/splack
['bin', 'Mail', 'work', 'twisted', 'xml-rpc-todo', 'evolution',
'zzexpensce', 'ldap-restore']
Debug:  Failed /home/splack/bin/plugins.tml
Debug:  Failed /home/splack/Mail/plugins.tml
Debug:  Failed /home/splack/work/plugins.tml
Debug:  Failed /home/splack/twisted/plugins.tml
Debug:  Failed /home/splack/xml-rpc-todo/plugins.tml
Debug:  Failed /home/splack/evolution/plugins.tml
Debug:  Failed /home/splack/zzexpensce/plugins.tml
Debug:  Failed /home/splack/ldap-restore/plugins.tml
Debug:  Recursing through /usr/lib/python2.2
['xml', 'test', 'lib-dynload', 'email', 'distutils', 'lib-old',
'encodings', 'config', 'curses', 'compiler', 'lib-tk', 'site-packages',
'plat-linux2', 'hotshot']
Debug:  Failed /usr/lib/python2.2/xml/plugins.tml
Debug:  Failed /usr/lib/python2.2/test/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-dynload/plugins.tml
Debug:  Failed /usr/lib/python2.2/email/plugins.tml
Debug:  Failed /usr/lib/python2.2/distutils/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-old/plugins.tml
Debug:  Failed /usr/lib/python2.2/encodings/plugins.tml
Debug:  Failed /usr/lib/python2.2/config/plugins.tml
Debug:  Failed /usr/lib/python2.2/curses/plugins.tml
Debug:  Failed /usr/lib/python2.2/compiler/plugins.tml
Debug:  Failed /usr/lib/python2.2/lib-tk/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/plugins.tml
Debug:  Failed /usr/lib/python2.2/plat-linux2/plugins.tml
Debug:  Failed /usr/lib/python2.2/hotshot/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/plat-linux2
['regen']
Debug:  Failed /usr/lib/python2.2/plat-linux2/regen/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/lib-tk
Debug:  Recursing through /usr/lib/python2.2/lib-dynload
Debug:  Recursing through /usr/local/lib/python2.2/site-packages
['gstreamer']
Debug:  Failed
/usr/local/lib/python2.2/site-packages/gstreamer/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/site-packages
['PIL', 'ZSI', 'ogg', 'TMDA', 'ldap', 'Crypto', 'optik', 'README',
'ldaptor', '_xmlplus', 'offlineimap', 'wxPython', 'epydoc', 'twisted',
'Gnuplot']
Debug:  Failed /usr/lib/python2.2/site-packages/PIL/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ZSI/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ogg/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/TMDA/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ldap/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/Crypto/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/optik/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/README/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/ldaptor/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/_xmlplus/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/offlineimap/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/wxPython/plugins.tml
Debug:  Failed /usr/lib/python2.2/site-packages/epydoc/plugins.tml
Debug:  Seen twisted already
Debug:  Failed /usr/lib/python2.2/site-packages/Gnuplot/plugins.tml
Debug:  Recursing through /usr/lib/python2.2/site-packages/gtk-1.2
['pyglade', 'gnome']
Debug:  Failed
/usr/lib/python2.2/site-packages/gtk-1.2/pyglade/plugins.tml
Debug:  Failed
/usr/lib/python2.2/site-packages/gtk-1.2/gnome/plugins.tml
Debug:  Recursing through /usr/lib/site-python
Couldn't load the plugins file!







From jml at ids.org.au  Tue Jun 10 09:17:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Wed, 11 Jun 2003 01:17:17 +1000
Subject: [Twisted-Python] Suggestion: Test Drive
Message-ID: <20030610151717.GD24830@mumak.net>


A suggestion in response to the ever-present demand for more tests.

I've heard rumours that other open-source applications often have bug-fixing
initiatives, or similar, where lots of people are encouraged to fix as many
bugs as possible over a short period of time (a weekend or something).

Perhaps we could do the same, but with tests instead? Have a weekend where
people write as many tests as possible. 

It's a thought anyway. I'll probably do something like this individually
regardless of community concensus.

[it'll give us an opportunity to work out that todo feature, too ;-)]

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030611/7822cfa2/attachment.sig>

From andrew-twisted at puzzling.org  Mon Jun  9 22:07:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 14:07:13 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <20030610004728.GB14842@frobozz> <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <20030610040713.GD14842@frobozz>

On Mon, Jun 09, 2003 at 08:56:20PM -0400, Glyph Lefkowitz wrote:
> 
> On Monday, June 9, 2003, at 08:47 PM, Andrew Bennetts wrote:
> 
> >I agree; this is an excellent idea.  Far too often we've said "but the
> >docs in the next release will be much better, so get CVS or wait for
> >1.0.xx"...
> 
> I disagree.  We say this about functionality as well, and CVS docs 
> should have parity with CVS code, not released code.  (In other words - 
> if you want CVS docs, download CVS code.)  The real problem is that we 
> don't release often enough - we should be fixing that, not applying 
> band-aids.

I'll happily settle for more frequent releases :)

-Andrew.




From exarkun at intarweb.us  Mon Jun  9 23:15:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 10 Jun 2003 01:15:54 -0400
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <1055215768.6094.7.camel@laptop.lanvise.com>
References: <1055215768.6094.7.camel@laptop.lanvise.com>
Message-ID: <20030610051554.GA29706@meson.dyndns.org>

On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> When calling mktap with a twisted dir in the current directory the real
> twisted dir is not searched for plugins.tml.  The twisted dir in the
> current directory does not contain a plugins.tml file.
> 
> Is this the desired behaviour or a bug?

  This is the desired behavior.  You cannot have them both searched, or you
will end up with doubly registered plugins, each of which refer to whatever
modules come first in the python import search path -- which means we should
pick up the information from whichever plugins.tml file we find first too,
and ignore anything found later.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030610/3046994a/attachment.sig>

From dalke at dalkescientific.com  Mon Jun  9 23:43:05 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Mon, 9 Jun 2003 23:43:05 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>

Glyph:
> I disagree.  We say this about functionality as well, and CVS docs 
> should have parity with CVS code, not released code.  (In other words 
> - if you want CVS docs, download CVS code.)  The real problem is that 
> we don't release often enough - we should be fixing that, not applying 
> band-aids.

My main development platform is Python 2.3, and has been since the 
beginning of the
year.  I've helped find several Python problems this way.  But I use 
the on-line docs
for Python, and not the local copy - even though I have a copy of all 
the docs from
CVS.

Others said the doc build takes an hour.  I would rather not learn how 
to do that
myself, if for no other reason then that after I do a CVS update I 
don't want to
wait an hour to read the new docs.

I can't see that a cron job, run once every day or so, can be that 
hard.  If it is
hard, then it means building the docs is too hard, and yet that's 
something you
want me to do myself as a Twisted novice?

					Andrew
					dalke at dalkescientific.com




From abe at fettig.net  Mon Jun  9 23:54:43 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 01:54:43 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030609183215.15716.qmail@green.zadka.com>
References: <1055180156.11822.32.camel@mingus>
	 , <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <20030609183215.15716.qmail@green.zadka.com>
Message-ID: <1055224483.13587.21.camel@mingus>

On Mon, 2003-06-09 at 14:32, Moshe Zadka wrote:
> On 09 Jun 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > * The application: Hep should be a .tap-able twisted plugin.  At the
> > moment it's not.  This is assuming that it's possible to create a plugin
> > that combines multiple kinds of servers (http, pop3, imap, etc) into a
> > single application.  Also I believe that if I was using a twisted
> > Application object there would be some kind of official Twisted way to
> > share objects between my different servers.  It's been a while since I
> > read the plugin docs.  I'll do so soon.
> 
> The bottom line: it should be dead easy. I recommend also reading
> the "application" document. Also, there's no documentation for
> ApplicationService, but there are lots of time where ApplicationServices
> are the correct way to share information between services. The source
> (and the API reference) is the best documentation here. Of course,
> as always, more documentation would be appreciated.

I just spent some time looking playing with t.i.app. If I understand it
correctly, you run a bunch of services, each of which provides certain
functionality, and all of the services get registered with the
application.  So each service can access any of the other services like
so:

otherService = self.serviceParent.getServiceByName('otherService')

This is a really natural fit for Hep and looks easy as pie to
implement.  One question, though.  Say I run a server by creating a
Factory and running application.listenTCP(myFactory, port).  What's the
preferred way to access services from inside that Factory?

> twisted.mail is also going a rewrite, so I'd wait for Jp to comment.

Ok, I'll wait for Jp :)

> Note that again, ApplicationService may be a nice thing here, especially
> if it's data that you *could* recover from the messages themselves on
> startup. Otherwise, it is better to look into some safer persistence
> strategy such as dirdbm or world (although world is fairly unstable).
> 
> Bottom line: put configuration data in the Application, share configuration
> between multiple servers via ApplicationServices, put non-critical data
> in ApplicationServices and critical data in safer formats like databases.

The only variable that I think I'd want to maintain in the Application
is the location of it's data directory.  That way when the app starts it
knows where to look to find messages, user prefs, etc, and I can ditch
the hep.ini file.

Abe




From andrew-twisted at puzzling.org  Mon Jun  9 23:56:44 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 15:56:44 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
References: <59B7E5F6-9ADE-11D7-8D1D-000393C9700E@twistedmatrix.com> <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610055644.GE14842@frobozz>

On Mon, Jun 09, 2003 at 11:43:05PM -0600, Andrew Dalke wrote:
> 
> Others said the doc build takes an hour.  I would rather not learn how to
> do that myself, if for no other reason then that after I do a CVS update I
> don't want to wait an hour to read the new docs.

The API doc build takes an hour; that's the heavily cross-linked docs
autogenerated from our docstrings that you can browse at
    http://twistedmatrix.com/documents/TwistedDocs/current/api/

If you're using CVS, you may as well just read the code directly rather than
use the API docs.

The "Howto" documents can be built quite quickly using admin/process-docs,
but this script does assume you have a latex and things installed for the PS
and PDF generation.

To just build the HTML docs from Lore source (which is generally fairly
readable in a web browser anyway), do:

    lore --config template=doc/howto/template.tpl \
         --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/public/%s.html \
         -l ../howto/ doc/howto/*.html

(You can omit the baseurl part if you don't mind the links to the API docs
being broken.)

Building just the HTML docs should only take about a minute.

-Andrew.




From itamar at itamarst.org  Mon Jun  9 23:55:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 01:55:03 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
 when serving big files)
In-Reply-To: <1055224483.13587.21.camel@mingus>
References: <1055180156.11822.32.camel@mingus>
	<6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	<20030609183215.15716.qmail@green.zadka.com>
	<1055224483.13587.21.camel@mingus>
Message-ID: <20030610015503.646ce8d3.itamar@itamarst.org>

On 10 Jun 2003 01:54:43 -0400
Abe Fettig <abe at fettig.net> wrote:

> This is a really natural fit for Hep and looks easy as pie to
> implement.  One question, though.  Say I run a server by creating a
> Factory and running application.listenTCP(myFactory, port).  What's
> the preferred way to access services from inside that Factory?

Pass a reference to the service when creating factory? Or even, have
service manage the factory, calling reactor.listenTCP in its
startService.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Jun 10 00:07:26 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:07:26 +1000
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610051554.GA29706@meson.dyndns.org>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org>
Message-ID: <20030610060726.GF14842@frobozz>

On Tue, Jun 10, 2003 at 01:15:54AM -0400, Jp Calderone wrote:
> On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> > When calling mktap with a twisted dir in the current directory the real
> > twisted dir is not searched for plugins.tml.  The twisted dir in the
> > current directory does not contain a plugins.tml file.
> > 
> > Is this the desired behaviour or a bug?
> 
>   This is the desired behavior.  You cannot have them both searched, or you
> will end up with doubly registered plugins, each of which refer to whatever
> modules come first in the python import search path -- which means we should
> pick up the information from whichever plugins.tml file we find first too,
> and ignore anything found later.

You're assuming his ~/twisted directory contains the Twisted source, rather
than just being a directory with random stuff in it.  If that directory
contained a __init__.py file, then it would be a Python package and
presumably Python would then be unable to import the real Twisted, so that's
not a problem with mktap.  But if the directory *doesn't* contain
__init__.py, then there's no ambiguity in Python's import search path, but
mktap still will check ~/twisted for plugins.tml, but not
os.path.basename(twisted.__file__).

So mktap will treat the search path differently to Python's import
mechanisms, at least in the case where a directory has a name that conflicts
with a later python package, but doesn't have an __init__.py.

This smells like a bug to me, but I could be wrong.

-Andrew.




From abe at fettig.net  Tue Jun 10 00:18:07 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 02:18:07 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <1055225886.13586.42.camel@mingus>

On Mon, 2003-06-09 at 21:07, Glyph Lefkowitz wrote:
> On Monday, June 9, 2003, at 01:35 PM, Abe Fettig wrote:
> > * The web server: The current code is Hep CVS is an excellent example 
> > of
> > what happens when you write Twisted.web code without understanding how
> > Resources work.
> 
> Yup.  That seems to be the case.
> 
> > Please refrain from commenting on just how bad it is -
> 
> Sorry, couldn't resist.
> 
> OMG IT IS SO BAD LOLOLOLOL

Actually it feels good to get that out of the way... :)

> > * Users and authentication:  I have a vague idea that I should be using
> > Perspectives and/or Cred for authenticating users and accessing user
> > data.  Currently each server in Hep does the work of authentication and
> > setting up user access.  It would be nice to have this centralized, so
> > you could (for example) see which users are currently connected to Hep.
> 
> Itamar and my aforementioned rewrite will help you with this.  Stall 
> this a few weeks, and there should be good documentation on how to do 
> it.

OK, I'll leave the authentication stuff as-is for now, besides maybe
putting it into a simple service.

> Sounds like a good laundry list.  I would be interested to know where 
> and if you hit any snags, even if you get past them on your own - I'd 
> love to see a paper or something about this.  It would really be nice 
> to show to other application authors who are struggling with the same 
> sort of issues.  I even have a tentative title - "Submitting to the 
> hive mind for fun and profit - making your project Twisted-friendly 
> even though you don't want to".  What do you think? :)

That sounds like an excellent idea.  I'll try to post frequently to my
weblog throughout this process, in hopes it will be useful to others
down the road.

Abe




From exarkun at intarweb.us  Tue Jun 10 00:25:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 10 Jun 2003 02:25:05 -0400
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610060726.GF14842@frobozz>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org> <20030610060726.GF14842@frobozz>
Message-ID: <20030610062505.GA30045@meson.dyndns.org>

On Tue, Jun 10, 2003 at 04:07:26PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 10, 2003 at 01:15:54AM -0400, Jp Calderone wrote:
> > On Tue, Jun 10, 2003 at 01:29:28PM +1000, Andre Perry wrote:
> > > When calling mktap with a twisted dir in the current directory the real
> > > twisted dir is not searched for plugins.tml.  The twisted dir in the
> > > current directory does not contain a plugins.tml file.
> > > 
> > > Is this the desired behaviour or a bug?
> > 
> >   This is the desired behavior.  You cannot have them both searched, or you
> > will end up with doubly registered plugins, each of which refer to whatever
> > modules come first in the python import search path -- which means we should
> > pick up the information from whichever plugins.tml file we find first too,
> > and ignore anything found later.
> 
> You're assuming his ~/twisted directory contains the Twisted source, rather
> than just being a directory with random stuff in it.  If that directory
> contained a __init__.py file, then it would be a Python package and
> presumably Python would then be unable to import the real Twisted, so that's
> not a problem with mktap.  But if the directory *doesn't* contain
> __init__.py, then there's no ambiguity in Python's import search path, but
> mktap still will check ~/twisted for plugins.tml, but not
> os.path.basename(twisted.__file__).
> 
> So mktap will treat the search path differently to Python's import
> mechanisms, at least in the case where a directory has a name that conflicts
> with a later python package, but doesn't have an __init__.py.
> 
> This smells like a bug to me, but I could be wrong.
> 

  Close -- the directory won't be added to the seen-directory-cache unless
it also contains a file named "plugins.tml".  It is true that it is added to
this cache even if it does not contain __init__.py.  This is to keep it from
taking one hundred million years to run (if it checked to see if it was a
package in Python's eyes, it would need to do between 1 and 6 extra
os.path.exists() calls: utterly unacceptable in terms of performance).

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030610/727e5f57/attachment.sig>

From andrew-twisted at puzzling.org  Tue Jun 10 00:37:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:37:03 +1000
Subject: [Twisted-Python] mktap searchpath
In-Reply-To: <20030610062505.GA30045@meson.dyndns.org>
References: <1055215768.6094.7.camel@laptop.lanvise.com> <20030610051554.GA29706@meson.dyndns.org> <20030610060726.GF14842@frobozz> <20030610062505.GA30045@meson.dyndns.org>
Message-ID: <20030610063703.GG14842@frobozz>

On Tue, Jun 10, 2003 at 02:25:05AM -0400, Jp Calderone wrote:
> On Tue, Jun 10, 2003 at 04:07:26PM +1000, Andrew Bennetts wrote:
> > 
> > So mktap will treat the search path differently to Python's import
> > mechanisms, at least in the case where a directory has a name that conflicts
> > with a later python package, but doesn't have an __init__.py.
> > 
> > This smells like a bug to me, but I could be wrong.
> 
>   Close -- the directory won't be added to the seen-directory-cache unless
> it also contains a file named "plugins.tml".  It is true that it is added to

But the ~/twisted directory didn't contain a plugins.tml -- from Andre's
mktap output:

    Debug:  Failed /home/splack/twisted/plugins.tml

-Andrew.




From m at moshez.org  Tue Jun 10 00:41:00 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:41:00 -0000
Subject: [Twisted-Python] typos
References: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610064100.25604.qmail@green.zadka.com>

On Mon, 9 Jun 2003, Andrew Dalke <dalke at dalkescientific.com> wrote:

> Others said the doc build takes an hour.

It shouldn't, on a sane machine. It takes about several minutes.
Of course, you only need to rebuild the docs when you want to,
not after every CVS update.

> I would rather not learn how to do that
> myself

I won't give you that option.
% ./admin/process-docs

There, now you learned how to do it yourself, whether you wanted
to or not.

> if for no other reason then that after I do a CVS update I 
> don't want to wait an hour to read the new docs.

It's several minutes. Please don't spread FUD.

> I can't see that a cron job, run once every day or so, can be that 
> hard.

Why can't you run that cronjob on your CVS updated copy every day
or so?

> If it is  hard, then it means building the docs is too hard, and yet that's 
> something you
> want me to do myself as a Twisted novice?

It's not hard. It's just that the only people who want to read docs about
CVS will need to have a checkout anyway, and those people can easily
run ./admin/process-docs.
This script was specifically written (and taken outside release-twisted)
so we can easily build docs ourself.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Tue Jun 10 00:48:09 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:48:09 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <1055224483.13587.21.camel@mingus>
References: <1055224483.13587.21.camel@mingus>, <1055180156.11822.32.camel@mingus>
	 , <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <20030609183215.15716.qmail@green.zadka.com>
Message-ID: <20030610064809.25662.qmail@green.zadka.com>

On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> This is a really natural fit for Hep and looks easy as pie to
> implement.  One question, though.  Say I run a server by creating a
> Factory and running application.listenTCP(myFactory, port).  What's the
> preferred way to access services from inside that Factory?

When the service creates the factory, it can set a .service on the
factory. 

class FooService(app.ApplicationService):

    def makeFactory(self):
        f = protocol.Factory()
        f.service = self
        return f

service = FooService()
application.listenTCP(1000, service.makeFactory())

> The only variable that I think I'd want to maintain in the Application
> is the location of it's data directory.  That way when the app starts it
> knows where to look to find messages, user prefs, etc, and I can ditch
> the hep.ini file.

That's good.
In fact, .ini files should die, in favour of a service holding that
information. Then, it's easy to configure HEP either via mktap hep,
or manually

% cat hep.tpy
from twisted.internet import app
from hep import service

application = app.Application("HEP")
s = service.HEPService(datadir="blah/blah")
application.listenTCP(25, s.makeMailFactory())
application.listenTCP(80, s.makeWebFactory())
% twistd -y hep.tpy

[This is written to an assumed HEP API, which probably has nothing
currently to do with the HEP API, and possibly is not the correct
way at all...this is just to give you an idea of what kind of flexibility
is easily available, once you drink the kool-aid]

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Tue Jun 10 00:50:36 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 06:50:36 -0000
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <1055225886.13586.42.camel@mingus>
References: <1055225886.13586.42.camel@mingus>, <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <20030610065036.25709.qmail@green.zadka.com>

On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> That sounds like an excellent idea.  I'll try to post frequently to my
> weblog throughout this process, in hopes it will be useful to others
> down the road.

For those of us watching from home: where is your blog? 
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Tue Jun 10 00:51:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Jun 2003 16:51:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <20030610064100.25604.qmail@green.zadka.com>
References: <688D94F4-9B06-11D7-90DD-000393C92466@dalkescientific.com> <20030610064100.25604.qmail@green.zadka.com>
Message-ID: <20030610065145.GH14842@frobozz>

On Tue, Jun 10, 2003 at 06:41:00AM -0000, Moshe Zadka wrote:
> On Mon, 9 Jun 2003, Andrew Dalke <dalke at dalkescientific.com> wrote:
[...snip...]
> > if for no other reason then that after I do a CVS update I 
> > don't want to wait an hour to read the new docs.
> 
> It's several minutes. Please don't spread FUD.

Moshe, I'm not sure if he means that he wants to use the generated API docs
from epydoc (in which case he is correct), or if he didn't realise the
Howtos were independent of that timeframe (in which case I'm sure that's an
honest mistake).

Either way, crying "FUD" seems a little unfair.

-Andrew.




From abe at fettig.net  Tue Jun 10 00:58:31 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 02:58:31 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030610065036.25709.qmail@green.zadka.com>
References: <1055225886.13586.42.camel@mingus>
	 , <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
	 <20030610065036.25709.qmail@green.zadka.com>
Message-ID: <1055228311.13586.44.camel@mingus>

On Tue, 2003-06-10 at 02:50, Moshe Zadka wrote:
> On 10 Jun 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > That sounds like an excellent idea.  I'll try to post frequently to my
> > weblog throughout this process, in hopes it will be useful to others
> > down the road.
> 
> For those of us watching from home: where is your blog? 

http://www.fettig.net

-Abe 




From cce at clarkevans.com  Tue Jun 10 03:05:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 10 Jun 2003 09:05:15 +0000
Subject: [Twisted-Python] Suggestion: Test Drive
In-Reply-To: <20030610151717.GD24830@mumak.net>
References: <20030610151717.GD24830@mumak.net>
Message-ID: <20030610090515.GA11747@doublegemini.com>

You may want to look at FIT, by Brian Ingerson.  He has basically
setup a Wiki to drive unit testing...

  http://fit.freepan.org/

Best,

Clark

On Wed, Jun 11, 2003 at 01:17:17AM +1000, jml at ids.org.au wrote:
| 
| A suggestion in response to the ever-present demand for more tests.
| 
| I've heard rumours that other open-source applications often have bug-fixing
| initiatives, or similar, where lots of people are encouraged to fix as many
| bugs as possible over a short period of time (a weekend or something).
| 
| Perhaps we could do the same, but with tests instead? Have a weekend where
| people write as many tests as possible. 
| 
| It's a thought anyway. I'll probably do something like this individually
| regardless of community concensus.
| 
| [it'll give us an opportunity to work out that todo feature, too ;-)]
| 
| cheers,
| jml





From cce at clarkevans.com  Tue Jun 10 03:21:45 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 10 Jun 2003 09:21:45 +0000
Subject: [Twisted-Python] signaling failure to IConsumer
Message-ID: <20030610092145.GB11747@doublegemini.com>

In the process of linking the flow module with IConsumer/IProducer,
I happened to lack any way for the producer to signal to the 
consumer that it had an exception and is now inactive.  A simple
'fail()' method should be added to IConsumer so that the receiver
of a data flow can have some resonable way of knowing the sender
has failed.  Without further ado,

--- interfaces.py.orig	Tue Jun 10 04:49:24 2003
+++ interfaces.py	Tue Jun 10 04:50:23 2003
@@ -682,6 +682,9 @@
     def write(self, data):
         """The producer will write data by calling this method."""
 
+    def fail(self, failure):
+        """The producer created an exception and has since died horribly."""
+
 class IFinishableConsumer(IConsumer):
     """A Consumer for producers that finish.





From justinjohnson at fastmail.fm  Tue Jun 10 08:10:50 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 08:10:50 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610151717.GD24830@mumak.net>
References: <20030610151717.GD24830@mumak.net>
Message-ID: <20030610141050.6DAB632BC3@www.fastmail.fm>

I have an xmlrpc service inheriting from xmlrpc.XMLRPC.  I override
render to allow for basic authentication as show below.  This all works,
except that I don't know what to call to send response 401 back to the
client.  self.send_response(401) is how I would do it with the
SimpleXMLRPCServer, but obviously doesn't work with the twisted xmlrpc
server.  Can someone point me in the right direction on this?

Thanks much.
-Justin

P.S. - Moshe, I figured out everything else I asked you on the
python-list about this.  Just need to know how to send response 401 now. 
Before I wasn't seeing the header, because request.headers doesn't
contain all headers.  Had to use request.getAllHeaders().


	def render(self, request):
		headers = request.getAllHeaders()
		if headers.has_key("authorization"):
			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
			auth = headers["authorization"]
			auth = auth.replace("Basic ","")
			decoded_auth = decodestring(auth)
			if decoded_auth == real_auth:
				return xmlrpc.XMLRPC.render(self, request)
		else:
			self.send_response(401)
			self.end_headers()




From justinjohnson at fastmail.fm  Tue Jun 10 08:50:40 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 08:50:40 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610141050.6DAB632BC3@www.fastmail.fm>
References: <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610145040.D0FB91DE2F@www.fastmail.fm>

I tried the following and it seemed to work.  Can someone let me know if
this is the correct way to do this in twisted?

	def render(self, request):
		headers = request.getAllHeaders()
		if headers.has_key("authorization"):
			log("User has authorization key: " + headers["authorization"])
			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
			auth = headers["authorization"]
			auth = auth.replace("Basic ","")
			decoded_auth = decodestring(auth)
			if decoded_auth == real_auth:
				request.setResponseCode(http.FOUND)
				return xmlrpc.XMLRPC.render(self, request)
		else:
			log("User not authorized")
			request.setResponseCode(http.UNAUTHORIZED)

On Tue, 10 Jun 2003 08:10:50 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> I have an xmlrpc service inheriting from xmlrpc.XMLRPC.  I override
> render to allow for basic authentication as show below.  This all works,
> except that I don't know what to call to send response 401 back to the
> client.  self.send_response(401) is how I would do it with the
> SimpleXMLRPCServer, but obviously doesn't work with the twisted xmlrpc
> server.  Can someone point me in the right direction on this?
> 
> Thanks much.
> -Justin
> 
> P.S. - Moshe, I figured out everything else I asked you on the
> python-list about this.  Just need to know how to send response 401 now. 
> Before I wasn't seeing the header, because request.headers doesn't
> contain all headers.  Had to use request.getAllHeaders().
> 
> 
> 	def render(self, request):
> 		headers = request.getAllHeaders()
> 		if headers.has_key("authorization"):
> 			real_auth = '%s:%s' % (config.adminUser, config.adminPassword)
> 			auth = headers["authorization"]
> 			auth = auth.replace("Basic ","")
> 			decoded_auth = decodestring(auth)
> 			if decoded_auth == real_auth:
> 				return xmlrpc.XMLRPC.render(self, request)
> 		else:
> 			self.send_response(401)
> 			self.end_headers()
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From m at moshez.org  Tue Jun 10 09:55:01 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 15:55:01 -0000
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610145040.D0FB91DE2F@www.fastmail.fm>
References: <20030610145040.D0FB91DE2F@www.fastmail.fm>, <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610155501.5751.qmail@green.zadka.com>

On Tue, 10 Jun 2003, "Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> 	def render(self, request):
...
> 		if headers.has_key("authorization"):
...
> 		else:
> 			log("User not authorized")
> 			request.setResponseCode(http.UNAUTHORIZED)
You want to add
                        return ''
Or maybe return '<html>nice error message</html>'

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From pobrien at orbtech.com  Tue Jun 10 11:02:35 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: 10 Jun 2003 12:02:35 -0500
Subject: [Twisted-Python] Organizing a Woven app
Message-ID: <m2ptllg91w.fsf@orbtech.com>

I'm starting a fairly large Woven application and I'm wondering if
anyone else has a directory structure and module organization approach
that works well with Woven.

As an experiment, we created a small application with the following
approach.  We created directories named model, page, and template.
Each directory holds a file that corresponds to the url in the
interface.  For example, lets say we display a list of customers at

  http://1.2.3.4/customer

Our page directory would have a customer.py file containing a Page
subclass pointing to a "customer.html" template located in our
template directory.  Data for the page comes from the customer.py file
in our model directory.  This worked, but just doesn't seem ideal.

I'm just not sure that this approach is going to scale well, or if the
way we're dividing up modules and directories is the best approach to
take for a large Woven application.  I think we might be splitting
things up too much.  I noticed that the twisted.issues project takes a
different approach, storing all models in models.py, all pages in
pages.py, and all views/widgets in widgets.py.

Rather than find out later we took a bad approach, I'd love to hear
from anyone who is farther along than we are.  It's hard enough to
figure out Woven, so I'd rather not complicate things with a poor file
arrangement.  All tips and suggestions would be greatly appreciated.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From justinjohnson at fastmail.fm  Tue Jun 10 11:31:11 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 10 Jun 2003 11:31:11 -0600
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610155501.5751.qmail@green.zadka.com>
References: <20030610145040.D0FB91DE2F@www.fastmail.fm>, <20030610151717.GD24830@mumak.net> <20030610141050.6DAB632BC3@www.fastmail.fm> <20030610155501.5751.qmail@green.zadka.com>
Message-ID: <20030610173111.D85F332FA4@www.fastmail.fm>

Great, that helped.  It was returning 500 before adding return '', but
not 401 gets returned.

Thanks.

On 10 Jun 2003 15:55:01 -0000, "Moshe Zadka" <m at moshez.org> said:
> On Tue, 10 Jun 2003, "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > 	def render(self, request):
> ...
> > 		if headers.has_key("authorization"):
> ...
> > 		else:
> > 			log("User not authorized")
> > 			request.setResponseCode(http.UNAUTHORIZED)
> You want to add
>                         return ''
> Or maybe return '<html>nice error message</html>'
> 
> -- 
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
> shortness.
> Agile Programming Language -- http://www.python.org/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From itamar at itamarst.org  Tue Jun 10 11:39:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 13:39:20 -0400
Subject: [Twisted-Python] How to send response 401
In-Reply-To: <20030610141050.6DAB632BC3@www.fastmail.fm>
References: <20030610151717.GD24830@mumak.net>
	<20030610141050.6DAB632BC3@www.fastmail.fm>
Message-ID: <20030610133920.0edc6c31.itamar@itamarst.org>

On Tue, 10 Jun 2003 08:10:50 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> 	def render(self, request):
> 		headers = request.getAllHeaders()
> 		if headers.has_key("authorization"):
> 			real_auth = '%s:%s' % (config.adminUser,
> 			config.adminPassword) auth = headers["authorization"]
> 			auth = auth.replace("Basic ","")
> 			decoded_auth = decodestring(auth)
> 			if decoded_auth == real_auth:
> 				return xmlrpc.XMLRPC.render(self, request)
> 		else:
> 			self.send_response(401)
> 			self.end_headers()

Note you can do request.getUser() and request.getPassword(), IIRC,
instead of parsing the Basic auth header yourself.



From itamar at itamarst.org  Tue Jun 10 11:46:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Jun 2003 13:46:08 -0400
Subject: [Twisted-Python] IMPORTANT: win32 status (for people with CVS access)
Message-ID: <20030610134608.293a4ee5.itamar@itamarst.org>

All tests are now passing, except for one timing issue with test_rebuild
reported by Cory that I can't reproduce, and possible problems with SSL
that may be result of using old version of pyOpenSSL.

So, any test failures on Win32 are *bugs*. DO NOT IGNORE THEM. Fix them.

And if you're adding new tests that only work on Unix, please make sure
they are skipped on Windows. it's really easy to do, look e.g. at
test_utils.py. Otherwise we're back in a situation where we have lots of
failing tests that may just be because they're unix only.

Test failures on windows are not acceptable. Unfortanutely setting up a
buildbot is not easy, so we have to rely on manual testing.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From developer at csrules.dyndns.org  Tue Jun 10 13:52:45 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 10 Jun 2003 14:52:45 -0500 (CDT)
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055225886.13586.42.camel@mingus>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
        <1055225886.13586.42.camel@mingus>
Message-ID: <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>

> That sounds like an excellent idea.  I'll try to post frequently to my
> weblog throughout this process, in hopes it will be useful to others
> down the road.
>
> Abe
>

Please post to your weblog as you progress. My attempts at twisted
are/were worse than yours and I wouldn't dare show any code. Since you
have jabber support in HEP are you going to do jabber the 'twisted' way?

-Darryl






From abe at fettig.net  Tue Jun 10 14:24:53 2003
From: abe at fettig.net (Abe Fettig)
Date: 10 Jun 2003 16:24:53 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>
References: <EE624A92-9ADF-11D7-8D1D-000393C9700E@twistedmatrix.com>
	 <1055225886.13586.42.camel@mingus>
	 <19670.209.5.247.105.1055274765.squirrel@home.vandorp.ca>
Message-ID: <1055276692.17344.16.camel@mingus>

On Tue, 2003-06-10 at 15:52, darryl wrote:
> > That sounds like an excellent idea.  I'll try to post frequently to my
> > weblog throughout this process, in hopes it will be useful to others
> > down the road.

> Please post to your weblog as you progress. My attempts at twisted
> are/were worse than yours and I wouldn't dare show any code.

Will do, I think that keeping such a public record could be useful.

>  Since you
> have jabber support in HEP are you going to do jabber the 'twisted' way?

IM support in Hep is on hold at the moment - there are a bunch of other
things that are higher priority right now.  But at some point (after Hep
0.4 is released), I'll be working on getting IM support into Hep, and
then I'll defitely be doing it the Twisted way.  I'm not interested in
trying to integrate non-Twisted networking libraries into Hep.

Abe




From dalke at dalkescientific.com  Tue Jun 10 15:41:01 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 10 Jun 2003 15:41:01 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030610064100.25604.qmail@green.zadka.com>
Message-ID: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>

Moshe:
>> Others said the doc build takes an hour.
>
> It shouldn't, on a sane machine. It takes about several minutes.
> Of course, you only need to rebuild the docs when you want to,
> not after every CVS update.

Andrew Bennets:
 > I think it would be too much effort to update the API docs 
automatically;
 > epydoc takes something like an hour to process all of Twisted

One says "several minutes" and the other "an hour" ...

Andrew Bennets:
 > Moshe, I'm not sure if he means that he wants to use the generated 
API docs
 > from epydoc (in which case he is correct), or if he didn't realise the
 > Howtos were independent of that timeframe (in which case I'm sure 
that's an
 > honest mistake).

I didn't realize.

>> I would rather not learn how to do that
>> myself
>
> I won't give you that option.
> % ./admin/process-docs
>
> There, now you learned how to do it yourself, whether you wanted
> to or not.

Just because you told me doesn't mean I'll remember.  I have a small
brain, and the less I have to learn, the better.

BTW, I just did that on my machine.  I see it assumes I have some
software I don't actually have.

  ...
doc/howto/controllerindepth
sh: pngtopnm: command not found
sh: pnmtops: command not found
Traceback (most recent call last):
   File "./bin/lore", line 29, in ?
     run()
   File "./twisted/scripts/lore.py", line 88, in run
     w.generate()
   File "twisted/lore/process.py", line 60, in generate
     self.df(fullpath, linkrel)
   File "./twisted/lore/default.py", line 55, in <lambda>
     df = lambda file, linkrel: latex.convertFile(file, spitter)
   File "./twisted/lore/latex.py", line 450, in convertFile
     processFile(spitter, fin)
   File "./twisted/lore/latex.py", line 443, in processFile
     spitter.visitNode(dom)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 86, in visitNodeDefault
     self.visitNode(child)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 86, in visitNodeDefault
     self.visitNode(child)
   File "./twisted/lore/latex.py", line 81, in visitNode
     getattr(self, 'visitNode_'+node.tagName, 
self.visitNodeDefault)(node)
   File "./twisted/lore/latex.py", line 172, in visitNode_img
     f(fileName, target)
   File "./twisted/lore/latex.py", line 179, in convert_png
     raise OSError(r)
OSError: 32512

I then installed the netpbm package ("fink install netpbm"), which
took about 14 minutes and reran the process-docs program

./admin/process-docs: latex: command not found

That's it - I'm not wasting any more time to get a local copy
of the docs.  Yes, I could install latex, and iterate install
packages until it all works, but my point is that getting the
docs working is a non-trivial task, at least for some people.
And woe be to those running something without a 'sh' derived
shell.

(BTW, it appears the latex call is only needed for the PDF
howto, and occurs after the HTML generation, so the error message
above only means that PS/PDF output won't be generated, and not
that latex is needed to finish the HTML output; eg, if there are
equations generated by LaTeX.  I do see the howto html files.)


> Why can't you run that cronjob on your CVS updated copy every day
> or so?

I originally brought this up because I sent in some doc corrections
which had been updated in CVS.  Thus, the time I spent writing the
bug report was wasted.  If the latest ("unstable") docs were published
on the twisted site then I would have easily noticed that it had
since been corrected.

Now, I could make my own mirror of twisted on my local machine (though
since it's a laptop, a simple cron wouldn't work, and I hate having
jobs run when I'm on battery power because of the extra power demands;
I've got wireless and like working on the porch).

However, that suggestion implies some disregard on others' time because
you are raising the barrier for people to provide meaningful help.
It's very little work for you all to provide the latest docs on-line,
so why not do it?  Esp. as you've now seen, the doc build makes some
requirements on a system (sh, netpbm, latex, others?) which might not
exist.

Glyph:
 > We say this about functionality as well, and CVS docs should have 
parity
 > with CVS code, not released code.  (In other words - if you want CVS
 > docs, download CVS code.)

Okay, then make an "UNSTABLE" release which corresponds to the most
recent docs, both of which are created anew each day. This provide the
parity you want, and also helps developers who want to see if the most
recent code fixes a problem they've come across, or who like working
on the bleeding edge.  This is also helpful for people at companies
which don't allow anything but port 80 through their firewalls (and so
block CVS access) to get a copy of the latest CVS version.

Moshe:

> It's not hard. It's just that the only people who want to read docs 
> about
> CVS will need to have a checkout anyway, and those people can easily
> run ./admin/process-docs.
> This script was specifically written (and taken outside 
> release-twisted)
> so we can easily build docs ourself.

How does someone new to twisted learn about this?  Eg, there's nothing
in the README which mentions it.  (Actually, it should be something like
"README_CVS" which is directed to people using Twisted from CVS rather
than from a release.)  And it doesn't look like it's mentioned anywhere
in anything.

% grep -s "process_docs" `find . -print`
%

					Andrew
					dalke at dalkescientific.com




From m at moshez.org  Tue Jun 10 17:29:16 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jun 2003 23:29:16 -0000
Subject: [Twisted-Python] typos
In-Reply-To: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
References: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030610232916.13460.qmail@green.zadka.com>

> % grep -s "process_docs" `find . -print`

This should have immediately alerted you: you did _, not -.
[Not that it's mentioned in any documentation. Currently, the process
of working from CVS is non-trivial. Contribution of a "Working Out
Of CVS" HOWTO will be gladly welcomed.]

For the record, in Debian these are the packages which are needed
to run netpbm:

- tetex-extra
- netpbm
- gs-common

Having never had fink, I cannot tell you if this has anything to
do with the fink packages.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From stuart.hungerford at anu.edu.au  Tue Jun 10 19:33:14 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Wed, 11 Jun 2003 11:33:14 +1000
Subject: [Twisted-Python] Static file filenames and MIME types...
Message-ID: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>

Hi all,

I think these questions show my ignorance of HTTP request headers
as much has anything, but:

In a twisted.web based application I'm returning a file in a resource
render() call via the twisted.web.static.File class.

If I've understood right, it's possible to specify the MIME type
of the file in the static.file constructor call.  Between this
setting and a request.setHeader('Content-Type', 'foo') call which
one takes priority?

I think I still need to set a request.setHeader('Content-Length')
to the size of the file?  (Conveniently available via the
.getFileSize() method of static.file)?

If the person at the other end wants to save the file, what's the
best way to suggest the filename, is it a setHeader of
'Content-Location' or does static.File take care of that?


Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From radix at twistedmatrix.com  Tue Jun 10 19:45:06 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 10 Jun 2003 21:45:06 -0400
Subject: [Twisted-Python] Static file filenames and MIME types...
In-Reply-To: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>; from stuart.hungerford@anu.edu.au on Tue, Jun 10, 2003 at 21:33:14 -0400
References: <5.2.0.9.0.20030611110654.00b9d380@anusf.anu.edu.au>
Message-ID: <20030611014506.GA1692@toshi.anaprd01.md.comcast.net>

On 2003.06.10 21:33, Stuart Hungerford wrote:
> Hi all,
> 
> I think these questions show my ignorance of HTTP request headers
> as much has anything, but:
> 
> In a twisted.web based application I'm returning a file in a resource
> render() call via the twisted.web.static.File class.
> 
> If I've understood right, it's possible to specify the MIME type
> of the file in the static.file constructor call.  Between this
> setting and a request.setHeader('Content-Type', 'foo') call which
> one takes priority?


The parameter that File takes is _default_Type, which just specifies 
which type to send (using request.setHeader) when no mime type can be
inferred from the extension of the file. So static.File itself does
request.setHeader('content-type', ...) (as well as 'content-encoding').

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Jun 10 20:42:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 12:42:54 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
References: <20030610064100.25604.qmail@green.zadka.com> <3A84BF0A-9B8C-11D7-90DD-000393C92466@dalkescientific.com>
Message-ID: <20030611024254.GC2113@frobozz>

On Tue, Jun 10, 2003 at 03:41:01PM -0600, Andrew Dalke wrote:
> 
> I then installed the netpbm package ("fink install netpbm"), which
> took about 14 minutes and reran the process-docs program
> 
> ./admin/process-docs: latex: command not found
> 
> That's it - I'm not wasting any more time to get a local copy
> of the docs.  Yes, I could install latex, and iterate install
> packages until it all works, but my point is that getting the
> docs working is a non-trivial task, at least for some people.
> And woe be to those running something without a 'sh' derived
> shell.

As mentioned in another email in this thread, this command should be
sufficient to generate the .xhtml for the howtos:

    bin/lore --config template=doc/howto/template.tpl \
             --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/public/%s.html \
             -l ../howto/ doc/howto/*.html

This shouldn't require any software other than Lore, which is part of
Twisted.  (It's the LaTeX/PS/PDF that requires external software for things
like image conversion, HTML is effectively Lore's "native" format.)

You could easily trim that command down to:

    lore --config template=doc/howto/template.tpl doc/howto/*.html

And not miss much.

This is certainly not obvious to most people (I suspect many of the Twisted
devs don't know how to invoke Lore, either), and probably does deserve to be
documented better -- a "Working from CVS" doc probably would be worthwhile.

-Andrew.




From dalke at dalkescientific.com  Tue Jun 10 22:04:24 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 10 Jun 2003 22:04:24 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030611024254.GC2113@frobozz>
Message-ID: <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>

Okay, if the latest docs won't be available on-line (thought I still 
don't see
why not) then how about a simple demo which serves the docs for the 
local
machine?

This would:
   - frob the doc directory and automatically generate the .html if the
  .xhtml file is newer

   - start a server pointing to that directory as a base, with the 
restriction
that only the local machine can connect to that port.

   - be documented

I can't see that it would take more than 30 minutes to write....  though
since I want the CVS docs on-line, I'm not going to encourage anyone ;)

For bonus points, it would also have a control page which updates from
CVS and which spawns off epydoc.

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Tue Jun 10 22:21:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 14:21:54 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>
References: <20030611024254.GC2113@frobozz> <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030611042154.GE2113@frobozz>

On Tue, Jun 10, 2003 at 10:04:24PM -0600, Andrew Dalke wrote:
> Okay, if the latest docs won't be available on-line (thought I still don't
> see why not) then how about a simple demo which serves the docs for the
> local machine?

The silly thing is the BuildBot already builds the docs on every checkin...
if it provided a way to browse the last successful builds, this problem
would be solved "for free" :)

-Andrew.




From exarkun at intarweb.us  Wed Jun 11 03:52:16 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 05:52:16 -0400
Subject: [Twisted-Python] Submitted for your consideration
Message-ID: <20030611095216.GA1346@meson.dyndns.org>

  Attached is a patch to add timeout support to t.web (via a minor
HTTPChannel change).

  The performance impact should be light, though it does impose an extra
function call per received line.  If this is found to unacceptable, I do not
thing it would be unreasonable to change the "__lastReceived" attribute's
name, document it as public, and require the update be made inline.

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.80
diff -u -r1.80 http.py
--- protocols/http.py	17 May 2003 20:54:12 -0000	1.80
+++ protocols/http.py	11 Jun 2003 09:46:39 -0000
@@ -47,6 +47,7 @@
 
 # twisted imports
 from twisted.internet import interfaces, reactor, protocol
+from twisted.protocols import policies
 from twisted.python import log
 
 
@@ -856,7 +857,7 @@
         pass
 
 
-class HTTPChannel(basic.LineReceiver):
+class HTTPChannel(basic.LineReceiver, policies.TimeoutMixin):
     """A receiver for HTTP requests."""
 
     length = 0
@@ -868,12 +869,19 @@
     # set in instances or subclasses
     requestFactory = Request
 
+    # Timeout connections after 12 hours of inactivity
+    timeOut = 60 * 60 * 12
 
     def __init__(self):
         # the request queue
         self.requests = []
 
+    def connectionMade(self):
+        self.setTimeout(self.timeOut)
+    
     def lineReceived(self, line):
+        self.resetTimeout()
+
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
@@ -1004,6 +1012,7 @@
             self.transport.loseConnection()
 
     def connectionLost(self, reason):
+        self.setTimeout(None)
         for request in self.requests:
             request.connectionLost(reason)
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030611/18f4347d/attachment.sig>

From exarkun at intarweb.us  Wed Jun 11 04:14:09 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 06:14:09 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Expand ITCPTransport
In-Reply-To: <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>
References: <E19OLCA-0000nU-00@pyramid.twistedmatrix.com> <5AA3F4AA-98E5-11D7-ABC5-000393C9700E@twistedmatrix.com>
Message-ID: <20030611101409.GA1423@meson.dyndns.org>

On Sat, Jun 07, 2003 at 08:41:26AM -0400, Glyph Lefkowitz wrote:
> 
> On Friday, June 6, 2003, at 01:40 PM, exarkun CVS wrote:
> 
> >+    def canStartTLS(self):
> 
> Hmm.  Wouldn't this be better expressed with a 
> components.implements(self, ITLSTransport) ?
> 

  Oops, forgot to reply to this:  Yes!  You are, as usually, brilliantly
correct.  Changed in CVS.

  Jp


> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030611/70af0911/attachment.sig>

From exarkun at intarweb.us  Wed Jun 11 04:27:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 06:27:01 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs when serving big files)
In-Reply-To: <1055180156.11822.32.camel@mingus>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com> <1055180156.11822.32.camel@mingus>
Message-ID: <20030611102701.GB1423@meson.dyndns.org>

On Mon, Jun 09, 2003 at 01:35:56PM -0400, Abe Fettig wrote:
> [snip]
> 
> * The SMTP server: Currently going through a rewrite in CVS.  I need to
> set up code to manage the outgoing message queue, and keep track of
> which messages have been delivered to which locations.  Is there code in
> twisted.mail to do this? (Keep in mind some messages are being delivered
> to blogs and other non-SMTP locations)
> 

  There will be code for this in the relatively near the future -- this is a
subtask of an item high on my todo list.

I'll check out your blog and maybe some of the Hep source (if it is
appropriate to do so?) to get a better idea of your use case, so I can keep
it in mind.

  If you want to toss any info my way regarding the details of your use
case, I'll keep them in mind as I work on the implementation.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030611/3f0d164f/attachment.sig>

From andrew-twisted at puzzling.org  Wed Jun 11 04:27:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 20:27:52 +1000
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611095216.GA1346@meson.dyndns.org>
References: <20030611095216.GA1346@meson.dyndns.org>
Message-ID: <20030611102752.GH2113@frobozz>

On Wed, Jun 11, 2003 at 05:52:16AM -0400, Jp Calderone wrote:
>   Attached is a patch to add timeout support to t.web (via a minor
> HTTPChannel change).
> 
>   The performance impact should be light, though it does impose an extra
> function call per received line.  If this is found to unacceptable, I do not
> thing it would be unreasonable to change the "__lastReceived" attribute's
> name, document it as public, and require the update be made inline.

[I've already made this point on IRC, but anyway...]

It also will timeout clients if a request takes a long time to run.  Think
streaming web pages, e.g. LivePage, or a streaming log from a *very* slow
buildbot build.  This patch should use .setTimeout(None) to disable timeouts
while a request is being processed (and then of course re-enable timeouts
once all outstanding requests have been serviced).  I don't like the idea of
disconnecting a client simply because the server is taking a long time to
serve the request, or because a client has a slow link.

I realise the default timeout is 12 hours, but:
    - I can imagine cases where HTTP connections last longer than 12 hours
      without receiving traffic from the client, e.g. streaming HTTP, where
      the client sends nothing, but the server keeps streaming buildbot
      results/javascript events/music, or simply a very long running request
      (i.e. because of an unusually massive DB query, or something).  You'd
      *really* be annoyed if your query took 13 hours, only to discover
      after 12 hours Twisted Web arbitrarily decided your connection was
      idle and killed it.  
    - Another scenario: A dial-up user downloading an ISO of their favorite
      Linux distro.  This is a legitimate request, and shouldn't be
      arbitrarily cut-off halfway.  If a client wants to download 600Mb at
      5kB/s, Twisted Web should let them.
    - It should still work correctly if the default is changed.  Someone
      might be paranoid, and set the timeout down to, say, 5 minutes.  This
      shouldn't cause adverse affects (beyond killing connections that have
      been idle that long).

-Andrew.




From exarkun at intarweb.us  Wed Jun 11 05:36:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 11 Jun 2003 07:36:42 -0400
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611102752.GH2113@frobozz>
References: <20030611095216.GA1346@meson.dyndns.org> <20030611102752.GH2113@frobozz>
Message-ID: <20030611113642.GA1580@meson.dyndns.org>

On Wed, Jun 11, 2003 at 08:27:52PM +1000, Andrew Bennetts wrote:
> On Wed, Jun 11, 2003 at 05:52:16AM -0400, Jp Calderone wrote:
> >   Attached is a patch to add timeout support to t.web (via a minor
> > HTTPChannel change).
> > 
> >   The performance impact should be light, though it does impose an extra
> > function call per received line.  If this is found to unacceptable, I do not
> > thing it would be unreasonable to change the "__lastReceived" attribute's
> > name, document it as public, and require the update be made inline.
> 
> [I've already made this point on IRC, but anyway...]
> 
> It also will timeout clients if a request takes a long time to run.  Think
> streaming web pages, e.g. LivePage, or a streaming log from a *very* slow
> buildbot build.  This patch should use .setTimeout(None) to disable timeouts
> while a request is being processed (and then of course re-enable timeouts
> once all outstanding requests have been serviced).  I don't like the idea of
> disconnecting a client simply because the server is taking a long time to
> serve the request, or because a client has a slow link.
> 
> I realise the default timeout is 12 hours, but:
>     - I can imagine cases where HTTP connections last longer than 12 hours
>       without receiving traffic from the client, e.g. streaming HTTP, where
>       the client sends nothing, but the server keeps streaming buildbot
>       results/javascript events/music, or simply a very long running request
>       (i.e. because of an unusually massive DB query, or something).  You'd
>       *really* be annoyed if your query took 13 hours, only to discover
>       after 12 hours Twisted Web arbitrarily decided your connection was
>       idle and killed it.  
>     - Another scenario: A dial-up user downloading an ISO of their favorite
>       Linux distro.  This is a legitimate request, and shouldn't be
>       arbitrarily cut-off halfway.  If a client wants to download 600Mb at
>       5kB/s, Twisted Web should let them.
>     - It should still work correctly if the default is changed.  Someone
>       might be paranoid, and set the timeout down to, say, 5 minutes.  This
>       shouldn't cause adverse affects (beyond killing connections that have
>       been idle that long).


  These are good points.  Thanks for making them on the ML :)  Here is a
modified patch (hopefully modified in the proper way).

  Jp
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.80
diff -u -r1.80 http.py
--- protocols/http.py	17 May 2003 20:54:12 -0000	1.80
+++ protocols/http.py	11 Jun 2003 11:36:00 -0000
@@ -47,6 +47,7 @@
 
 # twisted imports
 from twisted.internet import interfaces, reactor, protocol
+from twisted.protocols import policies
 from twisted.python import log
 
 
@@ -856,7 +857,7 @@
         pass
 
 
-class HTTPChannel(basic.LineReceiver):
+class HTTPChannel(basic.LineReceiver, policies.TimeoutMixin):
     """A receiver for HTTP requests."""
 
     length = 0
@@ -868,12 +869,20 @@
     # set in instances or subclasses
     requestFactory = Request
 
+    # Timeout connections after 12 hours of inactivity
+    timeOut = 60 * 60 * 12
+    _savedTimeOut = None
 
     def __init__(self):
         # the request queue
         self.requests = []
 
+    def connectionMade(self):
+        self.setTimeout(self.timeOut)
+    
     def lineReceived(self, line):
+        self.resetTimeout()
+
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
@@ -942,6 +951,11 @@
         self.__first_line = 1
         del self._command, self._path, self._version
 
+        # Disable the idle timeout, in case this request takes a long
+        # time to finish generating output.
+        if self.timeOut:
+            self._savedTimeOut = self.setTimeout(None)
+
         req = self.requests[-1]
         req.requestReceived(command, path, version)
 
@@ -1000,10 +1014,14 @@
             # notify next request it can start writing
             if self.requests:
                 self.requests[0].noLongerQueued()
+            else:
+                if self._savedTimeOut:
+                    self.setTimeout(self._savedTimeOut)
         else:
             self.transport.loseConnection()
 
     def connectionLost(self, reason):
+        self.setTimeout(None)
         for request in self.requests:
             request.connectionLost(reason)
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030611/69d758ac/attachment.sig>

From andrew-twisted at puzzling.org  Wed Jun 11 06:30:07 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 22:30:07 +1000
Subject: [Twisted-Python] Submitted for your consideration
In-Reply-To: <20030611113642.GA1580@meson.dyndns.org>
References: <20030611095216.GA1346@meson.dyndns.org> <20030611102752.GH2113@frobozz> <20030611113642.GA1580@meson.dyndns.org>
Message-ID: <20030611123007.GB3381@frobozz>

On Wed, Jun 11, 2003 at 07:36:42AM -0400, Jp Calderone wrote:
>  
> +        # Disable the idle timeout, in case this request takes a long
> +        # time to finish generating output.
> +        if self.timeOut:
> +            self._savedTimeOut = self.setTimeout(None)

[...]

> +            else:
> +                if self._savedTimeOut:
> +                    self.setTimeout(self._savedTimeOut)

I wonder if this idiom would be simplified by having a .cancelTimeout
method, rather than overloading .setTimeout(None) to mean that?  

These snippets could then look like something like:

+        # Disable the idle timeout, in case this request takes a long
+        # time to finish generating output.
+        self.cancelTimeout()

and:

+            else:
+                self.setTimeout(self.timeOut)

Or perhaps I'm just in an overly fussy mood tonight :)

-Andrew.




From andrew-twisted at puzzling.org  Wed Jun 11 06:31:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Jun 2003 22:31:45 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <20030611042154.GE2113@frobozz>
References: <20030611024254.GC2113@frobozz> <C9DCA6D2-9BC1-11D7-875B-000393C92466@dalkescientific.com> <20030611042154.GE2113@frobozz>
Message-ID: <20030611123145.GC3381@frobozz>

On Wed, Jun 11, 2003 at 02:21:54PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 10, 2003 at 10:04:24PM -0600, Andrew Dalke wrote:
> > Okay, if the latest docs won't be available on-line (thought I still don't
> > see why not) then how about a simple demo which serves the docs for the
> > local machine?
> 
> The silly thing is the BuildBot already builds the docs on every checkin...
> if it provided a way to browse the last successful builds, this problem
> would be solved "for free" :)

Hooray for BuildBot!

The latest build of the CVS docs can now be found at:
    
    http://twistedmatrix.com/users/warner/doc-latest/

Thanks Brian!

-Andrew.




From sf.lists at web.de  Wed Jun 11 07:11:28 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Wed, 11 Jun 2003 15:11:28 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess
Message-ID: <3EE72A80.7070409@web.de>

#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()




From sf.lists at web.de  Wed Jun 11 07:48:20 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Wed, 11 Jun 2003 15:48:20 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[2]
Message-ID: <3EE73324.7050003@web.de>

Hi,

somehow my last Message got truncated. :-/

I have two seperate processes communicatinbg by Perspective Broker.
One, the server, shall start an external program and send the output to 
the client.

See code below.

I get the following traceback (part of it):
---------------------------------------------
File "/export/home/s/stfl/Twisted/twisted/spread/pb.py", line 472, in 
expressionReceived
     raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
Failure: twisted.spread.pb.PBConnectionLost:

I've simplified the code to the following:

server (listener.py):
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor, app, protocol
from twisted.cred import authorizer
import os


class ABPP(protocol.ProcessProtocol):
     def __init__(self, receiver):
         self.receiver = receiver
     def connectionMade(self):
         print "connection to client-prg made!"
         # XXX Here the error is triggered
         mydef = self.receiver.callRemote("receiveMessage", "connection 
made!")
         mydef.addCallback(self.t)
     def t(self, x):
         print 't:', x


class ABListener(pb.Root):
     def __init__(self):
         self.receiver = None
     def remote_takeMessageReceiver(self, receiver):
         print 'self.receiver = receiver', receiver
         self.receiver = receiver
     def remote_dir(self):
         pp = ABPP(self.receiver)
         command = ['/bin/ls']
         reactor.spawnProcess(pp, command[0], command, env=os.environ)
         reactor.run()


if __name__ == '__main__':
     import listener
     ab_app = app.Application("ABListener")
     ab_app.listenTCP(8848, pb.BrokerFactory(ABListener()))
     ab_app.run(save=0)



client (client.py)
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()




From news at exultants.org  Sun Jun  8 15:58:59 2003
From: news at exultants.org (Van Gale)
Date: Sun, 08 Jun 2003 14:58:59 -0700
Subject: [Twisted-Python] Re: Concern over "relentless hyping" (was Twisted - howto transport
 megabytes?)
In-Reply-To: <3EE36889.B1259CFD@engcorp.com>
References: <3EE36889.B1259CFD@engcorp.com>
Message-ID: <bc0bdd$17b$1@main.gmane.org>

Peter Hansen wrote:
> I received the following message in private (I assume) email after
> my last post to the newsgroup.  Comments are welcome, preferably
> public ones (merely because I consider private discussions about
> this kind of thing to be a severe waste of my limited time).
> 
> Am I over-hyping Twisted?  Am I over-publicizing my satisfaction?
> Is anyone over-hyping it?  Is there a maximum acceptable target level 
> of hype?

I'm not sure why someone would send such a message.  Clearly "word of 
mouth" is the best marketing for open-source projects.  On top of that I 
don't want to invest time learning and using a major framework unless I 
know it's going to be around a while and has support.  An active 
community that can respond in mailing lists and newsgroups sends a 
signal, to me at least, that the project is serious and I won't be left 
hung out to dry.

Having said that, at some point a project probably gains enough momentum 
that it no longer needs evangelists.  Twisted *might* be at this stage 
as evidenced by newbish type questions appearing on c.l.py recently, but 
just answering those questions in a simple, straightforward way is great 
marketing in itself.

Van Gale





From rdrb at 123.cl  Mon Jun  9 21:20:35 2003
From: rdrb at 123.cl (rdrb at 123.cl)
Date: Mon, 9 Jun 2003 23:20:35 -0400
Subject: [Twisted-Python] Twisted cred perspective unicode support
Message-ID: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>

I got problems using Twisted cred with Python2.2.0.
My perspectives names are based on a url encoding.
I have found that there is a problem when PerspectiveName is  unicode.

I also discovered that the error message is not explicative.

The CVS does not have a solution for this problems.

Both diminute problem are solved in the next patch.

Twisted is a great tool.
Thanks you for Twisted.

RodrigoB.

- Post patch for twisted.cred.perspective (Type -> Types, report error type):

the cause:
----------

import types
isinstance(u"/test1", types.StringType) 
=>0

The patch:
----------

class Perspective:
    """I am an Identity's view onto a service.

    I am the interface through which most 'external' code should
    interact with a service; I represent the actions a user may
    perform upon a service, and the state associated with that
    user for that service.
    """

    _service_cached = 0 # Has my service cached me from a loaded store, or do I live in memory usually?

    def __init__(self, perspectiveName, identityName="Nobody"):
        """Create me.

        I require a name for myself and a reference to the service
        I participate in.  (My identity name will be 'Nobody' by
        default, which will normally not resolve.)
        """
        if not isinstance(perspectiveName, types.StringTypes):
            raise TypeError("Expected string, got '%s' (%s)."% (perspectiveName, type(perspectiveName)))
        if not isinstance(identityName, types.StringTypes):
            raise TypeError("Expected string, got '%s' (%s)."% (identityName, type(identityName)))
        self.perspectiveName = perspectiveName
        self.identityName = identityName


The diff
---------

$ diff perspective.py /usr/local/lib/python2.2/site-packages/twisted/cred/perspective.py 
49,52c49,52
<         if not isinstance(perspectiveName, types.StringType):
<             raise TypeError("Expected string, got %s."% perspectiveName)
<         if not isinstance(identityName, types.StringType):
<             raise TypeError("Expected string, got %s."% identityName)
---
>         if not isinstance(perspectiveName, types.StringTypes):
>             raise TypeError("Expected string, got '%s' (%s)."% (perspectiveName, type(perspectiveName)))
>         if not isinstance(identityName, types.StringTypes):
>             raise TypeError("Expected string, got '%s' (%s)."% (identityName, type(identityName)))





From jml at mumak.net  Wed Jun 11 11:56:15 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 12 Jun 2003 03:56:15 +1000
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <3EE51D0D.8080007@gmx.net>
References: <3EE51D0D.8080007@gmx.net>
Message-ID: <20030611175615.GF31175@mumak.net>

On Tue, Jun 10, 2003 at 01:49:33AM +0200, Chris Liechti wrote:
> you claim compatibility with pythons unittest from the stdlib, hm... i 
> see some differences ;-)
> 

Actually, we don't. We claim to be *almost* API compatible with python's
standard unittest module. Or at least, that is what I claim. If some docs say
otherwise, I'd like to hear about it.

> if __name__ == '__main__':
>     unittest.main()
> 
> sugestion, why not adding the following func (or something better, that 
> does not fiddle with sys.argv) to twisted.trial.unittest?
> 

The reason it's not there already is that I always found it slightly confusing
and magical, and no one has really mourned it's loss so far. Also, because it's
not entirely clear what it should do.

However, there's no real reason why it should not be added. If it were, I'd
imagine it would just give the most basic output, just like pyunit.

Oh, and even after this is added, trial will still not be fully API compatible
with pyunit. It never will be.
 
> also i like to run my tests with "-v" (verbose) but unfortunately does 
> twisted output garbage in that case.. (i know, it's ANSI colors but i'm 
> on Win32... :-(

trial --bwverbose does black-n-white verbose output. 

<snip recommendations for command-line UI change> 

Oh, wait, you know about --bwverbose. Yes, I agree, the command line options
for these could be much better.

What do you think about this?

trial -v (Black-n-white verbose output)
trial --color -v (Colorful verbose output)

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030612/ac7f2c13/attachment.sig>

From glyph at twistedmatrix.com  Wed Jun 11 13:35:18 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jun 2003 15:35:18 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <20030611175615.GF31175@mumak.net>
Message-ID: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>

On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:

> trial -v (Black-n-white verbose output)
> trial --color -v (Colorful verbose output)

Perhaps color should only be used if sys.stdout.isatty()?




From theller at python.net  Wed Jun 11 11:42:25 2003
From: theller at python.net (Thomas Heller)
Date: 11 Jun 2003 19:42:25 +0200
Subject: [Twisted-Python] [Large] test results on windows (was Re: IMPORTANT: win32 status...)
References: <20030610134608.293a4ee5.itamar@itamarst.org>
Message-ID: <k7bspl32.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> All tests are now passing, except for one timing issue with test_rebuild
> reported by Cory that I can't reproduce, and possible problems with SSL
> that may be result of using old version of pyOpenSSL.
> 

Here's what I get with the win32eventreactor (I did a cvs update
yesterday night). Python 2.2.2, win32all-152, Windows XP pro.
It seems to hang after
  IMAP4ServerTestCase
    testAppend ...

After the '--------' line in this post is the output of the same test
using the default reactor, this one also seems to hang in the same test,
but it prints no FAIL messages.

c:\sf\Twisted>py22 bin\trial -p twisted.test -r win32eventreactor -v
Using twisted.internet.win32eventreactor reactor
c:\sf\Twisted\twisted\protocols\dns.py:50: RuntimeWarning: PyCrypto not available - proceeding with non-cryptographicall
y secure random source
  1
twisted.test.test_app
  AppTestCase
    testIllegalUnlistens ...                                               ?[32;1m[OK]?[0m
    testListenUnlistenTCP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUDP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUNIX ...                                             ?[32;1m[OK]?[0m
  ServiceTestCase
    testRegisterService ...                                                ?[32;1m[OK]?[0m
twisted.test.test_banana
  BananaTestCase
    testCrashString ...                                                    ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInteger ...                                                        ?[32;1m[OK]?[0m
    testList ...                                                           ?[32;1m[OK]?[0m
    testLong ...                                                           ?[32;1m[OK]?[0m
    testNegative ...                                                       ?[32;1m[OK]?[0m
    testNegativeLong ...                                                   ?[32;1m[OK]?[0m
    testOversizedList ...                                                  ?[32;1m[OK]?[0m
    testOversizedString ...                                                ?[32;1m[OK]?[0m
    testPartial ...                                                        ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
  MathTestCase
    testInt2b128 ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_bounce
  BounceTestCase
    testBounceFormat ...                                                   ?[32;1m[OK]?[0m
    testBounceMIME ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_coil
  CoilTest
    testConfigurable ...                                                   ?[32;1m[OK]?[0m
    testCustomConfigurable ...                                             ?[32;1m[OK]?[0m
    testRegistration ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_compat
  CompatTestCase
    testBool ...                                                           ?[32;1m[OK]?[0m
    testDict ...                                                           ?[32;1m[OK]?[0m
    testIsinstance ...                                                     ?[32;1m[OK]?[0m
    testIteration ...                                                      ?[32;1m[OK]?[0m
    testStrip ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_components
  AdapterTestCase
    testAllowDuplicates ...                                                ?[32;1m[OK]?[0m
    testBadRegister ...                                                    ?[32;1m[OK]?[0m
    testGetAdapter ...                                                     ?[32;1m[OK]?[0m
    testGetAdapterClass ...                                                ?[32;1m[OK]?[0m
    testGetSubAdapter ...                                                  ?[32;1m[OK]?[0m
    testNoAdapter ...                                                      ?[32;1m[OK]?[0m
    testParentInterface ...                                                ?[32;1m[OK]?[0m
    testSelfIsAdapter ...                                                  ?[32;1m[OK]?[0m
  ComponentizedTestCase
    testComponentized ...                                                  ?[32;1m[OK]?[0m
    testInheritanceAdaptation ...                                          ?[32;1m[OK]?[0m
    testMultiAdapter ...                                                   ?[32;1m[OK]?[0m
  InterfacesTestCase
    testClasses ...                                                        ?[32;1m[OK]?[0m
    testGetInterfaces ...                                                  ?[32;1m[OK]?[0m
    testInstanceOnlyImplements ...                                         ?[32;1m[OK]?[0m
    testInstances ...                                                      ?[32;1m[OK]?[0m
    testOther ...                                                          ?[32;1m[OK]?[0m
    testSuperInterfaces ...                                                ?[32;1m[OK]?[0m
    testTupleTrees ...                                                     ?[32;1m[OK]?[0m
  TestInterfaceInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
  TestMetaInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
    testComponentizedInteraction ...                                       ?[32;1m[OK]?[0m
    testCustomRegistry ...                                                 ?[32;1m[OK]?[0m
    testInterfaceAdaptMethod ...                                           ?[32;1m[OK]?[0m
    testRegistryPersistence ...                                            ?[32;1m[OK]?[0m
twisted.test.test_context
  ContextTest
    testBasicContext ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_cred
  AuthorizerTestCase
    test_addIdent ...                                                      ?[32;1m[OK]?[0m
    test_nonExistentIdent ...                                              ?[32;1m[OK]?[0m
  FunctionsTestCase
    test_challenge ...                                                     ?[32;1m[OK]?[0m
  IdentityTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    test_addKeyByString ...                                                ?[32;1m[OK]?[0m
    test_addKeyForPerspective ...                                          ?[32;1m[OK]?[0m
    test_getAllKeys ...                                                    ?[32;1m[OK]?[0m
    test_removeKey ...                                                     ?[32;1m[OK]?[0m
    test_removeKey_invalid ...                                             ?[32;1m[OK]?[0m
    test_setPassword_invalid ...                                           ?[32;1m[OK]?[0m
    test_verifyPassword ...                                                ?[32;1m[OK]?[0m
    test_verifyPlainPassword ...                                           ?[32;1m[OK]?[0m
  PerspectiveTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    testConstruction_invalidIdentityName ...                               ?[32;1m[OK]?[0m
    testConstruction_invalidPerspectiveName ...                            ?[32;1m[OK]?[0m
    testConstruction_invalidService ...                                    ?[32;1m[OK]?[0m
    test_identityWithNoPassword ...                                        ?[32;1m[OK]?[0m
    test_identityWithNoPassword_plain ...                                  ?[32;1m[OK]?[0m
    testgetService ...                                                     ?[32;1m[OK]?[0m
    testmakeIdentity ...                                                   ?[32;1m[OK]?[0m
    testmakeIdentity_invalid ...                                           ?[32;1m[OK]?[0m
    testsetIdentity ...                                                    ?[32;1m[OK]?[0m
    testsetIdentityName ...                                                ?[32;1m[OK]?[0m
    testsetIdentityName_invalid ...                                        ?[32;1m[OK]?[0m
    testsetIdentity_invalid ...                                            ?[32;1m[OK]?[0m
  ServiceTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    serviceName is frequently used as a key, thus it is expected ...       ?[32;1m[OK]?[0m
    testGetSetPerspetiveSanity ...                                         ?[32;1m[OK]?[0m
    testaddPerspective_invalid ...                                         ?[32;1m[OK]?[0m
    testgetPerspective ...                                                 ?[32;1m[OK]?[0m
    testgetPerspectiveNamed_invalid ...                                    ?[32;1m[OK]?[0m
    testgetServiceName ...                                                 ?[32;1m[OK]?[0m
    testgetServiceName_hashable ...                                        ?[32;1m[OK]?[0m
    testgetServiceType ...                                                 ?[32;1m[OK]?[0m
    testsetServiceParent ...                                               ?[32;1m[OK]?[0m
twisted.test.test_defer
  DeferredTestCase
    testCallbackWithArgs ...                                               ?[32;1m[OK]?[0m
    testCallbackWithKwArgs ...                                             ?[32;1m[OK]?[0m
    testCallbackWithoutArgs ...                                            ?[32;1m[OK]?[0m
    testDeferredList ...                                                   ?[32;1m[OK]?[0m
    testDeferredListFireOnOneError ...                                     ?[32;1m[OK]?[0m
    testGatherResults ...                                                  ?[32;1m[OK]?[0m
    testImmediateFailure ...                                               ?[32;1m[OK]?[0m
    testImmediateSuccess ...                                               ?[32;1m[OK]?[0m
    testMaybeDeferred ...                                                  ?[32;1m[OK]?[0m
    testPausedFailure ...                                                  ?[32;1m[OK]?[0m
    testReturnDeferred ...                                                 ?[32;1m[OK]?[0m
    testTimeOut ...                                                        ?[32;1m[OK]?[0m
    testTwoCallbacks ...                                                   ?[32;1m[OK]?[0m
    testUnpauseBeforeCallback ...                                          ?[32;1m[OK]?[0m
  DeferredTestCaseII
    Testing empty DeferredList. ...                                        ?[32;1m[OK]?[0m
  LogTestCase
    testErrorLog ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_dict
  ParamTest
    Testing command response handling ...                                  ?[32;1m[OK]?[0m
twisted.test.test_dirdbm
  DirDbmTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
  ShelfTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
twisted.test.test_dns
  RountripDNSTestCase
    testName ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testRR ...                                                             ?[32;1m[OK]?[0m
    testResources ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_doc
  DocCoverage
    Looking for docstrings in all modules. ...                        ?[34;1m[SKIPPED]?[0m
    Looking for docstrings in all packages. ...                            ?[32;1m[OK]?[0m
twisted.test.test_domhelpers
  DomHelpersTest
    test_clearNode ...                                                     ?[32;1m[OK]?[0m
    test_escape ...                                                        ?[32;1m[OK]?[0m
    test_findElementsWithAttribute ...                                     ?[32;1m[OK]?[0m
    test_findNodesNamed ...                                                ?[32;1m[OK]?[0m
    test_gatherTextNodes ...                                               ?[32;1m[OK]?[0m
    test_get ...                                                           ?[32;1m[OK]?[0m
    test_getAndClear ...                                                   ?[32;1m[OK]?[0m
    test_getElementsByTagName ...                                          ?[32;1m[OK]?[0m
    test_getIfExists ...                                                   ?[32;1m[OK]?[0m
    test_getParents ...                                                    ?[32;1m[OK]?[0m
    test_locateNodes ...                                                   ?[32;1m[OK]?[0m
    test_unescape ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_enterprise
  EnterpriseTestCase
    testBulk ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testUpdate ...                                                         ?[32;1m[OK]?[0m
  QuotingTestCase
    testQuoting ...                                                        ?[32;1m[OK]?[0m
twisted.test.test_ethernet
  EthernetTestCase
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a negative number raises an exception. ...      ?[32;1m[OK]?[0m
    Adding a wrong level protocol raises an exception. ...                 ?[32;1m[OK]?[0m
    testDemuxing ...                                                       ?[32;1m[OK]?[0m
    testMultiplePackets ...                                                ?[32;1m[OK]?[0m
    testMultipleSameProtos ...                                             ?[32;1m[OK]?[0m
    testPacketParsing ...                                                  ?[32;1m[OK]?[0m
    testWrongProtoNotSeen ...                                              ?[32;1m[OK]?[0m
twisted.test.test_explorer
  TestBrowseFunction
    Basic checks for browse_function. ...                                  ?[32;1m[OK]?[0m
    Testing function with crazy signature. ...                             ?[32;1m[OK]?[0m
    Testing zero-argument function signature. ...                          ?[32;1m[OK]?[0m
    Testing simple function signature. ...                                 ?[32;1m[OK]?[0m
    Testing variable-argument function signature. ...                      ?[32;1m[OK]?[0m
  TestBrowser
    Following a chain of Explorers. ...                                    ?[32;1m[OK]?[0m
twisted.test.test_factories
  ReconnectingFactoryTestCase
    testStopTrying ...
c:\sf\Twisted\twisted\internet\win32eventreactor.py:164: exceptions.DeprecationWarning: Foolish capitalist!  Your opulen
t toilet will be your undoing!!

c:\sf\Twisted\twisted\internet\win32eventreactor.py:181: exceptions.DeprecationWarning: The proletariat is victorious.

c:\sf\Twisted\twisted\internet\win32eventreactor.py:198: exceptions.DeprecationWarning: Foolish capitalist!  Your opulen
t toilet will be your undoing!!

c:\sf\Twisted\twisted\internet\win32eventreactor.py:213: exceptions.DeprecationWarning: The proletariat is victorious.
                                                    ?[32;1m[OK]?[0m
twisted.test.test_failure
  FailureTestCase
    Trapping a failure. ...                                                ?[32;1m[OK]?[0m
    testPrinting ...                                                       ?[32;1m[OK]?[0m
    Making sure trap doesn't trap what it shouldn't. ...                   ?[32;1m[OK]?[0m
twisted.test.test_formmethod
  ArgumentTestCase
    testBoolean ...                                                        ?[32;1m[OK]?[0m
    testChoice ...                                                         ?[32;1m[OK]?[0m
    testDate ...                                                           ?[32;1m[OK]?[0m
    testFlags ...                                                          ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInt ...                                                            ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
twisted.test.test_ftp
  FTPClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                             ?[31;1m[FAIL]?[0m
    testRetr ...                                                         ?[31;1m[FAIL]?[0m
    testShortFileListings ...                                            ?[31;1m[FAIL]?[0m
    testStor ...                                                         ?[34;1m[TODO]?[0m
  FTPClientTests
    testFailedRETR ...                                                     ?[32;1m[OK]?[0m
  FTPFileListingTests
    testOneLine ...                                                        ?[32;1m[OK]?[0m
  FTPPassiveClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                             ?[31;1m[FAIL]?[0m
    testRetr ...                                                         ?[31;1m[FAIL]?[0m
    testShortFileListings ...                                            ?[31;1m[FAIL]?[0m
    testStor ...                                                         ?[31;1m[FAIL]?[0m
  UtilTestCase
    testDecodeHostPort ...                                                 ?[32;1m[OK]?[0m
twisted.test.test_hashless
  TestHashlessDictionary
    test_EvilClass ...                                                     ?[32;1m[OK]?[0m
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakKeyDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakValueDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_hook
  HookTestCase
    make sure that the base class's hook is called reliably ...            ?[32;1m[OK]?[0m
    test interactions between base-class hooks and subclass hooks ...      ?[32;1m[OK]?[0m
twisted.test.test_htb
  ConsumerShaperTest
    testBucketRefs ...                                                     ?[32;1m[OK]?[0m
    testRate ...                                                           ?[32;1m[OK]?[0m
  TestBucket
    Testing the bucket's drain rate. ...                                   ?[32;1m[OK]?[0m
    Testing the size of the bucket. ...                                    ?[32;1m[OK]?[0m
  TestBucketNesting
    testBucketParentRate ...                                               ?[32;1m[OK]?[0m
    testBucketParentSize ...                                               ?[32;1m[OK]?[0m
twisted.test.test_http
  ChunkingTestCase
    testChunks ...                                                         ?[32;1m[OK]?[0m
    testConcatenatedChunks ...                                             ?[32;1m[OK]?[0m
  DateTimeTest
    testRoundtrip ...                                                      ?[32;1m[OK]?[0m
  HTTP0_9TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_0TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1_close_TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTPLoopbackTestCase
    testLoopback ...                                                       ?[32;1m[OK]?[0m
  ParsingTestCase
    testCookies ...                                                        ?[32;1m[OK]?[0m
    testGET ...                                                            ?[32;1m[OK]?[0m
    testHeaders ...                                                        ?[32;1m[OK]?[0m
    testPOST ...                                                           ?[32;1m[OK]?[0m
  PersistenceTestCase
    testAlgorithm ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_imap
  AuthenticatorTestCase
    testCramMD5 ...                                                        ?[32;1m[OK]?[0m
    testFailedCramMD5 ...                                                  ?[32;1m[OK]?[0m
  HandCraftedTestCase
    testTrailingLiteral ...                                                ?[32;1m[OK]?[0m
  IMAP4HelperTestCase
    testIdListParser ...                                                   ?[32;1m[OK]?[0m
    testLiterals ...                                                       ?[32;1m[OK]?[0m
    testParenParser ...                                                    ?[32;1m[OK]?[0m
    testQueryBuilder ...                                                   ?[32;1m[OK]?[0m
    testQuotedSplitter ...                                                 ?[32;1m[OK]?[0m
    testStringCollapser ...                                                ?[32;1m[OK]?[0m
  IMAP4ServerTestCase
    testAppend ...

--------


c:\sf\Twisted>py22 bin\trial -p twisted.test -v
c:\sf\Twisted\twisted\protocols\dns.py:50: RuntimeWarning: PyCrypto not available - proceeding with non-cryptographicall
y secure random source
  1
twisted.test.test_app
  AppTestCase
    testIllegalUnlistens ...                                               ?[32;1m[OK]?[0m
    testListenUnlistenTCP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUDP ...                                              ?[32;1m[OK]?[0m
    testListenUnlistenUNIX ...                                             ?[32;1m[OK]?[0m
  ServiceTestCase
    testRegisterService ...                                                ?[32;1m[OK]?[0m
twisted.test.test_banana
  BananaTestCase
    testCrashString ...                                                    ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInteger ...                                                        ?[32;1m[OK]?[0m
    testList ...                                                           ?[32;1m[OK]?[0m
    testLong ...                                                           ?[32;1m[OK]?[0m
    testNegative ...                                                       ?[32;1m[OK]?[0m
    testNegativeLong ...                                                   ?[32;1m[OK]?[0m
    testOversizedList ...                                                  ?[32;1m[OK]?[0m
    testOversizedString ...                                                ?[32;1m[OK]?[0m
    testPartial ...                                                        ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
  MathTestCase
    testInt2b128 ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_bounce
  BounceTestCase
    testBounceFormat ...                                                   ?[32;1m[OK]?[0m
    testBounceMIME ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_coil
  CoilTest
    testConfigurable ...                                                   ?[32;1m[OK]?[0m
    testCustomConfigurable ...                                             ?[32;1m[OK]?[0m
    testRegistration ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_compat
  CompatTestCase
    testBool ...                                                           ?[32;1m[OK]?[0m
    testDict ...                                                           ?[32;1m[OK]?[0m
    testIsinstance ...                                                     ?[32;1m[OK]?[0m
    testIteration ...                                                      ?[32;1m[OK]?[0m
    testStrip ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_components
  AdapterTestCase
    testAllowDuplicates ...                                                ?[32;1m[OK]?[0m
    testBadRegister ...                                                    ?[32;1m[OK]?[0m
    testGetAdapter ...                                                     ?[32;1m[OK]?[0m
    testGetAdapterClass ...                                                ?[32;1m[OK]?[0m
    testGetSubAdapter ...                                                  ?[32;1m[OK]?[0m
    testNoAdapter ...                                                      ?[32;1m[OK]?[0m
    testParentInterface ...                                                ?[32;1m[OK]?[0m
    testSelfIsAdapter ...                                                  ?[32;1m[OK]?[0m
  ComponentizedTestCase
    testComponentized ...                                                  ?[32;1m[OK]?[0m
    testInheritanceAdaptation ...                                          ?[32;1m[OK]?[0m
    testMultiAdapter ...                                                   ?[32;1m[OK]?[0m
  InterfacesTestCase
    testClasses ...                                                        ?[32;1m[OK]?[0m
    testGetInterfaces ...                                                  ?[32;1m[OK]?[0m
    testInstanceOnlyImplements ...                                         ?[32;1m[OK]?[0m
    testInstances ...                                                      ?[32;1m[OK]?[0m
    testOther ...                                                          ?[32;1m[OK]?[0m
    testSuperInterfaces ...                                                ?[32;1m[OK]?[0m
    testTupleTrees ...                                                     ?[32;1m[OK]?[0m
  TestInterfaceInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
  TestMetaInterface
    testBasic ...                                                          ?[32;1m[OK]?[0m
    testComponentizedInteraction ...                                       ?[32;1m[OK]?[0m
    testCustomRegistry ...                                                 ?[32;1m[OK]?[0m
    testInterfaceAdaptMethod ...                                           ?[32;1m[OK]?[0m
    testRegistryPersistence ...                                            ?[32;1m[OK]?[0m
twisted.test.test_context
  ContextTest
    testBasicContext ...                                                   ?[32;1m[OK]?[0m
twisted.test.test_cred
  AuthorizerTestCase
    test_addIdent ...                                                      ?[32;1m[OK]?[0m
    test_nonExistentIdent ...                                              ?[32;1m[OK]?[0m
  FunctionsTestCase
    test_challenge ...                                                     ?[32;1m[OK]?[0m
  IdentityTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    test_addKeyByString ...                                                ?[32;1m[OK]?[0m
    test_addKeyForPerspective ...                                          ?[32;1m[OK]?[0m
    test_getAllKeys ...                                                    ?[32;1m[OK]?[0m
    test_removeKey ...                                                     ?[32;1m[OK]?[0m
    test_removeKey_invalid ...                                             ?[32;1m[OK]?[0m
    test_setPassword_invalid ...                                           ?[32;1m[OK]?[0m
    test_verifyPassword ...                                                ?[32;1m[OK]?[0m
    test_verifyPlainPassword ...                                           ?[32;1m[OK]?[0m
  PerspectiveTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    testConstruction_invalidIdentityName ...                               ?[32;1m[OK]?[0m
    testConstruction_invalidPerspectiveName ...                            ?[32;1m[OK]?[0m
    testConstruction_invalidService ...                                    ?[32;1m[OK]?[0m
    test_identityWithNoPassword ...                                        ?[32;1m[OK]?[0m
    test_identityWithNoPassword_plain ...                                  ?[32;1m[OK]?[0m
    testgetService ...                                                     ?[32;1m[OK]?[0m
    testmakeIdentity ...                                                   ?[32;1m[OK]?[0m
    testmakeIdentity_invalid ...                                           ?[32;1m[OK]?[0m
    testsetIdentity ...                                                    ?[32;1m[OK]?[0m
    testsetIdentityName ...                                                ?[32;1m[OK]?[0m
    testsetIdentityName_invalid ...                                        ?[32;1m[OK]?[0m
    testsetIdentity_invalid ...                                            ?[32;1m[OK]?[0m
  ServiceTestCase
    testConstruction ...                                                   ?[32;1m[OK]?[0m
    serviceName is frequently used as a key, thus it is expected ...       ?[32;1m[OK]?[0m
    testGetSetPerspetiveSanity ...                                         ?[32;1m[OK]?[0m
    testaddPerspective_invalid ...                                         ?[32;1m[OK]?[0m
    testgetPerspective ...                                                 ?[32;1m[OK]?[0m
    testgetPerspectiveNamed_invalid ...                                    ?[32;1m[OK]?[0m
    testgetServiceName ...                                                 ?[32;1m[OK]?[0m
    testgetServiceName_hashable ...                                        ?[32;1m[OK]?[0m
    testgetServiceType ...                                                 ?[32;1m[OK]?[0m
    testsetServiceParent ...                                               ?[32;1m[OK]?[0m
twisted.test.test_defer
  DeferredTestCase
    testCallbackWithArgs ...                                               ?[32;1m[OK]?[0m
    testCallbackWithKwArgs ...                                             ?[32;1m[OK]?[0m
    testCallbackWithoutArgs ...                                            ?[32;1m[OK]?[0m
    testDeferredList ...                                                   ?[32;1m[OK]?[0m
    testDeferredListFireOnOneError ...                                     ?[32;1m[OK]?[0m
    testGatherResults ...                                                  ?[32;1m[OK]?[0m
    testImmediateFailure ...                                               ?[32;1m[OK]?[0m
    testImmediateSuccess ...                                               ?[32;1m[OK]?[0m
    testMaybeDeferred ...                                                  ?[32;1m[OK]?[0m
    testPausedFailure ...                                                  ?[32;1m[OK]?[0m
    testReturnDeferred ...                                                 ?[32;1m[OK]?[0m
    testTimeOut ...                                                        ?[32;1m[OK]?[0m
    testTwoCallbacks ...                                                   ?[32;1m[OK]?[0m
    testUnpauseBeforeCallback ...                                          ?[32;1m[OK]?[0m
  DeferredTestCaseII
    Testing empty DeferredList. ...                                        ?[32;1m[OK]?[0m
  LogTestCase
    testErrorLog ...                                                       ?[32;1m[OK]?[0m
twisted.test.test_dict
  ParamTest
    Testing command response handling ...                                  ?[32;1m[OK]?[0m
twisted.test.test_dirdbm
  DirDbmTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
  ShelfTestCase
    testDbm ...                                                            ?[32;1m[OK]?[0m
    testModificationTime ...                                               ?[32;1m[OK]?[0m
    testRebuildInteraction ...                                             ?[32;1m[OK]?[0m
    DirDBM: test recovery from directory after a faked crash ...           ?[32;1m[OK]?[0m
twisted.test.test_dns
  RountripDNSTestCase
    testName ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testRR ...                                                             ?[32;1m[OK]?[0m
    testResources ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_doc
  DocCoverage
    Looking for docstrings in all modules. ...                        ?[34;1m[SKIPPED]?[0m
    Looking for docstrings in all packages. ...                            ?[32;1m[OK]?[0m
twisted.test.test_domhelpers
  DomHelpersTest
    test_clearNode ...                                                     ?[32;1m[OK]?[0m
    test_escape ...                                                        ?[32;1m[OK]?[0m
    test_findElementsWithAttribute ...                                     ?[32;1m[OK]?[0m
    test_findNodesNamed ...                                                ?[32;1m[OK]?[0m
    test_gatherTextNodes ...                                               ?[32;1m[OK]?[0m
    test_get ...                                                           ?[32;1m[OK]?[0m
    test_getAndClear ...                                                   ?[32;1m[OK]?[0m
    test_getElementsByTagName ...                                          ?[32;1m[OK]?[0m
    test_getIfExists ...                                                   ?[32;1m[OK]?[0m
    test_getParents ...                                                    ?[32;1m[OK]?[0m
    test_locateNodes ...                                                   ?[32;1m[OK]?[0m
    test_unescape ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_enterprise
  EnterpriseTestCase
    testBulk ...                                                           ?[32;1m[OK]?[0m
    testQuery ...                                                          ?[32;1m[OK]?[0m
    testUpdate ...                                                         ?[32;1m[OK]?[0m
  QuotingTestCase
    testQuoting ...                                                        ?[32;1m[OK]?[0m
twisted.test.test_ethernet
  EthernetTestCase
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a number >=2**16 raises an exception. ...       ?[32;1m[OK]?[0m
    Adding a protocol with a negative number raises an exception. ...      ?[32;1m[OK]?[0m
    Adding a wrong level protocol raises an exception. ...                 ?[32;1m[OK]?[0m
    testDemuxing ...                                                       ?[32;1m[OK]?[0m
    testMultiplePackets ...                                                ?[32;1m[OK]?[0m
    testMultipleSameProtos ...                                             ?[32;1m[OK]?[0m
    testPacketParsing ...                                                  ?[32;1m[OK]?[0m
    testWrongProtoNotSeen ...                                              ?[32;1m[OK]?[0m
twisted.test.test_explorer
  TestBrowseFunction
    Basic checks for browse_function. ...                                  ?[32;1m[OK]?[0m
    Testing function with crazy signature. ...                             ?[32;1m[OK]?[0m
    Testing zero-argument function signature. ...                          ?[32;1m[OK]?[0m
    Testing simple function signature. ...                                 ?[32;1m[OK]?[0m
    Testing variable-argument function signature. ...                      ?[32;1m[OK]?[0m
  TestBrowser
    Following a chain of Explorers. ...                                    ?[32;1m[OK]?[0m
twisted.test.test_factories
  ReconnectingFactoryTestCase
    testStopTrying ...                                                     ?[32;1m[OK]?[0m
twisted.test.test_failure
  FailureTestCase
    Trapping a failure. ...                                                ?[32;1m[OK]?[0m
    testPrinting ...                                                       ?[32;1m[OK]?[0m
    Making sure trap doesn't trap what it shouldn't. ...                   ?[32;1m[OK]?[0m
twisted.test.test_formmethod
  ArgumentTestCase
    testBoolean ...                                                        ?[32;1m[OK]?[0m
    testChoice ...                                                         ?[32;1m[OK]?[0m
    testDate ...                                                           ?[32;1m[OK]?[0m
    testFlags ...                                                          ?[32;1m[OK]?[0m
    testFloat ...                                                          ?[32;1m[OK]?[0m
    testInt ...                                                            ?[32;1m[OK]?[0m
    testString ...                                                         ?[32;1m[OK]?[0m
twisted.test.test_ftp
  FTPClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                               ?[32;1m[OK]?[0m
    testRetr ...                                                           ?[32;1m[OK]?[0m
    testShortFileListings ...                                              ?[32;1m[OK]?[0m
    testStor ...                                                         ?[34;1m[TODO]?[0m
  FTPClientTests
    testFailedRETR ...                                                     ?[32;1m[OK]?[0m
  FTPFileListingTests
    testOneLine ...                                                        ?[32;1m[OK]?[0m
  FTPPassiveClientAndServerTests
    testBadLogin ...                                                       ?[32;1m[OK]?[0m
    testLongFileListings ...                                               ?[32;1m[OK]?[0m
    testRetr ...                                                           ?[32;1m[OK]?[0m
    testShortFileListings ...                                              ?[32;1m[OK]?[0m
    testStor ...                                                           ?[32;1m[OK]?[0m
  UtilTestCase
    testDecodeHostPort ...                                                 ?[32;1m[OK]?[0m
twisted.test.test_hashless
  TestHashlessDictionary
    test_EvilClass ...                                                     ?[32;1m[OK]?[0m
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakKeyDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
  TestHashlessWeakValueDictionary
    test_evil ...                                                          ?[32;1m[OK]?[0m
twisted.test.test_hook
  HookTestCase
    make sure that the base class's hook is called reliably ...            ?[32;1m[OK]?[0m
    test interactions between base-class hooks and subclass hooks ...      ?[32;1m[OK]?[0m
twisted.test.test_htb
  ConsumerShaperTest
    testBucketRefs ...                                                     ?[32;1m[OK]?[0m
    testRate ...                                                           ?[32;1m[OK]?[0m
  TestBucket
    Testing the bucket's drain rate. ...                                   ?[32;1m[OK]?[0m
    Testing the size of the bucket. ...                                    ?[32;1m[OK]?[0m
  TestBucketNesting
    testBucketParentRate ...                                               ?[32;1m[OK]?[0m
    testBucketParentSize ...                                               ?[32;1m[OK]?[0m
twisted.test.test_http
  ChunkingTestCase
    testChunks ...                                                         ?[32;1m[OK]?[0m
    testConcatenatedChunks ...                                             ?[32;1m[OK]?[0m
  DateTimeTest
    testRoundtrip ...                                                      ?[32;1m[OK]?[0m
  HTTP0_9TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_0TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTP1_1_close_TestCase
    testBuffer ...                                                         ?[32;1m[OK]?[0m
  HTTPLoopbackTestCase
    testLoopback ...                                                       ?[32;1m[OK]?[0m
  ParsingTestCase
    testCookies ...                                                        ?[32;1m[OK]?[0m
    testGET ...                                                            ?[32;1m[OK]?[0m
    testHeaders ...                                                        ?[32;1m[OK]?[0m
    testPOST ...                                                           ?[32;1m[OK]?[0m
  PersistenceTestCase
    testAlgorithm ...                                                      ?[32;1m[OK]?[0m
twisted.test.test_imap
  AuthenticatorTestCase
    testCramMD5 ...                                                        ?[32;1m[OK]?[0m
    testFailedCramMD5 ...                                                  ?[32;1m[OK]?[0m
  HandCraftedTestCase
    testTrailingLiteral ...                                                ?[32;1m[OK]?[0m
  IMAP4HelperTestCase
    testIdListParser ...                                                   ?[32;1m[OK]?[0m
    testLiterals ...                                                       ?[32;1m[OK]?[0m
    testParenParser ...                                                    ?[32;1m[OK]?[0m
    testQueryBuilder ...                                                   ?[32;1m[OK]?[0m
    testQuotedSplitter ...                                                 ?[32;1m[OK]?[0m
    testStringCollapser ...                                                ?[32;1m[OK]?[0m
  IMAP4ServerTestCase
    testAppend ...




From bob at redivi.com  Wed Jun 11 14:12:42 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 11 Jun 2003 16:12:42 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <0ECF8C78-9C49-11D7-8F8B-000A95686CD8@redivi.com>

On Wednesday, Jun 11, 2003, at 15:35 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
>
>> trial -v (Black-n-white verbose output)
>> trial --color -v (Colorful verbose output)
>
> Perhaps color should only be used if sys.stdout.isatty()?

and sys.platform != 'windows'

-bob




From 2002 at weholt.org  Wed Jun 11 14:11:47 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 11 Jun 2003 22:11:47 +0200
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
Message-ID: <005801c33055$b19ce9f0$0401a8c0@razor>

I got a root-resource object which handles generation of content for an
entire site. I need a server which serves xml-rpc *and* soap webservices on
the same port as the root-resource. How can I accomplish this? I've allready
subclassed the root-resource from twisted.web.resource. Can I use any sort
of mixin to do this?

Any hints?

Thomas




From cliechti at gmx.net  Wed Jun 11 14:27:59 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Wed, 11 Jun 2003 22:27:59 +0200
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
References: <D51885EB-9C43-11D7-8D1D-000393C9700E@twistedmatrix.com>
Message-ID: <3EE790CF.9000202@gmx.net>

Glyph Lefkowitz wrote:
> 
> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
> 
>> trial -v (Black-n-white verbose output)
>> trial --color -v (Colorful verbose output)

yes, looks nice for me.

> Perhaps color should only be used if sys.stdout.isatty()?

but unfortunately:

Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.

C:\>python
Python 2.2.2 (#37, Oct 14 2002, 17:02:34) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
 >>> import sys
 >>> sys.stdout.isatty()
64
 >>>

isatty() may rule out captured output in an IDE, but it does not help 
for the stupid windows console window.

chris




From bob at redivi.com  Wed Jun 11 14:40:30 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 11 Jun 2003 16:40:30 -0400
Subject: [Twisted-Python] comments about twisted.trial.unittest
In-Reply-To: <3EE790CF.9000202@gmx.net>
Message-ID: <F0D1199B-9C4C-11D7-8F8B-000A95686CD8@redivi.com>

On Wednesday, Jun 11, 2003, at 16:27 America/New_York, Chris Liechti 
wrote:

> Glyph Lefkowitz wrote:
>> On Wednesday, June 11, 2003, at 01:56 PM, Jonathan M. Lange wrote:
>>> trial -v (Black-n-white verbose output)
>>> trial --color -v (Colorful verbose output)
>
> yes, looks nice for me.
>
>> Perhaps color should only be used if sys.stdout.isatty()?
>
> but unfortunately:
>
> isatty() may rule out captured output in an IDE, but it does not help 
> for the stupid windows console window.

Yeah, but (sys.stdout.isatty() and sys.platform != 'windows') would.  
For the countable-on-hands number of windows python developers in the 
world that have ansi.sys (or equivalent) running, a --color flag could 
force it to be on.

-bob




From dalke at dalkescientific.com  Wed Jun 11 14:56:25 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 14:56:25 -0600
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <005801c33055$b19ce9f0$0401a8c0@razor>
Message-ID: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>

Thomas Weholt:
> I got a root-resource object which handles generation of content for an
> entire site. I need a server which serves xml-rpc *and* soap 
> webservices on
> the same port as the root-resource. How can I accomplish this? I've 
> allready
> subclassed the root-resource from twisted.web.resource. Can I use any 
> sort
> of mixin to do this?

You can do it as a mixin, like this

class MyXMLRPC(xmlrpc.XMLRPC):
   def xmlrpc_spam(self, i):
     return ", ".join(["spam"]*i)

class MySOAP(soap.SOAPPublisher):
   def soap_hello(self, name):
     return "Hello, %s" % (name,)

class YourRootResource(..., MyXMLRPC, MySOAP):
     def render(self, request):
       ct = request.getHeader("Content-Type"):
       if ct == "text/xml":
         # Either XML-RPC or SOAP
         if request.getHeader("SOAPAction") is None:
           return MyXMLRPC.render(self, request)
         return MySOAP.render(self, request)
       # proceed as normal

This works because both SOAP and XML-RPC send a "text/xml" in the
content-type, and SOAP also sends a SOAPAction in the header.

However, I would do it with composition, and not as a mixin.  That is,

class YourRootResource(Request):
     def __init__(self):
       self.xmlrpc_handler = MyXMLRPC()
       self.soap_handler = MySOAP()
     def render(self, request):
       ct = request.getHeader("Content-Type"):
       if ct == "text/xml":
         # Either XML-RPC or SOAP
         if request.getHeader("SOAPAction") is None:
           return self.xmlrpc_handler.render(self, request)
         return self.soap_heandler.render(self, request)
       # proceed as normal

This is because both the SOAP and XML-RPC implements make reference to
other methods in the class defintion, like "_gotResult", and I would
rather not have the possibility of reusing one of those methods by
accident.

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Wed Jun 11 18:04:24 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 18:04:24 -0600
Subject: [Twisted-Python] typos
In-Reply-To: <20030611123145.GC3381@frobozz>
Message-ID: <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>

Andrew Bennetts:
> Hooray for BuildBot!
>
> The latest build of the CVS docs can now be found at:
>
>     http://twistedmatrix.com/users/warner/doc-latest/

Now if it's made available from the front page or some other
place people can more easily find it ...

And if the various problems (from webchecker.py) were fixed....


Error ('http error', 404, 'Not Found')
  HREF  http://twistedmatrix.com/users/warner/doc-latest/api/index.html
   from http://twistedmatrix.com/users/warner/doc-latest/  
(api/index.html)

Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
deferex.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/index.html  
(2003/pycon/deferex.html)
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/twisted- 
reality/twisted-reality.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/index.html  
(2003/twisted-reality/twisted-reality.html)

Error ('http error', 400, 'Bad Request')
  HREF  http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/  
twisted.internet.interface.Transport.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/ 
conch_client.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/ 
common.NS.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/ 
conch_client.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-/api/ 
twisted.coil.html
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/glossary.xhtml

    ...
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
doc-standard
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
lore/lore.html
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
lore
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
lore/lore.html
   ...

    (Huh - those have a "1.0.3" when the others don't have a version
     number in the URL.)
   ...

Error ('http error', 404, 'Not Found')
  HREF  http://twistedmatrix.com/users/moshez/debian
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/basics.xhtml
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
applications/stylesheet.css
   from  
http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
applications/applications.html (stylesheet.css)
    ...
Error ('http error', 404, 'Not Found')
  HREF   
http://twistedmatrix.com/users/warner/doc-latest/howto/listings/lore/ 
1st_example.xhtml
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/extend- 
lore.xhtml (listings/lore/1st_example.xhtml)
    ...
Error ('http error', 404, 'Not Found')
  HREF  http://purl.net/net/CVSToys/
   from  
http://twistedmatrix.com/users/warner/doc-latest/howto/pclients.xhtml
    ...


I'm hard to please, eh? ;)

(And I didn't include everything - just enough to get an idea
that links are broken.)

					Andrew
					dalke at dalkescientific.com




From andrew-twisted at puzzling.org  Wed Jun 11 19:21:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Jun 2003 11:21:08 +1000
Subject: [Twisted-Python] typos
In-Reply-To: <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>
References: <20030611123145.GC3381@frobozz> <6CCA0083-9C69-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030612012107.GA4755@frobozz>

On Wed, Jun 11, 2003 at 06:04:24PM -0600, Andrew Dalke wrote:
> Andrew Bennetts:
> >Hooray for BuildBot!
> >
> >The latest build of the CVS docs can now be found at:
> >
> >    http://twistedmatrix.com/users/warner/doc-latest/
> 
> Now if it's made available from the front page or some other
> place people can more easily find it ...
> 
> And if the various problems (from webchecker.py) were fixed....

At a glance, there are two main problems:

  - We don't build the API docs on every checkin, because that takes far too
    long.  Probably we should use
      --config baseurl=http://twistedmatrix.com/documents/TwistedDocs/current/api/%s.html
    in the BuildBot to fix this.
  - The doc/examples and doc/historic directories aren't being built,
    either.

> 
>    ...
> Error ('http error', 404, 'Not Found')
>  HREF   
> http://twistedmatrix.com/documents/TwistedDocs/TwistedDocs-1.0.3/howto/ 
> doc-standard
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/historic/2003/pycon/ 
> lore/lore.html
[...]
> 
>    (Huh - those have a "1.0.3" when the others don't have a version
>     number in the URL.)
>   ...

The PyCon Lore paper has a link to the 1.0.3 docs, because it's a
"historical" document.  1.0.3 was the version of Twisted that paper was
written for... I'm surprised those URLs don't work anymore :(

> Error ('http error', 404, 'Not Found')
>  HREF  http://twistedmatrix.com/users/moshez/debian
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/basics.xhtml

Fixed :)

> Error ('http error', 404, 'Not Found')
>  HREF   
> http://twistedmatrix.com/users/warner/doc-latest/howto/listings/lore/ 
> 1st_example.xhtml
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/extend- 
> lore.xhtml (listings/lore/1st_example.xhtml)

Hmm, that looks like perhaps doc/howto/listings isn't being built either.

>    ...
> Error ('http error', 404, 'Not Found')
>  HREF  http://purl.net/net/CVSToys/
>   from  
> http://twistedmatrix.com/users/warner/doc-latest/howto/pclients.xhtml
>    ...

Fixed :)

> 
> I'm hard to please, eh? ;)

So long as your bug reports are comprehensive, I don't mind... :)

-Andrew.




From radix at twistedmatrix.com  Wed Jun 11 18:38:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 11 Jun 2003 20:38:54 -0400
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>; from dalke@dalkescientific.com on Wed, Jun 11, 2003 at 16:56:25 -0400
References: <2A1098D8-9C4F-11D7-875B-000393C92466@dalkescientific.com>
Message-ID: <20030612003854.GA535@toshi.anaprd01.md.comcast.net>

On 2003.06.11 16:56, Andrew Dalke wrote:
> Thomas Weholt:
> > I got a root-resource object which handles generation of content for an
> > entire site. I need a server which serves xml-rpc *and* soap 
> > webservices on
> > the same port as the root-resource. How can I accomplish this? I've 
> > allready
> > subclassed the root-resource from twisted.web.resource. Can I use any 
> > sort
> > of mixin to do this?
> 
> You can do it as a mixin, like this
> 
...

> 
> This works because both SOAP and XML-RPC send a "text/xml" in the
> content-type, and SOAP also sends a SOAPAction in the header.
> 

I'm pretty sure this isn't necessary (god, I hope it's not) -- XMLRPC, at 
least, is conventionally served at the /RPC2 path on the server. Just
putChild your XMLRPC resource onto your root resource at "RPC2". SOAP
probably has something similar...

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dalke at dalkescientific.com  Wed Jun 11 20:49:59 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 11 Jun 2003 20:49:59 -0600
Subject: [Twisted-Python] SOAP, XML-RPC-services and webpages in one Resource-object
In-Reply-To: <20030612003854.GA535@toshi.anaprd01.md.comcast.net>
Message-ID: <8E9E3C30-9C80-11D7-875B-000393C92466@dalkescientific.com>

Christopher Armstrong wrote:
> I'm pretty sure this isn't necessary (god, I hope it's not) -- XMLRPC, 
> at
> least, is conventionally served at the /RPC2 path on the server. Just
> putChild your XMLRPC resource onto your root resource at "RPC2". SOAP
> probably has something similar...

Ahh, I misinterpreted the question.  I read "same port as the
root-resource" to be "same resource".  Given your (much more
likely to be the proper) interpretation, Andrew Bennetts
recently answered it at the bottom of

   http://twistedmatrix.com/pipermail/twisted-python/2003-May/004229.html

I think too I've been thinking too much about content negotiation
under ReST.  ;)

					Andrew
					dalke at dalkescientific.com




From vaughn at sewardconsulting.com  Wed Jun 11 19:07:21 2003
From: vaughn at sewardconsulting.com (Vaughn H. Seward)
Date: Wed, 11 Jun 2003 19:07:21 -0600
Subject: [Twisted-Python] Licensing
Message-ID: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>

Greetings,

Twisted appears to be just the thing that could assist us in a commercial 
product we are designing. The product requires some secure network 
transactions to be controlled by a central server. I haven't finished 
reading all the Twisted documentation yet but it looks promising so far.

What is your policy on licensing? I couldn't find any thing about it on 
your web site. I.e. are we allowed to incorporate in it our product?

Thanks,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030611/76478c6f/attachment.html>

From andrew-twisted at puzzling.org  Thu Jun 12 00:02:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Jun 2003 16:02:15 +1000
Subject: [Twisted-Python] Licensing
In-Reply-To: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
References: <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
Message-ID: <20030612060215.GD4755@frobozz>

On Wed, Jun 11, 2003 at 07:07:21PM -0600, Vaughn H. Seward wrote:
[...]
> 
>    What is your policy on licensing? I couldn't find any thing about it on
>    your web site. I.e. are we allowed to incorporate in it our product?

As stated on the front page of http://twistedmatrix.com/ :

    "... Twisted, an event-driven networking framework written in Python and
    licensed under the LGPL."

Also, if you download the software you'll find it contains a file named
"LICENSE", which contains the LGPL.

(Possibly this could be made clearer, though; maybe the "Download" page
should mention the license?)

-Andrew.




From m at moshez.org  Thu Jun 12 03:25:44 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jun 2003 09:25:44 -0000
Subject: [Twisted-Python] Licensing
In-Reply-To: <20030612060215.GD4755@frobozz>
References: <20030612060215.GD4755@frobozz>, <5.1.0.14.2.20030611190557.028c6be8@mail.sewardconsulting.com>
Message-ID: <20030612092544.14008.qmail@green.zadka.com>

On Thu, 12 Jun 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

>     "... Twisted, an event-driven networking framework written in Python and
>     licensed under the LGPL."

Complementing Andrew's response, if you do not want to download all
of Twisted, the LGPL can be found in:
http://www.gnu.org/licenses/lgpl.html

If you find the LGPL too restrictive, you should talk directly to Glyph:
he is the sole copyright owner, and has the power to negotiate with you
any license he wants. What "we" (the Twisted development team) think about
so this is not the correct forum to ask such questions.
 
This pretty sums up everything there is to know about Twisted licensing:
either use the LGPL, or ask Glyph how much money he wants for another
license. :)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From arashi1 at pd.jaring.my  Thu Jun 12 06:29:18 2003
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Thu, 12 Jun 2003 20:29:18 +0800
Subject: [Twisted-Python] Default location for templates of .rpy's
Message-ID: <200306122029.18382.arashi1@pd.jaring.my>

Hello all, 

I've been playing with twisted.web stuff and I've come across an puzzle. When 
you're using web.static.File to 'serve' directories (using a custom 
webserver), and there are .rpy files you want to use in the directory tree, 
it seems necessary include the templateDirectory:

resource = page.Page("Hello World!", templateFile = "index.xhtml", \ 
templateDirectory = os.path.split(__file__)[0])

in the .rpy you use even when the template file is in the very same directory 
as the .rpy file. Otherwise twisted complains about file not found. Why is 
that? Isn't the same directory as the .rpy be a safe default to search first?
It just seems like making things more complicated than necessary.




From Karl.Lewin at BNSF.com  Thu Jun 12 07:12:29 2003
From: Karl.Lewin at BNSF.com (Lewin, Karl E)
Date: Thu, 12 Jun 2003 08:12:29 -0500
Subject: [Twisted-Python] Adding persistent db connections to twisted web server?
Message-ID: <EE8A3398977ED71195AC0002A5609B327F1ACB@ftwntexmp004.bnsf.com>

What is the best/accepted/preferred approach to adding a pool of db
connections that can be re-used in *.rpy's?

My first attempt is to add have a class like this:

# DBPool.py
from twisted.enterprise import adbapi 
from MySQLdb import cursors

class genericQuery(adbapi.Augmentation): 
        def __init__(self):
		adbapi.Augmentation.__init__(self,
                                         adbapi.ConnectionPool"MySQLdb",
                                         host='localhost',db='xxxxx',
                                         cursorclass=cursors.DictCursor))
	def getData(self,sql,parms=None):
	        if parms==None:
			return self.runQuery(sql)
		else:
			return self.runQuery(sql,parms)

And make a copy of web.py with the following added to the updateApplication
function:

    root.registry.setComponent(genericQuery,genericQuery())

(with the proper imports added as well) and then test it with something
like:


#test.rpy
from twisted.enterprise import adbapi 
from twisted.web import resource,server
from DBPool import genericQuery

class MyGreatResource(resource.Resource):
    def render(self, request):
        q = registry.getComponent(genericQuery)
        d = q.getData("select version()")
        d.addCallback(self.returnResult,request)
        return server.NOT_DONE_YET

    def returnResult(self, resultlist, request):
        request.write(`resultlist`)
	request.finish()

resource = MyGreatResource()

I realize that there can be some more paramaterization of the
dbmodule/database/etc parameters but I haven't don't that yet.

Is that a decent way of doing this(or rephrased, how stupid is this way of
doing this)?  How an *.rpy that needed to perform multiple queries work?  Is
there an example of using twisted.web and twisted.enterprise together
anywhere?  

Thanks-
Karl



From Karl.Lewin at BNSF.com  Thu Jun 12 08:32:51 2003
From: Karl.Lewin at BNSF.com (Lewin, Karl E)
Date: Thu, 12 Jun 2003 09:32:51 -0500
Subject: [Twisted-Python] DeferredList solves the multiple query issue
Message-ID: <EE8A3398977ED71195AC0002A5609B327F1ACE@ftwntexmp004.bnsf.com>

In my prior note asking about twisted.web and persistent connection pool I
though I had an issue with multiple database queries per rpy but as usual a
little more reading/digging popped up the solution and it is:

 twisted.internet.defer.DeferredList

I knew this had to have been something that was already in place but didn't
look hard enough earlier.  

Karl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030612/f8f3fd31/attachment.html>

From abe at fettig.net  Thu Jun 12 09:15:32 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jun 2003 11:15:32 -0400
Subject: [Twisted-Python] Hep and Twisted (Was: Twisted-webserver hangs
	when serving big files)
In-Reply-To: <20030611102701.GB1423@meson.dyndns.org>
References: <6F32DD2A-9969-11D7-804E-000393C9700E@twistedmatrix.com>
	 <1055180156.11822.32.camel@mingus> <20030611102701.GB1423@meson.dyndns.org>
Message-ID: <1055430931.7748.41.camel@mingus>

On Wed, 2003-06-11 at 06:27, Jp Calderone wrote:
> On Mon, Jun 09, 2003 at 01:35:56PM -0400, Abe Fettig wrote:
> > [snip]
> > 
> > * The SMTP server: Currently going through a rewrite in CVS.  I need to
> > set up code to manage the outgoing message queue, and keep track of
> > which messages have been delivered to which locations.  Is there code in
> > twisted.mail to do this? (Keep in mind some messages are being delivered
> > to blogs and other non-SMTP locations)
> > 
> 
>   There will be code for this in the relatively near the future -- this is a
> subtask of an item high on my todo list.
> 
> I'll check out your blog and maybe some of the Hep source (if it is
> appropriate to do so?) to get a better idea of your use case, so I can keep
> it in mind.
> 
>   If you want to toss any info my way regarding the details of your use
> case, I'll keep them in mind as I work on the implementation.

I'd like to be able to inherit from a class that handled all the queue
management bits (keeping track of which messages are in the queue,
calling back with a notification of which messages were and were not
delivered, etc).  Something like this:

Class MyQueue(MessageQueue):

	def deliverMessage(self, message, destinationAddress):
		[ my delivery code ]
                [ return a deferred ]
		

q = MyQueue()
d = q.addMessageToQueue(myMessage, destAddresses)
d.addCallback(allMessagesWereDelivered)
d.addErrback(someMessagesWereNotDelivered)


This doesn't take into account cases where you're delivering the same
message to several users on the same SMTP server (a very common case if
you're simply using an upstream server for all delivery).  In this case
calling deliverMessage() once for each address is bad.  Maybe it would
be better if the inheriting class could specify how different groups of
addresses should be delivered, like this:

def getDeliveryFunctionsForAddresess(self, addresses):
	deliveryFunctions = {
		self.deliverToLocalServer:[], 
		self.deliverToUpstreamServer: []}

	for address in addresses:
		if address.endswith("@mylocaldomain")
			deliveryFunctions[self.deliverToLocalServer].append(address)		
		else:
			deliveryFunctions[self.deliverToUpstreamServer].append(address)

	return deliveryFunctions

Another problem is that the queue should be maintained between
sessions.  The server may be shut down while a message is still waiting
to be delivered to one or more destinations.  In that case you may not
be able to rely on getting a callback when a message is delivered (since
the original deferred has probably been lost). Maybe it would be better
to register a function with the queue that gets called each time a
message is delivered, or fails?

q = MyQueue
q.notifierFunction = notifyUserOfDelivery

Anyhow, I'm sure you'll find a better solution than the ones I've listed
here. But hopefully that gives you an idea of what I'd be looking for -
the important thing is that I be able to change the delivery behavior
based on the destination address. If you'd like to take a look at the
code in Hep 0.3.3 you're welcome to - see servers/smtp.py and
agents/deliver.py.  Just keep in mind that this code is 6 months old,
and the architecture of Hep has changed somewhat since then.

Hep can easily convert messages to and from email.Message and/or rfc822
text objects, so I don't have a problem with your code depending on one
of those formats.

Abe




From iko at cd.chalmers.se  Thu Jun 12 09:56:19 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 12 Jun 2003 17:56:19 +0200
Subject: [Twisted-Python] twisted.protocols.imap4
Message-ID: <200306121556.h5CFuJu02228@haddock.cd.chalmers.se>

Hi!

I've started looking at the imap4 server implementation in twisted as
I need it for a project. Before I rip it apart completely to fix the
things I think need fixing, I thought I'd air my complaints and ask if
there was a particular reason things are the way they are. 

First of all, I don't understand why UID message references are
handled they way they are. As I understand it, bit operations on the
message number are used to determine if a particular message number
is a UID or a sequential message number. To me, this looks like an
attempt to optimise something which probably doesn't need it. Anyone
care to comment?

Two, the way the message numbers are parsed (whether UID or not),
result in SERIOUS preformance issues for a message range of the
form 1:*. I feel the message number parser needs to know what
messages are available, which needs some restructuring of the mailbox
interface.

Three, the obligatory patch. Empty strings need to be quoted in
responses.

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 533 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030612/f4b5c5c2/attachment-0002.bin>
-------------- next part --------------
-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From typo at soniq.net  Thu Jun 12 15:43:15 2003
From: typo at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:43:15 +0200
Subject: [Twisted-Python] distrib.UserDirectory improvements
Message-ID: <20030612214315.GA20244@soniq.net>

hi,
moshez suggested me to extend distrib.UserDirectory for my needs.
attached is what i am using right now. 

i hope to integrate this into distrib.py for cvs, later.
please give me feedback!

  paul
-------------- next part --------------
from twisted.web import widgets, static
from twisted.web.distrib import *
import os

if (os.sys.platform != 'win32') and (os.name != 'java'):
        import pwd

# Lines below this, can be merged into distrib.py

def createUserPath(homedir, username, dirname, subdir=''):
    if dirname[0:1] == '~':
        userpath = os.path.join(homedir, dirname[1:])
    else:
        userpath = os.path.join(dirname, username, subdir)

    return userpath

class UserDirectory(widgets.Gadget, widgets.StreamWidget):
    def __init__(self, userDirName='~/public_html', 
                 userSocketName='~/.twistd-web-pb', pbextension='.twistd'):
        widgets.Gadget.__init__(self)

        self.userDirName = userDirName
        self.userSocketName = userSocketName
        self.pbextension = pbextension

    def stream(self, write, request):
        write('<UL>\n')
        for user in pwd.getpwall():
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = user
            realname = string.split(pw_gecos,',')[0]
            if not realname:
                realname = pw_name
            fmtStr = '<LI><A HREF="%s/">%s (%s)</a>\n'
            userdirpath = createUserPath(pw_dir, pw_name, self.userDirName)
            if os.path.exists(userdirpath):
                write(fmtStr% (pw_name,realname,'file'))
            twistdsock = createUserPath(pw_dir, pw_name, 
                                        self.userSocketName, "twistd-web-pb")
            if os.path.exists(twistdsock):
                linknm = '%s%s' % (pw_name, self.pbextension)
                write(fmtStr % (linknm, realname, self.pbextension))
        write('</UL>\n')

    def getWidget(self, chnam, request):
        print "x"
        if chnam[-len(self.pbextension):] == self.pbextension:
            username = chnam[:-len(self.pbextension)]
            sub = 1
        else:
            username = chnam
            sub = 0

        try:
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = pwd.getpwnam(username)
        except KeyError:
            return error.NoResource()

        if sub:
            userpath = createUserPath(pw_dir, username, self.userSocketName,
                                        "twistd-web-pb")
            rs = ResourceSubscription('unix', userpath)
            self.putChild(chnam, rs)
            return rs
        else:
            userpath = createUserPath(pw_dir, username, self.userDirName)
            return static.File(userpath)

From typo at soniq.net  Thu Jun 12 15:46:48 2003
From: typo at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:46:48 +0200
Subject: [Twisted-Python] Re: distrib.UserDirectory improvements
In-Reply-To: <20030612214315.GA20244@soniq.net>
References: <20030612214315.GA20244@soniq.net>
Message-ID: <20030612214648.GA20283@soniq.net>

the reason i've written this:
apache allows you to have user html dirs outside of the homedir,
which is useful when you don't want +x homedirs.

this patch modifies userdirectory so that it's backwards compatible,
but when the constructor is called with different paths,
it behaves like apache.

that is: anything that starts with a ~, is in the users homedir
(~/public_html, and ~/.twistd-web-pb being the defaults)
and everything else is an absolute path.

  paul




From alexander.winston at attbi.com  Thu Jun 12 17:01:45 2003
From: alexander.winston at attbi.com (alexander.winston at attbi.com)
Date: Thu, 12 Jun 2003 23:01:45 +0000
Subject: [Twisted-Python] Updated patch for twisted.web.static.loadMimeTypes()
Message-ID: <E19Qb5M-0006Fz-00@pyramid.twistedmatrix.com>

Attached is an updated patch for the twisted.web.static.loadMimeTypes() function
that now takes a list of mime-types files as an argument.  See the .diff for
more information and/or clarification.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Twisted.diff
Type: application/octet-stream
Size: 3052 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030612/0086d08e/attachment-0002.obj>

From glyph at twistedmatrix.com  Fri Jun 13 00:34:43 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 01:34:43 -0500
Subject: [Twisted-Python] release fever
Message-ID: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>

We need a new release to get rolling soon.  Itamar and I have pretty 
much finished the design for newcred (it really feels like it's going 
to work _nicely_, but we haven't implemented anything yet, so stay 
tuned) and of course, this is going to involve some serious changes.  I 
think we can maintain backwards compatibility, but there are going to 
be small changes in lots of places in protocol code (z3p, we need to 
talk to you) that involve doing authentication.

We need to get a 1.0.6 release finalized before this sort of work 
starts hitting CVS; as soon as newcred is in, I want to start the 1.1 
release cycle.




From m at moshez.org  Fri Jun 13 00:49:22 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jun 2003 06:49:22 -0000
Subject: [Twisted-Python] release fever
In-Reply-To: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
References: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
Message-ID: <20030613064922.19103.qmail@green.zadka.com>

On Fri, 13 Jun 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> We need to get a 1.0.6 release finalized before this sort of work 
> starts hitting CVS; as soon as newcred is in, I want to start the 1.1 
> release cycle.

A. Where does it leave HTTP timeout code?
B. I really want some version of localonly (or Jp's rresource) in

These effect the twisted-web Debian package: right now, I wouldn't want
to upload it before these are done.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From 2002 at weholt.org  Fri Jun 13 06:48:49 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 13 Jun 2003 14:48:49 +0200
Subject: [Twisted-Python] Howto use the Gnutella-protocol
Message-ID: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>

Is the gnutella-protocol in Twisted so complete I can use it to query a
gnutella-network and download files? If so, does anybody have any example
code?

Any hints, clues etc. on this matter would be highly appreciated.

Best regards,
Thomas




From itamar at itamarst.org  Fri Jun 13 08:26:35 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 10:26:35 -0400
Subject: [Twisted-Python] release fever
In-Reply-To: <20030613064922.19103.qmail@green.zadka.com>
References: <1E3B3458-9D69-11D7-B3BA-000393C9700E@twistedmatrix.com>
	<20030613064922.19103.qmail@green.zadka.com>
Message-ID: <20030613102635.135f383a.itamar@itamarst.org>

On 13 Jun 2003 06:49:22 -0000
Moshe Zadka <m at moshez.org> wrote:

> A. Where does it leave HTTP timeout code?

Checked in to CVS, as far as I know?

> B. I really want some version of localonly (or Jp's rresource) in

Huh?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sf.lists at web.de  Fri Jun 13 09:44:53 2003
From: sf.lists at web.de (Stefan Fleiter)
Date: Fri, 13 Jun 2003 17:44:53 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
Message-ID: <3EE9F175.9010401@web.de>

Hi,

I need this for a project, so this is quite urgent.
I got no answer to this until now, so I try again.
Maybe somebody could tell me where to ask, if nobody knows a solution, 
tkanks.

------

I have two seperate processes communicating by Perspective Broker.
One, the server, shall start an external program and send the output to
the client.

See code below.

I get the following traceback (part of it):
---------------------------------------------
File "/export/home/s/stfl/Twisted/twisted/spread/pb.py", line 472, in
expressionReceived
     raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
Failure: twisted.spread.pb.PBConnectionLost:

I've simplified the code to the following:

server (listener.py):
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor, app, protocol
from twisted.cred import authorizer
import os


class ABPP(protocol.ProcessProtocol):
     def __init__(self, receiver):
         self.receiver = receiver
     def connectionMade(self):
         print "connection to client-prg made!"
         # XXX Here the error is triggered
         mydef = self.receiver.callRemote("receiveMessage", "connection
made!")
         mydef.addCallback(self.t)
     def t(self, x):
         print 't:', x


class ABListener(pb.Root):
     def __init__(self):
         self.receiver = None
     def remote_takeMessageReceiver(self, receiver):
         print 'self.receiver = receiver', receiver
         self.receiver = receiver
     def remote_dir(self):
         pp = ABPP(self.receiver)
         command = ['/bin/ls']
         reactor.spawnProcess(pp, command[0], command, env=os.environ)
         reactor.run()


if __name__ == '__main__':
     import listener
     ab_app = app.Application("ABListener")
     ab_app.listenTCP(8848, pb.BrokerFactory(ABListener()))
     ab_app.run(save=0)



client (client.py)
-----------------------
#!/usr/bin/env python

from twisted.spread import pb
from twisted.internet import reactor

class MessageReceiver(pb.Referenceable):
     def remote_receiveMessage(self, message):
         print 'server echoed:', message, '<br>'


class CComHandler:
     def __init__(self, mr):
         self.mr = mr
         self.remRef = None
     def gotObject(self, object):
         self.remRef = object
         mydef = self.remRef.callRemote("takeMessageReceiver", self.mr)
         mydef.addCallbacks(self.gaveMr, self.gotErr)
     def gaveMr(self, reason):
         print 'gave MessageReceiver'
         mydef = self.remRef.callRemote("dir")
         mydef.addCallbacks(self.calledDir, self.gotErr)
     def calledDir(self, reason):
         print 'called dir remotely<br>'
     def gotErr(self, reason):
         print 'Error: %s<br>' % reason
         reactor.stop()


def doDir():
     mr = MessageReceiver()
     c = CComHandler(mr)
     pb.getObjectAt("localhost", 8848, 30).addCallback(c.gotObject)
     reactor.run()

if __name__ == "__main__":
     machine = 'mymachine'
     packages = [('myPackage', 'myVersion')]
     doDir()





From glyph at twistedmatrix.com  Fri Jun 13 11:56:52 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 12:56:52 -0500
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <3EE9F175.9010401@web.de>
Message-ID: <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 10:44 AM, Stefan Fleiter wrote:

>     def remote_dir(self):
>         pp = ABPP(self.receiver)
>         command = ['/bin/ls']
>         reactor.spawnProcess(pp, command[0], command, env=os.environ)
>         reactor.run()

Remove the 'reactor.run()' here.  It should probably raise an 
exception, since the reactor is not reentrant, but there is no reason 
that you would need to do this.




From dp at twistedmatrix.com  Fri Jun 13 12:35:05 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 13 Jun 2003 14:35:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] enum type mapper bugfix - need a test for this
In-Reply-To: <E19PotX-0006Bb-00@pyramid.twistedmatrix.com>
Message-ID: <C080AC82-9DCD-11D7-874D-000A95864FC4@twistedmatrix.com>

Thanks for fixing that :-) Did it get closed in the tracker? /me 
looks...

The problem with testing this is that you have to start up a different 
process than the one which is currently running to observe the bug... 
Any thoughts on testing stuff like this?

dp




From gareth at omnipotent.net  Fri Jun 13 13:07:27 2003
From: gareth at omnipotent.net (Gareth Watts)
Date: Fri, 13 Jun 2003 20:07:27 +0100
Subject: [Twisted-Python] benchmarks for twisted.trial
Message-ID: <3EEA20EF.5070808@omnipotent.net>

Hi all

I wanted a means of being able to see whether changes to code (eg. bits 
of Woven) were having an impact on performance.  Rather than separate 
benchmarks i thought it'd make sense just to make use of the tests that 
are already written (or write new tests and use those as benchmarks)

So, attached is a small/simple patch to add a --benchmarks <iterations> 
option to trial to give an averaged result after running a test/tests a 
number of times.

A sanity check would be appreciated ;-)

Thanks

Gareth

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistedbench.patch
URL: </pipermail/twisted-python/attachments/20030613/327a0a69/attachment.ksh>

From acohen at hyperfeed.com  Fri Jun 13 14:03:15 2003
From: acohen at hyperfeed.com (Andrew Cohen)
Date: Fri, 13 Jun 2003 15:03:15 -0500
Subject: [Twisted-Python] Jython
Message-ID: <21F861D3150ED2118B7F00805F65122D045CE953@exchsrv2.hyperfeed.com>

I'd like to run twisted under Jython.  Any hope? 
a.
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030613/050d1ea9/attachment.html>

From glyph at twistedmatrix.com  Fri Jun 13 14:19:19 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jun 2003 15:19:19 -0500
Subject: [Twisted-Python] Jython
In-Reply-To: <21F861D3150ED2118B7F00805F65122D045CE953@exchsrv2.hyperfeed.com>
Message-ID: <5008DF04-9DDC-11D7-B3BA-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 03:03 PM, Andrew Cohen wrote:

> I'd like to run twisted under Jython.  Any hope? 

You will need CVS jython, you can't use jythonc, and you will probably 
need to spend a little time fixing bugs.  Nobody is really maintaining 
this support any more, and since we are using python2.2 now, there are 
some places it is clearly incompatible.




From justinjohnson at fastmail.fm  Fri Jun 13 14:24:41 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 14:24:41 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <3EEA20EF.5070808@omnipotent.net>
References: <3EEA20EF.5070808@omnipotent.net>
Message-ID: <20030613202441.0EC4834532@www.fastmail.fm>

Hi,

I wrote an xmlrpc service using twisted for the server portion but using
xmlrpclib on the client side to connect.  It is working beautifully, and
greatly simplifying my job.  However, now I decided that I'd like to take
advantage of Deferred's on the client side so that I can initiate
multiple requests at once.  These requests involve doing something on one
server, and then something on another if the first thing was successful. 
It seems like I'd have quite a chain of callbacks, but maybe this is
normal.  Below I posted the relevant code snippets of what I'm currently
doing on the client side.

Do I need to define methods for every step in the chain?  Would someone
mind giving me advice on how something like this should be written?

Thanks much.
-Justin



def connectToServer(server):
	# s = xmlrpclib.Server('http://%s:%s/' % (server, config.portNumber) )
	s = xmlrpclib.ServerProxy('http://%s:%s' % (server, config.portNumber), BasicAuthTransport(config.adminUser,config.adminPassword))
	return s

# Subcommand: mkvob
def doMkvob2(options):
	original_site = options["original"]
	group = options["group"]
	vobs = options["vobs"].split(",")
	sites = options["sites"].split(",")

	#s = connectToServer(config.siteToServer[original_site])
	#s = connectToTwistedServer(config.siteToServer[original_site])
	s = xmlrpclib.ServerProxy('http://%s:%s' % (server, config.portNumber), BasicAuthTransport(config.adminUser,config.adminPassword))

	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
	print "Calling remote mkvob ..."
	results = s.mkvob(vobs, group)
	results += s.mkReplicaExport(vobs,sites)
	results += s.renameReplica(vobs, "original", original_site)
	results += s.exportReplica(vobs,sites)
	for site in sites:
		thatServer = connectToServer(config.siteToServer[site])
		results += thatServer.mkReplicaImport(vobs)
		results += thatServer.importReplica(vobs)
		results += thatServer.applyTriggers(vobs)
	print "[output]\n%s[/output]" % results



From itamar at itamarst.org  Fri Jun 13 14:28:30 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 16:28:30 -0400
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613202441.0EC4834532@www.fastmail.fm>
References: <3EEA20EF.5070808@omnipotent.net>
	<20030613202441.0EC4834532@www.fastmail.fm>
Message-ID: <20030613162830.2ea3ac43.itamar@itamarst.org>

On Fri, 13 Jun 2003 14:24:41 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> I wrote an xmlrpc service using twisted for the server portion but
> using xmlrpclib on the client side to connect.  It is working
> beautifully, and greatly simplifying my job.  However, now I decided
> that I'd like to take advantage of Deferred's on the client side so
> that I can initiate multiple requests at once.  These requests involve
> doing something on one

Using Deferreds wont magically make requests run at once. You'd need to
use twisted event loop - i.e. the reactor - on the client side. xmlrpc
requests would need to be run by the xmlrpc client support in
twisted.web.xmlrpc, e.g.:

d = xmlrpc.Proxy("http://localhost:8080/").callRemote("foo.bar", 1, 2)
instead of 
xmlrpclib.ServerProxy("http://localhost:8080").foo.bar(1, 2)

For callbacks, yes, you need to use a function, bit that can be a lmbda
too.

d.addCallback(int).addCallback(lambda x: x*2) # convert to int and
multiply by 2

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jun 13 14:52:52 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 14:52:52 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613162830.2ea3ac43.itamar@itamarst.org>
References: <3EEA20EF.5070808@omnipotent.net>
 	<20030613202441.0EC4834532@www.fastmail.fm> <20030613162830.2ea3ac43.itamar@itamarst.org>
Message-ID: <20030613205252.8B7263357A@www.fastmail.fm>

> d = xmlrpc.Proxy("http://localhost:8080/").callRemote("foo.bar", 1, 2)
> instead of 
> xmlrpclib.ServerProxy("http://localhost:8080").foo.bar(1, 2)

Okay, that's what I thought.  I was more wondering about the callbacks.
 
> For callbacks, yes, you need to use a function, bit that can be a lmbda
> too.
> 
> d.addCallback(int).addCallback(lambda x: x*2) # convert to int and
> multiply by 2

What is the difference between chaining callbacks together like you did
above and doing it like...

d.addCallback(int)
d.addCallback(lambda x: x*2)

I apologize, I am in the process of reading the Deferred HOWTO, and
should've finished before posting.  :-(
-Justin



From itamar at itamarst.org  Fri Jun 13 15:24:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Jun 2003 17:24:18 -0400
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613205252.8B7263357A@www.fastmail.fm>
References: <3EEA20EF.5070808@omnipotent.net>
	<20030613202441.0EC4834532@www.fastmail.fm>
	<20030613162830.2ea3ac43.itamar@itamarst.org>
	<20030613205252.8B7263357A@www.fastmail.fm>
Message-ID: <20030613172418.49b039b9.itamar@itamarst.org>

On Fri, 13 Jun 2003 14:52:52 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> What is the difference between chaining callbacks together like you
> did above and doing it like...
> 
> d.addCallback(int)
> d.addCallback(lambda x: x*2)

It's identical. d.addCallback(f) returns d.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jun 13 17:37:03 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 13 Jun 2003 17:37:03 -0600
Subject: [Twisted-Python] callback style question
In-Reply-To: <20030613172418.49b039b9.itamar@itamarst.org>
References: <3EEA20EF.5070808@omnipotent.net>
 	<20030613202441.0EC4834532@www.fastmail.fm>
 	<20030613162830.2ea3ac43.itamar@itamarst.org>
 	<20030613205252.8B7263357A@www.fastmail.fm> <20030613172418.49b039b9.itamar@itamarst.org>
Message-ID: <20030613233703.2C0703422B@www.fastmail.fm>

Okay, thanks.

On Fri, 13 Jun 2003 17:24:18 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Fri, 13 Jun 2003 14:52:52 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > What is the difference between chaining callbacks together like you
> > did above and doing it like...
> > 
> > d.addCallback(int)
> > d.addCallback(lambda x: x*2)
> 
> It's identical. d.addCallback(f) returns d.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From dkuhlman at cutter.rexx.com  Fri Jun 13 18:05:36 2003
From: dkuhlman at cutter.rexx.com (Dave Kuhlman)
Date: Fri, 13 Jun 2003 17:05:36 -0700
Subject: [Twisted-Python] Start-up code and passing its results
Message-ID: <20030613170536.A92693@cutter.rexx.com>

Here is a seemingly simple question.  But after searching the docs,
I still haven't figure it out.

How do I write some start-up code for a Web app, then pass values
from the start-up code to objects that respond to requests?  In
particular, how do I create a DB ConnectionPool, then pass that to
the implementation of a Web page?

If the above question made sense, ignore the following.  It's more
struggling with the same problem.

I'm learning Twisted.  I've made quite a bit of progress, although
I'm slower than most.  I've been able to build a small sample Web
application.  I like what I find in Twisted so far.

After some digging, I've been able to use
enterprise.adbapi.ConnectionPool in one of my Web pages.  But,
when I look in my log file, I see the messages "Connecting to
database: pyPgSQL.PgSQL" and "adbapi connecting: pyPgSQL.PgSQL"
for *every* time I visit that Web page.  That makes me think that
I'm creating a new connection every time I deliver that Web page,
which, of course, a connection pool should eliminate.  Am I right?

So, what am I doing wrong?  I'm guessing that I should not be
running the following statement every time I deliver this Web page:

    dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL",
        "localhost:5432:test:postgres:mypassword")

So, my question is: Where do I put the above statement?  And, how
do I share the same dbpool across delivery of that Web page and
across all sessions in my Web application?

By the way, I created my Twisted application with the following:

  mktap web --path Test1 --processor=.rtl=twisted.web.script.ResourceTemplate

And, I start up my server with the fillowing:

  twistd -f web.tap

Am I supposed to run mktap with the "--type=source" option, and
then create the connection pool in the resulting .tas file?  If so:

  1. How do I add code to the .tas file?  How do I get it called
    during start-up?

  2. How do I pass the dbpool (or any variable) to the Web page?

Another way of asking this question is: How do I execute code at
server start-up?  And, how do I make the results of that start-up
code available to the various parts of my application, in
particular to a Python module that implements the response to a
request?

Or, am I trying to do things the non-Twisted way?  If so, how do I
learn the Twisted way?

  - Dave

-- 
Dave Kuhlman
dkuhlman at rexx.com
http://www.rexx.com/~dkuhlman



From andrew-twisted at puzzling.org  Sat Jun 14 01:47:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 14 Jun 2003 17:47:06 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <E19QtXn-0001Ku-00@pyramid.twistedmatrix.com>
References: <E19QtXn-0001Ku-00@pyramid.twistedmatrix.com>
Message-ID: <20030614074706.GA17652@frobozz>

On Fri, Jun 13, 2003 at 01:44:59PM -0500, dp CVS wrote:
> Modified files:
> Twisted/twisted/trial/runner.py 1.4 1.5
> 
> Log message:
> Small hack that I need for the beginnings of my woven functional testing
> framework; hopefully this can be removed sometime later
[...]
>  
>      def runTests(self, output):
>          self.testCase = self.testClass()
> +        self.testCase.output = output
>          self.testCase.setUpClass()
>          for methodName in self.methodNames:
>              method = getattr(self.testCase, methodName)

This change broke 2 tests in Twisted that already used that attribute.
Should we change the tests, or this hack?  What is it for, anyway?

Oh, and please run tests before you checkin, this isn't the only thing that
has been broken recently.

-Andrew.




From dp at twistedmatrix.com  Sat Jun 14 18:27:07 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 14 Jun 2003 20:27:07 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <20030614074706.GA17652@frobozz>
Message-ID: <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>

On Saturday, June 14, 2003, at 03:47 AM, Andrew Bennetts wrote:
>
> This change broke 2 tests in Twisted that already used that attribute.
> Should we change the tests, or this hack?  What is it for, anyway?

Thanks for catching this. We should change the hack. The hack is so I 
can create and run a second TestSuite inside a UnitTest, so that the 
entire second TestSuite can run between the first UnitTest's setUp and 
tearDown. It's in Divmod/divmod/web/functionaltester.py

Feedback on how to do this better would be greatly appreciated...

> Oh, and please run tests before you checkin, this isn't the only thing 
> that
> has been broken recently.

I did run the tests before I checked in and it wasn't obvious that my 
changes had broken anything. There were broken tests, but I didn't 
realize they were my fault. Sorry.

dp




From andrew-twisted at puzzling.org  Sat Jun 14 20:14:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 15 Jun 2003 12:14:12 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small hack that I need for the beginnings of my woven functional testing
In-Reply-To: <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>
References: <20030614074706.GA17652@frobozz> <18DC8C18-9EC8-11D7-ACE8-000A95864FC4@twistedmatrix.com>
Message-ID: <20030615021412.GB23100@frobozz>

On Sat, Jun 14, 2003 at 08:27:07PM -0400, Donovan Preston wrote:
> 
> On Saturday, June 14, 2003, at 03:47 AM, Andrew Bennetts wrote:
> >
> >This change broke 2 tests in Twisted that already used that attribute.
> >Should we change the tests, or this hack?  What is it for, anyway?
> 
> Thanks for catching this. We should change the hack. The hack is so I 

I didn't catch this -- BuildBot did! :)

> can create and run a second TestSuite inside a UnitTest, so that the 
> entire second TestSuite can run between the first UnitTest's setUp and 
> tearDown. It's in Divmod/divmod/web/functionaltester.py
> 
> Feedback on how to do this better would be greatly appreciated...

[I'll let someone more qualified answer this]

> >Oh, and please run tests before you checkin, this isn't the only thing
> >that has been broken recently.
> 
> I did run the tests before I checked in and it wasn't obvious that my 
> changes had broken anything. There were broken tests, but I didn't 
> realize they were my fault. Sorry.

If checking against a clean checkout is too slow, I suggest checking against
BuildBot... have I mentioned today how much I love BuildBot?  :)

-Andrew.




From nicholas_wieland at yahoo.it  Sun Jun 15 08:09:02 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 16:09:02 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
Message-ID: <20030615140902.GA860@yahoo.it>

Hi,
    I want to implement a Native XML database in Python, so, after
    having used TM for a little work a pair of months ago, I'm thinking
    about using Twisted Matrix and implementing it as a plugin.
    All I need (at this stage) is a persistent DOM for storing XML files
    on disk instead of keeping them in memory.
    I need a little help, I don't want to reinvent the weel, I'd like a
    suggestion about where to look from you Twisted gurus :-]
    Twisted.persisted ?
    
TIA,
	nicholas



From radix at twistedmatrix.com  Sun Jun 15 09:03:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 15 Jun 2003 11:03:49 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615140902.GA860@yahoo.it>; from nicholas_wieland@yahoo.it on Sun, Jun 15, 2003 at 10:09:02 -0400
References: <20030615140902.GA860@yahoo.it>
Message-ID: <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>

On 2003.06.15 10:09, N. Wieland wrote:
> Hi,
>     I want to implement a Native XML database in Python, so, after

What do you mean by "XML database"?

>     having used TM for a little work a pair of months ago, I'm thinking
>     about using Twisted Matrix and implementing it as a plugin.
>     All I need (at this stage) is a persistent DOM for storing XML files
>     on disk instead of keeping them in memory.
>     I need a little help, I don't want to reinvent the weel, I'd like a
>     suggestion about where to look from you Twisted gurus :-]
>     Twisted.persisted ?

If you're looking to serialize arbitrary Python objects to XML, check out
twisted.persisted.marmalade

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nicholas_wieland at yahoo.it  Sun Jun 15 09:46:29 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 17:46:29 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net>
Message-ID: <20030615154629.GA483@yahoo.it>

- radix at twistedmatrix.com :
> 
> On 2003.06.15 10:09, N. Wieland wrote:
> > Hi,
> >     I want to implement a Native XML database in Python, so, after
> 
> What do you mean by "XML database"?

It's a database tailored exactly for storing XML documents.
Apache XIndice or SoftwareAG Tamino are two examples.
Here is an interesting doc about the topic:
http://www.rpbourret.com/xml/XMLAndDatabases.htm

> If you're looking to serialize arbitrary Python objects to XML, check out
> twisted.persisted.marmalade

Not a Python Object, an XML document.

Thanks,
	nicholas



From radix at twistedmatrix.com  Sun Jun 15 09:59:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 15 Jun 2003 11:59:37 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615154629.GA483@yahoo.it>; from nicholas_wieland@yahoo.it on Sun, Jun 15, 2003 at 11:46:29 -0400
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net> <20030615154629.GA483@yahoo.it>
Message-ID: <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>

On 2003.06.15 11:46, N. Wieland wrote:
> - radix at twistedmatrix.com :
> > 
> > On 2003.06.15 10:09, N. Wieland wrote:
> > > Hi,
> > >     I want to implement a Native XML database in Python, so, after
> > 
> > What do you mean by "XML database"?
> 
> It's a database tailored exactly for storing XML documents.
> Apache XIndice or SoftwareAG Tamino are two examples.
> Here is an interesting doc about the topic:
> http://www.rpbourret.com/xml/XMLAndDatabases.htm
> 
> > If you're looking to serialize arbitrary Python objects to XML, check out
> > twisted.persisted.marmalade
> 
> Not a Python Object, an XML document.

So it sounds like all you need is twisted.web.microdom, the "open" 
built-in python function, and the "write" method of file
objects. Or is there something else I'm missing? :)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nicholas_wieland at yahoo.it  Sun Jun 15 10:26:41 2003
From: nicholas_wieland at yahoo.it (N. Wieland)
Date: Sun, 15 Jun 2003 18:26:41 +0200
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>
References: <20030615140902.GA860@yahoo.it> <20030615150349.GA28003@toshi.anaprd01.md.comcast.net> <20030615154629.GA483@yahoo.it> <20030615155937.GC28003@toshi.anaprd01.md.comcast.net>
Message-ID: <20030615162641.GA615@yahoo.it>

- radix at twistedmatrix.com :
> snip > 
> > Not a Python Object, an XML document.
> 
> So it sounds like all you need is twisted.web.microdom, the "open" 
> built-in python function, and the "write" method of file
> objects. Or is there something else I'm missing? :)

I will start experimenting there.
Thank you very much, I hope coming out with something useful in a pair
of months...

	nicholas



From itamar at itamarst.org  Sun Jun 15 14:07:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Jun 2003 16:07:41 -0400
Subject: [Twisted-Python] Twisted Matrix and PDOM
In-Reply-To: <20030615140902.GA860@yahoo.it>
References: <20030615140902.GA860@yahoo.it>
Message-ID: <20030615160741.2dbf9dda.itamar@itamarst.org>

On Sun, 15 Jun 2003 16:09:02 +0200
"N. Wieland" <nicholas_wieland at yahoo.it> wrote:

>     I want to implement a Native XML database in Python, so, after

Martijn Faassen wrote one with ZODB, I think:
http://cvs.infrae.com/forest/

and maybe it has a homepage somwhere as well.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From vijay at accellion.com  Sun Jun 15 22:27:13 2003
From: vijay at accellion.com (Vijay Rao)
Date: Mon, 16 Jun 2003 09:57:13 +0530
Subject: [Twisted-Python] Custom webserver
Message-ID: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>

Hi ,

I am trying to use twisted as a webserver that serves files only for 
requests from the localhost ie the desktop on which it is running by 
mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on 
windows ) so that a particular type of URL is served from this webserver.

Can anyone help me with these :

1) How do I refuse to serve any request from any other machine on the 
network ( external or internal ) ie is there any way of finding out from 
where the request originated ( or is it possible to use something like 
.htaccess ) . Currently the directory listing is exposed to any other 
machine that can access the machine.

2) It is easy to set up a web.tap file using mktap web --path 
<pathtoRootDirectory> to serve files but I dont want to map the URL to a 
path on disk directly. Is it possible to override the getChild function of 
static.File ( which is doing the publishing part ) so that certain 
components of the URL can be ignored or re-mapped to a different path on 
local storage. I tried using a .rpy but that seems to be ignored as I guess 
that given the --path argument mktap creates a root Resource which is used 
by the application.

Thanks,
E.Vijay Rao
vijay at accellion.com
http://www.accellion.com








From stuart.hungerford at anu.edu.au  Sun Jun 15 23:04:49 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Mon, 16 Jun 2003 15:04:49 +1000
Subject: [Twisted-Python] Looking for web authentication examples...
In-Reply-To: <20030613113820.21210.36099.Mailman@pyramid.twistedmatrix.c
 om>
Message-ID: <5.2.0.9.0.20030616145856.00b96ad8@anusf.anu.edu.au>

Hi all,

I'm looking for any examples people might have on using
username/password authentication via Twisted.web.  I guess
it's the sort of example that would appear under the
"Authentication on the web" heading in the HOWTO's, when it's
completed.


Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From tv at twistedmatrix.com  Mon Jun 16 01:03:52 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 16 Jun 2003 10:03:52 +0300
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>
References: <5.1.0.14.0.20030614100059.02541708@131.103.204.244>
Message-ID: <20030616070352.GA25823@lapdog>

On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> I am trying to use twisted as a webserver that serves files only for 
> requests from the localhost ie the desktop on which it is running by 
> mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on 
> windows ) so that a particular type of URL is served from this webserver.

	Easiest way is to make it bind to 127.0.0.1. There's currently
	no support in mktap web for this, though there really should
	be.

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Mon Jun 16 04:28:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 05:28:46 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
Message-ID: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>

There are some new modules in CVS right now, and I would like some 
feedback on them.

The modules in question are a sketch of The Wave of the Future of 
authentication in Twisted, A.K.A. "New Cred".  A good place to start 
looking is sandbox/webhappyrealm.py

Unfortunately, this sets a bad precedent, since old cred was 
"semi-stable".  However, I think that the break with declared stability 
is a small price to pay for the _VASTLY_ improved interfaces which this 
package provides.  Since not too many people were using the old cred 
deeply, and the new interfaces are much smaller, hopefully we can 
migrate to the new code as quickly as possible.

Of course, no new Twisted functionality would be complete without a 
byzantine new set of terms.  In this case, the terms are hopefully more 
descriptive and more memorable; as a bonus, they do not conflict with 
the old names, so we can keep both versions of cred on-line until such 
time as the deprecation warnings can be resolved.

This message is primarily about those new names.  I hope that this 
provides enough fodder for someone with more time to produce a 
nice-looking HOWTO.  Without further ado, here are the new words you 
need to integrate into your basal nervous system:


#############################

Portal
======

This is the ineffable mystery at the core of login.  There is one 
concrete implementation of Portal, and no interface - it does a very 
simple task.  A Portal associates one (1) Realm with a collection of 
CredentialChecker instances.  (More on those later.)

The closest analogue of this in Old Cred was the Authorizer.

If you are writing a protocol that needs to authenticate against 
something, you will need a reference to a Portal, and to nothing else.  
This has only 2 methods -

	login(credentials, mind, *interfaces)

The docstring is quite expansive (see twisted.cred.portal), but in 
brief, this is what you call when you need to call in order to connect 
a user to the system.  The result is a deferred which fires a tuple of:

	- interface (which was one of the interfaces passed in the *interfaces 
tuple)
	- an object that implements that interface (an Aspect of an Avatar)	- 
logout, a 0-argument callable which disconnects the connection that was 
established by this call to login

	registerChecker(checker, *credentialInterfaces)

which adds a CredentialChecker to the portal.

Mind
====

Masters of Perspective Broker already know this object as the ill-named 
"client object".  There is no "mind" class, or even interface, but it 
is an object which serves an important role - any notifications which 
are to be relayed to an authenticated client are passed through a 
'mind'.

The name may seem rather unusual, but considering that a Mind is 
representative of the entity on the "other end" of a network connection 
that is both receiving updates and issuing commands, I believe it is 
appropriate.

Although many protocols will not use this, it serves an important role. 
  It is provided as an argument both to the Portal and to the Realm, 
although a CredentialChecker should interact with a client program 
exclusively through a Credentials instance.

Unlike the original Perspective Broker "client object", a Mind's 
implementation is most often dictated by the protocol that is 
connecting rather than the Realm.  A Realm which requires a particular 
interface to issue notifications will need to wrap the Protocol's mind 
implementation with an adapter in order to get one that conforms to its 
expected interface - however, Perspective Broker will likely continue 
to use the model where the client object has a pre-specified remote 
interface.

(If you don't quite understand this, it's fine.  It's hard to explain, 
and it's not used in simple usages of cred, so feel free to pass None 
until you find yourself requiring something like this.)

CredentialChecker
=================

This is an object which resolves some Credentials to an avatar ID.  
Some examples of CredentialChecker implementations would be: 
InMemoryUsernamePassword, ApacheStyleHTAccessFile, 
UNIXPasswordDatabase, SSHPublicKeyChecker.  A credential checker 
stipulates some requirements of the credentials it can check by 
specifying a credentialInterfaces attribute, which is a list of 
interfaces.  Credentials passed to its requestAvatarId method must 
implement one of those interfaces.

For the most part, these things will just check usernames and passwords 
and produce the username as the result, but hopefully we will be seeing 
some public-key, challenge-response, and certificate based credential 
checker mechanisms soon.  (If somebody were to write an 
ActiveDirectory-compatible LDAP login, they would be my best friend for 
EVER.)

A credential checker should raise an error if it cannot authenticate 
the user, and return '' for anonymous access.

Credentials
===========

Oddly enough, this represents some credentials that the user presents.  
Usually this will just be a small static blob of data, but in some 
cases it will actually be an object connected to a network protocol.  
For example, a username/password pair is static, but a 
challenge/response server is an active state-machine that will require 
several method calls in order to determine a result.

Realm
=====

A realm is an interface which connects your universe of "business 
objects" to the authentication system.  This is similar to the Old Cred 
"Service", but the name "Service" will be phased out when referring to 
cred - another planned refactoring is to move 
twisted.internet.app.ApplicationService into its own module and more 
heavily emphasize its use in start-up and shut-down.

IRealm is another one-method interface:

	requestAvatar(avatarId, mind, *interfaces)

This method will typically be called from 'Portal.login'.  The avatarId 
is the one returned by a CredentialChecker.

The important thing to realize about this method is that if it is being 
called, _the user has already authenticated_.  Therefore, if possible, 
the Realm should create a new user if one does not already exist 
whenever possible.  Of course, sometimes this will be impossible 
without more information, and that is the case that the interfaces 
argument is for.

Some protocols can only accept a fixed set of interfaces.  However, 
others (most notably PB) can deal with more arbitrary data being 
returned.  An online game may call Portal.login with:

     login(PBChallengeResponse(...), clientSideThingy,
           IServerPlayerInWorld, IUserChooser, ICharacterCreationThing)

This specifies that the client would most prefer a player in the world, 
but, failing that, a UserChooser (selection interface for a second step 
to get a PlayerInWorld) or a CharacterCreationThing (interface to 
create a new character in the world before returning it) would be 
acceptable.

Since requestAvatar should be called from a Deferred callback, it may 
return a Deferred or a synchronous result.

At the moment, there is only an interface for the Realm.  However, it 
is expected that a utility class will be written in the near future to 
facilitate log-in methods, a re-directing method similar to 
"Perspective.attached" for Avatars, and at least somewhat automated 
compositing of Realms.  However, in writing the code for cred and 
guard, there has been no need for such a thing yet.

Avatar
======

This object has the dubious distinction of appearing nowhere in the 
code; in fact, very few things will ever touch an actual Avatar, and it 
is not clear that it will have an interface.  However, _aspects_ of an 
avatar are returned in deferreds from the above methods, which is to 
say, things that implement particular interfaces which communicate with 
various protocols that may access your Realm.

This is (hopefully, obviously) similar to a 'Perspective'.  However, an 
Avatar separates 2 concerns which were muddied previously - _access_ to 
a realm and _storage of user data_ within a realm.  The avatar itself 
stores the data, and the aspects interface to it.  The avatar itself 
may of course implement its own aspects, but it is suggested in most 
cases to register adapters that do this.  (Perspective Broker will keep 
its name, because the Avatar Aspect that communicates with the remote 
object protocol will still be called a Perspective.)

#############################


While it's understandable to want to wait for this interface to fully 
stabilize, we suggest that you start porting code to it _now_, 
especially if you're already tracking CVS.  The old cred was, through 
the continued efforts of many developers, experimentally determined to 
be a piece of crap.  I humbly suggest that this interface is not only 
not a piece of crap, but totally awesome, and actually usable in real 
applications.  Not only is it a vastly better design, it makes use of 
Deferreds in such a way that it is almost effortless to provide or 
manipulate an implementation of one of these interfaces.  (As a 
yardstick, the code for woven.guard was 30% shorter and the example was 
almost unmeasureably shorter - sandbox/webhappyrealm.py is already 
doing things that were impossible under the old model.)

I hope this explanation was helpful.  Please give feedback.




From glyph at twistedmatrix.com  Mon Jun 16 04:30:45 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 05:30:45 -0500
Subject: [Twisted-Python] Looking for web authentication examples...
In-Reply-To: <5.2.0.9.0.20030616145856.00b96ad8@anusf.anu.edu.au>
Message-ID: <96EC6FA4-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Monday, June 16, 2003, at 12:04 AM, Stuart Hungerford wrote:

> I'm looking for any examples people might have on using
> username/password authentication via Twisted.web

I would encourage you to look at the other message I just posted to the 
list, "Lies, Damn Lies, and Stable Interfaces".  While unfortunately 
unstable, the New Cred stuff is already hooked up to web authentication 
and will almost certainly be a more pleasant ride (bumps and all) than 
the current situation with web-based auth.




From m at moshez.org  Mon Jun 16 05:06:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jun 2003 11:06:21 -0000
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <20030616110621.25109.qmail@green.zadka.com>

On Mon, 16 Jun 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 	login(credentials, mind, *interfaces)
> 
> The docstring is quite expansive (see twisted.cred.portal), but in 
> brief, this is what you call when you need to call in order to connect 
> a user to the system.  The result is a deferred which fires a tuple of:
<snip>

I'm guessing that is only true if the login succeeds?
In particular, if the callback is true, am I guaranteed the login
was approved? And if it isn't, will an errback be fired?
[context: I am trying to write a simple HTTP authenticator. I don't
give a damn who the user is, but I want to make sure he's in my
password file]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Mon Jun 16 05:33:38 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 06:33:38 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030616110621.25109.qmail@green.zadka.com>
Message-ID: <5FA921BE-9FEE-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Monday, June 16, 2003, at 06:06 AM, Moshe Zadka wrote:

> I'm guessing that is only true if the login succeeds?
> In particular, if the callback is true, am I guaranteed the login
> was approved? And if it isn't, will an errback be fired?

If the callback returns, the login was approved.  errbacks are fired, 
hopefully with defined values from twisted.cred.error, if the login has 
failed.

> [context: I am trying to write a simple HTTP authenticator. I don't
> give a damn who the user is, but I want to make sure he's in my
> password file]

Thank you.  We need HTTP auth.  Please try to use 
twisted.web.woven.guard.UsernamePasswordWrapper as an example...




From glyph at twistedmatrix.com  Mon Jun 16 05:45:24 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jun 2003 06:45:24 -0500
Subject: [Twisted-Python] Getting Rid of Application in a Compatible Way
In-Reply-To: <20030523070247.10334.qmail@green.zadka.com>
Message-ID: <042219E6-9FF0-11D7-A2AB-000393C9700E@twistedmatrix.com>

(This is in reply to a message sent last month, so apologies if it 
doesn't thread properly.)

On Friday, May 23, 2003, at 02:02 AM, Moshe Zadka wrote:

> class TCPListener(ApplicationService):

I want to implement this, and also to move ApplicationService into its 
own module and rename it (commensurate with cred changes) - 
twisted.internet.service.Service

>     def __init__(self, port, factory, backlog=5, interface='', *args, 
> **kwargs):
...
>     def startService(self):
>         ApplicationService.startService(self)
>         self._port = reactor.listenTCP(self.port, self.factory, 
> self.backlog,
>                                        self.interface)

This is great, except for the fact that UNIX likes to make it so that 
only root can bind ports, and that would be way too much work to run in 
a privileged mode.  We need to separate initializeService() (which runs 
with privileges) and startService() (which runs without).  This would 
replace bindPorts().

> TCPListener(8080, server.Site(resource), 
> "foo").setServiceParent(application)

The 'setServiceParent' seems a little unweildy.  Why not in the 
__init__?

> The only problem is needing to choose unique names.

Rather than use the opaque key you suggest, which would be potentially 
confusing to sysadmins, we could use a simple sequence number?  Putting 
sequence number generation into Application is probably not such a bad 
idea anyway.

I would really like this refactoring to happen soon, because 
Application is an ungodly mess.  So, to sum up -

	* move Service to new module
	* write TCPListenerService, SSLConnectService, etc
	* write backwards-compatible listen|connectTCP/SSL/etc
	* update _all_ uses of app.(listen|connect)(TCP|SSL|UNIX) in Twisted.
	* write upgrade function to upgrade Application's mutable state.

Does anybody feel like doing something like this?




From Martin.Moellenbeck at t-online.de  Mon Jun 16 15:19:39 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Mon, 16 Jun 2003 23:19:39 +0200
Subject: AW: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <000701c3344c$fef67770$0400a8c0@joshua>

Hi,

I have had a small look to the new package, looks coherent.

But isn't it better to provide a modul (maybe "interfaces.py") 
with all interfaces of the package?

Greeting
	Martin

-----Ursprüngliche Nachricht-----
Von: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag von Glyph
Lefkowitz
Gesendet: Montag, 16. Juni 2003 12:29
An: twisted-python at twistedmatrix.com
Betreff: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces


There are some new modules in CVS right now, and I would like some 
feedback on them.

The modules in question are a sketch of The Wave of the Future of 
authentication in Twisted, A.K.A. "New Cred".  A good place to start 
looking is sandbox/webhappyrealm.py

Unfortunately, this sets a bad precedent, since old cred was 
"semi-stable".  However, I think that the break with declared stability 
is a small price to pay for the _VASTLY_ improved interfaces which this 
package provides.  Since not too many people were using the old cred 
deeply, and the new interfaces are much smaller, hopefully we can 
migrate to the new code as quickly as possible.

Of course, no new Twisted functionality would be complete without a 
byzantine new set of terms.  In this case, the terms are hopefully more 
descriptive and more memorable; as a bonus, they do not conflict with 
the old names, so we can keep both versions of cred on-line until such 
time as the deprecation warnings can be resolved.

This message is primarily about those new names.  I hope that this 
provides enough fodder for someone with more time to produce a 
nice-looking HOWTO.  Without further ado, here are the new words you 
need to integrate into your basal nervous system:


#############################

Portal
======

This is the ineffable mystery at the core of login.  There is one 
concrete implementation of Portal, and no interface - it does a very 
simple task.  A Portal associates one (1) Realm with a collection of 
CredentialChecker instances.  (More on those later.)

The closest analogue of this in Old Cred was the Authorizer.

If you are writing a protocol that needs to authenticate against 
something, you will need a reference to a Portal, and to nothing else.  
This has only 2 methods -

	login(credentials, mind, *interfaces)

The docstring is quite expansive (see twisted.cred.portal), but in 
brief, this is what you call when you need to call in order to connect 
a user to the system.  The result is a deferred which fires a tuple of:

	- interface (which was one of the interfaces passed in the
*interfaces 
tuple)
	- an object that implements that interface (an Aspect of an
Avatar)	- 
logout, a 0-argument callable which disconnects the connection that was 
established by this call to login

	registerChecker(checker, *credentialInterfaces)

which adds a CredentialChecker to the portal.

Mind
====

Masters of Perspective Broker already know this object as the ill-named 
"client object".  There is no "mind" class, or even interface, but it 
is an object which serves an important role - any notifications which 
are to be relayed to an authenticated client are passed through a 
'mind'.

The name may seem rather unusual, but considering that a Mind is 
representative of the entity on the "other end" of a network connection 
that is both receiving updates and issuing commands, I believe it is 
appropriate.

Although many protocols will not use this, it serves an important role. 
  It is provided as an argument both to the Portal and to the Realm, 
although a CredentialChecker should interact with a client program 
exclusively through a Credentials instance.

Unlike the original Perspective Broker "client object", a Mind's 
implementation is most often dictated by the protocol that is 
connecting rather than the Realm.  A Realm which requires a particular 
interface to issue notifications will need to wrap the Protocol's mind 
implementation with an adapter in order to get one that conforms to its 
expected interface - however, Perspective Broker will likely continue 
to use the model where the client object has a pre-specified remote 
interface.

(If you don't quite understand this, it's fine.  It's hard to explain, 
and it's not used in simple usages of cred, so feel free to pass None 
until you find yourself requiring something like this.)

CredentialChecker
=================

This is an object which resolves some Credentials to an avatar ID.  
Some examples of CredentialChecker implementations would be: 
InMemoryUsernamePassword, ApacheStyleHTAccessFile, 
UNIXPasswordDatabase, SSHPublicKeyChecker.  A credential checker 
stipulates some requirements of the credentials it can check by 
specifying a credentialInterfaces attribute, which is a list of 
interfaces.  Credentials passed to its requestAvatarId method must 
implement one of those interfaces.

For the most part, these things will just check usernames and passwords 
and produce the username as the result, but hopefully we will be seeing 
some public-key, challenge-response, and certificate based credential 
checker mechanisms soon.  (If somebody were to write an 
ActiveDirectory-compatible LDAP login, they would be my best friend for 
EVER.)

A credential checker should raise an error if it cannot authenticate 
the user, and return '' for anonymous access.

Credentials
===========

Oddly enough, this represents some credentials that the user presents.  
Usually this will just be a small static blob of data, but in some 
cases it will actually be an object connected to a network protocol.  
For example, a username/password pair is static, but a 
challenge/response server is an active state-machine that will require 
several method calls in order to determine a result.

Realm
=====

A realm is an interface which connects your universe of "business 
objects" to the authentication system.  This is similar to the Old Cred 
"Service", but the name "Service" will be phased out when referring to 
cred - another planned refactoring is to move 
twisted.internet.app.ApplicationService into its own module and more 
heavily emphasize its use in start-up and shut-down.

IRealm is another one-method interface:

	requestAvatar(avatarId, mind, *interfaces)

This method will typically be called from 'Portal.login'.  The avatarId 
is the one returned by a CredentialChecker.

The important thing to realize about this method is that if it is being 
called, _the user has already authenticated_.  Therefore, if possible, 
the Realm should create a new user if one does not already exist 
whenever possible.  Of course, sometimes this will be impossible 
without more information, and that is the case that the interfaces 
argument is for.

Some protocols can only accept a fixed set of interfaces.  However, 
others (most notably PB) can deal with more arbitrary data being 
returned.  An online game may call Portal.login with:

     login(PBChallengeResponse(...), clientSideThingy,
           IServerPlayerInWorld, IUserChooser, ICharacterCreationThing)

This specifies that the client would most prefer a player in the world, 
but, failing that, a UserChooser (selection interface for a second step 
to get a PlayerInWorld) or a CharacterCreationThing (interface to 
create a new character in the world before returning it) would be 
acceptable.

Since requestAvatar should be called from a Deferred callback, it may 
return a Deferred or a synchronous result.

At the moment, there is only an interface for the Realm.  However, it 
is expected that a utility class will be written in the near future to 
facilitate log-in methods, a re-directing method similar to 
"Perspective.attached" for Avatars, and at least somewhat automated 
compositing of Realms.  However, in writing the code for cred and 
guard, there has been no need for such a thing yet.

Avatar
======

This object has the dubious distinction of appearing nowhere in the 
code; in fact, very few things will ever touch an actual Avatar, and it 
is not clear that it will have an interface.  However, _aspects_ of an 
avatar are returned in deferreds from the above methods, which is to 
say, things that implement particular interfaces which communicate with 
various protocols that may access your Realm.

This is (hopefully, obviously) similar to a 'Perspective'.  However, an 
Avatar separates 2 concerns which were muddied previously - _access_ to 
a realm and _storage of user data_ within a realm.  The avatar itself 
stores the data, and the aspects interface to it.  The avatar itself 
may of course implement its own aspects, but it is suggested in most 
cases to register adapters that do this.  (Perspective Broker will keep 
its name, because the Avatar Aspect that communicates with the remote 
object protocol will still be called a Perspective.)

#############################


While it's understandable to want to wait for this interface to fully 
stabilize, we suggest that you start porting code to it _now_, 
especially if you're already tracking CVS.  The old cred was, through 
the continued efforts of many developers, experimentally determined to 
be a piece of crap.  I humbly suggest that this interface is not only 
not a piece of crap, but totally awesome, and actually usable in real 
applications.  Not only is it a vastly better design, it makes use of 
Deferreds in such a way that it is almost effortless to provide or 
manipulate an implementation of one of these interfaces.  (As a 
yardstick, the code for woven.guard was 30% shorter and the example was 
almost unmeasureably shorter - sandbox/webhappyrealm.py is already 
doing things that were impossible under the old model.)

I hope this explanation was helpful.  Please give feedback.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From warner at lothar.com  Mon Jun 16 15:51:06 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 16 Jun 2003 14:51:06 -0700 (PDT)
Subject: [Twisted-Python] Twisted cred perspective unicode support
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
Message-ID: <20030616.145106.07639583.warner@lothar.com>

<rdrb at 123.cl> writes:

> I got problems using Twisted cred with Python2.2.0.
> My perspectives names are based on a url encoding.
> I have found that there is a problem when PerspectiveName is  unicode.

I've committed your fix into CVS, along with some new test cases. Thanks for
the patch!

I did some other s/types.StringType/types.StringTypes/ elsewhere in
twisted.cred.perspective too.

thanks,
 -Brian



From itamar at itamarst.org  Mon Jun 16 16:04:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 16 Jun 2003 18:04:58 -0400
Subject: [Twisted-Python] Twisted cred perspective unicode support
In-Reply-To: <20030616.145106.07639583.warner@lothar.com>
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
	<20030616.145106.07639583.warner@lothar.com>
Message-ID: <20030616180458.5e6bedfc.itamar@itamarst.org>

On Mon, 16 Jun 2003 14:51:06 -0700 (PDT)
Brian Warner <warner at lothar.com> wrote:

> > I got problems using Twisted cred with Python2.2.0.
> > My perspectives names are based on a url encoding.
> > I have found that there is a problem when PerspectiveName is 
> > unicode.
> 
> I've committed your fix into CVS, along with some new test cases.
> Thanks for the patch!

The patch should probably be reverted. The perspective name etc. should
always be a string because the storage you use for it may have no notion
of unicode. If you want to use unicode there they should just be UTF-8ed
anyway.

However, we now have a new cred, so this doesn't really matter. But, you
shouldn't be making *any* changes to old cred if at all possible. Any
uses cases should be made to fit new cred.

In new cred, avatar ids *must* be 8-bit strings. For a username a user
might type in, i.e. credentials, you could write a specific credentials
interface that supports unicode credentials and an associated checker.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jun 16 16:25:23 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 16 Jun 2003 15:25:23 -0700 (PDT)
Subject: [Twisted-Python] Twisted cred perspective unicode support
References: <20030610032249.MBGF4806.mta3@mta3.real.mail.entelchile.net>
 <20030616.145106.07639583.warner@lothar.com>
 <20030616180458.5e6bedfc.itamar@itamarst.org>
Message-ID: <20030616.152523.122258763.warner@lothar.com>

> The patch should probably be reverted. The perspective name etc. should
> always be a string because the storage you use for it may have no notion
> of unicode. If you want to use unicode there they should just be UTF-8ed
> anyway.

*nod*. I've just reverted it. Sorry RodrigoB, look to itamar's suggestions
for some possibilities.

thanks,
 -Brian



From paul at soniq.net  Thu Jun 12 15:40:31 2003
From: paul at soniq.net (Paul Boehm)
Date: Thu, 12 Jun 2003 23:40:31 +0200
Subject: [Twisted-Python] distrib.UserDirectory improvements
Message-ID: <20030612214031.GA20191@soniq.net>

hi,
moshez suggested me to extend distrib.UserDirectory for my needs.
attached is what i am using right now. 

i hope to integrate this into distrib.py for cvs, later.
please give me feedback!

  paul
-------------- next part --------------
from twisted.web import widgets, static
from twisted.web.distrib import *
import os

if (os.sys.platform != 'win32') and (os.name != 'java'):
        import pwd

# Lines below this, can be merged into distrib.py

def createUserPath(homedir, username, dirname, subdir=''):
    if dirname[0:1] == '~':
        userpath = os.path.join(homedir, dirname[1:])
    else:
        userpath = os.path.join(dirname, username, subdir)

    return userpath

class UserDirectory(widgets.Gadget, widgets.StreamWidget):
    def __init__(self, userDirName='~/public_html', 
                 userSocketName='~/.twistd-web-pb', pbextension='.twistd'):
        widgets.Gadget.__init__(self)

        self.userDirName = userDirName
        self.userSocketName = userSocketName
        self.pbextension = pbextension

    def stream(self, write, request):
        write('<UL>\n')
        for user in pwd.getpwall():
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = user
            realname = string.split(pw_gecos,',')[0]
            if not realname:
                realname = pw_name
            fmtStr = '<LI><A HREF="%s/">%s (%s)</a>\n'
            userdirpath = createUserPath(pw_dir, pw_name, self.userDirName)
            if os.path.exists(userdirpath):
                write(fmtStr% (pw_name,realname,'file'))
            twistdsock = createUserPath(pw_dir, pw_name, 
                                        self.userSocketName, "twistd-web-pb")
            if os.path.exists(twistdsock):
                linknm = '%s%s' % (pw_name, self.pbextension)
                write(fmtStr % (linknm, realname, self.pbextension))
        write('</UL>\n')

    def getWidget(self, chnam, request):
        print "x"
        if chnam[-len(self.pbextension):] == self.pbextension:
            username = chnam[:-len(self.pbextension)]
            sub = 1
        else:
            username = chnam
            sub = 0

        try:
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = pwd.getpwnam(username)
        except KeyError:
            return error.NoResource()

        if sub:
            userpath = createUserPath(pw_dir, username, self.userSocketName,
                                        "twistd-web-pb")
            rs = ResourceSubscription('unix', userpath)
            self.putChild(chnam, rs)
            return rs
        else:
            userpath = createUserPath(pw_dir, username, self.userDirName)
            return static.File(userpath)

From eokyere at cox.net  Thu Jun 12 18:00:54 2003
From: eokyere at cox.net (e okyere)
Date: Thu, 12 Jun 2003 20:00:54 -0400
Subject: [Twisted-Python] socket communications in flash
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAalgyXu+u5Uq1Y9Yg3Mk7A8KAAAAQAAAAsHaPPOlOLUezyQszchWbAwEAAAAA@cox.net>

Hello:

I am looking at doing low-level sock comms with flash mx and hopefully c++
and upon hitting this thread: 

http://twistedmatrix.com/pipermail/twisted-python/2002-May/001121.html

thought I should contact you to see if you have any experience in that line.
If so, I'd appreciate any resources you can share or point to.

Thanks a lot.
       _______ 
      | \___/ 
       o(. .)o 
  --ooO--(_)--Ooo-- 
e okyere , clifton, va
 





From stefan.fleiter at web.de  Fri Jun 13 15:41:19 2003
From: stefan.fleiter at web.de (Stefan Fleiter)
Date: Fri, 13 Jun 2003 23:41:19 +0200
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>
References: <3EE9F175.9010401@web.de> <6A18C90F-9DC8-11D7-B3BA-000393C9700E@twistedmatrix.com>
Message-ID: <20030613214119.GA30109@shuttle.mothership.home.dhs.org>

Hi Glyph!

On Fri, 13 Jun 2003 Glyph Lefkowitz wrote:

Wow, I am lucky, Mr. Twisted himself is answering my beginner-Question!

> Remove the 'reactor.run()' here.
So add.run() automatically starts the reactor?

Thanks, a million, I was almost loosing my brains. ;-)

Greets,
Stefan



From ard at cs.oberlin.edu  Sat Jun 14 15:22:22 2003
From: ard at cs.oberlin.edu (Jonathan Ard)
Date: Sat, 14 Jun 2003 17:22:22 -0400
Subject: [Twisted-Python] Installing Twisted on Win32
Message-ID: <20030614212222.GA20226@cs.oberlin.edu>


Stupid question:

Is there any way to install Twisted on Windows XP without Administrator Privileges?  

I tried using the binary installer from the Web Site, but it keeps telling me that I don't have the rights to install it.  

Thanks,

Jonathan

-- 



From lafou at wanadoo.fr  Tue Jun 17 01:51:34 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 17 Jun 2003 09:51:34 +0200
Subject: [Twisted-Python] Installing Twisted on Win32
In-Reply-To: <20030614212222.GA20226@cs.oberlin.edu>
References: <20030614212222.GA20226@cs.oberlin.edu>
Message-ID: <1055836294.2818.98.camel@biproc>

Of course.

Just extract it in a directory and add c:\path\to\dir\twisted to your
PYTHONPATH env var. If there's no PYTHONPATH, create it of course.



On Sat, 2003-06-14 at 23:22, Jonathan Ard wrote:
> Stupid question:
> 
> Is there any way to install Twisted on Windows XP without Administrator Privileges?  
> 
> I tried using the binary installer from the Web Site, but it keeps telling me that I don't have the rights to install it.  
> 
> Thanks,
> 
> Jonathan
-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From glyph at twistedmatrix.com  Tue Jun 17 01:46:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2003 02:46:49 -0500
Subject: [Twisted-Python] Problem combining pb and spawnProcess[3]
In-Reply-To: <20030613214119.GA30109@shuttle.mothership.home.dhs.org>
Message-ID: <DA5670EC-A097-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Friday, June 13, 2003, at 04:41 PM, Stefan Fleiter wrote:

> Wow, I am lucky, Mr. Twisted himself is answering my beginner-Question!

Technically it's "Sir Dr. Twisted, Esq.", to make sure that we don't 
get confused with Allen, the "Rt. Hon. Rev. Twisted".

> So add.run() automatically starts the reactor?

Yup.

> Thanks, a million, I was almost loosing my brains. ;-)

Although I've lost my mind with no apparent ill effects, I'd have to 
suggest keeping the reactor at least 4 feet from your brains at all 
time.  Twisted has NO WARRANTY, so I can't be liable if your eyeballs 
were to spontaneously melt...




From bob at redivi.com  Tue Jun 17 05:29:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 17 Jun 2003 07:29:54 -0400
Subject: [Twisted-Python] socket communications in flash
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAalgyXu+u5Uq1Y9Yg3Mk7A8KAAAAQAAAAsHaPPOlOLUezyQszchWbAwEAAAAA@cox.net>
Message-ID: <0492FFB5-A0B7-11D7-85A7-000A95686CD8@redivi.com>

On Thursday, Jun 12, 2003, at 20:00 America/New_York, e okyere wrote:
> I am looking at doing low-level sock comms with flash mx and hopefully  
> c++
> and upon hitting this thread:
>
> http://twistedmatrix.com/pipermail/twisted-python/2002-May/001121.html
>
> thought I should contact you to see if you have any experience in that  
> line.
> If so, I'd appreciate any resources you can share or point to.

This is similar to how I've done it in the past (warning: untested, not  
commented, mostly rape & paste from other code I've written):

########
import sys, random, md5
from twisted.python.compat import True, False
from twisted.python import log
from twisted.protocols.basic import LineReceiver
from twisted.web import microdom
from twisted.internet.protocol import Factory


class XMLPipe(LineReceiver):
     delimiter = '\0'

     def connectionMade(self):
         pass

     def sendMessage(self, message):
         self.transport.writeSequence(('<packet>', str(message),  
'</packet>', self.delimiter))

     def lineReceived(self, line):
         if not line:
             log.msg("WARNING:  Empty message from client")
             return
         packet = microdom.parseString(line).childNodes[0]
         if packet.nodeName != 'packet':
             raise ValueError, '%r is not a packet tag' % packet
         self.packetReceived(packet)

     def packetReceived(self, packet):
         raise NotImplementedError

     def connectionLost(self, reason):
         pass

class FlashPipe(XMLPipe):
     def connectionMade(self):
         self.authenticated = False
         self.user = None
         self.issueChallenge()

     def packetReceived(self, packet):
         for node in packet.childNodes:
             self.nodeReceived(node)

     def nodeReceived(self, node):
         return getattr(self, 'handle_'+node.nodeName,  
self.xmlerror)(node)

     def xmlerror(self, node):
         log.msg('Unrecognized Node %r %r' % (node, node.toxml()))
         self.sendMessage('<error>Unrecognized Node</error>')

     def issueChallenge(self):
         # some entropy
         self.pendingChallenge = md5.new(''.join((
             hex(id(self)),
             hex(random.randrange(sys.maxint)),
         ))).hexdigest()
         self.sendMessage(''.join(
             ('<challenge>', self.pendingChallenge, '</challenge>'
         )))

     def handle_response(self, node):
         resp = node.firstChild().nodeValue.strip()
         for possible, user in self.factory.authorized.iteritems():
             h = md5.new(self.pendingChallenge)
             h.update(possible)
             if h.hexdigest() == resp:
                 break
         else:
             return
         log.msg('authenticated as %s' % user)
         self.user = user
         self.authenticated = True
         self.sendMessage('<authenticated />')

class FlashXMLFactory(Factory):
     noisy = 0
     protocol = FlashPipe
     authorized = {'somerandomdata' : 'valid user'}

if __name__=='__main__':
     from twisted.internet import reactor
     log.startLogging(sys.stdout)
     reactor.listenTCP(8888, FlashXMLFactory())
     reactor.run()

####

A conversation would look like this:
SERVER:  
'<packet><challenge>d41d8cd98f00b204e9800998ecf8427e</challenge></ 
packet>\0'
CLIENT:  
'<packet><response>f87504a987151d223335f0753f010b74</response></ 
packet>\0'
SERVER: '<packet><authenticated /></packet>\0'

-bob




From tv at twistedmatrix.com  Tue Jun 17 13:54:16 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 17 Jun 2003 22:54:16 +0300
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
Message-ID: <20030617195416.GA6113@tao.tv.debian.net>

On Mon, Jun 16, 2003 at 05:28:46AM -0500, Glyph Lefkowitz wrote:
> Portal
> ======

> Mind
> ====

> The name may seem rather unusual, but considering that a Mind is 
> representative of the entity on the "other end" of a network connection 
> that is both receiving updates and issuing commands, I believe it is 
> appropriate.

> Realm
> =====

> Avatar
> ======

	Man. You need to let let *go* of that pipe. You've been
	puffing a bit too much.

	I'd really appreciate it if Twisted would contain bad naming
	puns in the edges and things only used by Twisted developers,
	but not in the core facilities. I've already had trouble
	selling it due to the "twisted" name :)

> checker mechanisms soon.  (If somebody were to write an 
> ActiveDirectory-compatible LDAP login, they would be my best friend for 
> EVER.)

	Sooo.. what does ActiveDirectory need to check a users
	passphrase? If it's anywhere near what basic LDAP usage is,
	I'm already your friend.

	(And no, I will not look for myself. I can smell it already,
	I'm not going closer without bribery.)




	For those readers, who don't have a clue what I'm talking about:

	Ldaptor is a pure-python LDAP library, utilities and
	applications.

	apt-get install ldaptor-utils ldaptor-webui
	http://tv.debian.net/software/ldaptor/
	http://ldaptor.bkbits.net/

	It contains a fully-featured LDAP client library, a just-added
NEW-->	initial LDAP server support, a web server that allows users to
	browse/edit LDAP content, and a set of command line tools for
	e.g. doing LDAP searches, changing passwords, etc.

	Also a lot of infrastructure exists: Ldaptor groks Samba LDAP
	entries, DNS SRV, etc.

-- 
:(){ :|:&};:



From martin at tactilis.co.uk  Tue Jun 17 13:59:07 2003
From: martin at tactilis.co.uk (Martin Armstrong)
Date: Tue, 17 Jun 2003 20:59:07 +0100
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports
In-Reply-To: <20030609123300.GC29930@mercury.local.net>
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com>
 <20030609123300.GC29930@mercury.local.net>
Message-ID: <9OJg9OFLM37+Ewv+@tactilis.co.uk>

In article <20030609123300.GC29930 at mercury.local.net>, W.J. 
<miathan at goliath.darktech.org> writes


In article <76ADB8C376C3D31193F50008C7E6D3B2F3E15E at EWHKA005>,
Richard.Townsend at edl.uk.eds.com writes

>> I have now had a chance to test this on HP-UX11i and have discovered a
>> problem.
>>  The code for Application.setUID() calls os.getgid() expecting it to
>> return 0

>Why on earth would you want to check or enforce someone is in group 0? 
>Being in group 0 doesn't have any 'magic' like uid 0 has, well, it 
>might have on some operating systems, but it's not a portable way.

>Some unices don't even have a special *user* ID 0 but have security 
>based on process privileges. You shouldn't assume setuid or setgid to 
>fail/succeed based on those numbers.

>IMO the best way is to just try to setuid/setgid if requested, if it is 
>not allowed you'll get an EPERM soon enough anyway.


Wladimir is correct.

Here's a patch (already tested by Richard) that provides the correct 
behaviour:



/usr/local/src/Twisted/twisted/internet: cvs diff app.py
Index: app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.97
diff -r1.97 app.py

695,699c695,701
<         if hasattr(os, 'getgid'):
<             if not os.getgid():
<                 os.setegid(self.gid)
<                 os.seteuid(self.uid)
<                 log.msg('set euid/egid %s/%s' % (self.uid, self.gid))
---
>         try:
>             os.setegid(self.gid)
>             os.seteuid(self.uid)
>         except (AttributeError, OSError):
>             pass
>         else:
>             log.msg('set euid/egid %s/%s' % (self.uid, self.gid))

704,708c706,712
<         if hasattr(os, 'getgid'):
<             if not os.getgid():
<                 os.setgid(self.gid)
<                 os.setuid(self.uid)
<                 log.msg('set uid/gid %s/%s' % (self.uid, self.gid))
---
>         try:
>             os.setgid(self.gid)
>             os.setuid(self.uid)
>         except (AttributeError, OSError):
>             pass
>         else:
>             log.msg('set uid/gid %s/%s' % (self.uid, self.gid))


-- 
Martin Armstrong                        <mailto:martin at tactilis.co.uk>



From itamar at itamarst.org  Tue Jun 17 13:59:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Jun 2003 15:59:36 -0400
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617195416.GA6113@tao.tv.debian.net>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
	<20030617195416.GA6113@tao.tv.debian.net>
Message-ID: <20030617155936.39455151.itamar@itamarst.org>

On Tue, 17 Jun 2003 22:54:16 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	Man. You need to let let *go* of that pipe. You've been
> 	puffing a bit too much.

For the record, cred was designed by glyph and me. And we chose the
names together, and they make a lot of sense, we didn't choose them
(just) because they sound cool.
 
> 	Sooo.. what does ActiveDirectory need to check a users
> 	passphrase? If it's anywhere near what basic LDAP usage is,
> 	I'm already your friend.

You would be implementing a credential checker. You write a IIRC check()
method that accepts certain credentials objects that comply to specific
interfaces (e.g. IUsernamePasswordCredentials) call methods and lookup
attributes on them, and then return a Deferred of either a string which
is their avatar id (i.e. unique ID representing the user) or a Failure.

So, you need to implement one method.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From bob at redivi.com  Tue Jun 17 14:36:40 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 17 Jun 2003 16:36:40 -0400
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <66187BAC-A103-11D7-85A7-000A95686CD8@redivi.com>

On Tuesday, Jun 17, 2003, at 15:59 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Tue, 17 Jun 2003 22:54:16 +0300
> Tommi Virtanen <tv at twistedmatrix.com> wrote:
>
>> 	Man. You need to let let *go* of that pipe. You've been
>> 	puffing a bit too much.
>
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

puff, puff, pass?  :)

I'm also not fond of the "mind" terminology, there's gotta be a better 
word for what it is.. entity, participant, client, user, foobar (prefix 
anything with "remote" if desired).. but not "mind".

-bob




From jasper at peak.org  Tue Jun 17 15:32:55 2003
From: jasper at peak.org (Jasper Phillips)
Date: Tue, 17 Jun 2003 14:32:55 -0700 (PDT)
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com>
 <20030617195416.GA6113@tao.tv.debian.net> <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <Pine.LNX.4.53.0306171341430.26539@a.shell.peak.org>

On Tue, 17 Jun 2003, Itamar Shtull-Trauring wrote:

> On Tue, 17 Jun 2003 22:54:16 +0300
> Tommi Virtanen <tv at twistedmatrix.com> wrote:
> 
> > 	Man. You need to let let *go* of that pipe. You've been
> > 	puffing a bit too much.
> 
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

They're not egregious, but some aren't very good either -- no offense.  As is
often the case, the first names presented aren't the best ones; why not make
it standard procedure to first discuss better names when adding something new
to Twisted?

The names I suggest most need changing:
Mind:          ClientProxy instead?
Realm, Avatar: I think they're fine, as lone as a Realm also includes internal
               state as the name implies, rather than being a mere gatekeeper
               as the description seems to imply...

I look forward to using the new cred; it sounds much improved!
-Jasper



From don at motorola.com  Tue Jun 17 16:10:55 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 17 Jun 2003 17:10:55 -0500
Subject: [Twisted-Python] restricting twisted web to a single connection
In-Reply-To: <20030612214031.GA20191@soniq.net>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>

Hello,

I'm just getting started with twisted and have a question
about twisted web. How would I go about limiting the web
server to accepting a single connection? I know you might
be asking your self why anyone would want to do such a 
stupid thing, but I'm controlling some hardware and need
to restrict access to it to a single user at a time.

Anyway, I'd appreciate any pointers. :-)

Cheers,

don




From glyph at twistedmatrix.com  Tue Jun 17 19:17:16 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2003 20:17:16 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <66187BAC-A103-11D7-85A7-000A95686CD8@redivi.com>
Message-ID: <99AA5764-A12A-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Tuesday, June 17, 2003, at 03:36 PM, Bob Ippolito wrote:

> I'm also not fond of the "mind" terminology, there's gotta be a better 
> word for what it is.. entity, participant, client, user, foobar 
> (prefix anything with "remote" if desired).. but not "mind".

The naming scheme is somewhat baroque on purpose.  Cred's domain is a 
_very_ semantically polluted one, where (A) the concepts are subtle and 
complex and (B) most all the *normal*-sounding names are already used 
by some other project or related concept to mean something apparently 
similar but in reality very confusingly different.

"Mind" is, honestly, the best word I've heard so far that will 
adequately distinguish the object in this role from other, similar 
objects which may be implemented as domains for a particular protocol.

When a simple or compound word will do, I try to use it.  
"CredentialChecker", for example, doesn't need to be "Portcullis" 
because its name unambiguously describes its function.

However, compound words like ClientProxy, AvatarClient, ClientObject, 
RemoteMethodEventHandlerProxyHandler and so on are very easy to 
misunderstand, especially (as many folks I'm sure do) if you have had 
experience with a similar system in a proprietary environment with its 
own naming quirks.

In short: in a system which involves subtle concepts, I prefer names 
which are memorable and unambiguous.  If possible, the terms should 
also be clear, but as users develop experience with the system, the 
initial clarity is less and less important but memorability remains 
just as important.

As an added bonus, if a term's actual meaning is subtle -- and. if and 
ONLY if the documentation is good -- the bizarre naming will force a 
new user to read the documentation to get a handle on what it means.  
While it would be nice to be able to clearly express to a user what a 
term means with only its name, it is better to have them confused and 
encouraged to read documentation than to have them _think_ they 
understand what it's supposed to do and be far more confused later when 
an apparently obvious interaction has some exceptionally bizarre 
side-effects.




From andrew-twisted at puzzling.org  Tue Jun 17 19:46:04 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 18 Jun 2003 11:46:04 +1000
Subject: [Twisted-Python] restricting twisted web to a single connection
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>
References: <20030612214031.GA20191@soniq.net> <FPEBLIAFGDEEOHHAGOKBIELNCBAA.don@motorola.com>
Message-ID: <20030618014604.GA4823@frobozz>

On Tue, Jun 17, 2003 at 05:10:55PM -0500, Don Hiatt wrote:
> Hello,
> 
> I'm just getting started with twisted and have a question
> about twisted web. How would I go about limiting the web
> server to accepting a single connection? I know you might
> be asking your self why anyone would want to do such a 
> stupid thing, but I'm controlling some hardware and need
> to restrict access to it to a single user at a time.
> 
> Anyway, I'd appreciate any pointers. :-)

You'll probably have to subclass twisted.web.server.Site to make
buildProtocol return None if a connection is active.  Untested code from the
top of my head:

from twisted.protocols.http import HTTPChannel
from twisted.web.server import Site

class SingleConnectionHTTPChannel(HTTPChannel):
    def connectionLost(self, reason):
        self.factory.connections -= 1
        HTTPChannel.connectionLost(self, reason)

class SingleConnectionSite(Site):
    protocol = SingleConnectionHTTPChannel
    connections = 0
    def buildProtocol(self, addr):
        # Reject concurrent connections
        if self.connections:
            return None
        self.connections += 1

        return Site.buildProtocol(self, addr)

-Andrew.




From exarkun at intarweb.us  Wed Jun 18 05:02:10 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 18 Jun 2003 07:02:10 -0400
Subject: [Twisted-Python] Howto use the Gnutella-protocol
In-Reply-To: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>
References: <001801c331aa$23236770$3ba8a8c0@gatsoft.no>
Message-ID: <20030618110210.GA16380@meson.dyndns.org>

On Fri, Jun 13, 2003 at 02:48:49PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Is the gnutella-protocol in Twisted so complete I can use it to query a
> gnutella-network and download files? If so, does anybody have any example
> code?
> 
> Any hints, clues etc. on this matter would be highly appreciated.

  The gnutella.py module doc string --

    """
    Gnutella, v0.4
    http://www9.limewire.com/developer/gnutella_protocol_0.4.pdf

    This module is incomplete.  The "GnutellaTalker" class is complete.  The
    "GnutellaPinger" and "GnutellaPonger" are complete and able to chat with one
    another.  The "GnutellaRouter" and "GnutellaServent" classes are yet to be
    written.
    """

  From this, I would gather the answer is "no," but there seems to be a
reasonable basis for implementing that functionality.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030618/c46fa369/attachment.sig>

From justinjohnson at fastmail.fm  Wed Jun 18 08:28:56 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 08:28:56 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
Message-ID: <20030618142856.40933366F2@www.fastmail.fm>

Hello,

I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
able to contect to it fine using just python's xmlrpclib on the client,
and am now switching over to use twisted on the client as well.  I'm
getting a wierd error though that I'm not sure how to track down.  Below
is are snippets of my client code, server code, and the error I'm
getting.

Any help you can provide is appreciated.
-Justin


[client]
def connectToServer(server):
	s = Proxy('http://%s:%s' % (server, config.portNumber))
	return s

def printValue(output):
	print "success"
	#print "success: %s" % output
	reactor.stop()

def printError(output):
	print "error"
	#print "error: %s" % output
	reactor.stop()

# Subcommand: mkvob
def doMkvob(options):
	vobs = options["vobs"].split(",")
	original_site = options["original"]
	group = options["group"]

	s = connectToServer(config.siteToServer[original_site])
	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
	print "Calling remote mkvob ..."

	d = s.callRemote('mkvob', vobs, group).addCallbacks(printValue, printError)
	reactor.run()
[/client]

[server]
class CCService(xmlrpc.XMLRPC):
	"""Service for handling remote VOB creation, removal, and general
	   ClearCase maintenance.
	"""

	def xmlrpc_mkvob(self, vobs, group):
		"""Create VOBs and apply standard triggers.
		"""
		log("we're in")
		output = ""
		rtn = SUCCESS
		for tag in vobs:
			log("Start mkvob for VOB '%s'" % tag)
			vob = VOB(tag, group)
			try:
				output += vob.make()
				output += vob.applyTriggers()
			except errors.CmdError, e:
				rtn = FAILURE
				output = e.stdout + e.stderr
				log("Error raised: cmd=%s, status=%s, stdout=%s, stderr=%s" % (e.cmd, e.status, e.stdout, e.stderr))
			log("End mkvob for VOB '%s'" % tag)
		return (rtn, output)
[/server]


Traceback (most recent call last):
  File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line
  173, in
dataReceived
    self.lineReceived(line)
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  893, in l
ineReceived
    self.allContentReceived()
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  932, in a
llContentReceived
    req.requestReceived(command, path, version)
  File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
  504, in r
equestReceived
    self.process()
--- <exception caught here> ---
  File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 156,
  in proce
ss
    self.render(resrc)
  File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 162,
  in rende
r
    body = resrc.render(self)
  File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 103,
  in rende
r
    args, functionPath = xmlrpclib.loads(request.content.read())
  File "E:\Python22\lib\xmlrpclib.py", line 805, in loads
    p.close()
  File "E:\Python22\lib\xmlrpclib.py", line 393, in close
    self._parser.Parse("", 1) # end of data
xml.parsers.expat.ExpatError: no element found: line 1, column 0



From justinjohnson at fastmail.fm  Wed Jun 18 09:03:46 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 09:03:46 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618142856.40933366F2@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
Message-ID: <20030618150346.3A9F73639F@www.fastmail.fm>

I changed printError to...

def printError(error):
	print error
	print error.getErrorMessage()
	error.printDetailedTraceback()
	reactor.stop()

and got the following...

[Failure instance: Traceback: twisted.internet.error.ConnectionLost,
]

*--- Failure #4 ---
--- <exception caught here> ---
*--- End of Failure #4 ---

Not sure if this helps any.

On Wed, 18 Jun 2003 08:28:56 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> Hello,
> 
> I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> able to contect to it fine using just python's xmlrpclib on the client,
> and am now switching over to use twisted on the client as well.  I'm
> getting a wierd error though that I'm not sure how to track down.  Below
> is are snippets of my client code, server code, and the error I'm
> getting.
> 
> Any help you can provide is appreciated.
> -Justin
> 
> 
> [client]
> def connectToServer(server):
> 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> 	return s
> 
> def printValue(output):
> 	print "success"
> 	#print "success: %s" % output
> 	reactor.stop()
> 
> def printError(output):
> 	print "error"
> 	#print "error: %s" % output
> 	reactor.stop()
> 
> # Subcommand: mkvob
> def doMkvob(options):
> 	vobs = options["vobs"].split(",")
> 	original_site = options["original"]
> 	group = options["group"]
> 
> 	s = connectToServer(config.siteToServer[original_site])
> 	print "Successfully connected to %s (%s)." % (original_site, config.siteToServer[original_site])
> 	print "Calling remote mkvob ..."
> 
> 	d = s.callRemote('mkvob', vobs, group).addCallbacks(printValue, printError)
> 	reactor.run()
> [/client]
> 
> [server]
> class CCService(xmlrpc.XMLRPC):
> 	"""Service for handling remote VOB creation, removal, and general
> 	   ClearCase maintenance.
> 	"""
> 
> 	def xmlrpc_mkvob(self, vobs, group):
> 		"""Create VOBs and apply standard triggers.
> 		"""
> 		log("we're in")
> 		output = ""
> 		rtn = SUCCESS
> 		for tag in vobs:
> 			log("Start mkvob for VOB '%s'" % tag)
> 			vob = VOB(tag, group)
> 			try:
> 				output += vob.make()
> 				output += vob.applyTriggers()
> 			except errors.CmdError, e:
> 				rtn = FAILURE
> 				output = e.stdout + e.stderr
> 				log("Error raised: cmd=%s, status=%s, stdout=%s, stderr=%s" % (e.cmd, e.status, e.stdout, e.stderr))
> 			log("End mkvob for VOB '%s'" % tag)
> 		return (rtn, output)
> [/server]
> 
> 
> Traceback (most recent call last):
>   File "E:\Python22\Lib\site-packages\twisted\protocols\basic.py", line
>   173, in
> dataReceived
>     self.lineReceived(line)
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   893, in l
> ineReceived
>     self.allContentReceived()
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   932, in a
> llContentReceived
>     req.requestReceived(command, path, version)
>   File "E:\Python22\Lib\site-packages\twisted\protocols\http.py", line
>   504, in r
> equestReceived
>     self.process()
> --- <exception caught here> ---
>   File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 156,
>   in proce
> ss
>     self.render(resrc)
>   File "E:\Python22\Lib\site-packages\twisted\web\server.py", line 162,
>   in rende
> r
>     body = resrc.render(self)
>   File "E:\Python22\Lib\site-packages\twisted\web\xmlrpc.py", line 103,
>   in rende
> r
>     args, functionPath = xmlrpclib.loads(request.content.read())
>   File "E:\Python22\lib\xmlrpclib.py", line 805, in loads
>     p.close()
>   File "E:\Python22\lib\xmlrpclib.py", line 393, in close
>     self._parser.Parse("", 1) # end of data
> xml.parsers.expat.ExpatError: no element found: line 1, column 0
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From wari at home.wari.org  Wed Jun 18 10:15:16 2003
From: wari at home.wari.org (Wari Wahab)
Date: Thu, 19 Jun 2003 00:15:16 +0800
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618142856.40933366F2@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
Message-ID: <3EF09014.9000006@home.wari.org>

Justin Johnson wrote:
> Hello,
> 
> I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> able to contect to it fine using just python's xmlrpclib on the client,
> and am now switching over to use twisted on the client as well.  I'm
> getting a wierd error though that I'm not sure how to track down.  Below
> is are snippets of my client code, server code, and the error I'm
> getting.

I've got this problem a while ago as well.. It costs me a few days of 
headaches, and no one here seems to be able to answer the question, 
until I did some probing myself.

> [client]
> def connectToServer(server):
> 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> 	return s

Your fix:
s = Proxy('http://%s:%s/' % (server, config.portNumber))
-----------------------^

See if that solves your problem as it solves mine.

If it does, then the issue is that the request sent over to the twisted 
server looks like:

POST  HTTP/1.0 # Note the lack of '/'

Which then gets converted nicely to:

POST  HTTP/1.0 HTTP/0.9

-- 
Regards: Wari Wahab
RoughingIT - http://roughingit.subtlehints.net
PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom




From justinjohnson at fastmail.fm  Wed Jun 18 10:22:44 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 10:22:44 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <3EF09014.9000006@home.wari.org>
References: <20030618142856.40933366F2@www.fastmail.fm> <3EF09014.9000006@home.wari.org>
Message-ID: <20030618162244.71DEC36A84@www.fastmail.fm>

That was my problem.  Hmmm...  I don't quite understand why though. 
Would you mind explaining this further?  I didn't quite follow your
explanation.

Thanks so much.
-Justin

On Thu, 19 Jun 2003 00:15:16 +0800, "Wari Wahab" <wari at home.wari.org>
said:
> Justin Johnson wrote:
> > Hello,
> > 
> > I have an xmlrpc server using twisted.web.xmlrpc.XMLRPC.  I have been
> > able to contect to it fine using just python's xmlrpclib on the client,
> > and am now switching over to use twisted on the client as well.  I'm
> > getting a wierd error though that I'm not sure how to track down.  Below
> > is are snippets of my client code, server code, and the error I'm
> > getting.
> 
> I've got this problem a while ago as well.. It costs me a few days of 
> headaches, and no one here seems to be able to answer the question, 
> until I did some probing myself.
> 
> > [client]
> > def connectToServer(server):
> > 	s = Proxy('http://%s:%s' % (server, config.portNumber))
> > 	return s
> 
> Your fix:
> s = Proxy('http://%s:%s/' % (server, config.portNumber))
> -----------------------^
> 
> See if that solves your problem as it solves mine.
> 
> If it does, then the issue is that the request sent over to the twisted 
> server looks like:
> 
> POST  HTTP/1.0 # Note the lack of '/'
> 
> Which then gets converted nicely to:
> 
> POST  HTTP/1.0 HTTP/0.9
> 
> -- 
> Regards: Wari Wahab
> RoughingIT - http://roughingit.subtlehints.net
> PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From itamar at itamarst.org  Wed Jun 18 10:26:34 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 12:26:34 -0400
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <3EF09014.9000006@home.wari.org>
References: <20030618142856.40933366F2@www.fastmail.fm>
	<3EF09014.9000006@home.wari.org>
Message-ID: <20030618122634.1b871e8d.itamar@itamarst.org>

On Thu, 19 Jun 2003 00:15:16 +0800
Wari Wahab <wari at home.wari.org> wrote:

> Your fix:
> s = Proxy('http://%s:%s/' % (server, config.portNumber))

Fixed in CVS so that if you don't pass end the URL with '/' and it will
add one for you.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Wed Jun 18 10:30:43 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 12:30:43 -0400
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618162244.71DEC36A84@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm>
	<3EF09014.9000006@home.wari.org>
	<20030618162244.71DEC36A84@www.fastmail.fm>
Message-ID: <20030618123043.0c214017.itamar@itamarst.org>

On Wed, 18 Jun 2003 10:22:44 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> That was my problem.  Hmmm...  I don't quite understand why though. 
> Would you mind explaining this further?  I didn't quite follow your
> explanation.

There were two bugs here - one in the client code for xmlrpc, which I
fixed, and another in the HTTP server code which made the error in the
client code harder to understand. I am looking at the second one right
now.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jun 18 11:03:05 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 11:03:05 -0600
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618123043.0c214017.itamar@itamarst.org>
References: <20030618142856.40933366F2@www.fastmail.fm>
 	<3EF09014.9000006@home.wari.org>
 	<20030618162244.71DEC36A84@www.fastmail.fm> <20030618123043.0c214017.itamar@itamarst.org>
Message-ID: <20030618170305.7124F36A95@www.fastmail.fm>

Okay, thanks.

On Wed, 18 Jun 2003 12:30:43 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Wed, 18 Jun 2003 10:22:44 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > That was my problem.  Hmmm...  I don't quite understand why though. 
> > Would you mind explaining this further?  I didn't quite follow your
> > explanation.
> 
> There were two bugs here - one in the client code for xmlrpc, which I
> fixed, and another in the HTTP server code which made the error in the
> client code harder to understand. I am looking at the second one right
> now.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From justinjohnson at fastmail.fm  Wed Jun 18 11:02:26 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 18 Jun 2003 11:02:26 -0600
Subject: [Twisted-Python] passing exceptions to an xmlrpc client
Message-ID: <20030618170226.E5A73369C6@www.fastmail.fm>

When doing something like:

proxy.callRemote('add', 1, 2).addCallbacks(printValue, printError)

...my understanding is that the callback function (printValue) will get
called unless an exception is raised by 'add', or 'add' returns a
twisted.python.failure.Failure.  However, if I am calling a remote method
on a twisted xmlrpc service, raised exceptions and returned Failure's
can't really be returned to the client side.  So really my errback would
only get called if there were some other problem with the service, like
loss of network connection or something like that, right?  If I use the
perspective broker will I be able to raise exceptions or return failures
in my remote methods and have them get passed back to the client
appropriately?  I'm trying to make sure I can handle all errors in my
errbacks, and not have to do some special processing of errors specific
to my method in the callbacks.

Thanks.
-Justin



From wari at home.wari.org  Wed Jun 18 10:46:13 2003
From: wari at home.wari.org (Wari Wahab)
Date: Thu, 19 Jun 2003 00:46:13 +0800
Subject: [Twisted-Python] xmlrpc ExpatError
In-Reply-To: <20030618162244.71DEC36A84@www.fastmail.fm>
References: <20030618142856.40933366F2@www.fastmail.fm> <3EF09014.9000006@home.wari.org> <20030618162244.71DEC36A84@www.fastmail.fm>
Message-ID: <3EF09755.6050207@home.wari.org>

Justin Johnson wrote:
> That was my problem.  Hmmm...  I don't quite understand why though. 
> Would you mind explaining this further?  I didn't quite follow your
> explanation.

Sorry, just trying to point out that twisted's got two (minor) problem, 
the XMLRPC client issues an invalid request to the webserver "POST 
HTTP/1.0", go ask other web servers, they'll answer the same thing, 
either invalid request, or just closed the connection for you, Twisted 
webserver, returns a 404, which is not the correct behavior.

Anyway, whatever it is, since the reply is not valid XML, expat dies 
immediately (line 1, column 0 does not start with <?xml)

-- 
Regards: Wari Wahab
RoughingIT - http://roughingit.subtlehints.net
PyBlosxom  - http://roughingit.subtlehints.net/pyblosxom




From radix at twistedmatrix.com  Wed Jun 18 14:16:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 18 Jun 2003 16:16:03 -0400
Subject: [Twisted-Python] passing exceptions to an xmlrpc client
In-Reply-To: <20030618170226.E5A73369C6@www.fastmail.fm>; from justinjohnson@fastmail.fm on Wed, Jun 18, 2003 at 13:02:26 -0400
References: <20030618170226.E5A73369C6@www.fastmail.fm>
Message-ID: <20030618201603.GA19089@toshi.anaprd01.md.comcast.net>

On 2003.06.18 13:02, Justin Johnson wrote:
> If I use the
> perspective broker will I be able to raise exceptions or return failures
> in my remote methods and have them get passed back to the client
> appropriately?  I'm trying to make sure I can handle all errors in my
> errbacks, and not have to do some special processing of errors specific
> to my method in the callbacks.

Yes, Perspective Broker has built-in support for passing Failures from one
end to another mostly-transparently (some low-level information that you
almost certainly won't need is lost in the transfer, but otherwise it's
transparent).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Wed Jun 18 15:53:51 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 18 Jun 2003 23:53:51 +0200
Subject: [Twisted-Python] Subclassing Resource, problems accessing persistent data/using registry
Message-ID: <005b01c335e4$256de300$0401a8c0@razor>

I've subclassed twisted.web.resource to create my own type of rpys where the
content is wrapped in a site-wide template before being returned to the
client. This makes it easier and quicker to generate content in the rpys
themselves. I've also created a response-object instead of returning just a
string from the render-method or using request.write. IMHO a server should
work with a response to a request, not use the request itself to send
content back to the client.

The code in the bottom of the posting works great ( making it into a rpy,
running mktap + twistd etc. ), but if I create a rpy file called test.rpy,
with something like :

--------------------- snip
snip --------------------------------------------------

from hs.twisted.eloperesource import ElopeRespource

class test(ElopeRespource):
    def content(self, request, response, server):
        response.add('hello world, once again')

resource = test()

--------------------- snip
snip --------------------------------------------------

I cannot get the persistent data in my custom server-class to be registered,
the registry.getComponent-method is not available. Can I register persistent
data in any other way and somehow pass it to my own rpys? How can I manually
register persistent data, not use the automagical-way in rpys? I create a
web.tap file and try to serve the data using twisted -f web.tap etc. but it
raises an exception.

Any hint, idea, flame or constructive comment would be appreciated.

Best regards,
Thomas W

--------------------- snip
snip --------------------------------------------------

import os, types, sys, cgi, time, string, cStringIO, gzip, traceback, PyMeld
from twisted.web import server, resource
from twisted.internet import reactor
from twisted.web import server, resource, error
from twisted.protocols import http
from twisted.web.static import File
from twisted.internet import reactor

# special custom classes
from hs.twisted.response import response
from hs.twisted.Server import Server

server = registry.getComponent(Server)
if not server:
    registry.setComponent(Server, Server())
server = registry.getComponent(Server)

class ElopeResource(resource.Resource):

    isLeaf = True

    def __init__(self):
        resource.Resource.__init__(self)

    def content(self, request, response, server):
        # Should be overridden by the rpy
        response.add('Should be overridden') # added content is accumulated
in the response-object

    def render(self, request):
        resp = response()
        self.content(request, resp, server)

        if resp.filename and not resp.content_type in ['text/xml',
'text/plain', 'text/html', 'text/css']:
            # special handler to return files not directly available online,
located somewhere on local filesystem
            filesize = os.stat(resp.filename)[6]
            modification_time = os.stat(resp.filename)[8]
            request.setHeader("Content-Length", filesize)
            request.setHeader("Last-modified",
time.ctime(modification_time))
            request.setHeader("Content-Disposition", 'file; filename="%s"' %
os.path.split(resp.filename)[1])
            return File(resp.filename,
getContentType(resp.filename)).render(request)

        elif resp.url:
            request.redirect(resp.url)
            return 'You should be redirect to %s' % resp.url

        else:
            if resp.filename: # a plain-text, html or xml-file
                resp.content = open(resp.filename).read()

            request.setResponseCode(resp.response_code, 'OK')
            request.setHeader("Content-type", resp.content_type)
            if request.received_headers.has_key('accept-encoding'): # custom
gzip-encoding
                if 'gzip' in map(string.strip,
request.received_headers['accept-encoding'].split(',')) and \
                   resp.content_type in ['text/xml', 'text/plain',
'text/html', 'text/css']:
                    try:
                        fd = cStringIO.StringIO()
                        gz = gzip.GzipFile(filename='', mode='wb',
compresslevel=9, fileobj=fd)
                        resp.content = '<html><body>%s</body></html>' %
resp.content
                        gz.write(resp.content)
                        gz.close()
                        gzHtml = fd.getvalue()
                        request.setHeader("Content-Length", len(gzHtml))
                        request.setHeader("Content-Encoding", 'gzip')
                        return gzHtml
                    except:
                        fp = cStringIO.StringIO()
                        traceback.print_exc(file=fp)
                        content = fp.getvalue()
                        return self.templates.populateSceleton(content,
'default')
            else:
                content = '<html><body>%s</body></html>' % resp.content
                request.setHeader("Content-Length", len(content))
                return content

class Simple(ElopeResource):

    def content(self, request, response, server):
        response.add('Hello world! And there\'s even some persistent data
from the server : %s' % vars(server))
        server.data['time'] = time.ctime(time.time())

resource = Simple()




From itamar at itamarst.org  Wed Jun 18 16:32:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2003 18:32:20 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <005b01c335e4$256de300$0401a8c0@razor>
References: <005b01c335e4$256de300$0401a8c0@razor>
Message-ID: <20030618183220.55d93249.itamar@itamarst.org>

This seems to be a common misunderstanding, so let me emphasise this.

   RPYs are *glue* for integration with static filesystem content. They
   should never contain large amounts of code.

In general, development for twisted.web should be done by a tree of
resources in memory, hooked up manually to a site object in your code.
RPYs are intended for easy integration of code with static content, but
if you want your resource to be persistent, don't use them - or at
least, hook them into an object that is persistent in memory.

If you need objects to be persistent in memory, don't use RPYs.

Twisted is not PHP, you can have objects persist in memory without *any
work*. You'd be better off never using RPYs at all, in the vast majority
of cases.

Doing "mktap web --path=foo" and then starting to build your site is
*not* how you should do it. Instead, start with the example code at
http://twistedmatrix.com/documents/howto/using-twistedweb#auto12

 from twisted.web import server, resource
 from twisted.internet import reactor

  class Simple(resource.Resource):
     isLeaf = True
     def render(self, request):
         return "<html>Hello, world!</html>"

  site = server.Site(Simple())
  reactor.listenTCP(8080, site)
  reactor.run()

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pp64 at cornell.edu  Wed Jun 18 22:18:33 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Thu, 19 Jun 2003 00:18:33 -0400
Subject: [Twisted-Python] Bad inconsistency with buildProtocol
Message-ID: <20030619001833.33439e01.pp64@cornell.edu>

It looks like buildProtocol gets passed inconsistent values for addr. In a program that connects to itself:
pahan at dunce:~/Twisted$ python echo.py
EchoServerFactory from ('127.0.0.1', 43044)
EchoClientFactory to ('INET', 'localhost', 8000)

For incoming connections, addr gets passed straight from <socketobj>.accept, which is not in the proper format.



From vijay at accellion.com  Wed Jun 18 23:57:55 2003
From: vijay at accellion.com (Vijay Rao)
Date: Thu, 19 Jun 2003 11:27:55 +0530
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <20030616113403.460.68059.Mailman@pyramid.twistedmatrix.com
 >
Message-ID: <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>

At 06:34 16/06/2003 -0500, you wrote:

>Message: 9
>Date: Mon, 16 Jun 2003 10:03:52 +0300
>From: Tommi Virtanen <tv at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Custom webserver
>Reply-To: twisted-python at twistedmatrix.com
>
>On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> > I am trying to use twisted as a webserver that serves files only for
> > requests from the localhost ie the desktop on which it is running by
> > mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on
> > windows ) so that a particular type of URL is served from this webserver.
>
>         Easiest way is to make it bind to 127.0.0.1. There's currently
>         no support in mktap web for this, though there really should
>         be.
>
>--
>:(){ :|:&};:

Thanks , any pointer as to how to achieve this binding.
Also for refusing any external request I tried this hack and it works :

(from protocols/http.py)

     def lineReceived(self, line):
         if self.__first_line:
             # if this connection is not persistent, drop any data which
             # the client (illegally) sent after the last request.
......
.....
......
             if len(parts) != 3:
                 self.transport.write("HTTP/1.1 400 Bad Request\r\n\r\n")
                 self.transport.loseConnection()
                 return
             client = self.transport.getPeer()
             host = self.transport.getHost()
             if client[1] != '127.0.0.1' or host[1] != '127.0.0.1' :
                 self.transport.write("HTTP/1.1 404 Forbidden\r\n\r\n")
                 self.transport.loseConnection()
                 return
.......
....

Can this cause any other problem ( One thing I can see is that new channels 
are created for each external request refused in this manner )
And the requesting client browser is also not being able to display the 
result sent.

Regards,
Vijay




From mesozoic at polynode.com  Thu Jun 19 00:04:11 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 19 Jun 2003 02:04:11 -0400
Subject: [Twisted-Python] Subclassing Resource, problems accessing persistent data/using registry
In-Reply-To: <005b01c335e4$256de300$0401a8c0@razor>
References: <005b01c335e4$256de300$0401a8c0@razor>
Message-ID: <20030619060411.GA32264@polynode.com>

If what you're looking to do is make site-wide templates for your pages,
subclassing Resource may be overkill.  twisted.web.woven provides a very
flexible, powerful way of generating web pages.

Glance through the Woven HOWTOs on the Twisted site.  Of particular help to
me was PicturePile, a step-by-step example of a basic Woven application
<http://twistedmatrix.com/documents/howto/picturepile>.

I use Woven to generate my own site, and while my code is nowhere near being
finished (or even worth making public), it works.  My experience is that,
given a bit of patience and a willingness to ask for help [try #twisted],
you can get a lot done.

(I make heavy use of woven.widgets.ExpandMacro, which is not mentioned in
the online docs [as far as I can tell].  You may find it useful also.)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From gradha at efaber.net  Thu Jun 19 01:11:12 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Thu, 19 Jun 2003 09:11:12 +0200
Subject: [Twisted-Python] A fake SMTP server
Message-ID: <20030619071112.GA1518@ns.local>

Hi.

I've written a small script which implements a very basic dummy
SMTP server. It only listens to email and dumps the contents on
the screen. I needed it for debugging mail functions at work, where
touching the server SMTP is not allowed/dangerous.  Maybe somebody
else finds it useful.

 http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From jml at ids.org.au  Thu Jun 19 13:33:58 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Fri, 20 Jun 2003 05:33:58 +1000
Subject: [Twisted-Python] New Guard question
Message-ID: <20030619193358.GA27711@mumak.net>


I've been trying to figure out the new guard and cred, with the goal of perhaps
switching Issues over to use guard rather than the custom auth it does now.

Looking at the webhappyrealm.py example in the sandbox, it's not very clear
what the returned resources represent.

Also, returning Resources seems a little weird. To me, a resource is whole
page, why would I want a whole page returned?

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030620/685402da/attachment.sig>

From tv at twistedmatrix.com  Tue Jun 17 14:30:11 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 17 Jun 2003 23:30:11 +0300
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617155936.39455151.itamar@itamarst.org>
References: <4F765EAC-9FE5-11D7-A2AB-000393C9700E@twistedmatrix.com> <20030617195416.GA6113@tao.tv.debian.net> <20030617155936.39455151.itamar@itamarst.org>
Message-ID: <20030617203011.GA6696@tao.tv.debian.net>

On Tue, Jun 17, 2003 at 03:59:36PM -0400, Itamar Shtull-Trauring wrote:
> > 	Man. You need to let let *go* of that pipe. You've been
> > 	puffing a bit too much.
> For the record, cred was designed by glyph and me. And we chose the
> names together, and they make a lot of sense, we didn't choose them
> (just) because they sound cool.

	It always makes sense when you're still on the trip :)

> > 	Sooo.. what does ActiveDirectory need to check a users
> > 	passphrase? If it's anywhere near what basic LDAP usage is,
> > 	I'm already your friend.
> You would be implementing a credential checker. You write a IIRC check()

	Thank you for not helping.

	What does *ActiveDirectory* need to check a users passphrase?

-- 
:(){ :|:&};:



From itamar at itamarst.org  Thu Jun 19 10:51:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 12:51:12 -0400
Subject: [Twisted-Python] Bad inconsistency with buildProtocol
In-Reply-To: <20030619001833.33439e01.pp64@cornell.edu>
References: <20030619001833.33439e01.pp64@cornell.edu>
Message-ID: <20030619125112.18098f89.itamar@itamarst.org>

On Thu, 19 Jun 2003 00:18:33 -0400
Pavel Pergamenshchik <pp64 at cornell.edu> wrote:

> It looks like buildProtocol gets passed inconsistent values for addr.
> In a program that connects to itself: pahan at dunce:~/Twisted$ python
> echo.py EchoServerFactory from ('127.0.0.1', 43044)
> EchoClientFactory to ('INET', 'localhost', 8000)
> 
> For incoming connections, addr gets passed straight from
> <socketobj>.accept, which is not in the proper format.

Shit. Suggestions for how to fix this? I'm thinking a class with
__getitem__ and __len__ for backwards compatability and attributes as
the correct way of getting stuff?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Thu Jun 19 12:18:16 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 14:18:16 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619071112.GA1518@ns.local>; from gradha@efaber.net on Thu, Jun 19, 2003 at 03:11:12 -0400
References: <20030619071112.GA1518@ns.local>
Message-ID: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>

On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> Hi.
> 
> I've written a small script which implements a very basic dummy
> SMTP server. It only listens to email and dumps the contents on
> the screen. I needed it for debugging mail functions at work, where
> touching the server SMTP is not allowed/dangerous.  Maybe somebody
> else finds it useful.
> 
>  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz


This would be great to have in doc/examples. Would you be willing to
consign copyright to glyph and contribute fake_SMTP_server.py?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Thu Jun 19 12:44:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2003 13:44:10 -0500
Subject: [Twisted-Python] Lies, Damn Lies, and Stable Interfaces
In-Reply-To: <20030617203011.GA6696@tao.tv.debian.net>
Message-ID: <03BC0B05-A286-11D7-A2AB-000393C9700E@twistedmatrix.com>

On Tuesday, June 17, 2003, at 03:30 PM, Tommi Virtanen wrote:

> 	What does *ActiveDirectory* need to check a users passphrase?

Sorry, I don't really know anything about ActiveDirectory on a 
technical level. :-\

The reason I mentioned it is that certain large corporations use it for 
single-sign-on (SSO) across their entire intranet, that they consider 
this important, and that a problem with OSS adoption is that not enough 
OSS software can authenticate against it.

Well, really the problem is that not enough OSS software has pluggable 
authentication at _all_, but AD support is important because places 
which really want SSO have often deployed a Microsoft solution already.

This is all second- or third-hand information, so I'd appreciate some 
enlightenment too...




From radix at twistedmatrix.com  Thu Jun 19 12:18:16 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 14:18:16 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619071112.GA1518@ns.local>; from gradha@efaber.net on Thu, Jun 19, 2003 at 03:11:12 -0400
References: <20030619071112.GA1518@ns.local>
Message-ID: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>

On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> Hi.
> 
> I've written a small script which implements a very basic dummy
> SMTP server. It only listens to email and dumps the contents on
> the screen. I needed it for debugging mail functions at work, where
> touching the server SMTP is not allowed/dangerous.  Maybe somebody
> else finds it useful.
> 
>  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz


This would be great to have in doc/examples. Would you be willing to
consign copyright to glyph and contribute fake_SMTP_server.py?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Thu Jun 19 15:13:07 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 19 Jun 2003 23:13:07 +0200
Subject: [Twisted-Python] Simplifying database access in Twisted
Message-ID: <007901c336a7$96444240$0401a8c0@razor>

Just read thru http://www.twistedmatrix.com/documents/howto/enterprise and
tried to fit the code to my needs, but ... this seems way too complicated.
All I want is to execute a SQL-query and do something similar to fetchone or
fetchall etc. in the DB-API 2.0 spec. I don't want to be forced to write
classes and callbacks etc. just for a simple list of tuples or something
returned from a SQL-query.

Is there no other way to do simple database access in Twisted? Something
more like the DB-API 2.0? The docs says "This is straightforward ...". No,
it's not. The example a bit further up on the same page, now that's
straightforward. Perhaps it's just me not getting all the callbacks and
whatnot, but this seems too hard, too much code for such a simple task. All
I want is a database-object to feed sql-statements, which returns the
results as dictionaries or list of tuples, as close to DB-API 2.0 as
possible. Any hint or clue would be highly appreciated.

PS! I don't mean to step on anyones toes or anything, so forgive me if I'm a
bit harsh. But this might be the bitter end of my journey into the realms of
Twisted. Quick, fast and easy access to a database will make-or-break all of
my current projects, all of which are based on Twisted.

Thomas




From radix at twistedmatrix.com  Thu Jun 19 16:22:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Jun 2003 18:22:49 -0400
Subject: [Twisted-Python] 1.0.6alpha3
Message-ID: <20030619222249.GA13055@toshi.anaprd01.md.comcast.net>

1.0.6alpha3 is out there, and it's got new HTTP timeout code
activated, thanks to Jp Calderone. I've deployed it on pyramid,
and hopefully we won't be having any more downtime due to FD
"leakage".

1.0.6 final should be out by the end of the month.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Thu Jun 19 16:24:33 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 19 Jun 2003 18:24:33 -0400
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <CD65C4FA-A2A4-11D7-9259-000A95686CD8@redivi.com>

On Thursday, Jun 19, 2003, at 17:13 America/New_York, Thomas Weholt 
wrote:

> Just read thru http://www.twistedmatrix.com/documents/howto/enterprise 
> and
> tried to fit the code to my needs, but ... this seems way too 
> complicated.
> All I want is to execute a SQL-query and do something similar to 
> fetchone or
> fetchall etc. in the DB-API 2.0 spec. I don't want to be forced to 
> write
> classes and callbacks etc. just for a simple list of tuples or 
> something
> returned from a SQL-query.
>
> Is there no other way to do simple database access in Twisted? 
> Something
> more like the DB-API 2.0? The docs says "This is straightforward ...". 
> No,
> it's not. The example a bit further up on the same page, now that's
> straightforward. Perhaps it's just me not getting all the callbacks and
> whatnot, but this seems too hard, too much code for such a simple 
> task. All
> I want is a database-object to feed sql-statements, which returns the
> results as dictionaries or list of tuples, as close to DB-API 2.0 as
> possible. Any hint or clue would be highly appreciated.
>
> PS! I don't mean to step on anyones toes or anything, so forgive me if 
> I'm a
> bit harsh. But this might be the bitter end of my journey into the 
> realms of
> Twisted. Quick, fast and easy access to a database will make-or-break 
> all of
> my current projects, all of which are based on Twisted.

Here are some doc-examplets not using Augmentation.

from twisted.enterprise import adbapi

noop = lambda x:x
cp = adbapi.ConnectionPool('pyPgSQL.PgSQL', '::yourdatabase::')

deferred = cp.interaction(yourcallback, noop, *yourcallbackargs, 
**yourcallbackkwargs)
#	pass in a callback that receives a cursor as its first argument, 
DBAPI your little heart out.#
#	returns whatever you return in your callback.
#	note that 'yourcallback' does not run in the main reactor thread!  be 
careful not to try and call into it directly from here.

deferred = cp.operation(noop, noop, *executeargs, **executekwargs)
#	does cursor.execute(*executeargs, **executekwargs)
#	returns a deferred that calls back with None.  It fetches no data at 
all, useful for insert/update/stored procedure type stuff.

deferred = cp.query(noop, noop, *executeargs, **executekwargs)
#	does cursor.execute(*executeargs, **executekwargs)
#	returns a deferred that calls back with the fetchall()

noop is used to make these things act more like newer Twisted 
interfaces that were designed with Deferred in mind.

Presumably if all of your current projects are based on Twisted, you're 
comfortable enough with Deferred, so I won't go into that.

-bo




From exarkun at intarweb.us  Thu Jun 19 18:15:58 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 19 Jun 2003 20:15:58 -0400
Subject: [Twisted-Python] Custom webserver
In-Reply-To: <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>
References: <20030616113403.460.68059.Mailman@pyramid.twistedmatrix.com> <5.1.0.14.0.20030619112356.023a6538@131.103.204.244>
Message-ID: <20030620001558.GA3092@meson.dyndns.org>

On Thu, Jun 19, 2003 at 11:27:55AM +0530, Vijay Rao wrote:
> At 06:34 16/06/2003 -0500, you wrote:
> 
> >Message: 9
> >Date: Mon, 16 Jun 2003 10:03:52 +0300
> >From: Tommi Virtanen <tv at twistedmatrix.com>
> >To: twisted-python at twistedmatrix.com
> >Subject: Re: [Twisted-Python] Custom webserver
> >Reply-To: twisted-python at twistedmatrix.com
> >
> >On Mon, Jun 16, 2003 at 09:57:13AM +0530, Vijay Rao wrote:
> >> I am trying to use twisted as a webserver that serves files only for
> >> requests from the localhost ie the desktop on which it is running by
> >> mapping localhost(127.0.0.1) to a domain pattern ( thru the hosts file on
> >> windows ) so that a particular type of URL is served from this webserver.
> >
> >        Easiest way is to make it bind to 127.0.0.1. There's currently
> >        no support in mktap web for this, though there really should
> >        be.
> >
> >--
> >:(){ :|:&};:
> 
> Thanks , any pointer as to how to achieve this binding.

  You can mktap --source or mktap --xml, then edit the resulting .tas or
.tax relatively easily.  The value to change will in tcpPorts and be '' or
"", representing "all interfaces".  Changing it to "127.0.0.1" will cause
the app to bind only to localhost when run.

  There certainly should be better support for this.

> Also for refusing any external request I tried this hack and it works :
> 
> (from protocols/http.py)
> 
>     def lineReceived(self, line):
>         if self.__first_line:
>             # if this connection is not persistent, drop any data which
>             # the client (illegally) sent after the last request.
> ......
> .....
> ......
>             if len(parts) != 3:
>                 self.transport.write("HTTP/1.1 400 Bad Request\r\n\r\n")
>                 self.transport.loseConnection()
>                 return
>             client = self.transport.getPeer()
>             host = self.transport.getHost()
>             if client[1] != '127.0.0.1' or host[1] != '127.0.0.1' :
>                 self.transport.write("HTTP/1.1 404 Forbidden\r\n\r\n")
>                 self.transport.loseConnection()
>                 return
> .......
> ....
> 
> Can this cause any other problem ( One thing I can see is that new channels 
> are created for each external request refused in this manner )
> And the requesting client browser is also not being able to display the 
> result sent.

  A better way would be to separate this accept/deny logic out into a
separate class, perhaps a Resource subclass.

  Both moshez and I have recently written code to support this.  Moshez's
version is by far the simpler of the two, and is available at
http://moshez.org/localonly.py.  My version uses a mini-language for
creating accept/deny rulesets, and is available in current Twisted CVS, in
sandbox/exarkun/rresource.py.

  Hope this helps,
 
  Jp

-- 
http://catandgirl.com/view.cgi?90
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030619/4cf9163e/attachment.sig>

From itamar at itamarst.org  Thu Jun 19 18:58:11 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 20:58:11 -0400
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
References: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <20030619205811.6b1a0ae6.itamar@itamarst.org>

On Thu, 19 Jun 2003 23:13:07 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Just read thru http://www.twistedmatrix.com/documents/howto/enterprise
> and tried to fit the code to my needs, but ... this seems way too
> complicated. All I want is to execute a SQL-query and do something
> similar to fetchone or fetchall etc. in the DB-API 2.0 spec. I don't
> want to be forced to write classes and callbacks etc. just for a
> simple list of tuples or something returned from a SQL-query.

I updated the docs in CVS so they don't discuss Augmentation and instead
talk about the nice clean API that ConnectionPool exposes.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Thu Jun 19 19:07:28 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 11:07:28 +1000
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <20030619205811.6b1a0ae6.itamar@itamarst.org>
References: <007901c336a7$96444240$0401a8c0@razor> <20030619205811.6b1a0ae6.itamar@itamarst.org>
Message-ID: <20030620010727.GA12096@frobozz>

On Thu, Jun 19, 2003 at 08:58:11PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 19 Jun 2003 23:13:07 +0200
> "Thomas Weholt" <2002 at weholt.org> wrote:
> 
> > Just read thru http://www.twistedmatrix.com/documents/howto/enterprise
> > and tried to fit the code to my needs, but ... this seems way too
> > complicated. All I want is to execute a SQL-query and do something
> > similar to fetchone or fetchall etc. in the DB-API 2.0 spec. I don't
> > want to be forced to write classes and callbacks etc. just for a
> > simple list of tuples or something returned from a SQL-query.
> 
> I updated the docs in CVS so they don't discuss Augmentation and instead
> talk about the nice clean API that ConnectionPool exposes.

Does this mean that Augmentation should raise DeprecationWarnings?

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 19 19:09:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 11:09:39 +1000
Subject: [Twisted-Python] Re: Switch to a different uid/gid after binding reserved ports
In-Reply-To: <9OJg9OFLM37+Ewv+@tactilis.co.uk>
References: <20030609113810.2622.48957.Mailman@pyramid.twistedmatrix.com> <20030609123300.GC29930@mercury.local.net> <9OJg9OFLM37+Ewv+@tactilis.co.uk>
Message-ID: <20030620010939.GB12096@frobozz>

On Tue, Jun 17, 2003 at 08:59:07PM +0100, Martin Armstrong wrote:
> In article <20030609123300.GC29930 at mercury.local.net>, W.J. 
> <miathan at goliath.darktech.org> writes
> 
> >IMO the best way is to just try to setuid/setgid if requested, if it is 
> >not allowed you'll get an EPERM soon enough anyway.
> 
> Wladimir is correct.
> 
> Here's a patch (already tested by Richard) that provides the correct 
> behaviour:

[snip replace "if not" tests with try/except]

This looks sensible to me.  Would anyone object if I checked it in?

-Andrew.




From glyph at twistedmatrix.com  Thu Jun 19 19:18:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2003 20:18:47 -0500
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <007901c336a7$96444240$0401a8c0@razor>
Message-ID: <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>

On Thursday, June 19, 2003, at 04:13 PM, Thomas Weholt wrote:

> Is there no other way to do simple database access in Twisted? 
> Something
> more like the DB-API 2.0?

Feel free to just use DB-API modules directly, if that's appropriate.  
twisted.enterprise exists to facilitate non-blocking access; if your 
database queries are quick, you can block your server.  The API 
certainly is a bit grotty from disuse; a few cleanups and some better 
documentation would probably be better.

Speaking of being grotty - Bob's examples were correct, but there is a 
more natural API that you can use.  (The methods he suggested using 
pre-date Deferreds.)  Assuming you want to run a bunch of code which 
munges some data from a database, you can write something like this:

--

def myInteraction(t):
     t.execute('select * from my_numbers')
     # need some arbitrary code, so I'll sum these in memory rather than 
db
     sum = 0
     while True:
         row = t.fetchone()
         if not row:
             break
         num = row[0]
         sum += num
     return sum

def printx(x):
     print x

cp.runInteraction(myInteraction).addCallback(printx)

--

Assuming that your 'interaction' method doesn't touch any 
non-thread-safe state, this will work for pretty much any massaging you 
want to do to your data.  Since it's a Deferred, you can return it to 
various places in Twisted that can already manage waiting on deferreds 
for you, including woven.

runInteraction is probably the only method you really need, and it has 
the added benefit of allowing you to combine reads and writes in a 
single function, and rolling back any changes if there is a bug in your 
Python code.

> PS! I don't mean to step on anyones toes or anything, so forgive me if 
> I'm a
> bit harsh. But this might be the bitter end of my journey into the 
> realms of
> Twisted. Quick, fast and easy access to a database will make-or-break 
> all of
> my current projects, all of which are based on Twisted.

I can understand your frustration (twisted.enterprise is crap, 
especially the docs), but this is a bit much.

If you feel you're getting to this point with any bit of Twisted, 
remember that it's all just python code.  Twisted provides these 
components together in order to ease deployment and provide as complete 
an environment as possible, not to ram them down your throat.  There 
are many parts of Twisted which could use improvement, and we've 
attempted to do quite a few things that we are not expert at.

Certainly implementing your own database threadpool on top of 
reactor.callFromThread/callInThread or making database calls 
synchronously is easier than throwing out all of Twisted and starting 
over.




From stuart.hungerford at anu.edu.au  Thu Jun 19 20:18:07 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Fri, 20 Jun 2003 12:18:07 +1000
Subject: [Twisted-Python] Python 2.3 logging package and Twisted...
Message-ID: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>

Hi all,

As part of the Python 2.3 releases, the standard library now
includes a logging module.

In applications using Twisted.web is writing logs with this
new module the kind of operation that would need to be done in
a deferred?

I understand there's also twisted.python.log, but the issue
comes up for applications being moved to Twisted that already
use external logging libraries.



Cheers,

Stu

--
:: Stuart Hungerford (stuart.hungerford at anu.edu.au)
:: ANU Internet Futures Group




From andrew-twisted at puzzling.org  Thu Jun 19 20:37:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Jun 2003 12:37:22 +1000
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620023722.GC12096@frobozz>

On Thu, Jun 19, 2003 at 02:18:16PM -0400, Christopher Armstrong wrote:
> 
> On 2003.06.19 03:11, Grzegorz Adam Hankiewicz wrote:
> > Hi.
> > 
> > I've written a small script which implements a very basic dummy
> > SMTP server. It only listens to email and dumps the contents on
> > the screen. I needed it for debugging mail functions at work, where
> > touching the server SMTP is not allowed/dangerous.  Maybe somebody
> > else finds it useful.
> > 
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> 
> This would be great to have in doc/examples. Would you be willing to
> consign copyright to glyph and contribute fake_SMTP_server.py?

If you do, then I'll gladly spend a little bit of time to make it slightly
more idiomatic, i.e. use twisted.python.usage rather than getopt, and
probably make it work with twistd -y.

Actually, it may even be an idea to have both the "before" and "after" to
help demonstrate how easy it is to use twistd ;)

-Andrew.




From itamar at itamarst.org  Thu Jun 19 20:40:49 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Jun 2003 22:40:49 -0400
Subject: [Twisted-Python] Python 2.3 logging package and Twisted...
In-Reply-To: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>
References: <5.2.0.9.0.20030620121435.00b8a0e0@anusf.anu.edu.au>
Message-ID: <20030619224049.261b1dde.itamar@itamarst.org>

On Fri, 20 Jun 2003 12:18:07 +1000
Stuart Hungerford <stuart.hungerford at anu.edu.au> wrote:

> In applications using Twisted.web is writing logs with this
> new module the kind of operation that would need to be done in
> a deferred?

Uh. It can't be *blocking*. Writing to a log file is fine. Writing to a
socket would block, so don't do that. Using a Deferred doesn't magically
make it not block.

> I understand there's also twisted.python.log, but the issue
> comes up for applications being moved to Twisted that already
> use external logging libraries.

You can use it, sure, or whatever library you want, as long as they
don't block. In fact you can hook up logging to t.p.log too if you want
(log.addObserver with a little glue function.)


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From gradha at efaber.net  Fri Jun 20 01:21:53 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Fri, 20 Jun 2003 09:21:53 +0200
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620023722.GC12096@frobozz> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620072153.GA7564@ns.local>

On 2003-06-19, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> 
> This would be great to have in doc/examples. Would you be willing to
> consign copyright to glyph and contribute fake_SMTP_server.py?

Never done such a thing. Does it hurt? Or involve greedy lawyers? As
far as I'm concerned, you can have this same version as public
domain to do what you want with it, my employer is not SCO. In fact,
after stripping the user interface you have a 20 lines server class,
and looks like Andrew would like to rewrite them anyway...

On 2003-06-20, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> If you do, then I'll gladly spend a little bit of time to make
> it slightly more idiomatic, i.e. use twisted.python.usage rather
> than getopt, and probably make it work with twistd -y.
> 
> Actually, it may even be an idea to have both the "before" and
> "after" to help demonstrate how easy it is to use twistd ;)

That would be very nice, even though it was my first time and
felt quite easy to write. I guess packaging took more time than
development. If you want to know, long distance improvements I had
planned for this are making the server autonomous, with clients
being able to connect to it through telnet to read the mail activity.

And after that, just for the sake of it, implement a little web
server to have a nice user interface ala hotmail, where sent mails
would be logged and available for x time. Now emails are forgotten
as soon as they come, and its difficult to read them when you send
many at once.

But since it does now the important feature (help debugging mails),
I'm unlikely to continue improving it, and least in work time.

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From radix at twistedmatrix.com  Fri Jun 20 01:34:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 20 Jun 2003 03:34:49 -0400
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620072153.GA7564@ns.local>; from gradha@efaber.net on Fri, Jun 20, 2003 at 03:21:53 -0400
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620072153.GA7564@ns.local>
Message-ID: <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>

On 2003.06.20 03:21, Grzegorz Adam Hankiewicz wrote:
> On 2003-06-19, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
> > 
> > This would be great to have in doc/examples. Would you be willing to
> > consign copyright to glyph and contribute fake_SMTP_server.py?
> 
> Never done such a thing. Does it hurt? Or involve greedy lawyers? As
> far as I'm concerned, you can have this same version as public
> domain to do what you want with it, my employer is not SCO. In fact,
> after stripping the user interface you have a 20 lines server class,
> and looks like Andrew would like to rewrite them anyway...

Not at all. All you have to do is give some indication on this mailing
list or elsewhere that you _won't_ sue glyph if he says the code is 
Copyright (C) him. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From gradha at efaber.net  Fri Jun 20 01:43:55 2003
From: gradha at efaber.net (Grzegorz Adam Hankiewicz)
Date: Fri, 20 Jun 2003 09:43:55 +0200
Subject: [Twisted-Python] A fake SMTP server
In-Reply-To: <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>
References: <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620023722.GC12096@frobozz> <20030619071112.GA1518@ns.local> <20030619181816.GG19089@toshi.anaprd01.md.comcast.net> <20030620072153.GA7564@ns.local> <20030620073449.GC13055@toshi.anaprd01.md.comcast.net>
Message-ID: <20030620074355.GA7804@ns.local>

On 2003-06-20, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> >  http://gradha.sdf-eu.org/program/fake_SMTP_server-0.1.0.tar.gz
>
> This would be great to have in doc/examples. Would you be willing
> to consign copyright to glyph and contribute fake_SMTP_server.py?

I give indication on this mailing list that I won't sue glyph if
he says the code contained in the package above is Copyright (C)
him. :-)

-- 
 Grzegorz Adam Hankiewicz, gradha at efaber.net. Tel: +34-94-472 35 89.
 eFaber SL, Maria Diaz de Haro, 68, 2         http://www.efaber.net/
 48920 Portugalete, Bizkaia (SPAIN)



From erik at letterror.com  Fri Jun 20 07:26:20 2003
From: erik at letterror.com (Erik van Blokland)
Date: Fri, 20 Jun 2003 15:26:20 +0200
Subject: [Twisted-Python] IP address, server
Message-ID: <r01050400-1026-C89A35BCA32211D7B312000A956A726C@[10.0.0.21]>

Hello,

a humble question for a nudge in the right direction. I'm
utterly new to twisted, but I have a lot of experience in
python. I'm trying to get a tiny working demo to play with
and learn. I've installed twisted 1.0.5 on a Mac G3 running
10.2.6 OSX. Python 2.3b1. runtests seems to work.

The tiny http server script works when I take a browser on
the same machine as the server and look at
http://127.0.0.1:801, I get the expected result, so the
server is alive. When I take a look from a different machine
using the local IP address of the server http://10.0.0.5:801
I get no response. Other services over my network to the
server work fine. Do I need to do more, listen to a specific
port, tell the server the IP address? Is this supposed to
work and the problem lies elsewhere, OS perhaps (would be
good to know too)

This is my test script:

from twisted.web import resource
from twisted.web import server
from twisted.internet import reactor

HTTP_PORT = 801

class MyServer(resource.Resource):
    isLeaf = True
    def render(self, httprequest):
        hdr = httprequest.getAllHeaders()
        html = '<html><body>Have a nice day
%d</body></html>'
        httprequest.write(html)

        httprequest.setHeader('Content-Length', len(html))
        httprequest.setHeader('Content-Type', 'html/plain')
        httprequest.setResponseCode(200)

        httprequest.finish()
        
aserver = MyServer()
site = server.Site(aserver)
reactor.listenTCP(HTTP_PORT, site)
reactor.run()



Any pointers would be appreciated. Sorry if this is a dumb
question..

Thanks,
Erik van Blokland



From cce at clarkevans.com  Fri Jun 20 12:22:05 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 20 Jun 2003 18:22:05 +0000
Subject: [Twisted-Python] Simplifying database access in Twisted
In-Reply-To: <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>
References: <007901c336a7$96444240$0401a8c0@razor> <24786B98-A2BD-11D7-85F0-000393C9700E@twistedmatrix.com>
Message-ID: <20030620182205.GA44012@doublegemini.com>

Thomas,

  If you have *big* result sets which you have to 
  process incrementally, then you may want to look
  at flow.py in the sandbox.    It has a QueryIterator
  that I use, essentially it executes the query in
  a separate thread, and you can use generators to 
  write your data processing code.

  When I get time, I intend to hook in postgresql's
  async query library so that threads are not required.

Best,

Clark



From missive at hotmail.com  Fri Jun 20 12:27:49 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 20 Jun 2003 18:27:49 +0000
Subject: [Twisted-Python] PATCH: doc/historic/index.html  reality link
Message-ID: <BAY2-F108DgC81TbdkS00002f4a@hotmail.com>

>cvs diff -u index.html
Index: index.html
===================================================================
RCS file: /cvs/Twisted/doc/historic/index.html,v
retrieving revision 1.4
diff -u -r1.4 index.html
--- index.html  22 Apr 2003 03:51:26 -0000      1.4
+++ index.html  20 Jun 2003 18:25:03 -0000
@@ -100,7 +100,7 @@
     we use, and explain how we built tools on top of them which help us 
make
     releasing as painless as possible.</p></dd>

-    <dt><a href="2003/twisted-reality/twisted-reality.html"><cite>Twisted 
Reality: A Flexible Framework for Virtual Worlds</cite></a></dt>
+    <dt><a 
href="2003/pycon/twisted-reality/twisted-reality.html"><cite>Twisted 
Reality: A Flexible Framework for Virtual Worlds</cite></a></dt>

     <dd><p>Flexibly modelling virtual worlds in object-oriented languages 
has
       historically been difficult; the issues arising from multiple

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From corydodt at yahoo.com  Fri Jun 20 15:06:11 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 20 Jun 2003 14:06:11 -0700
Subject: [Twisted-Python] Fair warning: case-insensitive attributes
Message-ID: <3EF37743.9070004@yahoo.com>

Since this could be both a very useful and a very harmful change, I'm 
posting a set of fairly short diffs to tm.com:
   http://twistedmatrix.com/users/moonfallen/diffs.txt
If anyone thinks this patch will slow things down (possible) or break 
stuff (unlikely; current tests pass), I want to know that.

Of course there are new tests to go with it:
   http://twistedmatrix.com/users/moonfallen/test_diffs.txt

In particular, Woven appears to be unaffected.  If I don't get any 
significant backlash over the weekend, this goes in.  This makes the 
following code possible:

 >>> d=microdom.parseString('<script LANGUAGE="JScript"></script>')
 >>> d.documentElement.setAttribute('language', 'javascript')
 >>> d.toxml()
'<?xml version="1.0"?><script language="javascript"></script>'

(Note that caseInsensitive=1 and preserveCase=0 are the defaults, and 
always have been.  They just affect attribute names now, as well as 
element names.)





From itamar at itamarst.org  Fri Jun 20 15:11:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 20 Jun 2003 17:11:51 -0400
Subject: [Twisted-Python] Fair warning: case-insensitive attributes
In-Reply-To: <3EF37743.9070004@yahoo.com>
References: <3EF37743.9070004@yahoo.com>
Message-ID: <20030620171151.5fef5269.itamar@itamarst.org>

On Fri, 20 Jun 2003 14:06:11 -0700
Cory Dodt <corydodt at yahoo.com> wrote:

> (Note that caseInsensitive=1 and preserveCase=0 are the defaults, and 
> always have been.  They just affect attribute names now, as well as 
> element names.)

And I assume in microdom.parseXML and friends it won't be case
insensitive?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Sat Jun 21 00:05:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jun 2003 01:05:47 -0500
Subject: [Twisted-Python] New Guard question
In-Reply-To: <20030619193358.GA27711@mumak.net>
Message-ID: <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>

On Thursday, June 19, 2003, at 02:33 PM, jml at ids.org.au wrote:

> I've been trying to figure out the new guard and cred, with the goal 
> of perhaps
> switching Issues over to use guard rather than the custom auth it does 
> now.

Hooray!  (Subtext - everyone should do this and give feedback)

> Looking at the webhappyrealm.py example in the sandbox, it's not very 
> clear
> what the returned resources represent.

Ah yes.  This is due to my peculiar ... idiom, when dealing with web 
login.

> Also, returning Resources seems a little weird. To me, a resource is 
> whole
> page, why would I want a whole page returned?

You're going to have to remember that I still think of Twisted as a big 
multiplayer game, and all this HTTP stuff is just kind of a grotty way 
to display room descriptions.  If you haven't already done so, please 
check your assumptions about web development at the door.  It's cool, I 
can wait.

Okay then.

So, the idea here is that with any login to an interactive system, you 
have a session.  You log in, you interact with the system for a while, 
and then you log out.  Conceptually, there is an object on a "client" 
that connects to an object on a "server".  [New] Cred's model for 
representing this interaction is the connection between the 
AvatarAspect and the Mind (see previous email for definitions of the 
contentious verbiage), which is established when 
IRealm.requestAvatar(...) is called, and ends when the 'logout' method 
returned from that call is called.

The AvatarAspect that is returned is expected to conform to an 
interface (in this case, IResource) that has some meaning to the 
protocol it's going to be talking to.  In the simplest case, for 
example, some cred junk that merely password protects a directory 
structure, this resource can be the same for all users.

However, when the application that you're interacting with is actually 
an *application*, and you're trying to mimic a "real" client program 
with the browser, you want to provide custom logic for each user who 
logs in.

Now to answer the question you actually asked: the Resource that 
woven.guard is requesting from your Realm is supposed to represent the 
UI to present to a particular user of your application.  In theory, 
you've got some domain data (perhaps an IssuesPerson) which represents 
the user (their Persona) - you can wrap a Resource around this and then 
provide web-specific functionality to communicate with your domain 
objects; hooray, it is object-oriented programming for the web.

Then, this Resource is not only a "whole page", but an encapsulation of 
the user's entire experience of the web component of your system.  
Typically you will provide a customized top-level facade that has a 
small amount of dynamic content and then references to shared objects, 
such as static data on the filesystem or dynamic objects which are 
calculated on each view but are the same for all users.

That was how to do things right.  Now I will explain why you should not 
do them wrong.

You may be wondering, "but what about the session!? I can keep this 
data on a session object, can't I?"  The answer is "yes, but why would 
you?"  Even given the fact that Session is componentized and may 
provide custom, separated functionality, this is a protocol detail that 
leads to unpleasant code.  Consider, if you want to use woven.guard's 
nifty session-negotiation feature, but also keep your user-specific 
code in a session, your code will look like this:

     # WHAT FOLLOWS IS AN EXAMPLE OF A MISTAKEN ASSUMPTION THAT IS 
COMMON DUE TO
     # HOW AWFUL THE WEB IS.  PLEASE DO NOT WRITE NEW-CRED WEB 
APPLICATIONS THIS
     # WAY.

     from twisted.web.resource import Resource
     from twisted.cred.badidea import ICredSession

     class MySingletonResource(Resource):
         data = 'hello %s, do you like sunshine?'
         def __init__(self, realm):
             Resource.__init__(self)
             self.realm = realm

         def render(self, request):
             # negotiate session
             s = request.getSession()
             if s is None:
                 return request.setupSession()

             # return data
             request.setHeader('content-type', 'text/plain')
             c = s.getComponent(ICredSession)
             if c is None:
                 return 'it looks like you are anonymous please log in!'
             else:
                 avatar = c.getLoggedInForRealm(self.realm)
                 return self.data % avatar.username

Now, isn't that ugly?  Granted, the guard-style session negotiation 
makes it slightly more perverse, but regardless, there will be 
boilerplate in every render() and getChild() for every resource you 
have in order to identify the appropriate user, plus code for 
Anonymous, unless you make your resources depend upon a specifc 
execution context to work.

If this seems normal to you, or not particularly unpleasant, have a 
look at some sample code for the suggested approach:

     # THIS, ON THE OTHER HAND, IS NOT SO BAD.
     from twisted.web.resource import Resource

     class MyResource(Resource):
         data = 'hello %s, do you like sunshine?'

         def __init__(self, avatar):
             Resource.__init__(self)
             self.avatar = avatar

         def render(self, request):
             request.setHeader('content-type', 'text/plain')
             return self.data % self.avatar.username

     class MyAnonymousResource(Resource):

         def render(self, request):
             return 'it looks like you are anonymous please log in!'

I mentioned games at the start of the email.  This sort of approach is 
important in a game system because you want to perform on-the-fly 
updates of the user's interface without necessarily altering the state 
of their avatar object.  Giving every user's connection its own 
resource is much more flexible.  Even in this small example, we've 
exposed some small customizability by accident: the realm could 
maintain an active pool of MyResource instances and set self.data = 
'Sorry %s, *** YOU HAVE DIED ***' on one of them; the next time the 
user loads their page, they will see a different message.  There is 
nowhere to put this in MySingletonResource.

(Of course, the right way to do this is with a Mind object for HTTP, 
but the browser will be unable to do any real updating unless it is 
taking Donovan's psychoactive LivePage javascript.  That particular 
potent mix is unfortunately not yet suitable for beginners, but newcred 
should be soon.  Think of woven.guard as a 'gateway drug' to LivePage's 
full flexibility.)

Please feel free to ask more questions, as I'd like to provide a 
resource for doc-writers here on the list :)




From smurf at smurf.noris.de  Sat Jun 21 05:21:30 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 21 Jun 2003 13:21:30 +0200
Subject: [Twisted-Python] Allow static.Data to be at the root
References: <pan.2003.05.13.08.25.34.929793@smurf.noris.de> <20030513104748.14913.qmail@green.zadka.com>
Message-ID: <pan.2003.06.21.11.21.27.607014@smurf.noris.de>

Hi, Moshe Zadka wrote:

> On Tue, 13 May 2003, "Matthias Urlichs" <smurf at smurf.noris.de> wrote:
> 
>> Here's a small patch to allow a twisted.web.static.Data element at the
>> root of your web space.
> 
> This detracts functionality, not enhances it.
> If you really want it, it's better to have a 
> 
> root = resource.Resource()
> root.putChild('', static.Data('text/plain', 'hello world'))

... but it's OK to do essentially the same thing to t.w.static.File?

  CVS: 2003-06-20 07:09:12
  Make static.File used as a root resource work as expected when serving a file.

IMHO: Please do either both, or neither.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
The State of California has no business subsidizing intellectual curiosity.
					-- Ronald Reagan




From andrew-twisted at puzzling.org  Sat Jun 21 09:18:51 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 22 Jun 2003 01:18:51 +1000
Subject: [Twisted-Python] Allow static.Data to be at the root
In-Reply-To: <pan.2003.06.21.11.21.27.607014@smurf.noris.de>
References: <pan.2003.05.13.08.25.34.929793@smurf.noris.de> <20030513104748.14913.qmail@green.zadka.com> <pan.2003.06.21.11.21.27.607014@smurf.noris.de>
Message-ID: <20030621151851.GD15578@frobozz>

On Sat, Jun 21, 2003 at 01:21:30PM +0200, Matthias Urlichs wrote:
> Hi, Moshe Zadka wrote:
> 
> > On Tue, 13 May 2003, "Matthias Urlichs" <smurf at smurf.noris.de> wrote:
> > 
> >> Here's a small patch to allow a twisted.web.static.Data element at the
> >> root of your web space.
> > 
> > This detracts functionality, not enhances it.
> > If you really want it, it's better to have a 
> > 
> > root = resource.Resource()
> > root.putChild('', static.Data('text/plain', 'hello world'))
> 
> ... but it's OK to do essentially the same thing to t.w.static.File?
> 
>   CVS: 2003-06-20 07:09:12
>   Make static.File used as a root resource work as expected when serving a file.
> 
> IMHO: Please do either both, or neither.

I agree; I made this change to static.File because it worked fine as a root
resource when serving a directory, but not when serving a single file[1],
which seemed inconsistent to me.  As Matthias points out, static.Data should
be consistent with static.File (which of course should be consistent with
itself!).

If someone more familiar with Twisted Web wants to undo that change because
I've misunderstood the way things are meant to work, I won't mind.  In that
case, though, I'd like to see static.File used as root resource to serve a
directory fail, or at least raise a deprecation warning.  I volunteer to
update the using-twistedweb howto to mention this restriction if this is the
way we go.

-Andrew.

[1] Yes, I realise a web server that only serves a single file isn't very
    interesting.  This happened when a colleague at work tried to demostrate
    Twisted Web to another colleague; this behaviour was surprised them (and
    me, although I'm hardly a Twisted Web expert).  A use-case does spring
    to mind, though: a "Sorry, the site is temporarily unavailable due to
    planned maintenance" message that lives on-disk for easy editing -- when
    the maintenance is done, the root resource could be replaced with the
    real site again without restarting the server...




From exarkun at intarweb.us  Sat Jun 21 13:19:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 21 Jun 2003 15:19:54 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] explanation of () for anonymity
In-Reply-To: <E19Rrfo-0007Q8-00@pyramid.twistedmatrix.com>
References: <E19Rrfo-0007Q8-00@pyramid.twistedmatrix.com>
Message-ID: <20030621191954.GA8154@meson.dyndns.org>

On Mon, Jun 16, 2003 at 05:57:16AM -0500, glyph CVS wrote:
> Modified files:
> Twisted/twisted/cred/checkers.py 1.2 1.3
> 
> Log message:
> explanation of () for anonymity
> 

  Might an instance of object be a better value for ANONYMOUS?

  It should be even harder to use this by accident (though I admit I don't
see any way to accidentally enter an empty tuple).

  Jp

-- 
#!/bin/bash
( LIST=(~/.sigs/*.sig)
  cat ${LIST[$(($RANDOM % ${#LIST[*]}))]}
  echo -- $'\n' `uptime | sed -e 's/.*m//'` ) > ~/.signature
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030621/df7b4467/attachment.sig>

From glyph at twistedmatrix.com  Sat Jun 21 17:10:35 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Jun 2003 18:10:35 -0500
Subject: Fwd: [Twisted-Python] New Guard question
Message-ID: <9079C2D3-A43D-11D7-B52C-000393C9700E@twistedmatrix.com>

Begin forwarded message:

> From: adalke at mindspring.com

> Hi Glyph,
>
>   I'm travelling right now, and can't send from the account I use
> to send mail to Twisted, so I'm sending this via personal email.
> Feel free to CC to Twisted as needed.

Your wish is my command.

> You gave two examples, a badidea one and a sketch of a new
> one.  I think you are presenting a straw-man badidea.

They were demonstrations of a coding style which I have actually seen 
several examples of.  I think you're actually agreeing with me, because 
I can't find anything in this message that indicates otherwise.

Let me be clear on the distinction between these styles: what I am 
saying is *good* is keeping the avatar in the resource (which the 
new-cred enabled UsernamePasswordWrapper pretty much requires).

This is good because resources are lightweight and it establishes a 
good encapsulation barrier.  Rather than having a Resource which 
depends on state in the session, or a non-Resource which does 
resource-like things and accept different arguments.  You have a 
resource that can _always_ render itself as long as it is internally 
consistent.

What I am saying is *bad* is retrieving the avatar from the session 
every time in your own application code.  Now, obviously the code-path 
to retrieve the avatar object does have to interact with your session, 
because HTTP sucks, but this is tricky and you should wrap it if you 
can.  Guard does it for you, and I think it does a good job, but if it 
doesn't you should probably contribute fixes or suggestions for how it 
could be better, and not write your own session-masher.

> Were I to write such code, it would look like
>
> import weakref
> request_info = WeakRef.WeakKeyDictionary()
>
> class MyGuardResource(Resource):
>   def __init__(self, guarded_resource, realm):
>     Resource.__init__(self)
>     self.realm = realm
>     self.guarded_resource = guarded_resource
>
>   def getChild(self, name):
>     # Fix as needed if getChild is supposed to return None for no 
> named child
>     return MyGuardResource(self.realm, 
> self.guarded_resource.getChild(name))
>
>   def render(self, request):
>     # negotiate session
>     s = request.getSession()
>     if s is None:
>       return request.setupSession()
>
>     # Logged in?
>     c = s.getComponent(ICredSession)
>     if c is None:
>       request.setHeader('content-type', 'text/plain')
>       return 'it looks like you are anonymous please log in!'
>     avatar = c.getLoggedInForRealm(self.realm)
>     # Either use a weakref like this
>     request_info[request] = {"avatar": avatar}
>     return self.guarded_resource.render(request)
>     # or change the call API for request, like
>     # return self.guarded_resource.render(request, avatar)

In this example, self.guarded_resource would not be a Resource, but 
some special GuardedResource subclass which produced output for an 
avatar rather than a request.

> Neither the weakref nor the tweaked parameters are
> particularly satisfying.  I could make it nicer by assuming I
> can call the Resource constructor, as you seem to allow.

But then, what would you call the Resource constructor with?  Perhaps 
the avatar? :).

> It's hard to compare to your "not so bad" example because
> you don't show how your two resources are added to the
> system.  As written, you don't allow either one to have dynamic
> children, so that being the case, the following would be a
> simpler replacement for your "badidea" code

The "bad idea" resource is a resource that is statically added on the 
"web" side of things by a putChild or a .rpy or somesuch, and thus can 
only know what realm it is being added for, and must be added in 
parallel with the guard object.

The "not so bad" resource is meant to be instantiated by a Realm.  Most 
likely, adaption to the appropriate interface using the components 
system will be automated by some common Realm base class when we add 
one, but for now it's up to you to figure out to return a Resource.  In 
this case, only the UsernamePasswordWrapper has to know about the 
Portal, and the realm can create an appropriate Resource without 
knowing anything else about the structure of other web code.

Actually the "bad idea" resource can't do dynamic children without 
doing boilerplate, whereas the "not so bad" resource may implement 
getChild in a naive way and it will work properly.

> class MySimpleGuardResource(Resource):
>   def __init__(self, realm, authorized, not_authorized):
>     Resource.__init__(self):
>     self.realm = realm
>      .. same for the other two parameter...
>   def render(self, request):
>     # negotiate session
>      ... getSession() .. if is None ... setupSession
>     c = s.getComponent(ICredSession)
>     if c is None:
>       return self.not_authorized().render(session)
>     return self.authorized(c).render(session)
>
> in which case I can identically use your not-so-bad
> classes.

Well, yes, that is the whole point of guard.

> So you say:
>> Consider, if you want to use woven.guard's nifty session-negotiation
>> feature, but also keep your user-specific code in a session, your code
>> will look like this:

Let me clarify:

If you want to use woven.guard's nifty session-negotiation feature, but 
also implement service-specific functionality in the resource and 
retrieve it from the session yourself rather than just creating an 
intelligent stateful resource, your code will look like this:


> but I don't see why the latter follows from the former, given that with
> a simple adapter it appears to allow your code.

... which is what Guard is doing.  The point is that I am encouraging 
users to use this adapter and have the Realm create an appropriate 
resource by calling its constructor, rather than attempting to have a 
resource initialized dumb and then re-customize itself on each call to 
render().

If you still really think this is a straw-man example of bad style, 
then I applaud your optimism, but it's seriously a very common mistake 
:-).  After all, most web frameworks have the notion of rendering a 
page as pretty basic, and then things that are "dynamic" are 
implemented with do-I-have-a-logged-in-user conditionals, not object 
references.

> Mind you, I'm still trying to understand how to do authentication in 
> Twisted, either cred or mind style.  I know how to do it myself, so 
> that's my starting point.

"cred or mind style"?  There are only two styles, one of which is 
old-cred (Service/Perspective/Authorizer), which is awful and horrible 
and don't use it please unless you have to interact with code that 
hasn't been ported from it yet, and new-cred 
(Realm/Avatar/CredentialsChecker), which will be available in 1.0.6, 
and all this discussion is about.

> Regarding names, IMHO, "Guard" is a better name than "Portal",
> and you could use "UsernamePasswordGuard", etc. rather than
> "...Wrapper".

Hmm.  'Guard' is a different thing from 'Portal', but I think that 
you're right about UsernamePasswordGuard rather than 
UsernamePasswordWrapper.




From pp64 at cornell.edu  Sat Jun 21 22:17:50 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 22 Jun 2003 00:17:50 -0400
Subject: [Twisted-Python] Weirdness in flow
Message-ID: <20030622001750.7bcab15d.pp64@cornell.edu>

Hi.
I couldn't catch cce in IRC for  while, so here goes:
flow._Deferred does not handle errors properly. I cannot find the place where flow._Deferred.errback is called, and it doesn't work anyway.
I put a short program that demonstrates the behavior on http://dunce.mine.nu:8080/flow_simplefailure_test.py
No matter what I do, I cannot get "got from getPage yield" to get printed or errback to get triggered.

Paul



From pp64 at cornell.edu  Sat Jun 21 23:53:56 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 22 Jun 2003 01:53:56 -0400
Subject: [Twisted-Python] flow again
Message-ID: <20030622015356.0d16ac59.pp64@cornell.edu>

The fix is trivial and it seems to give the expected behavior. Diff is at http://dunce.mine.nu:8080/flow.diff



From smurf at smurf.noris.de  Sun Jun 22 09:14:24 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sun, 22 Jun 2003 17:14:24 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
Message-ID: <200306221714.24485@smurf.noris.de>

Since "suck" doesn't work for me for a variety of reasons, I decided to 
replace it with a solution based on twisted.protocol.nntp. After a few hours 
of hacking, I now have a nice program which nicely saturates my downlink 
bandwidth. ;-)

To make a long story short, the attached patch implements the changes and 
fixes I needed to actually get there.

The "Allow the article text to be a callable or deferred" change implements 
the common situation where I ask server B whether it would like to be fed 
article X before actually pulling that article from server A, and/or where 
the pull is still in progress.

There is one somewhat- incompatible change here, in that I return the GROUP 
results (article count, high and low numbers) as integers, not as text. In 
practice they're going to be int()ized anyway, so this should not be a 
problem.

# twisted/protocols/nntp.py
#     Fixes for news gateways / 'suck'-style operation / INN as server:
#     - The client uses \n and does NOT esacpe start-of-line dots.
#       The server uses \r\n and escapes dots ONCE, not twice (ouch).
#     - POST temporarily blocks streaming. Make sure this is observed,
#       pass a Deferred out for clients to restart themselves with
#     - Add a command to allow MODE READER
#     - Allow bare reply numbers without text
#     - Allow the article text to be a callable or a deferred
#     - use CHECK/TAKETHIS if there's a message ID
#     - return group article numbers (GROUP reply) as numbers
#     - Clean up article linefeed handling
# twisted/test/test_nntp.py
#     Make sure that dot escapes are passed cleanly.
#     Make sure that no empty lines are added at the end.
#     Use the unittest object for checking.
#     Use client-side line endings for the client,
#       assume that the server side is transparent.
#     Make sure that the test doesn't just peter out halfway through.
#     Remove the commented-out iterate() calls.
#       loopback() already does the work for us.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Standards are different for all things, so the standard set by man is by
no means the only 'certain' standard.  If you mistake what is relative for
something certain, you have strayed far from the ultimate truth.
		-- Chuang Tzu
-------------- next part --------------
A non-text attachment was scrubbed...
Name: nntp.patch
Type: text/x-diff
Size: 18384 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030622/8449162b/attachment-0002.patch>

From lordvan at lordvan.com  Sun Jun 22 09:58:44 2003
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 22 Jun 2003 17:58:44 +0200 (CEST)
Subject: [Twisted-Python] Twisted.web and adbapi example?
In-Reply-To: <FF816FA079A11949BE655A693DC02D104D96E3@exchange2.loyaltyworks.com>
References: <FF816FA079A11949BE655A693DC02D104D96E3@exchange2.loyaltyworks.com>
Message-ID: <54364.62.218.218.165.1056297524.squirrel@mail-at.net>

sorry really forgot about that .. here it comes ;)

regards
P.S.: how the db looks like is left as an exercise to the user grin

<quote who="Morrow, Paul">
> I've been pouring through the docs and examples, but can't find an
> example of a .rpy that generates a page containing the results of a
> database query.  How would such a thing be properly architected?
> Clearly the adbapi would be involved, but then how do I get the query
> results into the string returned by my resource?  Or would I use a
> deferred instead?
>
> Would someone please share a little code snippet (or point me at
> one)illustrating how that would best be accomplished?
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbtest.py
Type: application/octet-stream
Size: 989 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030622/02f911e7/attachment-0002.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbtest.xhtml
Type: application/xhtml+xml
Size: 317 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030622/02f911e7/attachment-0002.xhtml>

From tv at twistedmatrix.com  Sun Jun 22 10:12:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 22 Jun 2003 19:12:32 +0300
Subject: [Twisted-Python] twisted.web.client and status 202
Message-ID: <20030622161232.GA23227@tao.tv.debian.net>

	Hi. In making TouRSSt (http://toursst.sf.net/,
	soon in a Debian mirror near you), I noticed
	Slashdot's RSS feed gives status code 202.

http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

10.2.3 202 Accepted

The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.

The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent's connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request's current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.

	Current twisted.web.client believes this to be an
	error, and aborts fetching the RSS. Liiwi finally
	prodded me into doing something about it. Here's
	a change he suggested and I agree with:

--- twisted/web/client.py	20 Jun 2003 17:14:16 -0000	1.19
+++ twisted/web/client.py	22 Jun 2003 16:01:20 -0000
@@ -59,6 +59,8 @@
     def handleStatus_200(self):
         self.factory.gotHeaders(self.headers)
 
+    handleStatus_202 = handleStatus_200
+
     def handleStatusDefault(self):
         self.failed = 1
 

	Yell now or forever clean up the CVS tree I commit
	that into :)

-- 
:(){ :|:&};:



From jml at ids.org.au  Mon Jun 23 11:02:00 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Tue, 24 Jun 2003 03:02:00 +1000
Subject: [Twisted-Python] New Guard question
In-Reply-To: <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <20030619193358.GA27711@mumak.net> <6711AAA3-A3AE-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <20030623170200.GB2124@mumak.net>

On Sat, Jun 21, 2003 at 01:05:47AM -0500, Glyph Lefkowitz wrote:
> On Thursday, June 19, 2003, at 02:33 PM, jml at ids.org.au wrote:
> > What does the returned Resource represent?
>
> [confuso-ray generating padding]
> The whole UI for that user.
> Send more questions.

I assume this is a correct summary.

So, I guess this means that for a web application with that allows anonymous
users to do and see many things on many pages, there'll be many Portal and
Realm instances? Or is this where the mysterious mind comes into play?

Also, your badidea example didn't really help me. Firstly, I don't use weird
guard sessions, I just use normal sessions. Secondly, much of the if/then
logic is wrapped in Views that provide patterns to the templates. Example:

<div view="authProtected">
  <span pattern="anonymous"><a href="login">Login</a></span>
  <span pattern="loggedIn"><a href="logout">Logout</a> 
    (<a view="personLink"/>)</span>
</div>

It's hard to see how to do this with guard.

This email is probably premature, as I'm still fiddling around with some
trivial examples trying to get stuff to work. (Examples using Page.wchild_*
and getDynamicChild methods, rather than resource.putChild)

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030624/92c6cc17/attachment.sig>

From exarkun at intarweb.us  Mon Jun 23 00:11:35 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 02:11:35 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <200306221714.24485@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de>
Message-ID: <20030623061135.GA12797@meson.dyndns.org>

On Sun, Jun 22, 2003 at 05:14:24PM +0200, Matthias Urlichs wrote:
> Since "suck" doesn't work for me for a variety of reasons, I decided to 
> replace it with a solution based on twisted.protocol.nntp. After a few hours 
> of hacking, I now have a nice program which nicely saturates my downlink 
> bandwidth. ;-)
> 

  Cool!

> To make a long story short, the attached patch implements the changes and 
> fixes I needed to actually get there.
> 
> The "Allow the article text to be a callable or deferred" change implements 
> the common situation where I ask server B whether it would like to be fed 
> article X before actually pulling that article from server A, and/or where 
> the pull is still in progress.
> 

  Hmm, this is the only part of the patch I am unsure about.  The API seems
a little too tuned to your use-case.  I think the way to go for this would
be to have a Producer passed in and make the NNTP protocol a Consumer
for that (in turn acting as a Producer for its transport object).  Would you
be willing to make this change? (If you need an example of how this might
work, check out smtp.py)

> There is one somewhat- incompatible change here, in that I return the GROUP 
> results (article count, high and low numbers) as integers, not as text. In 
> practice they're going to be int()ized anyway, so this should not be a 
> problem.

  I think this is fine.

> 
> # twisted/protocols/nntp.py
> #     Fixes for news gateways / 'suck'-style operation / INN as server:
> #     - The client uses \n and does NOT esacpe start-of-line dots.
> #       The server uses \r\n and escapes dots ONCE, not twice (ouch).
> #     - POST temporarily blocks streaming. Make sure this is observed,
> #       pass a Deferred out for clients to restart themselves with
> #     - Add a command to allow MODE READER
> #     - Allow bare reply numbers without text
> #     - Allow the article text to be a callable or a deferred
> #     - use CHECK/TAKETHIS if there's a message ID
> #     - return group article numbers (GROUP reply) as numbers
> #     - Clean up article linefeed handling
> # twisted/test/test_nntp.py
> #     Make sure that dot escapes are passed cleanly.
> #     Make sure that no empty lines are added at the end.
> #     Use the unittest object for checking.
> #     Use client-side line endings for the client,
> #       assume that the server side is transparent.
> #     Make sure that the test doesn't just peter out halfway through.
> #     Remove the commented-out iterate() calls.
> #       loopback() already does the work for us.

  Thanks for these test fixes/cleanups, too.

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030623/55af174a/attachment.sig>

From glyph at twistedmatrix.com  Mon Jun 23 02:20:17 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2003 03:20:17 -0500
Subject: [Twisted-Python] New Guard question
In-Reply-To: <20030623170200.GB2124@mumak.net>
Message-ID: <85F23C61-A553-11D7-B52C-000393C9700E@twistedmatrix.com>

On Monday, June 23, 2003, at 12:02 PM, Jonathan Lange wrote:

> So, I guess this means that for a web application with that allows 
> anonymous
> users to do and see many things on many pages, there'll be many Portal 
> and
> Realm instances? Or is this where the mysterious mind comes into play?

Assuming you mean a single application, there will be one Portal to 
access the site, one Realm to dish out resources, and then each 
resource will return a tree.  But, of course, "application" is a funny 
word; if you are making a site that integrates lots of different 
pre-existing components there may be multiple Realms, arranged in some 
sort of hierarchy with rules for how and when one dispatches to 
another.  (For example, the top-level Realm, attached to the Portal, 
may specify that a certain child URL maps to another Realm's IResource 
children, and that the user is preauthenticated ... this will probably 
need some infrastructure work.)

> Also, your badidea example didn't really help me. Firstly, I don't use 
> weird
> guard sessions, I just use normal sessions.

"normal" sessions are kinda broken; you should probably update your 
code to use guarded sessions.  In fact, I sure would like to deprecate 
the old session code (for reasons related to browser eccentricities 
that are out of scope for this discussion) but I will probably never be 
able to because it's so widely used at this point.

> Secondly, much of the if/then logic is wrapped in Views that provide 
> patterns to the templates. Example:
>
> <div view="authProtected">
>   <span pattern="anonymous"><a href="login">Login</a></span>
>   <span pattern="loggedIn"><a href="logout">Logout</a>
>     (<a view="personLink"/>)</span>
> </div>
>
> It's hard to see how to do this with guard.

Your Realm will return a View which wraps a Model.  The anonymous model 
is different from the logged-in one, but the top-level Views will 
likely be of the same class.  You might want to write a generic 
'switch' view that looks something like this:

<div view="switch" attribute="hasUser">
   <span case="1"><a href="logout">Logout</a></span>
   <span case="0"><a href="login">Login</a></span>
</div>

If this is not obvious - the idea is that you specify a submodel (or 
perhaps some other interface which the View can talk to) "hasUser".  
The 'anonymous' model will say "0" and the logged-in-user model will 
say "1".  This kind of functionality is also useful to specify 
'template adapters' in your template code, to specify different display 
styles in-line in a list for different model classes.

I've done this in ad-hoc ways once or twice; I should probably check in 
a "real" version to woven at some point.

> This email is probably premature, as I'm still fiddling around with 
> some
> trivial examples trying to get stuff to work. (Examples using 
> Page.wchild_*
> and getDynamicChild methods, rather than resource.putChild)

Nevertheless, I don't have the time to write coherent documentation for 
this stuff right now, so hopefully these emails are generating fodder 
for someone who can :).




From lafou at wanadoo.fr  Mon Jun 23 03:01:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 11:01:27 +0200
Subject: [Twisted-Python] WOVEN Question
Message-ID: <1056358887.2276.55.camel@biproc>

Hi all

I have a question : I want to create a business platform using Woven.
Like Zope (ZPT), I saw woven is separating logic/presentation (and
control, yes, woven is based on MVC). But In zope, I can define some
macros that could expand when I want. I mean, if I have a site like this

+--------------------+
|  Menu1 menu2 ----- |
|                    |
|                    |
| some text          |
|                    |
+--------------------+

and want an "include" of the menu in several pages. Should I use a new
view ? It would be weird since I would have some large pieces of HTML in
python code.


Any suggestion ?



-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From smurf at smurf.noris.de  Mon Jun 23 04:51:40 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 23 Jun 2003 12:51:40 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org>
Message-ID: <pan.2003.06.23.10.51.38.783891@smurf.noris.de>

Hi, Jp Calderone wrote:

> Hmm, this is the only part of the patch I am unsure about.  The API
> seems a little too tuned to your use-case.  I think the way to go for
> this would be to have a Producer passed in and make the NNTP protocol a
> Consumer for that (in turn acting as a Producer for its transport
> object).  Would you be willing to make this change? (If you need an
> example of how this might work, check out smtp.py)

Hmm. Looking at the SMTP case, it needs refactoring in that the producer
isn't decoupled from the file object it ends up reading, thus I can't plug
a different kind of producer in there.

Looking further, there's a slightly-broken data-from-file producer in
doc/historic/2003/pycon/twisted-internet/twisted-internet.py ...

Anyway, I need NNTP to be a streaming protocol. With a Deferred, this is
easy -- each Deferred gets a callback which writes TAKETHIS plus the
message to the server (and queues the result code recognition), so these
can complete in any order, which is very nice. A producer interface would
instead have an arbitrary number of producers, all of which are active,
but as soon as the first one returns anything I have to temporarily
deactivate all the others. That sounds dangerous -- what if a producer
can't be paused? Then I need to buffer their data, too, which is no
different from the current case where the article data also end up in
memory.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Man: I know how to please a woman.
Woman: Then please leave me alone.




From tv at twistedmatrix.com  Mon Jun 23 01:01:18 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 23 Jun 2003 10:01:18 +0300
Subject: [Twisted-Python] FYI: .tap name clash
Message-ID: <20030623070118.GA18634@lapdog>

	FYI, there's another project using the filename extension ".tap".

	http://wav-prg.sourceforge.net/

-- 
:(){ :|:&};:



From itamar at itamarst.org  Mon Jun 23 09:30:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 11:30:14 -0400
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056358887.2276.55.camel@biproc>
References: <1056358887.2276.55.camel@biproc>
Message-ID: <20030623113014.492f0f59.itamar@itamarst.org>

On 23 Jun 2003 11:01:27 +0200
Philippe Lafoucrière <lafou at wanadoo.fr> wrote:

> I have a question : I want to create a business platform using Woven.
> Like Zope (ZPT), I saw woven is separating logic/presentation (and
> control, yes, woven is based on MVC). But In zope, I can define some
> macros that could expand when I want. I mean, if I have a site like
> this

Woven has macros that are essentially identical to ZPT METAL macros -
see twisted.web.widgets.ExpandMacro.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From lafou at wanadoo.fr  Mon Jun 23 09:43:14 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 17:43:14 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030623113014.492f0f59.itamar@itamarst.org>
References: <1056358887.2276.55.camel@biproc>
	 <20030623113014.492f0f59.itamar@itamarst.org>
Message-ID: <1056382994.2276.101.camel@biproc>

> Woven has macros that are essentially identical to ZPT METAL macros -
> see twisted.web.widgets.ExpandMacro.

found at: twisted.web.woven.widgets.ExpandMacro
but thanks a lot, I'll take a look at it !




From mesozoic at polynode.com  Mon Jun 23 09:50:47 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 23 Jun 2003 11:50:47 -0400
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056358887.2276.55.camel@biproc>
References: <1056358887.2276.55.camel@biproc>
Message-ID: <20030623155047.GA8824@polynode.com>

On Mon, Jun 23, 2003 at 11:01:27AM +0200, Philippe Lafoucri?re wrote:
-- snip --
> macros that could expand when I want
-- snip --

I was making the same complaint in #twisted a couple weeks ago, and was
pointed to a wonderful piece of code: woven.widgets.ExpandMacro.  Check it
out; I've included a brief example below.

I have a macro file:

-- template.xhtml --

<html>
<head macro="head">
  <link rel="stylesheet" href="style.css"/>
  <title slot="title">Fill me</title>
</head>
<body macro="body">
  <h1>My site</h1>
  <div>Nav bar goes here</div>
  <div slot="content">Content</div>
</body>
</html>

-- end --

...and then my Page does something like this:

-- mypage.py --

class MyPage(page.Page):

  template = """
  <html>
  <head view="headMacro">
    <title fill-slot="title">My title</title>
  </head>
  <body view="bodyMacro">
    <div fill-slot="content">Whatever</div>
  </body>
  </html>"""
  
  def wvfactory_headMacro(self, request, node, m):
    return widgets.ExpandMacro(m,
                               macroFileDirectory = '/path/to/templates',
                               macroFile = 'template.xhtml',
                               macroName = 'head')

  def wvfactory_bodyMacro(self, request, node, m):
    return widgets.ExpandMacro(m,
                               macroFileDirectory = '/path/to/templates',
                               macroFile = 'template.xhtml',
                               macroName = 'body')

-- end --

I really like this functionality, and I think it should be pointed out in
the documentation.  Dunno if that's already done for 1.0.6 docs, but the
above code works with Twisted 1.0.5.

Hope this helps.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From lafou at wanadoo.fr  Mon Jun 23 09:59:11 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jun 2003 17:59:11 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030623155047.GA8824@polynode.com>
References: <1056358887.2276.55.camel@biproc>
	 <20030623155047.GA8824@polynode.com>
Message-ID: <1056383951.2282.105.camel@biproc>

On Mon, 2003-06-23 at 17:50, Alex Levy wrote:
> On Mon, Jun 23, 2003 at 11:01:27AM +0200, Philippe Lafoucri?re wrote:
> -- snip --
> > macros that could expand when I want
> -- snip --
> 
> I was making the same complaint in #twisted a couple weeks ago, and was
> pointed to a wonderful piece of code: woven.widgets.ExpandMacro.  Check it
> out; I've included a brief example below.
> 
> I have a macro file:
> 
> -- template.xhtml --
> 
> <html>
> <head macro="head">
>   <link rel="stylesheet" href="style.css"/>
>   <title slot="title">Fill me</title>
> </head>
> <body macro="body">
>   <h1>My site</h1>
>   <div>Nav bar goes here</div>
>   <div slot="content">Content</div>
> </body>
> </html>
> 
> -- end --
> 
> ...and then my Page does something like this:
> 
> -- mypage.py --
> 
> class MyPage(page.Page):
> 
>   template = """
>   <html>
>   <head view="headMacro">
>     <title fill-slot="title">My title</title>
>   </head>
>   <body view="bodyMacro">
>     <div fill-slot="content">Whatever</div>
>   </body>
>   </html>"""
>   
>   def wvfactory_headMacro(self, request, node, m):
>     return widgets.ExpandMacro(m,
>                                macroFileDirectory = '/path/to/templates',
>                                macroFile = 'template.xhtml',
>                                macroName = 'head')
> 
>   def wvfactory_bodyMacro(self, request, node, m):
>     return widgets.ExpandMacro(m,
>                                macroFileDirectory = '/path/to/templates',
>                                macroFile = 'template.xhtml',
>                                macroName = 'body')
> 
> -- end --
> 
> I really like this functionality, and I think it should be pointed out in
> the documentation.  Dunno if that's already done for 1.0.6 docs, but the
> above code works with Twisted 1.0.5.
> 
> Hope this helps.


A LOT :)
It's similar to what Itamar pointed in the API doc.

Hope most of the woven Magic will be explained in 1.0.6 doc !
I definitly want to try it now ...

BTW, thank you all

Philippe




From mesozoic at polynode.com  Mon Jun 23 10:13:15 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 23 Jun 2003 12:13:15 -0400
Subject: [Twisted-Python] Minor addition to woven.widgets.ExpandMacro
Message-ID: <20030623161315.GA9664@polynode.com>

The following diff does two things which are fairly unrelated.

One change allows woven.widgets.ExpandMacro to receive a 'macroTemplate'
argument instead of requiring a macro's template to reside in a file
somewhere.  I find this Very Useful(tm).

The other is a typo/glitch that I pointed out to Glyph a while back and he
hasn't fixed yet.  <nudge/><nudge/>  ;)


Index: twisted/web/woven/widgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/widgets.py,v
retrieving revision 1.91
diff -u -r1.91 widgets.py
--- twisted/web/woven/widgets.py	23 Jun 2003 07:38:48 -0000	1.91
+++ twisted/web/woven/widgets.py	23 Jun 2003 16:03:48 -0000
@@ -933,17 +933,23 @@
             <h3><span slot="greeting" />, <span slot="greetee" />!</h3>
         </div>
     """
-    def __init__(self, model, macroFile="", macroFileDirectory="", macroName="", **kwargs):
+    def __init__(self, model, macroTemplate="", macroFile="", macroFileDirectory="", macroName="", **kwargs):
+        self.macroTemplate = macroTemplate
         self.macroFile=macroFile
         self.macroFileDirectory=macroFileDirectory
         self.macroName=macroName
         Widget.__init__(self, model, **kwargs)
 
     def generate(self, request, node):
-        templ = view.View(
-            self.model,
-            templateFile=self.macroFile, 
-            templateDirectory=self.macroFileDirectory).lookupTemplate(request)
+        if self.macroTemplate:
+            templ = view.View(
+                self.model,
+                template = self.macroTemplate).lookupTemplate(request)
+        else:
+            templ = view.View(
+                self.model,
+                templateFile=self.macroFile, 
+                templateDirectory=self.macroFileDirectory).lookupTemplate(request)
 
         ## We are going to return the macro node from the metatemplate,
         ## after replacing any slot= nodes in it with fill-slot= nodes from `node'
Index: twisted/world/structfile.py
===================================================================
RCS file: /cvs/Twisted/twisted/world/structfile.py,v
retrieving revision 1.5
diff -u -r1.5 structfile.py
--- twisted/world/structfile.py	8 Jun 2003 11:27:39 -0000	1.5
+++ twisted/world/structfile.py	23 Jun 2003 16:03:48 -0000
@@ -195,7 +195,7 @@
         for row in self:
             f.write('<tr><td>')
             f.write('</td><td>'.join([str(x) for x in row]))
-            f.write('</tr>')
+            f.write('</td></tr>')
         f.write("</table>")
 
     def close(self):



-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_




From exarkun at intarweb.us  Mon Jun 23 10:16:47 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 12:16:47 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <pan.2003.06.23.10.51.38.783891@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org> <pan.2003.06.23.10.51.38.783891@smurf.noris.de>
Message-ID: <20030623161647.GA14057@meson.dyndns.org>

On Mon, Jun 23, 2003 at 12:51:40PM +0200, Matthias Urlichs wrote:
> Hi, Jp Calderone wrote:
> 
> > Hmm, this is the only part of the patch I am unsure about.  The API
> > seems a little too tuned to your use-case.  I think the way to go for
> > this would be to have a Producer passed in and make the NNTP protocol a
> > Consumer for that (in turn acting as a Producer for its transport
> > object).  Would you be willing to make this change? (If you need an
> > example of how this might work, check out smtp.py)
> 
> Hmm. Looking at the SMTP case, it needs refactoring in that the producer
> isn't decoupled from the file object it ends up reading, thus I can't plug
> a different kind of producer in there.

  Yea, it isn't perfect.

> 
> Looking further, there's a slightly-broken data-from-file producer in
> doc/historic/2003/pycon/twisted-internet/twisted-internet.py ...
> 
> Anyway, I need NNTP to be a streaming protocol. With a Deferred, this is
> easy -- each Deferred gets a callback which writes TAKETHIS plus the
> message to the server (and queues the result code recognition), so these
> can complete in any order, which is very nice.

  They can complete in any order because the code responsible for the
Deferred's callback must buffer the message in memory.

> A producer interface would instead have an arbitrary number of producers,
> all of which are active, but as soon as the first one returns anything I
> have to temporarily deactivate all the others. That sounds dangerous --
> what if a producer can't be paused? Then I need to buffer their data, too,
> which is no different from the current case where the article data also
> end up in memory.

  At the very least, the object that is currently a string should become a
file object (This should have minimal impact on your code -- if buffering in
memory is acceptable to you, you only have to build a StringIO object from
your string), and the NNTP protocol class should consume it in a manner
similar to that of smtp.py.  It -does- seem that this is becoming a common
task (smtp.py and pop3.py do it, imap4.py needs to do, and now nntp.py), so
maybe I'll write a utility mixin to help out, and I'll see if I can
generalize it away from just file-like objects too.

  This gives clients at least the opportunity to avoid loading entire
messages into memory, which is what I am looking for.  Am I right in
thinking this leaves you with all the functionality you want?

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030623/749b3f5b/attachment.sig>

From grib at billgribble.com  Mon Jun 23 13:20:02 2003
From: grib at billgribble.com (Bill Gribble)
Date: 23 Jun 2003 14:20:02 -0500
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030618183220.55d93249.itamar@itamarst.org>
References: <005b01c335e4$256de300$0401a8c0@razor>
	 <20030618183220.55d93249.itamar@itamarst.org>
Message-ID: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>

On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> Twisted is not PHP, you can have objects persist in memory without *any
> work*. You'd be better off never using RPYs at all, in the vast majority
> of cases.

You guys need to get your story straight.  radix and moshez both told me
unequivocally on IRC that as a twisted.web beginner I should
*definitely* be using RPYs, in fact that all twisted.web development
should be done using RPY until the app was ready to be packaged and
deployed. 

>   site = server.Site(Simple())
>   reactor.listenTCP(8080, site)
>   reactor.run()

... and moshez barfed up a kidney when I said I was doing listenTCP
manually, saying that listenTCP was about to be deprecated with extreme
prejudice and should be avoided.  No real reason given other than "it's
a bad idea". 

b.g.

 





From exarkun at intarweb.us  Mon Jun 23 14:31:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 23 Jun 2003 16:31:52 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623203152.GA17592@meson.dyndns.org>

On Mon, Jun 23, 2003 at 02:20:02PM -0500, Bill Gribble wrote:
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea". 

  listenTCP (and friends) will be around until 2.0, at least.  They may not
be the -preferred- approach long before then, but they will at least be
available (as a rather central part of a core, stable API, taking them away
would be like hacking off both of Twisted's legs at the knee).

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030623/529d5ff9/attachment.sig>

From itamar at itamarst.org  Mon Jun 23 14:33:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 16:33:51 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
References: <005b01c335e4$256de300$0401a8c0@razor>
	<20030618183220.55d93249.itamar@itamarst.org>
	<1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623163351.606914be.itamar@itamarst.org>

On 23 Jun 2003 14:20:02 -0500
Bill Gribble <grib at billgribble.com> wrote:

> You guys need to get your story straight.  radix and moshez both told
> me unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed. 

This works great if you understand twisted.web well and know that web
applications aren't *pages*. Once you understand that you will typically
develop using a single RPY for your whole application, which has some
nice benefits for debugging.

If you think you should have multiple RPYs plonked in folders as a way
of developing your application, you are most likely doing something
wrong and should avoid using RPYs altogether.

As is usually the case, if you *do* know what you're doing it may be the
right thing, so an expert twisted user may recommend doing something
else depending on what your application is.

> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with
> extreme prejudice and should be avoided.  No real reason given other
> than "it's a bad idea". 

app.listenTCP is going to be deprecated, not reactor.listenTCP. And yes,
app.listenTCP is a bad idea.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From 2002 at weholt.org  Mon Jun 23 14:39:06 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 23 Jun 2003 22:39:06 +0200
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <004201c339c7$7f5c33d0$0401a8c0@razor>

I have the same experience. Making RPYs and running them using twistd has
been hyped as the right and *only* way to correctly develop web-apps in
Twisted. My current solutions is subclassing Resource and listenTCP etc. and
the thing works great.

Hopefully this is just misunderstandings and the documentation will be
updated to show us the perfect way to Twisted-enlightenment ;-)

Anyway, twisted is cool.

Thomas


----- Original Message -----
From: "Bill Gribble" <grib at billgribble.com>
To: <twisted-python at twistedmatrix.com>
Sent: Monday, June 23, 2003 9:20 PM
Subject: Re: [Twisted-Python] To twisted.web beginners: don't use RPYs


> On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> > Twisted is not PHP, you can have objects persist in memory without *any
> > work*. You'd be better off never using RPYs at all, in the vast majority
> > of cases.
>
> You guys need to get your story straight.  radix and moshez both told me
> unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed.
>
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
>
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea".
>
> b.g.
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From abe at fettig.net  Mon Jun 23 14:58:44 2003
From: abe at fettig.net (Abe Fettig)
Date: 23 Jun 2003 16:58:44 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030623163351.606914be.itamar@itamarst.org>
References: <005b01c335e4$256de300$0401a8c0@razor>
	 <20030618183220.55d93249.itamar@itamarst.org>
	 <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
	 <20030623163351.606914be.itamar@itamarst.org>
Message-ID: <1056401924.1912.5.camel@mingus>

On Mon, 2003-06-23 at 16:33, Itamar Shtull-Trauring wrote:

> app.listenTCP is going to be deprecated, not reactor.listenTCP. And yes,
> app.listenTCP is a bad idea.

Well, then, in the spirit of Twisted Best Practices, what is the
preferred way to listen on a port within the context of an application?

Abe




From smurf at smurf.noris.de  Mon Jun 23 15:07:18 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 23 Jun 2003 23:07:18 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030623061135.GA12797@meson.dyndns.org> <pan.2003.06.23.10.51.38.783891@smurf.noris.de> <20030623161647.GA14057@meson.dyndns.org>
Message-ID: <pan.2003.06.23.21.07.18.104943@smurf.noris.de>

Hi, Jp Calderone wrote:

>  They can complete in any order because the code responsible for the
> Deferred's callback must buffer the message in memory.
> 
Nope. Converting the code to assemble the articles in file-like objects,
or whatever, instead, wouldn't make much of a difference to my current
code -- they would still be able to complete in any order.  Part of the
niceness of streaming CHECK and TAKETHIS messages to an NNTP server is
that there is no ordering required; you can't do that with SMTP.

On the other hand, thinking about this I just had an idea how to manage
the transition from a bunch of parallel Deferreds to a serialized
producer/consumer scheme (addCallback() a code snipped which enqueues the
Deferred onto a queue, and take it from there one-by-one). It's still
going to start out as a Deferred, though; "a producer which needs to do
something special when it first delivers data and which might trigger an
error instead" is complicated code which lumps at least three concepts
into one piece of code, while using a Deferred in the first step leads to
nicely separated stages with distinct code -- always a win in my book.

> At the very least, the object that is currently a string should become a
> file object (This should have minimal impact on your code -- if
> buffering in memory is acceptable to you, you only have to build a
> StringIO object from your string)

That would be no problem. Whether the Deferred returns an in-memory string
or a file object doesn't make a whole lot of difference, esp. as a simple
'if not hasattr(f,"read"): f = StringIO.StringIO(f)' is sufficient for
turning one into the other.

> It -does- seem that this is becoming a common task (smtp.py and pop3.py
> do it, imap4.py needs to do, and now nntp.py), so maybe I'll write a
> utility mixin to help out, and I'll see if I can generalize it away from
> just file-like objects too.

That would be nice to have. I'd write it as an adapter or similar, i.e. a
class which turns an LF-based dots-ignorant possibly-without-final-LF
producer into one which has CRLFs, dot-escapes, and a guaranteed CRLF at
the end. That way it'd be useable for things which aren't a streaming
protocol. Direct back-end access to the NNTP storage comes to mind;
it stores articles in the latter format.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
There will always be some delightful mysteries in your life.




From radix at twistedmatrix.com  Mon Jun 23 16:29:29 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 18:29:29 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>; from grib@billgribble.com on Mon, Jun 23, 2003 at 15:20:02 -0400
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>

On 2003.06.23 15:20, Bill Gribble wrote:
> On Wed, 2003-06-18 at 17:32, Itamar Shtull-Trauring wrote:
> > Twisted is not PHP, you can have objects persist in memory without *any
> > work*. You'd be better off never using RPYs at all, in the vast majority
> > of cases.
> 
> You guys need to get your story straight.  radix and moshez both told me
> unequivocally on IRC that as a twisted.web beginner I should
> *definitely* be using RPYs, in fact that all twisted.web development
> should be done using RPY until the app was ready to be packaged and
> deployed. 

Well, it's like sex education. Itamar wants to go with the religious
"Tell them not to do it", I want to go with "explain to them the proper
way to do it". :-)

Lots of people are using rpys in a horrible manner; the problem is that
they're not being viewed as a deployment mechanism, but rather as the actual
"scripting" mechanism -- that rpy is Twisted's way to do web applications.

The truth is that Woven is (usually) Twisted's way to do web applications, and
rpy is Twisted's way to do deployment of web applications, be them Woven
or just plain Resource subclasses.

Thus, rpys should have as little code as possible in them -- on the order of 10
lines or less (maybe more if you decide to put very simple configuration 
in them, which I have been known to do; but you should probably standardize on
a ~/.config or somesuch eventually). They should import your resource subclass
from somewhere, instantiate it (or use an already-cached one), and assign it to
the `resource' variable.

I apologise for the inconsistency.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From warner at lothar.com  Mon Jun 23 16:36:31 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2003 15:36:31 -0700 (PDT)
Subject: [Twisted-Python] PATCH: doc/historic/index.html  reality link
References: <BAY2-F108DgC81TbdkS00002f4a@hotmail.com>
Message-ID: <20030623.153631.01456115.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> >cvs diff -u index.html

Committed to CVS.

thanks!
 -Brian



From radix at twistedmatrix.com  Mon Jun 23 16:44:29 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 18:44:29 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>; from grib@billgribble.com on Mon, Jun 23, 2003 at 15:20:02 -0400
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
Message-ID: <20030623224429.GA5396@toshi.anaprd01.md.comcast.net>

On 2003.06.23 15:20, Bill Gribble wrote:
> >   site = server.Site(Simple())
> >   reactor.listenTCP(8080, site)
> >   reactor.run()
> 
> ... and moshez barfed up a kidney when I said I was doing listenTCP
> manually, saying that listenTCP was about to be deprecated with extreme
> prejudice and should be avoided.  No real reason given other than "it's
> a bad idea".

The reason was that .rpy *is* the stardard way to deploy twisted.web 
applications, and if you want to be friendly to other twisted.web users,
you should give an .rpy so it's easy for them to install your software
on their existing web server.

And listenTCP is not about to be deprecated with extreme prejudice -- I 
don't remember talking about that, although there have been ideas to
replace it in the long run. As exarkun said, it won't be depracated until
2.0, because it's already a stabilized interface.

( I've noticed that when people see some musings on future development
  in Twisted, they start freaking out about what the current standard
  practice is and have a panic attack. DISCLAIMER: The following 
  paragraph is full of musings about future directions of Twisted;
  it's not implemented, and nothing is changing about standard practice
  now.

moshez also has other interesting ideas for deployment on twisted.web
servers. We may come up with a scheme that allows you to easily run your
web applications in a separate process, listening on a unix domain 
socket, and then using a standard parameterized .rpy to connect to the
domain socket and serve the app from the main server. The point, of 
course, would be to have process separation so you don't have to worry
about bugs in the app bringing down your server (if they're that rude).
Stay tuned for more.
)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Mon Jun 23 16:43:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 18:43:16 -0400
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056401924.1912.5.camel@mingus>
References: <005b01c335e4$256de300$0401a8c0@razor>
	<20030618183220.55d93249.itamar@itamarst.org>
	<1056396002.1559.3.camel@oc-demo.internal.billgribble.com>
	<20030623163351.606914be.itamar@itamarst.org>
	<1056401924.1912.5.camel@mingus>
Message-ID: <20030623184316.2e6d1723.itamar@itamarst.org>

On 23 Jun 2003 16:58:44 -0400
Abe Fettig <abe at fettig.net> wrote:

> On Mon, 2003-06-23 at 16:33, Itamar Shtull-Trauring wrote:
> 
> > app.listenTCP is going to be deprecated, not reactor.listenTCP. And
> > yes, app.listenTCP is a bad idea.
> 
> Well, then, in the spirit of Twisted Best Practices, what is the
> preferred way to listen on a port within the context of an
> application?

At the moment, there isn't really. So using it is fine. There will be a
better, cleaner, easier to understand solution once someone gets around
to implementing it. See moshez's TCPListenerService in the mailing list
archive for a sketch of how that's going to look.

Meanwhile, feel free to use app.listenTCP, it's always going to keep on
working.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jun 23 17:01:20 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2003 16:01:20 -0700 (PDT)
Subject: [Twisted-Python] IP address, server
References: <r01050400-1026-C89A35BCA32211D7B312000A956A726C@[10.0.0.21]>
Message-ID: <20030623.160120.65736666.warner@lothar.com>

Erik van Blokland <erik at letterror.com> writes:

> The tiny http server script works when I take a browser on
> the same machine as the server and look at
> http://127.0.0.1:801, I get the expected result, so the
> server is alive. When I take a look from a different machine
> using the local IP address of the server http://10.0.0.5:801
> I get no response. Other services over my network to the
> server work fine. Do I need to do more, listen to a specific
> port, tell the server the IP address? Is this supposed to
> work and the problem lies elsewhere, OS perhaps (would be
> good to know too)

Very strange. There's nothing in your code that should treat requests coming
from the local host any differently than requests coming in over the
network. My suspicion is that there's some kind of packet filter in place
that is dropping inbound connections to low-numbered ports.

You say other services on that same machine work fine, so it doesn't sound
like a network problem, or a filter that rejects *all* incoming connection
requests. Try having your Twisted server listen on a port like 9999 and see
what happens. Port 801 falls into the "privileged" range, so on many systems
you must be root to bind to it.. maybe OS-X does something special with
these kinds of ports.

I ran your script (on an older box, with python 2.2.0), and didn't see the
behavior you describe. (I did have to run it as root, and of course with
2.2.0 I had to turn True into 1). I do see a few other problems, though.
render() is supposed to either return a string with the HTML (or whatever)
to be sent to the client, *or* return NOT_DONE_YET and do .write/.finish .
Your code does .write, .finish, and then returns None, which isn't quite the
same (it calls .finish twice). I think it's ok to call .finish before you
return NOT_DONE_YET. I would write the code one of these two ways:

    def render(self, httprequest):
        hdr = httprequest.getAllHeaders()
        html = '<html><body>Have a nice day</body></html>'
        httprequest.write(html)
        httprequest.setHeader('Content-Length', len(html))
        httprequest.setHeader('Content-Type', 'html/plain')
        httprequest.setResponseCode(200)
        return server.NOT_DONE_YET

or:

    def render(self, httprequest):
        return '<html><body>Have a nice day</body></html>'

Note also that you're "html" variable has a %d that isn't currently being
used in a % format operation, so it will wind up as a literal % in the data
sent to the client.

You might want to add the following to the beginning of your code to see the
double-.finish warning and other log messages:

 from twisted.python import log
 import sys
 log.startLogging(sys.stdout)


Hope that gives you some new directions to try out..

cheers,
 -Brian



From iko at cd.chalmers.se  Mon Jun 23 17:38:32 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 24 Jun 2003 01:38:32 +0200
Subject: [Twisted-Python] Hacking imap
Message-ID: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>

Hi,

Just wanted to give a heads-up that I intend feed you guys a patch for
the imap server to properly handle literals in all places they need to
be handled towards the end of this week.

Unfortunately, it's quite a large change since it requires a complete
restructuring of how arguments are parsed. Basically, instead of
having each command parse it's own arguments, the idea is to list
what arguments each command expects, and have the command dispatcher
parse the arguments and possibly request continuation for literals.

I expect to have more patches coming, as I need this for the project
we're working on. It'd be nice if we could coordinate the work, so
we don't end up with incompatible fixes and improvements, and try to
avoid duplicate work.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From andrew-twisted at puzzling.org  Mon Jun 23 19:11:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 11:11:41 +1000
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com> <20030623222929.GA9891@toshi.anaprd01.md.comcast.net>
Message-ID: <20030624011141.GA7668@frobozz>

On Mon, Jun 23, 2003 at 06:29:29PM -0400, Christopher Armstrong wrote:
> 
> Thus, rpys should have as little code as possible in them -- on the order of 10
> lines or less (maybe more if you decide to put very simple configuration 

This reminds me of the MSDN recommending that ASP scripts should never be
more than 100 lines, because they're just glue for your COM objects.  A
previous employer of mine knew that, and still had ~100000 lines of ASP
anyway, including a charting system in about ~20000 lines.  I understand
that this is not uncommon :)

People *will* misuse software -- particularly if the documention isn't
excellent...

-Andrew.




From andrew-twisted at puzzling.org  Mon Jun 23 19:19:10 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 11:19:10 +1000
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <1056383951.2282.105.camel@biproc>
References: <1056358887.2276.55.camel@biproc> <20030623155047.GA8824@polynode.com> <1056383951.2282.105.camel@biproc>
Message-ID: <20030624011910.GB7668@frobozz>

On Mon, Jun 23, 2003 at 05:59:11PM +0200, Philippe Lafoucri?re wrote:
> 
> Hope most of the woven Magic will be explained in 1.0.6 doc !
> I definitly want to try it now ...

I'm pretty sure the Woven docs haven't been touched significantly since
1.0.5 (except for some minor reformatting?) -- thanks to the persistence of
Andrew Dalke, you can find the current build of the howtos from CVS here:

    http://twistedmatrix.com/users/warner/doc-latest/

If you find expandMacro, or anything else, isn't covered... documentation
patches would be very gratefully accepted! :)

-Andrew.




From screwtape at froup.com  Mon Jun 23 19:31:53 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 11:31:53 +1000
Subject: [Twisted-Python] Twisted and NT Services
Message-ID: <20030624013153.GA11491@ferd2.thristian.org>

At $FIRM, a good number of processes around the place are Python
scripts using Twisted. Since they're functionally equivalent to Unix
daemons, what's the best way of turning a Twisted script into a
service?

Also, I've gotten into the habit of using py2exe to turn scripts into
standalone Win32 programs, and it would be really nice to be able to
ship a standalone NT service. Unfortunately, there seems to be a "pick
any two" relationship between Twisted, NT Services, and py2exe - when
I try and combine all three, I get the following traceback inside my
Application.run() call:

      File "twisted\internet\app.pyc", line 861, in run
    
    --- <exception caught here> ---
      File "twisted\python\log.pyc", line 64, in callWithLogger
    
      File "twisted\python\log.pyc", line 51, in callWithContext
    
      File "twisted\python\context.pyc", line 32, in callWithContext
    
      File "twisted\internet\default.pyc", line 122, in run
    
      File "twisted\internet\default.pyc", line 116, in startRunning
    
      File "twisted\internet\default.pyc", line 88, in _handleSignals
    
    exceptions.ValueError: signal only works in main thread

If, in the Python source which contains the Service subclass, I put
(at the top):

	from twisted.internet import win32eventreactor
	win32eventreactor.install()

...and then make it into a service, I get the same error
(Entertainingly, if I put it *not* at the top, when I run the
resulting exe I get the entertaining dialog box "Could not get Script
info").

As you might have gathered, I'm not using .taps for these services -
although I suspect they'd meet the 'don't reveal our source code to
random people' requirement, I suspect they wouldn't help with the
issue of installing Python and half a dozen extension modules on every
server.

Anyone have any hints or suggestions?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Nice sensible hobbits stay with Sméagol.
|



From itamar at itamarst.org  Mon Jun 23 20:09:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Jun 2003 22:09:47 -0400
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624013153.GA11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org>
Message-ID: <20030623220947.43b9f941.itamar@itamarst.org>

On Tue, 24 Jun 2003 11:31:53 +1000
screwtape at froup.com wrote:

> At $FIRM, a good number of processes around the place are Python
> scripts using Twisted. Since they're functionally equivalent to Unix
> daemons, what's the best way of turning a Twisted script into a
> service?

Well, ideally we'd want some equivalent of twistd that runs an NT
service, so you could write a python script that's runnable with "twistd
-y" or a TAP or whatever and do that. And then presumably you would
write the equivalent of tap2deb (tap2msi, probably) so you could easily
install and uninstall them.

No one's ever written one, though, for lack of motivation. If you'd
write this and submit it I'd love to have this in Twisted, which along
with a decent win32 reactor would give us really good win32 support. Or
you could pay someone to do it.

Or, and this is what everyone else has done, write a few mini-scripts
that run your NT services and that's it. See list archives for code that
will start a NT service.  This is of course the fastest route.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From radix at twistedmatrix.com  Mon Jun 23 20:46:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 23 Jun 2003 22:46:21 -0400
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
Message-ID: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>

Here's a patch that changes semantics of Stage.next. Currently,
if a Deferred errbacks with an exception that you haven't 
explicitly trapped, Stage.next will raise the Failure object
(via the failure's trap method). I've changed this so it rather
does `raise type(failure.value), failure.value, failure.tb'.

What this means is that you can write code like this:

    d = flow.wrap(getDeferred())
    yield d
    try:
        result = d.next()
    except ParticularError, e:
        traceback.print_exc()

Two benefits here. One, I can actually say 
"except ParticularError" -- before, the type of the exception
raised would be Failure. Two, the traceback printed by 
traceback.print_exc() will actually be useful and show you the
stack trace of the original code that raised the error, rather
than the traceback starting from the Failure.trap call. 

Of course, the traceback is cleaned once Deferred.runCallbacks
finishes, but this only matters when the Deferred is resolved
synchronously, as far as I can tell. In that case, you will
get a pretty useless traceback, but it won't  be any more 
useless than the tracebacks that used to be reported.

The only drawback I see is that it breaks a flow test. :-)

  FailTest: exceptions.ZeroDivisionError raised instead of Failure

Because the test is expecting a Failure to be raised, not 
the original, and more useful, exception.

  self.assertRaises(flow.Failure, list, flow.Block(badgen()))

Clark, I'll be waiting for confirmation from you to commit this or
trash it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
? better-synchronous-exceptions.diff
? flow.xhtml
Index: flow.py
===================================================================
RCS file: /cvs/Twisted/sandbox/flow.py,v
retrieving revision 1.107
diff -u -r1.107 flow.py
--- flow.py	22 Jun 2003 06:45:12 -0000	1.107
+++ flow.py	24 Jun 2003 02:35:46 -0000
@@ -297,9 +297,19 @@
                 return self.results.pop(0)
         if self.stop:
             raise StopIteration()
+
         if self.failure:
             self.stop = True
-            return self.failure.trap(*self._trap)
+
+            cr = self.failure.check(*self._trap)
+
+            if cr:
+                return cr
+
+            if self.failure.tb:
+                raise self.failure.value.__class__, self.failure.value, self.failure.tb
+            raise self.failure.value
+
         raise NotReadyError("Must 'yield' this object before calling next()")
 
     def _yield(self):
@@ -492,11 +502,13 @@
         obj = obj()
 
     typ = type(obj)
+
     if typ is type([]) or typ is type(tuple()):
         return _List(obj)
+
     if typ is type(''):
         return _String(obj)
-     
+
     if isinstance(obj, defer.Deferred):
         return _Deferred(obj, *trap)
 

From andrew-twisted at puzzling.org  Mon Jun 23 20:54:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 12:54:32 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624013153.GA11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org>
Message-ID: <20030624025432.GC7970@frobozz>

On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
[...]
> Also, I've gotten into the habit of using py2exe to turn scripts into
> standalone Win32 programs, and it would be really nice to be able to
> ship a standalone NT service. Unfortunately, there seems to be a "pick
> any two" relationship between Twisted, NT Services, and py2exe - when
> I try and combine all three, I get the following traceback inside my
> Application.run() call:
> 
>       File "twisted\internet\app.pyc", line 861, in run
>     --- <exception caught here> ---
>       File "twisted\python\log.pyc", line 64, in callWithLogger
>       File "twisted\python\log.pyc", line 51, in callWithContext
>       File "twisted\python\context.pyc", line 32, in callWithContext
>       File "twisted\internet\default.pyc", line 122, in run
>       File "twisted\internet\default.pyc", line 116, in startRunning
>       File "twisted\internet\default.pyc", line 88, in _handleSignals
>     exceptions.ValueError: signal only works in main thread

Try passing installSignalHandlers=0 to Application.run to work around this.

-Andrew.




From screwtape at froup.com  Mon Jun 23 22:07:13 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 14:07:13 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624025432.GC7970@frobozz>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz>
Message-ID: <20030624040713.GB11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> [...]
> > Also, I've gotten into the habit of using py2exe to turn scripts into
> > standalone Win32 programs, and it would be really nice to be able to
> > ship a standalone NT service. Unfortunately, there seems to be a "pick
> > any two" relationship between Twisted, NT Services, and py2exe - when
> > I try and combine all three, I get the following traceback inside my
> > Application.run() call:
> > 
> >       File "twisted\internet\app.pyc", line 861, in run
> >     --- <exception caught here> ---
> >       File "twisted\python\log.pyc", line 64, in callWithLogger
> >       File "twisted\python\log.pyc", line 51, in callWithContext
> >       File "twisted\python\context.pyc", line 32, in callWithContext
> >       File "twisted\internet\default.pyc", line 122, in run
> >       File "twisted\internet\default.pyc", line 116, in startRunning
> >       File "twisted\internet\default.pyc", line 88, in _handleSignals
> >     exceptions.ValueError: signal only works in main thread
> 
> Try passing installSignalHandlers=0 to Application.run to work around this.

Out of curiosity, does Win32 even have signal handlers? Or are these
signal handlers something entirely different from the Unix concept?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| ... that every day's a rerun and the laughter's always canned.
|



From stuart.hungerford at anu.edu.au  Mon Jun 23 22:35:31 2003
From: stuart.hungerford at anu.edu.au (Stuart Hungerford)
Date: Tue, 24 Jun 2003 14:35:31 +1000
Subject: [Twisted-Python] Re: Python 2.3 logging package and Twisted...
In-Reply-To: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
References: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20030624043531.GA11358@anu.edu.au>

Itamar wrote:

| > In applications using Twisted.web is writing logs with this
| > new module the kind of operation that would need to be done in
| > a deferred?
| 
| Uh. It can't be *blocking*. Writing to a log file is fine. Writing to a
| socket would block, so don't do that. Using a Deferred doesn't magically
| make it not block.
| 
| > I understand there's also twisted.python.log, but the issue
| > comes up for applications being moved to Twisted that already
| > use external logging libraries.
| 
| You can use it, sure, or whatever library you want, as long as they
| don't block. In fact you can hook up logging to t.p.log too if you want
| (log.addObserver with a little glue function.)

   I don't think I asked the original question very clearly. What I
   should of asked is "has anyone using the new 2.3 logging package
   found blocking behaviour?".  Yes would mean I'd have to handle the
   logging with a different package.

   As it turns out, the new logging package can listen on a socket for
   configuration instructions and it uses threading locks to ensure
   thread-safety of its shared data structures, so I'm proceeding with
   caution ;-)



Cheers,

Stu

--

Stuart Hungerford
ANU Internet Futures Project




From andrew-twisted at puzzling.org  Mon Jun 23 22:47:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 14:47:52 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624040713.GB11491@ferd2.thristian.org>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz> <20030624040713.GB11491@ferd2.thristian.org>
Message-ID: <20030624044752.GD7970@frobozz>

On Tue, Jun 24, 2003 at 02:07:13PM +1000, screwtape at froup.com wrote:
> On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> > On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> > [...]
> > >     exceptions.ValueError: signal only works in main thread
> > 
> > Try passing installSignalHandlers=0 to Application.run to work around this.
> 
> Out of curiosity, does Win32 even have signal handlers? Or are these
> signal handlers something entirely different from the Unix concept?

Python does have a signal module on Win32, although I'm not sure what the
underlying Win32 API supports.
twisted.internet.default.PosixReactorBase._handleSignals might be
instructive, though:

    def _handleSignals(self):
        """Install the signal handlers for the Twisted event loop."""
        import signal
        signal.signal(signal.SIGINT, self.sigInt)
        signal.signal(signal.SIGTERM, self.sigTerm)

        # Catch Ctrl-Break in windows (only available in Python 2.2 and up)
        if hasattr(signal, "SIGBREAK"):
            signal.signal(signal.SIGBREAK, self.sigBreak)

        if platform.getType() == 'posix':
            signal.signal(signal.SIGCHLD, self._handleSigchld)

-Andrew.




From itamar at itamarst.org  Mon Jun 23 23:03:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2003 01:03:36 -0400
Subject: [Twisted-Python] Re: Python 2.3 logging package and Twisted...
In-Reply-To: <20030624043531.GA11358@anu.edu.au>
References: <20030620113852.2659.70874.Mailman@pyramid.twistedmatrix.com>
	<20030624043531.GA11358@anu.edu.au>
Message-ID: <20030624010336.7e08488a.itamar@itamarst.org>

On Tue, 24 Jun 2003 14:35:31 +1000
Stuart Hungerford <stuart.hungerford at anu.edu.au> wrote:

>    I don't think I asked the original question very clearly. What I
>    should of asked is "has anyone using the new 2.3 logging package
>    found blocking behaviour?".  Yes would mean I'd have to handle the
>    logging with a different package.
> 
>    As it turns out, the new logging package can listen on a socket for
>    configuration instructions and it uses threading locks to ensure
>    thread-safety of its shared data structures, so I'm proceeding with
>    caution ;-)

Locks do not imply non-blocking. From what glyph tells me logging over
sockets blocks, do not use them with Twisted unless you do the actual
write to the logging thingie in a thread.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From cce at clarkevans.com  Mon Jun 23 23:31:05 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 24 Jun 2003 05:31:05 +0000
Subject: [Twisted-Python] flow again
In-Reply-To: <20030622015356.0d16ac59.pp64@cornell.edu>
References: <20030622015356.0d16ac59.pp64@cornell.edu>
Message-ID: <20030624053105.GA55443@doublegemini.com>

Pavel,

Thank you.  It appears as if someone has already applied this patch.

Best,

Clark



From exarkun at intarweb.us  Mon Jun 23 23:23:53 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 01:23:53 -0400
Subject: [Twisted-Python] Hacking imap
In-Reply-To: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se>
Message-ID: <20030624052353.GA20033@meson.dyndns.org>

On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
> Hi,
> 
> Just wanted to give a heads-up that I intend feed you guys a patch for
> the imap server to properly handle literals in all places they need to
> be handled towards the end of this week.

  Could you elaborate on "properly handle"?  I am currently making changes
in this area as well, mainly in the direction of avoiding all the in-memory
buffering the code currently does.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030624/1e84f3fe/attachment.sig>

From cce at clarkevans.com  Mon Jun 23 23:42:39 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 24 Jun 2003 05:42:39 +0000
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>
References: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net>
Message-ID: <20030624054239.GB55443@doublegemini.com>

Thank you for applying this patch, it is a big improvement.
Also, to summarize our IRC chat:

  1.  You think it is about time to move flow into twisted and
      Glyph/Itamar support this move; great.

  2.  You like the idea of adding it as a top level, 
      twisted.flow.* module; this means breaking flow.py 
      into several chunks.

  3.  For the public stages and controllers, flow.py could be broken
      down into the facility that they use: twisted.flow.thread, 
      twisted.flow.defer

  4.  The core of flow, 'wrap' function and its private stages, could
      be put into flow/flow.py; it is a bit redundant, but we could
      not think of another option.

  5.  We didn't discuss where the abstract interfaces, "Stage", and
      "Callback" should go.   Perhaps flow.interface?

  6.  We didn't discuss other public stages that are not directly
      associated with a facility, such as Zip.  Perhaps these could
      be put into flow.misc or flow.tools?

  7.  Most importantly (for me), due to the redundancy of flow/flow.py
      I'd like to ask glyph if a limited form of __init__.py import
      could be used in the case of a module/module.py mechansim so
      that the public objects in module.py could be imported into the
      module itself.    ie, in flow/__init__.py having:

         "from flow import wrap, Cooperate"

Thank you so much.

Clark

On Mon, Jun 23, 2003 at 10:46:21PM -0400, Christopher Armstrong wrote:
| Here's a patch that changes semantics of Stage.next. Currently,
| if a Deferred errbacks with an exception that you haven't 
| explicitly trapped, Stage.next will raise the Failure object
| (via the failure's trap method). I've changed this so it rather
| does `raise type(failure.value), failure.value, failure.tb'.
| 
| What this means is that you can write code like this:
| 
|     d = flow.wrap(getDeferred())
|     yield d
|     try:
|         result = d.next()
|     except ParticularError, e:
|         traceback.print_exc()



From andrew-twisted at puzzling.org  Mon Jun 23 23:41:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 15:41:50 +1000
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624054239.GB55443@doublegemini.com>
References: <20030624024621.GC5396@toshi.anaprd01.md.comcast.net> <20030624054239.GB55443@doublegemini.com>
Message-ID: <20030624054150.GE7970@frobozz>

On Tue, Jun 24, 2003 at 05:42:39AM +0000, Clark C. Evans wrote:
> 
>   7.  Most importantly (for me), due to the redundancy of flow/flow.py
>       I'd like to ask glyph if a limited form of __init__.py import
>       could be used in the case of a module/module.py mechansim so
>       that the public objects in module.py could be imported into the
>       module itself.    ie, in flow/__init__.py having:
> 
>          "from flow import wrap, Cooperate"

I think I mentioned this on IRC, but: aarragghgah no!

That path leads to Zope 2.  It's painful.  I'd far prefer to have to type:
    
    from twisted.flow import flow
    # or
    from twisted.flow.flow import wrap, Cooperate

in my code than deal with magical __init__.py in packages.

I recognise the desire to make using the package more convenient, but I
think the trade-off isn't worth it.  The rest of Twisted manages very nicely
without this, and it would be nice if we could keep it like that.  No
exceptions, please.

-Andrew.




From screwtape at froup.com  Mon Jun 23 23:54:00 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 15:54:00 +1000
Subject: [Twisted-Python] Twisted and NT Services
In-Reply-To: <20030624025432.GC7970@frobozz>
References: <20030624013153.GA11491@ferd2.thristian.org> <20030624025432.GC7970@frobozz>
Message-ID: <20030624055400.GC11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 12:54:32PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 11:31:53AM +1000, screwtape at froup.com wrote:
> [...]
> > Also, I've gotten into the habit of using py2exe to turn scripts into
> > standalone Win32 programs, and it would be really nice to be able to
> > ship a standalone NT service. Unfortunately, there seems to be a "pick
> > any two" relationship between Twisted, NT Services, and py2exe - when
> > I try and combine all three, I get the following traceback inside my
> > Application.run() call:
> > 
> >       File "twisted\internet\app.pyc", line 861, in run
> >     --- <exception caught here> ---
> >       File "twisted\python\log.pyc", line 64, in callWithLogger
> >       File "twisted\python\log.pyc", line 51, in callWithContext
> >       File "twisted\python\context.pyc", line 32, in callWithContext
> >       File "twisted\internet\default.pyc", line 122, in run
> >       File "twisted\internet\default.pyc", line 116, in startRunning
> >       File "twisted\internet\default.pyc", line 88, in _handleSignals
> >     exceptions.ValueError: signal only works in main thread
> 
> Try passing installSignalHandlers=0 to Application.run to work around this.
> 
> -Andrew.

For any lurking FAQ maintainers, that seemed to do the trick quite
nicely. I lose the ability to kill a service with ^C, but you can't
really send a ^C to a service anyway.

If I have time in the near future, I'll try and have a look at what
twistd does, what NT services need, and whether the two can be made to
meet.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I don't lick skyscrapers.
|



From m at moshez.org  Tue Jun 24 00:13:28 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 06:13:28 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
Message-ID: <20030624061328.12768.qmail@green.zadka.com>

First, let me clarify: I never said "don't use listenTCP". I merely
said that using application.listenTCP(0,...) is a bad idea, and if you
want to listen on an arbitrary port, you should do it with an
ApplicationService.

Now, let me clarify the position about RPYs: The official line is
"your development must be orthogonal to your deployment". What this
means is that if you are developing a web application, it should be
a resource with children, and internal links. Some of the children
may use Woven, some may be resources manually using .write, etc. The
point is, the code should be in a Python module, or package, *outside*
the web tree. You will probably want to test your application as you
develop it. There are many ways to test, starting with dropping an
.rpy which looks like

"""
from mypackage import toplevel
resource = toplevel.Resource(file="foo/bar", color="blue")
"""

into a directory, and then running

% mktap web --path=/directory
% twistd -f web.tap

to writing a Python script like

"""
#!/usr/bin/python2.2
from twisted.web import server
from twisted.internet import reactor
from mypackage import toplevel
reactor.listenTCP(8080,
    server.Site(toplevel.Resource(file="foo/bar", color="blue")))
reactor.run()
"""

Which one of these strategies you use is not terribly important, since
(and this is the important part) deployment is *orthogonal*. Later, when
you want users to actually *use* your code, you should worry about what
to do -- or rather, don't. Users may have widely different needs. Some
may want to run your code in a different process, so they'll use distributed
web. Some may be using the Debian package, and will drop in

% cat > /etc/local.d/99addmypackage.py
from mypackage import toplevel
default.putChild("mypackage", toplevel.Resource(file="foo/bar", color="blue"))
^D

If you want to be friendly to your users, you can supply many examples
in your package, like the above .rpy and the Debian-package drop-in.
But the *ultimate* friendliness is to write a useful resource which does
not have deployment assumptions built in.

This is what itamar meant by "Twisted.Web is not PHP": since we have
a better tool for organizing code (Python modules and packages), use it.
In PHP, the only tool for organizing is web pages, which leads to silly
things like PHP pages full of functions that other pages import, etc.
etc. If you translate this wholesale into Python, you may assume the
correct way to do web development is to have many RPYs, all importing
some Python module. This is a *bad idea* -- it mashes deployment with
development, and makes sure your users will be *tied* to the file-system.

We respect you enough to assume you're using Twisted.Web to write non-trivial
applications. This means that you will eventually have the Twisted.Web Zen,
by the time you finish to write your application. Using itamar's methodology
insures that when you *do* have the Zen, you will have less of an itch to
throw it away and start anew because it is crap.

So, to sum up: We have .rpys because they are useful and necessary. But
using them incorrectly leads to horribly unmaintainable applications. The
best way to insure using them correctly is to not use them at all, until
you are on your *final* deployment stages. By then, the whole "An RPY must
be less than 10 lines" will be superfluous because you will not *have*
more than 10 lines to write.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Tue Jun 24 00:30:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 01:30:22 -0500
Subject: [Twisted-Python] Flow: better synchronous exceptions [patch]
In-Reply-To: <20030624054239.GB55443@doublegemini.com>
Message-ID: <55771098-A60D-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 12:42 AM, Clark C. Evans wrote:

>   7.  Most importantly (for me), due to the redundancy of flow/flow.py
>       I'd like to ask glyph if a limited form of __init__.py import
>       could be used in the case of a module/module.py mechansim so
>       that the public objects in module.py could be imported into the
>       module itself.    ie, in flow/__init__.py having:

This is a general problem that needs to be solved within Twisted.  
Packages should be able to specify public interfaces which you can 
import directly, such as

	from twisted.internet import Application
	from twisted.web import Resource
	from twisted.cred import IRealm

These interfaces are generally much smaller than the total of the 
classes in all the modules, and specifying things this way would make 
documentation simpler and allow us to change implementations and 
provide backwards compatibility in a much nicer way.

The problem is that the Python import system does not give us the right 
kind of hooks to provide this without importing things in advance or 
giving a performance hit to objects imported this way (making them 
getattr wrappers), as far as I can tell; while you can patch 
__import__, you can't catch the *first* import mid-way, so if someone 
starts a program with

	from twisted.internet import Application

you could not patch __import__ in twisted/__init__.py because it is not 
called recursively.

I am not opposed to evil in order to make this work, but I am very 
opposed to _fragile_ evil; something as basic as the import system 
should not be prone to surprising behavior and subtle misconfiguration.

So, I am opposed to flow implementing its own ad-hoc name promotion 
until we can come up with a standardizeable way to promote names to the 
package level, but I would very much like to figure out how to promote 
names in a generic way.




From glyph at twistedmatrix.com  Mon Jun 23 16:26:11 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2003 17:26:11 -0500
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <1056401924.1912.5.camel@mingus>
Message-ID: <B173510E-A5C9-11D7-B52C-000393C9700E@twistedmatrix.com>

On Monday, June 23, 2003, at 03:58 PM, Abe Fettig wrote:

>> app.listenTCP is going to be deprecated, not reactor.listenTCP. And 
>> yes,
>> app.listenTCP is a bad idea.
>
> Well, then, in the spirit of Twisted Best Practices, what is the
> preferred way to listen on a port within the context of an application?

There isn't one, yet.  Itamar is talking about a deprecation that will 
happen as part of a more central refactoring of Application, that will 
clean up lots of cruft.  When this happens, the deprecation warnings 
for Application.listenTCP will be very clear on what it should be 
migrated to :-).  For the moment, continue using app.listenTCP as 
usual.  (You can see an earlier thread where I responded to Moshe's 
suggestion for refactoring Application for more details.)

Unfortunately our design skills have really been outpacing our 
implementation speed lately.  I'm sorry for the divergence in "what 
will be the right thing" and "what is currently a working thing" that 
this creates.  Luckily at least newcred is mostly done now :)




From glyph at twistedmatrix.com  Tue Jun 24 00:41:05 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 01:41:05 -0500
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624061328.12768.qmail@green.zadka.com>
Message-ID: <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 01:13 AM, Moshe Zadka wrote:

> using them incorrectly leads to horribly unmaintainable applications.  
> The
> best way to insure using them correctly is to not use them at all,  
> until
> you are on your *final* deployment stages. By then, the whole "An RPY  
> must
> be less than 10 lines" will be superfluous because you will not *have*
> more than 10 lines to write.

This is a great description of RPYs.

In fact, I propose that we put a hack into ResourceScript which stats  
the .rpy file after it's been run, and if it is more than 512 bytes,  
print a UserWarning like:

	Woah there, code cowboy!  It's likely you've misunderstood what RPYs  
are for.  Have you read this?
		  
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
004693.html
	If you are quite sure that you are not committing an awful hack that  
will bring doom to you and shame to your family, set  
__no_seriously_this_rpy_needs_to_be_this_long__ = 5192

where 5192 is a new maximum size based on the current length of that  
file, calculated for the user's convenience to include some extra  
padding for the new attribute.




From andrew-twisted at puzzling.org  Tue Jun 24 00:55:48 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 16:55:48 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <20030624065548.GF7970@frobozz>

On Tue, Jun 24, 2003 at 01:41:05AM -0500, Glyph Lefkowitz wrote:
> 
> On Tuesday, June 24, 2003, at 01:13 AM, Moshe Zadka wrote:
> 
> >using them incorrectly leads to horribly unmaintainable applications.
> >The best way to insure using them correctly is to not use them at all,
> >until you are on your *final* deployment stages. By then, the whole "An
> >RPY  must be less than 10 lines" will be superfluous because you will not
> >*have* more than 10 lines to write.
> 
> This is a great description of RPYs.
> 
> In fact, I propose that we put a hack into ResourceScript which stats  
> the .rpy file after it's been run, and if it is more than 512 bytes,  
> print a UserWarning like:
> 
> 	Woah there, code cowboy!  It's likely you've misunderstood what RPYs 
> are for.  Have you read this?
> 		  
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> 004693.html
[...]

Except that it should refer to actual documentation, rather than the mailing
list archives!  I think Moshe's post is quite readily adaptable to slightly
more formal documentation, though, so I volunteer to do some trivial editing
and include it in the HOWTOs if people agree that's a good idea... :)

-Andrew.




From lafou at wanadoo.fr  Tue Jun 24 01:39:31 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 09:39:31 +0200
Subject: [Twisted-Python] WOVEN Question
In-Reply-To: <20030624011910.GB7668@frobozz>
References: <1056358887.2276.55.camel@biproc>
	 <20030623155047.GA8824@polynode.com> <1056383951.2282.105.camel@biproc>
	 <20030624011910.GB7668@frobozz>
Message-ID: <1056440371.2279.113.camel@biproc>

>     http://twistedmatrix.com/users/warner/doc-latest/
> 
> If you find expandMacro, or anything else, isn't covered... documentation
> patches would be very gratefully accepted! :)


thank you very much. Hmm, the woven part hasn't been touched, yes.
I can't help to write some help now (don't have enough time), but maybe later (next month)

Philippe




From lafou at wanadoo.fr  Tue Jun 24 02:38:53 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 10:38:53 +0200
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624065548.GF7970@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>
Message-ID: <1056443933.2282.120.camel@biproc>

> > In fact, I propose that we put a hack into ResourceScript which stats  
> > the .rpy file after it's been run, and if it is more than 512 bytes,  
> > print a UserWarning like:
> > 
> > 	Woah there, code cowboy!  It's likely you've misunderstood what RPYs 
> > are for.  Have you read this?
> > 		  
> > http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/
> > 004693.html
> [...]

I think we **really** need some complete doc about that. Building a
large web app with half written doc is quite hard (no doc for macros,
guard, Form, ...). Btw, I don't know how (and where !) to start
developping my application :(

RPY seems to be a good starting point to me. But I think I was using it
in a wrong way.
If I understand it well, I should have :

- xhtml templates.
- xhtml macro templates eventually.
- rpy files.
- py files.


xhtml templates are used for presentation
python files are used for logic
rpy are glue between presentation and logic. 

that's it ?






From egor at iplus.ru  Tue Jun 24 03:20:53 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Tue, 24 Jun 2003 13:20:53 +0400
Subject: [Twisted-Python] Q: PyQt and error handling in Deferreds
Message-ID: <200306241320.53288.egor@iplus.ru>

Hello!

I'm writing client application using Twisted and PyQt. I want to handle 
connection errors by showing the message box that describes it, so my errback  
looks like this:

    def _ebSessionRequest(self, err):
        QMessageBox.critical(self, "Warder", "Can't connect to server.")
        self.setEnabled(1)
        self.editAccesCode.setFocus()

It works nice but when the errback fired i get two tracebacks:

Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 249, 
in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 262, 
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "main.py", line 185, in _ebSessionRequest
    QMessageBox.critical(self, "Warder", "Can't connect to server.")
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
74, in read
    why = w.doRead()
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 378, 
in doConnect
    self.failIfNotConnected(error.getConnectError((connectResult, 
os.strerror(connectResult))))
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 315, 
in failIfNotConnected
    self.connector.connectionFailed(failure.Failure(err))
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 527, 
in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
clientConnectionLost
    self.deferred.errback(reason)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
in _startRunCallbacks
    raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:
Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 249, 
in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 262, 
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "main.py", line 185, in _ebSessionRequest
    QMessageBox.critical(self, "Warder", "Can't connect to server.")
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
83, in read
    w.connectionLost(failure.Failure(why))
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 396, 
in connectionLost
    self.failIfNotConnected(error.ConnectError())
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 315, 
in failIfNotConnected
    self.connector.connectionFailed(failure.Failure(err))
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 527, 
in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
clientConnectionLost
    self.deferred.errback(reason)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
in errback
    self._startRunCallbacks(fail, 1)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
in _startRunCallbacks
    raise AlreadyCalledError()
twisted.internet.defer.AlreadyCalledError:

My question is: is it normal? How can I avoid such tracebacks?


-- 
Egor Cheshkov <egor at iplus.ru>





From m at moshez.org  Tue Jun 24 03:44:47 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 09:44:47 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056443933.2282.120.camel@biproc>
References: <1056443933.2282.120.camel@biproc>, <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>
Message-ID: <20030624094447.20513.qmail@green.zadka.com>

On 24 Jun 2003, Philippe <lafou at wanadoo.fr> wrote:

> RPY seems to be a good starting point to me.

It isn't. That was itamar's point: don't use RPYs. It's not that they
are not useful, but...
OK, here's an analogy. When teaching kids correct table manners, you put
books under their arms, and tell them not to let the books fall. It's not
that being able to hold books while eating is a useful skill -- it's that
the books force the kid to constrain the movements of his hands.

In a similar way, not using RPYs will force you to think about the
correct way to build your application. If you feel yourself forced
to use RPY *avoid the temptation*, and know that what you're feeling
is actually a way to build the application *incorrectly*. If you're
still not sure what to do, ask advice -- here or on #twisted. But
in no case succumb to the "just write RPYs".

You should only use RPY when you are able to build applications without
RPYs. This is why you see tools like Issues, say, use RPYs -- notice
how you *can* use Issues *without* RPYs.

> If I understand it well, I should have :
> 
> - xhtml templates.
> - xhtml macro templates eventually.
> - rpy files.
> - py files.

NO!
You should *not* have RPY files
Some Python modules will be used for pure, non-web-related business
logic. Some Python modules will define resource trees which bind
together logic and presentation, for example by using Page instances
and defining wchild_* methods. Perhaps you'll find a need to write
an ApplicationService which holds various resources, usually not.
Notice the one thing missing from this paragraph: .rpy files. That's
right, you should not have *any* .rpy files. You *may* have need for
Python modules with long and tortorous functions like:

def buildBlogResource(
  realName,
  numberOfArticles,
  numberOfLines,
  colorScheme,
  ....
  ):
    blogObject = blog.DataRespository(...)
    root = blog.rootResource(blogObject)
    showArticles = blog.Show(blogObject)
    root.putChild('show', showArticles)
    # Notice how I use relative URLs here:
    updateArticlesForm = blog.UpdateForm(blogObject, url="doupdate")
    root.putChild('update', updateArticles)
    doUpdate = blog.DoUpdate(blogObject)
    root.putChild('doupdate', doUpdate)
    return root
    
But there should be *no* RPYs. Now, when testing, you might use a script
similar to

"""
#!/usr/bin/python2.2
from blog import buildBlogResource
from twisted.web import server
from twisted.internet import reactor

resource = buildBlogResource("Moshe", 10, 20, "RED", ...)
reactor.listenTCP(8080, server.Site(resource))
"""

When you are done testing, you package your Python library. Now,
you may do several things:

1. Put a .rpy in your doc/examples which looks something like

"""
# change these lines to configure
name = "Moshe"
articles = 10
lines = 20
colorScheme = "RED"
...

# touch nothing below this line
from blog import buildBlogResource
resource = buildBlogResource(name, articles, lines, colorScheme, ...)
"""

2. Write a TAP plugin to easily generate blogs. See plugin.html for
   full details, I'll show an excerpt here:

""""
from blog import buildBlogResource

def updateApplication(app, config):
    name, articles, lines, colorScheme = (config['name'], config['articles'],
                                   config['lines'], config['colorScheme]')
    resource = buildBlogResource(name, articles, lines, colorScheme, ...)
    app.listenTCP(config['port'], server.Site(resource))
"""

Your users can now do

% mktap myblog --name=Moshe --colorScheme=RED
% twistd -f myblog

3. Supply a twisted-web Debian plugin, which looks like

"""
# change these lines to configure
name = "Moshe"
articles = 10
lines = 20
colorScheme = "RED"
...

# touch nothing below this line
from blog import buildBlogResource
resource = buildBlogResource(name, articles, lines, colorScheme, ...)
default.putChild('myblog', resource)
"""

Sitting in /etc/twisted-web/local.d/99myblog.py

4. Document buildBlogResource in your API docs, so savvy Twisted programmers
   can deliver more and better ways to integrate it with a Python app.
   For example, writing through-the-web management to add a blog to a site.

5. Write TRPs (Twisted Resource Pickles) command-line generators.

etc. etc. etc.

Please notice when the RPY arrived on the scene: a long time after
you had a fully functioning blog, and you were *documenting* it. This
is the proper time to think about deployment issues.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Tue Jun 24 03:47:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 19:47:13 +1000
Subject: [Twisted-Python] Q: PyQt and error handling in Deferreds
In-Reply-To: <200306241320.53288.egor@iplus.ru>
References: <200306241320.53288.egor@iplus.ru>
Message-ID: <20030624094713.GG7970@frobozz>

On Tue, Jun 24, 2003 at 01:20:53PM +0400, Egor Cheshkov wrote:
> Hello!
> 
> I'm writing client application using Twisted and PyQt. I want to handle 
> connection errors by showing the message box that describes it, so my errback  
> looks like this:
> 
>     def _ebSessionRequest(self, err):
>         QMessageBox.critical(self, "Warder", "Can't connect to server.")
>         self.setEnabled(1)
>         self.editAccesCode.setFocus()
> 
> It works nice but when the errback fired i get two tracebacks:

I've trimmed down the traceback to a few "interesting" lines:

> Traceback (most recent call last):
>   File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 215, 
> in errback
>     self._startRunCallbacks(fail, 1)
[...]
>   File "main.py", line 185, in _ebSessionRequest
>     QMessageBox.critical(self, "Warder", "Can't connect to server.")
> --- <exception caught here> ---
>   File "/usr/lib/python2.2/site-packages/twisted/internet/qtreactor.py", line 
> 74, in read
>     why = w.doRead()
[...]
>   File "/usr/lib/python2.2/site-packages/twisted/web/xmlrpc.py", line 209, in 
> clientConnectionLost
>     self.deferred.errback(reason)
[...]
>   File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 240, 
> in _startRunCallbacks
>     raise AlreadyCalledError()
> twisted.internet.defer.AlreadyCalledError:

And then the second traceback looks to be the same as the first.

> My question is: is it normal? How can I avoid such tracebacks?

It appears that the t.web.xmlrpc.QueryFactory.clientConnectionLost handler
is being called twice on the same connection, somehow.  I'm guessing that
creating a QMessageBox in the handler re-enters the qtreactor, but the
reactor isn't re-entrant, so it re-runs the same events.  Or something.

Try this:

    def _ebSessionRequest(self, err):
        reactor.callLater(0, QMessageBox.critical, self, "Warder", 
                          "Can't connect to server.")
        self.setEnabled(1)
        self.editAccesCode.setFocus()

Or something like it.  This is mostly guesswork though, so I could easily be
completely wrong about what the problem is.

On a related note: perhaps we need to make the reactors smarter about
accidental re-entrancy, so that weird stuff like this can't happen?

-Andrew.




From joel at memes.com  Fri Jun 20 17:58:20 2003
From: joel at memes.com (Joel Boehland)
Date: Fri, 20 Jun 2003 16:58:20 -0700
Subject: [Twisted-Python] Interactive control of client?
Message-ID: <3EF39F9C.6020005@memes.com>

Hi,
I'm fairly new to Twisted, so this may 
be a stupid question, but that's never 
stopped me before! :-) Anyhow, I would 
like to be able to script a tcp client 
to play around with sending different 
protocol elements from within the python 
interpreter. To boil it down to a 
super-simple example I'll take the 
EchoClient example. Is there anyway to 
get a handle to that client and have it 
send different strings to the 
EchoServer. I'm imagining being able to 
do something like this in the python 
interpreter:

 >>>echoclient = SomeWayToGetClient(...)
 >>>echoclient.sendLine("blah")
 >>>echoclient.sendLine("bleh")

I'm assuming I would have to have the 
client run in another thread to be able 
to allow the python interpreter thread 
to run as well, but I'm not sure how I 
would do that. Any Info/help appreciated!

cheers,
Joel Boehland




From andrew-twisted at puzzling.org  Tue Jun 24 04:10:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 20:10:38 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624094447.20513.qmail@green.zadka.com>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624094447.20513.qmail@green.zadka.com>
Message-ID: <20030624101038.GH7970@frobozz>

On Tue, Jun 24, 2003 at 09:44:47AM -0000, Moshe Zadka wrote:
> On 24 Jun 2003, Philippe <lafou at wanadoo.fr> wrote:
> 
> > RPY seems to be a good starting point to me.
> 
> It isn't. That was itamar's point: don't use RPYs. It's not that they
> are not useful, but...

[...]

> When you are done testing, you package your Python library. Now,
> you may do several things:
> 
> 1. Put a .rpy in your doc/examples which looks something like
[...]
> 
> Please notice when the RPY arrived on the scene: a long time after
> you had a fully functioning blog, and you were *documenting* it. This
> is the proper time to think about deployment issues.

Just to elaborate a little on what Moshe said, notice what function the RPY
in Moshe's example is serving here: *it's a configuration file*.  It's not a
place for arbitrary code and logic, it's merely somewhere you configure a
predefined Resource class.

[Someone please correct me if I'm wrong!]

-Andrew.




From 2002 at weholt.org  Tue Jun 24 04:11:04 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 24 Jun 2003 12:11:04 +0200
Subject: [Twisted-Python] Metakit and Twisted ??
Message-ID: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>

Has anybody tried to use Metakit with Twisted? Is there anyway to avoid
blocking using Metakit, using Deferred etc. ??

Best regards,
Thomas Weholt




From andrew-twisted at puzzling.org  Tue Jun 24 04:16:48 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 20:16:48 +1000
Subject: [Twisted-Python] Interactive control of client?
In-Reply-To: <3EF39F9C.6020005@memes.com>
References: <3EF39F9C.6020005@memes.com>
Message-ID: <20030624101648.GI7970@frobozz>

[Wow, your MUA must have the narrowest editing area I've ever seen!]

On Fri, Jun 20, 2003 at 04:58:20PM -0700, Joel Boehland wrote:

[..snip..]

> I'm imagining being able to do something like this in the python
> interpreter:
> 
> >>>echoclient = SomeWayToGetClient(...)
> >>>echoclient.sendLine("blah")
> >>>echoclient.sendLine("bleh")
> 
> I'm assuming I would have to have the client run in another thread to be
> able to allow the python interpreter thread to run as well, but I'm not
> sure how I would do that. Any Info/help appreciated!

Slightly different to what you're asking...

Try adding a "manhole" to your application.  The quick and dodgy way is 

    from twisted.tap.telnet import updateApplication
    updateApplication(app, 
                      {'username':'admin', 'password': '****', 'port':2323})

(where app is your Application instance)

This will add telnet interface to your program that presents you with a
python prompt.  It can be convenient for playing around in a live Twisted
app.

-Andrew.




From m at moshez.org  Tue Jun 24 04:39:52 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 10:39:52 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624101038.GH7970@frobozz>
References: <20030624101038.GH7970@frobozz>, <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624094447.20513.qmail@green.zadka.com>
Message-ID: <20030624103952.22422.qmail@green.zadka.com>

On Tue, 24 Jun 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Just to elaborate a little on what Moshe said, notice what function the RPY
> in Moshe's example is serving here: *it's a configuration file*.  It's not a
> place for arbitrary code and logic, it's merely somewhere you configure a
> predefined Resource class.
> 
> [Someone please correct me if I'm wrong!]

Well, in my example, it was a configuration file. It could easily have
been the place of "arbitrary" code:

"""
d = {}
execfile("/etc/myblog.py", d)
from blog import buildBlogResource
resource = buildBlogResource(**d)
"""

And have /etc/myblog.py look like

"""
name="Moshe"
colorScheme="RED"
articles=10
lines=20
"""

The .rpy file, more than a configuration file, is a "place indicator" --
it is a link back from the filesystem (which, in the Twisted.Web view,
is just a particularily ugly resource hierearchy) back into a "nice" resource
hierarchy. It's just that the filesystem is very easy to use for "static"
resources. The RPY file is a *deployment* choice. Deployment often
ties in with configuration: sometimes intimately (as in my original
example) and sometimes not so intimately (like in this example, where
the configuration is in a different file).

You can also do even less trivial things in the RPY:

"""
import ConfigParser
config = ConfigParser.ConfigParser("/etc/myblog.ini")
from blog import buildBlogResource
resource = buildBlogResource(config.get("name"), config.getint("articles"),
                             config.getint("lines"), config.get("colorScheme"))
"""

You can choose whether to put cache() at the top or not, etc. etc.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From iko at cd.chalmers.se  Tue Jun 24 05:28:41 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 24 Jun 2003 13:28:41 +0200
Subject: [Twisted-Python] Hacking imap 
In-Reply-To: <20030624052353.GA20033@meson.dyndns.org> 
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> 
Message-ID: <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>

In a message of Tue, 24 Jun 2003 01:23:53 EDT, Jp Calderone writes:
>On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
>  Could you elaborate on "properly handle"?  I am currently making changes
>in this area as well, mainly in the direction of avoiding all the in-memory
>buffering the code currently does.

Certainly,

There are lots of places where literals aren't handled (I think that
the only place where they are handled is in APPEND, at least from what
my testing show). Anyplace where the syntax allows a string, a literal
is allowed.

The idea is to have the command dispatcher parse the arguments for each
command, and then pass the arguments to the command handling function.
This way, if the argument is a literal or a string, it can be passed as
a file object (but there is no need - for example, if a mailbox name
is given as a literal, there is little reason to give it in a file object).

So instead of naming the handler functions <state>_<COMMAND>, I'll have
<state>_<COMMAND> be a tuple containing ( <handler_function>,
<arg_parser>, <arg_parser>, ...) and then call the handler_function
with the results of the arg_parser functions.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From screwtape at froup.com  Tue Jun 24 06:35:07 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 24 Jun 2003 22:35:07 +1000
Subject: [Twisted-Python] To twisted.web beginners: don't use RPYs
In-Reply-To: <20030624011141.GA7668@frobozz>
References: <005b01c335e4$256de300$0401a8c0@razor> <20030618183220.55d93249.itamar@itamarst.org> <1056396002.1559.3.camel@oc-demo.internal.billgribble.com> <20030623222929.GA9891@toshi.anaprd01.md.comcast.net> <20030624011141.GA7668@frobozz>
Message-ID: <20030624123507.GD11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 11:11:41AM +1000, Andrew Bennetts wrote:
> On Mon, Jun 23, 2003 at 06:29:29PM -0400, Christopher Armstrong wrote:
> > 
> > Thus, rpys should have as little code as possible in them -- on the order of 10
> > lines or less (maybe more if you decide to put very simple configuration 
> 
> This reminds me of the MSDN recommending that ASP scripts should never be
> more than 100 lines, because they're just glue for your COM objects.  A
> previous employer of mine knew that, and still had ~100000 lines of ASP
> anyway, including a charting system in about ~20000 lines.  I understand
> that this is not uncommon :)
> 
> People *will* misuse software -- particularly if the documention isn't
> excellent...

Ah, but ASP is a lot more friendly to that kind of misuse than Twisted
seems to be. The fact that Twisted doesn't have a simple ASP-style way
of flipping between code and raw HTML output should make all but the
most persistent misusers cry out 'There Has To Be A Better Way!' in
fairly short order.

I guess it's just a matter of having ample documentation.
Documentation and sample code. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| At night, rave near the guard's compartment naked with a blue light.
|



From andrew-twisted at puzzling.org  Tue Jun 24 07:29:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 24 Jun 2003 23:29:12 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624065548.GF7970@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz>
Message-ID: <20030624132912.GA9058@frobozz>

On Tue, Jun 24, 2003 at 04:55:48PM +1000, Andrew Bennetts wrote:
> On Tue, Jun 24, 2003 at 01:41:05AM -0500, Glyph Lefkowitz wrote:
> > 
> > http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> > 004693.html
> [...]
> 
> Except that it should refer to actual documentation, rather than the mailing
> list archives!  I think Moshe's post is quite readily adaptable to slightly
> more formal documentation, though, so I volunteer to do some trivial editing
> and include it in the HOWTOs if people agree that's a good idea... :)

I've now done this -- you can see the result, fresh off the buildbot, at:
    http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml

As with all of our docs, feedback is welcome!

-Andrew.




From 2002 at weholt.org  Tue Jun 24 08:38:01 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 24 Jun 2003 16:38:01 +0200
Subject: [Twisted-Python] Setting up a HTTPS-server
Message-ID: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>

Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
the past ad saw that the latest release also supports secure FTP. I'm not
clear on the status of the current FTP-implementation in Twisted, so if
anybody would like to shed some light on the current status of HTTPS and
secure FTP that would be great.

( Any information on how to implement a simple authenticating FTP server
running alongside a HTTP(S)-server would also be cool. )

Regards,
Thomas Weholt




From andrew-twisted at puzzling.org  Tue Jun 24 08:44:32 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 00:44:32 +1000
Subject: [Twisted-Python] Setting up a HTTPS-server
In-Reply-To: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
References: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
Message-ID: <20030624144432.GB9058@frobozz>

On Tue, Jun 24, 2003 at 04:38:01PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
> the past ad saw that the latest release also supports secure FTP. I'm not
> clear on the status of the current FTP-implementation in Twisted, so if
> anybody would like to shed some light on the current status of HTTPS and
> secure FTP that would be great.

Twisted currently has no support for secure FTP.

-Andrew.




From jml at ids.org.au  Tue Jun 24 20:17:35 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Wed, 25 Jun 2003 12:17:35 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
Message-ID: <20030625021734.GA12731@mumak.net>


Issues, a issue tracking system built on Twisted technology, has been released
for the first time today!

Homepage: http://www.twistedmatrix.com/users/jml
Download: http://www.twistedmatrix.com/users/jml/Issues-0.1alpha1.tar.gz
Demo: http://www.twistedmatrix.com/users/jml.twistd (TRY IT!)

This is an alpha release, so please don't trust it with important, backup-less
data. The intent of this release is to get people playing with Issues, to
identify usage bugs and missing features.

The full 0.1 release, once the most crucial of these bugs have been dealt
with. Hopefully in a week or two.

Issues does have an email notification feature, but this has been disabled on
the demo, as I didn't want to send out automated emails from twistedmatrix.com
without first clearing it with the relevant authorities.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030625/8d890cf2/attachment.sig>

From twisted at goldenspud.com  Tue Jun 24 09:29:11 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Tue, 24 Jun 2003 10:29:11 -0500
Subject: [Twisted-Python] Setting up a HTTPS-server
In-Reply-To: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
References: <001e01c33a5e$36977be0$3ba8a8c0@gatsoft.no>
Message-ID: <200306241029.11572.twisted@goldenspud.com>

On Tue 2003-06-24 09:38, Thomas Weholt \( PRIVAT \) wrote:
> Can anybody tell me how or if Twisted supports HTTPS? I've used M2Crypto in
> the past ad saw that the latest release also supports secure FTP. I'm not
> clear on the status of the current FTP-implementation in Twisted, so if
> anybody would like to shed some light on the current status of HTTPS and
> secure FTP that would be great.


The package I needed to install to get SSL working in twisted was pyOpenSSL.  
With Debian unstable I used the package 'python2.2-pyopenssl' 

I was able to set up a HTTPS server running alongside an HTTP server by using 
some hints in twisted/doc/examples/echoserv_ssl.py

Basically what it boiled down to for my use was:

[ ... ]

class ServerContextFactory:

    def getContext(self):
        """Create an SSL context.

        Similar to twisted's echoserv_ssl example, except the private key
        and certificate are in separate files."""
        ctx = SSL.Context(SSL.SSLv23_METHOD)
        ctx.use_privatekey_file('serverkey.pem')
        ctx.use_certificate_file('servercert.pem')
        return ctx

[ ... ]

site = twisted.web.server.Site(...)
application.listenTCP(8080, site)
application.listenSSL(8443, site, ServerContextFactory())

[ ... ]

To play around with a dummy private key and certificate I used the following 
commands:

openssl genrsa -out serverkey.pem 2048
openssl req -new -x509 -key serverkey.pem -out servercert.pem -days 1095

Have fun :)

-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From screwtape at froup.com  Tue Jun 24 09:54:07 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 25 Jun 2003 01:54:07 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624132912.GA9058@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
Message-ID: <20030624155407.GF11491@ferd2.thristian.org>

On Tue, Jun 24, 2003 at 11:29:12PM +1000, Andrew Bennetts wrote:
> I've now done this -- you can see the result, fresh off the buildbot, at:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml
> 
> As with all of our docs, feedback is welcome!

One of the nice things about .rpy is that they work well with the
usual HTML development tweak-source-reload-browser cycle. The
(excellent and informative) document above says "The best way to
ensure you are using [.rpys] correctly is to not use them at all until
you are on your final deployment stages" - I feel it might be nice to
mention, if only briefly or in a footnote or at the other end of a
hyperlink, the Twisted Way of debugging a live web app.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The doctor walked in, sminking of gin... he was really sminking." -- McCartney
|



From lafou at wanadoo.fr  Tue Jun 24 10:14:41 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:14:41 +0200
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624132912.GA9058@frobozz>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz>  <20030624132912.GA9058@frobozz>
Message-ID: <1056471281.6825.4.camel@biproc>

> I've now done this -- you can see the result, fresh off the buildbot, at:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/web-development.xhtml


hmm make things a little more clearer. But it still looks like an intro for me :
How can I develop a large woven application ??

I don't see how to make links between pages (resources). I know I can define some new
Child resource, but how do manage several Pages ?
Will I have to do a 

from MyResources import myresource1, myresource2 
??

            





From lafou at wanadoo.fr  Tue Jun 24 10:19:21 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:19:21 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030625021734.GA12731@mumak.net>
References: <20030625021734.GA12731@mumak.net>
Message-ID: <1056471561.6831.7.camel@biproc>

Ho Issues is comming on right time :)
I'll check this code to understand why I shouldn't use RPY. It's so
easier to understand with a complete and concrete exemple, instead of
pieces of code.

thank you jml




From lafou at wanadoo.fr  Tue Jun 24 10:20:32 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:20:32 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030625021734.GA12731@mumak.net>
References: <20030625021734.GA12731@mumak.net>
Message-ID: <1056471632.6831.9.camel@biproc>

On Wed, 2003-06-25 at 04:17, Jonathan Lange wrote:
> Issues, a issue tracking system built on Twisted technology, has been released
> for the first time today!
> 
> Homepage: http://www.twistedmatrix.com/users/jml
> Download: http://www.twistedmatrix.com/users/jml/Issues-0.1alpha1.tar.gz

The link is broken on your page JML.
it points to http://www.twistedmatrix.com/users/jml/Issues-0.1a1.tar.gz




From lafou at wanadoo.fr  Tue Jun 24 10:33:23 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 18:33:23 +0200
Subject: [Twisted-Python] twisted.world is missing ??
Message-ID: <1056472403.6825.13.camel@biproc>

Hi,

I was trying to test Issues. But in issues-admin, there's a
twisted.world import which fails on my machine (gentoo Linux 1.4,
twisted 1.0.5).

Moreover :


>>> from twisted import world
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: cannot import name world
>>> 

thought it was a gentoo bug. But, after downloading
Twisted-1.0.5.tar.bz2 :

$ tar tjpf Twisted-1.0.5.tar.bz2 |grep world
$

world disappeared ???

 
-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From 2002 at weholt.org  Tue Jun 24 11:54:34 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 24 Jun 2003 19:54:34 +0200
Subject: [Twisted-Python] Loading pageproducers dynamically
Message-ID: <006201c33a79$ad931fe0$0401a8c0@razor>

I'm porting a project to Twisted where I loaded what was then called
pageproducer, similar to subclasses of Resource in Twisted. They were in a
given folder and located, created an instance of at run time and stored in a
lookup-structure. The files were organized something like this :

www/index.py
www/folder1/hello1.py
www/folder2/subfolder3/hellotoo.py
[ ... etc ...]

www/index.py maps to index.html, www/folder1/hello1.py to
/folder1/hello.html etc. The main point being that the server didn't know
what classes to import and create before run time. How can I create someting
similar to this, using Resource's putChild etc and keeping the things
discussed lately about keeping python modules out of the webtree ??

I want my users to be able to add pages with ease, not having to edit import
statements in the main modules, put simple doing something like this in a
module named helloworld.py, located in www/test/helloworld.py :

class helloworld(Resource):
    def render(self, request):
        return 'hello world'

and pointing your browser to /test/helloword.py should then show "Hello
world".

Most examples discussed lately has imported all needed modules explicitly at
start up. My setup needs to be more dynamic.

Thomas





From glyph at twistedmatrix.com  Tue Jun 24 11:57:44 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2003 12:57:44 -0500
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <1056472403.6825.13.camel@biproc>
Message-ID: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>

On Tuesday, June 24, 2003, at 11:33 AM, Philippe Lafoucrière wrote:

> thought it was a gentoo bug. But, after downloading
> Twisted-1.0.5.tar.bz2 :

If anyone well-acquainted with Twisted releases software marked as 
"alpha", you may safely assume it requires the latest CVS :-).  Twisted 
World is a new feature in Twisted, still heavily under development.



From lafou at wanadoo.fr  Tue Jun 24 12:11:47 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 24 Jun 2003 20:11:47 +0200
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
Message-ID: <1056478307.6825.15.camel@biproc>

> If anyone well-acquainted with Twisted releases software marked as 
> "alpha", you may safely assume it requires the latest CVS :-).  Twisted 
> World is a new feature in Twisted, still heavily under development.


ho well.

so why twisted.world is in the stable api doc ?




From abe at fettig.net  Tue Jun 24 12:15:19 2003
From: abe at fettig.net (Abe Fettig)
Date: 24 Jun 2003 14:15:19 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624155407.GF11491@ferd2.thristian.org>
References: <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
	 <20030624155407.GF11491@ferd2.thristian.org>
Message-ID: <1056478519.3069.127.camel@mingus>

On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:

> One of the nice things about .rpy is that they work well with the
> usual HTML development tweak-source-reload-browser cycle.

This is true - most web developers are not used to having to stop and
restart the server after every change.  Is there anything wrong with
putting all your code into /index.rpy during development, so that code
gets reloaded on every page visit?  It's easy enough to move the code
into a regular module later.

Abe




From itamar at itamarst.org  Tue Jun 24 12:10:59 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2003 14:10:59 -0400
Subject: [Twisted-Python] Metakit and Twisted ??
In-Reply-To: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>
References: <001501c33a38$ebd48960$3ba8a8c0@gatsoft.no>
Message-ID: <20030624141059.7ffb9802.itamar@itamarst.org>

On Tue, 24 Jun 2003 12:11:04 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Has anybody tried to use Metakit with Twisted? Is there anyway to
> avoid blocking using Metakit, using Deferred etc. ??

I know Glyph was using it at some point, and the assumption was it's
fast enough that you don't need to do anything special.

IMPORTANT: Deferreds do not make code magically not-block! They make
working with non-blocking code easier, but to make blocking code not
block you need to either split it up (e.g. long calculations), switch to
non-blocking API, or use threads.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From rdrb at 123.cl  Tue Jun 24 12:16:05 2003
From: rdrb at 123.cl (rdrb at 123.cl)
Date: Tue, 24 Jun 2003 14:16:05 -0400
Subject: [Twisted-Python] Woven newby question
Message-ID: <20030624181820.RQKK4792.mta3@mta3.real.mail.entelchile.net>

I have tried different formulas but I still not guessing how to use the Widget Paragraph text in order to show a StringModel as "<p>line1</p><p>line2</p><p>line3</p>" html.

This should be trivial but I do not get it.

Could some one help me?

Thanks.

Rodrigob.




From m at moshez.org  Tue Jun 24 12:36:12 2003
From: m at moshez.org (Moshe Zadka)
Date: 24 Jun 2003 18:36:12 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056478519.3069.127.camel@mingus>
References: <1056478519.3069.127.camel@mingus>, <20030624061328.12768.qmail@green.zadka.com>
	 <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz>
	 <20030624155407.GF11491@ferd2.thristian.org>
Message-ID: <20030624183612.7356.qmail@green.zadka.com>

On 24 Jun 2003, Abe Fettig <abe at fettig.net> wrote:

> This is true - most web developers are not used to having to stop and
> restart the server after every change.  Is there anything wrong with
> putting all your code into /index.rpy during development, so that code
> gets reloaded on every page visit?  It's easy enough to move the code
> into a regular module later.

Depends on how much code that is. Of course, you can also do that if you
don't put all your code in the .rpy, by having a short .rpy which
reloads modules:

'''
import blog
reload(blog)
resource = blog.buildBlogResource(...)
'''
 
is a perfectly sane short RPY which will allow you to code properly.
However, I tend to dislike this kind of solutions. While in CGI,
this kind of strategy makes sense, in real web applications, it
starts to break down. My vague memories of using HTML::Mason
and OpenACS indicate that at one point I was so tired of remembering
which parts were cached and which parts weren't that I actually
did restart the web server whenever I wanted to test my changes.

I usually do my web development with a web browser open, and whenever
I change I restart the server, and reload the page. Moving from two
clicks per change to one doesn't seem worth remembering what's
cached and what isn't, sorry... :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at intarweb.us  Tue Jun 24 14:15:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 16:15:03 -0400
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
In-Reply-To: <200306221714.24485@smurf.noris.de>
References: <200306221714.24485@smurf.noris.de>
Message-ID: <20030624201503.GA22074@meson.dyndns.org>

On Sun, Jun 22, 2003 at 05:14:24PM +0200, Matthias Urlichs wrote:
> Since "suck" doesn't work for me for a variety of reasons, I decided to 
> replace it with a solution based on twisted.protocol.nntp. After a few hours 
> of hacking, I now have a nice program which nicely saturates my downlink 
> bandwidth. ;-)
> 
> To make a long story short, the attached patch implements the changes and 
> fixes I needed to actually get there.

  I think this patch is against a version of nntp.py that I don't have. 
Could you make sure it is against current CVS, or at least a previously
released version (I'm quite certain we've never had 1.0.5smurf-6)

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030624/2a8d384b/attachment.sig>

From exarkun at intarweb.us  Tue Jun 24 14:30:38 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 16:30:38 -0400
Subject: [Twisted-Python] Hacking imap
In-Reply-To: <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> <200306241128.h5OBSgk12750@haddock.cd.chalmers.se>
Message-ID: <20030624203038.GB22074@meson.dyndns.org>

On Tue, Jun 24, 2003 at 01:28:41PM +0200, Anders Hammarquist wrote:
> In a message of Tue, 24 Jun 2003 01:23:53 EDT, Jp Calderone writes:
> >On Tue, Jun 24, 2003 at 01:38:32AM +0200, Anders Hammarquist wrote:
> >  Could you elaborate on "properly handle"?  I am currently making changes
> >in this area as well, mainly in the direction of avoiding all the in-memory
> >buffering the code currently does.
> 
> Certainly,
> 
> There are lots of places where literals aren't handled (I think that
> the only place where they are handled is in APPEND, at least from what
> my testing show). Anyplace where the syntax allows a string, a literal
> is allowed.

  Ahh yes, I believe I blocked out that particular memory :(  Thanks for
tackling it :)

> 
> The idea is to have the command dispatcher parse the arguments for each
> command, and then pass the arguments to the command handling function.
> This way, if the argument is a literal or a string, it can be passed as
> a file object (but there is no need - for example, if a mailbox name
> is given as a literal, there is little reason to give it in a file object).
> 
> So instead of naming the handler functions <state>_<COMMAND>, I'll have
> <state>_<COMMAND> be a tuple containing ( <handler_function>,
> <arg_parser>, <arg_parser>, ...) and then call the handler_function
> with the results of the arg_parser functions.

  This sounds like a great approach.  If I could make a request (and maybe
you were going to do this anway), it would be nice if the arg_parsers could
work incrementally: this is mostly of use when receiving an actual message,
to avoid buffering it all in memory (or even buffering it on disk and
pushing off parsing it until it is completely received).

  Maybe this means <arg_parser> should be a factory that returns a parser,
so that state can be more easily managed when parsing the full
list-expression returned with from a fetch command.

  Sound reasonable?

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030624/f361a576/attachment.sig>

From missive at hotmail.com  Tue Jun 24 15:36:42 2003
From: missive at hotmail.com (Lee Harr)
Date: Tue, 24 Jun 2003 21:36:42 +0000
Subject: CVS Tag  (was Re: [Twisted-Python] PATCH: doc/historic/index.html reality link)
Message-ID: <BAY2-F127hxJKocJqj00000c37b@hotmail.com>

> > I think that patch I sent in may have had line-wrap problems...
> > I updated and the link to the reality doc is still off by one.
>
>Hmm, I did an update on a separate machine and it looks ok from here:
>

>
>This is version 1.5 of doc/historic/index.html .. is that the same version
>you're seeing?
>
>puzzled,
>  -Brian


Wow, I am really glad I looked in to this....   Looks like my cvs copy was
set to use a tag from 2 weeks ago (June 10? -- D2003.06.10.04.00.00)
Not sure how it got that way (bit of a cvs newbie  :o)

I used
cvs update -r HEAD -d -P
and now when I look in the CVS/Tag files it shows
NHEAD

Is that the correct one?   Can I now just
cvs update -d -P
to continue getting the latest revisions?

Thanks for your time.

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From radix at twistedmatrix.com  Tue Jun 24 16:31:24 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:31:24 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056471281.6825.4.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 12:14:41 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <1056471281.6825.4.camel@biproc>
Message-ID: <20030624223124.GK5396@toshi.anaprd01.md.comcast.net>

On 2003.06.24 12:14, Philippe Lafoucrière wrote:
> I don't see how to make links between pages (resources). I know I can define some new
> Child resource, but how do manage several Pages ?

You should have a single root resource that knows the layout of 
your entire web app. Once you've got that, the only kinds of
links you need are child and sibling. Also, if you set 
appRoot = True in your root Page subclass, you can call 
request.getRootURL() anywhere else to get a URL that points to
the root of your web app.

You would manage several Pages by making them all children of
your main app-root Page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 16:31:24 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:31:24 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056471281.6825.4.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 12:14:41 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <1056471281.6825.4.camel@biproc>
Message-ID: <20030624223124.GK5396@toshi.anaprd01.md.comcast.net>

On 2003.06.24 12:14, Philippe Lafoucrière wrote:
> I don't see how to make links between pages (resources). I know I can define some new
> Child resource, but how do manage several Pages ?

You should have a single root resource that knows the layout of 
your entire web app. Once you've got that, the only kinds of
links you need are child and sibling. Also, if you set 
appRoot = True in your root Page subclass, you can call 
request.getRootURL() anywhere else to get a URL that points to
the root of your web app.

You would manage several Pages by making them all children of
your main app-root Page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 16:37:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:37:10 -0400
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <1056478307.6825.15.camel@biproc>; from lafou@wanadoo.fr on Tue, Jun 24, 2003 at 14:11:47 -0400
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com> <1056478307.6825.15.camel@biproc>
Message-ID: <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>

On 2003.06.24 14:11, Philippe Lafoucrière wrote:
> 
> > If anyone well-acquainted with Twisted releases software marked as 
> > "alpha", you may safely assume it requires the latest CVS :-).  Twisted 
> > World is a new feature in Twisted, still heavily under development.
> 
> 
> ho well.
> 
> so why twisted.world is in the stable api doc ?

Well, it's in the "current API doc", which is for 1.0.6alpha3.

Issues probably works with 1.0.6alpha3. If you don't want to
get CVS, get that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Tue Jun 24 16:38:59 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 24 Jun 2003 18:38:59 -0400
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <1056478519.3069.127.camel@mingus>; from abe@fettig.net on Tue, Jun 24, 2003 at 14:15:19 -0400
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <20030624155407.GF11491@ferd2.thristian.org> <1056478519.3069.127.camel@mingus>
Message-ID: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>

On 2003.06.24 14:15, Abe Fettig wrote:
> On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:
> 
> > One of the nice things about .rpy is that they work well with the
> > usual HTML development tweak-source-reload-browser cycle.
> 
> This is true - most web developers are not used to having to stop and
> restart the server after every change.  Is there anything wrong with
> putting all your code into /index.rpy during development, so that code
> gets reloaded on every page visit?  It's easy enough to move the code
> into a regular module later.

I would strongly recommend, rather than shoving all of your
code into an .rpy file for its reloading semantics, just 
calling reload() (or twisted.python.rebuild.rebuild()) on the
modules that are part of your project in the .rpy file.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From don at motorola.com  Tue Jun 24 17:13:29 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 24 Jun 2003 18:13:29 -0500
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
Message-ID: <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>

Greetings,

Sorry about the newbie question, but... :)

I have a custom server running a byte-oriented protocol
(sockets, written in C) and would like to use twisted to implement
the client. I see from looking at the "simpleclient" how
you can use an existing protocol (e.g. Echo) but I am not
sure how to create a client using my own byte-oriented (e.g.
"raw") protocol. If anyone could give me a little advice I
would certainly appreciate it. :) Also, is ClientFactory appropriate
for this sort of application?

Cheers,

Don




From andrew-twisted at puzzling.org  Tue Jun 24 19:54:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 11:54:17 +1000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
References: <20030624061328.12768.qmail@green.zadka.com> <D44D9CE0-A60E-11D7-B52C-000393C9700E@twistedmatrix.com> <20030624065548.GF7970@frobozz> <20030624132912.GA9058@frobozz> <20030624155407.GF11491@ferd2.thristian.org> <1056478519.3069.127.camel@mingus> <20030624223859.GD2222@toshi.anaprd01.md.comcast.net>
Message-ID: <20030625015417.GA11072@frobozz>

On Tue, Jun 24, 2003 at 06:38:59PM -0400, Christopher Armstrong wrote:
> 
> On 2003.06.24 14:15, Abe Fettig wrote:
> > On Tue, 2003-06-24 at 11:54, screwtape at froup.com wrote:
> > 
> > > One of the nice things about .rpy is that they work well with the
> > > usual HTML development tweak-source-reload-browser cycle.
> > 
> > This is true - most web developers are not used to having to stop and
> > restart the server after every change.  Is there anything wrong with
> > putting all your code into /index.rpy during development, so that code
> > gets reloaded on every page visit?  It's easy enough to move the code
> > into a regular module later.
> 
> I would strongly recommend, rather than shoving all of your
> code into an .rpy file for its reloading semantics, just 
> calling reload() (or twisted.python.rebuild.rebuild()) on the
> modules that are part of your project in the .rpy file.

Note that there are now docs on rebuild in CVS, too:
    http://twistedmatrix.com/users/warner/doc-latest/howto/upgrading.xhtml

-Andrew.




From andrew-twisted at puzzling.org  Tue Jun 24 20:00:11 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 12:00:11 +1000
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>
References: <20030624223859.GD2222@toshi.anaprd01.md.comcast.net> <FPEBLIAFGDEEOHHAGOKBEENICBAA.don@motorola.com>
Message-ID: <20030625020011.GB11072@frobozz>

On Tue, Jun 24, 2003 at 06:13:29PM -0500, Don Hiatt wrote:
> Greetings,
> 
> Sorry about the newbie question, but... :)
> 
> I have a custom server running a byte-oriented protocol
> (sockets, written in C) and would like to use twisted to implement
> the client. I see from looking at the "simpleclient" how
> you can use an existing protocol (e.g. Echo) but I am not
> sure how to create a client using my own byte-oriented (e.g.
> "raw") protocol. If anyone could give me a little advice I
> would certainly appreciate it. :) Also, is ClientFactory appropriate
> for this sort of application?

Well, the 'data' parameter of an Protocol's dataReceived method is just a
string, i.e. bytes directly from the network.  I've used Twisted in the past
for working with byte stream protocols -- it works very nicely.

A key part is the 'struct' module in Python's standard library, which can
convert bytes to numbers, and so forth.  Take a look at the source to
twisted.protocols.basic.Int32Receiver, which receives strings prefixed by a
32-bit length.  There's really nothing to it :)

Regarding ClientFactory -- yes, whenever you are using clients, you probably
want some sort of ClientFactory (quite possibly a ReconnectingClientFactory,
depending on the application).  See
    http://twistedmatrix.com/documents/howto/clients
for an overview of using ClientFactory.

-Andrew.




From andrew-twisted at puzzling.org  Tue Jun 24 20:15:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 12:15:01 +1000
Subject: [Twisted-Python] Loading pageproducers dynamically
In-Reply-To: <006201c33a79$ad931fe0$0401a8c0@razor>
References: <006201c33a79$ad931fe0$0401a8c0@razor>
Message-ID: <20030625021501.GC11072@frobozz>

On Tue, Jun 24, 2003 at 07:54:34PM +0200, Thomas Weholt wrote:
> I'm porting a project to Twisted where I loaded what was then called
> pageproducer, similar to subclasses of Resource in Twisted. They were in a
> given folder and located, created an instance of at run time and stored in a
> lookup-structure. The files were organized something like this :
> 
> www/index.py
> www/folder1/hello1.py
> www/folder2/subfolder3/hellotoo.py
> [ ... etc ...]
> 
> www/index.py maps to index.html, www/folder1/hello1.py to
> /folder1/hello.html etc. The main point being that the server didn't know
> what classes to import and create before run time. How can I create someting
> similar to this, using Resource's putChild etc and keeping the things
> discussed lately about keeping python modules out of the webtree ??

I think you might you might want to set 'isLeaf = 1' on your resource.  This
will stop Twisted Web calling getChild on that resource, even if there are
more path elements left.  Instead, your resource's .render method will be
called immediately, so resource is then free to deal with the rest of the
path however it likes (it can get the remainder of path looking at
request.postpath, if it cares).

twisted.web.twcgi.CGIScript does this, and it sounds like what you want is
similar in some respects to CGI.  It might be a useful reference.

> I want my users to be able to add pages with ease, not having to edit import
> statements in the main modules, put simple doing something like this in a
> module named helloworld.py, located in www/test/helloworld.py :
> 
> class helloworld(Resource):
>     def render(self, request):
>         return 'hello world'
> 
> and pointing your browser to /test/helloword.py should then show "Hello
> world".

I'm not sure that having these inherit from twisted.web.resource.Resource
really makes sense; the tree of the filesystem doesn't really offer the same
features as a tree of Resources.  That's just a guess though -- I'm actually
not a Twisted Web expert (I just play one on mailing lists ;).

> Most examples discussed lately has imported all needed modules explicitly at
> start up. My setup needs to be more dynamic.

I hope I've helped.

-Andrew.




From exarkun at intarweb.us  Tue Jun 24 20:26:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 24 Jun 2003 22:26:21 -0400
Subject: [Twisted-Python] mainloop exception
Message-ID: <20030625022621.GA24154@meson.dyndns.org>

  Using conch:

exarkun at pyramid:~$ exit
logout
Traceback (most recent call last):
                                    File "/usr/local/bin/conch", line 32, in ?
                                                                                  run()
                                                                                         File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 176, in run
                                         reactor.run()
                                                        File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 123, in run
           self.mainLoop()
                            File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 134, in mainLoop
                                                                                                                               self.doIteration(t)
       --- <exception caught here> ---
                                        File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 439, in doSelect
                                                                                                                                           [], timeout)
            exceptions.ValueError: I/O operation on closed file
                                                               Connection to twistedmatrix.com closed.

  Reproducable, but not on every run on conch.  I am using connection
sharing (conch --noshell --fork), python2.3b1+, current CVS HEAD of Twisted. 
The process controlling the shared connection survives the exception.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030624/2731b81e/attachment.sig>

From jml at ids.org.au  Tue Jun 24 21:26:35 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Wed, 25 Jun 2003 13:26:35 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <1056471632.6831.9.camel@biproc>; from lafou@wanadoo.fr on Wed, Jun 25, 2003 at 02:20:32 +1000
References: <20030625021734.GA12731@mumak.net> <1056471632.6831.9.camel@biproc>
Message-ID: <20030625032635.GC712@sting>

On 2003.06.25 02:20, Philippe Lafoucrière wrote:
> On Wed, 2003-06-25 at 04:17, Jonathan Lange wrote:
> 
> The link is broken on your page JML. it points to
> http://www.twistedmatrix.com/users/jml/Issues-0.1a1.tar.gz

Fixed! Thanks.



From warner at lothar.com  Tue Jun 24 23:26:53 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 24 Jun 2003 22:26:53 -0700 (PDT)
Subject: [Twisted-Python] Re: CVS Tag
References: <BAY2-F127hxJKocJqj00000c37b@hotmail.com>
Message-ID: <20030624.222653.24671623.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> Is that the correct one?   Can I now just
> cvs update -d -P
> to continue getting the latest revisions?

That's what I use. When I check out a tree, I just do:

 cvs -d ... checkout Twisted

and then when I update, I do:

 cvs -z6 update -dP .

(the -z6 turns on compression, to conserve the limited upstream bandwidth of
our CVS server. Apart from that it's identical to your command).

It is conceivable (but I haven't been able to prove it) that updating with
-rHEAD sets some kind of sticky date which would effectively disable later
updates. In general, if I've been using tags and want to get rid of them, I
do:

 cvs -z6 update -A -dP .

which clears all sticky tags, both symbolic and date.

When I *do* use branch tags, I usually create a new tree which is
exclusively for that particular branch. If I keep switching back and forth
between branches, eventually I forget and then have to wonder where my
changes are going.

Finally, trees that have been checked out with date tags are effectively
read-only, since you can't check anything into them. The most you can do is
to create a patch from it and then apply that patch to a non-date-locked
tree.


cheers,
 -Brian



From lafou at wanadoo.fr  Wed Jun 25 00:45:25 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 25 Jun 2003 08:45:25 +0200
Subject: [Twisted-Python] twisted.world is missing ??
In-Reply-To: <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>
References: <5B4A8152-A66D-11D7-B52C-000393C9700E@twistedmatrix.com>
	 <1056478307.6825.15.camel@biproc>
	 <20030624223710.GA2222@toshi.anaprd01.md.comcast.net>
Message-ID: <1056523525.7693.17.camel@biproc>

> Issues probably works with 1.0.6alpha3. If you don't want to
> get CVS, get that.

yes, API Reference on front page points to current API (strange !?).

-- 
Philippe Lafoucrière <lafou at wanadoo.fr>
InFuzzion




From miathan at goliath.darktech.org  Wed Jun 25 03:19:00 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Wed, 25 Jun 2003 11:19:00 +0200 (CEST)
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <20030625022702.6278.57219.Mailman@pyramid.twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>

> is a perfectly sane short RPY which will allow you to code properly.
> However, I tend to dislike this kind of solutions. While in CGI,
> this kind of strategy makes sense, in real web applications, it
> starts to break down. My vague memories of using HTML::Mason
> and OpenACS indicate that at one point I was so tired of remembering
> which parts were cached and which parts weren't that I actually
> did restart the web server whenever I wanted to test my changes.

It all starts to make sense again with servers that combine several
services into one application, especially if some involve persistent
connections.
You don't want to bounce offline all users currently using the IMAP and
IRC servers every time you make a small change to a web page.

Or, if you have a large application which takes serious time to startup,
the waiting gets you mad in no time.

> I usually do my web development with a web browser open, and whenever
> I change I restart the server, and reload the page. Moving from two
> clicks per change to one doesn't seem worth remembering what's
> cached and what isn't, sorry... :)

The rebuild() solution mentioned by Christopher Armstrong mostly takes
care of that.
On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
what I *really* disgusted in most J2EE implementations. I really hope
twisted is not going to enforce this.

Wladimir




From m at moshez.org  Wed Jun 25 03:36:45 2003
From: m at moshez.org (Moshe Zadka)
Date: 25 Jun 2003 09:36:45 -0000
Subject: [Twisted-Python] Getting Stories Straight (RPYs)
In-Reply-To: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>
References: <Pine.LNX.4.44.0306251108480.8620-100000@redbull.xs4all.nl>
Message-ID: <20030625093645.9546.qmail@green.zadka.com>

On Wed, 25 Jun 2003, "W.J." <miathan at goliath.darktech.org> wrote:

> It all starts to make sense again with servers that combine several
> services into one application, especially if some involve persistent
> connections.
> You don't want to bounce offline all users currently using the IMAP and
> IRC servers every time you make a small change to a web page.

If you're doing development on the live server the users are using,
bouncing them off every now and then is a good way to let them know
they are morons for using such a sketchy server.

> The rebuild() solution mentioned by Christopher Armstrong mostly takes
> care of that.

The rebuild() solution will probably consume most of the start-up time.

> On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
> what I *really* disgusted in most J2EE implementations. I really hope
> twisted is not going to enforce this.

Twisted is not about enforcement. Twisted is about mocking people who are
using the technology in non-optimal ways. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From mmoellenbeck at plus.de  Wed Jun 25 06:01:41 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Wed, 25 Jun 2003 14:01:41 +0200
Subject: [Twisted-Python] read form parameter inside a rpy-script
Message-ID: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>

Hi,

I try to read form-parameter inside a rpy-script.

Can anybody help me?

Thanks.

Martin Moellenbeck 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030625/ddd2994b/attachment.html>

From andrew-twisted at puzzling.org  Wed Jun 25 06:41:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Jun 2003 22:41:03 +1000
Subject: [Twisted-Python] read form parameter inside a rpy-script
In-Reply-To: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>
References: <OFA7A6499C.32EE03F7-ONC1256D50.004154AB@uz.tengelmann.de>
Message-ID: <20030625124103.GA12089@frobozz>

On Wed, Jun 25, 2003 at 02:01:41PM +0200, mmoellenbeck at plus.de wrote:
>    Hi,
> 
>    I try to read form-parameter inside a rpy-script.
> 
>    Can anybody help me?

Resource scripts have been a rather active topic of discussion on the list the
past few days -- you really should check the archives.  You probably don't want
to be using them, as explained by Moshe Zadka in this post:

    http://twistedmatrix.com/pipermail/twisted-python/2003-June/004693.html 

Regarding form parameters, you'll find them in the .args attribute of a
request.  A trivial example would be:

    from twisted.web.resource import Resource
    from twisted.web.microdom import escape
    
    class RequestArgResource(Resource):
        def render(self, request):
            return 'request.args: ' + escape(repr(request.args))

-Andrew.




From mmoellenbeck at plus.de  Wed Jun 25 07:42:08 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Wed, 25 Jun 2003 15:42:08 +0200
Subject: Antwort: Re: [Twisted-Python] read form parameter inside a rpy-script
Message-ID: <OF967D450D.1454E68A-ONC1256D50.004B2372@uz.tengelmann.de>

Thank you ;-)

Martin Moellenbeck 





An:     twisted-python at twistedmatrix.com
Kopie: 
 

Thema:  Re: [Twisted-Python] read form parameter inside a rpy-script

 
Andrew Bennetts <andrew-twisted at puzzling.org>
Gesendet von:
twisted-python-admin at twistedmatrix.com
25.06.2003 14:41
Bitte antworten an twisted-python






On Wed, Jun 25, 2003 at 02:01:41PM +0200, mmoellenbeck at plus.de wrote:
>    Hi,
> 
>    I try to read form-parameter inside a rpy-script.
> 
>    Can anybody help me?

Resource scripts have been a rather active topic of discussion on the list 
the
past few days -- you really should check the archives.  You probably don't 
want
to be using them, as explained by Moshe Zadka in this post:

    http://twistedmatrix.com/pipermail/twisted-python/2003-June/004693.html 

Regarding form parameters, you'll find them in the .args attribute of a
request.  A trivial example would be:

    from twisted.web.resource import Resource
    from twisted.web.microdom import escape
 
    class RequestArgResource(Resource):
        def render(self, request):
            return 'request.args: ' + escape(repr(request.args))

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030625/a6165416/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 47 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030625/a6165416/attachment-0002.gif>

From miathan at goliath.darktech.org  Wed Jun 25 08:40:55 2003
From: miathan at goliath.darktech.org (W.J.)
Date: Wed, 25 Jun 2003 16:40:55 +0200 (CEST)
Subject: [Twisted-Python] Re: Getting Stories Straight (RPYs)
In-Reply-To: <20030625113956.5524.82568.Mailman@pyramid.twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0306251621010.8620-100000@redbull.xs4all.nl>

> > You don't want to bounce offline all users currently using the IMAP and
> > IRC servers every time you make a small change to a web page.
>
> If you're doing development on the live server the users are using,
> bouncing them off every now and then is a good way to let them know
> they are morons for using such a sketchy server.

Agreed, users deserve to be kicked real hard once in a while, and
application updates are a socially accepted moment in that.

Very much in the same way that moving a chair or changing a lightbulb
is reason enough for kicking everyone out of the building.

...

> > The rebuild() solution mentioned by Christopher Armstrong mostly takes
> > care of that.
>
> The rebuild() solution will probably consume most of the start-up time.

You don't have to rebuild all, just the part that has changed, which is
the presentation layer, most of the time.

You're missing the point. Even live servers sometimes have bugs that need
to fixed *fast*, and customers love you if you can roll in change requests
quickly without bringing down everything.

> > On-the-fly reloading can be hell, but the ubiquitous "server reboot" is
> > what I *really* disgusted in most J2EE implementations. I really hope
> > twisted is not going to enforce this.
>
> Twisted is not about enforcement. Twisted is about mocking people who are
> using the technology in non-optimal ways.

It is good to be sceptical of people their coding practices.

But the 'one true way' is still to be found.

Wladimir




From typo at soniq.net  Wed Jun 25 09:49:56 2003
From: typo at soniq.net (Paul Boehm)
Date: Wed, 25 Jun 2003 17:49:56 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] Fix call to non-existent function, remove unused import
In-Reply-To: <E19V9VC-00027I-00@pyramid.twistedmatrix.com>
References: <E19V9VC-00027I-00@pyramid.twistedmatrix.com>
Message-ID: <20030625154956.GA16195@soniq.net>

On Wed, Jun 25, 2003 at 07:35:54AM -0500, spiv CVS wrote:
> Index: Twisted/twisted/web/html.py
> diff -u Twisted/twisted/web/html.py:1.16 Twisted/twisted/web/html.py:1.17
> --- Twisted/twisted/web/html.py:1.16	Thu Jun 12 19:28:34 2003
> +++ Twisted/twisted/web/html.py	Wed Jun 25 07:35:53 2003
[...]
>  def PRE(text):
>      "Wrap <pre> tags around some text and escape it with web.escapehtml."
> -    return "<pre>"+escapehtml(text)+"</pre>"
> +    return "<pre>"+escape(text)+"</pre>"
[...]

documentation for PRE is out of synch



From glyph at twistedmatrix.com  Wed Jun 25 13:22:37 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Jun 2003 14:22:37 -0500
Subject: [Twisted-Python] Re: Getting Stories Straight (RPYs)
In-Reply-To: <Pine.LNX.4.44.0306251621010.8620-100000@redbull.xs4all.nl>
Message-ID: <61BB7710-A742-11D7-8924-000393C9700E@twistedmatrix.com>

On Wednesday, June 25, 2003, at 09:40 AM, W.J. wrote:

>>> You don't want to bounce offline all users currently using the IMAP 
>>> and
>>> IRC servers every time you make a small change to a web page.
>>
>> If you're doing development on the live server the users are using,
>> bouncing them off every now and then is a good way to let them know
>> they are morons for using such a sketchy server.
>
> Very much in the same way that moving a chair or changing a lightbulb
> is reason enough for kicking everyone out of the building.

I think there is a slight miscommunication in terms of what is meant by 
'every time you make a small change'.  I get the impression that what 
is being said here is:

	<moshez> you should not be doing your development on a live server.
	<W.J.> so you're saying I shouldn't be able to load updates on a live 
server?

One of Twisted's original design goals was _fast server restart_, 
because restarting the server is pretty much inevitable if you want to 
make substantial changes; I wanted to make it super-easy for developers 
to bounce their servers every minute while making minor changes.  I 
even had a 'bounce my Twisted server' key in emacs for a while when I 
was working on a more deeply interactive system than I am now.  This 
was based on some pretty bitter experience with a server that I was 
coding on at the time which took almost an hour to start up.  EJB 
servers also have this problem; it's not just that you have to restart 
them, it's that you have to _wait_ when they restart.

Another design goal is _restart-free code reload_, which you can see 
still in twisted.python.rebuild, because I know there are times when a 
deployed server needs to be fixed _right now_ and although it can lose 
a few seconds of time, it could not brook an interruption of service.

The choice of how you do your development with these tools is really a 
matter of taste, and I don't have any feelings about it one way or 
another; however, deployment is contingent upon how reliable restart 
vs. reload is.

You should NEVER make live server code changes without first setting up 
a test environment, making the changes, testing the changes, and then 
bringing up an OLD server environment and testing the upgrade path from 
one version to the other however you intend to do it live.

Python's reloading is handy, but dangerous, and Twisted's 'rebuild' 
utility adds to both the power and the danger.  If you use Python's 
reload() thinking it will simply update your server to the most recent 
code revision, you will be in for a nasty shock when you find that 
objects using both the new AND the old code are still around, 
isinstance() will fail sometimes for instances of a particular class, 
and tracebacks have incorrect code in them.

rebuild() 'does more' for you, however, it can still be surprising.  
You may find that objects which were previously initialized to a 
consistent state are now missing attributes which the new code expects 
the initializer to set.  You may find that objects that were old-style 
and are now new-style simply didn't reload.  It has been too long since 
I've looked at the code to remember every dark corner, but there are 
definitely things that can be made to fail.  You have to be careful 
with what kinds of changes you load, and understand how the change will 
interact with the existing code and objects you're updating.

So, despite the conveniences that Twisted can provide for you, you 
can't escape the inevitable software reality that "Development", 
"Test", and "Production" should be three completely separate 
installations on which you can perform upgrades independently, in a way 
suitable to their purpose.  Anything less will result in an unstable 
production environment where, whether you like it or not, your users 
will all fall out of a 30th story window every time you change a 
certain lightbulb.




From iko at cd.chalmers.se  Wed Jun 25 15:16:04 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Wed, 25 Jun 2003 23:16:04 +0200
Subject: [Twisted-Python] Hacking imap 
In-Reply-To: <20030624203038.GB22074@meson.dyndns.org> 
References: <200306232338.h5NNcWp06536@haddock.cd.chalmers.se> <20030624052353.GA20033@meson.dyndns.org> <200306241128.h5OBSgk12750@haddock.cd.chalmers.se> <20030624203038.GB22074@meson.dyndns.org> 
Message-ID: <200306252116.h5PLG4k24185@haddock.cd.chalmers.se>

In a message of Tue, 24 Jun 2003 16:30:38 EDT, Jp Calderone writes:
>> So instead of naming the handler functions <state>_<COMMAND>, I'll have
>> <state>_<COMMAND> be a tuple containing ( <handler_function>,
>> <arg_parser>, <arg_parser>, ...) and then call the handler_function
>> with the results of the arg_parser functions.
>
>  This sounds like a great approach.  If I could make a request (and maybe
>you were going to do this anway), it would be nice if the arg_parsers could
>work incrementally: this is mostly of use when receiving an actual message,

That was the idea. Each arg_parser gets (what's left of) the current line,
and if they need more data, they'll have to arrange for reading it.
(Otherwise the easy fix would have been to have lineReceived() read
literals as well. I tried this approach first, but I didn't like it.)

>  Maybe this means <arg_parser> should be a factory that returns a parser,
>so that state can be more easily managed when parsing the full
>list-expression returned with from a fetch command.

That's a thought. I'll keep it in mind.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From don at motorola.com  Wed Jun 25 15:50:57 2003
From: don at motorola.com (Don Hiatt)
Date: Wed, 25 Jun 2003 16:50:57 -0500
Subject: [Twisted-Python] Help creating a client for a custom protocol
In-Reply-To: <20030625020011.GB11072@frobozz>
Message-ID: <FPEBLIAFGDEEOHHAGOKBOENLCBAA.don@motorola.com>

This is exactly what I was looking for, thanks Andrew!

Cheers,

don

P.S. Thanks also for your previous hint on restricting the web
server to single connections. 

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Andrew
Bennetts
Sent: Tuesday, June 24, 2003 9:00 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Help creating a client for a custom
protocol


On Tue, Jun 24, 2003 at 06:13:29PM -0500, Don Hiatt wrote:
> I have a custom server running a byte-oriented protocol
> (sockets, written in C) and would like to use twisted to implement
> the client. I see from looking at the "simpleclient" how


A key part is the 'struct' module in Python's standard library, which can
convert bytes to numbers, and so forth.  Take a look at the source to
twisted.protocols.basic.Int32Receiver, which receives strings prefixed by a
32-bit length.  There's really nothing to it :)



From andrew-twisted at puzzling.org  Wed Jun 25 18:59:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 10:59:05 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Fix call to non-existent function, remove unused import
In-Reply-To: <20030625154956.GA16195@soniq.net>
References: <E19V9VC-00027I-00@pyramid.twistedmatrix.com> <20030625154956.GA16195@soniq.net>
Message-ID: <20030626005905.GA16989@frobozz>

On Wed, Jun 25, 2003 at 05:49:56PM +0200, Paul Boehm wrote:
> On Wed, Jun 25, 2003 at 07:35:54AM -0500, spiv CVS wrote:
> [...]
> >  def PRE(text):
> >      "Wrap <pre> tags around some text and escape it with web.escapehtml."
> > -    return "<pre>"+escapehtml(text)+"</pre>"
> > +    return "<pre>"+escape(text)+"</pre>"
> [...]
> 
> documentation for PRE is out of synch

Oops, yeah.  Duh.  Fixed :)

-Andrew.




From cce at clarkevans.com  Thu Jun 26 00:09:17 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 26 Jun 2003 06:09:17 +0000
Subject: [Twisted-Python] flow is now in twisted
Message-ID: <20030626060917.GA62774@doublegemini.com>

As of this early morning, the flow module has moved from the
sandbox into twisted.flow; for those using the sandbox version,
simply change:

   import flow

to

   from twisted.flow import flow


The only change was to break flow.py into several chunks

   flow/base          exceptions and abstract base classes

   flow/stage         public stages such as Zip, Merge, Callback, etc.

   flow/controller    controllers, such as Block and Deferred

   flow/threads       threading support and QueryIterator

   flow/protocol      makeProtocol and Protocol

However, to make it easy, all of the public classes in
the above files have been imported into a 'mega' module:
 
   flow/flow.py          This is just a file which imports
                         public objects from the other files.


On the TODO list includes:

   1.  Link flow to what ever the next generation Consumer/Producer
       interfaces are so that flow just slips in.

   2.  Add more to flow/protocol to support various sorts of
       filters on protocols (such as an equivalent to LineReader)

   3.  More documentation (can there ever be enough?)

   4.  A "C" version, when the time is ripe; this will mostly
       focus on two functions: Stage.next() and _Iterator._yield()

In the next 3 months I won't have much time to throw at this, but
I am always open to suggestions and improvements.

Extra thank-yous to Etrepum, Itamar, Exarkun, Radix, Glyph, and Pahan.

Share and Enjoy!

Clark



From 2002 at weholt.org  Thu Jun 26 01:08:30 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 09:08:30 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
Message-ID: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>

I want to start a webserver which have object ( or whatever ) available in
all Resource-instances running in that server which holds common information
for the entire site. What's the appropriate module to use for this;
Application, Factory ??

In the same server I need to start tasks ( ie. run functions ) at different
intervals. These function-calls can take some time ( they can fetch files
from the net, scan the local filesystem etc. ) so I guess I need threads,
deferred or something similar. These function-calls must return a result and
update the persistent object mentioned above.

Can anybody show me a very basic example on how to do this?

Thanks.

Best regards,
Thomas




From glyph at twistedmatrix.com  Thu Jun 26 02:05:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jun 2003 03:05:55 -0500
Subject: [Twisted-Python] Get the data while it's fresh
Message-ID: <0361DFB4-A7AD-11D7-8924-000393C9700E@twistedmatrix.com>

While the #1 article here is still about Twisted, I just wanted to link:

	http://www.ibm.com/developerworks

permalink for archive readers:

	http://www-106.ibm.com/developerworks/linux/library/l-twist1.html

Maybe if somebody could post this to slashdot as well, I will actually 
be /physically unable/ to access the internet!  Hooray!

(Many thanks to Dr. Mertz for this excellent article.)




From andrew-twisted at puzzling.org  Thu Jun 26 02:26:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 18:26:23 +1000
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
In-Reply-To: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no>
Message-ID: <20030626082623.GD17335@frobozz>

On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:
> I want to start a webserver which have object ( or whatever ) available in
> all Resource-instances running in that server which holds common information
> for the entire site. What's the appropriate module to use for this;
> Application, Factory ??

I'll let someone else answer this, but I think you want a Service.

> In the same server I need to start tasks ( ie. run functions ) at different
> intervals. These function-calls can take some time ( they can fetch files
> from the net, scan the local filesystem etc. ) so I guess I need threads,
> deferred or something similar. These function-calls must return a result and
> update the persistent object mentioned above.

(Btw, you seem to think Deferreds make blocking code magically non-blocking.
They don't -- they're actually very straightforward and non-magical.)

For the "fetch files from the net", you don't need threads.  Just do
something like (warning -- untested code):

    from twisted.web.client import getPage
    from twisted.internet import reactor
    from twisted.python import log

    refreshInterval = 30

    def periodicFileFetch(url):
        d = getPage(url)
        # Process the page, and "update the persistent object"
        d.addCallback(processPage).addCallback(updateObject)

        # Log any errors in downloading or processing
        d.addErrback(log.err)

        # Reschedule this function
        d.addBoth(reactor.callLater, refreshInterval, periodicFileFetch, url)

    def processPage(x):
        "Your code goes here!"
    def updateObject(x):
        "Your code goes here!"

    reactor.callLater(refreshInterval, periodicFileFetch, url)

For scanning the local filesystem, you could treat it like one big blocking
operation, or you could break it into small chunks (i.e. one directory at a
time), and process each chunk with callLater(0, processNextChunk).  For the
sake of discussion, I'm going to choose a thread :)

The trick with threads is to avoid interacting directly with *any* of your
existing objects that your main event loop uses.  Disregarding this advice
will lead to race conditions, and thus horrid, horrid bugs.  So, we scan for
files in a thread, but to make it safe we send the instruction to do work to
the thread via a Queue.Queue, and make sure it returns the results to the
deferred via reactor.callFromThread.

    # WARNING: More completely untested code.

    from twisted.python import log, failure
    from twisted.internet import reactor, defer
    import Queue, threading

    refreshInterval = 30

    def processEvents(queue):
        """A thread that processes events. 
        
        It receives (deferred, function) 2-tuples from a Queue.Queue, runs
        the function, and fires the deferred with the result.
        """
        while 1:
            try:
                deferred, func = queue.get()
            except:
                log.err()
                continue
            try:
                reactor.callFromThread(deferred.callback, func())
            except Exception, e:
                reactor.callFromThread(deferred.errback, failure.Failure(e))

    def periodicFileScanner(queue, path):
        # Tell the thread it's time to do some work
        d = defer.Deferred()
        q.put((d, lambda: scanFiles(path)))

        # Arrange for the result/error to be dealt with
        d.addCallback(updateObject)
        d.addErrback(log.err)

        # Schedule this fun merry-go-round to happen again
        d.addBoth(reactor.callLater, refreshInterval, periodicFileScanner,
                  queue, path)

    def initFileScanning(path):
        q = Queue.Queue()
        t = threading.Thread(target=processEvents, args=(q,))
        t.start()
        reactor.callLater(refreshInterval, periodicFileScanner, q, path)

    def scanFiles(path):
        "Your code goes here!"
    def updateObject(x):
        "Your code goes here!"
        
    initFileScanning('/path')

This is actually more-or-less what twisted.internet.threads.deferToThread
does (once you dig deep enough), so you probably want to use it rather than
my completely untested code.  I've written it out explicitly in the hope
that you'll have a better understanding of how it all works.  

Note also how Deferreds are just messengers -- they don't do any interesting
work beyond calling callbacks when they're told to.

> Can anybody show me a very basic example on how to do this?

I hope I've my example code is basic enough that it makes sense for you --
let us know if you're still uncertain about anything.

-Andrew.




From jjanecek at telusplanet.net  Thu Jun 26 02:29:35 2003
From: jjanecek at telusplanet.net (John Janecek)
Date: Thu, 26 Jun 2003 02:29:35 -0600
Subject: [Twisted-Python] Using Guard and Woven (Newbie)
Message-ID: <5.1.0.14.2.20030626022354.00b33b40@mail.telusplanet.net>

I have been examining Twisted and it seems excellent.
The only problem is that twisted seems to require an adjustment in my 
thinking :)

Are there any examples somewhere on how to use.

Module twisted.web.woven.guard
and
Module twisted.web.guard

I am not too good with explanations and just prefer the code so i can 
figure out how it works
I have searched the web but obviously I am looking in the wrong places :)

basically right now what i would like to do is modify the Words server web 
interface
so it requires a username/password to view it.

Would it be advantagous/possible to like convert it to a woven server, or 
am i out to lunch :)


Thanx in advance for reajusting my thinking ;)





From lafou at wanadoo.fr  Thu Jun 26 03:07:13 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 26 Jun 2003 11:07:13 +0200
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <20030626060917.GA62774@doublegemini.com>
References: <20030626060917.GA62774@doublegemini.com>
Message-ID: <1056618433.25387.2.camel@biproc>

On Thu, 2003-06-26 at 08:09, Clark C. Evans wrote:
> As of this early morning, the flow module has moved from the
> sandbox into twisted.flow; 

Congratulations Clarck. You've done such great work on flow, I enjoy it.
Don't forget to put your doc in the howto section.

Philippe




From andrew-twisted at puzzling.org  Thu Jun 26 03:19:44 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 19:19:44 +1000
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <1056618433.25387.2.camel@biproc>
References: <20030626060917.GA62774@doublegemini.com> <1056618433.25387.2.camel@biproc>
Message-ID: <20030626091944.GG17335@frobozz>

On Thu, Jun 26, 2003 at 11:07:13AM +0200, Philippe Lafoucri?re wrote:
> On Thu, 2003-06-26 at 08:09, Clark C. Evans wrote:
> > As of this early morning, the flow module has moved from the
> > sandbox into twisted.flow; 
> 
> Congratulations Clarck. You've done such great work on flow, I enjoy it.
> Don't forget to put your doc in the howto section.

He already did :)

Fresh from the buildbot:
    http://twistedmatrix.com/users/warner/doc-latest/howto/flow.xhtml

-Andrew.




From lafou at wanadoo.fr  Thu Jun 26 04:01:45 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 26 Jun 2003 12:01:45 +0200
Subject: [Twisted-Python] flow is now in twisted
In-Reply-To: <20030626091944.GG17335@frobozz>
References: <20030626060917.GA62774@doublegemini.com>
	 <1056618433.25387.2.camel@biproc>  <20030626091944.GG17335@frobozz>
Message-ID: <1056621704.2225.0.camel@biproc>

> He already did :)
> 
> Fresh from the buildbot:
>     http://twistedmatrix.com/users/warner/doc-latest/howto/flow.xhtml

Wonderfull :)




From jml at ids.org.au  Thu Jun 26 16:05:43 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 27 Jun 2003 08:05:43 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <200306261420.51157.richardjones@optushome.com.au>
References: <20030625021734.GA12731@mumak.net> <200306261420.51157.richardjones@optushome.com.au>
Message-ID: <20030626220543.GA18733@mumak.net>

On Thu, Jun 26, 2003 at 02:20:51PM +1000, Richard Jones wrote:
Content-Description: signed data
> On Wednesday 25 June 2003 12:17 pm, Jonathan Lange wrote:
> > Issues, a issue tracking system built on Twisted technology, has been
> > released for the first time today!
> 
> Could I ask why you've developed this from scratch rather than use Roundup's 
> core?
> 

Sure. The answer is that I didn't know about it.

No one has told me about Roundup, and it didn't stand out in any of my previous
investigations into bug trackers (some of which were more than cursory).

I guess I'll have to investigate Roundup further.

Oops,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030627/a55b0694/attachment.sig>

From 2002 at weholt.org  Thu Jun 26 05:31:18 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 13:31:18 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz>
Message-ID: <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>

----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, June 26, 2003 10:26 AM
Subject: Re: [Twisted-Python] Storing site-wide information and scheduling
tasks


> On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:
> > I want to start a webserver which have object ( or whatever ) available
in
> > all Resource-instances running in that server which holds common
information
> > for the entire site. What's the appropriate module to use for this;
> > Application, Factory ??
>
> I'll let someone else answer this, but I think you want a Service.

I'll look at the API-reference, but I think Service is somewhat missing from
the docs. Or .. ???

>
> > In the same server I need to start tasks ( ie. run functions ) at
different
> > intervals. These function-calls can take some time ( they can fetch
files
> > from the net, scan the local filesystem etc. ) so I guess I need
threads,
> > deferred or something similar. These function-calls must return a result
and
> > update the persistent object mentioned above.
>
> (Btw, you seem to think Deferreds make blocking code magically
non-blocking.
> They don't -- they're actually very straightforward and non-magical.)
>
> For the "fetch files from the net", you don't need threads.  Just do
> something like (warning -- untested code):
>
>     from twisted.web.client import getPage
>     from twisted.internet import reactor
>     from twisted.python import log
>
>     refreshInterval = 30
>
>     def periodicFileFetch(url):
>         d = getPage(url)
>         # Process the page, and "update the persistent object"
>         d.addCallback(processPage).addCallback(updateObject)
>
>         # Log any errors in downloading or processing
>         d.addErrback(log.err)
>
>         # Reschedule this function
>         d.addBoth(reactor.callLater, refreshInterval, periodicFileFetch,
url)
>
>     def processPage(x):
>         "Your code goes here!"
>     def updateObject(x):
>         "Your code goes here!"
>
>     reactor.callLater(refreshInterval, periodicFileFetch, url)
>

Can I call reactor.callLater anywhere in my code, inside a running
Webserver? Actually, I'll have a list of objects, each  having a execute
method, and iterate thru the list for instance once a minute, call the
objects-execute method and it will decide if it is configured to start once
a minute, or once an hour. It's not a specified number of functions I want
to call. I want users to be able to put a module into a folder, the folder
will be scanned at startup of the webserver and the classes in that module
will be created instances of and put in the mentioned list.

Another question about getPage; I'll probably have a list of urls too. Will
getPage work asynch or in serial-mode?

> For scanning the local filesystem, you could treat it like one big
blocking
> operation, or you could break it into small chunks (i.e. one directory at
a
> time), and process each chunk with callLater(0, processNextChunk).  For
the
> sake of discussion, I'm going to choose a thread :)

Again, I'll have to look into callLater in the docs, but this will also just
be one of many possible tasks the user has defined.

>
> The trick with threads is to avoid interacting directly with *any* of your
> existing objects that your main event loop uses.  Disregarding this advice
> will lead to race conditions, and thus horrid, horrid bugs.  So, we scan
for
> files in a thread, but to make it safe we send the instruction to do work
to
> the thread via a Queue.Queue, and make sure it returns the results to the
> deferred via reactor.callFromThread.
>
>     # WARNING: More completely untested code.
>
>     from twisted.python import log, failure
>     from twisted.internet import reactor, defer
>     import Queue, threading
>
>     refreshInterval = 30
>
>     def processEvents(queue):
>         """A thread that processes events.
>
>         It receives (deferred, function) 2-tuples from a Queue.Queue, runs
>         the function, and fires the deferred with the result.
>         """
>         while 1:
>             try:
>                 deferred, func = queue.get()
>             except:
>                 log.err()
>                 continue
>             try:
>                 reactor.callFromThread(deferred.callback, func())
>             except Exception, e:
>                 reactor.callFromThread(deferred.errback,
failure.Failure(e))
>
>     def periodicFileScanner(queue, path):
>         # Tell the thread it's time to do some work
>         d = defer.Deferred()
>         q.put((d, lambda: scanFiles(path)))
>
>         # Arrange for the result/error to be dealt with
>         d.addCallback(updateObject)
>         d.addErrback(log.err)
>
>         # Schedule this fun merry-go-round to happen again
>         d.addBoth(reactor.callLater, refreshInterval, periodicFileScanner,
>                   queue, path)
>
>     def initFileScanning(path):
>         q = Queue.Queue()
>         t = threading.Thread(target=processEvents, args=(q,))
>         t.start()
>         reactor.callLater(refreshInterval, periodicFileScanner, q, path)
>
>     def scanFiles(path):
>         "Your code goes here!"
>     def updateObject(x):
>         "Your code goes here!"
>
>     initFileScanning('/path')
>
> This is actually more-or-less what twisted.internet.threads.deferToThread
> does (once you dig deep enough), so you probably want to use it rather
than
> my completely untested code.  I've written it out explicitly in the hope
> that you'll have a better understanding of how it all works.
>
> Note also how Deferreds are just messengers -- they don't do any
interesting
> work beyond calling callbacks when they're told to.
>
> > Can anybody show me a very basic example on how to do this?
>
> I hope I've my example code is basic enough that it makes sense for you --
> let us know if you're still uncertain about anything.

Thanks for the code, and even though I've commented it abit already I'll try
to get a better look at it and test some things later tonight. Hopefully
some of my comments has cleared things up too.

If anybody's interested this is what I'm trying to develop; a webserver for
blogging, image-galleries, messaging ( perhaps with interfaces to IRC and
jabber, hopefully ICQ too), news aggregator/syndication and distributed/p2p
content exchange ( not just filesharing, more like creating a virtual
cluster of webservers and get some communication going between them so they
can discover new nodes and query nodes for information ). It's a crossover
between Radio.Userland/MovableType and Gnutella ( I won't use the
gnutella-protocoll, just let the server use FOAF-files, which can contain
info about other nodes, which can provide a FOAF-file etc. and base
node-discovery on information in FOAF-files. ) HEP Messaging Server is
somewhat similar and has been one source of inspiration so far, both in
concept and code.

One of the tasks I have to do is fetch RDF/RSS files for syndication. But I
want to make a dynamic system where a user can just subclass/implement a
specified class/interface and put his module into a specified folder and it
will automatically be imported and run from the server.

Ok, this was a terrible mess of info, but hopefully it makes some sense. Any
comments, hints, ideas etc. would be very appreciated.

Thomas




From andrew-twisted at puzzling.org  Thu Jun 26 06:43:31 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 26 Jun 2003 22:43:31 +1000
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
In-Reply-To: <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz> <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no>
Message-ID: <20030626124331.GA18207@frobozz>

On Thu, Jun 26, 2003 at 01:31:18PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Andrew wrote:
> > On Thu, Jun 26, 2003 at 09:08:30AM +0200, Thomas Weholt ( PRIVAT ) wrote:

> > > In the same server I need to start tasks ( ie. run functions ) at
> > > different intervals. These function-calls can take some time ( they
> > > can fetch files from the net, scan the local filesystem etc. ) so I
> > > guess I need threads, deferred or something similar. These
> > > function-calls must return a result and update the persistent object
> > > mentioned above.
[...]
> >
> > For the "fetch files from the net", you don't need threads.  Just do
> > something like (warning -- untested code):
> >
[..snip code..]
> >
> >     reactor.callLater(refreshInterval, periodicFileFetch, url)
> >
> 
> Can I call reactor.callLater anywhere in my code, inside a running
> Webserver? Actually, I'll have a list of objects, each  having a execute
> method, and iterate thru the list for instance once a minute, call the
> objects-execute method and it will decide if it is configured to start once
> a minute, or once an hour. It's not a specified number of functions I want
> to call. I want users to be able to put a module into a folder, the folder
> will be scanned at startup of the webserver and the classes in that module
> will be created instances of and put in the mentioned list.

You can call reactor.callLater whenever you like.  It simply schedules a
function to be run by the reactor.  See:
    http://twistedmatrix.com/documents/howto/time

> Another question about getPage; I'll probably have a list of urls too. Will
> getPage work asynch or in serial-mode?

getPage works asynchronously, that's why it returns a Deferred.

If it was "serial", i.e. blocking, there wouldn't be much point returning a
Deferred -- it could just return the result immediately.

However, if the result of a function might take a while, but the function
wants to be asynchronous (so it doesn't hold up the rest of Twisted from
doing its stuff), it will return a Deferred -- i.e. a result that hasn't
arrived yet (hence the word "deferred" :).  It's really just a placeholder
for a result that's still to come.

> > For scanning the local filesystem, you could treat it like one big
> > blocking operation, or you could break it into small chunks (i.e. one
> > directory at a time), and process each chunk with callLater(0,
> > processNextChunk).  For the sake of discussion, I'm going to choose a
> > thread :)
> 
> Again, I'll have to look into callLater in the docs, but this will also
> just be one of many possible tasks the user has defined.

Note that like callLater isn't very special.  It simply says to the reactor
"in N seconds time, I want you to run this function".  The reactor will then
run that function in around N seconds time (possibly a little later, but not
sooner, iirc).  Like other events the reactor processes, like network
traffic, this all happens in the main thread.  So you can think of it as
being the same as if e.g. a dataReceived handler got triggered at the
appropriate time, and it called your function.  Anyway, read that document I
gave an URL to, and it should all become clear :)

Are you intending on pre-defining all the tasks the user might want to use,
or are you expecting users to want to plugin random code?

> >     # WARNING: More completely untested code.
[...]
> >
> > This is actually more-or-less what twisted.internet.threads.deferToThread
> > does (once you dig deep enough), so you probably want to use it rather
> > than my completely untested code.  I've written it out explicitly in the
> > hope that you'll have a better understanding of how it all works.

(I just want to re-emphasise that using deferToThread rather than my code is
probably a good idea)

> Thanks for the code, and even though I've commented it abit already I'll
> try to get a better look at it and test some things later tonight.
> Hopefully some of my comments has cleared things up too.
> 
> If anybody's interested this is what I'm trying to develop; a webserver
[..snip the usual omni-uber-server-that-will-take-over-the-world thing that
   Twisted does so well ;) ..]
> 
> One of the tasks I have to do is fetch RDF/RSS files for syndication. But
> I want to make a dynamic system where a user can just subclass/implement a
> specified class/interface and put his module into a specified folder and
> it will automatically be imported and run from the server.

Ok.  A couple of things...

First, Twisted already has a system for dealing with plugins (it's how mktap
works!), so you possibly want to re-use that :)   See twisted.python.plugins

Second, the two snippets of example code I've given you could easily be
adapted into a standard interface:

    from twisted.python.components import Interface

    class IUberServerPlugin(Interface):
        def startPlugin(self):
            """Called to start the plugin.

            This will typically be called when the program starts, similarly
            to e.g. twisted.internet.protocols.Factory.startFactory, or
            twisted.internet.app.ApplicationService.startService.
            """

        def stopPlugin(self):
            """Called to stop the plugin.

            Typically this will be called on shutdown, e.g. like stopFactory
            or stopService.
            """

        # ...etc...

So, my earlier code for getting a page could become something like:

    from twisted.web.client import getPage
    from twisted.internet import reactor
    from twisted.python import log

    from uberserver.interfaces import IUberServerPlugin   # ;)

    class PageFetchPlugin:
        __implements__ = (IUberServerPlugin,)
        
        def __init__(self, uberServer, url, refreshInterval=30):
            self.uberServer = uberServer
            self.url = url
            self.refreshInterval = refreshInterval

        def startPlugin(self):
            reactor.callLater(refreshInterval, self.periodicFileFetch)

        def periodicFileFetch(self):
            d = getPage(self.url)

            # Process the page, (e.g. to extract URLs, or something)
            d.addCallback(self.processPage)

            # Update the central uberServer
            d.addCallback(self.uberServer.updateObject)

            # Log any errors in downloading or processing
            d.addErrback(log.err)

            # Reschedule this function
            d.addBoth(reactor.callLater, self.refreshInterval, 
                      self.periodicFileFetch)

        def processPage(self):
            """Your code *still* goes here ;)"""


I hope I've given you some helpful ideas! :)

-Andrew.




From richard at commonground.com.au  Thu Jun 26 06:48:31 2003
From: richard at commonground.com.au (Richard Jones)
Date: Thu, 26 Jun 2003 22:48:31 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030626220543.GA18733@mumak.net>
Message-ID: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday, June 27, 2003, at 08:05  AM, Jonathan
> No one has told me about Roundup, and it didn't stand out in any of my 
> previous
> investigations into bug trackers (some of which were more than 
> cursory).
>
> I guess I'll have to investigate Roundup further.

I posted about developing a twisted frontend to Roundup a while ago, I 
guess you a) weren't subscribed then or b) missed it :)

I've been told that developing a front-end will be a doddle - similar 
to Roundup's current HTTPServer (roundup-server) frontend. That'll get 
you going right now.

I believe the backend will need a little more attention to make it play 
nicely with the async nature of twisted (speaking from my basic 
knowledge of twisted here). That should be pretty easy to do too - the 
backend has fairly simple requirements. Anthony Baxter's looking into 
an Oracle backend, which would rock :)


    Richard
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE++uumrGisBEHG6TARArNvAJ0epYWpRwIal4JPuToKz8Ebxe7GzgCdFX+n
trhCqm90o3xW0nZp9kctc70=
=8ZV/
-----END PGP SIGNATURE-----




From 2002 at weholt.org  Thu Jun 26 07:50:22 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 26 Jun 2003 15:50:22 +0200
Subject: [Twisted-Python] Storing site-wide information and scheduling tasks
References: <000901c33bb1$bf93cad0$3ba8a8c0@gatsoft.no> <20030626082623.GD17335@frobozz> <001301c33bd6$763f0eb0$3ba8a8c0@gatsoft.no> <20030626124331.GA18207@frobozz>
Message-ID: <000701c33be9$e35c6d90$3ba8a8c0@gatsoft.no>

[snip]

> Are you intending on pre-defining all the tasks the user might want to
use,
> or are you expecting users to want to plugin random code?

What I'm making now is a sceleton for a IMHO *very* dynamic server :
1. pages ( ie. Resource-classes ) will be loaded at startup. They're located
in a specific folder. Nothing will be hardcoded. Each module can have
N-number of classes subclassing Resource and if they have a render-method it
will be added to the server. Something like :
/pages/test.py -> contains classes hello and goodbye which again have a
render method, will become available on the server as /test/hello.html and
/test/goddbye.html
I'm writing my own class to produce the content, which takes request,
response and server as parameter to the render-method, where server is a
persistent-data-holder and response is a object in which you store content,
content-type etc. which again will be used to produce the actual content
sent to server. Using request.write is for mye counter-intuitive, since the
server should be working on a response to send back. Just a thought. This
point might need some code examples to clarify. I'll try and make some code
available online later.

2. services. Like mentioned earlier webservices implemented in both xml-rpc
and soap. Define folder, it has a class of some sort with a lot of
rpc_<method-name> in it. I want to find some way of mapping those methods in
a generic XML-RCP and SOAP-resource so the server can respond to both type
of calls, but the definition/implementation of the method is stored in one
class, one time.

3. tasks. Once again, this will subclass one class and be in a seperate
folder, scanned at startup and run at times specified in the source-code of
the task, or better, in a config someplace.

[snip lots of cool-looking code I'll try as soon as this workday is over
:-) ]

Thanks alot for your help so far. I'll try and get some code online which
will make it easier to understand what I'm looking for.

Best regards,
Thomas




From anthony at interlink.com.au  Thu Jun 26 08:07:04 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 27 Jun 2003 00:07:04 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release 
In-Reply-To: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au> 
Message-ID: <200306261407.h5QE74m2025382@localhost.localdomain>

>>> Richard Jones wrote
> I believe the backend will need a little more attention to make it play 
> nicely with the async nature of twisted (speaking from my basic 
> knowledge of twisted here). That should be pretty easy to do too - the 
> backend has fairly simple requirements. Anthony Baxter's looking into 
> an Oracle backend, which would rock :)

I'm still working on the design issues - trying to de-serialise the hyperdb
code...

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From mesozoic at polynode.com  Thu Jun 26 10:45:56 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 26 Jun 2003 12:45:56 -0400
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
Message-ID: <20030626164556.GA2373@polynode.com>

I'm using Debian sarge for my server, with twisted-web and twisted-python,
and until recently was very happy at never having to touch Apache again.

Now it's all dead.

I did a standard 'apt-get upgrade', which moved me up to twisted-python
version 1.0.5+1.0.6rc2.  I am running a server thusly:

mktap web --path ./docroot --allow-ignore-ext --logfile ./web.log

That's all.  No more.  And when I browse to http://mysite/, instead of
serving up 'index.html' (which exists), it endlessly redirects, with my log
files piling up with requests for http://mysite/////////////////////

Now, if the docroot directory is _empty_, or if it has no index files, it
displays a directory listing normally.  So it seems the problem is only when
returning an index file.

Additionally, navigating to http://mysite/index.html works fine.  It's only
when you have http://mysite/ that things get weird.

When I signed up for Debian 'unstable', this isn't quite what I expected ;)

Help?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From danny.milo at gmx.net  Thu Jun 26 13:23:15 2003
From: danny.milo at gmx.net (Danny)
Date: 26 Jun 2003 21:23:15 +0200
Subject: [Twisted-Python] Want CVS Write Access
Message-ID: <1056655394.21648.7.camel@pyramid.niea.at>

Hi!

I'm requesting CVS Write Access to twisted repository because I want to
work on stuff at twisted/protocols/jabber.py and multiple stuff in the
twisted/im directory :)

Also, if the twisted.im is currently unmaintained, I want to offer
myself as a sacrif... uhm maintainer of the im stuff :)

Also, which cvs tags are in use and should be honored etc ?

@ Moshez : yah yah sorry yadda yadda :) I'm very late :)

cheers,
  Danny





From glyph at twistedmatrix.com  Thu Jun 26 13:58:32 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 26 Jun 2003 14:58:32 -0500
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030626164556.GA2373@polynode.com>
Message-ID: <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>

On Thursday, June 26, 2003, at 11:45 AM, Alex Levy wrote:

> it endlessly redirects, with my log files piling up with requests for 
> http://mysite/////////////////////

!@#!@%$~!

I thought this was just spiv's bug, but I just had a look in 
twisted.web.static.File.  When did it get this bad?  Is this my fault? 
:-)  getChild() and render() are both _disasters_, which look like 
they've been hacked on by in excess of 10 people who didn't really 
understand what they're doing.  I can't immediately unravel it enough 
to get a bugfix in, and there are no tests.

I am pulling the emergency brake on the release until static.File has 
tests and they pass.  I would _really_ like it if someone could take 
the time to eliminate PathReferenceAcquisitionContext as well, since 
this is a major part of the confusion and it violates a central 
contract in twisted.web.




From syver-en at online.no  Thu Jun 26 15:03:10 2003
From: syver-en at online.no (Syver Enstad)
Date: 26 Jun 2003 23:03:10 +0200
Subject: [Twisted-Python] The problem with Twisted...
In-Reply-To: <20030607015703.GC13200@ferd2.thristian.org>
References: <20030605124531.GC3988@mumak.net>
	<1054797038.16160.252.camel@biproc> <20030605072254.GA17887@frobozz>
	<20030607015703.GC13200@ferd2.thristian.org>
Message-ID: <u4r2c7drl.fsf@online.no>

screwtape at froup.com writes:

> The Session class doesn't appear to inhert from anything that actually
> 
> contains session-related functionality, and the adapter classes sure
> don't contain session-related functionality, so I have no idea where
> sessiony stuff is done, or how to do it in my own programs, or
> anything clever that I might do.
> 
> In ASP, admittedly based on a much stupider language, the Session
> object is effectively a dictionary. It's much simpler to understand. I
> 
> assume there's useful things the Twisted session object can do that
> you can't do in ASP, but I'm not very clear on what those things might
> 
> be.

I am a newbie to Woven, but I just used the session like this and it
seemed to work fine. Just like in asp you can use it to store you own
data, but instead of being limitited to primitive datatypes like in
ASP you use your own classes like in the example below.

... Some Page derived class
    def getChild(self, postpath, request):
        if request.method == 'POST':
            session = request.getSession()
            session.user = User(request.args['user'][0],
                                request.args['password'][0])
            session.user.logIn()
            if session.user.isLoggedIn():
                return Redirect('../projectorder')
....

 

-- 

Vennlig hilsen 

Syver Enstad




From andrew-twisted at puzzling.org  Thu Jun 26 18:28:58 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 10:28:58 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
Message-ID: <20030627002858.GA20956@frobozz>

On Thu, Jun 26, 2003 at 02:58:32PM -0500, Glyph Lefkowitz wrote:
> 
> On Thursday, June 26, 2003, at 11:45 AM, Alex Levy wrote:
> 
> >it endlessly redirects, with my log files piling up with requests for 
> >http://mysite/////////////////////
> 
> !@#!@%$~!
> 
> I thought this was just spiv's bug, but I just had a look in 
> twisted.web.static.File.  When did it get this bad?  Is this my fault? 
> :-)  getChild() and render() are both _disasters_, which look like 
> they've been hacked on by in excess of 10 people who didn't really 
> understand what they're doing.  I can't immediately unravel it enough 
> to get a bugfix in, and there are no tests.

Actually, I think this is *still* my bug.  Tests would *really* help here ;)

I suspect this patch will fix it:

Index: twisted/web/static.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/static.py,v
retrieving revision 1.95
diff -u -r1.95 static.py
--- twisted/web/static.py       22 Jun 2003 01:01:57 -0000      1.95
+++ twisted/web/static.py       27 Jun 2003 00:26:38 -0000
@@ -288,7 +288,7 @@
         if path == '..':
             return error.NoResource("Invalid request URL.")
 
-        if path == '':
+        if path == '' and os.path.isfile(self.path):
             childPath = self.path
         else:
             childPath = os.path.join(self.path, path)

But I don't have time to test right at the moment.

On the weekend, if no-one else gets to it first, I'll probably have a look
at writing tests, and cleaning up static.File.  It does look rather messy.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 26 18:37:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 10:37:53 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030627002858.GA20956@frobozz>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com> <20030627002858.GA20956@frobozz>
Message-ID: <20030627003753.GB20956@frobozz>

On Fri, Jun 27, 2003 at 10:28:58AM +1000, Andrew Bennetts wrote:
> On Thu, Jun 26, 2003 at 02:58:32PM -0500, Glyph Lefkowitz wrote:
> > 
> > !@#!@%$~!
> > 
> > I thought this was just spiv's bug, but I just had a look in 
> > twisted.web.static.File.  When did it get this bad?  Is this my fault? 
> > :-)  getChild() and render() are both _disasters_, which look like 
> > they've been hacked on by in excess of 10 people who didn't really 
> > understand what they're doing.  I can't immediately unravel it enough 
> > to get a bugfix in, and there are no tests.
> 
> Actually, I think this is *still* my bug.  Tests would *really* help here ;)
> 
> I suspect this patch will fix it:

[snip]

Oh, I see glyph's already gone and fixed it properly, with tests :)

-Andrew.




From itamar at itamarst.org  Thu Jun 26 18:35:54 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 26 Jun 2003 20:35:54 -0400
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030627003753.GB20956@frobozz>
References: <20030626164556.GA2373@polynode.com>
	<904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com>
	<20030627002858.GA20956@frobozz>
	<20030627003753.GB20956@frobozz>
Message-ID: <20030626203554.34a3b7d8.itamar@itamarst.org>

On Fri, 27 Jun 2003 10:37:53 +1000
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Oh, I see glyph's already gone and fixed it properly, with tests :)

I think it could do with about 10 more tests.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Thu Jun 26 19:27:27 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 27 Jun 2003 11:27:27 +1000
Subject: [Twisted-Python] Broken Twisted on Debian/sarge
In-Reply-To: <20030626203554.34a3b7d8.itamar@itamarst.org>
References: <20030626164556.GA2373@polynode.com> <904DC2A2-A810-11D7-8924-000393C9700E@twistedmatrix.com> <20030627002858.GA20956@frobozz> <20030627003753.GB20956@frobozz> <20030626203554.34a3b7d8.itamar@itamarst.org>
Message-ID: <20030627012727.GC20956@frobozz>

On Thu, Jun 26, 2003 at 08:35:54PM -0400, Itamar Shtull-Trauring wrote:
> On Fri, 27 Jun 2003 10:37:53 +1000
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> > Oh, I see glyph's already gone and fixed it properly, with tests :)
> 
> I think it could do with about 10 more tests.

Yes -- I posted too soon (again!)... on closer examination, there's just one
new test method.

-Andrew.




From jml at ids.org.au  Fri Jun 27 07:28:08 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 27 Jun 2003 23:28:08 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
References: <20030626220543.GA18733@mumak.net> <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
Message-ID: <20030627132808.GC18733@mumak.net>

On Thu, Jun 26, 2003 at 10:48:31PM +1000, Richard Jones wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> On Friday, June 27, 2003, at 08:05  AM, Jonathan
> >No one has told me about Roundup, and it didn't stand out in any of my 
> >previous
> >investigations into bug trackers (some of which were more than 
> >cursory).
> >
> >I guess I'll have to investigate Roundup further.
> 
> I posted about developing a twisted frontend to Roundup a while ago, I 
> guess you a) weren't subscribed then or b) missed it :)
> 

Probably b), being a heartless b., I tend to skip through the "I'm using
twisted and I don't understand" posts (you know, the one's that would go to
twisted-user if there was such a thing). Invariably I miss a few important
ones.

Here comes the pseudo-intelligent, almost-thought-out response to compliments
yesterday's "oops" post.

I've had a brief look at Roundup and I agree that a Twisted frontend to it
would rock. However, Issues seems to have distinctly different design goals.

I wasn't joking when I said Issues was all about simplicity (at least, in these
first few releases). We've (the Issues dev team) been thinking about how to do
the simplest possible bugtrack, mostly without reference to existing
implementations (although we've looked at a lot of design docs).

The basic "workflow" is modelled on something between a two-player conversation
and a singles tennis match. The ball is in court A, court B, or the game is
over. That's it. 

However, Roundup is way more featureful than that. It has a guiding principle
of generality, which is far removed from Issues guiding principle of
simplicity. Which of course doesn't rule out the idea of me making Issues some
sort of Roundup plugin. It's certainly worth considering.

Roundup looks like it rocks, and it obviously kicks some design ass. However,
Issues (so far) is a mini experiment in how simple an issue-tracking workflow
can get. 

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030627/ae710b16/attachment.sig>

From golux at comcast.net  Thu Jun 26 20:10:06 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 26 Jun 2003 22:10:06 -0400
Subject: [Twisted-Python] Weird, apparently platform-dependent bug that hoses reactor
Message-ID: <3EFBA77E.1030604@comcast.net>

Help!

This is a bug that I discovered after I had just completed
a change of name for one of the packages in my app, from
"common" (bad name) to "enterprise" (sounds too broad
but is actually appropriate in this case).  Yes, I am
using t.enterprise modules (adbapi) and yes, I've made
sure that all our imports of that and of our module by that
name (pangalactic.enterprise :^) are fully-qualified.

The traceback we're getting is:

Traceback (most recent call last):
   File "test_pger_get.py", line 37, in ?
     reactor.run() # start the main loop
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 121, in run
     self.startRunning(installSignalHandlers=installSignalHandlers)
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 115, in startRunning
     self._handleSignals()
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 87, in _handleSignals
     signal.signal(signal.SIGINT, self.sigInt)
SystemError: error return without exception set

--------------------------------------------------------------

This is coming from a pretty simple test script that
initializes some things and does a reactor.run() and
prints the result or the error.

(There's too much context to include all the code in this
message, but I'll send it off-list to anyone who's
interested.)

The platform-dependent aspect is that we have run the
exact same code on Debian (unstable) have *not* seen
this traceback there.  We get the traceback on a
Red Hat 9 (2.4.20-18.9) machine.

Basically curious if anyone else has seen anything like
this.

(We are still in the process of trying to narrow the
differences between the code that ran -- before the
module name change [big time sed script job] and
after ... will post if we have a breakthrough.)

Thanks!
Steve




From itamar at itamarst.org  Thu Jun 26 20:12:28 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 26 Jun 2003 22:12:28 -0400
Subject: [Twisted-Python] Weird, apparently platform-dependent bug that
 hoses reactor
In-Reply-To: <3EFBA77E.1030604@comcast.net>
References: <3EFBA77E.1030604@comcast.net>
Message-ID: <20030626221228.13f6ff0a.itamar@itamarst.org>

On Thu, 26 Jun 2003 22:10:06 -0400
Steve Waterbury <golux at comcast.net> wrote:

> The platform-dependent aspect is that we have run the
> exact same code on Debian (unstable) have *not* seen
> this traceback there.  We get the traceback on a
> Red Hat 9 (2.4.20-18.9) machine.

We had one other report, Redhat 7.3.

Are you using Redhat Python RPMs? Can you reproduce the bug without
depending on Twisted? If doing signal.signal(...etc..) by itself causes
this problem, it's obviously not a Twisted problem.

Are you doing reactor.run() in a thread?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From wari at home.wari.org  Fri Jun 27 03:06:45 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 11:06:45 +0200
Subject: [Twisted-Python] flow threading fix (hopeful...)
In-Reply-To: <E19Vi4h-000292-00@pyramid.twistedmatrix.com>
References: <E19Vi4h-000292-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC0925.4080308@home.wari.org>

cce CVS wrote:

>Log message:
>threading fix (hopeful...)
>  
>
I had to do a `kill -9` for this test, no other forms of murder works.




From missive at hotmail.com  Thu Jun 26 21:05:31 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 27 Jun 2003 03:05:31 +0000
Subject: [Twisted-Python] PATCH: doc/howto/flow.py   two typos
Message-ID: <BAY2-F99xo6AmX3qrB000000764@hotmail.com>

>cvs diff -u doc/howto/flow.html
Index: doc/howto/flow.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/flow.html,v
retrieving revision 1.3
diff -u -r1.3 flow.html
--- doc/howto/flow.html 26 Jun 2003 09:26:15 -0000      1.3
+++ doc/howto/flow.html 27 Jun 2003 02:59:41 -0000
@@ -14,7 +14,7 @@

<h3>Handling more than one Request</h3>

-<p>When creating services to handle simoutaneous requests, processing state
+<p>When creating services to handle simultaneous requests, processing state
must be managed.  A common approach, threading, applies the method used
for single user operations:  keeping processing state within local variables
and function arguments.  In this case, the operating environment handles
@@ -62,7 +62,7 @@
are done in a parallel, cooperative manner.   While this is a good start,
it isn't perfect as the event loop is stopped with a hard-coded timeout.
It would be better for each Request object to signal when it is completed
-so that the event loop can be shuot down sooner.</p>
+so that the event loop can be shut down sooner.</p>

<h3>Deferred Callbacks</h3>

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From golux at comcast.net  Thu Jun 26 21:57:23 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 26 Jun 2003 23:57:23 -0400
Subject: [Twisted-Python] Weird,
 apparently platform-dependent bug that hoses reactor
In-Reply-To: <20030626221228.13f6ff0a.itamar@itamarst.org>
References: <3EFBA77E.1030604@comcast.net>
 <20030626221228.13f6ff0a.itamar@itamarst.org>
Message-ID: <3EFBC0A3.2020901@comcast.net>

Itamar Shtull-Trauring wrote:
> On Thu, 26 Jun 2003 22:10:06 -0400
> Steve Waterbury <golux at comcast.net> wrote:
> 
>>The platform-dependent aspect is that we have run the
>>exact same code on Debian (unstable) have *not* seen
>>this traceback there.  We get the traceback on a
>>Red Hat 9 (2.4.20-18.9) machine.
> 
> We had one other report, Redhat 7.3.

Aha.  I wonder what version of Python.

> Are you using Redhat Python RPMs? 

Sort of -- not the one that comes with the RH distro, but this
one from python.org:

python-2.2.3-26.src.rpm (Red Hat 9 updated Source RPM, 7007263 bytes)

> Can you reproduce the bug without
> depending on Twisted? If doing signal.signal(...etc..) by itself causes
> this problem, it's obviously not a Twisted problem.

signal.signal by itself seems to be okay:

[waterbug at golux test]$ python
Python 2.2.3 (#1, Jun 25 2003, 22:41:47)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
 >>> import signal
 >>> signal.signal(signal.SIGINT, signal.SIG_DFL)
<built-in function default_int_handler>
 >>>

> Are you doing reactor.run() in a thread

Nope, not invoking any threads at all in my code.

Thanks for the suggestions, Itamar.

Cheers,
Steve.




From richard at commonground.com.au  Fri Jun 27 00:37:50 2003
From: richard at commonground.com.au (Richard Jones)
Date: Fri, 27 Jun 2003 16:37:50 +1000
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030627132808.GC18733@mumak.net>
Message-ID: <DFC2E5B3-A869-11D7-BFDB-000393D560FC@commonground.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Friday, June 27, 2003, at 11:28  PM, Jonathan Lange wrote:
> The basic "workflow" is modelled on something between a two-player 
> conversation
> and a singles tennis match. The ball is in court A, court B, or the 
> game is
> over. That's it.
>
> However, Roundup is way more featureful than that. It has a guiding 
> principle
> of generality, which is far removed from Issues guiding principle of
> simplicity. Which of course doesn't rule out the idea of me making 
> Issues some
> sort of Roundup plugin. It's certainly worth considering.

That's not necessarily true. The Roundup default tracker schema (see 
the online demo or the "instant gratification" python demo.py when you 
download the source) aims for simplicity. One of the implementation 
goals is flexibility of schema and workflow, which is what you get when 
you delve under the covers to make the tracker work just the way you 
wish it to. The ball game workflow you describe above (if I follow it 
correctly) could trivially be implemented in Roundup with the simple 
addition of some reactor code (which may be what you're referring to by 
the term "plugin" :)


> Roundup looks like it rocks, and it obviously kicks some design ass. 
> However,
> Issues (so far) is a mini experiment in how simple an issue-tracking 
> workflow
> can get.

Fair enough. I'd just hate to see effort wasted on developing Yet 
Another Tracker just to fit the Twisted framework - when I believe that 
it'd be such a simple job getting Roundup running in that framework. 
Roundup's development has been going for two years now (and it seemed 
like it'd be such a quick-n-simple job when I started - there always 
seems to be some new feature that's really cool and just has to be 
implemented ;)

One of these days, I might find some spare time to actually do the job 
myself, but don't hold your breath :)


     Richard
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+++ZFrGisBEHG6TARAmDkAJ9HxgopsemztL84e4PWNdCHw335MACfS/eG
GImWfhu5/NoeeyBFdUvc9o0=
=3MT2
-----END PGP SIGNATURE-----




From lafou at wanadoo.fr  Fri Jun 27 01:26:59 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 27 Jun 2003 09:26:59 +0200
Subject: [Twisted-Python] Issues 0.1 alpha release
In-Reply-To: <20030627132808.GC18733@mumak.net>
References: <20030626220543.GA18733@mumak.net>
	 <7DFE7E7E-A7D4-11D7-9500-000393D560FC@commonground.com.au>
	 <20030627132808.GC18733@mumak.net>
Message-ID: <1056698819.2442.0.camel@biproc>

> Probably b), being a heartless b., I tend to skip through the "I'm using
> twisted and I don't understand" posts (you know, the one's that would go to
> twisted-user if there was such a thing). Invariably I miss a few important
> ones.


I proposed a few weeks ago to create a web forum such as forums.gentoo.org, but every body
here said that the mailing is doing its job quite well :-(




From wari at home.wari.org  Fri Jun 27 02:50:16 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 10:50:16 +0200
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC0548.20803@home.wari.org>

cce CVS wrote:

>Modified files:
>Twisted/twisted/flow/threads.py 1.3 1.4
>  
>
It seems that flows testing can pass 1% of the time and most of the 
time, it'll stop on testThreaded, as seen in the screen dump below:

    testProtocol 
...                                                       [OK]
    testProtocolLocalhost 
...                                              [OK]
    testThreaded 
...                                                       [OK]
    testThreadedSleep 
...                                                  [OK]
    testThreadedYield 
...                                                  [OK]
    testZip 
...                                                            [OK]
    testZipFailure 
...                                                     [OK]

-------------------------------------------------------------------------------
Ran 26 tests in 2.927s

OK
[wari at sync wari]$ trial -v twisted.test.test_flow
twisted.test.test_flow
  FlowTest
    testBasic 
...                                                          [OK]
[..snip..]
    testProtocolLocalhost 
...                                              [OK]
    testThreaded ...

 From here, I tried doing strace on the process and just got this:
gettimeofday({1056703375, 307699}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 308951}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 310242}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 311093}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 311504}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 312164}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 312646}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 313504}, NULL) = 0
select(8, [4 7], [], [], {0, 0})        = 0 (Timeout)
gettimeofday({1056703375, 313888}, NULL) = 0
select(8, [4 7], [], [], {0, 0} <unfinished ...>
[wari at sync wari]$

Infinitely, of course.. Have not really gone thru the code at all, but 
anyway, my machine specs are the typical ones you get from 
johncompanies.com, Redhat 8.0, python 2.2.1, dual CPU and 2GB of RAM.




From wari at home.wari.org  Fri Jun 27 02:52:54 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 10:52:54 +0200
Subject: [Twisted-Python] more on flow testThreaded
In-Reply-To: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com>
Message-ID: <3EFC05E6.90008@home.wari.org>

cce CVS wrote:

>Modified files:
>Twisted/twisted/flow/threads.py 1.3 1.4
>
One more thing, here's a traceback (when pressing CTRL-C), hope it helps.

    testThreaded ... Traceback (most recent call last):
  File "/usr/bin/trial", line 35, in ?
    run()
  File "/usr/lib/python2.2/site-packages/twisted/scripts/trial.py", line 
311, in run
    suite.run(reporter, config['random'])
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 313, in run
    test.runTests(output)
  File "/usr/lib/python2.2/site-packages/twisted/trial/runner.py", line 
110, in runTests
    method, self.runTest).run()
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 209, in run
    self.setUp_and_test()
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 184, in setUp_and_test
    def setUp_and_test(self): self._runPhase(self._main)
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 160, in _runPhase
    stage(*args, **kwargs)
  File "/usr/lib/python2.2/site-packages/twisted/trial/unittest.py", 
line 182, in _main
    self.runner(self.method)
  File "/usr/lib/python2.2/site-packages/twisted/trial/runner.py", line 
100, in runTest
    method()
  File "/usr/lib/python2.2/site-packages/twisted/test/test_flow.py", 
line 401, in testThreaded
    self.assertEquals(result, unittest.deferredResult(d))
  File "/usr/lib/python2.2/site-packages/twisted/trial/util.py", line 
70, in deferredResult
    result = _getDeferredResult(d, timeout)
  File "/usr/lib/python2.2/site-packages/twisted/trial/util.py", line 
63, in _getDeferredResult
    reactor.iterate()
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 
257, in iterate
    self.doIteration(delay)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", 
line 436, in doSelect
    [], timeout)




From egor at iplus.ru  Fri Jun 27 03:40:32 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Fri, 27 Jun 2003 13:40:32 +0400
Subject: [Twisted-Python] blocking code in object constructors
Message-ID: <200306271340.32390.egor@iplus.ru>

Hi,
I need to do some blocking stuff in object constructor. However constructors 
can't return deferreds. The solution I see is to put all blocking 
initialization to some method and use factory to generate objects. Factory 
will return deferred wich will be called back when object initialization is 
complete. Is there Twisted Standard way to do such things?

-- 
Egor Cheshkov 





From smurf at smurf.noris.de  Fri Jun 27 04:20:17 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 12:20:17 +0200
Subject: [Twisted-Python] flow testThreaded thingy
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org>
Message-ID: <pan.2003.06.27.10.20.17.5421@smurf.noris.de>

Hi, Wari Wahab wrote:

>  I tried doing strace on the process and just got this:

You can't strace a threaded process, at least not the main thread.

This seems to be exactly the sort of almost-intractable timing-dependent
problem which gives threading in general a well-deserved reputation for
bugginess.  :-/

I'll have a chance to dig around in flow+threading over the weekend.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:kgbvax: /K-G-B'vaks/ n. See {kremvax}.




From wari at home.wari.org  Fri Jun 27 05:21:27 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 27 Jun 2003 13:21:27 +0200
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <pan.2003.06.27.10.20.17.5421@smurf.noris.de>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de>
Message-ID: <3EFC28B7.4070807@home.wari.org>

Matthias Urlichs wrote:

>> I tried doing strace on the process and just got this:
>>    
>>
>This seems to be exactly the sort of almost-intractable timing-dependent
>problem which gives threading in general a well-deserved reputation for
>bugginess.  :-/
>
>I'll have a chance to dig around in flow+threading over the weekend.
>
Oh btw, before you do more digging, I've tested the testThreaded thing 
again on a single CPU machine, and the result is pass everytime. I think 
this is more of a dual CPU issue, where out of ten times I runned 
twisted.test.test_flow, only one time it passes, and the rest of the 
test hangs on testThreaded.

Also, the test passes everytime if I do 'trial -v 
twisted.test.test_flow.FlowTest.testThreaded' on the dual CPU. So I 
think that the other tests can affect the successful running of 
testThreaded.




From smurf at smurf.noris.de  Fri Jun 27 06:30:30 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 14:30:30 +0200
Subject: [Twisted-Python] Patch for twisted.protocols.nntp
References: <200306221714.24485@smurf.noris.de> <20030624201503.GA22074@meson.dyndns.org>
Message-ID: <pan.2003.06.27.12.30.30.91174@smurf.noris.de>

Hi, Jp Calderone wrote:

>   I think this patch is against a version of nntp.py that I don't have. 
> Could you make sure it is against current CVS, or at least a previously
> released version (I'm quite certain we've never had 1.0.5smurf-6)

Sorry about that.

I'll merge up to current CVS and then send you a complete patch directly.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
If the shoe fits, it's ugly.




From tv at twistedmatrix.com  Fri Jun 27 06:17:21 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 27 Jun 2003 15:17:21 +0300
Subject: [Twisted-Python] blocking code in object constructors
In-Reply-To: <200306271340.32390.egor@iplus.ru>
References: <200306271340.32390.egor@iplus.ru>
Message-ID: <20030627121721.GA16292@lapdog>

On Fri, Jun 27, 2003 at 01:40:32PM +0400, Egor Cheshkov wrote:
> I need to do some blocking stuff in object constructor. However constructors 
> can't return deferreds. The solution I see is to put all blocking 
> initialization to some method and use factory to generate objects. Factory 
> will return deferred wich will be called back when object initialization is 
> complete. Is there Twisted Standard way to do such things?

	Not that I know of, but it's dead simple.

	Of course, first you have to replace all that blocking stuff.
	Deferred doesn't make it ok for you to block; it makes it ok
	for async things to complete later.

class ThingieThatUsedToBlock:
    def __init__(self, foo, bar):
	# don't block or even do the async thing here
	pass

    def setUp(self):
	# don't block here, but do start the async init.
	deferred = startTheAsyncThingie()
	deferred.addCallback(lambda _: self)
	return deferred

def createThingie(*a, **kw):
    t = ThingieThatUsedToBlock(*a, **kw)
    d = t.setUp()
    return d

-- 
:(){ :|:&};:



From smurf at smurf.noris.de  Fri Jun 27 09:49:29 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 27 Jun 2003 17:49:29 +0200
Subject: [Twisted-Python] flow testThreaded thingy
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de> <3EFC28B7.4070807@home.wari.org>
Message-ID: <pan.2003.06.27.15.49.29.661761@smurf.noris.de>

Hi, Wari Wahab wrote:

> Oh btw, before you do more digging, I've tested the testThreaded thing 
> again on a single CPU machine, and the result is pass everytime.

Thanks for the additional info. I do have a dual-CPU system and some
experience with threaded programs (Python and otherwise), so maybe I'll
get lucky.

Then again, this weekend is forecast to have much too good weather to sit
in front of a computer the whole time. We'll see. ;-)

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Smile! You're on Candid Cookie!




From cce at clarkevans.com  Fri Jun 27 11:42:09 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 27 Jun 2003 17:42:09 +0000
Subject: [Twisted-Python] flow testThreaded thingy
In-Reply-To: <3EFC28B7.4070807@home.wari.org>
References: <E19Voep-0004eX-00@pyramid.twistedmatrix.com> <3EFC0548.20803@home.wari.org> <pan.2003.06.27.10.20.17.5421@smurf.noris.de> <3EFC28B7.4070807@home.wari.org>
Message-ID: <20030627174209.GA66859@doublegemini.com>

On Fri, Jun 27, 2003 at 01:21:27PM +0200, Wari Wahab wrote:
| Matthias Urlichs wrote:
| >This seems to be exactly the sort of almost-intractable timing-dependent
| >problem which gives threading in general a well-deserved reputation for
| >bugginess.  :-/
|  
| Oh btw, before you do more digging, I've tested the testThreaded thing 
| again on a single CPU machine, and the result is pass everytime. I think 
| this is more of a dual CPU issue, where out of ten times I runned 
| twisted.test.test_flow, only one time it passes, and the rest of the 
| test hangs on testThreaded.

This could explain why it is a bit harder to produce.  Anyway, I 
re-thought the logic and the current CVS version should be much
cleaner, as I'm more careful about modifying shared variables only
in the main thread (split process in two, one chunk per thread)

Could you give it one more round-about?

Best,

Clark



From mesozoic at polynode.com  Fri Jun 27 14:28:50 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Fri, 27 Jun 2003 16:28:50 -0400
Subject: [Twisted-Python] t.w.microdom and empty HTML elements
Message-ID: <20030627202850.GA3488@polynode.com>

While looking into a problem where my pages were showing up blank on IE,
Moonfallen pointed me to the NEVERSINGLETON list in t.w.microdom.toxml().
There is a list of elements which should never be rendered as <node/>, and
instead should always be <node></node>.

Upon looking through the specs for XHTML at w3c.org, however, I found that
the _only_ XHTML elements which are allowed as singletons are those whose
content models are "EMPTY" -- <br/>, <hr/>, and so on.  The list of EMPTY
elements is not huge.

I understand the issue that microdom cannot get bogged down with HTML
tweaks; it is, after all, supposed to produce XML.  But it seems like
t.w.microdom shouldn't be spitting out invalid XHTML, even if (for now) it
doesn't look like it breaks anyone's browser.

As I understand it there is no real difference in XML between <node/> and
<node></node>.  Given that, wouldn't it be better for toxml() to use an
ALLOWSINGLETON list instead of NEVERSINGLETON?  That is, unless an element
is explicitly allowed to be <foo/>, it would be <foo></foo>?

If this is of interest to anyone, below is a diff that implements this; the
list of elements is from the XHTML 1.0 DTD.  I haven't tested it, so someone
else will have to do that, but it works on my page.


Index: twisted/web/microdom.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/microdom.py,v
retrieving revision 1.93
diff -u -r1.93 microdom.py
--- twisted/web/microdom.py	27 Jun 2003 19:10:35 -0000	1.93
+++ twisted/web/microdom.py	27 Jun 2003 20:16:17 -0000
@@ -449,8 +449,9 @@
 
     def writexml(self, stream, indent='', addindent='', newl='', strip=0):
         # write beginning
-        NEVERSINGLETON = ('a', 'li', 'div', 'span', 'title', 'script',
-                          'textarea', 'select', 'style')
+        ALLOWSINGLETON = ('img', 'br', 'hr', 'base', 'meta', 'link', 'param',
+                          'area', 'input', 'col', 'basefont', 'isindex',
+                          'frame')
         # this should never be necessary unless people start
         # changing .tagName on the fly(?)
         if not self.preserveCase:
@@ -468,7 +469,7 @@
             for child in self.childNodes:
                 child.writexml(stream, newindent, addindent, newl, strip)
             w(j((newl, indent, "</", self.endTagName, '>')))
-        elif self.tagName.lower() in NEVERSINGLETON:
+        elif self.tagName.lower() not in ALLOWSINGLETON:
             w(j(('></', self.endTagName, '>')))
         else:
             w(" />")


-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From Martin.Moellenbeck at t-online.de  Fri Jun 27 14:41:47 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Fri, 27 Jun 2003 22:41:47 +0200
Subject: [Twisted-Python] Some Question about on woven and rpy/page.Page
Message-ID: <000801c33cec$87b26630$0400a8c0@joshua>

Hello,

I have setup a simple web-server (see the files attached).

When I comment out the render-method of MyPage (start.rpy), I get
this output:
<snip>
Some stuff goes here-
this is the 'submit not in request.args'
Some more stuff goes here.
this is the None
</snip>

It seems the request parameter 'submit' are not set.

If I comment in the render-method of MyPage, I get this output:
<snip>
send via submit
<snip>

When I have a look to the request, it seems that the first request 
(with the correct parameter, return with 302) and then a second 
request will be done with 200.

Have anybody an answer for me ;-)

Martin

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_web.py
URL: </pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment.ksh>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: start.rpy
Type: application/octet-stream
Size: 1308 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030627/edc4c2f1/attachment-0002.obj>

From missive at hotmail.com  Fri Jun 27 16:47:59 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 27 Jun 2003 22:47:59 +0000
Subject: [Twisted-Python] PATCH: twisted/coil/plugins/portforward.py  docstring
Message-ID: <BAY2-F68uktJ3GOeym800005778@hotmail.com>

>cvs diff -u twisted/coil/plugins/portforward.py
Index: twisted/coil/plugins/portforward.py
===================================================================
RCS file: /cvs/Twisted/twisted/coil/plugins/portforward.py,v
retrieving revision 1.2
diff -u -r1.2 portforward.py
--- twisted/coil/plugins/portforward.py 5 Jun 2002 22:24:16 -0000       1.2
+++ twisted/coil/plugins/portforward.py 27 Jun 2003 22:36:28 -0000
@@ -14,7 +14,7 @@
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-"""Coil plugin for telnet shell."""
+"""Coil plugin for port forwarding."""

# Twisted Imports
from twisted.coil import coil

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From dp at twistedmatrix.com  Fri Jun 27 21:13:00 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 27 Jun 2003 20:13:00 -0700
Subject: [Twisted-Python] Some Question about on woven and rpy/page.Page
In-Reply-To: <000801c33cec$87b26630$0400a8c0@joshua>
References: <000801c33cec$87b26630$0400a8c0@joshua>
Message-ID: <6C4AA9DA-A916-11D7-9236-000A95864FC4@twistedmatrix.com>

(Snip Martin having a problem with arguments not being in the request)

Change:

<form action="start.rpy">

To:

<form action="start.rpy/">

Woven automatically adds a slash to the end of urls which are rendered 
by Page instances. This is to make writing relative links easier, by 
ensuring consistent behavior. It does this by performing a redirect, 
which loses the request arguments, because it causes the browser to 
perform another request.

If you don't like this, and would prefer your urls to remain 
trailing-slashless, add the following attribute to your Page subclass:

class MyPage(page.Page):
	addSlash = False

Hope that helps.
dp




From Martin.Moellenbeck at t-online.de  Sat Jun 28 09:33:17 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Sat, 28 Jun 2003 17:33:17 +0200
Subject: AW: [Twisted-Python] Some Question about on woven and rpy/page.Page
In-Reply-To: <6C4AA9DA-A916-11D7-9236-000A95864FC4@twistedmatrix.com>
Message-ID: <000301c33d8a$9945b750$0400a8c0@joshua>

Hi Donovan,

this was the right answer, it's the way.

Thanks a lot.

Martin

-----Ursprüngliche Nachricht-----
Von: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag von Donovan
Preston
Gesendet: Samstag, 28. Juni 2003 05:13
An: twisted-python at twistedmatrix.com
Betreff: Re: [Twisted-Python] Some Question about on woven and
rpy/page.Page


(Snip Martin having a problem with arguments not being in the request)

Change:

<form action="start.rpy">

To:

<form action="start.rpy/">

Woven automatically adds a slash to the end of urls which are rendered 
by Page instances. This is to make writing relative links easier, by 
ensuring consistent behavior. It does this by performing a redirect, 
which loses the request arguments, because it causes the browser to 
perform another request.

If you don't like this, and would prefer your urls to remain 
trailing-slashless, add the following attribute to your Page subclass:

class MyPage(page.Page):
	addSlash = False

Hope that helps.
dp


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dp at twistedmatrix.com  Sat Jun 28 12:49:42 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 28 Jun 2003 11:49:42 -0700
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
Message-ID: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>

Just thought I'd let people know I posted a fairly long piece about the 
problems inherent with creating URLs in Twisted Web, and a hopeful 
solution:

http://www.ulaluma.com/pyx/archives/000581.html

BTW, if anyone has a better moveabletype template, or a good Blog 
written in Python (and twisted? :) I would like to expend as little 
energy as possible with perl-related software but still have a nice 
Blog...

dp




From itamar at itamarst.org  Sat Jun 28 16:18:19 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 18:18:19 -0400
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
Message-ID: <20030628181819.2f130867.itamar@itamarst.org>

On Sat, 28 Jun 2003 11:49:42 -0700
Donovan Preston <dp at twistedmatrix.com> wrote:

> Just thought I'd let people know I posted a fairly long piece about
> the problems inherent with creating URLs in Twisted Web, and a hopeful
> 
> solution:

One way to do reverse proxying that works correctly is to use what Zope
calls VirtualHostMonster - you pass the real domain and path as part of
a rewritten Zope server and it extracts them and mangles the reqyest
correctly.

Twisted currently supports this for domains (though not paths, the code
needs to be extended) using some code which is in twisted.web.vhost
IIRC. twisted-web does this out of the box, so you can do:

<VirtualHost 1.2.3.4>
ServerName www.example.com
ProxyPass / http://localhost:8234/vhost/http/www.example.com:80/
</VirtualHost>

in apache, which will forward requests to the twisted-web server and
DTRT regarding the request generated URLs.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From abe at fettig.net  Sat Jun 28 17:45:12 2003
From: abe at fettig.net (Abe Fettig)
Date: 28 Jun 2003 19:45:12 -0400
Subject: [Twisted-Python] MailboxError in imap4.py
Message-ID: <1056843911.609.12.camel@mingus>

There's a number of places in twisted/protocols/imap4.py where code
makes reference to MailboxError - if I'm not mistaken it's supposed to
be MailboxException.

trivial patch attached.

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: imap.patch
Type: text/x-patch
Size: 1255 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030628/f6ef296f/attachment-0002.bin>

From dp at twistedmatrix.com  Sat Jun 28 18:03:59 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 28 Jun 2003 17:03:59 -0700
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <20030628181819.2f130867.itamar@itamarst.org>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com> <20030628181819.2f130867.itamar@itamarst.org>
Message-ID: <2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>

On Saturday, June 28, 2003, at 3:18PM, Itamar Shtull-Trauring wrote:
>
> One way to do reverse proxying that works correctly is to use what Zope
> calls VirtualHostMonster - you pass the real domain and path as part of
> a rewritten Zope server and it extracts them and mangles the reqyest
> correctly.

> Twisted currently supports this for domains (though not paths, the code
> needs to be extended) using some code which is in twisted.web.vhost
> IIRC. twisted-web does this out of the box, so you can do:

<snip>

Yes, I am aware of twisted.web.vhost and this is simply a slight 
variation on the ProxyPass method I was discussing in my post. I am 
suggesting that whatever code in Twisted which is responsible for 
generating URLPath instances (a method on the request, perhaps) be 
aware of this and handle it properly, isolating the Woven programmer 
from the details of the configuration of the web server.

Incidentally, if Apache sets the x-forwarded-host header upon 
requesting the page from the proxy, why is it necessary to pass this 
information on to the proxy as a part of the url?

dp




From warner at lothar.com  Sat Jun 28 19:20:34 2003
From: warner at lothar.com (Brian Warner)
Date: Sat, 28 Jun 2003 18:20:34 -0700 (PDT)
Subject: [Twisted-Python] PATCH: twisted/coil/plugins/portforward.py 
 docstring
References: <BAY2-F68uktJ3GOeym800005778@hotmail.com>
Message-ID: <20030628.182034.129552457.warner@lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> -"""Coil plugin for telnet shell."""
> +"""Coil plugin for port forwarding."""

Committed. Also be aware that coil is begging to be rewritten and there's
been talk about not even including it in the release until it shapes up.

thanks,
 -Brian



From itamar at itamarst.org  Sat Jun 28 20:33:42 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 22:33:42 -0400
Subject: [Twisted-Python] Ramblings about creating URLs in Twisted Web
In-Reply-To: <2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>
References: <477EE365-A999-11D7-B7B9-000A95864FC4@twistedmatrix.com>
	<20030628181819.2f130867.itamar@itamarst.org>
	<2F0ADB82-A9C5-11D7-8C39-000A95864FC4@twistedmatrix.com>
Message-ID: <20030628223342.7055d4f4.itamar@itamarst.org>

On Sat, 28 Jun 2003 17:03:59 -0700
Donovan Preston <dp at twistedmatrix.com> wrote:

> Incidentally, if Apache sets the x-forwarded-host header upon 
> requesting the page from the proxy, why is it necessary to pass this 
> information on to the proxy as a part of the url?

Because that's just the host, not the path, i.e. what if you're
proxyhosting not www.example.com but www.example.com/foo?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sat Jun 28 21:58:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2003 23:58:14 -0400
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
Message-ID: <20030628235814.41d95bdc.itamar@itamarst.org>

   IMPORTANT: This release includes security updates to twisted.web.
   It is strongly recommended that you upgrade to this version of
   Twisted.

Twisted is an event-driven networking framework for server and client
applications.

For more information, visit http://www.twistedmatrix.com, join the list
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python or
visit us on #twisted at irc.freenode.net.


What's New in 1.0.6
===================

- Security fixes for twisted.web.

- Cred, Twisted's unified authentication and authorization framework,
was rewritten. While still not stable, the new system is far superior
and developers are encouraged to start using it.

- Flow, an utility page for integrating asynchronous control flow with
generators and iterators.

- Many improvements to the UDP subsystem.

- Many Windows-specific networking bug fixes.

- Cleanups in Woven - outputted HTML no longer includes attributes used
by templating, removed fake-acquisition for templates.

- Support switching over to TLS from TCP connections (useful for e.g.
STARTTLS in SMTP.)

- Improvements to the mail protocols and infrastructure.

- Fixed 2.2.0 compatibility.

- Index support for Lore.

- Bug fixes, documentation updates and small feature improvements.




From 2002 at weholt.org  Sun Jun 29 16:39:11 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 30 Jun 2003 00:39:11 +0200
Subject: [Twisted-Python] Keeping the same design sitewide?
Message-ID: <007701c33e8f$45061da0$0401a8c0@razor>

Hi,

I was wondering how I can use Woven and keep the overall "sceleton" of my
design in one file and wrap that around my templates at run-time? I mean, I
want to create one page which links to my stylesheet, displays a logo, some
header-text and a footer that will be the same site wide, and then just glue
what the different pages generate into the sceleton-file.

Any clues on how to keep the design in one file and still use Woven?

Thomas




From mmoellenbeck at plus.de  Mon Jun 30 02:35:31 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Mon, 30 Jun 2003 10:35:31 +0200
Subject: Antwort: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
Message-ID: <OF02CC66BD.6FF2A0CA-ONC1256D55.002EFE7D@uz.tengelmann.de>

Hi,

Thanks for the 1.0.6 release, but the windows-binary includes the docs 
twice. The download is about 10 MB large.

regards

Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030630/d8906c25/attachment.html>

From abe at fettig.net  Mon Jun 30 08:19:21 2003
From: abe at fettig.net (Abe Fettig)
Date: 30 Jun 2003 10:19:21 -0400
Subject: [Twisted-Python] PATCH: imap4.py: fix when calling splitQuoted on empty string
Message-ID: <1056982761.1533.12.camel@mingus>

To get a list of all folders, Evolution's IMAP client uses this syntax:

LIST "" ""

This results in an error, since the "" "" part goes through splitQuoted
twice (once in IMAP4Server.listWork, the second in
IMAP4Server._parseMbox).  The second time through the quotes have been
removed (leaving an empty string), which causes splitQuoted to return []
instead of [''].

I've attached a simple patch that demonstrates one possible way to fix
the problem.

Abe

-------------- next part --------------
--- imap4.py-cvs	2003-06-30 10:05:03.000000000 -0400
+++ imap4.py	2003-06-30 09:54:49.000000000 -0400
@@ -2547,6 +2547,8 @@
     @raise MismatchedQuoting: Raised if an odd number of quotes are present
     """
     s = s.strip()
+    if s == '': return ['']
+
     result = []
     inQuote = inWord = start = 0
     for (i, c) in zip(range(len(s)), s):

From lists at ghaering.de  Mon Jun 30 08:27:05 2003
From: lists at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Mon, 30 Jun 2003 16:27:05 +0200
Subject: [Twisted-Python] Getting mails from list twice
Message-ID: <3F0048B9.60909@ghaering.de>

I'm lately getting all mail from the Twisted mailing list twice. Am I 
the only one experiencing this?

-- Gerhard



From glyph at twistedmatrix.com  Mon Jun 30 08:48:21 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jun 2003 09:48:21 -0500
Subject: [Twisted-Python] Big Shot
Message-ID: <E4F46FD6-AB09-11D7-A92B-000393C9700E@twistedmatrix.com>

Amir Bakhtiar, international man of mystery, has authorized me to offer 
a $100 bounty on a feature for Twisted.  We need a performance testing 
and regression tool.  Some parameters on its functionality: it has to 
have a graphical display of performance history.  It should be able to 
show at least three parameters: wall clock time, memory usage, and CPU 
usage.  The more, the better.  It should be able to rapidly show a 
developer the impact of a particular change on a performance metric.  
It will have to have at least a little integration with divmod and/or 
trial so that it can be run with the rest of the tests to produce a 
graph of where various bits of performance are going.  Last but not 
least, it would be _really_ nice if it included some actually 
meaningful metrics, like "HTTP requests per second", "IRC messages per 
second", "PB bytes per message".  One that I would personally really 
like to see is "reactor responsiveness" parameterized by various kinds 
of load.

I've written a little sketch which may give you some ideas in 
sandbox/timings.py.  Only one bounty is being offered, so if you're 
thinking about working on this, please discuss your intentions here!  
If two folks work together, you're welcome to split it, but if we get 
multiple implementations, only the "winner" (the one accepted for 
inclusion in Twisted) gets it.

So Long Space Cowboy...




From andrew-twisted at puzzling.org  Mon Jun 30 08:49:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Jul 2003 00:49:39 +1000
Subject: [Twisted-Python] Getting mails from list twice
In-Reply-To: <3F0048B9.60909@ghaering.de>
References: <3F0048B9.60909@ghaering.de>
Message-ID: <20030630144939.GA17479@frobozz>

On Mon, Jun 30, 2003 at 04:27:05PM +0200, Gerhard H?ring wrote:
> I'm lately getting all mail from the Twisted mailing list twice. Am I 
> the only one experiencing this?

It all looks fine to me.

-Andrew.




From gh at ghaering.de  Mon Jun 30 09:42:15 2003
From: gh at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Mon, 30 Jun 2003 17:42:15 +0200
Subject: [Twisted-Python] Getting mails from list twice
In-Reply-To: <20030630144939.GA17479@frobozz>
References: <3F0048B9.60909@ghaering.de> <20030630144939.GA17479@frobozz>
Message-ID: <3F005A57.9080709@ghaering.de>

Andrew Bennetts wrote:
> On Mon, Jun 30, 2003 at 04:27:05PM +0200, Gerhard Häring wrote:
> 
>>I'm lately getting all mail from the Twisted mailing list twice. Am I 
>>the only one experiencing this?
> 
> It all looks fine to me.

Ah. I'm subscribed under two addresses, but had disabled mail delivery 
for one. Looks like this option got reset in Mailman somehow. I changed 
that back and everything's back to normal now.

-- Gerhard



From domma at procoders.net  Mon Jun 30 09:45:22 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Mon, 30 Jun 2003 17:45:22 +0200
Subject: [Twisted-Python] map Url to function
Message-ID: <FCEMIEFBFOIDAOJDEPIAGEDDFKAA.domma@procoders.net>

Hi,

I started playing around with twisted.web and want to map the Url to
function calls with parameters. For example

http://myserver.net/mainhandler/somefkt/parama/paramb

should be call some 'mainhandler'. This should be a script which gets
'/somefkt/parama/paramb' and knows what to do with it. What's the easiest
way to do this?

regards,
Achim




From mario at ruggier.org  Mon Jun 30 10:21:47 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 30 Jun 2003 18:21:47 +0200
Subject: [Twisted-Python] map Url to function
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAGEDDFKAA.domma@procoders.net>
Message-ID: <F2484BBB-AB16-11D7-880F-000393756786@ruggier.org>

You may use getChild() on each child to traverse down the URL path
(and doing whatever you want at each step) or, if as you say you want
to make mainhandler just treat the rest of the url path as parameter
data, then you can declare your resource as a leaf, as below (this
just prints the dict of the request -- in particular look at the values
for path, prepath & postpath). But see also the web howto's.

## reqdict.rpy (mainhandler)

from twisted.web import resource

def prettyDict(name,d):
     s = []
     s.append('<table width="100%" border="0">')
     s.append('<tr><th align="left" colspan="2">'+name+'</th></tr>')
     for key in d.keys():
         s.append('<tr>')
         s.append('<td width="25%">' +key+ 
'</td><td>'+str(d[key])+'</td>')
         s.append('</tr>')
     s.append('<tr>')
     s.append('</tr>')
     s.append('</table>')
     return '\n'.join(s)

class TestResource(resource.Resource):
     isLeaf = 1
     def render(self, request):
         return prettyDict('request', request.__dict__ )

resource = TestResource()
##

Cheers, mario


On lundi, juin 30, 2003, at 17:45 Europe/Amsterdam, Achim Domma 
((ProCoders)) wrote:

> Hi,
>
> I started playing around with twisted.web and want to map the Url to
> function calls with parameters. For example
>
> http://myserver.net/mainhandler/somefkt/parama/paramb
>
> should be call some 'mainhandler'. This should be a script which gets
> '/somefkt/parama/paramb' and knows what to do with it. What's the 
> easiest
> way to do this?
>
> regards,
> Achim
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matt at pollenation.net  Mon Jun 30 15:05:16 2003
From: matt at pollenation.net (Matt Goodall)
Date: 30 Jun 2003 22:05:16 +0100
Subject: [Twisted-Python] Keeping the same design sitewide?
In-Reply-To: <007701c33e8f$45061da0$0401a8c0@razor>
References: <007701c33e8f$45061da0$0401a8c0@razor>
Message-ID: <1057007115.5575.19.camel@localhost>

It sounds like you need twisted.web.woven.widgets.ExpandMacro. See
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html for an example.

- Matt

On Sun, 2003-06-29 at 23:39, Thomas Weholt wrote:
> Hi,
> 
> I was wondering how I can use Woven and keep the overall "sceleton" of my
> design in one file and wrap that around my templates at run-time? I mean, I
> want to create one page which links to my stylesheet, displays a logo, some
> header-text and a footer that will be the same site wide, and then just glue
> what the different pages generate into the sceleton-file.
> 
> Any clues on how to keep the design in one file and still use Woven?
> 
> Thomas
-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt at pollenation.net



From exarkun at intarweb.us  Mon Jun 30 19:20:32 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 30 Jun 2003 21:20:32 -0400
Subject: [Twisted-Python] MailboxError in imap4.py
In-Reply-To: <1056843911.609.12.camel@mingus>
References: <1056843911.609.12.camel@mingus>
Message-ID: <20030701012032.GA22828@intarweb.us>

On Sat, Jun 28, 2003 at 07:45:12PM -0400, Abe Fettig wrote:
> There's a number of places in twisted/protocols/imap4.py where code
> makes reference to MailboxError - if I'm not mistaken it's supposed to
> be MailboxException.
> 
> trivial patch attached.
> 
> Abe

  Thanks, applied.

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more the the wisest man can answer.
                -- C.C. Colton
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030630/4242b701/attachment.sig>

From michal at sabren.com  Mon Jun 30 19:52:34 2003
From: michal at sabren.com (Michal Wallace)
Date: Mon, 30 Jun 2003 21:52:34 -0400 (EDT)
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <20030701012032.GA22828@intarweb.us>
Message-ID: <Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>

Hey there,

I wsa trying to get a MoinMoin instance running
through twisted today. It looks to me like MoinMoin
needs some refactoring to get it to work. Aat first
glance it seems to want to pass around a Request
object instead of grabbing certain things out of
global variables.

But... It also looks like it was working at some
point, and there seem to be a few places where it's
actually running out there on the web.

Is there a nonstandard MoinMoin somewhere? I'm
looking at the latest CVS version and latest 
release and both are definitely not ready. 
Or am I missing something? :)

Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From itamar at itamarst.org  Mon Jun 30 20:02:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Jun 2003 22:02:29 -0400
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>
References: <20030701012032.GA22828@intarweb.us>
	<Pine.LNX.4.44.0306302148520.14562-100000@hydrogen.sabren.com>
Message-ID: <20030630220229.38b873ad.itamar@itamarst.org>

On Mon, 30 Jun 2003 21:52:34 -0400 (EDT)
Michal Wallace <michal at sabren.com> wrote:

> But... It also looks like it was working at some
> point, and there seem to be a few places where it's
> actually running out there on the web.

Are you sure it's not people running moin as a CGI? That's what
twistedmatrix.com does.



From glyph at twistedmatrix.com  Mon Jun 30 21:20:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jun 2003 22:20:47 -0500
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <20030630220229.38b873ad.itamar@itamarst.org>
Message-ID: <0257A723-AB73-11D7-A92B-000393C9700E@twistedmatrix.com>

On Monday, June 30, 2003, at 09:02 PM, Itamar Shtull-Trauring wrote:

> Are you sure it's not people running moin as a CGI? That's what
> twistedmatrix.com does.

Considering that the CGI support in Twisted was developed for MoinMoin 
and Mailman, and almost all the bugfixes that made it stable were from 
MoinMoin's maintainer, you could even say that MoinMoin+Twisted CGI 
*is* "Twisted-enabled" MoinMoin :)




