From exarkun at twistedmatrix.com  Sun Nov  1 00:05:21 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Nov 2009 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1257048321.71.373825820@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091101/e5e50970/attachment.htm 

From jonathan at garetjax.info  Sun Nov  1 05:45:31 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Sun, 1 Nov 2009 11:45:31 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
Message-ID: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>

Hi All,
I just set up a script to do a video recording from my iSight using
the pyobjc bridge and the QTKit framework.
This script uses the AppHelper.runConsoleEventLoop (not the
AppHelper.runEventLoop) function to start his main event loop.

I'd like to integrate this script with an existing twisted application
but I have trouble to bring it to work.

The application is a command line based twisted application managed
via AMQP (no user interaction is needed) and started using the twistd
command.

I tried to install the cfreactor but without success as I have to use
the runConsoleEventLoop.

Any insights on this?

Thanks in advance,
~Jonathan

-- 
Best Regards,
Jonathan Stoppani


From ronaldoussoren at mac.com  Sun Nov  1 06:02:20 2009
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Sun, 01 Nov 2009 12:02:20 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
Message-ID: <CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>

The pyobjc website contains a number of examples using twisted.

Ronald



On 1 nov 2009, at 11:45, Jonathan Stoppani <jonathan at garetjax.info>  
wrote:

> Hi All,
> I just set up a script to do a video recording from my iSight using
> the pyobjc bridge and the QTKit framework.
> This script uses the AppHelper.runConsoleEventLoop (not the
> AppHelper.runEventLoop) function to start his main event loop.
>
> I'd like to integrate this script with an existing twisted application
> but I have trouble to bring it to work.
>
> The application is a command line based twisted application managed
> via AMQP (no user interaction is needed) and started using the twistd
> command.
>
> I tried to install the cfreactor but without success as I have to use
> the runConsoleEventLoop.
>
> Any insights on this?
>
> Thanks in advance,
> ~Jonathan
>
> -- 
> Best Regards,
> Jonathan Stoppani
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jonathan at garetjax.info  Sun Nov  1 06:37:07 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Sun, 1 Nov 2009 12:37:07 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com> 
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
Message-ID: <c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com>

Hi Ronald,
thanks for the response. I already saw the examples on the pyobjc
website, but they (two) are all using Cocoa to do some GUI related
work.

I don't have a gui and I use the console loop instead.

I'm now trying to use the code attached to this ticket and it seems to
work, but I have to test it a little more.

Cheers,
~Jonathan

On Sun, Nov 1, 2009 at 12:02 PM, Ronald Oussoren <ronaldoussoren at mac.com> wrote:
> The pyobjc website contains a number of examples using twisted.
>
> Ronald


From terry at jon.es  Sun Nov  1 11:53:31 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 1 Nov 2009 17:53:31 +0100
Subject: [Twisted-Python] Retrying function calls
Message-ID: <19181.48395.307806.958549@jon.es>

These days I often find myself writing code to talk to services that are
periodically briefly unavailable. An error of some kind occurs and the
correct (and documented) action to take is just to retry the original call.
Examples include using Amazon's S3 service and the Twitter API. In both of
these services, transient failures happen fairly frequently.

So I wrote the class below to retry calls, and tried to make it fairly
general. I'd be happy to hear comments on it, because it's pretty simple
and if it can be made bullet proof I imagine others will use it too.

First off, here's the class that handles the calling:

from twisted.internet import reactor, defer, task
from twisted.python import log, failure


class RetryingCall(object):
    """Calls a function repeatedly, passing it args and kw args. Failures
    are passed to a user-supplied failure testing function. If the failure
    is ignored, the function is called again after a delay whose duration
    is obtained from a user-supplied iterator. The start method (below)
    returns a deferred that fires with the eventual non-error result of
    calling the supplied function, or fires its errback if no successful
    result can be obtained before the delay backoff iterator raises
    StopIteration.
    """
    def __init__(self, f, *args, **kw):
        self._f = f
        self._args = args
        self._kw = kw
        
    def _err(self, fail):
        try:
            fail = self._failureTester(fail)
        except:
            self._deferred.errback()
        else:
            if isinstance(fail, failure.Failure):
                self._deferred.errback(fail)
            else:
                log.msg('RetryingCall: Ignoring %r' % (fail,))
                self._call()

    def _call(self):
        try:
            delay = self._backoffIterator.next()
        except StopIteration:
            log.msg('StopIteration in RetryingCall: ran out of attempts.')
            self._deferred.errback()
        else:
            d = task.deferLater(reactor, delay,
                                self._f, *self._args, **self._kw)
            d.addCallbacks(self._deferred.callback, self._err)

    def start(self, backoffIterator=None, failureTester=None):
        self._backoffIterator = backoffIterator or simpleBackoffIterator()
        self._failureTester = failureTester or (lambda f: f)
        self._deferred = defer.Deferred()
        self._call()
        return self._deferred


You call the constructor with function and its args. When you call start()
you get back a deferred that eventually fires with the result of the call,
or an error. BTW, I called it "start" to mirror task.LoopingCall.

There's a helper function for producing successive inter-call delays:

from operator import mul
from functools import partial

def simpleBackoffIterator(maxResults=10, maxDelay=5.0, now=True,
                          initDelay=0.01, incFunc=None):
    assert maxResults > 0
    remaining = maxResults
    delay = initDelay
    incFunc = incFunc or partial(mul, 2.0)
    
    if now:
        yield 0.0
        remaining -= 1
    while True:
        if remaining == 0:
            raise StopIteration
        yield (delay if delay < maxDelay else maxDelay)
        delay = incFunc(delay)
        remaining -= 1

By default this will generate the sequence of inter-call delays 0.0, 0.01,
0.02, 0.04, 0.08, 0.16, 0.32, 0.64, 1.28, 2.56 and it should be easy to see
how you could write your own. Or you can just supply a list, etc.  When the
backoff iterator finishes, the RetryingCall class gives up on trying to get
a non-error result from the function. In that case you just get a
StopIteration exception in the failure that start() deferred returns (I was
originally returning the original failure, but decided to simplify. If you
want that, you can keep it yourself in an error tracking class, see below).

You get to specify a function for testing failures. If it ever raises or
returns a failure, the start() deferred's errback is called. The failure
tester can just ignore whatever failures should be considered transient.

So, for example, if you were calling S3 and wanted to ignore 504 errors,
you could supply a failureTester arg like this:

    from twisted.web import error, http

    def test(self, failure):
        failure.trap(error.Error)
        if int(failure.value.status) != http.GATEWAY_TIMEOUT:
            return failure

As another example, while using the Twitter API you might want to allow a
range of HTTP errors and also exactly one 404 error, seeing as a 404
*might* be an error on the part of Twitter (I don't mean to suggest that
actually happens). It's probably definitive - but, why not try it once
again just to be more sure?  So, pass RetryingCall a failureTester that's
an instance of a class like this:

class TwitterFailureTester(object):
    okErrs = (http.INTERNAL_SERVER_ERROR,
              http.BAD_GATEWAY,
              http.SERVICE_UNAVAILABLE)

    def __init__(self):
        self.seen404 = False
        
    def __call__(self, failure):
        failure.trap(error.Error)
        status = int(failure.value.status)
        if status == http.NOT_FOUND:
            if self.seen404:
                return failure
            else:
                self.seen404 = True
        elif status not in self.okErrs:
            return failure

Changing existing code to use RetryingCall is pretty trivial. Take something like this

from twisted.web import client

def getUserByScreenname(screenname):
    d = client.getPage(
        'http://twitter.com/users/show.json?screen_name=glyf')
    return d

and change it to look like this:

def getUserByScreenname(screenname):
    r = RetryingCall(client.getPage,
        'http://twitter.com/users/show.json?screen_name=glyf')
    d = r.start(failureTester=TwitterFailureTester())
    return d


I wrote the above last night, so I don't know if it's fully robust. But I
dropped it into some of my own stuff last night and it seems to work. I
also have a small test suite in case anyone wants it.

My questions are: Is this robust? Can/should it be improved?  Any criticism
of the code (especially wrt Twisted best practices) would be very welcome.

Thanks!

Terry


From terry at jon.es  Sun Nov  1 14:09:15 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 1 Nov 2009 20:09:15 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 17:53:31 on Sunday, 1 November 2009
References: <19181.48395.307806.958549@jon.es>
Message-ID: <19181.56539.324819.274798@jon.es>

Following up on my own post:

> When the backoff iterator finishes, the RetryingCall class gives up on
> trying to get a non-error result from the function. In that case you just
> get a StopIteration exception in the failure that start() deferred
> returns (I was originally returning the original failure, but decided to
> simplify. If you want that, you can keep it yourself in an error tracking
> class, see below).

Thinking about it a bit more it seems more sensible that the start method's
default failureTester function ignores all failures, and that in the case
of an eventual failure, you get the first ever (or last ever) failure back.
Those changes would make the RetryingCall class more useful (as it stands
with the defaults you get a failure back the first time something goes
wrong, so in the default case the class doesn't even do what it says).

I wont post the changes here, as I don't even know if anyone else is
interested.  Contact me if you want an updated version.

Terry


From blair.bethwaite at gmail.com  Sun Nov  1 18:46:38 2009
From: blair.bethwaite at gmail.com (Blair Bethwaite)
Date: Sun, 1 Nov 2009 23:46:38 +0000
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <19181.48395.307806.958549@jon.es>
References: <19181.48395.307806.958549@jon.es>
Message-ID: <ab42a7c0911011546h265efab2je3cd9e9da19c3363@mail.gmail.com>

Hi Terry,

2009/11/1 Terry Jones <terry at jon.es>:
<SNIP>
> My questions are: Is this robust? Can/should it be improved? ?Any criticism
> of the code (especially wrt Twisted best practices) would be very welcome.

Looks pretty good. To streamline the usage and make the intent more
apparent from a brief glance at the header you might consider turning
it into a decorator, like
http://wiki.python.org/moin/PythonDecoratorLibrary#Retry - the retry
method there is simpler than yours but easy to extend beyond the
flip-flop scenario it currently caters for. I have also been doing
some work using the AWS query APIs and a minor variant of that
decorator now holds a high position in my Python tool belt module.

Regards,
~Blair

-- 
In science one tries to tell people, in such a way
as to be understood by everyone, something that
no one ever knew before. But in poetry, it's the
exact opposite.
 - Paul Dirac


From terry at jon.es  Sun Nov  1 19:05:22 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 2 Nov 2009 01:05:22 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 23:46:38 on Sunday, 1 November 2009
References: <19181.48395.307806.958549@jon.es>
	<ab42a7c0911011546h265efab2je3cd9e9da19c3363@mail.gmail.com>
Message-ID: <19182.8770.622615.682426@jon.es>

Hi Blair

> Looks pretty good. To streamline the usage and make the intent more
> apparent from a brief glance at the header you might consider turning it
> into a decorator, like

Thanks for the suggestion & the pointer. I'd not seen that page.

I don't think this is well suited to decorators, at least not with the
kinds of usages I am imagining. If you decorate a function, it's done once
and for all. So anyone who calls the function gets the single
one-size-fits-all decorated behavior. I'd rather the behavior was left in
the hands of the caller. That's kind of the point: give the caller flexible
control over what happens if something goes wrong, including passing in
your custom failure handler, etc.

Maybe a hybrid approach would be more useful: write a function which,
passed a function, returns a retrying version of that function that returns
a deferred that fires when the original function has succeeded (or
ultimately failed). The result could then be passed around, called by
multiple pieces of code, etc. Hmmm...

Thanks again.

Terry


From screwtape at froup.com  Sun Nov  1 19:11:32 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 2 Nov 2009 11:11:32 +1100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <19181.48395.307806.958549@jon.es>
References: <19181.48395.307806.958549@jon.es>
Message-ID: <20091102001132.GB15241@thristian.org>

On Sun, Nov 01, 2009 at 05:53:31PM +0100, Terry Jones wrote:
> def simpleBackoffIterator(maxResults=10, maxDelay=5.0, now=True,
>                           initDelay=0.01, incFunc=None):
>     assert maxResults > 0
>     remaining = maxResults
>     delay = initDelay
>     incFunc = incFunc or partial(mul, 2.0)
>     
>     if now:
>         yield 0.0
>         remaining -= 1
>     while True:
>         if remaining == 0:
>             raise StopIteration
>         yield (delay if delay < maxDelay else maxDelay)
>         delay = incFunc(delay)
>         remaining -= 1

Since this is a generator function, it will automatically raise
StopIteration once control-flow falls off the end of the function, so
your while-loop could just be written:

    while remaining > 0:
	yield (delay if delay < maxDelay else maxDelay)
	delay = incFunc(delay)
	remaining -= 1

...making the function of the "remaining" counter just a little more
explicit.


From db3l.net at gmail.com  Sun Nov  1 20:00:16 2009
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 01 Nov 2009 20:00:16 -0500
Subject: [Twisted-Python] PyObjC and Twisted command line script
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
	<c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com>
Message-ID: <m2bpjlaggv.fsf@valheru.db3l.homeip.net>

Jonathan Stoppani <jonathan at garetjax.info> writes:

> Hi Ronald,
> thanks for the response. I already saw the examples on the pyobjc
> website, but they (two) are all using Cocoa to do some GUI related
> work.
>
> I don't have a gui and I use the console loop instead.
>
> I'm now trying to use the code attached to this ticket and it seems to
> work, but I have to test it a little more.

Not sure which ticket is being referenced but which Twisted reactor
are you using?  I've had very good luck with the threadedselect
reactor, which shouldn't care if your main loop is a GUI or not.  You
interleave with AppHelper.callAfter, which I think should work fine
with both runConsoleEventLoopas well as the GUI runEventLoop

For my part, any OSX console apps I've had to do could just be pure
Twisted, with no need to integrate with an NSRunLoop, so I'm not that
familiar with how you best track startup/shutdown in those cases.

But fundamentally, you install the threadedselect reactor (do that
before any other code uses "from twisted.internet import reactor"),
then use "reactor.interleave(AppHelper.callAfter)" to tie the reactor
in to the normal event loop.  In the Cocoa/NSApplication scenario, I
use the applicationDidFinishLaunching notification to trigger this.

During shutdown, wait for the reactor to perform its shutdown so it
can close things down cleanly, using a reactor trigger to finalize the
event loop with "AppHelper.stopEventLoop".  Again, presumably you'll
have some way to determine when this is appropriate in your console
event loop - in a Cocoa/NSApplication scenario, I use the
applicationShouldTerminate notification.  (I've tended to install the
trigger right at that point too, although it could also be done
earlier)

Here's a trivial example, where I kluge a startup event.  Presumably
the reason you are using runConsoleEventLoop is to use other native
event/input sources based operations, so you might have a more logical
place or event to identify when to start the twisted integration - all
that's required is that it be done after the main event loop is
running.  If not, while I chose a 1s startup delay in this example, it
was mostly to see the difference in timestamps - you can make the
initial callLater a timeout of 0, and it'll just run as soon as the
event loop gets started.

This example also just terminates after two Twisted-based delayed
events, but that would also be determined by your own application:

    """Test console event loop app with Twisted threadedselect reactor"""

    import time

    from PyObjCTools import AppHelper

    from twisted.internet._threadedselect import install
    reactor = install()

    class Main(object):

        def startup(self):
            print time.ctime(), 'Main starting'
            reactor.callLater(1, self.callback)
            reactor.interleave(AppHelper.callAfter)

        def terminate(self):
            print time.ctime(), 'Shutting down reactor'
            reactor.addSystemEventTrigger('after', 'shutdown',
                                          AppHelper.stopEventLoop)
            reactor.stop()

        def callback(self):
            print time.ctime(), 'I was called by the reactor'
            reactor.callLater(1, self.terminate)


    if __name__ == "__main__":

        main = Main()
        AppHelper.callLater(1, main.startup)

        print time.ctime(), 'Starting Event Loop'
        AppHelper.runConsoleEventLoop()
        print time.ctime(), 'Terminating'

When running, this produces:

    Sun Nov  1 19:53:16 2009 Starting Event Loop
    Sun Nov  1 19:53:17 2009 Main starting
    Sun Nov  1 19:53:18 2009 I was called by the reactor
    Sun Nov  1 19:53:19 2009 Shutting down reactor
    Sun Nov  1 19:53:19 2009 Terminating

-- David



From terry at jon.es  Sun Nov  1 20:03:59 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 2 Nov 2009 02:03:59 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 11:11:32 on Monday, 2 November 2009
References: <19181.48395.307806.958549@jon.es>
	<20091102001132.GB15241@thristian.org>
Message-ID: <19182.12287.940497.101383@jon.es>

Hi Tim

> Since this is a generator function, it will automatically raise
> StopIteration once control-flow falls off the end of the function, so your
> while-loop could just be written:

Ah yes, thanks a lot.

Terry


From cwellington at ccg.murdoch.edu.au  Sun Nov  1 23:17:41 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 12:17:41 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test	cases?
In-Reply-To: <20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
Message-ID: <1257135461.4197.4.camel@wolfwood>

On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
> It looks like your custom reactor is mainly in charge of making sure 
> stackless.schedule() gets called at least once every 0.1 seconds.  Is 
> that right?  If so, a much better approach would be to use 
> twisted.internet.task.LoopingCall rather than implementing a custom 
> reactor.
> 
> Is there something undesirable about that (much simpler, less fragile) 
> approach?

I tried using LoopingCall, but it does not work. It only calls the
scheduler once. I think this has to do with the fact that the stackless
scheduler needs to be interwoven with the twisted reactor pump. There is
more info about why it has to be done like this here:
http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

> As for your actual question, if you want a new reactor to be as usable 
> as one of the existing ones, you need to write a plugin declaring its 
> available.  Take a look at twisted/plugins/twisted_reactors.py for some 
> examples.

I shall have a look at that approach. Thanks.

Crispin



From cwellington at ccg.murdoch.edu.au  Sun Nov  1 23:31:59 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 12:31:59 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test	cases?
In-Reply-To: <20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
Message-ID: <1257136319.4197.8.camel@wolfwood>

On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
> As for your actual question, if you want a new reactor to be as usable 
> as one of the existing ones, you need to write a plugin declaring its 
> available.  Take a look at twisted/plugins/twisted_reactors.py for some 
> examples.

So if I make a 'plugin' that declares a
twisted.application.reactors.Reactor in the way done so inside
twisted/plugins/twisted_reactors.py, how do I make twisted trial pick it
up? Or do I actually have to add it into
twisted/plugins/twisted_reactors.py? Or monkey punch it in? If so, where
do I bootstap it in? Trial seems to need the reactor before TestCases
are even loaded.

Thanks again for any help

Crispin



From glyph at twistedmatrix.com  Mon Nov  2 01:12:27 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Nov 2009 01:12:27 -0500
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <1257135461.4197.4.camel@wolfwood>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
Message-ID: <DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>

On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:

> On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
>> It looks like your custom reactor is mainly in charge of making sure
>> stackless.schedule() gets called at least once every 0.1 seconds.  Is
>> that right?  If so, a much better approach would be to use
>> twisted.internet.task.LoopingCall rather than implementing a custom
>> reactor.
>>
>> Is there something undesirable about that (much simpler, less  
>> fragile)
>> approach?
>
> I tried using LoopingCall, but it does not work. It only calls the
> scheduler once. I think this has to do with the fact that the  
> stackless
> scheduler needs to be interwoven with the twisted reactor pump.

LoopingCall does "interweave" the function that you pass to it with  
the "twisted reactor pump".  If you were using it correctly, it would  
work, as the page that you link to indicates :).

What do you mean "does not work"?

> There is
> more info about why it has to be done like this here:
> http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

This example, linked from that page:
<http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/TwistedTimerReactorControl.py 
 >
is roughly the same as what exarkun recommended.

These examples aren't the greatest, because they tend to assume that  
you _always_ have Stackless code that's ready to run, and you want to  
run at some number of "frames per second".  For simple examples this  
makes sense, but for a system architecture this is a limiting  
approach.  If your stackless application wants to sit idle and wait  
for input, you're still going to wake up once every 1/30 second and  
checking to see if there's anything to do, burning CPU cycles and  
battery life.  Also, if you want to run *faster* than the arbitrary  
timeout you've selected (1/30 second can be a very long time,  
especially if you're doing something pseudo-realtime, like audio  
playback) you're out of luck.

Better would be to have tasklets schedule *themselves* for when they  
want to run.  If you just want to allow the rest of the reactor a time- 
slice, twisted.internet.task.cooperate() will allow you to schedule a  
potentially arbitrary number of tasks which want to run "as often as  
possible" without completely swamping the reactor; you can suspend  
that task by returning a Deferred which only fires when more stackless  
stuff is actually ready to run.



From cwellington at ccg.murdoch.edu.au  Mon Nov  2 02:22:46 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 15:22:46 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test cases?
In-Reply-To: <DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
	<DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
Message-ID: <1257146566.4197.16.camel@wolfwood>

On Mon, 2009-11-02 at 01:12 -0500, Glyph Lefkowitz wrote:
> On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:

> > I tried using LoopingCall, but it does not work. It only calls the
> > scheduler once. I think this has to do with the fact that the  
> > stackless
> > scheduler needs to be interwoven with the twisted reactor pump.

> What do you mean "does not work"?

OK. Having a closer look, its not that looping call doesn't work, its
that there is some unknown number of "reactor pumps" between starting
the test, and finishing it. What I need is a way for the reactor to be
pumping away while a particular test function of a testcase continues
working. As an example, here is a non-working test case. Notice the
comment "#what to do here to pump the reactor?".

------------------
from twisted.trial import unittest, reporter, runner
import os, time
import stackless

from twisted.internet import reactor, task

def example_func(t=10.0):
    """wait for t seconds then return"""
    exit_time = time.time()+t
    while time.time()<exit_time:
        stackless.schedule()

t = task.LoopingCall(stackless.schedule)
t.start(0.1)

class StacklessTest(unittest.TestCase):
    def setUpClass(self):
        pass
        
    def test_stackless(self):
        """Test that we can successfuly create a user proxy cert"""
        # get the time now...
        start = time.time()
        
        task = stackless.tasklet(example_func)
        task.setup(10.0)
        task.run()
            
        while task.alive:
            pass            #what to do here to pump the reactor?
            
        # end time
        end = time.time()
            
        self.assert_( endtime - starttime >= 10.0 )
        
---------------------

Running this under trial, it just hangs, inside the while task.alive:
loop.

So I guess my problem is my approach. How do I test long running
"tasklets" that use twisted calls (unlike this contrived example that
only sleeps) within the twisted trial framework?

How would the Twisted experts write test code for a case like this? Any
help is much appreciated!

Kind Regards

Crispin Wellington



From spongelavapaul at googlemail.com  Mon Nov  2 08:14:37 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Mon, 2 Nov 2009 13:14:37 +0000
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <1257146566.4197.16.camel@wolfwood>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
	<DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
	<1257146566.4197.16.camel@wolfwood>
Message-ID: <EFAE6701-D102-4FCA-84D6-65CAD1A48893@googlemail.com>


On 2 Nov 2009, at 07:22, Crispin Wellington wrote:

> On Mon, 2009-11-02 at 01:12 -0500, Glyph Lefkowitz wrote:
>> On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:
>
>>> I tried using LoopingCall, but it does not work. It only calls the
>>> scheduler once. I think this has to do with the fact that the
>>> stackless
>>> scheduler needs to be interwoven with the twisted reactor pump.
>
>> What do you mean "does not work"?
>
> OK. Having a closer look, its not that looping call doesn't work, its
> that there is some unknown number of "reactor pumps" between starting
> the test, and finishing it. What I need is a way for the reactor to be
> pumping away while a particular test function of a testcase continues
> working.
[snip]
> Running this under trial, it just hangs, inside the while task.alive:
> loop.
>
> So I guess my problem is my approach. How do I test long running
> "tasklets" that use twisted calls (unlike this contrived example that
> only sleeps) within the twisted trial framework?

I'm no expert, but I have some tests against objects that use  
spawnProcess() which has the similar problem that I need to pump the  
reactor. The key is to return a deferred from the trial test method -  
then trial does the pump for you. I'm actually using @inlineCallbacks  
and the sleep() function mentioned in a previous post - you'll  
probably want task.deferLater() or similar.


From piu.alberto at gmail.com  Mon Nov  2 09:24:56 2009
From: piu.alberto at gmail.com (Alberto Piu)
Date: Mon, 2 Nov 2009 15:24:56 +0100
Subject: [Twisted-Python] Connect to an IRC server, modules.
Message-ID: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>

Greetings,

first of all, I apologize for bad english. I am new with Twisted, and  
although it seems very powerful, I'm having some problems in using it.
I'm trying to create an IRC bot, which basically does nothing. My idea  
is to write a skeleton that's improved by modules, which do different  
things in an IRC channel.
When some events happen some modules become active, so that they can  
send messages, or notices, or private messages, and all what an IRC  
bot can do; so, every module has to have complete access to the  
methods of the bot class, but in the same time I need to keep the two  
things separated, to improve modularity.

I used an example, called LogBot example. I have a .py file (I'll call  
it "mainfile), in which the LogBot class is located, where the reactor  
is set up etc, then I have a dir called modules, where modules are.

- mainfile.py
- modules
	- modulea
		- modulea.py
	- moduleb
		- moduleb.py

(I omitted __init__.py files).

Now the question is: how I can make accessible all the methods of the  
LogBot class from EVERY .py inside the modules directory? I tried to  
do the following:
In the mainfile, inside the LogBot class, I have

def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)

This method is called when the bot joins the channel "channel".
Know, if I want to use modulea to greet user "x" when I enter the  
channel, I would write:

def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)
	modulea.greet("x", "Hi, user x")

where greet is a function inside the module modulea (imported  
somewhere in my mainfile).
Anyway, modulea is defined as following:

def greet(who, message):
	## But here, how can the function know the method to use?

The solution can be...

##In mainfile.py
def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)
	modulea.greet(self, "x", "Hi, user x")

##In module a:
def greet(bot, who, message):
	bot.msg(who, message)

But this does not work.
I tried to explain as better as I could. If you can, please use  
examples and speak easy (can't understand very well).
Hope you can help me!

Thank you, in advance.
--Alberto Piu


From art at academ.org  Mon Nov  2 10:11:50 2009
From: art at academ.org (Artem Bokhan)
Date: Mon, 02 Nov 2009 21:11:50 +0600
Subject: [Twisted-Python] reverse web proxy & threads
Message-ID: <4AEEF6B6.7030107@academ.org>

Hello!

I'm playing with reverse proxy from examples
(Twisted-8.2.0/doc/web/examples/proxy.py). May somebody explain what
part of code uses threads there?

pstree -p | grep python

-python(12786)-+-{python}(12795)
                |-{python}(13050)
                |-{python}(15547)
                `-{python}(20767)





From ssteinerx at gmail.com  Mon Nov  2 10:20:51 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 2 Nov 2009 10:20:51 -0500
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
Message-ID: <18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>

On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:

>> Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>> also with 3987.
>>
>> While there is some very nice stuff in there, I'm really not sure how
>> one would actually put it to use since the back-end and the front-end
>> seem to have been split into separate branches.
>
> They're not really split.  The 3987 branch is complete and usable on  
> its
> own.  You don't need a checkout of the 886 branch.

Ok, I have re-checked out just the 3987 branch without messing with 886.

Using it as a direct substitution in a Django application using  
Twisted's WSGI, it completely breaks my application in ways that look  
suspiciously like the 8.2.0 release's WSGI problems that have since  
been fixed in Twisted trunk.

Is 3987 based on 8.2.0 and, if so, what is the procedure for merging  
the trunk back to this branch (or visa versa, if that would be better).

If 3987 is supposed to be in sync with trunk, I'll have to hunt down  
the WSGI problems I'm having because it's definitely not working in an  
application that works just fine with Twisted trunk.

S




From andrewfr_ice at yahoo.com  Mon Nov  2 12:27:37 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Nov 2009 09:27:37 -0800 (PST)
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <mailman.1.1257181201.4560.twisted-python@twistedmatrix.com>
Message-ID: <468264.24736.qm@web112412.mail.gq1.yahoo.com>

Crispin:

>OK. Having a closer look, its not that looping call doesn't work, its
>that there is some unknown number of "reactor pumps" between starting
>the test, and finishing it. What I need is a way for the reactor to be
>pumping away while a particular test function of a testcase continues
>working. As an example, here is a non-working test case. Notice the
>comment "#what to do here to pump the reactor?".

...

>        while task.alive:
>            pass            #what to do here to pump the reactor?
          
This won't work because as long as the tasklet is alive (scheduled, paused,  or blocked), you will be in a tight loop. And if that function
is not running in the reactor, then the reactor will starve. If you 
are waiting to see if the tasklet finished, write a synchronizer.

Cheers,
Andrew



      


From andrewfr_ice at yahoo.com  Mon Nov  2 12:39:39 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Nov 2009 09:39:39 -0800 (PST)
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
Message-ID: <225230.47609.qm@web112417.mail.gq1.yahoo.com>

Hello Glyph:

>These examples aren't the greatest, because they tend to assume that 
>you _always_ have Stackless code that's ready to run, and you want to 
>run at some number of "frames per second".?

In 2007, folks (especially myself) are still trying to figure out if
Stackless can play with Twisted correctly. I know my stuff in the
repository is old.

> For simple examples this makes sense, but for a system architecture 
>this is a limiting approach.? If your stackless application wants to 
>sit idle and wait for input, you're still going to wake up once every >1/30 second and checking to see if there's anything to do, burning CPU >cycles and battery life.? 

An approach would be for the reactor tasklet to look at the runnable 
list to see if there are any entries. If there are no entries 
(i.e., tasklets are blocked and dependent on the reactor tasklet), 
then the reactor tasklet can stop the loopingCall. This is easy enough 
to do. However I suspect one starts to get into custom reactor land. 

>Also, if you want to run *faster* than the arbitrary timeout you've
>selected (1/30 second can be a very long time, especially if you're 
>doing something pseudo-realtime, like audio playback) you're out of luck.

I believe there are two scenarios here:

1) no blocked tasklets and only runnable ones. If the runnable tasklets make no IO requests, it should be possible to put the reactor tasklet to sleep. Let the system run as fast as it can.

2) There is a mix of runnable (scheduled) and blocked tasklets. This
scenario requires a more sophisticated scheduler that is trying to
compute an optimal loopingCall value. This scenario is tricky.

>Better would be to have tasklets schedule *themselves* for when they 
>want to run.? 

In the Stackless world,  tasklets start running from the moment
they are created/inserted into the runnable list. Stackless in
non-preemptive mode is more about knowing when to make a tasklet 
yield to the scheduler. 

Cheers,
Andrew







      


From exarkun at twistedmatrix.com  Mon Nov  2 18:07:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Nov 2009 23:07:16 -0000
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
	<18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
Message-ID: <20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>

On 03:20 pm, ssteinerx at gmail.com wrote:
>On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:
>>>Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>>>also with 3987.
>>>
>>>While there is some very nice stuff in there, I'm really not sure how
>>>one would actually put it to use since the back-end and the front-end
>>>seem to have been split into separate branches.
>>
>>They're not really split.  The 3987 branch is complete and usable on
>>its
>>own.  You don't need a checkout of the 886 branch.
>
>Ok, I have re-checked out just the 3987 branch without messing with 
>886.
>
>Using it as a direct substitution in a Django application using
>Twisted's WSGI, it completely breaks my application in ways that look
>suspiciously like the 8.2.0 release's WSGI problems that have since
>been fixed in Twisted trunk.
>
>Is 3987 based on 8.2.0 and, if so, what is the procedure for merging
>the trunk back to this branch (or visa versa, if that would be better).
>
>If 3987 is supposed to be in sync with trunk, I'll have to hunt down
>the WSGI problems I'm having because it's definitely not working in an
>application that works just fine with Twisted trunk.

It's not based on 8.2.0, but neither is it in "sync" with trunk.  It is 
a copy of trunk from r27271.  You may indeed find that there are a 
number of bug fixes or feature additions which are present in trunk at HEAD 
which are not present in the #3987 branch.

If you want everything from trunk at HEAD and the #3987 branch, then you 
may now be happy you did all that stuff with git.  Merge the #3987 
branch into trunk at HEAD and you'll get everything from trunk at HEAD and 
everything from the branch (that's tautological, sorry, I hope you know 
what I mean).

If you're not sure what to do with git, then here's what to do with svn:

    BRANCHES=svn://svn.twistedmatrix.com/svn/Twisted/branches
    EXPRESSIVE=$BRANCHES/expressive-http-client-886-4
    HIGHLEVEL=$BRANCHES/high-level-web-client-3987/
    cd path/to/Twisted/trunk
    svn merge $EXPRESSIVE at 27272 EXPRESSIVE at HEAD
    svn merge $HIGHLEVEL at 27275 $HIGHLEVEL at HEAD

Or using Combinator:

    chbranch Twisted expressive-http-client-886-4
    unbranch Twisted
    chbranch Twisted high-level-web-client-3987
    unbranch Twisted --force

Jean-Paul


From ssteinerx at gmail.com  Mon Nov  2 22:53:53 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 2 Nov 2009 22:53:53 -0500
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
	<18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
	<20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>
Message-ID: <82EA1F62-940B-4D6F-92D2-0553A2D79D5F@gmail.com>


On Nov 2, 2009, at 6:07 PM, exarkun at twistedmatrix.com wrote:

> On 03:20 pm, ssteinerx at gmail.com wrote:
>> On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:
>>>> Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>>>> also with 3987.
>>>>
>>>> While there is some very nice stuff in there, I'm really not sure  
>>>> how
>>>> one would actually put it to use since the back-end and the front- 
>>>> end
>>>> seem to have been split into separate branches.
>>>
>>> They're not really split.  The 3987 branch is complete and usable on
>>> its
>>> own.  You don't need a checkout of the 886 branch.
>>
>> Ok, I have re-checked out just the 3987 branch without messing with
>> 886.
>>
>> Using it as a direct substitution in a Django application using
>> Twisted's WSGI, it completely breaks my application in ways that look
>> suspiciously like the 8.2.0 release's WSGI problems that have since
>> been fixed in Twisted trunk.
>>
>> Is 3987 based on 8.2.0 and, if so, what is the procedure for merging
>> the trunk back to this branch (or visa versa, if that would be  
>> better).
>>
>> If 3987 is supposed to be in sync with trunk, I'll have to hunt down
>> the WSGI problems I'm having because it's definitely not working in  
>> an
>> application that works just fine with Twisted trunk.
>
> It's not based on 8.2.0, but neither is it in "sync" with trunk.  It  
> is
> a copy of trunk from r27271.  You may indeed find that there are a
> number of bug fixes or feature additions which are present in  
> trunk at HEAD
> which are not present in the #3987 branch.
>
> If you want everything from trunk at HEAD and the #3987 branch, then you
> may now be happy you did all that stuff with git.  Merge the #3987
> branch into trunk at HEAD and you'll get everything from trunk at HEAD and
> everything from the branch (that's tautological, sorry, I hope you  
> know
> what I mean).
>
> If you're not sure what to do with git, then here's what to do with  
> svn:
>
>    BRANCHES=svn://svn.twistedmatrix.com/svn/Twisted/branches
>    EXPRESSIVE=$BRANCHES/expressive-http-client-886-4
>    HIGHLEVEL=$BRANCHES/high-level-web-client-3987/
>    cd path/to/Twisted/trunk
>    svn merge $EXPRESSIVE at 27272 EXPRESSIVE at HEAD
>    svn merge $HIGHLEVEL at 27275 $HIGHLEVEL at HEAD
>
> Or using Combinator:
>
>    chbranch Twisted expressive-http-client-886-4
>    unbranch Twisted
>    chbranch Twisted high-level-web-client-3987
>    unbranch Twisted --force

Wow.  That's quite a lot of stuff.

Now I have an @HEAD.ache ;-) .

I'll see if I can get this whacked together in any meaningful way and  
maybe publish my resultant branch to Github or something.

Meanwhile...




From itamar at itamarst.org  Mon Nov  2 23:33:27 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Mon, 02 Nov 2009 23:33:27 -0500
Subject: [Twisted-Python] reverse web proxy & threads
In-Reply-To: <4AEEF6B6.7030107@academ.org>
References: <4AEEF6B6.7030107@academ.org>
Message-ID: <1257222807.3814.681.camel@pintsize>

On Mon, 2009-11-02 at 21:11 +0600, Artem Bokhan wrote:
> Hello!
> 
> I'm playing with reverse proxy from examples
> (Twisted-8.2.0/doc/web/examples/proxy.py). May somebody explain what
> part of code uses threads there?
> 
> pstree -p | grep python
> 
> -python(12786)-+-{python}(12795)
>                 |-{python}(13050)
>                 |-{python}(15547)
>                 `-{python}(20767)

DNS lookups, probably: gethostbyname blocks your process, otherwise.



From tw.1 at pyxos.com  Tue Nov  3 13:52:45 2009
From: tw.1 at pyxos.com (Dan)
Date: Tue, 03 Nov 2009 12:52:45 -0600
Subject: [Twisted-Python] The case of the missing Traceback
Message-ID: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>


I was playing around with Twisted today and ran into a problem where 
Tracebacks aren't emitted on stderr after a deferred callback from a 
process called launched by reactor.spawnProcess.  The simplified test 
case is below.  I put "x = y" in the  callback function to generate 
an exception, y doesn't exist.  Uncomment "x = z" right before the 
callback and it produces the traceback on stderr just fine.

System is Linux, Python 2.6 and Twisted 8.2.



from twisted.internet import reactor, protocol, defer
import sys


def err(s):
     sys.stderr.write(s+'\n')
     sys.stderr.flush()


def test():
     err('test')
     cat = MyPP()
     reactor.spawnProcess(cat, "/bin/cat", ["cat", "-"], {})
     d = cat.send("Hello world")
     d.addCallback(response)


def response(resp):
     err('response called')
     x = y
     err(resp)


class MyPP(protocol.ProcessProtocol):
     def __init__(self):
         self.defer = defer.Deferred()

     def outReceived(self, data):
         err("outReceived! with %d bytes" % len(data))
         err("    %s" % data)
         self.defer.callback(data)

     def send(self, c):
         self.transport.write("%s\n" % c)
         #x = z
         return self.defer


if(__name__=='__main__'):
     reactor.callWhenRunning(test)
     reactor.run()





From terry at jon.es  Tue Nov  3 15:11:04 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 3 Nov 2009 21:11:04 +0100
Subject: [Twisted-Python] The case of the missing Traceback
In-Reply-To: Your message at 12:52:45 on Tuesday, 3 November 2009
References: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>
Message-ID: <19184.36440.926165.16119@jon.es>

>>>>> "Dan" == Dan  <tw.1 at pyxos.com> writes:
Dan> I was playing around with Twisted today and ran into a problem where
Dan> Tracebacks aren't emitted on stderr after a deferred callback from a
Dan> process called launched by reactor.spawnProcess.  The simplified test
Dan> case is below.  I put "x = y" in the callback function to generate an
Dan> exception, y doesn't exist.  Uncomment "x = z" right before the
Dan> callback and it produces the traceback on stderr just fine.

Hi Dan

The callback function raises an exception, which Twisted converts to
failure and stores in the deferred. But seeing as there are no errback
functions in the deferred *and you leave the reactor running*, the failure
just sits there (just as it should). If you do a 'from twisted.python
import log' and Change the addCallback line in test() to look like this

     d.addCallback(response).addErrback(log.err)

You'll see the expected NameError just fine.

Terry


From tw.1 at pyxos.com  Tue Nov  3 15:45:30 2009
From: tw.1 at pyxos.com (Dan)
Date: Tue, 03 Nov 2009 14:45:30 -0600
Subject: [Twisted-Python] The case of the missing Traceback
In-Reply-To: <19184.36440.926165.16119@jon.es>
References: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>
	<19184.36440.926165.16119@jon.es>
Message-ID: <6.2.5.6.2.20091103144440.044097f0@wishbone.com>


Awesome!  Thanks for helping out a noob Terry! :)


At 02:11 PM 11/3/2009, you wrote:
> >>>>> "Dan" == Dan  <tw.1 at pyxos.com> writes:
>Dan> I was playing around with Twisted today and ran into a problem where
>Dan> Tracebacks aren't emitted on stderr after a deferred callback from a
>Dan> process called launched by reactor.spawnProcess.  The simplified test
>Dan> case is below.  I put "x = y" in the callback function to generate an
>Dan> exception, y doesn't exist.  Uncomment "x = z" right before the
>Dan> callback and it produces the traceback on stderr just fine.
>
>Hi Dan
>
>The callback function raises an exception, which Twisted converts to
>failure and stores in the deferred. But seeing as there are no errback
>functions in the deferred *and you leave the reactor running*, the failure
>just sits there (just as it should). If you do a 'from twisted.python
>import log' and Change the addCallback line in test() to look like this
>
>      d.addCallback(response).addErrback(log.err)
>
>You'll see the expected NameError just fine.
>
>Terry
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From gkistanova at accesssoftek.com  Tue Nov  3 16:23:01 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Tue, 3 Nov 2009 13:23:01 -0800
Subject: [Twisted-Python] twisted.internet.error.ProcessTerminated,
	exit code 1?
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD503@mail.accesssoftek.com>

Hello all,

I ran into issue with Twisted, could anybody help me?
I have Twisted 8.2.0 on Ubuntu 9.04.
I run tests for Buildbot 0.7.11p3 and one of the tests completed with the next error:

[ERROR]: buildbot.test.test_locks.Locks.testLock3

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1.

Cannot find any information what could cause this.
What ?exit code 1 ? means? I tried to stop MsAfee, but this did not help.

Thanks
 Gal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091103/6cac7440/attachment.htm 

From rroberts at adobe.com  Tue Nov  3 18:55:42 2009
From: rroberts at adobe.com (Read Roberts)
Date: Tue, 3 Nov 2009 15:55:42 -0800
Subject: [Twisted-Python] Need replacement for subprocess.call within a
 pyAMF method - any suggestions?
Message-ID: <C71602FE.5CB7%rroberts@adobe.com>

I am trying to use the twisted reactor as a basis for a Python server for a
Flex app, using pyAMF.  My problem is that one  of the server methods
requires me to run a series of command-line tools to complete parsing data
from a file into an XML object, with lots of Python processing on the
results of one command-line tool to provide the input to the next one. I
have been using  subprocess.call  to invoke the command-line tools, but
these intermittently - and frequently -  fail with an error "IOError: [Errno
4] Interrupted system call".

I do know that this was supposed to be fixed in twisted for Python 2.6, but
it doesn't seem to be. I have python 2.6.3 under Mac OSX 10.5.8, and twisted
8.2.0. Is there a work-around for this problem, or a better way to do this
with twisted? I do know that I can make a command-line call with
reactor.callLater, and that I can return a deferred from my server method,
but I don't see how to easily accomplish the chain of calls that I need,
short of breaking up my serverMethod1 into the several sequential parts, and
calling each from the result handler of the previous one. I'd rather not go
that route, as the logic of which command-line call gets made when is
actually quite complicated.

What I have now looks like (enormously simplified):
class MyPythonServer:

    def serverMethod1(self, dummyPost, inputFilePath):
        # Open inputFilePath, do stuff, save results to file2
        subprocess.call(["command1", "file2", "file3"])
        # Open file3, do stuff to the data, save results to file4
        subprocess.call(["command2", "file4", "file5"])
        # Open file5, convert data to a large string containing XML.
        return xmlString
 
- Read Roberts



From exarkun at twistedmatrix.com  Tue Nov  3 19:08:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Nov 2009 00:08:24 -0000
Subject: [Twisted-Python] Need replacement for subprocess.call within
	a	pyAMF method - any suggestions?
In-Reply-To: <C71602FE.5CB7%rroberts@adobe.com>
References: <C71602FE.5CB7%rroberts@adobe.com>
Message-ID: <20091104000824.3229.1269878260.divmod.xquotient.121@localhost.localdomain>

On 3 Nov, 11:55 pm, rroberts at adobe.com wrote:
>I am trying to use the twisted reactor as a basis for a Python server 
>for a
>Flex app, using pyAMF.  My problem is that one  of the server methods
>requires me to run a series of command-line tools to complete parsing 
>data
>from a file into an XML object, with lots of Python processing on the
>results of one command-line tool to provide the input to the next one. 
>I
>have been using  subprocess.call  to invoke the command-line tools, but
>these intermittently - and frequently -  fail with an error "IOError: 
>[Errno
>4] Interrupted system call".
>
>I do know that this was supposed to be fixed in twisted for Python 2.6, 
>but
>it doesn't seem to be.

I'm not sure why you know this.  I sure would be great if that were the 
case, but it's not.  More changes in Twisted are necessary to let things 
like subprocess.call work properly alongside Twisted's process API.
>I have python 2.6.3 under Mac OSX 10.5.8, and twisted
>8.2.0. Is there a work-around for this problem, or a better way to do 
>this
>with twisted? I do know that I can make a command-line call with
>reactor.callLater, and that I can return a deferred from my server 
>method,
>but I don't see how to easily accomplish the chain of calls that I 
>need,
>short of breaking up my serverMethod1 into the several sequential 
>parts, and
>calling each from the result handler of the previous one. I'd rather 
>not go
>that route, as the logic of which command-line call gets made when is
>actually quite complicated.

Are you aware that this means your server will only be able to handle 
one request at a time?  If so and that's what you're shooting for, then 
you can fix this easily, by passing False to reactor.run.  This 
disable's Twisted's own process support and lets things like 
subprocess.call work (blockingly, of course).
>What I have now looks like (enormously simplified):
>class MyPythonServer:
>
>    def serverMethod1(self, dummyPost, inputFilePath):
>        # Open inputFilePath, do stuff, save results to file2
>        subprocess.call(["command1", "file2", "file3"])
>        # Open file3, do stuff to the data, save results to file4
>        subprocess.call(["command2", "file4", "file5"])
>        # Open file5, convert data to a large string containing XML.
>        return xmlString

Of course, you can still have methods that look like this if you use 
things like inlineCallbacks (which you can, since you said you're using 
Python 2.6).  That way you preserve the style you seem to prefer and 
avoid blocking your server any time you need to launch a child process.

Jean-Paul


From glyph at twistedmatrix.com  Wed Nov  4 01:29:25 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Nov 2009 01:29:25 -0500
Subject: [Twisted-Python] Connect to an IRC server, modules.
In-Reply-To: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>
References: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>
Message-ID: <77FBAF36-27B1-4C22-9FFE-FA2C28B7AF47@twistedmatrix.com>


On Nov 2, 2009, at 9:24 AM, Alberto Piu wrote:

> first of all, I apologize for bad english. I am new with Twisted, and
> although it seems very powerful, I'm having some problems in using it.
> I'm trying to create an IRC bot, which basically does nothing. My idea
> is to write a skeleton that's improved by modules, which do different
> things in an IRC channel.

It's OK.  Your english is not so bad.  I think I understand your  
question :).  I will try to use very simple english in my answer.

> I tried to explain as better as I could. If you can, please use
> examples and speak easy (can't understand very well).
> Hope you can help me!

Your explanation is not bad.  But, the fix that you describe looks  
basically right to me.

It is hard to fix a program that I cannot see.

Can you attach a *complete*, but *simple* example, as described here: <http://sscce.org/ 
 >, and ask the question again?

Do not attach your whole IRC bot.  Remove all the parts which are not  
a part of your problem, but make sure that, if I do 'python your-irc- 
bot.py', it will run and do something.

Thanks, and good luck!



From namanvit at gmail.com  Wed Nov  4 01:43:14 2009
From: namanvit at gmail.com (naman jain)
Date: Wed, 4 Nov 2009 07:43:14 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <m2r5skaau5.fsf@valheru.db3l.homeip.net>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
Message-ID: <74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>

Hi,

Using  log.startLogging(open(logname, 'w'), setStdout=False)
very well solves the issue.. of stdout remaining untouched and log.msg()
calls going to log

Can we do this ?:
Log file gets -> both the log.msg() calls , the stdout +stderr
console -> gets stdout +stderr as usual

Regards
Naman


On Fri, Oct 30, 2009 at 9:25 PM, David Bolen <db3l.net at gmail.com> wrote:

> naman jain <namanvit at gmail.com> writes:
>
> > I wanted to log in a file and keep the console also going with it.
>
> I can read this as either:
>
>  * Keep file logs and stdout/console completely separate, or
>  * File gets explicit logs and copies of stdout, but stdout also goes to
>    console as well.
>
> The latter is something I'd more commonly do, but the former is what
> you explain further below with your rules.
>
> > I am using
> > log.startLogging(open(logname, 'w'))
> >
> > whatever documentation I could find about this API, it suggested me to
> pass
> > setStdout=False(in order to keep stdout away from putting into log)
> > somewhere in the startlogging function.
> >
> > Something like this I tried:
> > log.startLogging(sys.stdout,setStdout=False)
>
> Why did you switch to sys.stdout here?  While this will prevent
> sys.stdout and sys.stderr from being redirected, it will use
> sys.stdout for any log.msg() calls, so nothing would end up in your
> log file.
>
> > Doesnt help in solving the problem of getting both things:
> >
> > Requirement:
> > log.msg("messageforlog")    -> goes to log
> > print "message for console" -> goes to console
> >
> > Could anyone give some ideas on this?
>
> I think you had the right idea with setStdout, but changed more than
> just that when you tested it.  If you use a call like
> log.startLogging(open(logname, 'w'), setStdout=False) I believe you'll
> get what you want.  Only calls to log.msg() will go to the file, and
> stdout/stderr will be left unchanged.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091104/8f821d73/attachment-0001.htm 

From namanvit at gmail.com  Wed Nov  4 01:58:53 2009
From: namanvit at gmail.com (naman jain)
Date: Wed, 4 Nov 2009 07:58:53 +0100
Subject: [Twisted-Python] Unpedictable behaviour of transport.write call:
	Problem with return the control to reactor
Message-ID: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>

Hi,

I was trying this out:


Server code:

def dataReceived(self, data):
    if (args["cmd"] == "CHECK_IN"):
        foo = subprocess.Popen('python master.py',shell = True)
        *# this ACK notifies the client to close the connection*
        self.transport.write( self.create_message("CHECK_IN","ACK") )

I use the subprocess call , as I want to avoid threads here, and
independently launch my master.py without blocking this code.
I dont aim to have any interaction with the master.py once it is launched

Now, I see unpredictable behaviour here..
I have been trying many times, but the subprocess call does not happen
everytime !
The connection is closed by the client without the master getting launched
in some cases.

How does the transport.write behave in such cases.. Do you people see a
structural problem here.. Or adding some small delay of 2 sec before
transport.write might help?

Regards
Naman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091104/004eab79/attachment.htm 

From p.mayers at imperial.ac.uk  Wed Nov  4 08:13:36 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 04 Nov 2009 13:13:36 +0000
Subject: [Twisted-Python] Unpedictable behaviour of transport.write
 call: Problem with return the control to reactor
In-Reply-To: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>
References: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>
Message-ID: <4AF17E00.4070203@imperial.ac.uk>

naman jain wrote:
> Hi,
> 
> I was trying this out:
> 
> 
> Server code:
> 
> def dataReceived(self, data):
>     if (args["cmd"] == "CHECK_IN"):
>         foo = subprocess.Popen('python master.py',shell = True)
>         /# this ACK notifies the client to close the connection/
>         self.transport.write( self.create_message("CHECK_IN","ACK") )
> 
> I use the subprocess call , as I want to avoid threads here, and 
> independently launch my master.py without blocking this code.
> I dont aim to have any interaction with the master.py once it is launched

Don't do that. Use:

twisted.python.utils.getProcess*

...which return a deferred and work with the reactor, rather than 
against or outside it.


From piemail at tiscali.it  Wed Nov  4 15:54:11 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Wed, 4 Nov 2009 13:54:11 -0700
Subject: [Twisted-Python]  ProducerConsumerProxy problem
Message-ID: <003501ca5d90$f66b2050$d802010a@porcatile>

Hi,
I'm trying to write a simple echo server but with control flow. The program
should send back all the data it receives from a client, but if one of the
clients that are connected stop accepting the data that is sent back, my
program should tell it to stop sending data too, for preventing to run out
of memory. 
I've seen that twisted offers an iConsumer and iProducer classes, so my
class should implement both of them. I know how to write the producer part,
but I still having trouble in telling twisted that my class is a consumer
for the transport. This is because usually in a program, whenever there is
data available, the dataRecived function of the program is called, passing
the data to it, so I don't know who I can pass as a producer for my echo
class.
I know that there's a class called BasicProducerConsumerProxy in pcp that
seems to do my job, but I'm stuck in making it understand that "transport"
is both a consumer and a producer.
The code should be something like this:

Echo = protocols.pcp.BasicProducerConsumerProxy(self.transport) #register
transport as a consumer Echo.registerProducer(self.transport, True)
#register transport as a producer

But it doesn't work. Can you help me? An example will be greatly
appreciated. Thanks.

Pietro



From general at vultaire.net  Wed Nov  4 20:50:05 2009
From: general at vultaire.net (Paul Goins)
Date: Thu, 05 Nov 2009 10:50:05 +0900
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
Message-ID: <4AF22F4D.2010405@vultaire.net>

My project has 160 or so test functions spread across 29 test modules.
The layout is something like this:

project_root/
  <project>/
    <module>.py
    <module>.py
    ...
  tests/
    <test_module>.py
    <test_module>.py
    ...
    unit_tests.py

Running tests one-by-one ("trial tests.<test_module>") works perfectly.
 However, I want to test them all in one go, and can't find a "proper"
way to do it.

Currently to test it, I have a module, tests.unit_tests, which imports
all the tests from all other modules in the tests namespace via:

  from tests.<test_module_1> import *
  from tests.<test_module_2> import *
  ...

However, this is less than ideal, since if someone makes a unit test
class with the same name as one in another module, they overlap and one
ends up untested.  (We just got blindsided by this to some degree, hence
the e-mail.)

I'll probably end up just attaching the test module's name as a prefix
to each test class, but I wanted to ask, is there a better, "proper" way
of doing this?

Thanks.

- Paul Goins



From tim at commsecure.com.au  Wed Nov  4 21:02:39 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 5 Nov 2009 13:02:39 +1100
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
In-Reply-To: <4AF22F4D.2010405@vultaire.net>
References: <4AF22F4D.2010405@vultaire.net>
Message-ID: <20091105130239.788a51af@ws35.commsecure.com.au>

Paul Goins <general at vultaire.net> wrote:
> My project has 160 or so test functions spread across 29 test modules.
> The layout is something like this:
> 
> project_root/
>   <project>/
>     <module>.py
>     <module>.py
>     ...
>   tests/
>     <test_module>.py
>     <test_module>.py
>     ...
>     unit_tests.py
> 
> Running tests one-by-one ("trial tests.<test_module>") works perfectly.
>  However, I want to test them all in one go, and can't find a "proper"
> way to do it.

Does "trial tests" not work? (you probably need a tests/__init__.py)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/4d1c1c85/attachment.pgp 

From general at vultaire.net  Thu Nov  5 00:17:30 2009
From: general at vultaire.net (Paul Goins)
Date: Thu, 05 Nov 2009 14:17:30 +0900
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
In-Reply-To: <20091105144102.7f488522@ws35.commsecure.com.au>
References: <4AF22F4D.2010405@vultaire.net>	<20091105130239.788a51af@ws35.commsecure.com.au>	<4AF2444A.1040703@vultaire.net>
	<20091105144102.7f488522@ws35.commsecure.com.au>
Message-ID: <4AF25FEA.2020502@vultaire.net>

Tim Allen wrote:
> Paul Goins <general at vultaire.net> wrote:
>>> Does "trial tests" not work? (you probably need a tests/__init__.py)
>> Nope:
>>
>>   $ trial tests
>>
>>
>> -------------------------------------------------------------------------------
>>
>>   PASSED
>>
>> Nothing executes if I run it that way.  And I do have the
>> tests/__init__.py.  It's totally empty, in case it matters.
> 
> Just to be sure, your test modules are named "tests/test_foo.py",
> "tests/test_bar.py" and so forth?

That appears to be it.  I thought it was just the function names that
needed to follow the test_<foo> pattern.

I don't seem to see this documented, either...  Guess I'll add a comment
to #2443.

Thanks for the help!



From namanvit at gmail.com  Thu Nov  5 03:59:29 2009
From: namanvit at gmail.com (naman jain)
Date: Thu, 5 Nov 2009 09:59:29 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
Message-ID: <74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>

People,

Can anyone help me with this issue?

log.startLogging(open(logname,'w')
or
log.startLogging(open(logname,'w'), setStdout=True)

Both print the console output in the log. But nothing is displayed on
console! So I get a empty console
I would like to keep the console going also:

Precisely:
Console -> gets the print calls                             Not Happening
Log       -> gets the print calls + log.msg calls      Happening

I understand that this might be a trivial issue, but I am not able to figure
it out in the documentation available :(

Thanks for any help

Regards
Naman

On Wed, Nov 4, 2009 at 7:43 AM, naman jain <namanvit at gmail.com> wrote:

> Hi,
>
> Using  log.startLogging(open(logname, 'w'), setStdout=False)
> very well solves the issue.. of stdout remaining untouched and log.msg()
> calls going to log
>
> Can we do this ?:
> Log file gets -> both the log.msg() calls , the stdout +stderr
> console -> gets stdout +stderr as usual
>
> Regards
> Naman
>
>
>
> On Fri, Oct 30, 2009 at 9:25 PM, David Bolen <db3l.net at gmail.com> wrote:
>
>> naman jain <namanvit at gmail.com> writes:
>>
>> > I wanted to log in a file and keep the console also going with it.
>>
>> I can read this as either:
>>
>>  * Keep file logs and stdout/console completely separate, or
>>  * File gets explicit logs and copies of stdout, but stdout also goes to
>>    console as well.
>>
>> The latter is something I'd more commonly do, but the former is what
>> you explain further below with your rules.
>>
>> > I am using
>> > log.startLogging(open(logname, 'w'))
>> >
>> > whatever documentation I could find about this API, it suggested me to
>> pass
>> > setStdout=False(in order to keep stdout away from putting into log)
>> > somewhere in the startlogging function.
>> >
>> > Something like this I tried:
>> > log.startLogging(sys.stdout,setStdout=False)
>>
>> Why did you switch to sys.stdout here?  While this will prevent
>> sys.stdout and sys.stderr from being redirected, it will use
>> sys.stdout for any log.msg() calls, so nothing would end up in your
>> log file.
>>
>> > Doesnt help in solving the problem of getting both things:
>> >
>> > Requirement:
>> > log.msg("messageforlog")    -> goes to log
>> > print "message for console" -> goes to console
>> >
>> > Could anyone give some ideas on this?
>>
>> I think you had the right idea with setStdout, but changed more than
>> just that when you tested it.  If you use a call like
>> log.startLogging(open(logname, 'w'), setStdout=False) I believe you'll
>> get what you want.  Only calls to log.msg() will go to the file, and
>> stdout/stderr will be left unchanged.
>>
>> -- David
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/a4526509/attachment.htm 

From exarkun at twistedmatrix.com  Thu Nov  5 07:29:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 12:29:24 -0000
Subject: [Twisted-Python] Logging to both console and file (using
	twisted	logging API)?
In-Reply-To: <74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
Message-ID: <20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>

On 08:59 am, namanvit at gmail.com wrote:
>People,
>
>Can anyone help me with this issue?
>
>log.startLogging(open(logname,'w')
>or
>log.startLogging(open(logname,'w'), setStdout=True)
>
>Both print the console output in the log. But nothing is displayed on
>console! So I get a empty console
>I would like to keep the console going also:
>
>Precisely:
>Console -> gets the print calls                             Not 
>Happening
>Log       -> gets the print calls + log.msg calls      Happening
>
>I understand that this might be a trivial issue, but I am not able to 
>figure
>it out in the documentation available :(

Asking the same thing over and over again isn't going to get you an 
answer.  Try making your question more clear.  I haven't answered 
because I don't understand what you're trying to achieve.

Jean-Paul


From namanvit at gmail.com  Thu Nov  5 08:20:41 2009
From: namanvit at gmail.com (naman jain)
Date: Thu, 5 Nov 2009 14:20:41 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
Message-ID: <74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>

I ll try to rephrase it better:

I simply want the print statement to appear in both the log file and the
console.
print("goes in both") -> the log also gets this and the console also.

Thanks




On Thu, Nov 5, 2009 at 1:29 PM, <exarkun at twistedmatrix.com> wrote:

> On 08:59 am, namanvit at gmail.com wrote:
> >People,
> >
> >Can anyone help me with this issue?
> >
> >log.startLogging(open(logname,'w')
> >or
> >log.startLogging(open(logname,'w'), setStdout=True)
> >
> >Both print the console output in the log. But nothing is displayed on
> >console! So I get a empty console
> >I would like to keep the console going also:
> >
> >Precisely:
> >Console -> gets the print calls                             Not
> >Happening
> >Log       -> gets the print calls + log.msg calls      Happening
> >
> >I understand that this might be a trivial issue, but I am not able to
> >figure
> >it out in the documentation available :(
>
> Asking the same thing over and over again isn't going to get you an
> answer.  Try making your question more clear.  I haven't answered
> because I don't understand what you're trying to achieve.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/4001a719/attachment.htm 

From piemail at tiscali.it  Thu Nov  5 12:52:55 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Thu, 5 Nov 2009 10:52:55 -0700
Subject: [Twisted-Python] help needed with flow-control for push protocol
Message-ID: <002101ca5e40$ce8019a0$74d56c81@porcatile>

Hi,

I need assistance figuring out how to create a push protocol that implements
flow control.

To keep things simple, I'm trying to build a push-based echo server.  It
should
(1) accept incoming tcp connections
(2) on each connection, all data rec'd should be echo'd unchanged.
(3) should the output transport request that transmission be "paused,"
the input transport (in this case, the same socket) should be similarly
blocked.


This would seem to be a simple problem.  I think my "PushEcho" class
should implement both IConsumer and IProducer interfaces; As a consumer,
its dataRecieved method would cause it to act like a producer and call
the transport's dataReceived method.  Similarly, as a producer, it's
pause, and resume methods would be called, and they would (as a
consumer) just call the same functions in the transport.

However, I can't get the plumbing right.

Can someone help by providing pointers or some sample code?

Thanks.



From jonmills at moosesoup.com  Thu Nov  5 13:14:57 2009
From: jonmills at moosesoup.com (Jon Mills)
Date: Thu, 5 Nov 2009 18:14:57 +0000
Subject: [Twisted-Python] Twisted and wxPython
Message-ID: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>

Can anybody point me towards a nice up-to-date example of the use of
Twisted with wxPython?

I assume (hope) there's some way to bind the wx event loop into
Twisted's Reactor? Or do they need to run in separate
threads/processes?

Thanks in advance,

Jon Mills


From exarkun at twistedmatrix.com  Thu Nov  5 13:18:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 18:18:16 -0000
Subject: [Twisted-Python] Logging to both console and file (using
	twisted	logging API)?
In-Reply-To: <74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
	<74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
Message-ID: <20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>

On 01:20 pm, namanvit at gmail.com wrote:
>I ll try to rephrase it better:
>
>I simply want the print statement to appear in both the log file and 
>the
>console.
>print("goes in both") -> the log also gets this and the console also.
>
>Thanks

How about installing two log observers?

    from sys import stdout
    from twisted.python.log import FileLogObserver, startLogging, 
addObserver, msg

    # First, startLogging to capture stdout
    startLogging(stdout)

    # Now add an observer that logs to a file
    addObserver(FileLogObserver(file("foo.log")).emit)

    msg("Hello, world")
    print "Goodbye, world"

Jean-Paul


From rroberts at adobe.com  Thu Nov  5 13:19:54 2009
From: rroberts at adobe.com (Read Roberts)
Date: Thu, 5 Nov 2009 10:19:54 -0800
Subject: [Twisted-Python] Need replacement for subprocess.call within a
 pyAMF method - any suggestions?
In-Reply-To: <20091104000824.3229.1269878260.divmod.xquotient.121@localhost.localdomain>
Message-ID: <C718574A.5D2E%rroberts@adobe.com>

Hello Jean-Paul ;

Thank you very much! For my simply workflow, blocking during a reactor call is acceptable, and simply calling reactor.run with installSignalHandlers=False does allow subprocess.Popen to work.  My application is working, and I can continue development - I was totally blocked until I had this problem solved.

I have not yet learned how to use inlineCallbacks,  and will study up in this, as in the long run, I would like  to server  side to be able to handle multiple calls.

Much appreciated,
  Read Roberts

On 11/3/09 4:08 PM, "exarkun at twistedmatrix.com" <exarkun at twistedmatrix.com> wrote:

On 3 Nov, 11:55 pm, rroberts at adobe.com wrote:
>I am trying to use the twisted reactor as a basis for a Python server
>for a
>Flex app, using pyAMF.  My problem is that one  of the server methods
>requires me to run a series of command-line tools to complete parsing
>data
>from a file into an XML object, with lots of Python processing on the
>results of one command-line tool to provide the input to the next one.
>I
>have been using  subprocess.call  to invoke the command-line tools, but
>these intermittently - and frequently -  fail with an error "IOError:
>[Errno
>4] Interrupted system call".
>
>I do know that this was supposed to be fixed in twisted for Python 2.6,
>but
>it doesn't seem to be.

I'm not sure why you know this.  I sure would be great if that were the
case, but it's not.  More changes in Twisted are necessary to let things
like subprocess.call work properly alongside Twisted's process API.
>I have python 2.6.3 under Mac OSX 10.5.8, and twisted
>8.2.0. Is there a work-around for this problem, or a better way to do
>this
>with twisted? I do know that I can make a command-line call with
>reactor.callLater, and that I can return a deferred from my server
>method,
>but I don't see how to easily accomplish the chain of calls that I
>need,
>short of breaking up my serverMethod1 into the several sequential
>parts, and
>calling each from the result handler of the previous one. I'd rather
>not go
>that route, as the logic of which command-line call gets made when is
>actually quite complicated.

Are you aware that this means your server will only be able to handle
one request at a time?  If so and that's what you're shooting for, then
you can fix this easily, by passing False to reactor.run.  This
disable's Twisted's own process support and lets things like
subprocess.call work (blockingly, of course).
>What I have now looks like (enormously simplified):
>class MyPythonServer:
>
>    def serverMethod1(self, dummyPost, inputFilePath):
>        # Open inputFilePath, do stuff, save results to file2
>        subprocess.call(["command1", "file2", "file3"])
>        # Open file3, do stuff to the data, save results to file4
>        subprocess.call(["command2", "file4", "file5"])
>        # Open file5, convert data to a large string containing XML.
>        return xmlString

Of course, you can still have methods that look like this if you use
things like inlineCallbacks (which you can, since you said you're using
Python 2.6).  That way you preserve the style you seem to prefer and
avoid blocking your server any time you need to launch a child process.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/90f56d67/attachment.htm 

From kevin.horn at gmail.com  Thu Nov  5 13:43:47 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 5 Nov 2009 12:43:47 -0600
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
Message-ID: <562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>

On Thu, Nov 5, 2009 at 12:14 PM, Jon Mills <jonmills at moosesoup.com> wrote:

> Can anybody point me towards a nice up-to-date example of the use of
> Twisted with wxPython?
>
> I assume (hope) there's some way to bind the wx event loop into
> Twisted's Reactor? Or do they need to run in separate
> threads/processes?
>
> Thanks in advance,
>
> Jon Mills
>
>
I typically base my code the example that comes with Twisted.
http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py

Is this not working for you, or had you just not seen it? (It took me quite
a while to find... ;) )

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/7999fe19/attachment.htm 

From jonmills at moosesoup.com  Thu Nov  5 15:06:19 2009
From: jonmills at moosesoup.com (Jon Mills)
Date: Thu, 5 Nov 2009 20:06:19 +0000
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
	<562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>
Message-ID: <4ae373fe0911051206w20f430b1hc10be1268b8d3d38@mail.gmail.com>

Thanks Kevin,

I often find it difficult to know which Twisted examples to follow.
Googling around gives several different approaches to Twisted and wx
integration - and the recommended solution seems to have evolved over
time.

I'll take a look at the example in your link.

Thanks again

On Thu, Nov 5, 2009 at 6:43 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> On Thu, Nov 5, 2009 at 12:14 PM, Jon Mills <jonmills at moosesoup.com> wrote:
>>
>> Can anybody point me towards a nice up-to-date example of the use of
>> Twisted with wxPython?
>>
>> I assume (hope) there's some way to bind the wx event loop into
>> Twisted's Reactor? Or do they need to run in separate
>> threads/processes?
>>
>> Thanks in advance,
>>
>> Jon Mills
>>
>
> I typically base my code the example that comes with Twisted.
> http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py
>
> Is this not working for you, or had you just not seen it? (It took me quite
> a while to find... ;) )
>
> Kevin Horn
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Jon Mills
jonmills at moosesoup.com


From dripton at ripton.net  Thu Nov  5 15:14:23 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 5 Nov 2009 12:14:23 -0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
Message-ID: <20091105201423.GA26492@vidar.dreamhost.com>

On 2009.11.05 18:14:57 +0000, Jon Mills wrote:
> Can anybody point me towards a nice up-to-date example of the use of
> Twisted with wxPython?
> 
> I assume (hope) there's some way to bind the wx event loop into
> Twisted's Reactor? Or do they need to run in separate
> threads/processes?

wx has multiple event loops so reactor integration isn't as easy as it
should be.

Longer version of that answer here:

http://wiki.wxpython.org/wxPythonAndTwisted

Here's an example of doing it with threads:

https://pangalactic.us/repo/ampchat

-- 
David Ripton    dripton at ripton.net


From exarkun at twistedmatrix.com  Thu Nov  5 15:42:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 20:42:12 -0000
Subject: [Twisted-Python] help needed with flow-control for push protocol
In-Reply-To: <002101ca5e40$ce8019a0$74d56c81@porcatile>
References: <002101ca5e40$ce8019a0$74d56c81@porcatile>
Message-ID: <20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>

On 05:52 pm, piemail at tiscali.it wrote:
>Hi,
>
>I need assistance figuring out how to create a push protocol that 
>implements
>flow control.
>
>To keep things simple, I'm trying to build a push-based echo server. 
>It
>should
>(1) accept incoming tcp connections
>(2) on each connection, all data rec'd should be echo'd unchanged.
>(3) should the output transport request that transmission be "paused,"
>the input transport (in this case, the same socket) should be similarly
>blocked.
>
>This would seem to be a simple problem.  I think my "PushEcho" class
>should implement both IConsumer and IProducer interfaces;

It doesn't need to implement IConsumer.  Protocols are hooked up to 
transports via the protocol's dataReceived method.  The protocol does 
not also need to be an IConsumer implementation with a write method.
>As a consumer,
>its dataRecieved method would cause it to act like a producer and call
>the transport's dataReceived method.

TCP transports, on the other hand, are IConsumer implementations.  So 
you meant the transport's write method (it has no dataReceived method). 
So, yes, the protocol should pass all data it receives back to the 
transport.
>Similarly, as a producer, it's
>pause, and resume methods would be called, and they would (as a
>consumer) just call the same functions in the transport.

This sounds right.
>However, I can't get the plumbing right.
>
>Can someone help by providing pointers or some sample code?

Here's some untested code:

    class SmartEcho(Protocol):
        implements(IProducer)

        def pauseProducing(self):
            self.transport.pauseProducing()

        def resumeProducing(self):
            self.transport.resumeProducing()

        def stopProducing(self):
            self.transport.stopProducing()

        def connectionMade(self):
            self.transport.registerProducer(self, True)

        def dataReceived(self, bytes):
            self.transport.write(bytes)

A careful examination of this code should also reveal the fact that it 
can be shortened to a more obscure form:

    class SmartEcho(Protocol):
        def connectionMade(self):
            self.transport.registerProducer(self.transport, True)

        def dataReceived(self, bytes):
            self.transport.write(bytes)

Hope this helps,
Jean-Paul


From piemail at tiscali.it  Thu Nov  5 17:28:22 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Thu, 5 Nov 2009 15:28:22 -0700
Subject: [Twisted-Python] R: help needed with flow-control for push protocol
In-Reply-To: <20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>
References: <002101ca5e40$ce8019a0$74d56c81@porcatile>
	<20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>
Message-ID: <004f01ca5e67$49ad3150$74d56c81@porcatile>

> Here's some untested code:
> 
>     class SmartEcho(Protocol):
>         implements(IProducer)
> 
>         def pauseProducing(self):
>             self.transport.pauseProducing()
> 
>         def resumeProducing(self):
>             self.transport.resumeProducing()
> 
>         def stopProducing(self):
>             self.transport.stopProducing()
> 
>         def connectionMade(self):
>             self.transport.registerProducer(self, True)
> 
>         def dataReceived(self, bytes):
>             self.transport.write(bytes)
> 
> A careful examination of this code should also reveal the 
> fact that it can be shortened to a more obscure form:
> 
>     class SmartEcho(Protocol):
>         def connectionMade(self):
>             self.transport.registerProducer(self.transport, True)
> 
>         def dataReceived(self, bytes):
>             self.transport.write(bytes)
> 
> Hope this helps,
> Jean-Paul
> 
Thanks a lot. It definitely helped me. I knew how to set up a producer, I
just didn't know that my class was automatically going to be registered as a
consumer for transport. And I didn't know that i could call
transport.registerProducer(self.transport)! Unfortunately twisted is as
powerful as poorly documented sometimes.

Pietro



From radix at twistedmatrix.com  Thu Nov  5 23:00:26 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 5 Nov 2009 23:00:26 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
Message-ID: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>

I'm working on it. The core NEWS file is done I think. NEWS for other
projects will be worked on tomorrow.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From glyph at twistedmatrix.com  Thu Nov  5 23:05:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Nov 2009 23:05:42 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <d9047f780911052005w35380335q14cc5e48a69c9dc4@mail.gmail.com>

On Thu, Nov 5, 2009 at 11:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> Subject: Twisted 9, do you want it


YES


> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>

WOOOOOO
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/e50f7e36/attachment.htm 

From clemesha at gmail.com  Thu Nov  5 23:07:16 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Thu, 5 Nov 2009 20:07:16 -0800
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <d272f0690911052007p7688254dh32585cc21972ce85@mail.gmail.com>

Yes, do want! Thanks for doing this.

On Thu, Nov 5, 2009 at 8:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/b26dccda/attachment.htm 

From nathan.stocks at gmail.com  Fri Nov  6 00:36:46 2009
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Nov 2009 22:36:46 -0700
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>

On Thu, Nov 5, 2009 at 9:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.

For those of us who don't know, where's the new core NEWS file
located?  I checked trunk/, tags/, and branches/ on the trac source
browser and couldn't a 9.0 NEWS file...

~ Nathan


From radix at twistedmatrix.com  Fri Nov  6 00:54:08 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 6 Nov 2009 00:54:08 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>
Message-ID: <60ed19d40911052154o4cd822a5mac5aaa9cc4ccc1a3@mail.gmail.com>

It's here:

http://twistedmatrix.com/trac/browser/branches/releases/release-9.0.x-3860-2/twisted/topfiles/NEWS

On Fri, Nov 6, 2009 at 12:36 AM, Nathan <nathan.stocks at gmail.com> wrote:
> On Thu, Nov 5, 2009 at 9:00 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> I'm working on it. The core NEWS file is done I think. NEWS for other
>> projects will be worked on tomorrow.
>
> For those of us who don't know, where's the new core NEWS file
> located? ?I checked trunk/, tags/, and branches/ on the trac source
> browser and couldn't a 9.0 NEWS file...
>
> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From cary.hull at gmail.com  Fri Nov  6 00:57:50 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Thu, 5 Nov 2009 21:57:50 -0800
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <3fce0ae70911052157v5d6b6f1fs6a05975e7510c642@mail.gmail.com>

Yes. (thanks!)

On Thu, Nov 5, 2009 at 8:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091105/a99e53d7/attachment.htm 

From leyssw at ihug.co.nz  Fri Nov  6 02:12:17 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Fri, 06 Nov 2009 20:12:17 +1300
Subject: [Twisted-Python] Gridspy - a new project using Twisted
In-Reply-To: <4AE54690.9030907@ihug.co.nz>
References: <4AE54690.9030907@ihug.co.nz>
Message-ID: <4AF3CC51.7050107@ihug.co.nz>

Just a quick update, since the last time I mentioned our system the 
dashboard was still rather rough. Since then I have added a better UI, 
exposed the live data more, added little JQuery graphs along with 
history and CSV export. All that in 1 week worth of evenings - isn't 
Python great?

Please check out the dashboard and drop me an email if your company 
wants to cut its power bill by 10 - 20% through monitoring its power usage:
http://your.gridspy.co.nz/powertech

Could someone add me to the projects page? You could use the above link 
and the following text
Gridspy - Live power monitoring and analysis

The Nexus costs $685 USD, monitors 3 different circuits and uplinks 
collected data to the site via ethernet. We also have a wireless device 
called the Gridspy that costs $495 USD, monitors 6 circuits (or a 
variety of other things) and talks to the Nexus wirelessly to upload data.

More info on the devices here:
http://www.gridspy.co.nz/nexus-and-gridspy-our-sensor-solution.html

Any comments, questions or suggestions are welcome.

Thanks!

-Tom

> My previous email:
>
> Hi Everyone
>
> I would like to introduce my project for the 
> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted page. We use 
> twisted as the central server that talks to many power measurement 
> sensors in the field.
>
> "
> Gridspy provides you with an interactive view of resource usage in 
> your building. It gives you hard data on your consumption patterns and 
> helps you to make informed decisions.
> ...
> The Gridspy allows you to access and monitor your consumption patterns 
> in real-time using a standard web browser on your PC, laptop or mobile 
> phone. The data is presented in high resolution and updated each 
> second as you watch. The moment a light is turned on in your house, 
> you can see the change on your Gridspy dashboard from across the room 
> or across the planet.
> "
> Our homepage is here http://www.gridspy.co.nz/
> a running demo is here http://your.gridspy.co.nz/powertech
>
> And you can read more about the role of our twisted backend here: 
> http://blog.gridspy.co.nz/2009/10/realtime-data-from-sensors-to-browsers.html
>
> "
> ... The nexus then collects those sensor samples from the nearby 
> Gridspies, bundles it up with its own data and uploads it to our 
> central servers. To collect the data we use a custom application 
> written using the excellent Twisted framework 
> <http://twistedmatrix.com/>. Every single reading gets instant 
> attention: it is evaluated for real-time events, queued to be stored 
> in the database and finally forwarded to watching dashboard users. 
> Processing the data stream live on the server opens up many exciting 
> possible features that I look forward to discussing in future blog 
> posts. By the time that the sample reaches the server, it is about 0.2 
> seconds old. ...
> "
>
> It has been a great framework to work with. My sincere thanks goes to 
> everyone who has ever contributed to this project. Job very well done!
>
> -Tom
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091106/5a052196/attachment.htm 

From josef.robert.novak at gmail.com  Fri Nov  6 02:28:05 2009
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Fri, 6 Nov 2009 16:28:05 +0900
Subject: [Twisted-Python] twisted server for recording streaming audio
Message-ID: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>

Hi,

  I'm interested  in using twisted to build a server for recording streaming
audio.  I've spent some time googling and looking through the archives but
haven't been able to find much in the way of examples for this sort of
usage.  To be clear, I'm not trying to stream media from the server to the
client, but want to stream the audio from (potentially multiple) clients to
the server, where it will be recorded and possibly later annotated for
reference.

  The closest possible example of this sort of usage scenario that I was
able to find was shtoom, but I wasn't able to get very far with that, as the
source does not seem to be available, despite the site still being up
(perhaps I just couldn't find it ).

   Does anyone know of any working examples of such usage that might be
easily adapted.  I'm really only looking for the simplest possible base
example that would allow me to connect one or more clients over localhost
and stream the audio to the server.
   On the other hand, perhaps it is better to just go with the bundled
SocketServer module to start with?

Cheers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091106/53bc1320/attachment-0001.htm 

From namanvit at gmail.com  Fri Nov  6 02:58:32 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 6 Nov 2009 08:58:32 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
	<74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
	<20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>
Message-ID: <74b1256b0911052358h70f31a93s4d789a094bdfa9ce@mail.gmail.com>

Thanks. that does the job for me very well.

On Thu, Nov 5, 2009 at 7:18 PM, <exarkun at twistedmatrix.com> wrote:

> On 01:20 pm, namanvit at gmail.com wrote:
> >I ll try to rephrase it better:
> >
> >I simply want the print statement to appear in both the log file and
> >the
> >console.
> >print("goes in both") -> the log also gets this and the console also.
> >
> >Thanks
>
> How about installing two log observers?
>
>    from sys import stdout
>    from twisted.python.log import FileLogObserver, startLogging,
> addObserver, msg
>
>    # First, startLogging to capture stdout
>    startLogging(stdout)
>
>    # Now add an observer that logs to a file
>    addObserver(FileLogObserver(file("foo.log")).emit)
>
>    msg("Hello, world")
>    print "Goodbye, world"
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091106/d47707d9/attachment.htm 

From david.lyon at preisshare.net  Fri Nov  6 05:10:22 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Fri, 06 Nov 2009 05:10:22 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
Message-ID: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>


Hi All,

Glyph mentioned on python-dev that he was after assistance with
code reviews.

I would like to offer some assistance. I've been developing python
for some time and I have a knowledge of prior C++ async patterns
such as ACE. More currently I have a reasonable knowledge of
protocols such as jabber and so forth.

If there is any way that I might be of assistance, please don't
hesitate to ask.

David



From exarkun at twistedmatrix.com  Fri Nov  6 07:57:57 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 12:57:57 -0000
Subject: [Twisted-Python] Gridspy - a new project using Twisted
In-Reply-To: <4AF3CC51.7050107@ihug.co.nz>
References: <4AE54690.9030907@ihug.co.nz>
	<4AF3CC51.7050107@ihug.co.nz>
Message-ID: <20091106125757.3229.101814281.divmod.xquotient.181@localhost.localdomain>

On 07:12 am, leyssw at ihug.co.nz wrote:
>Just a quick update, since the last time I mentioned our system the 
>dashboard was still rather rough. Since then I have added a better UI, 
>exposed the live data more, added little JQuery graphs along with 
>history and CSV export. All that in 1 week worth of evenings - isn't 
>Python great?

Awesome :)
>Please check out the dashboard and drop me an email if your company 
>wants to cut its power bill by 10 - 20% through monitoring its power 
>usage:
>http://your.gridspy.co.nz/powertech
>
>Could someone add me to the projects page? You could use the above link 
>and the following text
>Gridspy - Live power monitoring and analysis

Added!

Jean-Paul
>The Nexus costs $685 USD, monitors 3 different circuits and uplinks 
>collected data to the site via ethernet. We also have a wireless device 
>called the Gridspy that costs $495 USD, monitors 6 circuits (or a 
>variety of other things) and talks to the Nexus wirelessly to upload 
>data.
>
>More info on the devices here:
>http://www.gridspy.co.nz/nexus-and-gridspy-our-sensor-solution.html
>
>Any comments, questions or suggestions are welcome.
>
>Thanks!
>
>-Tom


From exarkun at twistedmatrix.com  Fri Nov  6 08:01:33 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 13:01:33 -0000
Subject: [Twisted-Python] twisted server for recording streaming audio
In-Reply-To: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>
References: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>
Message-ID: <20091106130133.3229.1083851406.divmod.xquotient.187@localhost.localdomain>

On 07:28 am, josef.robert.novak at gmail.com wrote:
>Hi,
>
>  I'm interested  in using twisted to build a server for recording 
>streaming
>audio.  I've spent some time googling and looking through the archives 
>but
>haven't been able to find much in the way of examples for this sort of
>usage.  To be clear, I'm not trying to stream media from the server to 
>the
>client, but want to stream the audio from (potentially multiple) 
>clients to
>the server, where it will be recorded and possibly later annotated for
>reference.
>
>  The closest possible example of this sort of usage scenario that I was
>able to find was shtoom, but I wasn't able to get very far with that, 
>as the
>source does not seem to be available, despite the site still being up
>(perhaps I just couldn't find it ).
>
>   Does anyone know of any working examples of such usage that might be
>easily adapted.  I'm really only looking for the simplest possible base
>example that would allow me to connect one or more clients over 
>localhost
>and stream the audio to the server.
>   On the other hand, perhaps it is better to just go with the bundled
>SocketServer module to start with?

"Stream" doesn't mean a whole lot - at least not specifically.  The only 
interesting thing it really implies, I think, is that the data you're 
sending only comes into existence shortly before you send it.

The way to stream audio with Twisted is just like the way you would send 
any other data with Twisted.  Open a connection and start writing to it. 
For documentation about how to do this, see the client and server 
howtos:

  http://twistedmatrix.com/projects/core/documentation/howto/clients.html
  http://twistedmatrix.com/projects/core/documentation/howto/servers.html

If you run into specific problems or have any more specific questions, 
don't hesitate to ask. :)

Jean-Paul


From kevin.horn at gmail.com  Fri Nov  6 10:16:14 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 6 Nov 2009 09:16:14 -0600
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <562bcc10911060716l77297472p4c346ec93d26ad98@mail.gmail.com>

On Thu, Nov 5, 2009 at 10:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
>
Huzzah!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091106/ab271f29/attachment.htm 

From exarkun at twistedmatrix.com  Fri Nov  6 17:49:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 22:49:53 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
Message-ID: <20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>

On 10:10 am, david.lyon at preisshare.net wrote:
>
>Hi All,
>
>Glyph mentioned on python-dev that he was after assistance with
>code reviews.
>
>I would like to offer some assistance. I've been developing python
>for some time and I have a knowledge of prior C++ async patterns
>such as ACE. More currently I have a reasonable knowledge of
>protocols such as jabber and so forth.
>
>If there is any way that I might be of assistance, please don't
>hesitate to ask.

Hi David,

Thanks for the offer!  Twisted would absolutely benefit from more 
assistance. :)  There are quite a few things that you could do which 
would help out immensely:

  - Ticket reviews, as Glyph mentioned.  Until you get more familiar with 
various parts of Twisted, you probably want to avoid giving a proposed 
change (ie a branch or a patch) a thumbs up - but it's rare that the 
first time a change is submitted for review it's ready for a thumbs up 
anyway, so reviews you can do of tickets to point out what additional 
work is necessary would be super useful.  This lets the contributor get 
on with doing useful work (instead of waiting and waiting for a review) 
and lets people with more Twisted experience focus on things that their 
experience is actually necessary for.

  - Development, either on tickets with the "easy" keyword (at least 
initially), or, even better, on tickets which have already been reviewed 
one or more times and still require some work to be acceptable.  There 
are unfortunately quite a few tickets which have a proposed change which 
has been reviewed but for which the original contributor has 
disappeared.  These are often pretty straightforward to get into 
acceptable shape, so this is a high impact area in which to do work.

  - Triage.  Lots of duplicates are filed in the issue tracker.  Closing 
these as such (with a link to the existing ticket, and another link on 
the existing ticket to the duplicate) makes it that much easier to make 
sense of all the other open tickets (of which there are too many even 
without counting duplicates).

  - Website.  Our front page needs an overhaul.  It's too hard for people 
new to Twisted to get the information they need from the current front 
page.  We should have a goal-oriented page that makes it easy for 
someone who just knows "I want to write a jabber client" to get to the 
Twisted Words page, the jabber/xmpp examples, the Twisted Words 
examples, etc.

If any of these sound interesting to you, dive in!  You might want to 
hop on IRC, #twisted on irc.freenode.net, to talk about things in more 
detail, too.

Jean-Paul


From ssteinerx at gmail.com  Fri Nov  6 19:48:14 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Fri, 6 Nov 2009 19:48:14 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
Message-ID: <94E343C9-EE60-422A-947F-DE422320181B@gmail.com>


On Nov 6, 2009, at 5:49 PM, exarkun at twistedmatrix.com wrote:

>  - Website.  Our front page needs an overhaul.  It's too hard for  
> people
> new to Twisted to get the information they need from the current front
> page.  We should have a goal-oriented page that makes it easy for
> someone who just knows "I want to write a jabber client" to get to the
> Twisted Words page, the jabber/xmpp examples, the Twisted Words
> examples, etc.

I wonder whether I could offer anything in terms of getting the  
Twisted site onto better hosting.  I
t's often unreachable, and also often unusably slow but I'm not sure  
whether that's a horsepower or software issue, or both.

I have lots of server space in good quarters so if that's of interest  
please have whoever would be in charge of that contact me off-list.

S



From exarkun at twistedmatrix.com  Fri Nov  6 19:54:38 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 00:54:38 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
Message-ID: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>

On 12:48 am, ssteinerx at gmail.com wrote:
>
>On Nov 6, 2009, at 5:49 PM, exarkun at twistedmatrix.com wrote:
>>  - Website.  Our front page needs an overhaul.  It's too hard for
>>people
>>new to Twisted to get the information they need from the current front
>>page.  We should have a goal-oriented page that makes it easy for
>>someone who just knows "I want to write a jabber client" to get to the
>>Twisted Words page, the jabber/xmpp examples, the Twisted Words
>>examples, etc.
>
>I wonder whether I could offer anything in terms of getting the
>Twisted site onto better hosting.  I
>t's often unreachable, and also often unusably slow but I'm not sure
>whether that's a horsepower or software issue, or both.
>
>I have lots of server space in good quarters so if that's of interest
>please have whoever would be in charge of that contact me off-list.

As far as I can tell, these problems are due solely to the quality of 
trac.  There is no indication that they will disappear through only an 
improvement of the hardware the site is hosted on (unless we consider a 
really amazing improvement, something on the order of 10x faster CPU and 
disk than what we have now, a 3GHz P4 and contemporary disks).

I would be happy to be mistaken in this, though.

Jean-Paul


From ssteinerx at gmail.com  Fri Nov  6 20:11:05 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Fri, 6 Nov 2009 20:11:05 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>


On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
> As far as I can tell, these problems are due solely to the quality of
> trac.  There is no indication that they will disappear through only an
> improvement of the hardware the site is hosted on (unless we  
> consider a
> really amazing improvement, something on the order of 10x faster CPU  
> and
> disk than what we have now, a 3GHz P4 and contemporary disks).

Not to be overly blunt, but there are other trac installations running  
on far less capable hardware that don't suck anywhere near as hard.   
That's not to say trac is great, but it isn't near this bad in many,  
many other places.

I don't know anything about the history of this particular  
installation, what else is running on the server etc. but I don't  
think it's trac as trac.  It may be trac as installed in this  
particular situation, with whatever historical mutilations have been  
performed on it, with the particular versions of this and that.

Dunno, just trying to find a way to help with my very, very limited  
time.

S





From exarkun at twistedmatrix.com  Fri Nov  6 21:59:19 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 02:59:19 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
Message-ID: <20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>

On 01:11 am, ssteinerx at gmail.com wrote:
>
>On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
>>As far as I can tell, these problems are due solely to the quality of
>>trac.  There is no indication that they will disappear through only an
>>improvement of the hardware the site is hosted on (unless we
>>consider a
>>really amazing improvement, something on the order of 10x faster CPU
>>and
>>disk than what we have now, a 3GHz P4 and contemporary disks).
>
>Not to be overly blunt, but there are other trac installations running
>on far less capable hardware that don't suck anywhere near as hard.
>That's not to say trac is great, but it isn't near this bad in many,
>many other places.

Do you know roughly how much traffic any of those installations deal 
with?  We do around 50k hits per day, which is basically maxing out our 
hardware.  I have the sense that most trac sites don't handle this much 
traffic.
>I don't know anything about the history of this particular
>installation, what else is running on the server etc. but I don't
>think it's trac as trac.  It may be trac as installed in this
>particular situation, with whatever historical mutilations have been
>performed on it, with the particular versions of this and that.
>
>Dunno, just trying to find a way to help with my very, very limited
>time.

Several people have spent non-trivial amounts of time looking at this. 
I'm not sure what improvements can be made with only limited additional 
input.

Do you know of any relevant resources which we may have overlooked?  Are 
there guides to running a working trac site?  Tips about special indexes 
to create in the database?  Something?

Jean-Paul


From david.lyon at preisshare.net  Fri Nov  6 23:43:24 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Fri, 06 Nov 2009 23:43:24 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>

On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
> On 12:48 am, ssteinerx at gmail.com wrote:
> As far as I can tell, these problems are due solely to the quality of 
> trac.  There is no indication that they will disappear through only an 
> improvement of the hardware the site is hosted on (unless we consider a 
> really amazing improvement, something on the order of 10x faster CPU and 
> disk than what we have now, a 3GHz P4 and contemporary disks).

I suspect that Steve has access to a server farm that has processing power 
several orders of magnitude above the single machine you have.

It might be worth following it up.

David



From exarkun at twistedmatrix.com  Sat Nov  7 08:32:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 13:32:28 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
Message-ID: <20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>

On 04:43 am, david.lyon at preisshare.net wrote:
>On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
>>On 12:48 am, ssteinerx at gmail.com wrote:
>>As far as I can tell, these problems are due solely to the quality of
>>trac.  There is no indication that they will disappear through only an
>>improvement of the hardware the site is hosted on (unless we consider 
>>a
>>really amazing improvement, something on the order of 10x faster CPU 
>>and
>>disk than what we have now, a 3GHz P4 and contemporary disks).
>
>I suspect that Steve has access to a server farm that has processing 
>power
>several orders of magnitude above the single machine you have.
>
>It might be worth following it up.

A server farm doesn't buy us anything, as trac can't be scaled up across 
multiple hosts (or even multiple CPUs on a single host).

Jean-Paul


From david.lyon at preisshare.net  Sat Nov  7 08:51:36 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Sat, 07 Nov 2009 08:51:36 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
Message-ID: <851631c21c9bb89c1b3fda303e176086@preisshare.net>

Hi Jean-Paul,

On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:

> A server farm doesn't buy us anything, as trac can't be scaled up across 
> multiple hosts (or even multiple CPUs on a single host).

I'm surprised to hear that.

Usually replication of servers for read requests works well
with dns sharing. 

Does Trac not run a database? that can go on another machine and
lighten the load.

Anyway, it's your call. Keep up the good work.

David


From exarkun at twistedmatrix.com  Sat Nov  7 09:07:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 14:07:23 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <851631c21c9bb89c1b3fda303e176086@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
	<851631c21c9bb89c1b3fda303e176086@preisshare.net>
Message-ID: <20091107140723.3229.733434702.divmod.xquotient.291@localhost.localdomain>

On 01:51 pm, david.lyon at preisshare.net wrote:
>Hi Jean-Paul,
>
>On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>>A server farm doesn't buy us anything, as trac can't be scaled up 
>>across
>>multiple hosts (or even multiple CPUs on a single host).
>
>I'm surprised to hear that.
>
>Usually replication of servers for read requests works well
>with dns sharing.
>
>Does Trac not run a database? that can go on another machine and
>lighten the load.
>
>Anyway, it's your call. Keep up the good work.

Part of the trouble is that there are no trac requests which are read- 
only.  Even anonymous view requests do things to the session table. 
That could probably be overcome with some coding.  Perhaps someone would 
like to work on that?  It would be useful, although there may be better 
ways to spend trac maintenance time (but maybe not, who knows!).

Jean-Paul


From ssteinerx at gmail.com  Sat Nov  7 09:43:36 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:43:36 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
	<20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>
Message-ID: <EC4656B4-5389-4150-AB28-E9517DDC4D00@gmail.com>


On Nov 6, 2009, at 9:59 PM, exarkun at twistedmatrix.com wrote:

> On 01:11 am, ssteinerx at gmail.com wrote:
>>
>> On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
>>> As far as I can tell, these problems are due solely to the quality  
>>> of
>>> trac.  There is no indication that they will disappear through  
>>> only an
>>> improvement of the hardware the site is hosted on (unless we
>>> consider a
>>> really amazing improvement, something on the order of 10x faster CPU
>>> and
>>> disk than what we have now, a 3GHz P4 and contemporary disks).
>>
>> Not to be overly blunt, but there are other trac installations  
>> running
>> on far less capable hardware that don't suck anywhere near as hard.
>> That's not to say trac is great, but it isn't near this bad in many,
>> many other places.
>
> Do you know roughly how much traffic any of those installations deal
> with?  We do around 50k hits per day, which is basically maxing out  
> our
> hardware.  I have the sense that most trac sites don't handle this  
> much
> traffic.

I'm not sure.  That sounds like a lot for trac but I don't really know.

>> Dunno, just trying to find a way to help with my very, very limited
>> time.
>
> Several people have spent non-trivial amounts of time looking at this.
> I'm not sure what improvements can be made with only limited  
> additional
> input.

I know, and I'm not trying to be flip or anything like it.  I hate to  
ask, but how much memory is in the box?  If it's memory bound with  
that many hits, another couple of gigs could work wonders.  Hell, I'll  
even buy them send them to the hosting company if it comes down to it.

> Do you know of any relevant resources which we may have overlooked?   
> Are
> there guides to running a working trac site?  Tips about special  
> indexes
> to create in the database?  Something?

Sorry to say, my early experiences with Trac were so bad, I just quit.

Maybe the thing to do is pull together the statistics (is there a  
module for this), and just ask the trac devs for some help.   I'd be  
happy to spearhead that if I could be of some help in that capacity.

S





From ssteinerx at gmail.com  Sat Nov  7 09:47:20 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:47:20 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
Message-ID: <99848275-3E81-4576-9B86-5609ED81BD2F@gmail.com>


On Nov 6, 2009, at 11:43 PM, David Lyon wrote:

> On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
>> On 12:48 am, ssteinerx at gmail.com wrote:
>> As far as I can tell, these problems are due solely to the quality of
>> trac.  There is no indication that they will disappear through only  
>> an
>> improvement of the hardware the site is hosted on (unless we  
>> consider a
>> really amazing improvement, something on the order of 10x faster  
>> CPU and
>> disk than what we have now, a 3GHz P4 and contemporary disks).
>
> I suspect that Steve has access to a server farm that has processing  
> power
> several orders of magnitude above the single machine you have.

Uh, I have access to all of Rackspace, Amazon, Elastic Cloud etc.,  
just like anyone else and also some servers of our own, the smallest  
of which is a dual quad-core beast with 16gb of memory and 500gb of  
Raid 10 storage constantly mirrored to a SAN.  It isn't all dedicated  
to a single job (obviously) but there's some horsepower to spare ;-).

S



From ssteinerx at gmail.com  Sat Nov  7 09:48:25 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:48:25 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <851631c21c9bb89c1b3fda303e176086@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
	<851631c21c9bb89c1b3fda303e176086@preisshare.net>
Message-ID: <C38535FC-8267-4162-B67C-1F27822CBC8D@gmail.com>


On Nov 7, 2009, at 8:51 AM, David Lyon wrote:

> Hi Jean-Paul,
>
> On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>
>> A server farm doesn't buy us anything, as trac can't be scaled up  
>> across
>> multiple hosts (or even multiple CPUs on a single host).
>
> I'm surprised to hear that.
>
> Usually replication of servers for read requests works well
> with dns sharing.
>
> Does Trac not run a database? that can go on another machine and
> lighten the load.
>
> Anyway, it's your call. Keep up the good work.

I think the best option may just be to collect machine, database, and  
usage stats and ask the trac guys for help.

S



From leyssw at ihug.co.nz  Sat Nov  7 17:41:18 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 11:41:18 +1300
Subject: [Twisted-Python] Twisted webserver performance issues (was
	volunteer...)
In-Reply-To: <mailman.5.1257613202.4566.twisted-python@twistedmatrix.com>
References: <mailman.5.1257613202.4566.twisted-python@twistedmatrix.com>
Message-ID: <4AF5F78E.7050602@ihug.co.nz>


Isn't the simplest option to place a decent reverse proxy between the 
webserver and our clients?

For example, varnish will cache and proxy simple GETs, so simple views 
of the front page and docs (which I imagine is a large chunk of the 
traffic) will be offloaded from the webserver:
http://varnish.projects.linpro.no/wiki/VarnishFeatures

Also, is the current installation (Db, apache + trac) all on one machine 
or are the DB and the webserver split already?

These would be easy ways to throw more hardware at the problem.

What is the current web-server configuration?
Can you share traffic stats for the top 20 pages, so we get an idea of 
where the load is?

-Tom

> From: "ssteinerX at gmail.com" <ssteinerx at gmail.com>
> Subject: Re: [Twisted-Python] Volunteer for twisted code Reviews and
> 	Commits
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <C38535FC-8267-4162-B67C-1F27822CBC8D at gmail.com>
> Content-Type: text/plain; charset=us-ascii; format=flowed; delsp=yes
>
>
> On Nov 7, 2009, at 8:51 AM, David Lyon wrote:
>
>   
>> Hi Jean-Paul,
>>
>> On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>>
>>     
>>> A server farm doesn't buy us anything, as trac can't be scaled up  
>>> across
>>> multiple hosts (or even multiple CPUs on a single host).
>>>       
>> I'm surprised to hear that.
>>
>> Usually replication of servers for read requests works well
>> with dns sharing.
>>
>> Does Trac not run a database? that can go on another machine and
>> lighten the load.
>>
>> Anyway, it's your call. Keep up the good work.
>>     
>
> I think the best option may just be to collect machine, database, and  
> usage stats and ask the trac guys for help.
>
> S
>
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 68, Issue 12
> **********************************************
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/44fcd2b7/attachment.htm 

From exarkun at twistedmatrix.com  Sat Nov  7 18:05:51 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 23:05:51 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
Message-ID: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>

On 10:41 pm, leyssw at ihug.co.nz wrote:
>
>Isn't the simplest option to place a decent reverse proxy between the 
>webserver and our clients?

Possibly so!  I gave this a half-hearted attempted a few weeks ago but 
quickly gave up.  If someone who is familiar with configuring such a 
proxy would like to help out, perhaps we can get something useful up and 
running.
>
>For example, varnish will cache and proxy simple GETs, so simple views 
>of the front page and docs (which I imagine is a large chunk of the 
>traffic) will be offloaded from the webserver:
>http://varnish.projects.linpro.no/wiki/VarnishFeatures
>
>Also, is the current installation (Db, apache + trac) all on one 
>machine or are the DB and the webserver split already?

They're all on one machine.  Changing this is an expensive proposition 
with a hard to predict payoff, so it's rather low on the list of ideas 
to try.
>These would be easy ways to throw more hardware at the problem.
>
>What is the current web-server configuration?

Can you be more specific about which configuration you're interested in?
>Can you share traffic stats for the top 20 pages, so we get an idea of 
>where the load is?

Yep.  Here are counts for the last few days.  Rank, request count, URL.

1)      22058   /trac/
2)      8742 
/trac/attachment/wiki/TSF/SponsorLogos/seomoves.png?format=raw
3)      8646 
/trac/attachment/wiki/TSF/SponsorLogos/zenoss.2.png?format=raw
4)      8550    /trac/attachment/wiki/TSF/SponsorLogos/Appropriate- 
Solutions-Inc.gif?format=raw
5)      8499 
/trac/attachment/wiki/TSF/SponsorLogos/securitymetrics.png?format=raw
6)      3075    /trac/wiki/Documentation
7)      2615 /trac/timeline?changeset=on&max=100&daysback=10&format=rss
8)      2448    /trac/wiki/Downloads
9)      1788    /trac/wiki/FrequentlyAskedQuestions
10)     1356    /trac/wiki
11)     1019    /trac/wiki/TwistedProject
12)     966     /trac/wiki/TracGuide
13)     828     /trac/wiki/TwistedWeb
14)     814     /trac/robots.txt
15)     781     /trac/search
16)     710     /trac/wiki/TwistedProjects
17)     662     /trac/wiki/WikiStart?format=txt
18)     605     /trac/wiki/TwistedAdvantage
19)     595     /trac/report/9
20)     590 
/trac/timeline?milestone=on&ticket=on&changeset=on&wiki=on&max=50&daysback=90&format=rss

Looking at this, I'm reminded that we should try moving the sponsor 
logos to somewhere else

Unfortunately one thing we don't know is the relative cost of serving 
each of these URLs.  The sponsor logos, while accounting for a 
significant number requests, may actually be a very small contribution 
to overall load.

Anyhow, thanks!

Jean-Paul


From ssteinerx at gmail.com  Sat Nov  7 18:56:07 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 18:56:07 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
Message-ID: <320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>


On Nov 7, 2009, at 6:05 PM, exarkun at twistedmatrix.com wrote:
> Looking at this, I'm reminded that we should try moving the sponsor
> logos to somewhere else

1> Move any images to CDN of any description (Cloud Files @ rackspace  
does this for free, if I remember correctly, included in the cost of  
storage; I'd be happy to give you some of mine)

2> None of your main content has expires headers on it -- without  
that, they're not really cacheable, so images, css, etc are getting  
loaded every time.

S



From ellisonbg.net at gmail.com  Sat Nov  7 20:18:41 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sat, 7 Nov 2009 17:18:41 -0800
Subject: [Twisted-Python] Daemon processes on windows
Message-ID: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>

Hi,

I have a server-like process that uses twisted.  I need it to daemonize
itself and on linux/os x I am simply
using the daemonize function from twistd.  This works fine.  What about
Windows though....I saw that the
win32 version of twistd doesn't have (unless I am missing it) the ability to
daemonize a process.

Is is simply impossible to daemonize a process on windows?  If so, is there
any way to have a child
process on windows ignore SIGINT send to the parent?

Cheers and thanks,

Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091107/7d485d4b/attachment.htm 

From exarkun at twistedmatrix.com  Sat Nov  7 20:23:34 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 01:23:34 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
	<320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>
Message-ID: <20091108012334.3229.1450763599.divmod.xquotient.340@localhost.localdomain>

On 7 Nov, 11:56 pm, ssteinerx at gmail.com wrote:
>
>On Nov 7, 2009, at 6:05 PM, exarkun at twistedmatrix.com wrote:
>>Looking at this, I'm reminded that we should try moving the sponsor
>>logos to somewhere else
>
>1> Move any images to CDN of any description (Cloud Files @ rackspace
>does this for free, if I remember correctly, included in the cost of
>storage; I'd be happy to give you some of mine)

Moving them to somewhere on twistedmatrix.com where they might be cached 
and don't need to involve trac to be served would probably be a good 
enough start.  That's where most of the effort is anyway (as URLs will 
need changing on various pages).
>2> None of your main content has expires headers on it -- without
>that, they're not really cacheable, so images, css, etc are getting
>loaded every time.

Yes.  That's one of trac's problems.

Jean-Paul


From exarkun at twistedmatrix.com  Sat Nov  7 20:25:47 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 01:25:47 -0000
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
Message-ID: <20091108012547.3229.54103218.divmod.xquotient.344@localhost.localdomain>

On 01:18 am, ellisonbg.net at gmail.com wrote:
>Hi,
>
>I have a server-like process that uses twisted.  I need it to daemonize
>itself and on linux/os x I am simply
>using the daemonize function from twistd.  This works fine.  What about
>Windows though....I saw that the
>win32 version of twistd doesn't have (unless I am missing it) the 
>ability to
>daemonize a process.
>
>Is is simply impossible to daemonize a process on windows?  If so, is 
>there
>any way to have a child
>process on windows ignore SIGINT send to the parent?

Windows doesn't really have daemons the same way POSIX does.  It has, 
instead, "NT services".  It would be super excellent for twistd to 
support these somehow.  Cory Dodt did some work on this years back, I 
think, but it never reached a point where it was suitable for inclusion. 
It might be interesting to review that work and see if someone can pick 
up where he left off.  You can find his code in svn in 
/sandbox/moonfallen/ntsvc.

Jean-Paul


From ziga.seilnacht at gmail.com  Sat Nov  7 21:21:57 2009
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sun, 08 Nov 2009 03:21:57 +0100
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
Message-ID: <4AF62B45.8030105@gmail.com>

Brian Granger wrote:
> Hi,
> 
> I have a server-like process that uses twisted.  I need it to daemonize
> itself and on linux/os x I am simply
> using the daemonize function from twistd.  This works fine.  What about
> Windows though....I saw that the
> win32 version of twistd doesn't have (unless I am missing it) the ability to
> daemonize a process.
> 
> Is is simply impossible to daemonize a process on windows?  If so, is there
> any way to have a child
> process on windows ignore SIGINT send to the parent?
> 
> Cheers and thanks,
> 
> Brian
> 

It is possible to daemonize a process on Windows. I experimented with 
adding that support to the twistd script, but got swamped with other 
work and couldn't finish it. Below is the code that I have so far. You 
can save it in a module and call the daemonize() function from your script.

The process of daemonization is similar to the one on UNIX -- you have 
to spawn a child process twice, the first child is responsible for 
breaking away from any job objects (somewhat similar to becoming a 
session leader on UNIX), becoming a new process group leader and closing 
all handles (file descriptors) that might have been inherited.

The second child has to open dummy std* files and a new (hidden) 
console, otherwise the signals stop working. There is a slight 
complication with window stations and desktops. Each console creates at 
least one window and some other user objects, so we have to create
a separate desktop, or other processes would be able to manipulate them 
  and send us arbitrary (Windows) messages.

Regards,
Ziga



import os
import sys
import msvcrt

import win32con
import win32process
import win32security
import win32service

from twisted.python import win32



def getPythonArgs():
     """
     Return the list of command line args that were used to start
     the current Python interpreter and were not stored in C{sys.argv}.

     These are the options that control the Python interpreter itself,
     like the Python executable, optimization level, warning filters,
     division behaviour and literal string handling.
     """
     args = [sys.executable]
     for warnoption in sys.warnoptions:
         args.append("-W")
         args.append(warnoption)
     if type(1 / 2) is not int:
         args.append("-Qnew")
     if type("") is not str:
         args.append("-U")
     if not __debug__:
         if getPythonArgs.__doc__ is None:
             args.append("-OO")
         else:
             args.append("-O")
     return args



def daemonize():
     args = [os.path.abspath(__file__)] + sys.argv
     executable = sys.executable
     cmdline = win32.quoteArguments(getPythonArgs() + args)
     inherit = False

     flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
              win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
              win32process.DETACHED_PROCESS) # no controlling terminal

     info = win32process.STARTUPINFO()
     win32process.CreateProcess(executable, cmdline, None, None,
                                inherit, flags, None, None, info)
     # Do what exec* functions do, let the OS do the cleanup.
     os._exit(0)



def daemonize2():
     args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
     executable = sys.executable
     cmdline = win32.quoteArguments(getPythonArgs() + args)
     inherit = True
     # create an invisible console
     flags = (win32process.CREATE_NO_WINDOW
     attributes = win32security.SECURITY_ATTRIBUTES()
     attributes.bInheritHandle = True
     station = win32service.CreateWindowStation(None, 0,
                                                win32con.GENERIC_READ |
                                                win32con.GENERIC_WRITE,
                                                attributes)
     station.SetProcessWindowStation()
     sname = win32service.GetUserObjectInformation(station,
                                                   win32service.UOI_NAME)
     dname = str(os.getpid())
     desktop = win32service.CreateDesktop(dname, 0,
                                          win32con.GENERIC_READ |
                                          win32con.GENERIC_WRITE,
                                          attributes)
     desktop.SetThreadDesktop()
     null = os.open("NUL", os.O_RDWR)
     handle = msvcrt.get_osfhandle(null)
     info = win32process.STARTUPINFO()
     info.lpDesktop = "%s\\%s" % (sname, dname)
     info.dwFlags = win32process.STARTF_USESTDHANDLES
     info.hStdInput = info.hStdOutput = info.hStdError = handle
     win32process.CreateProcess(executable, cmdline, None, None,
                                inherit, flags, None, None, info)
     # Same as above, exit as fast as possible.
     os._exit(0)



if __name__ == "__main__":
     daemonize2()


From exarkun at twistedmatrix.com  Sat Nov  7 21:38:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 02:38:23 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
Message-ID: <20091108023823.3229.1912283154.divmod.xquotient.353@localhost.localdomain>

On 7 Nov, 11:05 pm, exarkun at twistedmatrix.com wrote:
>On 10:41 pm, leyssw at ihug.co.nz wrote:
>>
>>Isn't the simplest option to place a decent reverse proxy between the
>>webserver and our clients?
>
>Possibly so!  I gave this a half-hearted attempted a few weeks ago but
>quickly gave up.  If someone who is familiar with configuring such a
>proxy would like to help out, perhaps we can get something useful up 
>and
>running.

Actually, I just looked at Varnish again and remembered that because of 
the way trac sessions work, it's really hard to figure out what may and 
may not be correctly cached.  I don't know how to resolve this without 
serious changes to trac itself.

Jean-Paul


From leyssw at ihug.co.nz  Sat Nov  7 21:55:49 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 15:55:49 +1300
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AF63335.9060100@ihug.co.nz>

Thanks for the link info.

I literally just set up Varnish for the first time on my web host, so I 
am no pro. However, varnish uses a c like scripting language that can 
run regexps on the incoming urls and apply rules to them.

What this means is that we can (as a starting point) choose caching 
times for each of those high traffic urls in the varnish script without 
touching trac. In the script, we match the front page (with a regexp) 
and add a max-cache time to 86400, cache it, etc.

See http://www.catalystframework.org/calendar/2008/14
for a great varnish tutorial

By doing that for each of the urls you listed (bar the timeline, which 
should be cached for 1 hour or perhaps 30 minutes instead) we will 
seriously lighten the load on the database and the webserver, even if 
varnish runs on the same machine (as a start).

Every other url (which doesn't have caching set) we could just cache for 
30 minutes (perhaps even a day), but only for anon users (no cookies set 
in browser)

-Tom

>> On 10:41 pm, leyssw at ihug.co.nz wrote:
>>     
>>> Isn't the simplest option to place a decent reverse proxy between the
>>> webserver and our clients?
>>>       
>> Possibly so!  I gave this a half-hearted attempted a few weeks ago but
>> quickly gave up.  If someone who is familiar with configuring such a
>> proxy would like to help out, perhaps we can get something useful up 
>> and
>> running.
>>     
>
> Actually, I just looked at Varnish again and remembered that because of 
> the way trac sessions work, it's really hard to figure out what may and 
> may not be correctly cached.  I don't know how to resolve this without 
> serious changes to trac itself.
>
> Jean-Paul
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 68, Issue 13
> **********************************************
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/c31361aa/attachment.htm 

From exarkun at twistedmatrix.com  Sat Nov  7 22:07:55 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 03:07:55 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <4AF63335.9060100@ihug.co.nz>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
Message-ID: <20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>

On 02:55 am, leyssw at ihug.co.nz wrote:
>Thanks for the link info.
>
>I literally just set up Varnish for the first time on my web host, so I 
>am no pro. However, varnish uses a c like scripting language that can 
>run regexps on the incoming urls and apply rules to them.
>
>What this means is that we can (as a starting point) choose caching 
>times for each of those high traffic urls in the varnish script without 
>touching trac. In the script, we match the front page (with a regexp) 
>and add a max- cache time to 86400, cache it, etc.
>
>See http://www.catalystframework.org/calendar/2008/14
>for a great varnish tutorial
>
>By doing that for each of the urls you listed (bar the timeline, which 
>should be cached for 1 hour or perhaps 30 minutes instead) we will 
>seriously lighten the load on the database and the webserver, even if 
>varnish runs on the same machine (as a start).
>
>Every other url (which doesn't have caching set) we could just cache 
>for 30 minutes (perhaps even a day), but only for anon users (no 
>cookies set in browser)

Where this gets hard is that the front page looks different depending on 
whether the person requesting it is anonymous or authenticated.  If 
they're anonymous, various links are not presented.  If they're 
authenticated, they get the extra links and their username is part of 
the page.

Jean-Paul


From foom at fuhm.net  Sat Nov  7 23:26:40 2009
From: foom at fuhm.net (James Y Knight)
Date: Sat, 7 Nov 2009 23:26:40 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
Message-ID: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>

When I last looked into the performance issues, I found that sometimes  
trac appears to block for long periods of time without releasing the  
GIL. That seems to be the core of the performance issues, currently.  
When it's responding normally, it's perfectly snappy. But, sometimes,  
it blocks for 10sec at a time.

My next attempt to improve performance was going to be to run trac in  
subprocesses instead of threads. That would hopefully substantially  
fix the delay problem.

James


From exarkun at twistedmatrix.com  Sun Nov  8 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1257656711.63.1466971914@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/380cbe3c/attachment.htm 

From ellisonbg.net at gmail.com  Sun Nov  8 00:22:15 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sat, 7 Nov 2009 21:22:15 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <4AF62B45.8030105@gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
Message-ID: <6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>

Fantastic, thanks for sharing this code.  I will definitely have a look.  If
it turns out to
work for us, would you mind releasing this under a BSD license so we can
include
it in IPython (BSD open source project)?  In either case, the ideas will be
very helpful to us.

Cheers,

Brian

It is possible to daemonize a process on Windows. I experimented with
> adding that support to the twistd script, but got swamped with other
> work and couldn't finish it. Below is the code that I have so far. You
> can save it in a module and call the daemonize() function from your script.
>
> The process of daemonization is similar to the one on UNIX -- you have
> to spawn a child process twice, the first child is responsible for
> breaking away from any job objects (somewhat similar to becoming a
> session leader on UNIX), becoming a new process group leader and closing
> all handles (file descriptors) that might have been inherited.
>
> The second child has to open dummy std* files and a new (hidden)
> console, otherwise the signals stop working. There is a slight
> complication with window stations and desktops. Each console creates at
> least one window and some other user objects, so we have to create
> a separate desktop, or other processes would be able to manipulate them
>  and send us arbitrary (Windows) messages.
>
> Regards,
> Ziga
>
>
>
> import os
> import sys
> import msvcrt
>
> import win32con
> import win32process
> import win32security
> import win32service
>
> from twisted.python import win32
>
>
>
> def getPythonArgs():
>     """
>     Return the list of command line args that were used to start
>     the current Python interpreter and were not stored in C{sys.argv}.
>
>     These are the options that control the Python interpreter itself,
>     like the Python executable, optimization level, warning filters,
>     division behaviour and literal string handling.
>     """
>     args = [sys.executable]
>     for warnoption in sys.warnoptions:
>         args.append("-W")
>         args.append(warnoption)
>     if type(1 / 2) is not int:
>         args.append("-Qnew")
>     if type("") is not str:
>         args.append("-U")
>     if not __debug__:
>         if getPythonArgs.__doc__ is None:
>             args.append("-OO")
>         else:
>             args.append("-O")
>     return args
>
>
>
> def daemonize():
>     args = [os.path.abspath(__file__)] + sys.argv
>     executable = sys.executable
>     cmdline = win32.quoteArguments(getPythonArgs() + args)
>     inherit = False
>
>     flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
>              win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
>              win32process.DETACHED_PROCESS) # no controlling terminal
>
>     info = win32process.STARTUPINFO()
>     win32process.CreateProcess(executable, cmdline, None, None,
>                                inherit, flags, None, None, info)
>     # Do what exec* functions do, let the OS do the cleanup.
>     os._exit(0)
>
>
>
> def daemonize2():
>     args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
>     executable = sys.executable
>     cmdline = win32.quoteArguments(getPythonArgs() + args)
>     inherit = True
>     # create an invisible console
>     flags = (win32process.CREATE_NO_WINDOW
>     attributes = win32security.SECURITY_ATTRIBUTES()
>     attributes.bInheritHandle = True
>     station = win32service.CreateWindowStation(None, 0,
>                                                win32con.GENERIC_READ |
>                                                win32con.GENERIC_WRITE,
>                                                attributes)
>     station.SetProcessWindowStation()
>     sname = win32service.GetUserObjectInformation(station,
>                                                   win32service.UOI_NAME)
>     dname = str(os.getpid())
>     desktop = win32service.CreateDesktop(dname, 0,
>                                          win32con.GENERIC_READ |
>                                          win32con.GENERIC_WRITE,
>                                          attributes)
>     desktop.SetThreadDesktop()
>     null = os.open("NUL", os.O_RDWR)
>     handle = msvcrt.get_osfhandle(null)
>     info = win32process.STARTUPINFO()
>     info.lpDesktop = "%s\\%s" % (sname, dname)
>     info.dwFlags = win32process.STARTF_USESTDHANDLES
>     info.hStdInput = info.hStdOutput = info.hStdError = handle
>     win32process.CreateProcess(executable, cmdline, None, None,
>                                inherit, flags, None, None, info)
>     # Same as above, exit as fast as possible.
>     os._exit(0)
>
>
>
> if __name__ == "__main__":
>     daemonize2()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091107/a17e106f/attachment-0001.htm 

From leyssw at ihug.co.nz  Sun Nov  8 01:26:22 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 19:26:22 +1300
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
References: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AF6648E.8000406@ihug.co.nz>

Neither of the below issues will be a problem

Jean-Paul
Logged in users have a cookie set (I imagine). by default Varnish will not present cached results to users with a cookie, nor will it cache their results for others to see. So the 10% of hits (totally my guess) that are for authenticated users will not be cached. However, some more static assets could be cached regardless of cookies if we so desire.

James:
Varnish has an option to serve an old result out of cache if the server is being non-responsive, it is a feature they call "Grace"

-Tom



Where this gets hard is that the front page looks different depending on 
whether the person requesting it is anonymous or authenticated.  If 
they're anonymous, various links are not presented.  If they're 
authenticated, they get the extra links and their username is part of 
the page.

Jean-Paul

------------------------------


When I last looked into the performance issues, I found that sometimes  
trac appears to block for long periods of time without releasing the  
GIL. That seems to be the core of the performance issues, currently.  
When it's responding normally, it's perfectly snappy. But, sometimes,  
it blocks for 10sec at a time.

My next attempt to improve performance was going to be to run trac in  
subprocesses instead of threads. That would hopefully substantially  
fix the delay problem.

James



From ssteinerx at gmail.com  Sun Nov  8 07:57:33 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sun, 8 Nov 2009 07:57:33 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <3D94E7DC-AB45-483E-9286-30B6A49A265D@gmail.com>


On Nov 7, 2009, at 11:26 PM, James Y Knight wrote:

> When I last looked into the performance issues, I found that sometimes
> trac appears to block for long periods of time without releasing the
> GIL. That seems to be the core of the performance issues,

Any Earthly idea which part of trak is responsible or is just a  
general malaise?

> When it's responding normally, it's perfectly snappy. But, sometimes,
> it blocks for 10sec at a time.
>
> My next attempt to improve performance was going to be to run trac in
> subprocesses instead of threads. That would hopefully substantially
> fix the delay problem.

I don't mean to restate the obvious, but have you asked the track guys  
for help?  I don't know them at all, or really anything about them so  
excuse me if there's some feud or something.

S



From exarkun at twistedmatrix.com  Sun Nov  8 08:55:05 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 13:55:05 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <4AF6648E.8000406@ihug.co.nz>
References: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
	<4AF6648E.8000406@ihug.co.nz>
Message-ID: <20091108135505.3229.1923845022.divmod.xquotient.364@localhost.localdomain>

On 06:26 am, leyssw at ihug.co.nz wrote:
>Neither of the below issues will be a problem
>
>Jean-Paul
>Logged in users have a cookie set (I imagine). by default Varnish will 
>not present cached results to users with a cookie, nor will it cache 
>their results for others to see. So the 10% of hits (totally my guess) 
>that are for authenticated users will not be cached. However, some more 
>static assets could be cached regardless of cookies if we so desire.

Nope.  All users have cookies, so Varnish won't present cached results 
to any of them.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Nov  8 09:02:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 14:02:13 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>

On 04:26 am, foom at fuhm.net wrote:
>When I last looked into the performance issues, I found that sometimes
>trac appears to block for long periods of time without releasing the
>GIL. That seems to be the core of the performance issues, currently.
>When it's responding normally, it's perfectly snappy. But, sometimes,
>it blocks for 10sec at a time.

How were you detecting these times?  Can we attach gdb to the process 
and trigger an all-threads stack dump when it happens?
>My next attempt to improve performance was going to be to run trac in
>subprocesses instead of threads. That would hopefully substantially
>fix the delay problem.

That would be interesting.  I thought it would be easy to add 
multiprocess support to the Twisted Web WSGI container, but I have since 
realized that was a pretty stupidly naive belief. :/  Still, perhaps it 
won't be impossible.

Could we start off just running multiple twistds, though?

Jean-Paul


From maarten at treewalker.org  Sun Nov  8 09:54:29 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 8 Nov 2009 15:54:29 +0100
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <200911081554.29894.maarten@treewalker.org>

On Sunday 08 November 2009, James Y Knight wrote:

> When I last looked into the performance issues, I found that sometimes
> trac appears to block for long periods of time without releasing the
> GIL. That seems to be the core of the performance issues, currently.
> When it's responding normally, it's perfectly snappy. But, sometimes,
> it blocks for 10sec at a time.

How much memory does Trac use? Python garbage collection works in 
generations, which leads to recently allocated objects to be checked for 
garbage more often than older objects.

http://docs.python.org/library/gc.html

When collecting the oldest generation (2), we saw the Python VM freeze for 
several minutes. This was on a process that had several GB of allocated 
memory though. There was enough RAM to contain all data, but it's still 
possible the OS (Linux) swapped out pages there were not used for a long 
time to get more memory for caching.

We decided to work around the issue by disabling mark-and-sweep collection 
and relying on reference counting only. We had to add some code to forcably 
break reference cycles, but this was only needed for a small number cases.

Bye,
		Maarten


From ziga.seilnacht at gmail.com  Sun Nov  8 10:53:05 2009
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sun, 08 Nov 2009 16:53:05 +0100
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>	<4AF62B45.8030105@gmail.com>
	<6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
Message-ID: <4AF6E961.1060909@gmail.com>

Brian Granger wrote:
> Fantastic, thanks for sharing this code.  I will definitely have a look.  If
> it turns out to
> work for us, would you mind releasing this under a BSD license so we can
> include
> it in IPython (BSD open source project)?  In either case, the ideas will be
> very helpful to us.
> 
> Cheers,
> 
> Brian
> 

Sure, you can find a slightly updated version of the code in the 
attachment, licensed under the two clause BSD license and without the 
syntax error.

It would be even better if you could try to integrate the functionality 
into Twisted itself, if the core developers agree that it would be 
useful. I opened a ticket for this:

http://twistedmatrix.com/trac/ticket/4073

Regards,
Ziga
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: win32daemon.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/ef3ebd0f/attachment.txt 

From ellisonbg.net at gmail.com  Sun Nov  8 12:35:57 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 09:35:57 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <4AF6E961.1060909@gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
	<6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
	<4AF6E961.1060909@gmail.com>
Message-ID: <6ce0ac130911080935r267b59f9mfd9defbcde303ac6@mail.gmail.com>

Sure, you can find a slightly updated version of the code in the attachment,
licensed under the two clause BSD license and without the syntax error.

Thank you very much for being willing to share this code under the BSD
license.  I will try this out and see if it does the job for us.



> It would be even better if you could try to integrate the functionality
> into Twisted itself, if the core developers agree that it would be useful. I
> opened a ticket for this:
>
> http://twistedmatrix.com/trac/ticket/4073
>
>
Yes, it would be nice if this was in twisted itself.  I will probably
include it in IPython for now and see how it works for us - use that as a
medium term test of the approach.  I will provide feeback and any changes to
the twisted ticket as appropriate.

Thanks again,

Brian


> Regards,
> Ziga
>
> # Copyright (c) 2009 Ziga Seilnacht. All rights reserved.
> #
> # Redistribution and use in source and binary forms, with or without
> # modification, are permitted provided that the following conditions are
> met:
> #
> # 1. Redistributions of source code must retain the above copyright notice,
> #    this list of conditions and the following disclaimer.
> # 2. Redistributions in binary form must reproduce the above copyright
> notice,
> #    this list of conditions and the following disclaimer in the
> documentation
> #    and/or other materials provided with the distribution.
> #
> # THIS SOFTWARE IS PROVIDED BY THE FREEBSD PROJECT ''AS IS'' AND ANY
> EXPRESS OR
> # IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
> OF
> # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
> NO
> # EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
> # INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
> (INCLUDING,
> # BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
> USE,
> # DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
> THEORY OF
> # LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
> NEGLIGENCE
> # OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
> # ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
>
>
> import os
> import sys
> import msvcrt
>
> try:
>    import win32con
>    import win32process
>    import win32security
>    import win32service
> except ImportError:
>    win32process = None
>
> from twisted.python import win32
>
>
>
> def getPythonArgs():
>    """
>    Return the list of command line args that were used to start
>    the current Python interpreter and were not stored in C{sys.argv}.
>
>    These are the options that control the Python interpreter itself,
>    like the Python executable, optimization level, warning filters,
>    division behaviour and literal string handling.
>    """
>    args = [sys.executable]
>    for warnoption in sys.warnoptions:
>        args.append("-W")
>        args.append(warnoption)
>    if type(1 / 2) is not int:
>        args.append("-Qnew")
>    if type("") is not str:
>        args.append("-U")
>    if not __debug__:
>        if getPythonArgs.__doc__ is None:
>            args.append("-OO")
>        else:
>            args.append("-O")
>    return args
>
>
>
> def daemonize():
>    args = [os.path.abspath(__file__)] + sys.argv
>    executable = sys.executable
>    cmdline = win32.quoteArguments(getPythonArgs() + args)
>    inherit = False
>    priority =
> win32process.GetPriorityClass(win32process.GetCurrentProcess())
>    flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
>             win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
>             win32process.DETACHED_PROCESS |          # no controlling
> terminal
>             priority)
>    info = win32process.STARTUPINFO()
>    win32process.CreateProcess(executable, cmdline, None, None,
>                               inherit, flags, None, None, info)
>    # Do what exec* functions do, let the OS do the cleanup.
>    os._exit(0)
>
>
>
> def daemonize2():
>    args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
>    executable = sys.executable
>    cmdline = win32.quoteArguments(getPythonArgs() + args)
>    inherit = True
>    priority =
> win32process.GetPriorityClass(win32process.GetCurrentProcess())
>    flags = (win32process.CREATE_NO_WINDOW | # create an invisible console
>             win32process.CREATE_NEW_PROCESS_GROUP | # group leader
>             priority)
>    attributes = win32security.SECURITY_ATTRIBUTES()
>    attributes.bInheritHandle = True
>    station = win32service.CreateWindowStation(None, 0,
>                                               win32con.GENERIC_READ |
>                                               win32con.GENERIC_WRITE,
>                                               attributes)
>    station.SetProcessWindowStation()
>    sname = win32service.GetUserObjectInformation(station,
>                                                  win32service.UOI_NAME)
>    dname = str(os.getpid())
>    desktop = win32service.CreateDesktop(dname, 0,
>                                         win32con.GENERIC_READ |
>                                         win32con.GENERIC_WRITE,
>                                         attributes)
>    desktop.SetThreadDesktop()
>    null = os.open("NUL", os.O_RDWR)
>    handle = msvcrt.get_osfhandle(null)
>    info = win32process.STARTUPINFO()
>    info.lpDesktop = "%s\\%s" % (sname, dname)
>    info.dwFlags = win32process.STARTF_USESTDHANDLES
>    info.hStdInput = info.hStdOutput = info.hStdError = handle
>    win32process.CreateProcess(executable, cmdline, None, None,
>                               inherit, flags, None, None, info)
>    # Same as above, exit as fast as posible.
>    os._exit(0)
>
>
>
> if __name__ == "__main__":
>    daemonize2()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/cbd6bfb3/attachment.htm 

From nitro at dr-code.org  Sun Nov  8 12:39:49 2009
From: nitro at dr-code.org (Nitro)
Date: Sun, 08 Nov 2009 18:39:49 +0100
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <200911081554.29894.maarten@treewalker.org>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<200911081554.29894.maarten@treewalker.org>
Message-ID: <op.u227cn1cz3pzfc@nitrogenycs2>

Am 08.11.2009, 15:54 Uhr, schrieb Maarten ter Huurne  
<maarten at treewalker.org>:

> On Sunday 08 November 2009, James Y Knight wrote:
>
>> When I last looked into the performance issues, I found that sometimes
>> trac appears to block for long periods of time without releasing the
>> GIL. That seems to be the core of the performance issues, currently.
>> When it's responding normally, it's perfectly snappy. But, sometimes,
>> it blocks for 10sec at a time.

Some general documents about track + performance issues:

http://trac.edgewall.org/ticket/7490
http://trac.edgewall.org/wiki/TracPerformance

Lots of people experienced slow trac performance it seems. Reading through  
the #7490 ticket it seems there's a multitude of reasons for this. Maybe  
the twisted webserver suffers from one of them.

-Matthias


From foom at fuhm.net  Sun Nov  8 13:08:32 2009
From: foom at fuhm.net (James Y Knight)
Date: Sun, 8 Nov 2009 13:08:32 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
Message-ID: <6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>


On Nov 8, 2009, at 9:02 AM, exarkun at twistedmatrix.com wrote:

> On 04:26 am, foom at fuhm.net wrote:
>> When I last looked into the performance issues, I found that  
>> sometimes
>> trac appears to block for long periods of time without releasing the
>> GIL. That seems to be the core of the performance issues, currently.
>> When it's responding normally, it's perfectly snappy. But, sometimes,
>> it blocks for 10sec at a time.
>
> How were you detecting these times?

I first saw it while reloading the website and watching the resource  
loading timeline in Safari. And then after I pulled out the static  
resources from Trac's threads (which seems to have helped  
substantially for the /usual/ case), sometimes even those would hang  
for 10 seconds unresponsive. So then I had a loop running curl; sleep  
2 on Cube, and noticed it happening periodically.

I don't know for sure it's a GIL-releasing issue, it might be that  
something actually hung up the twisted mainloop thread, but I'd bet 5  
cookies it was one of the trac threads blocking doing something with  
the GIL held.

I didn't get farther in the investigation than this.

> Can we attach gdb to the process and trigger an all-threads stack  
> dump when it happens?

That's a good idea. Unfortunately, currently it seems to be working  
quite smoothly. :)

James


From glyph at twistedmatrix.com  Sun Nov  8 19:57:26 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Nov 2009 19:57:26 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>

On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.

How's this coming along?



From db3l.net at gmail.com  Sun Nov  8 21:45:28 2009
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 08 Nov 2009 21:45:28 -0500
Subject: [Twisted-Python] Daemon processes on windows
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
Message-ID: <m2my2w8lh3.fsf@valheru.db3l.homeip.net>

?iga Seilnacht <ziga.seilnacht at gmail.com> writes:

> It is possible to daemonize a process on Windows. I experimented with 
> adding that support to the twistd script, but got swamped with other 
> work and couldn't finish it. Below is the code that I have so far. You 
> can save it in a module and call the daemonize() function from your script.

While this process is certainly doable, I'll also point out that on
Windows, the more "natural" approach to this is to implement the
process as a service.  That also buys you some regular Windows
approaches to management (net stop/start from command line, services
UI from the control panel) and status inquiry (sc query from command
line).  So while it may be a little platform-specific code you're
final result will integrate more naturally into that environment for
any system administrators.

While I haven't done this with a twistd based Twisted service, I've
done it with a lot of Twisted code in general.  It's easiest if you have
pywin32 installed and can use it's utility service wrappers, for which
the pywin32 package has examples.

I've tended to offload the service definition to its own module, and
have it just import and execute the main code (with the twisted
reactor.run call) after the service gets started - that way you can
also manually run the twisted code without involving any of the
service support, or to support execution on non-Windows platforms.

Here's one example of a service object that invoices Twisted-based
code.  When stopping, you use callFromThread because the thread that
handles the request from the Windows service manager is separate from
the thread executing the main code (which is a thread created during
the startup process).

That's also why you start the reactor without signal initialization,
since it'll be in a secondary thread.  In SvcDoRun is where you could
import platform-generic modules to set up your twisted code, and then
this code starts the reactor.

Oh, and I left some code in that shows retrieving service-specific
parameters from the registry as is typical for Windows services
(stored in HKLM/System/CurrentControlSet/Services/<svc_name>/Parameters
if I recall corrrectly):

                              - - - - -

class DataImportService(win32serviceutil.ServiceFramework):

    __version__ = '1.0.0'

    _svc_name_ = 'fdi'
    _svc_display_name_ = 'SomeCompany Data Integration'

    stopping = False
    debug = False

    def __init__(self, *args, **kwargs):
        win32serviceutil.ServiceFramework.__init__(self, *args, **kwargs)
        self.initialize()
        self._stopped = threading.Event()
        self.log = None

    def initialize(self):
        # This is separate from __init__ so during debugging the bootstrap
        # code can override __init__ but still finish initialization.

    def _getOption(self, option, default):
        return win32serviceutil.GetServiceCustomOption(self._svc_name_,
                                                       option,
                                                       default)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        print '%s Service stopping' % self._svc_display_name_
        reactor.callFromThread(reactor.stop)
        self._stopped.wait(5)
        print '%s Service stopped' % self._svc_display_name_
        if self.log:
            self.log.close()

    def SvcDoRun(self):
        """Main entry point for service execution"""

        if hasattr(sys, 'frozen'):
            home_dir = os.path.dirname(sys.executable)
        else:
            home_dir = os.path.dirname(__file__)

        # First, let's set up some logging
        if self.debug:
            dupstdout = True
            logprefix = None
        else:
            dupstdout = False
            logprefix = os.path.join(home_dir, 'logs', 'dataimport.log')

        self.log = LogClass(logprefix, dupstdout)

        # And then reroute stdout/stderr to that file object
        sys.stdout = self.log
        sys.stderr = self.log

        print '%s Service %s starting' % (self._svc_display_name_,
                                          self.__version__)

        try:

            # Process config file
            config_file = self._getOption('config',
                                          os.path.join(home_dir, 'data',
                                                       'dataimport.ini'))

            # ... other service-related initialization ...

            # ... do any Twisted related initialization ...

            # Start everything up
            reactor.callLater(0, self.log.write,
                              '%s Service operational\n' %
                              self._svc_display_name_)
            reactor.run(installSignalHandlers=False)

            # We're shutting down.
            
            # ... do any shutdown processing ...

            # Flag that we're exiting so service thread can be more
            # accurate in terms of declaring shutdown.
            self._stopped.set()

        except:

            # For right now just log a traceback and abort
            log.err()
            # But try to gracefully close down log to let final traceback
            # information make it out to the log file.
            if self.log:
                self.log.close()

                              - - - - -

Your main startup code in the service wrapper module can use helper
functions from win32serviceutil for startup (see the pywin32 examples)
which provides some automatic support for installing/uninstalling the
service, or you can implement your own startup if you want to support
different options and what not.  This all works under py2exe as well
if you want to package things up and have a nice self-contained exe as
a Windows service.

-- David



From radix at twistedmatrix.com  Sun Nov  8 22:14:29 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 8 Nov 2009 22:14:29 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
Message-ID: <60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>

On Sun, Nov 8, 2009 at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:
>
>> I'm working on it. The core NEWS file is done I think. NEWS for other
>> projects will be worked on tomorrow.
>
> How's this coming along?

Hi! I've done the web NEWS file as well, which was about as huge as
the core NEWS file. That was yesterday.

Today, Jean-Paul and I got together to work on getting the new
HTTP/1.1 + high-level client API branches merged, which I am glad to
report we have done. I basically sat on his couch shouting out review
comments and proposed fixes and he hacked it out.

The only significant NEWS files left to write now are the ones for
conch and probably mail. There weren't many changes to the other
projects over the last release interval. I should get those done early
this week.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From ellisonbg.net at gmail.com  Sun Nov  8 22:54:11 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 19:54:11 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com> <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
Message-ID: <6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>

David,


While this process is certainly doable, I'll also point out that on
> Windows, the more "natural" approach to this is to implement the
> process as a service.  That also buys you some regular Windows
> approaches to management (net stop/start from command line, services
> UI from the control panel) and status inquiry (sc query from command
> line).  So while it may be a little platform-specific code you're
> final result will integrate more naturally into that environment for
> any system administrators.
>
>
It is very possible I might have to go this route.  We have some odd
requrements,
such as needing to run the server using the Windows Server 2008 HPC job
scheduler.
the job scheduler does some funky things and I am finding that some of the
"usual"
assumptions you make on Windows don't hold.  So at this point, I need all
the tricks
in my bad that I can get.  Thanks for the example!


> While I haven't done this with a twistd based Twisted service, I've
> done it with a lot of Twisted code in general.  It's easiest if you have
> pywin32 installed and can use it's utility service wrappers, for which
> the pywin32 package has examples.
>

OK, nice to know about these examples.


> I've tended to offload the service definition to its own module, and
> have it just import and execute the main code (with the twisted
> reactor.run call) after the service gets started - that way you can
> also manually run the twisted code without involving any of the
> service support, or to support execution on non-Windows platforms.
>
> Here's one example of a service object that invoices Twisted-based
> code.  When stopping, you use callFromThread because the thread that
> handles the request from the Windows service manager is separate from
> the thread executing the main code (which is a thread created during
> the startup process).
>
> That's also why you start the reactor without signal initialization,
> since it'll be in a secondary thread.  In SvcDoRun is where you could
> import platform-generic modules to set up your twisted code, and then
> this code starts the reactor.
>

Bummer, then I can't use this approach.  My "server" uses
reactor.spawnProcess
which needs the signal handlers to be installed (SIGCHLD specifically) to
work
properly... do you know if it can be done without the dual thread trick.

Thanks,

Brian

Oh, and I left some code in that shows retrieving service-specific
> parameters from the registry as is typical for Windows services
> (stored in HKLM/System/CurrentControlSet/Services/<svc_name>/Parameters
> if I recall corrrectly):
>
>                              - - - - -
>
> class DataImportService(win32serviceutil.ServiceFramework):
>
>    __version__ = '1.0.0'
>
>    _svc_name_ = 'fdi'
>    _svc_display_name_ = 'SomeCompany Data Integration'
>
>    stopping = False
>    debug = False
>
>    def __init__(self, *args, **kwargs):
>        win32serviceutil.ServiceFramework.__init__(self, *args, **kwargs)
>        self.initialize()
>        self._stopped = threading.Event()
>        self.log = None
>
>    def initialize(self):
>        # This is separate from __init__ so during debugging the bootstrap
>        # code can override __init__ but still finish initialization.
>
>    def _getOption(self, option, default):
>        return win32serviceutil.GetServiceCustomOption(self._svc_name_,
>                                                       option,
>                                                       default)
>
>    def SvcStop(self):
>        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
>        print '%s Service stopping' % self._svc_display_name_
>        reactor.callFromThread(reactor.stop)
>        self._stopped.wait(5)
>        print '%s Service stopped' % self._svc_display_name_
>        if self.log:
>            self.log.close()
>
>    def SvcDoRun(self):
>        """Main entry point for service execution"""
>
>        if hasattr(sys, 'frozen'):
>            home_dir = os.path.dirname(sys.executable)
>        else:
>            home_dir = os.path.dirname(__file__)
>
>        # First, let's set up some logging
>        if self.debug:
>            dupstdout = True
>            logprefix = None
>        else:
>            dupstdout = False
>            logprefix = os.path.join(home_dir, 'logs', 'dataimport.log')
>
>        self.log = LogClass(logprefix, dupstdout)
>
>        # And then reroute stdout/stderr to that file object
>        sys.stdout = self.log
>        sys.stderr = self.log
>
>        print '%s Service %s starting' % (self._svc_display_name_,
>                                          self.__version__)
>
>        try:
>
>            # Process config file
>            config_file = self._getOption('config',
>                                          os.path.join(home_dir, 'data',
>                                                       'dataimport.ini'))
>
>            # ... other service-related initialization ...
>
>            # ... do any Twisted related initialization ...
>
>            # Start everything up
>            reactor.callLater(0, self.log.write,
>                              '%s Service operational\n' %
>                              self._svc_display_name_)
>            reactor.run(installSignalHandlers=False)
>
>            # We're shutting down.
>
>            # ... do any shutdown processing ...
>
>            # Flag that we're exiting so service thread can be more
>            # accurate in terms of declaring shutdown.
>            self._stopped.set()
>
>        except:
>
>            # For right now just log a traceback and abort
>            log.err()
>            # But try to gracefully close down log to let final traceback
>            # information make it out to the log file.
>            if self.log:
>                self.log.close()
>
>                              - - - - -
>
> Your main startup code in the service wrapper module can use helper
> functions from win32serviceutil for startup (see the pywin32 examples)
> which provides some automatic support for installing/uninstalling the
> service, or you can implement your own startup if you want to support
> different options and what not.  This all works under py2exe as well
> if you want to package things up and have a nice self-contained exe as
> a Windows service.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/985180fe/attachment.htm 

From foom at fuhm.net  Mon Nov  9 00:55:32 2009
From: foom at fuhm.net (James Y Knight)
Date: Mon, 9 Nov 2009 00:55:32 -0500
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
	<m2my2w8lh3.fsf@valheru.db3l.homeip.net>
	<6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
Message-ID: <598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>

On Nov 8, 2009, at 10:54 PM, Brian Granger wrote:
> Bummer, then I can't use this approach.  My "server" uses  
> reactor.spawnProcess
> which needs the signal handlers to be installed (SIGCHLD  
> specifically) to work
> properly... do you know if it can be done without the dual thread  
> trick.

...On windows? I don't think Windows has SIGCHLD.

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/bc93b365/attachment.htm 

From ellisonbg.net at gmail.com  Mon Nov  9 01:32:24 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 22:32:24 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com> <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
	<6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
	<598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>
Message-ID: <6ce0ac130911082232j7273c1d1vc2b9d2cc0d9617e9@mail.gmail.com>

Bummer, then I can't use this approach.  My "server" uses
reactor.spawnProcess

> which needs the signal handlers to be installed (SIGCHLD specifically) to
> work
> properly... do you know if it can be done without the dual thread trick.
>
>
> ...On windows? I don't think Windows has SIGCHLD.
>
>
Yes, that may be.  I will look into this...I may have some hope yet.

Cheers,

Brian


> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091108/3da9632f/attachment.htm 

From sipickles at googlemail.com  Mon Nov  9 02:50:58 2009
From: sipickles at googlemail.com (Simon Pickles)
Date: Mon, 09 Nov 2009 07:50:58 +0000
Subject: [Twisted-Python] Twisted web
Message-ID: <4AF7C9E2.4040901@googlemail.com>

Hi all,

I am returning to twisted after an extended absence, and was wondering 
what the status is with twisted's web framework? Is this an active area 
of development?

Also looking forward to Twisted9..... :)

Many thanks

Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/86f7a5ef/attachment-0001.htm 

From rlotun at gmail.com  Mon Nov  9 06:11:58 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 9 Nov 2009 11:11:58 +0000
Subject: [Twisted-Python] Twisted web
In-Reply-To: <4AF7C9E2.4040901@googlemail.com>
References: <4AF7C9E2.4040901@googlemail.com>
Message-ID: <95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>

Hi Simon,

> I am returning to twisted after an extended absence, and was wondering what
> the status is with twisted's web framework? Is this an active area of
> development?

The twisted.web framework is absolutely an active area of development,
with the most activity recently being on the http 1.1 web client
stuff, which was recently merged into trunk (yay!). That means it'll
be in Twisted 9.

You're probably talking about the web/web2 dichotomy?  Take a look at this page:
http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted

In short, web2 is being phased out and web is *the* web project of
twisted (as it should be ;-).

Cheers,
Reza



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From termim at gmail.com  Mon Nov  9 10:06:48 2009
From: termim at gmail.com (Mikhail)
Date: Mon, 9 Nov 2009 15:06:48 +0000 (UTC)
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <loom.20091109T160637-329@post.gmane.org>

 <exarkun <at> twistedmatrix.com> writes:

> As far as I can tell, these problems are due solely to the quality of 
> trac.  There is no indication that they will disappear through only an 
> improvement of the hardware the site is hosted on (unless we consider a 
> really amazing improvement, something on the order of 10x faster CPU and 
> disk than what we have now, a 3GHz P4 and contemporary disks).
> 

You've probably checked this already but just in case:

 - What kind of database it uses? If it is SQLite then Postgres will 
   improve things for sure.

 - The about page shows that you are using 0.11dev - this is not good.
   During 0.11 development they fixed a lot of performance/memory problems.
   The current version is 0.11.5. You definitely should upgrade.

Regards,
Mikhail



From glyph at twistedmatrix.com  Mon Nov  9 12:29:33 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Nov 2009 12:29:33 -0500
Subject: [Twisted-Python] Twisted web
In-Reply-To: <95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>
References: <4AF7C9E2.4040901@googlemail.com>
	<95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>
Message-ID: <50BFE6B1-1638-4522-AF5D-FC90E6B67335@twistedmatrix.com>


On Nov 9, 2009, at 6:11 AM, Reza Lotun wrote:

> You're probably talking about the web/web2 dichotomy?  Take a look  
> at this page:
> http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted
>
> In short, web2 is being phased out and web is *the* web project of
> twisted (as it should be ;-).

More specifically, we need *help* phasing out web2, and moving all its  
good bits into twisted.web :).  There are many tickets in the tracker  
related to this.  If you're interested in participating this is a  
great place to help out!


From vitaly at synapticvision.com  Mon Nov  9 12:41:29 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 12:41:29 -0500
Subject: [Twisted-Python] Caching mechanism
Message-ID: <20091109124129.82497icy7guj7f8c@216.129.205.5>

hi,
is there any cache mechanism for twisted? Could one point me please to  
that docs?

Thank you.



From jonathan at garetjax.info  Mon Nov  9 12:43:15 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Mon, 9 Nov 2009 18:43:15 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <m2bpjlaggv.fsf@valheru.db3l.homeip.net>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com> 
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
	<c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com> 
	<m2bpjlaggv.fsf@valheru.db3l.homeip.net>
Message-ID: <c50d9eb70911090943r68b17008y8014081749a5c371@mail.gmail.com>

Hi David,
I discovered this message in my "sent" (???) mailbox only today, sorry for
the delay...

Anyway, thanks for the response, very clear.
The ticket I was referencing to (I forgot to paste the link) is this
one: http://twistedmatrix.com/trac/ticket/2812

ATM I'm communicating with a separate Cocoa application using
notifications and looking forward to use Cocoa Distributed Objects for
greater flexibility, but I'll consider your approach for
future developments.

Thanks,
Jonathan


On Mon, Nov 2, 2009 at 2:00 AM, David Bolen <db3l.net at gmail.com> wrote:
> Not sure which ticket is being referenced but which Twisted reactor
> are you using? ?I've had very good luck with the threadedselect
> reactor, which shouldn't care if your main loop is a GUI or not. ?You
> interleave with AppHelper.callAfter, which I think should work fine
> with both runConsoleEventLoopas well as the GUI runEventLoop
>
> For my part, any OSX console apps I've had to do could just be pure
> Twisted, with no need to integrate with an NSRunLoop, so I'm not that
> familiar with how you best track startup/shutdown in those cases.
>
> But fundamentally, you install the threadedselect reactor (do that
> before any other code uses "from twisted.internet import reactor"),
> then use "reactor.interleave(AppHelper.callAfter)" to tie the reactor
> in to the normal event loop. ?In the Cocoa/NSApplication scenario, I
> use the applicationDidFinishLaunching notification to trigger this.
>
> During shutdown, wait for the reactor to perform its shutdown so it
> can close things down cleanly, using a reactor trigger to finalize the
> event loop with "AppHelper.stopEventLoop". ?Again, presumably you'll
> have some way to determine when this is appropriate in your console
> event loop - in a Cocoa/NSApplication scenario, I use the
> applicationShouldTerminate notification. ?(I've tended to install the
> trigger right at that point too, although it could also be done
> earlier)
>
> Here's a trivial example, where I kluge a startup event. ?Presumably
> the reason you are using runConsoleEventLoop is to use other native
> event/input sources based operations, so you might have a more logical
> place or event to identify when to start the twisted integration - all
> that's required is that it be done after the main event loop is
> running. ?If not, while I chose a 1s startup delay in this example, it
> was mostly to see the difference in timestamps - you can make the
> initial callLater a timeout of 0, and it'll just run as soon as the
> event loop gets started.
>
> This example also just terminates after two Twisted-based delayed
> events, but that would also be determined by your own application:
>
> ? ?"""Test console event loop app with Twisted threadedselect reactor"""
>
> ? ?import time
>
> ? ?from PyObjCTools import AppHelper
>
> ? ?from twisted.internet._threadedselect import install
> ? ?reactor = install()
>
> ? ?class Main(object):
>
> ? ? ? ?def startup(self):
> ? ? ? ? ? ?print time.ctime(), 'Main starting'
> ? ? ? ? ? ?reactor.callLater(1, self.callback)
> ? ? ? ? ? ?reactor.interleave(AppHelper.callAfter)
>
> ? ? ? ?def terminate(self):
> ? ? ? ? ? ?print time.ctime(), 'Shutting down reactor'
> ? ? ? ? ? ?reactor.addSystemEventTrigger('after', 'shutdown',
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?AppHelper.stopEventLoop)
> ? ? ? ? ? ?reactor.stop()
>
> ? ? ? ?def callback(self):
> ? ? ? ? ? ?print time.ctime(), 'I was called by the reactor'
> ? ? ? ? ? ?reactor.callLater(1, self.terminate)
>
>
> ? ?if __name__ == "__main__":
>
> ? ? ? ?main = Main()
> ? ? ? ?AppHelper.callLater(1, main.startup)
>
> ? ? ? ?print time.ctime(), 'Starting Event Loop'
> ? ? ? ?AppHelper.runConsoleEventLoop()
> ? ? ? ?print time.ctime(), 'Terminating'
>
> When running, this produces:
>
> ? ?Sun Nov ?1 19:53:16 2009 Starting Event Loop
> ? ?Sun Nov ?1 19:53:17 2009 Main starting
> ? ?Sun Nov ?1 19:53:18 2009 I was called by the reactor
> ? ?Sun Nov ?1 19:53:19 2009 Shutting down reactor
> ? ?Sun Nov ?1 19:53:19 2009 Terminating
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Best Regards,
Jonathan Stoppani


From exarkun at twistedmatrix.com  Mon Nov  9 13:09:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 18:09:28 -0000
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109124129.82497icy7guj7f8c@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
Message-ID: <20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>

On 05:41 pm, vitaly at synapticvision.com wrote:
>hi,
>is there any cache mechanism for twisted? Could one point me please to
>that docs?

What sort of caching are you interested in?  Caching the results of 
method calls?  A caching HTTP proxy?  Caching in the DNS client?  The 
total list of possibilities could run to many pages. :)

Jean-Paul


From gkistanova at accesssoftek.com  Mon Nov  9 13:56:07 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Mon, 9 Nov 2009 10:56:07 -0800
Subject: [Twisted-Python] Need help with Twisted. Please
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>

Dear Twisted developers,

I am not a developer, and definitely need you advice.

I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up Buildbot.
One of tests for Buildbot returns an error:

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1

I am getting the same error both on Ubunty and Leopard. Please advice what could be wrong here?
What does it mean ?twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1??

Thanks
Gal


________________________________
From: Galina Kistanova
Sent: Tuesday, November 03, 2009 1:23 PM
To: twisted-python at twistedmatrix.com
Subject: twisted.internet.error.ProcessTerminated, exit code 1?

Hello all,

I ran into issue with Twisted, could anybody help me?
I have Twisted 8.2.0 on Ubuntu 9.04.
I run tests for Buildbot 0.7.11p3 and one of the tests completed with the next error:

[ERROR]: buildbot.test.test_locks.Locks.testLock3

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1.

Cannot find any information what could cause this.
What ?exit code 1 ? means? I tried to stop MsAfee, but this did not help.

Thanks
 Gal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/f7f8046e/attachment.htm 

From vitaly at synapticvision.com  Mon Nov  9 14:28:35 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 14:28:35 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
Message-ID: <20091109142835.125276qyl0o7jsco@216.129.205.5>



Caching the results of some particular method calls, so other server  
side methods can access those results (I'm thinking about example of  
global variable per entire server, so once imported, such variable  
content could be access).



Quoting exarkun at twistedmatrix.com:

> On 05:41 pm, vitaly at synapticvision.com wrote:
>> hi,
>> is there any cache mechanism for twisted? Could one point me please to
>> that docs?
>
> What sort of caching are you interested in?  Caching the results of
> method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> total list of possibilities could run to many pages. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From foom at fuhm.net  Mon Nov  9 15:22:36 2009
From: foom at fuhm.net (James Y Knight)
Date: Mon, 9 Nov 2009 15:22:36 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
	<6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>
Message-ID: <4E2C846C-069A-4671-A6E4-508E5526FA46@fuhm.net>


On Nov 8, 2009, at 1:08 PM, James Y Knight wrote:

>>
>> Can we attach gdb to the process and trigger an all-threads stack
>> dump when it happens?
>
> That's a good idea. Unfortunately, currently it seems to be working
> quite smoothly. :)

The intermittent long pauses were happening again, so I got a gdb  
"thread apply all bt". I discovered that there were two threads not in  
sem_wait waiting for GIL to be released. And both were waiting in  
nanosleep. One had the GIL held, the other had released it. The one  
with the GIL held was sleeping inside of sqlite3_prepare, called from  
pysqlite_statement_create.

We were using the pysqlite shipped with python 2.5. Fortunately, the  
latest version of pysqlite standalone has already corrected that  
function to release the GIL around the call to sqlite3, so I  
downloaded and installed it. Hopefully that'll fix the remaining issues.

I also added an Expires header to the static content (of 24hours),  
although I think web browsers are pretty good at not reloading  
referenced content frequently even without an explicit expires, so I  
doubt that it really matters.

James


From exarkun at twistedmatrix.com  Mon Nov  9 17:06:31 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 22:06:31 -0000
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <20091109220631.3229.38019532.divmod.xquotient.571@localhost.localdomain>

On 07:28 pm, vitaly at synapticvision.com wrote:
>
>
>Caching the results of some particular method calls, so other server
>side methods can access those results (I'm thinking about example of
>global variable per entire server, so once imported, such variable
>content could be access).

There's not really anything in Twisted for this.  There are a lot of 
general Python solutions, though:

http://www.google.com/search?q=python+caching&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu 
:en-US:official&client=firefox-a

Jean-Paul


From exarkun at twistedmatrix.com  Mon Nov  9 17:07:46 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 22:07:46 -0000
Subject: [Twisted-Python] Need help with Twisted. Please
In-Reply-To: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>
References: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>
Message-ID: <20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>

On 06:56 pm, gkistanova at accesssoftek.com wrote:
>Dear Twisted developers,
>
>I am not a developer, and definitely need you advice.
>
>I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up 
>Buildbot.
>One of tests for Buildbot returns an error:
>
>Traceback (most recent call last):
>Failure: twisted.internet.error.ProcessTerminated: A process has ended 
>with a probable error condition: process ended with exit code 1
>
>I am getting the same error both on Ubunty and Leopard. Please advice 
>what could be wrong here?
>What does it mean  1Ctwisted.internet.error.ProcessTerminated: A process 
>has ended with a probable error condition: process ended with exit code 
>1 1D?

You may want to ask on the BuildBot list instead.  This seems to be a 
BuildBot specific problem, not something that's directly Twisted 
related.  BuildBot developers should have a better idea about the 
problem and its solution than the people following this list.

Jean-Paul


From Andy at NewWorldElectric.com  Mon Nov  9 17:42:27 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 17:42:27 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>

Part of the beauty of twisted is that you don't actually need to do anything
special to achieve that, just create a global dict or other object of your
choice and access it as needed.  More likely what you need to look for is a
cache expiration mechanism, I've linked in lrucache (
http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
write my own constraints as appropriate.

It's often misunderstood, but in twisted you are writing an actual server
rather than just some methods for servicing requests.  The server will run
until stopped and all global or even local variables will remain in memory
unless deleted or dereferenced and garbage collected.  Rather than doing
something special to get a persistent variable you need to do something
special when you want a non-persistent one.

-Andy

On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:

>
>
> Caching the results of some particular method calls, so other server
> side methods can access those results (I'm thinking about example of
> global variable per entire server, so once imported, such variable
> content could be access).
>
>
>
> Quoting exarkun at twistedmatrix.com:
>
> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> hi,
> >> is there any cache mechanism for twisted? Could one point me please to
> >> that docs?
> >
> > What sort of caching are you interested in?  Caching the results of
> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> > total list of possibilities could run to many pages. :)
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/2fc33294/attachment.htm 

From hubbard at sdsc.edu  Mon Nov  9 17:47:09 2009
From: hubbard at sdsc.edu (Paul Hubbard)
Date: Mon, 9 Nov 2009 14:47:09 -0800
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
Message-ID: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>


Both of the links from pypi are dead, alas. Do you know if that  
project is alive somewhere else?

Cheers,
Paul


On Nov 9, 2009, at 2:42 PM, Andy Fundinger wrote:

> Part of the beauty of twisted is that you don't actually need to do  
> anything
> special to achieve that, just create a global dict or other object  
> of your
> choice and access it as needed.  More likely what you need to look  
> for is a
> cache expiration mechanism, I've linked in lrucache (
> http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I  
> just
> write my own constraints as appropriate.
>
> It's often misunderstood, but in twisted you are writing an actual  
> server
> rather than just some methods for servicing requests.  The server  
> will run
> until stopped and all global or even local variables will remain in  
> memory
> unless deleted or dereferenced and garbage collected.  Rather than  
> doing
> something special to get a persistent variable you need to do  
> something
> special when you want a non-persistent one.
>
> -Andy
>
> On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
>
>>
>>
>> Caching the results of some particular method calls, so other server
>> side methods can access those results (I'm thinking about example of
>> global variable per entire server, so once imported, such variable
>> content could be access).
>>
>>
>>
>> Quoting exarkun at twistedmatrix.com:
>>
>>> On 05:41 pm, vitaly at synapticvision.com wrote:
>>>> hi,
>>>> is there any cache mechanism for twisted? Could one point me  
>>>> please to
>>>> that docs?
>>>
>>> What sort of caching are you interested in?  Caching the results of
>>> method calls?  A caching HTTP proxy?  Caching in the DNS client?   
>>> The
>>> total list of possibilities could run to many pages. :)
>>>
>>> Jean-Paul
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> -- 
> Blog:  http://channel3b.wordpress.com
>
> Drinking good coffee makes you wise, drinking bad coffee only makes  
> you
> awake.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Andy at NewWorldElectric.com  Mon Nov  9 17:56:47 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 17:56:47 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
Message-ID: <37d49ed40911091456g26ba96d8pc259f4e8c1822db6@mail.gmail.com>

No, clue, but I've sent the code to you off list and if anyone else wants it
I'd be glad to do the same.

Andy

On Mon, Nov 9, 2009 at 5:47 PM, Paul Hubbard <hubbard at sdsc.edu> wrote:

>
> Both of the links from pypi are dead, alas. Do you know if that
> project is alive somewhere else?
>
> Cheers,
> Paul
>
>
> On Nov 9, 2009, at 2:42 PM, Andy Fundinger wrote:
>
> > Part of the beauty of twisted is that you don't actually need to do
> > anything
> > special to achieve that, just create a global dict or other object
> > of your
> > choice and access it as needed.  More likely what you need to look
> > for is a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I
> > just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual
> > server
> > rather than just some methods for servicing requests.  The server
> > will run
> > until stopped and all global or even local variables will remain in
> > memory
> > unless deleted or dereferenced and garbage collected.  Rather than
> > doing
> > something special to get a persistent variable you need to do
> > something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >>> On 05:41 pm, vitaly at synapticvision.com wrote:
> >>>> hi,
> >>>> is there any cache mechanism for twisted? Could one point me
> >>>> please to
> >>>> that docs?
> >>>
> >>> What sort of caching are you interested in?  Caching the results of
> >>> method calls?  A caching HTTP proxy?  Caching in the DNS client?
> >>> The
> >>> total list of possibilities could run to many pages. :)
> >>>
> >>> Jean-Paul
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> > --
> > Blog:  http://channel3b.wordpress.com
> >
> > Drinking good coffee makes you wise, drinking bad coffee only makes
> > you
> > awake.
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/8ca81c7d/attachment.htm 

From kevin.horn at gmail.com  Mon Nov  9 18:02:45 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 9 Nov 2009 17:02:45 -0600
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
Message-ID: <562bcc10911091502n118e3a12s272500cc175dd685@mail.gmail.com>

On Mon, Nov 9, 2009 at 4:47 PM, Paul Hubbard <hubbard at sdsc.edu> wrote:

>
> Both of the links from pypi are dead, alas. Do you know if that
> project is alive somewhere else?
>
> Cheers,
> Paul
>
>
There's something that's probably similar here:
http://code.activestate.com/recipes/498245/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/9a515b8c/attachment.htm 

From vitaly at synapticvision.com  Mon Nov  9 18:24:20 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 18:24:20 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
Message-ID: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>


Such global variable(lets say dictionary) will have any size limit?

Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:

> Part of the beauty of twisted is that you don't actually need to do anything
> special to achieve that, just create a global dict or other object of your
> choice and access it as needed.  More likely what you need to look for is a
> cache expiration mechanism, I've linked in lrucache (
> http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
> write my own constraints as appropriate.
>
> It's often misunderstood, but in twisted you are writing an actual server
> rather than just some methods for servicing requests.  The server will run
> until stopped and all global or even local variables will remain in memory
> unless deleted or dereferenced and garbage collected.  Rather than doing
> something special to get a persistent variable you need to do something
> special when you want a non-persistent one.
>
> -Andy
>
> On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
>
>>
>>
>> Caching the results of some particular method calls, so other server
>> side methods can access those results (I'm thinking about example of
>> global variable per entire server, so once imported, such variable
>> content could be access).
>>
>>
>>
>> Quoting exarkun at twistedmatrix.com:
>>
>> > On 05:41 pm, vitaly at synapticvision.com wrote:
>> >> hi,
>> >> is there any cache mechanism for twisted? Could one point me please to
>> >> that docs?
>> >
>> > What sort of caching are you interested in?  Caching the results of
>> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
>> > total list of possibilities could run to many pages. :)
>> >
>> > Jean-Paul
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Blog:  http://channel3b.wordpress.com
>
> Drinking good coffee makes you wise, drinking bad coffee only makes you
> awake.
>




From Andy at NewWorldElectric.com  Mon Nov  9 18:38:18 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 18:38:18 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<20091109182420.89285p7g5wyxc6ck@216.129.205.5>
Message-ID: <37d49ed40911091538v51c59828v88a8e054e6079799@mail.gmail.com>

Twisted doesn't enforce any, that's part of the effect of you actually
writing the server, defining, enforcing, and adhering to those limits is
left to the developer.  Of course you have a limited amount of space in your
machine, and you probably don't want to use swap, but nothing twisted is
going to limit you on, it doesn't really do anything on that level of
abstraction.

Andy Fundinger

On Mon, Nov 9, 2009 at 6:24 PM, <vitaly at synapticvision.com> wrote:

>
> Such global variable(lets say dictionary) will have any size limit?
>
> Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:
>
> > Part of the beauty of twisted is that you don't actually need to do
> anything
> > special to achieve that, just create a global dict or other object of
> your
> > choice and access it as needed.  More likely what you need to look for is
> a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I
> just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual server
> > rather than just some methods for servicing requests.  The server will
> run
> > until stopped and all global or even local variables will remain in
> memory
> > unless deleted or dereferenced and garbage collected.  Rather than doing
> > something special to get a persistent variable you need to do something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> >> hi,
> >> >> is there any cache mechanism for twisted? Could one point me please
> to
> >> >> that docs?
> >> >
> >> > What sort of caching are you interested in?  Caching the results of
> >> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> >> > total list of possibilities could run to many pages. :)
> >> >
> >> > Jean-Paul
> >> >
> >> > _______________________________________________
> >> > Twisted-Python mailing list
> >> > Twisted-Python at twistedmatrix.com
> >> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >> >
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> > --
> > Blog:  http://channel3b.wordpress.com
> >
> > Drinking good coffee makes you wise, drinking bad coffee only makes you
> > awake.
> >
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091109/6e1dc158/attachment.htm 

From doug.farrell at gmail.com  Mon Nov  9 22:24:08 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Mon, 9 Nov 2009 22:24:08 -0500
Subject: [Twisted-Python] Twisted synchronous and asynchronous db connections
Message-ID: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>

Hi all,

Our projects at work include synchronous applications (short lived)
and asynchronous Twisted applications (long lived). We're re-factoring
our database and are going to build an API module to decouple all of
the SQL in that module. I'd like to create that API so both
synchronous and asynchronous applications can use it. For the
synchronous applications I'd like calls to the database API to just
return data (blocking) just like using MySQLdb, but for the
asynchronous applications I'd like calls to the same API
functions/methods to be non-blocking, probably returning a deferred.
Anyone have any hints, suggestions or help they might offer me to do
this?

Thanks in advance,
Doug


From exarkun at twistedmatrix.com  Mon Nov  9 22:43:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Nov 2009 03:43:18 -0000
Subject: [Twisted-Python] Twisted synchronous and asynchronous
	db	connections
In-Reply-To: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
References: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
Message-ID: <20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>

On 03:24 am, doug.farrell at gmail.com wrote:
>Hi all,
>
>Our projects at work include synchronous applications (short lived)
>and asynchronous Twisted applications (long lived). We're re-factoring
>our database and are going to build an API module to decouple all of
>the SQL in that module. I'd like to create that API so both
>synchronous and asynchronous applications can use it. For the
>synchronous applications I'd like calls to the database API to just
>return data (blocking) just like using MySQLdb, but for the
>asynchronous applications I'd like calls to the same API
>functions/methods to be non-blocking, probably returning a deferred.
>Anyone have any hints, suggestions or help they might offer me to do
>this?

Chris Armstrong wrote a synchronous implementation of Deferred.  That 
might be an approach to investigate:

  http://radix.twistedmatrix.com/2007/12/supporting-both-asynchronous- 
and.html

Jean-Paul


From doug.farrell at gmail.com  Tue Nov 10 07:41:56 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Tue, 10 Nov 2009 07:41:56 -0500
Subject: [Twisted-Python] Twisted synchronous and asynchronous db
	connections
In-Reply-To: <20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>
References: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
	<20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>
Message-ID: <80c54aa0911100441jc949c6ci45c2e83342c41bc0@mail.gmail.com>

Jean-Paul,

Thanks for the link, I'm looking at it right now.

Doug

On Mon, Nov 9, 2009 at 10:43 PM,  <exarkun at twistedmatrix.com> wrote:
> On 03:24 am, doug.farrell at gmail.com wrote:
>>Hi all,
>>
>>Our projects at work include synchronous applications (short lived)
>>and asynchronous Twisted applications (long lived). We're re-factoring
>>our database and are going to build an API module to decouple all of
>>the SQL in that module. I'd like to create that API so both
>>synchronous and asynchronous applications can use it. For the
>>synchronous applications I'd like calls to the database API to just
>>return data (blocking) just like using MySQLdb, but for the
>>asynchronous applications I'd like calls to the same API
>>functions/methods to be non-blocking, probably returning a deferred.
>>Anyone have any hints, suggestions or help they might offer me to do
>>this?
>
> Chris Armstrong wrote a synchronous implementation of Deferred. ?That
> might be an approach to investigate:
>
> ?http://radix.twistedmatrix.com/2007/12/supporting-both-asynchronous-
> and.html
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From morbidux at free.fr  Tue Nov 10 08:25:37 2009
From: morbidux at free.fr (morbidux)
Date: Tue, 10 Nov 2009 14:25:37 +0100 (CET)
Subject: [Twisted-Python] Twisted Client
Message-ID: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>

Hi all,

I'm writing a simple client / server application, that uses a small
protocol to dialog.

I can't find in documentation any exemple that would correspond to what my
client is supposed to do.

Here is the basics :

 every X seconds, call a function that check a file
  if file is different, connect to server

When the client is connected, it immediatly sends data to server, using
the connectionMade method.

Do I need to use while(1) loop or loopingCall ? What is the best way to
write a daemon that connect to a server every X seconds ?

Many thanks.



From kevin.horn at gmail.com  Tue Nov 10 11:27:13 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 10 Nov 2009 10:27:13 -0600
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
Message-ID: <562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>

On Tue, Nov 10, 2009 at 7:25 AM, morbidux <morbidux at free.fr> wrote:

> Hi all,
>
> I'm writing a simple client / server application, that uses a small
> protocol to dialog.
>
> I can't find in documentation any exemple that would correspond to what my
> client is supposed to do.
>
> Here is the basics :
>
>  every X seconds, call a function that check a file
>  if file is different, connect to server
>
> When the client is connected, it immediatly sends data to server, using
> the connectionMade method.
>
> Do I need to use while(1) loop or loopingCall ? What is the best way to
> write a daemon that connect to a server every X seconds ?
>
> Many thanks.
>
>
>
A while loop will probably block your application.  Use loopingCall (or even
callLater, if you want).

Here's an example:
http://www.saltycrane.com/blog/2008/10/running-functions-periodically-using-twisteds-loopingcall/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091110/46173362/attachment.htm 

From gkistanova at accesssoftek.com  Tue Nov 10 13:18:02 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Tue, 10 Nov 2009 10:18:02 -0800
Subject: [Twisted-Python] Need help with Twisted. Please
In-Reply-To: <20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>
References: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>,
	<20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50C@mail.accesssoftek.com>

Thank you

Gal
________________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com [exarkun at twistedmatrix.com]
Sent: Monday, November 09, 2009 2:07 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Need help with Twisted. Please

On 06:56 pm, gkistanova at accesssoftek.com wrote:
>Dear Twisted developers,
>
>I am not a developer, and definitely need you advice.
>
>I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up
>Buildbot.
>One of tests for Buildbot returns an error:
>
>Traceback (most recent call last):
>Failure: twisted.internet.error.ProcessTerminated: A process has ended
>with a probable error condition: process ended with exit code 1
>
>I am getting the same error both on Ubunty and Leopard. Please advice
>what could be wrong here?
>What does it mean  1Ctwisted.internet.error.ProcessTerminated: A process
>has ended with a probable error condition: process ended with exit code
>1 1D?

You may want to ask on the BuildBot list instead.  This seems to be a
BuildBot specific problem, not something that's directly Twisted
related.  BuildBot developers should have a better idea about the
problem and its solution than the people following this list.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From ltaylor.volks at gmail.com  Tue Nov 10 18:59:12 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 10 Nov 2009 16:59:12 -0700
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
Message-ID: <4AF9FE50.6000607@gmail.com>

On 11/10/09 6:25 AM, morbidux wrote:
> Hi all,
> 
> I'm writing a simple client / server application, that uses a small
> protocol to dialog.
> 
> I can't find in documentation any exemple that would correspond to what my
> client is supposed to do.
> 
> Here is the basics :
> 
>  every X seconds, call a function that check a file
>   if file is different, connect to server
> 
> When the client is connected, it immediatly sends data to server, using
> the connectionMade method.
> 
> Do I need to use while(1) loop or loopingCall ? What is the best way to
> write a daemon that connect to a server every X seconds ?
> 

You could setup a LoopingCall that calls your file checking function.
Your file checking function can then use
twisted.internet.protocol.ClientCreator to send your data.

A simple example:

import os
from twisted.internet import reactor
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.internet.task import LoopingCall
from twisted.python import log

def gotProtocol(p, data):
    p.transport.write(data)
    p.transport.loseConnection()

def errHandler(reason):
    log.err(reason)

def checkFile():
    if os.path.exists('sentry.file'):
        c = ClientCreator(reactor, Protocol)
        c.connectTCP("localhost", 1234).addCallback(gotProtocol, 'some
data').addErrback(errHandler)

lp = LoopingCall(checkFile)
lp.start(5, now=True)

reactor.run()

--

If you want to maintain state between protocol instances, then create a
ClientFactory. You could look at how ReconnectingClientFactory is
implemented for ideas.

The Writing Clients howto should help:
http://twistedmatrix.com/projects/core/documentation/howto/clients.html


Lucas Taylor


From jarrod at vertigrated.com  Tue Nov 10 21:30:31 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 10 Nov 2009 21:30:31 -0500
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
	<562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>
Message-ID: <fa3d0c740911101830t76100265pa6c5f6cd31b44356@mail.gmail.com>

On Tue, Nov 10, 2009 at 11:27 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Nov 10, 2009 at 7:25 AM, morbidux <morbidux at free.fr> wrote:
>
>> Hi all,
>>
>> I'm writing a simple client / server application, that uses a small
>> protocol to dialog.
>>
>> I can't find in documentation any exemple that would correspond to what my
>> client is supposed to do.
>>
>> Here is the basics :
>>
>>  every X seconds, call a function that check a file
>>  if file is different, connect to server
>>
>> When the client is connected, it immediatly sends data to server, using
>> the connectionMade method.
>>
>> Do I need to use while(1) loop or loopingCall ? What is the best way to
>> write a daemon that connect to a server every X seconds ?
>>
>> Many thanks.
>>
>
What platform? For linux you could do away with the polling and use the
python bindings to inotify.
On OSX there are bindings to FSEvent API. Much better than a polling
solution.

-- 
Jarrod Roberson
678.551.2852
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091110/f6c4608e/attachment.htm 

From radix at twistedmatrix.com  Tue Nov 10 22:02:36 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 10 Nov 2009 22:02:36 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
	<60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>
Message-ID: <60ed19d40911101902s703c8b5bn2559e5324e1274e5@mail.gmail.com>

On Sun, Nov 8, 2009 at 10:14 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Sun, Nov 8, 2009 at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:
>>
>>> I'm working on it. The core NEWS file is done I think. NEWS for other
>>> projects will be worked on tomorrow.
>>
>> How's this coming along?
>
> Hi! I've done the web NEWS file as well, which was about as huge as
> the core NEWS file. That was yesterday.
>
> Today, Jean-Paul and I got together to work on getting the new
> HTTP/1.1 + high-level client API branches merged, which I am glad to
> report we have done. I basically sat on his couch shouting out review
> comments and proposed fixes and he hacked it out.
>
> The only significant NEWS files left to write now are the ones for
> conch and probably mail. There weren't many changes to the other
> projects over the last release interval. I should get those done early
> this week.

oh hey, it's early in the week and I've completed all the NEWS files
(though I'm sure I'll have to do one or two more tweaks). Anyway, I'll
start updating version numbers and generating tarballs and so forth in
the coming couple of days.



-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From morbidux at free.fr  Wed Nov 11 03:50:37 2009
From: morbidux at free.fr (morbidux)
Date: Wed, 11 Nov 2009 09:50:37 +0100 (CET)
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <4AF9FE50.6000607@gmail.com>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
	<4AF9FE50.6000607@gmail.com>
Message-ID: <43340.192.168.0.120.1257929437.squirrel@privat.servux.homelinux.org>

Many thanks for your solution.
I've implemented it with success.

Best regards.

| On 11/10/09 6:25 AM, morbidux wrote:
|> Hi all,
|>
|> I'm writing a simple client / server application, that uses a small
|> protocol to dialog.
|>
|> I can't find in documentation any exemple that would correspond to what
|> my
|> client is supposed to do.
|>
|> Here is the basics :
|>
|>  every X seconds, call a function that check a file
|>   if file is different, connect to server
|>
|> When the client is connected, it immediatly sends data to server, using
|> the connectionMade method.
|>
|> Do I need to use while(1) loop or loopingCall ? What is the best way to
|> write a daemon that connect to a server every X seconds ?
|>
|
| You could setup a LoopingCall that calls your file checking function.
| Your file checking function can then use
| twisted.internet.protocol.ClientCreator to send your data.
|
| A simple example:
|
| import os
| from twisted.internet import reactor
| from twisted.internet.protocol import Protocol, ClientCreator
| from twisted.internet.task import LoopingCall
| from twisted.python import log
|
| def gotProtocol(p, data):
|     p.transport.write(data)
|     p.transport.loseConnection()
|
| def errHandler(reason):
|     log.err(reason)
|
| def checkFile():
|     if os.path.exists('sentry.file'):
|         c = ClientCreator(reactor, Protocol)
|         c.connectTCP("localhost", 1234).addCallback(gotProtocol, 'some
| data').addErrback(errHandler)
|
| lp = LoopingCall(checkFile)
| lp.start(5, now=True)
|
| reactor.run()
|
| --
|
| If you want to maintain state between protocol instances, then create a
| ClientFactory. You could look at how ReconnectingClientFactory is
| implemented for ideas.
|
| The Writing Clients howto should help:
| http://twistedmatrix.com/projects/core/documentation/howto/clients.html
|
|
| Lucas Taylor
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|
|
|




From newptcai at gmail.com  Wed Nov 11 11:55:48 2009
From: newptcai at gmail.com (Peter Cai)
Date: Thu, 12 Nov 2009 00:55:48 +0800
Subject: [Twisted-Python] Using sqlalchemy in twisted.
Message-ID: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>

If you Google "sqlalchemy twisted", you can see my post is on the top:

http://groups.google.com/group/sqlalchemy/browse_thread/thread/c802749c9d0dd6

I've been busy for a long time so I didn't considered this question
anymore.  But occasionally, I got some new ideas today.

I was suggested to sandbox sqlalchemy into process contains a single thread.
At that time, I thought it was just the same as using deferToThread
and makes no scenes to have the overhead of IPC.

But now I see the benefits.

A single thread process makes it possible to use a sqlalchemy session
as a cache.  That would greatly reduce the chances to lookup database.
This could not be done with deferToThread because it uses thread pool.
 So there shall be more than one session and the state of cached
objects will conflict.

But there are still one problem : how to transfer a sqlalchemy object
between 2 process?  Some kind of serialization and de-serialization is
needed.  Without test, it's too early to tell if it works.

-- 
look to the things around you,the immediate world around you, if you
are alive,it will mean something to you ??Paul Strand


From kevin.horn at gmail.com  Wed Nov 11 17:52:15 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 11 Nov 2009 16:52:15 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
Message-ID: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>

Back in July, there was a long discussion thread regarding Twisted
Documentation, and the idea of switching to Sphinx came up.  Here's
probably the culmination of that thread:

http://twistedmatrix.com/pipermail/twisted-python/2009-July/020114.html

To summarize, Glyph laid out the following items that would need to happen
in
order for Twisted to move from Lore to another documentation system:

1. Someone would have to volunteer to maintain the documentation
   infrastructure and teach others to use it.

2. Submit a complete proposal outlining benefits for the move so that it
   could be discussed rationally without having to chase down lots of little

   bits in email, irc, etc.

3. Address the transition process.

So I went away and did some thinking, and some research and some
experimenting, and I decided that I really want this to happen.

So I am hereby volunteering to manage a Sphinx-based documentation
infrastructure (should there eventually be one) for the Twisted project
as well as the transition to said system.

I have written up a proposal here:

http://twistedsphinx.funsize.net/proposal.html

that I think addresses at least the main points of what should need to
happen
in order to move from Lore to Sphinx.  It's not quite finished, but I think
it's close enough for people to start discussing it.  In particular, there
are a few claims I've made about Lore and it's capabilities that I'm not
quite sure of (just search for the question marks).

I would very much like to get some feedback from the community (especially
the core developers) on this proposal. I'd especially like to hear about:

- things which are not addressed and should be.
- anything that is addressed in the proposal, but you think should be done
  in a different way.
- Lore's capabilities.

Please let me know what you think.

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091111/522a46cc/attachment.htm 

From glyph at twistedmatrix.com  Wed Nov 11 18:56:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Nov 2009 18:56:49 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
Message-ID: <082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>


On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:

> Please let me know what you think.

Initial reaction: awesome!

I don't really care about the documentation format or tools, I'm just thrilled that someone is willing to step forward and maintain them in _any_ form.

Secondary reaction: automated testing of code and examples is great.  Necessary, even, especially for a new tool.  But doctests are not so much a testing plan as a disease that comes to infest your code.

(You are free to disagree with me about the utility or quality of doctest as a tool, but doing so on this mailing list is counterproductive, as my mind is pretty well made up.  Despite the fact that I have fond feelings towards lore's design, this is the *only* point I'd veto a migration over.)

Automated tests for documentation should look roughly like this:

    http://divmod.org/trac/browser/trunk/Nevow/nevow/test/test_howtolistings.py?rev=17299

but the stuff that does "sys.modules.clear()" and so on should be a lot further away from the actual test cases.

The only thing that is necessary for testing like that to work is the ability to reference an external .py file as a code listing.  This is also a good thing because then users can just run the Python files straight in the examples directory, rather than copying some stuff from a web browser into a text editor, mucking around with path variables for a while, trying to make sure they got the indentation right etc.

Can sphinx do that out of the box?

Tertiary reaction, since I had to go to divmod.org to dig up that example: a migration plan should include the Divmod projects, especially Nevow, since a lot of people use that.  But, if there's an automated tool that can handle the Twisted conversion, there really shouldn't be any additional effort to just run it over the Divmod codebase and just check in the result.  The only real work will be in adjusting the buildbot.  This is really just an argument for an automated, repeatable conversion process rather than manual editing.



From kevin.horn at gmail.com  Wed Nov 11 19:37:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 11 Nov 2009 18:37:01 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
Message-ID: <562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>

On Wed, Nov 11, 2009 at 5:56 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:
>
> > Please let me know what you think.
>
> Initial reaction: awesome!
>
>
Well, that's encouraging. :)


> I don't really care about the documentation format or tools, I'm just
> thrilled that someone is willing to step forward and maintain them in _any_
> form.
>
> Secondary reaction: automated testing of code and examples is great.
>  Necessary, even, especially for a new tool.  But doctests are not so much a
> testing plan as a disease that comes to infest your code.
>
> (You are free to disagree with me about the utility or quality of doctest
> as a tool, but doing so on this mailing list is counterproductive, as my
> mind is pretty well made up.  Despite the fact that I have fond feelings
> towards lore's design, this is the *only* point I'd veto a migration over.)
>

I never use doctests in my own projects...but the functionality comes with
Sphinx (as a "built-in extension"...which such a fantastic oxymoron it makes
me smile).

There's lot's of other work being done in the Sphinx testing arena, though,
notably:

Sphinxtest:
http://groups.google.com/group/sphinx-dev/browse_thread/thread/fd9fc42648fc306c#
Manuel: http://packages.python.org/manuel/

and something-I-read-about-the-other-day-but-can't-find-now.


> Automated tests for documentation should look roughly like this:
>
>
> http://divmod.org/trac/browser/trunk/Nevow/nevow/test/test_howtolistings.py?rev=17299
>
> but the stuff that does "sys.modules.clear()" and so on should be a lot
> further away from the actual test cases.
>
> The only thing that is necessary for testing like that to work is the
> ability to reference an external .py file as a code listing.  This is also a
> good thing because then users can just run the Python files straight in the
> examples directory, rather than copying some stuff from a web browser into a
> text editor, mucking around with path variables for a while, trying to make
> sure they got the indentation right etc.
>
> Can sphinx do that out of the box?
>

Yes.  The "literalinclude" directive pulls in an external file and sticks it
in a literal block (the ReST equivalent of a <pre> tag).  So you could use
whatever testing framework you wanted and just reference those files.


>
> Tertiary reaction, since I had to go to divmod.org to dig up that example:
> a migration plan should include the Divmod projects, especially Nevow, since
> a lot of people use that.  But, if there's an automated tool that can handle
> the Twisted conversion, there really shouldn't be any additional effort to
> just run it over the Divmod codebase and just check in the result.  The only
> real work will be in adjusting the buildbot.  This is really just an
> argument for an automated, repeatable conversion process rather than manual
> editing.
>
>
Hmmm...I hadn't considered the Divmod stuff, but you're right.

I think the automated conversion plan is the way to go...up to a point.  As
I laid out in the proposal, I think at some point, the Sphinx docs (and the
automated conversion process) will become "good enough", and then edits
should be done manually to the ReST/Sphinx source files, rather than the
Lore files.  Otherwise you just end up with another tool to maintain
forever.  And in my opinion, Twisted needs to get away from having it's own
collection of self-maintained tools as much as possible. :)

I have some basic code for the conversion process, but it's in a VERY
preliminary state, and needs a fair bit of work.  There's still several tags
it doesn't handle at all (including tables, which _might_ be a real beast),
and it needs to be refactored some.  I mostly wrote it as a proof-of-concept
for myself to prove (to myself) that automated conversion was feasible.
 That said, it _will_ generate a buildable Sphinx project (though it's
currently VERY ugly, and generates warning in the hundreds).

If there's interest, I can put up what I can generate to this point, though
it's awfully early days yet.


Also:
Were my claims/assumption about Lore pretty much correct?  Did I miss
anything?

Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091111/887bc52c/attachment.htm 

From glyph at twistedmatrix.com  Thu Nov 12 00:22:19 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Nov 2009 00:22:19 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
Message-ID: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>

On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:

> On Wed, Nov 11, 2009 at 5:56 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:
> 
> > Please let me know what you think.
> 
> Initial reaction: awesome!
> 
> Well, that's encouraging. :)

Please!  Be encouraged!  And therefore maintain our documentation and documentation toolchain! :)

> There's lot's of other work being done in the Sphinx testing arena, though, notably: ...

It's great to see that the testing vibe is out there!

> Can sphinx do that out of the box?
> 
> Yes.  The "literalinclude" directive pulls in an external file and sticks it in a literal block (the ReST equivalent of a <pre> tag).  So you could use whatever testing framework you wanted and just reference those files.

Excellent.  In that case (modulo several weeks of work on your part), I'm sold.

> Hmmm...I hadn't considered the Divmod stuff, but you're right. 

I'm glad you think so.  I do tend to be, especially about Twisted ;-).

> I think the automated conversion plan is the way to go...up to a point.  As I laid out in the proposal, I think at some point, the Sphinx docs (and the automated conversion process) will become "good enough", and then edits should be done manually to the ReST/Sphinx source files, rather than the Lore files.  Otherwise you just end up with another tool to maintain forever.

Well, sure.  The goal of this process is to delete all the lore files and check in a bunch of sphinx files which replace them.  This should be done in a branch, and reviewed like usual; the automated tool is just to make the process easier and more reliable.

You have two options regarding the Divmod projects; either you can make the tool good enough that you just run it, or you can commit to putting the work into the minor edits to correct the tool's deficiencies on the Divmod lore docs _before_ you can remove / desupport twisted.lore.

Another thing to note in the migration plan: despite <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>, no deprecation period should be necessary for lore, it can just be removed.  It has no users that I'm aware of, and if anyone does still use it they can manually copy their 'twisted/lore' directory and 'lore' script into new installations until they have a chance to run your script.  It's not designed to be used as a library anyway; it's a bit of an accident that it's even present in the twisted/* tree.

One thing to note in the mig	ration plan is the closing of outstanding branches with lore changes in them.  This would be a good topic for a sprint.

> And in my opinion, Twisted needs to get away from having it's own collection of self-maintained tools as much as possible. :)

Not just your opinion :).

> I have some basic code for the conversion process, but it's in a VERY preliminary state, and needs a fair bit of work.  There's still several tags it doesn't handle at all (including tables, which _might_ be a real beast), and it needs to be refactored some.  I mostly wrote it as a proof-of-concept for myself to prove (to myself) that automated conversion was feasible.  That said, it _will_ generate a buildable Sphinx project (though it's currently VERY ugly, and generates warning in the hundreds).
> 
> If there's interest, I can put up what I can generate to this point, though it's awfully early days yet.

Release early, release often.  Most efforts like this end up moribund: you sound serious right now, but never underestimate the extent to which life will get in the way.  If you put up what you've got somewhere public ASAP, (A) some people will probably show up to egg you on, (B) it's possible for them to contribute (and those contributions will be a motivation on days when this seems like a ridiculous amount of effort just to make Twisted's docs look nicer), and (C) they can pick up the slack if you need to disappear, either temporarily or permanently.

*don't* try to get your migration tools to the state where they can get through Twisted code review, etc.  Hopefully we can throw these away quickly.

> Also:
> Were my claims/assumption about Lore pretty much correct?  Did I miss anything?

Your claim about highlighting only python is correct.  See twisted.lore.tree.munge (is it any wonder that we need to replace this thing), specifically the bit where it calls fontifyPython and there is no definition of fontifyAnythingElse.

The "docs errors throw build warnings" thing is an extremely confusing header, although I understand what you're saying.  I'd re-word the whole thing in terms of test integration.  But the important point has nothing to do with doctest, it's that sphinx has various bits of testing support, including "leave the examples outside the documentation so they're just regular python and don't need to be parsed".

There's a "*" for "requires plugin" - it's worth mentioning that Sphinx has a usable, and more importantly *actually used by some people*, extension API, whereas lore's extension mechanisms are... ahem.  Let's not talk about lore's extension mechanism.

You do need to address linking *from* sphinx documentation *to* API documentation, and ideally, vice versa.  Lore can do the former, via 'class="API"', although pydoctor still has no way to do the latter (see <http://twistedmatrix.com/trac/ticket/2801>).

I don't know of any other projects (besides the ones on divmod.org) which currently use lore.  The only other one I'm aware of that ever did is <https://launchpad.net/thinkcspy>, and they switched to using sphinx input a while ago.  Maybe you could bug Jeff Elkner and see if he did any automation which might help?

You're correct that lore cannot include partial external files.

In your description of 'phase 0', you say "once it has been verified": be specific here.  Nobody is going to want to be the one who actually pulls a trigger on a change this big, but it needs to get done.  Propose a specific mechanism for the verification.  Lay out a timeline which culminates in the ReST files being committed to trunk.  It's too early for specific dates, but you can say "first we will do X, then we will do Y".

In general though, your representation of Lore seems accurate.

Thanks again for taking this on.  Good luck!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091112/8d1a1f94/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Nov 12 08:01:48 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Nov 2009 13:01:48 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
Message-ID: <20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>

On 05:22 am, glyph at twistedmatrix.com wrote:
>On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:
>
>You're correct that lore cannot include partial external files.

Actually, it has limited support for this.  The PB documentation relies 
on it (search for "skipLines" in doc/core/howto).  And if it were 
implemented better, I think I would find it a useful feature.

Jean-Paul


From eero.nevalainen at indagon.com  Thu Nov 12 08:44:12 2009
From: eero.nevalainen at indagon.com (Eero Nevalainen)
Date: Thu, 12 Nov 2009 15:44:12 +0200
Subject: [Twisted-Python] Using sqlalchemy in twisted.
In-Reply-To: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
References: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
Message-ID: <4AFC112C.50403@indagon.com>

Peter Cai wrote:
> If you Google "sqlalchemy twisted", you can see my post is on the top:
> 
> http://groups.google.com/group/sqlalchemy/browse_thread/thread/c802749c9d0dd6
> 
> I've been busy for a long time so I didn't considered this question
> anymore.  But occasionally, I got some new ideas today.
> 
> I was suggested to sandbox sqlalchemy into process contains a single thread.
> At that time, I thought it was just the same as using deferToThread
> and makes no scenes to have the overhead of IPC.
> 
> But now I see the benefits.
> 
> A single thread process makes it possible to use a sqlalchemy session
> as a cache.  That would greatly reduce the chances to lookup database.
> This could not be done with deferToThread because it uses thread pool.
>  So there shall be more than one session and the state of cached
> objects will conflict.
> 
> But there are still one problem : how to transfer a sqlalchemy object
> between 2 process?  Some kind of serialization and de-serialization is
> needed.  Without test, it's too early to tell if it works.
> 

Is there a reason why multiprocessing could not be used?

http://docs.python.org/library/multiprocessing.html#exchanging-objects-between-processes

-- 
Eero Nevalainen


From p.mayers at imperial.ac.uk  Thu Nov 12 10:10:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 12 Nov 2009 15:10:30 +0000
Subject: [Twisted-Python] Using sqlalchemy in twisted.
In-Reply-To: <4AFC112C.50403@indagon.com>
References: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
	<4AFC112C.50403@indagon.com>
Message-ID: <4AFC2566.5020105@imperial.ac.uk>

> Is there a reason why multiprocessing could not be used?
> 
> http://docs.python.org/library/multiprocessing.html#exchanging-objects-between-processes
> 

Yes


http://twistedmatrix.com/trac/ticket/3901


From koblas at extra.com  Thu Nov 12 12:10:59 2009
From: koblas at extra.com (David Koblas)
Date: Thu, 12 Nov 2009 09:10:59 -0800
Subject: [Twisted-Python] Thrift/Twisted reconnecting client .. code review?
Message-ID: <4AFC41A3.6060907@extra.com>

I just got done putting together a reconnecting client (with queuing) 
for twisted.  While it appears to work for me in practice, if anybody 
has a few minutes to do a quick code review that would be really handy.  
This is based on another thrift client, but in the end totally gutted 
and now hopefully works, though I have to say there are always enough 
edge cases with the twisted model that I'm never sure.

Code is available here..
    http://www.skitoy.com/p/twisted-code-review/261

Thanks,
--david



From kevin.horn at gmail.com  Thu Nov 12 12:36:23 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 11:36:23 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
Message-ID: <562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>

On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

Excellent.  In that case (modulo several weeks of work on your part), I'm
> sold.
>

Hooray!


> Hmmm...I hadn't considered the Divmod stuff, but you're right.
>
>
> I'm glad you think so.  I do tend to be, especially about Twisted ;-).
>
> I think the automated conversion plan is the way to go...up to a point.  As
> I laid out in the proposal, I think at some point, the Sphinx docs (and the
> automated conversion process) will become "good enough", and then edits
> should be done manually to the ReST/Sphinx source files, rather than the
> Lore files.  Otherwise you just end up with another tool to maintain
> forever.
>
>
> Well, sure.  The goal of this process is to delete all the lore files and
> check in a bunch of sphinx files which replace them.  This should be done in
> a branch, and reviewed like usual; the automated tool is just to make the
> process easier and more reliable.
>
> You have two options regarding the Divmod projects; either you can make the
> tool good enough that you just run it, or you can commit to putting the work
> into the minor edits to correct the tool's deficiencies on the Divmod lore
> docs _before_ you can remove / desupport twisted.lore.
>

I think the second option is probably what will end up happening, though it
may not be necessary to do too much of this.  So far, I've only got 3 files
in the Twisted Lore docs that wil definitely need reworking before they can
be processed.  And they have some really strange markup.  So maybe there
won't be too much of this in the Divmod stuff. (crossing fingers!)


> Another thing to note in the migration plan: despite <
> http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>, no deprecation
> period should be necessary for lore, it can just be removed.  It has no
> users that I'm aware of, and if anyone does still use it they can manually
> copy their 'twisted/lore' directory and 'lore' script into new installations
> until they have a chance to run your script.  It's not designed to be used
> as a library anyway; it's a bit of an accident that it's even present in the
> twisted/* tree.
>
> One thing to note in the migration plan is the closing of outstanding
> branches with lore changes in them.  This would be a good topic for a
> sprint.
>

Yikes.  Another thing I hadn't considered.  Depending on how many branches
there, this could get nasty.  I'll have to do some thinking on this.


> And in my opinion, Twisted needs to get away from having it's own
> collection of self-maintained tools as much as possible. :)
>
> Not just your opinion :).
>

Glad to hear it :).

I have some basic code for the conversion process, but it's in a VERY
preliminary state, and needs a fair bit of work.  There's still several tags
it doesn't handle at all (including tables, which _might_ be a real beast),
and it needs to be refactored some.  I mostly wrote it as a proof-of-concept
for myself to prove (to myself) that automated conversion was feasible.
 That said, it _will_ generate a buildable Sphinx project (though it's
currently VERY ugly, and generates warning in the hundreds).

If there's interest, I can put up what I can generate to this point, though
it's awfully early days yet.

Release early, release often.  Most efforts like this end up moribund: you
> sound serious right now, but never underestimate the extent to which life
> will get in the way.  If you put up what you've got somewhere public ASAP,
> (A) some people will probably show up to egg you on, (B) it's possible for
> them to contribute (and those contributions will be a motivation on days
> when this seems like a ridiculous amount of effort just to make Twisted's
> docs look nicer), and (C) they can pick up the slack if you need to
> disappear, either temporarily or permanently.
>

I'll try to put up what I've got later today.



> *don't* try to get your migration tools to the state where they can get
> through Twisted code review, etc.  Hopefully we can throw these away
> quickly.
>

Roger that.

Also:
> Were my claims/assumption about Lore pretty much correct?  Did I miss
> anything?
>
> Your claim about highlighting only python is correct.  See
> twisted.lore.tree.munge (is it any wonder that we need to replace this
> thing), specifically the bit where it calls fontifyPython and there is no
> definition of fontifyAnythingElse.
>

Noted.



> The "docs errors throw build warnings" thing is an extremely confusing
> header, although I understand what you're saying.  I'd re-word the whole
> thing in terms of test integration.  But the important point has nothing to
> do with doctest, it's that sphinx has various bits of testing support,
> including "leave the examples outside the documentation so they're just
> regular python and don't need to be parsed".
>

I've just removed this whole section, as it _was_ confusing, and also mostly
redundant.



> There's a "*" for "requires plugin" - it's worth mentioning that Sphinx has
> a usable, and more importantly *actually used by some people*, extension
> API, whereas lore's extension mechanisms are... ahem.  Let's not talk about
> lore's extension mechanism.
>

I've added something about this.



> You do need to address linking *from* sphinx documentation *to* API
> documentation, and ideally, vice versa.  Lore can do the former, via
> 'class="API"', although pydoctor still has no way to do the latter (see <
> http://twistedmatrix.com/trac/ticket/2801>).
>

This should be doable.  Right now I'm thinking of doing something similar to
an existing extension, which creates links to generated Epydoc API docs.
Shouldn't be too hard to do something similar for pyDoctor.  I'll get
something in the proposal.



> I don't know of any other projects (besides the ones on divmod.org) which
> currently use lore.  The only other one I'm aware of that ever did is <
> https://launchpad.net/thinkcspy>, and they switched to using sphinx input
> a while ago.  Maybe you could bug Jeff Elkner and see if he did any
> automation which might help?
>
>
> In your description of 'phase 0', you say "once it has been verified": be
> specific here.  Nobody is going to want to be the one who actually pulls a
> trigger on a change this big, but it needs to get done.  Propose a specific
> mechanism for the verification.  Lay out a timeline which culminates in the
> ReST files being committed to trunk.  It's too early for specific dates, but
> you can say "first we will do X, then we will do Y".
>

I'll try to get this updated a bit later.



> In general though, your representation of Lore seems accurate.
>
> Thanks again for taking this on.  Good luck!
>

Thanks.  I have a feeling I'll need it :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091112/44ed29ee/attachment.htm 

From kevin.horn at gmail.com  Thu Nov 12 12:36:59 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 11:36:59 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>
Message-ID: <562bcc10911120936u20b5b6a3v62283ee70485093@mail.gmail.com>

On Thu, Nov 12, 2009 at 7:01 AM, <exarkun at twistedmatrix.com> wrote:

> On 05:22 am, glyph at twistedmatrix.com wrote:
> >On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:
> >
> >You're correct that lore cannot include partial external files.
>
> Actually, it has limited support for this.  The PB documentation relies
> on it (search for "skipLines" in doc/core/howto).  And if it were
> implemented better, I think I would find it a useful feature.
>
> Jean-Paul
>
>
>
Updated in the proposal.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091112/45201f36/attachment.htm 

From vitaly at synapticvision.com  Thu Nov 12 12:47:29 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 12:47:29 -0500
Subject: [Twisted-Python] Amount of concurrent connections
Message-ID: <20091112124729.17252ovrg3xl396o@216.129.205.5>

hi,
what would be expected amount(+-) of concurrent connections for  
twisted reactor if single request to gateway eq 1Kb and response back  
30Kb (I mean response data much more bigger than request)? (1Gb  
network card on twisted machine)

Appreciate the help.



From vitaly at synapticvision.com  Thu Nov 12 12:50:06 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 12:50:06 -0500
Subject: [Twisted-Python] Multi-reactor architecture
Message-ID: <20091112125006.24731mma3lcylakg@216.129.205.5>

hi,
what would be the right thing to start from in order to build  
multi-reactor arch to handle thousands of concurrent connections?

Appreciate the help.



From art at academ.org  Thu Nov 12 12:58:15 2009
From: art at academ.org (Bokhan Artem)
Date: Thu, 12 Nov 2009 23:58:15 +0600
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <20091112124729.17252ovrg3xl396o@216.129.205.5>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
Message-ID: <4AFC4CB7.1000702@academ.org>

vitaly at synapticvision.com ?????:
> hi,
> what would be expected amount(+-) of concurrent connections

Why this should depend on size of responses/requests?

  for
> twisted reactor if single request to gateway eq 1Kb and response back  
> 30Kb (I mean response data much more bigger than request)? (1Gb  
> network card on twisted machine)
> 
> Appreciate the help.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From vitaly at synapticvision.com  Thu Nov 12 13:03:19 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:03:19 -0500
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <4AFC4CB5.4080300@indagon.com>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
	<4AFC4CB5.4080300@indagon.com>
Message-ID: <20091112130319.235560hb2w5qft0k@216.129.205.5>


Sorry, forgot to mention, per second.
Amount of concurrent connections per second.

Quoting "Eero Nevalainen" <eero.nevalainen at indagon.com>:

> vitaly at synapticvision.com wrote:
>> hi,
>> what would be expected amount(+-) of concurrent connections for    
>> twisted reactor if single request to gateway eq 1Kb and response   
>> back  30Kb (I mean response data much more bigger than request)?   
>> (1Gb  network card on twisted machine)
>>
>> Appreciate the help.
>
> If a connection arrives once a day, I'd say a very low amount.
>
> Be more specific...
>
> -- 
> Eero Nevalainen
>





From vitaly at synapticvision.com  Thu Nov 12 13:05:45 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:05:45 -0500
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <4AFC4CB7.1000702@academ.org>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
	<4AFC4CB7.1000702@academ.org>
Message-ID: <20091112130545.627250r7km4jmd0c@216.129.205.5>


Of course its also depend on frequency of r/r, but also on size of  
data. Or am I missing something?

Quoting "Bokhan Artem" <art at academ.org>:

> vitaly at synapticvision.com ?????:
>> hi,
>> what would be expected amount(+-) of concurrent connections
>
> Why this should depend on size of responses/requests?
>
>   for
>> twisted reactor if single request to gateway eq 1Kb and response back
>> 30Kb (I mean response data much more bigger than request)? (1Gb
>> network card on twisted machine)
>>
>> Appreciate the help.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From rlotun at gmail.com  Thu Nov 12 13:09:27 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 12 Nov 2009 18:09:27 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112125006.24731mma3lcylakg@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
Message-ID: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>

> hi,
> what would be the right thing to start from in order to build
> multi-reactor arch to handle thousands of concurrent connections?

Why would you want multiple reactors? The only reason would be to have
one per CPU core. For that the simplest thing would be to manually
start n twistd processes, one per core and have a reverse proxy
process listening on a port and distributing connections to each
twistd process. Of course, you can extend this architecture to
multiple machines.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From vitaly at synapticvision.com  Thu Nov 12 13:23:30 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:23:30 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
Message-ID: <20091112132330.154810f35jpqlz1c@216.129.205.5>


How reverse proxy knows to balance between couple of twistd processes?
Do you have may be an example(or doc link) of such proxy that can  
distributing connections to each twistd process?


Quoting "Reza Lotun" <rlotun at gmail.com>:

>> hi,
>> what would be the right thing to start from in order to build
>> multi-reactor arch to handle thousands of concurrent connections?
>
> Why would you want multiple reactors? The only reason would be to have
> one per CPU core. For that the simplest thing would be to manually
> start n twistd processes, one per core and have a reverse proxy
> process listening on a port and distributing connections to each
> twistd process. Of course, you can extend this architecture to
> multiple machines.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From art at academ.org  Thu Nov 12 13:37:40 2009
From: art at academ.org (Bokhan Artem)
Date: Fri, 13 Nov 2009 00:37:40 +0600
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <20091112130319.235560hb2w5qft0k@216.129.205.5>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>	<4AFC4CB5.4080300@indagon.com>
	<20091112130319.235560hb2w5qft0k@216.129.205.5>
Message-ID: <4AFC55F4.2040300@academ.org>

vitaly at synapticvision.com ?????:
> Sorry, forgot to mention, per second.
> Amount of concurrent connections per second.

Just for example, in my tests standard twisted http server can do about 1k dummy 
req/resp per second on one modern cpu core.

> 
> Quoting "Eero Nevalainen" <eero.nevalainen at indagon.com>:
> 
>> vitaly at synapticvision.com wrote:
>>> hi,
>>> what would be expected amount(+-) of concurrent connections for    
>>> twisted reactor if single request to gateway eq 1Kb and response   
>>> back  30Kb (I mean response data much more bigger than request)?   
>>> (1Gb  network card on twisted machine)
>>>
>>> Appreciate the help.
>> If a connection arrives once a day, I'd say a very low amount.
>>
>> Be more specific...
>>
>> -- 
>> Eero Nevalainen
>>
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From rlotun at gmail.com  Thu Nov 12 13:40:43 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 12 Nov 2009 18:40:43 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112132330.154810f35jpqlz1c@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
Message-ID: <95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>

> How reverse proxy knows to balance between couple of twistd processes?
> Do you have may be an example(or doc link) of such proxy that can
> distributing connections to each twistd process?

This is a classic distributed systems architecture. A reverse proxy
can either something like haproxy, nginx, apache, perlbal or whatever
(even another twisted process). The twistd processes can be seen as
simply other machines on a LAN - instead they all have the
127.0.0.1:<port> where the port is different for each process. I don't
have a more comprehensive example, but there are many many examples of
reverse proxying servers all over the place - google "nginx reverse
proxy" for many examples.

Hope that helps.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From vitaly at synapticvision.com  Thu Nov 12 13:53:54 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:53:54 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
	<95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
Message-ID: <20091112135354.42144z676sugzqo8@216.129.205.5>


You right, distributed systems architecture.

Probably I need to rephrase my question more precisely: how to build  
distributed system architecture with Twisted technology only ?

As you mentioned, even reverse proxy could be a another twisted process.

Quoting "Reza Lotun" <rlotun at gmail.com>:

>> How reverse proxy knows to balance between couple of twistd processes?
>> Do you have may be an example(or doc link) of such proxy that can
>> distributing connections to each twistd process?
>
> This is a classic distributed systems architecture. A reverse proxy
> can either something like haproxy, nginx, apache, perlbal or whatever
> (even another twisted process). The twistd processes can be seen as
> simply other machines on a LAN - instead they all have the
> 127.0.0.1:<port> where the port is different for each process. I don't
> have a more comprehensive example, but there are many many examples of
> reverse proxying servers all over the place - google "nginx reverse
> proxy" for many examples.
>
> Hope that helps.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From kevin.horn at gmail.com  Thu Nov 12 14:11:52 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 13:11:52 -0600
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112135354.42144z676sugzqo8@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
	<95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
	<20091112135354.42144z676sugzqo8@216.129.205.5>
Message-ID: <562bcc10911121111s2b9cc223tf323155d08195dad@mail.gmail.com>

On Thu, Nov 12, 2009 at 12:53 PM, <vitaly at synapticvision.com> wrote:

>
> You right, distributed systems architecture.
>
> Probably I need to rephrase my question more precisely: how to build
> distributed system architecture with Twisted technology only ?
>
> As you mentioned, even reverse proxy could be a another twisted process.
>
>
You might look at txLoadBalancer: https://launchpad.net/txloadbalancer

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091112/0e1c762e/attachment.htm 

From doug.farrell at gmail.com  Fri Nov 13 09:32:25 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Fri, 13 Nov 2009 09:32:25 -0500
Subject: [Twisted-Python] synchronous/asynchronous api: possible interface
Message-ID: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>

Hi all,

I'd like to get some comments on the code below (including, "don't be
a bonehead!" <g>). I'm trying to write a API library for database
access that can be used by both synchronous (non-twisted, no reactor)
code and asynchronous (twisted, with reactor) code where the methods
of the library can called in either environment. What I'd like is the
method to return the results of the call (database query results) when
in synchronous mode, and a deferred that is a result of the database
call in asynchronous mode.

What I've done below is create a decorator class called CallerMode
that is used to decorate a function/method that normally returns a
deferred. If the CallerMode class is in synchronous mode it starts a
reactor to get the default callbacks to get called, which gets the
results or exceptions, and stops the reactor.

Am I being a dunce doing this kind of thing? Any suggestions,
comments, etc. are welcome.

Thanks!
Doug


import sys
from functools import wraps
from twisted.internet import reactor
from twisted.python import log
from twisted.web.client import getPage


class CallerMode(object):
    '''This is a decorator class to make calls to an api play nice
    in synchronous or asynchronous mode'''
    ASYNCH = 'asynch'
    SYNCH  = 'synch'
    STATE  = SYNCH

    def __init__(self):
        self.retval = None

    def __call__(self, f):
        '''This provides the decorator function wrapper, which will return
        a deferred for asynchronous mode and the results of the wrapped
        function in synchronous mode'''
        def CB(result):
            self.retval = result
            reactor.stop()
        def EB(failure):
            reactor.stop()
            failure.raiseException()
        @wraps(f)
        def func(*args, **kwargs):
            d = f(*args, **kwargs)
            if CallerMode.STATE == CallerMode.SYNCH:
                d.addCallback(CB).addErrback(EB)
                reactor.run()
            return self.retval if CallerMode.STATE == CallerMode.SYNCH else d
        return func


class Library(object):
    '''This is just a class to provide an API to call for data,
    in this case just using getPage() to get a deferred that gets some
    data, vs. having to set up a database for this test program
    '''
    def __init__(self):
        log.msg('MyLib has been initialized')
        self._retval = None

    @CallerMode()
    def page(self):
        return getPage('http://www.google.com')


def doSomethingWithData(data):
    log.msg(data)


log.FileLogObserver.timeFormat = '%Y-%m-%d %H:%M:%S'
log.startLogging(sys.stdout)

lib = Library()

#CallerMode.STATE = CallerMode.ASYNCH
CallerMode.STATE = CallerMode.SYNCH

# call the library API method
result = lib.page()

# depending on the CallerMode, handle the results differently
if CallerMode.STATE == CallerMode.SYNCH:
    doSomethingWithData(result)
elif CallerMode.STATE == CallerMode.ASYNCH:
    result.addCallback(doSomethingWithData)
    reactor.run()


From landreville at deadtreepages.com  Fri Nov 13 09:52:36 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 09:52:36 -0500
Subject: [Twisted-Python] Deferred SOAP methods
Message-ID: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>

I am making a SOAP server and all (or at least the vast majority) will be
returning a deferred. The whole SOAP method is encapsulated in a deferred in
most of my cases (I havent implemented this part yet.) Then I got the idea
that twisted.web.soap could just wrap my SOAP method (retrieved with
lookupFunction) in a deferred and return that deferred right away.

For instance I would change twisted.web.soap.render  where it says d =
defer.maybeDeferred to  d = threads.deferToThread

I could also use an attribute to specify if I do not want it deferred (kinda
the same way to determine whether to use keywords or not)

Is this actually a good idea? I figured there might be a reason this wasn't
done already considering everything in twisted is pretty well thought out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091113/548461a0/attachment-0001.htm 

From exarkun at twistedmatrix.com  Fri Nov 13 10:21:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 15:21:11 -0000
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
In-Reply-To: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>
References: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>
Message-ID: <20091113152111.3229.82963453.divmod.xquotient.699@localhost.localdomain>

On 02:32 pm, doug.farrell at gmail.com wrote:
>Hi all,
>
>I'd like to get some comments on the code below (including, "don't be
>a bonehead!" <g>). I'm trying to write a API library for database
>access that can be used by both synchronous (non-twisted, no reactor)
>code and asynchronous (twisted, with reactor) code where the methods
>of the library can called in either environment. What I'd like is the
>method to return the results of the call (database query results) when
>in synchronous mode, and a deferred that is a result of the database
>call in asynchronous mode.
>
>What I've done below is create a decorator class called CallerMode
>that is used to decorate a function/method that normally returns a
>deferred. If the CallerMode class is in synchronous mode it starts a
>reactor to get the default callbacks to get called, which gets the
>results or exceptions, and stops the reactor.
>
>Am I being a dunce doing this kind of thing? Any suggestions,
>comments, etc. are welcome.

If you add a second call to your example function in synchronous mode, I 
think you'll notice there's a problem - you can only start and stop the 
reactor once.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Nov 13 10:25:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 15:25:25 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
Message-ID: <20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>

On 02:52 pm, landreville at deadtreepages.com wrote:
>I am making a SOAP server and all (or at least the vast majority) will 
>be
>returning a deferred. The whole SOAP method is encapsulated in a 
>deferred in
>most of my cases (I havent implemented this part yet.) Then I got the 
>idea
>that twisted.web.soap could just wrap my SOAP method (retrieved with
>lookupFunction) in a deferred and return that deferred right away.
>
>For instance I would change twisted.web.soap.render  where it says d =
>defer.maybeDeferred to  d = threads.deferToThread

It sounds like you're conflating Deferreds and threads a little bit.

The reason Twisted doesn't use deferToThread on any method it calls by 
default is that threads are a really bummer.  You have to worry about 
thread safety, you generally lose repeatability and determinism, your 
unit tests become a lot harder to write, if it's still possible to write 
them at all.  Then there are the performance considerations.  There are 
many kinds of code that CPython threads don't make any faster (and many 
kinds which it makes slower).

On the other hand, sometimes you really do want to do your work in a 
thread.  That's why deferToThread exists, after all - to make your life 
a little bit simpler when those cases do arise. :)

What is it that you're going to be doing in these SOAP methods?

Jean-Paul


From landreville at deadtreepages.com  Fri Nov 13 10:42:50 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 10:42:50 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
Message-ID: <9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>

On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:52 pm, landreville at deadtreepages.com wrote:
> >I am making a SOAP server and all (or at least the vast majority) will
> >be
> >returning a deferred. The whole SOAP method is encapsulated in a
> >deferred in
> >most of my cases (I havent implemented this part yet.) Then I got the
> >idea
> >that twisted.web.soap could just wrap my SOAP method (retrieved with
> >lookupFunction) in a deferred and return that deferred right away.
> >
> >For instance I would change twisted.web.soap.render  where it says d =
> >defer.maybeDeferred to  d = threads.deferToThread
>
> It sounds like you're conflating Deferreds and threads a little bit.
>
> The reason Twisted doesn't use deferToThread on any method it calls by
> default is that threads are a really bummer.  You have to worry about
> thread safety, you generally lose repeatability and determinism, your
> unit tests become a lot harder to write, if it's still possible to write
> them at all.  Then there are the performance considerations.  There are
> many kinds of code that CPython threads don't make any faster (and many
> kinds which it makes slower).
>
> On the other hand, sometimes you really do want to do your work in a
> thread.  That's why deferToThread exists, after all - to make your life
> a little bit simpler when those cases do arise. :)
>
> What is it that you're going to be doing in these SOAP methods?
>
> Jean-Paul
>
>
They are doing a bunch of setting and retrieving information from databases.
There are a couple that load more modules which add more SOAP methods for
interacting with a different database.

 None of the calls depend on eachother, so I don't want/need any of them to
block the application from processing the next soap call. Is there other
ways of generating deferreds without threads that I haven't seen?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091113/b734857d/attachment.htm 

From vitaly at synapticvision.com  Fri Nov 13 10:59:15 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 10:59:15 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
Message-ID: <20091113105915.137049kjp09yvo8w@216.129.205.5>


Doesn't the event loop have a limit of connections it could handle?

Quoting "Reza Lotun" <rlotun at gmail.com>:

>> hi,
>> what would be the right thing to start from in order to build
>> multi-reactor arch to handle thousands of concurrent connections?
>
> Why would you want multiple reactors? The only reason would be to have
> one per CPU core. For that the simplest thing would be to manually
> start n twistd processes, one per core and have a reverse proxy
> process listening on a port and distributing connections to each
> twistd process. Of course, you can extend this architecture to
> multiple machines.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From exarkun at twistedmatrix.com  Fri Nov 13 11:04:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 16:04:28 -0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113105915.137049kjp09yvo8w@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
Message-ID: <20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>

On 03:59 pm, vitaly at synapticvision.com wrote:
>
>Doesn't the event loop have a limit of connections it could handle?

Multiple reactors isn't a realistic solution to this.  The solution is 
to switch to an event loop that has a higher limit.  "The" event loop is 
actually a choice of many possible event loops.

So connection limits aren't a good reason to want multiple reactors.

Jean-Paul


From vitaly at synapticvision.com  Fri Nov 13 11:44:06 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 11:44:06 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
Message-ID: <20091113114406.321133qjg0aaus8w@216.129.205.5>


I've get confused enough already :-))

Once there is a Site that serving many clients and  
reactor.listenSSL(), for example, that actually serving many TCP  
connections and all these going through TwistedGateway, my logic,  
please correct me if I wrong, says at some point there will be a limit  
on concurrent TCP connections, so how is it solved with Twisted?


Quoting exarkun at twistedmatrix.com:

> On 03:59 pm, vitaly at synapticvision.com wrote:
>>
>> Doesn't the event loop have a limit of connections it could handle?
>
> Multiple reactors isn't a realistic solution to this.  The solution is
> to switch to an event loop that has a higher limit.  "The" event loop is
> actually a choice of many possible event loops.
>
> So connection limits aren't a good reason to want multiple reactors.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From rlotun at gmail.com  Fri Nov 13 12:08:35 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 13 Nov 2009 17:08:35 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113114406.321133qjg0aaus8w@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
Message-ID: <95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>

> Once there is a Site that serving many clients and
> reactor.listenSSL(), for example, that actually serving many TCP
> connections and all these going through TwistedGateway, my logic,
> please correct me if I wrong, says at some point there will be a limit
> on concurrent TCP connections, so how is it solved with Twisted?

That's a good question and I'm not sure if there's a definite answer
to this (as far as I know). I think it depends on your application -
for example, if your server is performing a big computation then on
average client connections will last longer, meaning you'll have more
concurrent connections.

The best way to determine this is to *measure* it - for example, you
can do a load test with httperf and ramp up connections until this
start to break or become unresponsive.

You can mitigate the situation by tuning your platform a bit (assuming
you're using linux)
- use the epoll reactor, which is high performance
- make sure the number of open file descriptors is set to something
high (and *not* 1024) - see `ulimit -a`
- make sure you tune your tcp settings - see /etc/sysctl.conf, namely
fs.file-max and various net.ipv4 settings (google is your friend on
the best settings, coupled with testing)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From vitaly at synapticvision.com  Fri Nov 13 12:25:15 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 12:25:15 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
Message-ID: <20091113122515.10195h9xxugo2d0c@216.129.205.5>


thank you for such detailed response.
I feel, finally I've succeed to express my original question correctly.

So if I go one step forward, and lets assume that indeed there is such  
limit of concurrent connections, THAN:
should it be resolved by another architecture or another usage type of  
Twisted technology or something else?



Quoting "Reza Lotun" <rlotun at gmail.com>:

>> Once there is a Site that serving many clients and
>> reactor.listenSSL(), for example, that actually serving many TCP
>> connections and all these going through TwistedGateway, my logic,
>> please correct me if I wrong, says at some point there will be a limit
>> on concurrent TCP connections, so how is it solved with Twisted?
>
> That's a good question and I'm not sure if there's a definite answer
> to this (as far as I know). I think it depends on your application -
> for example, if your server is performing a big computation then on
> average client connections will last longer, meaning you'll have more
> concurrent connections.
>
> The best way to determine this is to *measure* it - for example, you
> can do a load test with httperf and ramp up connections until this
> start to break or become unresponsive.
>
> You can mitigate the situation by tuning your platform a bit (assuming
> you're using linux)
> - use the epoll reactor, which is high performance
> - make sure the number of open file descriptors is set to something
> high (and *not* 1024) - see `ulimit -a`
> - make sure you tune your tcp settings - see /etc/sysctl.conf, namely
> fs.file-max and various net.ipv4 settings (google is your friend on
> the best settings, coupled with testing)
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From rlotun at gmail.com  Fri Nov 13 12:44:45 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 13 Nov 2009 17:44:45 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113122515.10195h9xxugo2d0c@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
	<20091113122515.10195h9xxugo2d0c@216.129.205.5>
Message-ID: <95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>

> thank you for such detailed response.
> I feel, finally I've succeed to express my original question correctly.
>
> So if I go one step forward, and lets assume that indeed there is such
> limit of concurrent connections, THAN:
> should it be resolved by another architecture or another usage type of
> Twisted technology or something else?

Again, I don't think there are any universal answers to this question.
It depends on what you're building. For example, say it's a REST api,
which by design is stateless (i.e. no sessions). Then you can stick a
load balancer in front (if you're on EC2 amazon has an "elastic load
balancer" service for this) and load balance amongst many machines. As
you find traffic increases you simply add more machines. This is
called "horizontal scalability" and, as you might imagine, its highly
desirable.

Another form is "vertical scalability" - that involves getting a
faster computer to run your server on. This might work for some cases,
but not in general - it seems to be the method applied to scaling
RDBMSs, before going down the road of master/slave setups, sharding
and denormalization.

Of course, you *could* use a different technology entirely when you
need to scale really high. This might make sense if your'e a small
company and growing - say you start out as a small team, and you need
something up quickly that's fairly decent. You happen to know python
so you roll the whole thing out in Twisted. As time progresses, you
may rewrite certain systems in, say, erlang or something and move
forward.

So, it's hard to say, really. At least, I'd like to know myself ;-)
That's what makes the wheel field so interesting - there's a certain
creative element to scalable systems.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From vitaly at synapticvision.com  Fri Nov 13 13:06:24 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 13:06:24 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
	<20091113122515.10195h9xxugo2d0c@216.129.205.5>
	<95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>
Message-ID: <20091113130624.75906t8gwqtgibwo@216.129.205.5>


So if I get stick to the "vertical scalability"(Site has sessions), is  
it gonna be helpful for performance to run Twisted reactor on a single  
core machine vs multi-core machine (after all Python itself has a  
Global Interpreter Lock)?
OR
the entire "TwsitedGateway+listenSSL+Site+reactor" USAGE should be  
re-designed for the project?

What about 64bit machine influence on Twisted?



Quoting "Reza Lotun" <rlotun at gmail.com>:

>> thank you for such detailed response.
>> I feel, finally I've succeed to express my original question correctly.
>>
>> So if I go one step forward, and lets assume that indeed there is such
>> limit of concurrent connections, THAN:
>> should it be resolved by another architecture or another usage type of
>> Twisted technology or something else?
>
> Again, I don't think there are any universal answers to this question.
> It depends on what you're building. For example, say it's a REST api,
> which by design is stateless (i.e. no sessions). Then you can stick a
> load balancer in front (if you're on EC2 amazon has an "elastic load
> balancer" service for this) and load balance amongst many machines. As
> you find traffic increases you simply add more machines. This is
> called "horizontal scalability" and, as you might imagine, its highly
> desirable.
>
> Another form is "vertical scalability" - that involves getting a
> faster computer to run your server on. This might work for some cases,
> but not in general - it seems to be the method applied to scaling
> RDBMSs, before going down the road of master/slave setups, sharding
> and denormalization.
>
> Of course, you *could* use a different technology entirely when you
> need to scale really high. This might make sense if your'e a small
> company and growing - say you start out as a small team, and you need
> something up quickly that's fairly decent. You happen to know python
> so you roll the whole thing out in Twisted. As time progresses, you
> may rewrite certain systems in, say, erlang or something and move
> forward.
>
> So, it's hard to say, really. At least, I'd like to know myself ;-)
> That's what makes the wheel field so interesting - there's a certain
> creative element to scalable systems.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From leyssw at ihug.co.nz  Fri Nov 13 14:18:48 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sat, 14 Nov 2009 08:18:48 +1300
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
In-Reply-To: <mailman.100916.1258123961.23374.twisted-python@twistedmatrix.com>
References: <mailman.100916.1258123961.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AFDB118.1020903@ihug.co.nz>

Hi Doug.

I think that a decorator is a fairly nice idea, however you will 
probably run into the following issue:
http://twistedmatrix.com/trac/ticket/2066

Once a reactor has been started and stopped, starting the reactor again 
will crash your program. You will need to come up with a way to get 
around this problem if you plan to call your database code more than 
once without restarting the python process.

-Tom

------------------------------

Message: 9
Date: Fri, 13 Nov 2009 09:32:25 -0500
From: Doug Farrell <doug.farrell at gmail.com>
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<80c54aa0911130632l63cad82aq54a93cff139c8b02 at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

Hi all,

I'd like to get some comments on the code below (including, "don't be
a bonehead!" <g>). I'm trying to write a API library for database
access that can be used by both synchronous (non-twisted, no reactor)
code and asynchronous (twisted, with reactor) code where the methods
of the library can called in either environment. What I'd like is the
method to return the results of the call (database query results) when
in synchronous mode, and a deferred that is a result of the database
call in asynchronous mode.

What I've done below is create a decorator class called CallerMode
that is used to decorate a function/method that normally returns a
deferred. If the CallerMode class is in synchronous mode it starts a
reactor to get the default callbacks to get called, which gets the
results or exceptions, and stops the reactor.

Am I being a dunce doing this kind of thing? Any suggestions,
comments, etc. are welcome.

Thanks!




From exarkun at twistedmatrix.com  Fri Nov 13 15:46:47 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 20:46:47 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
Message-ID: <20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>

On 03:42 pm, landreville at deadtreepages.com wrote:
>On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:
>
>[snip]
>>
>>What is it that you're going to be doing in these SOAP methods?
>>
>>Jean-Paul
>They are doing a bunch of setting and retrieving information from 
>databases.
>There are a couple that load more modules which add more SOAP methods 
>for
>interacting with a different database.
>
>None of the calls depend on eachother, so I don't want/need any of them 
>to
>block the application from processing the next soap call. Is there 
>other
>ways of generating deferreds without threads that I haven't seen?

There are lots of ways.  Deferreds are just an approach to organizing 
callbacks.  If you're actually asking if there's a way to call blocking 
functions without blocking - no, threads are more or less it (there's 
processes too, but that's sort of the same thing).

Database access is definitely an area where you often have to deal with 
blocking APIs.  If that's why your methods block, then threads might be 
the right solution.  You might want to take a look at 
twisted.enterprise.adbapi, a thread-based wrapper for DB-API 2.0 
modules.

If you're blocking waiting for the network or other events, though, then 
you can probably find a Twisted API to deal with that without using 
threads.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Nov 13 15:52:39 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 20:52:39 -0000
Subject: [Twisted-Python] synchronous/asynchronous api:
	possible	interface
In-Reply-To: <000e0cd5c988fa5405047842cd35@google.com>
References: <20091113152111.3229.82963453.divmod.xquotient.699@localhost.localdomain>
	<000e0cd5c988fa5405047842cd35@google.com>
Message-ID: <20091113205239.27565.1439715987.divmod.xquotient.24@localhost.localdomain>

On 04:03 pm, doug.farrell at gmail.com wrote:
>Jean-Paul,
>
>Thanks for the "heads up", that certainly falls under the D'OH! 
>category. Would you have any suggestions for how I might do this kind 
>of thing?

I already mentioned SynchronousDeferred, so I guess you're not 
interested in that. :)

The main other idea that comes to mind is, in the synchronous case, to 
start the reactor in a separate thread and leave it running.  You can 
ask it to do things with reactor.callFromThread.  Or maybe you can use 
twisted.internet.threads.blockingCallFromThread.

Jean-Paul


From landreville at deadtreepages.com  Fri Nov 13 16:03:55 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 16:03:55 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
Message-ID: <9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>

On Fri, Nov 13, 2009 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:

> On 03:42 pm, landreville at deadtreepages.com wrote:
> >On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:
> >
> >[snip]
> >>
> >>What is it that you're going to be doing in these SOAP methods?
> >>
> >>Jean-Paul
> >They are doing a bunch of setting and retrieving information from
> >databases.
> >There are a couple that load more modules which add more SOAP methods
> >for
> >interacting with a different database.
> >
> >None of the calls depend on eachother, so I don't want/need any of them
> >to
> >block the application from processing the next soap call. Is there
> >other
> >ways of generating deferreds without threads that I haven't seen?
>
> There are lots of ways.  Deferreds are just an approach to organizing
> callbacks.  If you're actually asking if there's a way to call blocking
> functions without blocking - no, threads are more or less it (there's
> processes too, but that's sort of the same thing).
>
> Database access is definitely an area where you often have to deal with
> blocking APIs.  If that's why your methods block, then threads might be
> the right solution.  You might want to take a look at
> twisted.enterprise.adbapi, a thread-based wrapper for DB-API 2.0
> modules.
>
> If you're blocking waiting for the network or other events, though, then
> you can probably find a Twisted API to deal with that without using
> threads.
>
> Jean-Paul
>
>
Most of the time it is datbase access. I guess I shouldn't have chosen
probiscus using the greentrunk api instead of the dbapi. I haven't been
pleased by the postgres drivers in python, so I'm wary to change the db api
and use adbapi around it.

Sometimes the calls are blocking because it is calling another SOAP server
(or possibly itself over SOAP). My SOAP calls will all be blocking because
twisted.web.soap doesn't support WSDL.
Other than db access and accessing soap calls the rest is just formatting
the results.

I'm thinking maybe I could make an attribute of my soap method called
"deferred = True|False" and then if it's True render will wrap the call to
the soap method in a deferred thread, otherwise I will defer blocking
statements inside the SOAP method.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091113/a2bcd398/attachment-0001.htm 

From tuure.laurinolli at indagon.com  Sat Nov 14 09:15:33 2009
From: tuure.laurinolli at indagon.com (Tuure Laurinolli)
Date: Sat, 14 Nov 2009 16:15:33 +0200
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
Message-ID: <4AFEBB85.6040905@indagon.com>

Landreville wrote:

> Sometimes the calls are blocking because it is calling another SOAP 
> server (or possibly itself over SOAP). My SOAP calls will all be 
> blocking because twisted.web.soap doesn't support WSDL.

What are you using for your SOAP client calls, then? There is something 
called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can 
operate with Twisted and supports WSDL.

I once used it to write a server that could be used with an existing 
WSDL as its interface. IIRC its Twised integration has some problems 
(like not supporting asynchronous handling of requests) but they were 
relatively simple to overcome.


From olivier.parisy at free.fr  Sat Nov 14 10:02:50 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 14 Nov 2009 16:02:50 +0100
Subject: [Twisted-Python] Getting local UDP address/port
Message-ID: <4AFEC69A.3070702@free.fr>

I am implementing a UDP protocol where a request is sent to a server 
through a connected UDP transport.

I listen for the answer using reactor.listenUDP(0, myDatagramProtocol).

The local port is not in itself significant (hence the 0), but the 
protocol require that I get the local IP address and port of the socket 
used to send the request (so that I can properly process the answser).

How can I get this information ? datagramReceived only provides me with 
the source address and port of the answer (as can be expected).

Regards,
Olivier.



From exarkun at twistedmatrix.com  Sat Nov 14 10:11:50 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Nov 2009 15:11:50 -0000
Subject: [Twisted-Python] Getting local UDP address/port
In-Reply-To: <4AFEC69A.3070702@free.fr>
References: <4AFEC69A.3070702@free.fr>
Message-ID: <20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>

On 03:02 pm, olivier.parisy at free.fr wrote:
>I am implementing a UDP protocol where a request is sent to a server
>through a connected UDP transport.
>
>I listen for the answer using reactor.listenUDP(0, myDatagramProtocol).
>
>The local port is not in itself significant (hence the 0), but the
>protocol require that I get the local IP address and port of the socket
>used to send the request (so that I can properly process the answser).
>
>How can I get this information ? datagramReceived only provides me with
>the source address and port of the answer (as can be expected).

The protocol's transport will give you this information via the getHost 
method:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html

However, unless you're using connected UDP, the platform may not bother 
to give you a realistic local address (and perhaps sometimes even for 
connected UDP it won't).  And then there's always NAT.

Jean-Paul


From olivier.parisy at free.fr  Sat Nov 14 10:56:50 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 14 Nov 2009 16:56:50 +0100
Subject: [Twisted-Python] Getting local UDP address/port
In-Reply-To: <20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>
References: <4AFEC69A.3070702@free.fr>
	<20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>
Message-ID: <4AFED342.2010108@free.fr>

exarkun at twistedmatrix.com a ?crit :
> The protocol's transport will give you this information via the getHost 
> method:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html
>   
I got confused by the method name and did not think it would provide me 
with the local port. This is exactly what I needed, thanks!

> However, unless you're using connected UDP, the platform may not bother 
> to give you a realistic local address (and perhaps sometimes even for 
> connected UDP it won't).  And then there's always NAT.
>   
Yes, I am aware of those issues. This is kind of the point of my test 
actually.

Thanks,
Olivier.




From landreville at deadtreepages.com  Sat Nov 14 12:21:31 2009
From: landreville at deadtreepages.com (Landreville)
Date: Sat, 14 Nov 2009 12:21:31 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <4AFEBB85.6040905@indagon.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
	<4AFEBB85.6040905@indagon.com>
Message-ID: <9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>

On Sat, Nov 14, 2009 at 9:15 AM, Tuure Laurinolli <
tuure.laurinolli at indagon.com> wrote:

> Landreville wrote:
>
> > Sometimes the calls are blocking because it is calling another SOAP
> > server (or possibly itself over SOAP). My SOAP calls will all be
> > blocking because twisted.web.soap doesn't support WSDL.
>
> What are you using for your SOAP client calls, then? There is something
> called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can
> operate with Twisted and supports WSDL.
>
> I once used it to write a server that could be used with an existing
> WSDL as its interface. IIRC its Twised integration has some problems
> (like not supporting asynchronous handling of requests) but they were
> relatively simple to overcome.
>
>
I'm using soappy for a client because that is what twisted uses for its soap
server. Twisted's implementation does not include WSDL support though (so
I'm using the normal soappy package for the client).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091114/aebe3cd2/attachment.htm 

From exarkun at twistedmatrix.com  Sat Nov 14 13:07:38 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Nov 2009 18:07:38 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
	<4AFEBB85.6040905@indagon.com>
	<9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>
Message-ID: <20091114180738.27565.519953300.divmod.xquotient.160@localhost.localdomain>

On 05:21 pm, landreville at deadtreepages.com wrote:
>On Sat, Nov 14, 2009 at 9:15 AM, Tuure Laurinolli <
>tuure.laurinolli at indagon.com> wrote:
>>Landreville wrote:
>>
>> > Sometimes the calls are blocking because it is calling another SOAP
>> > server (or possibly itself over SOAP). My SOAP calls will all be
>> > blocking because twisted.web.soap doesn't support WSDL.
>>
>>What are you using for your SOAP client calls, then? There is 
>>something
>>called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can
>>operate with Twisted and supports WSDL.
>>
>>I once used it to write a server that could be used with an existing
>>WSDL as its interface. IIRC its Twised integration has some problems
>>(like not supporting asynchronous handling of requests) but they were
>>relatively simple to overcome.
>I'm using soappy for a client because that is what twisted uses for its 
>soap
>server. Twisted's implementation does not include WSDL support though 
>(so
>I'm using the normal soappy package for the client).

Twisted's SOAP support is definitely pretty pathetic.  This is probably 
a result of a few things:

  * None of the core developers is particularly interested in SOAP.  It's 
a bad protocol that people generally only use because they're forced to.

  * The Python story for SOAP is confusing.  For a while, SOAPpy was the 
only game in town.  Then ZSI came along and that was supposed to be 
great.  Last I heard, ZSI should be avoided and SUDS is the thing to 
use.  Without actually having a real SOAP-related problem to solve, it's 
hard to tell who to believe.

  * Various people are using ZSI with Twisted based on the support in ZSI 
for this.  This presumably reduces the motivation to add anything in 
Twisted to support such integration.  Likewise, people are using Twisted 
and SUDS together with some other custom integration code (I don't think 
this is part of SUDS proper, though).  Again, if it works for them, it's 
less likely that they'll bother trying to get something better included 
in Twisted.

I don't think that it is necessarily a bad thing that Twisted doesn't 
have a super awesome SOAP API built in, since it seems that other people 
are coming up with ways to solve the problem anyway.  The biggest 
drawback is perhaps that it is hard for someone to find all these 
disparate solutions and select the one that is most suited to solving 
their problem.

Jean-Paul


From timwylie at hotmail.com  Sat Nov 14 22:59:38 2009
From: timwylie at hotmail.com (tim wylie)
Date: Sat, 14 Nov 2009 21:59:38 -0600
Subject: [Twisted-Python] TCP Queued connections
Message-ID: <BAY112-W6E065F342247D3FC102BBD1A60@phx.gbl>


Hello,
   What is the best way to set up a queue of tcp connections?  I'm currently using perspective broker for authentication and communication.  I want the client to register with the server, and then the server send back a message telling them their place in line.  This is easy, but then how can I store the connections on the server to send the client a message when it's his turn?  I realize I could store IP addresses, but then you lose connections behind firewalls/etc.  I could also give the client a time estimate and he could run a deferred call after that time, but I was hoping there was a more elegant way.  Any thoughts?  Thanks.
Tim
 		 	   		  
_________________________________________________________________
Hotmail: Trusted email with Microsoft's powerful SPAM protection.
http://clk.atdmt.com/GBL/go/177141664/direct/01/
http://clk.atdmt.com/GBL/go/177141664/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091114/9ed79ce3/attachment.htm 

From exarkun at twistedmatrix.com  Sun Nov 15 00:05:14 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Nov 2009 05:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1258261514.8.1966653461@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091115/daf1dc2f/attachment-0001.htm 

From mardiros at laposte.net  Sun Nov 15 15:53:12 2009
From: mardiros at laposte.net (mardiros)
Date: Sun, 15 Nov 2009 21:53:12 +0100
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <4B006A38.4070204@laposte.net>


Hi,

you can couple a decorator with the maybeDeferred function.
this is a trivial example but it works.
This cache is not cleaned and if you write your decorator in
a class with a __call__ function, you can isolate the cache
dictionary and a configurable lifetime, with a
twisted.internet.task.LoopingCall for this.
In fact, I have already talk about it in a previous message,
too try talking about this technique with more advanced
users than me without answer. I supposed it was not so bad.
Well, I am using now this kind of code to cache sql select
request from a twisted.enterprise.adbapi.ConnectionPool.runQuery
and it's work fine.



from twisted.internet import defer
from twisted.internet import reactor
import types

cache = {}
def memoize(f):
    def g(*args, **kwargs):
        key = (tuple(args), frozenset(kwargs.items()))
       
        if key not in cache:
            return f(*args, **kwargs)
        else:
            print "from cache"
            return cache[key]
    return g

def saveInCache(result,key):
    print "saving to cache"
    cache[key] = result
    return result

@memoize
def asynchronousIsValidUser(user):
    print "Loading from network"
    d = defer.Deferred()
    reactor.callLater(2, d.callback, user in ["Alice", "Angus", "Agnes"])
    return d.addCallback(saveInCache, ( (user,), frozenset() ))

def printResult(result,user):
    if result:
        print "User", user ,"is authenticated"
    else:
        print "User", user ,"is not authenticated"

def authenticateUser(user):
    print "Authenticating user ", user
    d = defer.maybeDeferred(asynchronousIsValidUser, user)
    return d.addCallback(printResult,user)


reactor.callWhenRunning(authenticateUser,"Alice")
reactor.callLater(1,authenticateUser,"Alice")
reactor.callLater(3,authenticateUser,"Alice")
reactor.callLater(5,reactor.stop)
reactor.run()




vitaly at synapticvision.com a ?crit :
>
> Caching the results of some particular method calls, so other server  
> side methods can access those results (I'm thinking about example of  
> global variable per entire server, so once imported, such variable  
> content could be access).
>
>
>
> Quoting exarkun at twistedmatrix.com:
>
>   
>> On 05:41 pm, vitaly at synapticvision.com wrote:
>>     
>>> hi,
>>> is there any cache mechanism for twisted? Could one point me please to
>>> that docs?
>>>       
>> What sort of caching are you interested in?  Caching the results of
>> method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
>> total list of possibilities could run to many pages. :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From mardiros at laposte.net  Mon Nov 16 04:28:24 2009
From: mardiros at laposte.net (mardiros)
Date: Mon, 16 Nov 2009 10:28:24 +0100 (CET)
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <4B006A38.4070204@laposte.net>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<4B006A38.4070204@laposte.net>
Message-ID: <23590079.406.1258363704530.JavaMail.www@wwinf8302>


Here is the main part of my code

class CacheCleanerBaseMixin:
def __init__(self, cachetimer,cachelifetime):
self._cache = {}
self._cachelifetime = timedelta(0,cachelifetime)
self._cleaner = task.LoopingCall(self.cleanCache)
self._cleaner.start(cachetimer,now=False)
self._cleanrun = False

def cleanCache(self):
if not self._cleanrun:
self._cleanrun = True
log.msg('Clean the cache...', logLevel=logging.DEBUG)
expire = datetime.today()
i = 0
for k,v in self._cache.items():
if v[0] < expire:
i+=1
del self._cache[k]
log.msg('%i items removed' % i, logLevel=logging.DEBUG)
self._cleanrun = False


class asyncmemoize(CacheCleanerBaseMixin):
def __init__(self, function,cachetimer=30,cachelifetime=60):
CacheCleanerBaseMixin.__init__(self, cachetimer,cachelifetime)
self.function = function

def __call__(self, *args, **kwargs):
key = (tuple(args), frozenset(kwargs.items()))
if key not in self._cache:
return self.function(SqlConnection(),*args, **kwargs).addCallback(self.callback,key)
else:
log.msg('Retrievieng the data from the cache',logLevel=logging.DEBUG)
return self._cache[key][1]

def callback(self,result,key):
try:
self._cache[key] = [datetime.today() + self._cachelifetime, result]
finally:
return result




class SqlConnection(object): 

_instance = None
def __new__(cls):
if cls._instance is None:
cls._instance = object.__new__(cls)
return cls._instance

def configure(self, dbdriver, dbdriverargs,
log_request=False,
cache_file='sqlcache.shelve',
pool_file='sqloperation.shelve',
pool_maxattempt=5,
pool_time=30):
self.log_request = log_request
self.pool = adbapi.ConnectionPool(dbdriver,**dbdriverargs) 

@asyncmemoize
def internal_runQuery(self,query,args=None):
rv = None
try:
if args:
rv = self.pool.runQuery(query,args)
else:
rv = self.pool.runQuery(query)
except:
log.err() 
return rv

def runQuery(self,query,args=None):
try:
d = defer.maybeDeferred(self.internal_runQuery, query,args)
return d
except:
log.err() 


---------------------------------------------------------------------------- 
Laposte.net f?te ses 10 ans ! 

Gratuite, garantie ? vie et d?j? utilis?e par des millions d'internautes... 
vous aussi, pour votre adresse e-mail, choisissez laposte.net. 

Laposte.net, bien + qu'une messagerie 
----------------------------------------------------------------------------



From marco.giusti at gmail.com  Mon Nov 16 06:18:40 2009
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 16 Nov 2009 12:18:40 +0100
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<20091109182420.89285p7g5wyxc6ck@216.129.205.5>
Message-ID: <20091116111840.GA6794@murdoc.net>

On Mon, Nov 09, 2009 at 06:24:20PM -0500, vitaly at synapticvision.com wrote:
> 
> Such global variable(lets say dictionary) will have any size limit?

i don't know what kind of method calls do you need to cache, but what
about of memcached? twisted got a really handy client api for memcached
and, you should look deeper than i did, with a bit of work you can
refactor them as a decorator. memcached server also has got his policies
for size limits.

the drawback, but "bad luck often brings good luck", of this approach is
that your code must be "deferred aware".

m.

> Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:
> 
> > Part of the beauty of twisted is that you don't actually need to do anything
> > special to achieve that, just create a global dict or other object of your
> > choice and access it as needed.  More likely what you need to look for is a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual server
> > rather than just some methods for servicing requests.  The server will run
> > until stopped and all global or even local variables will remain in memory
> > unless deleted or dereferenced and garbage collected.  Rather than doing
> > something special to get a persistent variable you need to do something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> >> hi,
> >> >> is there any cache mechanism for twisted? Could one point me please to
> >> >> that docs?
> >> >
> >> > What sort of caching are you interested in?  Caching the results of
> >> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> >> > total list of possibilities could run to many pages. :)
> >> >
> >> > Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/5bc2acff/attachment.pgp 

From filoufake-python at yahoo.fr  Mon Nov 16 09:14:49 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Mon, 16 Nov 2009 14:14:49 +0000 (GMT)
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client but
	not for windows client
Message-ID: <215990.78277.qm@web26103.mail.ukl.yahoo.com>

Hello,

Some month ago, exarkun helped me in the development of a very simplified
telnet server.

I observed that when I connect from a windows client, the LOCALECHO
is set to "OFF" after the authentication. I cannot set it "ON"
afterwards. Everything typed in the client console is hidden.
When I use a linux client, the "ECHO" is OFF just for typing the 
password and then ON again.

Does someone has an idea how to do with the windows client?
I tried to set the ECHO ON using self.transport.will(ECHO) but that
doesn't work.

Here is the code:

############################################################
import sys
from zope.interface import implements
from twisted.internet import protocol
from twisted.python import log
from twisted.cred import error
from twisted.cred import portal
from twisted.cred import checkers
from twisted.cred import credentials
from twisted.conch.telnet import AuthenticatingTelnetProtocol
from twisted.conch.telnet import StatefulTelnetProtocol
from twisted.conch.telnet import ITelnetProtocol
from twisted.conch.telnet import TelnetTransport
from twisted.conch.telnet import ECHO

class Realm:
  implements(portal.IRealm)

  def requestAvatar(self, avatarId, mind, *interfaces):
    if ITelnetProtocol in interfaces:
      av = MyTelnet()
      av.transport.will(ECHO)
      av.state = 'Command'
      return ITelnetProtocol, av, lambda:None
    raise NotImplementedError("Not supported by this realm")

class MyTelnet(StatefulTelnetProtocol):
  def telnet_Command(self, line):
    print "line received via telnet", line
    self.sendLine('coucou man, you send me %s' % line)

def main():
  r = Realm()
  p = portal.Portal(r)
  c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
  c.addUser("AA", "aa")
  p.registerChecker(c)
  p.registerChecker(checkers.AllowAnonymousAccess())
  f = protocol.ServerFactory()
  f.protocol = lambda: TelnetTransport(AuthenticatingTelnetProtocol, p)
  log.startLogging(sys.stdout)
  from twisted.internet import reactor
  reactor.listenTCP(4738, f)
  reactor.run()

if __name__ == '__main__':
  main()
############################################################

Best Regards,
Philippe


      


From kevin.horn at gmail.com  Mon Nov 16 12:19:44 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 11:19:44 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
Message-ID: <562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>

On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
> > wrote:
>
>
> Release early, release often.  Most efforts like this end up moribund: you
>> sound serious right now, but never underestimate the extent to which life
>> will get in the way.  If you put up what you've got somewhere public ASAP,
>> (A) some people will probably show up to egg you on, (B) it's possible for
>> them to contribute (and those contributions will be a motivation on days
>> when this seems like a ridiculous amount of effort just to make Twisted's
>> docs look nicer), and (C) they can pick up the slack if you need to
>> disappear, either temporarily or permanently.
>>
>
> I'll try to put up what I've got later today.
>

OK, finally got the current results of the conversion process up.  Sorry for
the delay, my weekend got hijacked by the Swine Flu.  Some of that "life
getting in the way", I guess.

I want to reiterate that this is _not_ even _close_ to finished.  But it's
what I've got so far.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/1df5f737/attachment.htm 

From ssteinerx at gmail.com  Mon Nov 16 12:57:46 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 16 Nov 2009 12:57:46 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
Message-ID: <9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>


On Nov 16, 2009, at 12:19 PM, Kevin Horn wrote:

>
>
> On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com>  
> wrote:
> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <glyph at twistedmatrix.com 
> > wrote:
>
>
> Release early, release often.  Most efforts like this end up  
> moribund: you sound serious right now, but never underestimate the  
> extent to which life will get in the way.  If you put up what you've  
> got somewhere public ASAP, (A) some people will probably show up to  
> egg you on, (B) it's possible for them to contribute (and those  
> contributions will be a motivation on days when this seems like a  
> ridiculous amount of effort just to make Twisted's docs look nicer),  
> and (C) they can pick up the slack if you need to disappear, either  
> temporarily or permanently.
>
> I'll try to put up what I've got later today.
>
> OK, finally got the current results of the conversion process up.   
> Sorry for the delay, my weekend got hijacked by the Swine Flu.  Some  
> of that "life getting in the way", I guess.
>
> I want to reiterate that this is _not_ even _close_ to finished.   
> But it's what I've got so far.

Sorry, I seem to have missed something...where is "it" up to see?

Thanks,

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/fa9d4426/attachment.htm 

From kevin.horn at gmail.com  Mon Nov 16 13:09:16 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 12:09:16 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
Message-ID: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>

On Mon, Nov 16, 2009 at 11:57 AM, ssteinerX at gmail.com
<ssteinerx at gmail.com>wrote:

>
> On Nov 16, 2009, at 12:19 PM, Kevin Horn wrote:
>
>
>
> On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <
>> glyph at twistedmatrix.com> wrote:
>>
>>
>> Release early, release often.  Most efforts like this end up moribund: you
>>> sound serious right now, but never underestimate the extent to which life
>>> will get in the way.  If you put up what you've got somewhere public ASAP,
>>> (A) some people will probably show up to egg you on, (B) it's possible for
>>> them to contribute (and those contributions will be a motivation on days
>>> when this seems like a ridiculous amount of effort just to make Twisted's
>>> docs look nicer), and (C) they can pick up the slack if you need to
>>> disappear, either temporarily or permanently.
>>>
>>
>> I'll try to put up what I've got later today.
>>
>
> OK, finally got the current results of the conversion process up.  Sorry
> for the delay, my weekend got hijacked by the Swine Flu.  Some of that "life
> getting in the way", I guess.
>
> I want to reiterate that this is _not_ even _close_ to finished.  But it's
> what I've got so far.
>
>
> Sorry, I seem to have missed something...where is "it" up to see?
>
> Thanks,
>
> S
>
>
er, sorry, forgot to post the link...

here it is:
http://twistedsphinx.funsize.net/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/6875cbb0/attachment.htm 

From ssteinerx at gmail.com  Mon Nov 16 13:36:37 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 16 Nov 2009 13:36:37 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
Message-ID: <88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>

On Nov 16, 2009, at 1:09 PM, Kevin Horn wrote:
>
> Sorry, I seem to have missed something...where is "it" up to see?
>
> Thanks,
>
> S
>
>
> er, sorry, forgot to post the link...
>
> here it is:
> http://twistedsphinx.funsize.net/

That gets an "awesome" first pass grade.

It sure does look different presented that way, now, doesn't it?

I know what a huge bunch'o'stuff the docs are as I looked into just  
collecting what there was in the docs, on the Trac, and in the wild a  
while ago.

Great start!

S


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/c27b4f48/attachment.htm 

From clemesha at gmail.com  Mon Nov 16 14:44:06 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Mon, 16 Nov 2009 11:44:06 -0800
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>
Message-ID: <d272f0690911161144n6d2693eaiefd13173126227f0@mail.gmail.com>

On Mon, Nov 16, 2009 at 10:36 AM, ssteinerX at gmail.com
<ssteinerx at gmail.com>wrote:

> On Nov 16, 2009, at 1:09 PM, Kevin Horn wrote:
>
>
>> Sorry, I seem to have missed something...where is "it" up to see?
>>
>> Thanks,
>>
>> S
>>
>>
> er, sorry, forgot to post the link...
>
> here it is:
> http://twistedsphinx.funsize.net/
>
>
> That gets an "awesome" first pass grade.
>
> It sure does look different presented that way, now, doesn't it?
>
Yeah, they look great! So much more "approachable".


-Alex





>
> I know what a huge bunch'o'stuff the docs are as I looked into just
> collecting what there was in the docs, on the Trac, and in the wild a while
> ago.
>
> Great start!
>
> S
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/2ad5f1ec/attachment.htm 

From exarkun at twistedmatrix.com  Mon Nov 16 16:11:56 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Nov 2009 21:11:56 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
Message-ID: <20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>

On 06:09 pm, kevin.horn at gmail.com wrote:
>>
>er, sorry, forgot to post the link...
>
>here it is:
>http://twistedsphinx.funsize.net/

Thanks.  It's good to be able to see (at least an early draft of) what 
the outcome of this proposal will be.

I'm glad the reactions have been good so far, but I want to be a wet 
blanket for a moment and suggest that we try to avoid being influenced 
excessively by the "new look" effect.  It would be easy to give the 
existing documentation a face lift without switching systems entirely - 
it's just a matter of editing the template and/or the css.  What are the 
other benefits of the Sphinx output, in particular, the ones which it 
would be difficult to achieve with Lore?

I'll start with one possibility - the index.  Am I right in thinking 
this is automatically generated?  This is something Lore isn't currently 
capable of (there's a branch which addresses this, but I suspect it is 
far too much of a mess to ever merge, so we can ignore it).  Going along 
with this, how much control do we have over how the index is generated? 
Some of what shows up here probably doesn't merit being displayed as 
prominently as this - for example, the historical documents are mostly 
of, well, historical interesting.  What options do we have for changing 
how these are presented?

Jean-Paul


From kevin.horn at gmail.com  Mon Nov 16 17:37:20 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 16:37:20 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
Message-ID: <562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>

On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:

> On 06:09 pm, kevin.horn at gmail.com wrote:
> >>
> >er, sorry, forgot to post the link...
> >
> >here it is:
> >http://twistedsphinx.funsize.net/
>
> Thanks.  It's good to be able to see (at least an early draft of) what
> the outcome of this proposal will be.
>
> I'm glad the reactions have been good so far, but I want to be a wet
> blanket for a moment and suggest that we try to avoid being influenced
> excessively by the "new look" effect.


Wet blanket away!  Every project needs a good "devil's advocate".


> It would be easy to give the
> existing documentation a face lift without switching systems entirely -
> it's just a matter of editing the template and/or the css.  What are the
> other benefits of the Sphinx output, in particular, the ones which it
> would be difficult to achieve with Lore?
>

Well, IMO, the absolute #1 benefit of using Sphinx over Lore is simply not
having to maintain Lore, which has nothing at all to do with the actual
output.  The next "tier" of advantages (again IMO) also have nothing to do
with the output, those advantages being:

- a more approachable document format (in the sense that I think there are
probably more people familiar with the Sphinx dialect of RestructuredText
than are familiar with Lore's subset of XHTML...and the number of Sphinx
users is growing)
- a much larger user base, and clear extension API, which allows us to take
advantage of existing extensions, etc.

Now having said that, switching to Sphinx *output* does have some advantages
(though by themselves they might not be compelling enough to switch).

- better navigation (prev & next links, table of contents)
- JS-based full text search
- CHTML output (very nice for those of us who use Win32...though I realize
we're a minority here in the Twisted world)
- Direct PDF output (somewhat immature and provided by a 3rd party
extension, but mature enough that someone has actually "typeset" a printed
version of the Python Tutorial with it)

You're absolutely right that just giving the docs a "facelift" wouldn't
require nearly so much effort, but I don't think it would buy us as much
with regard to the ultimate maintainability of the documentation.

I'll start with one possibility - the index.  Am I right in thinking
> this is automatically generated?  This is something Lore isn't currently
> capable of (there's a branch which addresses this, but I suspect it is
> far too much of a mess to ever merge, so we can ignore it).  Going along
> with this, how much control do we have over how the index is generated?
> Some of what shows up here probably doesn't merit being displayed as
> prominently as this - for example, the historical documents are mostly
> of, well, historical interesting.  What options do we have for changing
> how these are presented?
>
> Jean-Paul
>
>
> Hmmm...this depends on what you mean by "index". :)

There are (at least) 3 meanings of index as it relates to Sphinx.

- general index - currently empty
- module index - currently empty and, in fact, missing
- search index - auto-generated and used for the JS-based full text search
feature

However from you comments above I think you probably meant what Sphinx calls
the "table of contents" (which shows up in the index.html, contents.html,
etc.).  Not trying to nitpick here, just trying to be clear.  If I'm
incorrect in assuming that's what you meant, then you can ignore the
following and correct me, and we'll go from there.

In the meantime, I'll assume we're talking about the table of contents
(TOC).

RestructuredText (in a plain vanilla docutils install) does not have any way
of connecting documents together other than hyperlinks.  Sphinx defines a
"toctree" directive to get around this limitation.  This is a directive that
goes into your Sphinx source documents that looks something like this:

| ..toctree:
|
|    projects/conch/index
|    projects/core/index
|    ..etc

Typically these would be created manually in your Sphinx source, but in this
instance I am creating them using my conversion script which generates ReST
source from Lore source.

At Sphinx build-time, Sphinx expects every ReST source file to show up
someplace in one of these toctree directives, and will generate warnings if
a file doesn't. Sphinx gathers up the connections defined by these toctree
directives throughout the project into  a tree-shaped data structure and
uses this to generate the handy navigation links (prev & next), and also to
display all or part of the tree as a series of hyperlinks in a table of
contents format.  The depth of the tree displayed (or even displaying it at
all) is easily configurable.  Right now I'm showing quite a lot, because it
makes it easier to test my toctree-generating code, and it makes browsing my
output a bit simpler.  There's no reason we'd need to do this in the final
product.

Of course, if you mean the "index" index, then the answer is entirely
different :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/31b49b4c/attachment.htm 

From phil at bubblehouse.org  Mon Nov 16 21:56:03 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 16 Nov 2009 21:56:03 -0500
Subject: [Twisted-Python] exarkun changed [#4029 - Twisted Web's
	wsgi.input isn't sufficiently file-like in all cases]
In-Reply-To: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
References: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
Message-ID: <4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>



-phil

[sent from my phone]

On Nov 16, 2009, at 4:56 PM, trac at twistedmatrix.com wrote:

> Ticket [#4029 - Twisted Web's wsgi.input isn't sufficiently file- 
> like in all cases] changed by exarkun <exarkun at twistedmatrix.com>:
>
> (In [27518]) Merge wsgi-none-readline-4029
>
> Author: rikyu
> Reviewer: exarkun
> Fixes: #4029
> Refs: #4114
>
> Add a test for WSGI requests which end up with a  
> `tempfile.TemporaryFile`
> for `Request.content` and fix the implementation to deal with this  
> case
> by not passing `None` for the length argument to `readline` (which  
> temp
> files do not accept, unlike StringIOs).  WSGI applications can now  
> receive
> requests with large bodies.
>
> ---------
> status   : assigned -> closed
> resolution:  -> fixed
> ---------
> http://twistedmatrix.com/trac/ticket/4029


From phil at bubblehouse.org  Mon Nov 16 21:58:05 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 16 Nov 2009 21:58:05 -0500
Subject: [Twisted-Python] exarkun changed [#4029 - Twisted Web's
	wsgi.input isn't sufficiently file-like in all cases]
In-Reply-To: <4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>
References: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
	<4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>
Message-ID: <ACD52A62-3608-464F-A561-16A2223F2330@bubblehouse.org>

Uh, sorry about that. You know, working this crazy email nonsense is  
hard for old codgers like me.

-phil

On Nov 16, 2009, at 9:56 PM, Phil Christensen wrote:

>
>
> -phil
>
> [sent from my phone]
>
> O


From namanvit at gmail.com  Tue Nov 17 01:07:50 2009
From: namanvit at gmail.com (naman jain)
Date: Tue, 17 Nov 2009 07:07:50 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
Message-ID: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>

Hi ,

I have a twisted client server model running.
My requirement is to launch my client from another program based on some
event received by the master program.

I try to launch it as a Process:
  foo = Process( target=twisted_client.main, args=(q,uid,))
  foo.start()
  foo.join()
  status = q.get()

Launching the client in this manner, is not showing reliable results.
Frequently , I get this error:
"*Failure instance: Traceback (failure with no frames): <class
'twisted.internet.error.TimeoutError'>: User timeout caused connection
failure.* "

when on the other side using:
os.system("python twisted_client.py") runs perfectly, connecting everytime
to the server.


I found relevant discussion on the following thread but could not figure out
a solution.

http://twistedmatrix.com/pipermail/twisted-python/2007-December/016430.html

Thanks for any help!

Regards
Naman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/49e8601f/attachment.htm 

From fred at bsdhost.net  Tue Nov 17 01:23:04 2009
From: fred at bsdhost.net (Fred C)
Date: Mon, 16 Nov 2009 22:23:04 -0800
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
Message-ID: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>


I have to write a quick and dirty ReverseProxy with Twisted, for one  
of our internal project. I never used Twisted before, and I was  
wondering of someone have an handy example of a ReverseProxy with  
Twisted to help that I can use as bootstrap.

Many thanks.
Fred

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091116/53d506af/attachment.htm 

From art at academ.org  Tue Nov 17 02:41:25 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 17 Nov 2009 13:41:25 +0600
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
Message-ID: <4B0253A5.6060503@academ.org>

Fred C ?????:
>
> I have to write a quick and dirty ReverseProxy with Twisted, for one 
> of our internal project. I never used Twisted before, and I was 
> wondering of someone have an handy example of a ReverseProxy with 
> Twisted to help that I can use as bootstrap.
>
There is an example of reverse proxy in twisted-web.

> Many thanks.
> Fred
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From fred at bsdhost.net  Tue Nov 17 02:48:25 2009
From: fred at bsdhost.net (Fred C)
Date: Mon, 16 Nov 2009 23:48:25 -0800
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <4B0253A5.6060503@academ.org>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
	<4B0253A5.6060503@academ.org>
Message-ID: <8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>


On Nov 16, 2009, at 11:41 PM, Artem Bokhan wrote:

> Fred C ?????:
>>
>> I have to write a quick and dirty ReverseProxy with Twisted, for one
>> of our internal project. I never used Twisted before, and I was
>> wondering of someone have an handy example of a ReverseProxy with
>> Twisted to help that I can use as bootstrap.
>>
> There is an example of reverse proxy in twisted-web.

Sorry for not being more specific but That example don't explain how  
to do thing like url rewriting for example. Or maybe we are not  
talking about the same one.

Fred



From art at academ.org  Tue Nov 17 03:06:44 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 17 Nov 2009 14:06:44 +0600
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>	<4B0253A5.6060503@academ.org>
	<8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>
Message-ID: <4B025994.3050606@academ.org>

Fred C ?????:
> On Nov 16, 2009, at 11:41 PM, Artem Bokhan wrote:
>
>   
>> Fred C ?????:
>>     
>>> I have to write a quick and dirty ReverseProxy with Twisted, for one
>>> of our internal project. I never used Twisted before, and I was
>>> wondering of someone have an handy example of a ReverseProxy with
>>> Twisted to help that I can use as bootstrap.
>>>
>>>       
>> There is an example of reverse proxy in twisted-web.
>>     
>
> Sorry for not being more specific but That example don't explain how  
> to do thing like url rewriting for example. Or maybe we are not  
> talking about the same one.
>   
I think you should look into the source of twisted.web and redefine 
classes you need.
> Fred
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From glyph at twistedmatrix.com  Tue Nov 17 03:13:17 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Nov 2009 03:13:17 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
Message-ID: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>


On Nov 16, 2009, at 5:37 PM, Kevin Horn wrote:

> On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:
> On 06:09 pm, kevin.horn at gmail.com wrote:
> >>
> >er, sorry, forgot to post the link...
> >
> >here it is:
> >http://twistedsphinx.funsize.net/
> 
> Thanks.  It's good to be able to see (at least an early draft of) what
> the outcome of this proposal will be.
> 
> I'm glad the reactions have been good so far, but I want to be a wet
> blanket for a moment and suggest that we try to avoid being influenced
> excessively by the "new look" effect.  
> 
> Wet blanket away!  Every project needs a good "devil's advocate".

Well!  If it's time for criticism I've got some ;-).

I'd really like to see the stylesheets on this site adjusted to look as much as possible like the current Twisted style.  Use the verbatim stylesheets from twistedmatrix.com as much as possible.  I realize you'll have to have some custom elements, but it should be possible to at least avoid creating any new images and to stitch together the existing styles rather than make new ones wholesale.

If we ever have the resources to do a site redesign again (and I hope we do, it would be nice to get a fresh look every few years) I want to be able to re-style the _entire_ site.

We could do this with the Lore documentation too, but if we're going to make the investment I'd rather it be on something easier to maintain, as your conversion project promises to be.  I also suspect that it would be a lot easier to style the output from sphinx, as it is explicitly designed to be themable, and has actually been modified to have multiple, radically different stylesheets already.  Actually integrating this with the L&F of the rest of the Twisted site would go a long way towards demonstrating Sphinx's superiority in this area :).

On the "things to do" side, while the mere presence of this page is itself unintentionally hilarious - <http://twistedsphinx.funsize.net/projects/lore/howto/lore.html> - and it will likely be removed from the final output, it does contain a good enumeration of all the things that need to be converted in one place.  I suspect that if you made all those UNHANDLED_TAG output warts go away, we'd be most of the way towards converting all of the documentation.

> It would be easy to give the
> existing documentation a face lift without switching systems entirely -
> it's just a matter of editing the template and/or the css.  What are the
> other benefits of the Sphinx output, in particular, the ones which it
> would be difficult to achieve with Lore?
> 
> Well, IMO, the absolute #1 benefit of using Sphinx over Lore is simply not having to maintain Lore, which has nothing at all to do with the actual output.

I agree.

> The next "tier" of advantages (again IMO) also have nothing to do with the output, those advantages being:
> 
> - a more approachable document format (in the sense that I think there are probably more people familiar with the Sphinx dialect of RestructuredText than are familiar with Lore's subset of XHTML...and the number of Sphinx users is growing)

Actually, I think that this particular often-touted advantage is a wash.  The "approachableness" of ReST is questionable, especially once you get into the weird corner cases where the syntax just completely falls apart and turns into an incomprehensible line-noise jumble.  I mean, the syntax for tables reads like a joke about how trying to make the plain-text input look like the output is a bad idea: <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.  Consider trying to re-flow the contents of a table cell after adding text to it, for example.  Plus, a _lot_ of people know HTML -- still many more than know ReST, I would argue -- and lore adds relatively little to HTML.

However, the motivation for choosing HTML was that "any day now" there would be a good, commonly used, GUI editor for HTML documents and we could easily annotate the output of one of those with the extra metadata that lore wanted.  That hasn't happened.  What *has* happened is that despite the difficulty involved in parsing and emitting ReST as compared to something fairly regular like HTML or XML, tools like these have been emerging:

    http://kib2.free.fr/reSTinPeace/
    http://blog.enthought.com/?p=127

which let users edit ReST documents in a sort-of-wsyiwyg way, so you get immediate feedback when you put a "|" or a "`" in some obscure spot that makes your entire document disappear, rather than trying to hunt it down after an hour of writing.  Plus, docutils provides a document model for ReST so you can transform it programmatically and ignore its syntactic peculiarities.

Which all comes down to the fact that I'm mainly just restating this point as the primary advantage:

> - a much larger user base, and clear extension API, which allows us to take advantage of existing extensions, etc.

The active user community means that not only is somebody else mantaining the basics, lots of other people are working on *tools* that we can use for more intense usage.  I am personally looking forward to using some of those GUI tools for actually editing the documentation; it's a much more streamlined workflow than running the 'lore' commandline and reloading in a browser.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/c3f6a947/attachment.htm 

From lasizoillo at gmail.com  Tue Nov 17 05:00:36 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Tue, 17 Nov 2009 11:00:36 +0100
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
Message-ID: <49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>

2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
>
> I have written up a proposal here:
>
> http://twistedsphinx.funsize.net/proposal.html
>

In this proposal you say:

Development Work
 * fabric fabfile for automation of docs workflow

Future Work
 * This page has some stuff on using cog in RestructuredText comments
to generate the output of sample scripts.

The second point (in Future Work) uses cog that is integrated in paver:
 * Paver allow automation of docs workflow (fabric is not needed).
 * With paver you can create an bootstraped instalation:
    http://www.blueskyonmars.com/projects/paver/getting_started.html#but-people-don-t-have-paver-yet
 * Paver is compatible with setuptools and distutils.

I think that fabric is great for cluster distributions, but paver is
better for manage docs.

Regards,
 Javi


From dripton at ripton.net  Tue Nov 17 09:30:04 2009
From: dripton at ripton.net (David Ripton)
Date: Tue, 17 Nov 2009 06:30:04 -0800
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
Message-ID: <20091117143004.GA17404@vidar.dreamhost.com>

On 2009.11.17 07:07:50 +0100, naman jain wrote:
> I try to launch it as a Process:
>   foo = Process( target=twisted_client.main, args=(q,uid,))
>   foo.start()
>   foo.join()
>   status = q.get()

> Launching the client in this manner, is not showing reliable results.

You didn't give a long enough example to be certain, but that looks like
multiprocessing.Process syntax.  The multiprocessing module does not
work reliably with Twisted.  Neither does the subprocess module.

You should use the equivalent Twisted process functionality, shown at
http://twistedmatrix.com/projects/core/documentation/howto/process.html

There's also https://launchpad.net/ampoule, but for the small example
you show, the basic Twisted process stuff should be fine.

-- 
David Ripton    dripton at ripton.net


From james at tanis.us  Tue Nov 17 09:45:12 2009
From: james at tanis.us (James Tanis)
Date: Tue, 17 Nov 2009 09:45:12 -0500
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client
	but not for windows client
In-Reply-To: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
References: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
Message-ID: <9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>

I haven't worked with the telnet protocol since the 1.x series honestly and I remember having to add a good bit of code to support all the control functions in order to get things working as nicely as I wanted. That aside, echo (or lack thereof) did work fine, but "will" will not force a client to do anything. I believe you need to use "do"/"dont" to get the effect you desire.

--
James Tanis
Technical Coordinator
Computer Science Department
Monsignor Donovan Catholic High School



On Nov 16, 2009, at 9:14 AM, filoufake-python at yahoo.fr wrote:

> Hello,
> 
> Some month ago, exarkun helped me in the development of a very simplified
> telnet server.
> 
> I observed that when I connect from a windows client, the LOCALECHO
> is set to "OFF" after the authentication. I cannot set it "ON"
> afterwards. Everything typed in the client console is hidden.
> When I use a linux client, the "ECHO" is OFF just for typing the 
> password and then ON again.
> 
> Does someone has an idea how to do with the windows client?
> I tried to set the ECHO ON using self.transport.will(ECHO) but that
> doesn't work.
> 
> Here is the code:
> 
> ############################################################
> import sys
> from zope.interface import implements
> from twisted.internet import protocol
> from twisted.python import log
> from twisted.cred import error
> from twisted.cred import portal
> from twisted.cred import checkers
> from twisted.cred import credentials
> from twisted.conch.telnet import AuthenticatingTelnetProtocol
> from twisted.conch.telnet import StatefulTelnetProtocol
> from twisted.conch.telnet import ITelnetProtocol
> from twisted.conch.telnet import TelnetTransport
> from twisted.conch.telnet import ECHO
> 
> class Realm:
>  implements(portal.IRealm)
> 
>  def requestAvatar(self, avatarId, mind, *interfaces):
>    if ITelnetProtocol in interfaces:
>      av = MyTelnet()
>      av.transport.will(ECHO)
>      av.state = 'Command'
>      return ITelnetProtocol, av, lambda:None
>    raise NotImplementedError("Not supported by this realm")
> 
> class MyTelnet(StatefulTelnetProtocol):
>  def telnet_Command(self, line):
>    print "line received via telnet", line
>    self.sendLine('coucou man, you send me %s' % line)
> 
> def main():
>  r = Realm()
>  p = portal.Portal(r)
>  c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
>  c.addUser("AA", "aa")
>  p.registerChecker(c)
>  p.registerChecker(checkers.AllowAnonymousAccess())
>  f = protocol.ServerFactory()
>  f.protocol = lambda: TelnetTransport(AuthenticatingTelnetProtocol, p)
>  log.startLogging(sys.stdout)
>  from twisted.internet import reactor
>  reactor.listenTCP(4738, f)
>  reactor.run()
> 
> if __name__ == '__main__':
>  main()
> ############################################################
> 
> Best Regards,
> Philippe
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/6683c3e6/attachment-0001.htm 

From james at tanis.us  Tue Nov 17 10:02:54 2009
From: james at tanis.us (James Tanis)
Date: Tue, 17 Nov 2009 10:02:54 -0500
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client
	but not for windows client
In-Reply-To: <9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>
References: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
	<9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>
Message-ID: <5AAFE915-8B31-4CF7-A263-63A25E359707@tanis.us>

I looked at your code a bit more, read below.


> 
> 
> 
> On Nov 16, 2009, at 9:14 AM, filoufake-python at yahoo.fr wrote:
> 
>> 
>>    raise NotImplementedError("Not supported by this realm")
>> 
>> class MyTelnet(StatefulTelnetProtocol):
>>  def telnet_Command(self, line):
>>    print "line received via telnet", line
>>    self.sendLine('coucou man, you send me %s' % line)

According to the documentation: the default telnet_User method returns 'Password' to go into Password mode, and the default telnet_Password method returns 'Command' to go into Command mode."

The problem, I'm guessing, is your reimplementing the telnet_Command method wherein you don't appropriately handle turning echo back on. My suggestion would be to look in Twisted's code to find the "default" command method, there should be something obvious there which performs the function that you need.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/491cefdf/attachment.htm 

From terry at jon.es  Tue Nov 17 10:33:06 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Nov 2009 16:33:06 +0100
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
Message-ID: <19202.49714.279135.98921@jon.es>

Is there a reason why the Deferred class doesn't have a tee method like the
following (untested)?

    def tee(self, d):
        def _cb(arg):
            d.callback(arg)
            return arg

        def _eb(arg):
            d.errback(arg)
            return arg

        return self.addCallbacks(_cb, _eb)

I suppose it could be called teeDeferred to correspond to chainDeferred.
And I guess it's clear what it does and why it's quite different from
chainDeferred. I at least would find it quite useful.

Terry


From landreville at deadtreepages.com  Tue Nov 17 10:35:09 2009
From: landreville at deadtreepages.com (Landreville)
Date: Tue, 17 Nov 2009 10:35:09 -0500
Subject: [Twisted-Python] Multiple deferreds that depend on each other
Message-ID: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>

I know people ask about deferreds all the time (and i've read through a
bunch of those questions), but there is still one thing I don't quite grasp.

If I want to do a number of actions in a row that each return a deferred but
depend on eachother, do I need to nest those callbacks?

Ie if i want to:
1. Call database function using adbabi
2. Call xmlrpc method using result from 1
3. Call database using result from 2

Would I just put 2 inside the callback for 1 and then put 3 inside the
callback for 2?

How would I do that in one function? All the examples I have seen have a
function calling one method returning a deferred and then placing the logic
(doing something with the result) in the callback, but do not deal with
multiple deferreds that depend on each other.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/3be69013/attachment.htm 

From exarkun at twistedmatrix.com  Tue Nov 17 10:45:01 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Nov 2009 15:45:01 -0000
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: <19202.49714.279135.98921@jon.es>
References: <19202.49714.279135.98921@jon.es>
Message-ID: <20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>

On 03:33 pm, terry at jon.es wrote:
>Is there a reason why the Deferred class doesn't have a tee method like 
>the
>following (untested)?
>
>    def tee(self, d):
>        def _cb(arg):
>            d.callback(arg)
>            return arg
>
>        def _eb(arg):
>            d.errback(arg)
>            return arg
>
>        return self.addCallbacks(_cb, _eb)
>
>I suppose it could be called teeDeferred to correspond to 
>chainDeferred.
>And I guess it's clear what it does and why it's quite different from
>chainDeferred. I at least would find it quite useful.

We implemented this 5 or 6 times at Divmod.  The most recent incarnation 
looks like this:

    http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py

I admit that I'd probably find it about as useful as I find explicit 
calls to Deferred.chainDeferred - perhaps even slightly more so.  Though 
that's a low bar, I can't remember the last time I explicitly called 
chainDeferred; it's probably been a couple years.

Not to say it's a bad idea, but I don't think it's _obviously_ a great 
idea.  If someone wanted to contribute a documented, tested 
implementation, particularly with examples of common patterns that it 
simplifies, then you could probably convince someone to commit it.

Jean-Paul


From rlotun at gmail.com  Tue Nov 17 11:08:22 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 17 Nov 2009 16:08:22 +0000
Subject: [Twisted-Python] Multiple deferreds that depend on each other
In-Reply-To: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
References: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
Message-ID: <95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>

Hi Landreville,

> If I want to do a number of actions in a row that each return a deferred but
> depend on eachother, do I need to nest those callbacks?
> Ie if i want to:
> 1. Call database function using adbabi
> 2. Call xmlrpc method using result from 1
> 3. Call database using result from 2
> Would I just put 2 inside the callback for 1 and then put 3 inside the
> callback for 2?

By multiple deferreds that depend on each other, you probably mean a
linear firing of actions based on callbacks of previous actions. The
only way to do that is to trigger actions in callbacks of the
deferreds in question, as you allude to.

Yeah, so roughly something like this would work:

def db_call(arg):
   dfr = make_db_call_in_thread(arg)
   return dfr

def xmlrpc_call(arg):
   dfr = make_call(arg)
   return dfr

dfr = db_call(some_initial_arg)
dfr.addCallback(xmlrpc)
dfr.addCallback(db_call)

> How would I do that in one function? All the examples I have seen have a
> function calling one method returning a deferred and then placing the logic
> (doing something with the result) in the callback, but do not deal with
> multiple deferreds that depend on?each other.

To do it in one function, you could use something like:

def complex_call():
    def db_call(arg):
       dfr = make_db_call_in_thread(arg)
       return dfr

    def xmlrpc_call(arg):
       dfr = make_call(arg)
       return dfr

    dfr = db_call(some_initial_arg)
    dfr.addCallback(xmlrpc_call)
    dfr.addCallback(db_call)
    dfr.addErrback(my_errback_handler)
    return dfr

Or you can make each handler a method on a class. Another way to do it
is to use inlineCallbacks:

from twisted.internet import defer
@defer.inlineCallbacks
def example():
    res = yield db_call(some_initial_arg)
    rpc_res = yield xmlrpc_call(res)
    db_res = yield db_call(rpc_res)

In the above example, it's all still asynchronous (if not parallel),
but it looks like it's synchronous, using the magic of decorators and
Python 2.5+'s ability to retrieve results from yield statements.

Hope that makes sense.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From terry at jon.es  Tue Nov 17 11:27:57 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Nov 2009 17:27:57 +0100
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: Your message at 15:45:01 on Tuesday, 17 November 2009
References: <19202.49714.279135.98921@jon.es>
	<20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>
Message-ID: <19202.53005.747275.833925@jon.es>

>>>>> "JP" == exarkun  <exarkun at twistedmatrix.com> writes:
JP> We implemented this 5 or 6 times at Divmod.

I'm not surprised. Given that I'd have thought it would've made it into
defer.py at some point.

JP> The most recent incarnation looks like this:
JP> http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py

Thanks.

That's more of a radial / hub pattern. I'm dealing with the case of already
having a deferred around and wanting to tee off it without interfering with
its callback/errback chain. E.g., I have a class that's already passed a
deferred back to its caller, and I later need to arrange to do some more
stuff when the deferred fires. The caller of my class may in the meantime
have added callbacks to the deferred, I tee off it with no effect on my
original caller. That's just one example use.  I'm sure you'll have
implemented something for similar situations, too.

JP> Not to say it's a bad idea, but I don't think it's _obviously_ a great
JP> idea.  If someone wanted to contribute a documented, tested
JP> implementation, particularly with examples of common patterns that it
JP> simplifies, then you could probably convince someone to commit it.

I don't need it committed, I was just wondering why something like that
doesn't already exist. Re patterns: it would be great to have a series of
diagrams illustrating situations one might want to deal with and showing
how these can be done with Deferred code. Your Epsilon class could be shown
as a hub with new listeners arriving, ready for the triggering of the
callback. The tee diagram would show a T (or multiple Ts on the same
callback chain) in the obvious way. add{Callback,Errback} is like a normal
UNIX pipe and, stretching things a little, chainDeferred reminds me a bit
of UNIX exec (though with real differences).

There's a PyCon talk in there somewhere. Like Patterns of Asynchronous Flow
of Control using Twisted Deferreds. It often feels to me like there's a
lurking taxonomy of Deferred use cases or building blocks that's just
waiting for someone to come along and make really clear to the world. I'd
really love to do it, but I just don't have the time.

Terry


From landreville at deadtreepages.com  Tue Nov 17 12:15:02 2009
From: landreville at deadtreepages.com (Landreville)
Date: Tue, 17 Nov 2009 12:15:02 -0500
Subject: [Twisted-Python] Multiple deferreds that depend on each other
In-Reply-To: <95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>
References: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
	<95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>
Message-ID: <9d748c780911170915i7a0d408cpb75222d0d816b513@mail.gmail.com>

Oh I like the look of the inlineCallbacks. Is there a way that I can still
use inspect.getargspec to retrieve the arg names of my original method, as
opposed to the generator returned by inlineCallbacks.

I noticed it copies the __doc__ over, but is there an attribute where I can
still inspect my original method?

On Tue, Nov 17, 2009 at 11:08 AM, Reza Lotun <rlotun at gmail.com> wrote:

> Hi Landreville,
>
> > If I want to do a number of actions in a row that each return a deferred
> but
> > depend on eachother, do I need to nest those callbacks?
> > Ie if i want to:
> > 1. Call database function using adbabi
> > 2. Call xmlrpc method using result from 1
> > 3. Call database using result from 2
> > Would I just put 2 inside the callback for 1 and then put 3 inside the
> > callback for 2?
>
> By multiple deferreds that depend on each other, you probably mean a
> linear firing of actions based on callbacks of previous actions. The
> only way to do that is to trigger actions in callbacks of the
> deferreds in question, as you allude to.
>
> Yeah, so roughly something like this would work:
>
> def db_call(arg):
>   dfr = make_db_call_in_thread(arg)
>   return dfr
>
> def xmlrpc_call(arg):
>   dfr = make_call(arg)
>   return dfr
>
> dfr = db_call(some_initial_arg)
> dfr.addCallback(xmlrpc)
> dfr.addCallback(db_call)
>
> > How would I do that in one function? All the examples I have seen have a
> > function calling one method returning a deferred and then placing the
> logic
> > (doing something with the result) in the callback, but do not deal with
> > multiple deferreds that depend on each other.
>
> To do it in one function, you could use something like:
>
> def complex_call():
>    def db_call(arg):
>       dfr = make_db_call_in_thread(arg)
>       return dfr
>
>    def xmlrpc_call(arg):
>       dfr = make_call(arg)
>       return dfr
>
>    dfr = db_call(some_initial_arg)
>    dfr.addCallback(xmlrpc_call)
>    dfr.addCallback(db_call)
>    dfr.addErrback(my_errback_handler)
>    return dfr
>
> Or you can make each handler a method on a class. Another way to do it
> is to use inlineCallbacks:
>
> from twisted.internet import defer
> @defer.inlineCallbacks
> def example():
>    res = yield db_call(some_initial_arg)
>    rpc_res = yield xmlrpc_call(res)
>    db_res = yield db_call(rpc_res)
>
> In the above example, it's all still asynchronous (if not parallel),
> but it looks like it's synchronous, using the magic of decorators and
> Python 2.5+'s ability to retrieve results from yield statements.
>
> Hope that makes sense.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/6b2f4993/attachment.htm 

From kevin.horn at gmail.com  Tue Nov 17 12:51:36 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 11:51:36 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
Message-ID: <562bcc10911170951s171a401h615e70c04f1d8fd4@mail.gmail.com>

On Tue, Nov 17, 2009 at 2:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Nov 16, 2009, at 5:37 PM, Kevin Horn wrote:
>
> On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 06:09 pm, kevin.horn at gmail.com wrote:
>> >>
>> >er, sorry, forgot to post the link...
>> >
>> >here it is:
>> >http://twistedsphinx.funsize.net/
>>
>> Thanks.  It's good to be able to see (at least an early draft of) what
>> the outcome of this proposal will be.
>>
>> I'm glad the reactions have been good so far, but I want to be a wet
>> blanket for a moment and suggest that we try to avoid being influenced
>> excessively by the "new look" effect.
>
>
> Wet blanket away!  Every project needs a good "devil's advocate".
>
>
> Well!  If it's time for criticism I've got some ;-).
>
> I'd really like to see the stylesheets on this site adjusted to look as
> much as possible like the current Twisted style.  Use the verbatim
> stylesheets from twistedmatrix.com as much as possible.  I realize you'll
> have to have some custom elements, but it should be possible to at least
> avoid creating any new images and to stitch together the existing styles
> rather than make new ones wholesale.
>
> If we ever have the resources to do a site redesign again (and I hope we
> do, it would be nice to get a fresh look every few years) I want to be able
> to re-style the _entire_ site.
>
> We could do this with the Lore documentation too, but if we're going to
> make the investment I'd rather it be on something easier to maintain, as
> your conversion project promises to be.  I also suspect that it would be a
> lot easier to style the output from sphinx, as it is explicitly designed to
> be themable, and has actually been modified to have multiple, radically
> different stylesheets already.  Actually integrating this with the L&F of
> the rest of the Twisted site would go a long way towards demonstrating
> Sphinx's superiority in this area :).
>

The current look is the "sphinxdoc" theme, that comes with Sphinx.  My
intention is to create a new one for the Twisted docs that will be very
similar to the Twisted site.  I haven't really even started on this yet,
though.


> On the "things to do" side, while the mere presence of this page is itself
> unintentionally hilarious - <
> http://twistedsphinx.funsize.net/projects/lore/howto/lore.html> - and it
> will likely be removed from the final output, it does contain a good
> enumeration of all the things that need to be converted in one place.  I
> suspect that if you made all those UNHANDLED_TAG output warts go away, we'd
> be most of the way towards converting all of the documentation.
>

Heh, that is pretty funny.  If you'll notice though, almost all the
UNHANDLED_TAG stuff (on that page anyway) is related to the table on that
page.  I haven't even touched tables yet.  I don't think they'll be too
difficult, as long as there aren't any nested tables (there aren't in the
Twisted docs...I haven't looked at the Divmod stuff yet).  Since I think
there's only 2 tables in the Twisted docs, there kind of low on the priority
list.

FYI, those UNHANDLED_TAG messages are intentionally ugly, to make it easier
to find things that haven't been handled yet.

As far as what still needs to be done on conversion, this falls into a
couple of main areas:

- handling unhandled tags
- fixing some whitespace handling issues (notice that nested lists are
totally borked at the moment)
- going back through the "Using Lore" document, making sure all the various
tags are being handled correctly, and fixing any     problems
- building a "twisteddocs" theme

After this stuff is done, then the real grunt-work begins...fixing the bits
manually that can't be easily converted.  So far, I think this only really
involves 3 pages of Lore XHTML, but I'm sure I'll find other problems. :)

> The next "tier" of advantages (again IMO) also have nothing to do with the
> output, those advantages being:
>
> - a more approachable document format (in the sense that I think there are
> probably more people familiar with the Sphinx dialect of RestructuredText
> than are familiar with Lore's subset of XHTML...and the number of Sphinx
> users is growing)
>
>
> Actually, I think that this particular often-touted advantage is a wash.
>  The "approachableness" of ReST is questionable, especially once you get
> into the weird corner cases where the syntax just completely falls apart and
> turns into an incomprehensible line-noise jumble.  I mean, the syntax for
> tables reads like a joke about how trying to make the plain-text input look
> like the output is a bad idea: <
> http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.
>  Consider trying to re-flow the contents of a table cell after adding text
> to it, for example.  Plus, a _lot_ of people know HTML -- still many more
> than know ReST, I would argue -- and lore adds relatively little to HTML.
>

I'm not sure I agree here.  While it's true that lots of people know HTML,
I'm not sure that that helps more than it hurts.  First of all, XHTML is
subtly different from HTML, but more importantly, everyone  who "knows" HTML
doesn't know it to the same level, and has different opinions about what
different elements should be used for.  The "Using Lore" page spells things
out pretty clearly, but even some of those clear rules aren't followed very
well in the actual Twisted docs.  I think because people "know" HTML, they
just use what they know instead of paying close attention to the actual Lore
rules.  (going way out on the opinion limb here, though)

I guess my point is that I think it takes about the same amount of effort to
really learn the Lore subset of XHTML as it does to learn Sphinx's dialect
of RestructuredText.  And more people know Sphinx-RestructuredText to the
level practically usable for documentation (from using it on other
projects).  There's arguments either way I guess.

On a personal level, having written docs in other XML/XHTML dialects and in
Sphinx/ReST, I know I can write them way faster and with much less thought
to format in ReST.  And, IMO, those corner cases are very much in the
corner.  They don't come up very often, at least for me.

There's no defending ReST tables though.  You're totally right there.  Yuck.


> However, the motivation for choosing HTML was that "any day now" there
> would be a good, commonly used, GUI editor for HTML documents and we could
> easily annotate the output of one of those with the extra metadata that lore
> wanted.  That hasn't happened.  What *has* happened is that despite the
> difficulty involved in parsing and emitting ReST as compared to something
> fairly regular like HTML or XML, tools like these have been emerging:
>
>     http://kib2.free.fr/reSTinPeace/
>     http://blog.enthought.com/?p=127
>
> which let users edit ReST documents in a sort-of-wsyiwyg way, so you get
> immediate feedback when you put a "|" or a "`" in some obscure spot that
> makes your entire document disappear, rather than trying to hunt it down
> after an hour of writing.  Plus, docutils provides a document model for ReST
> so you can transform it programmatically and ignore its syntactic
> peculiarities.
>

I think the underlying reason this has happened is that ReST is less
flexible than HTML, and therefore less ambiguous.  I couldn't tell you why I
think that, though.  Just a feeling.


> Which all comes down to the fact that I'm mainly just restating this point
> as the primary advantage:
>
> - a much larger user base, and clear extension API, which allows us to take
> advantage of existing extensions, etc.
>
>
> The active user community means that not only is somebody else mantaining
> the basics, lots of other people are working on *tools* that we can use for
> more intense usage.  I am personally looking forward to using some of those
> GUI tools for actually editing the documentation; it's a much more
> streamlined workflow than running the 'lore' commandline and reloading in a
> browser.
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/5a4e7e14/attachment-0001.htm 

From kevin.horn at gmail.com  Tue Nov 17 13:00:21 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 12:00:21 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
Message-ID: <562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>

On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com> wrote:

> 2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
> >
> > I have written up a proposal here:
> >
> > http://twistedsphinx.funsize.net/proposal.html
> >
>
> In this proposal you say:
>
> Development Work
>  * fabric fabfile for automation of docs workflow
>
> Future Work
>  * This page has some stuff on using cog in RestructuredText comments
> to generate the output of sample scripts.
>
> The second point (in Future Work) uses cog that is integrated in paver:
>  * Paver allow automation of docs workflow (fabric is not needed).
>  * With paver you can create an bootstraped instalation:
>
> http://www.blueskyonmars.com/projects/paver/getting_started.html#but-people-don-t-have-paver-yet
>  * Paver is compatible with setuptools and distutils.
>
> I think that fabric is great for cluster distributions, but paver is
> better for manage docs.
>
> Regards,
>  Javi
>
>
For the moment, I plan to continue using fabric, for the following reasons:

- I'm already familiar with it
- it does what I need (run local commands, and send stuff over SSH)

I think Paver might be very useful down the road, though.  I'll definitely
check into it more as this project progresses.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/96297c8c/attachment.htm 

From kevin.horn at gmail.com  Tue Nov 17 13:20:39 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 12:20:39 -0600
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: <19202.53005.747275.833925@jon.es>
References: <19202.49714.279135.98921@jon.es>
	<20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>
	<19202.53005.747275.833925@jon.es>
Message-ID: <562bcc10911171020g3f0cabe7qdeb3e9b0f25369a5@mail.gmail.com>

On Tue, Nov 17, 2009 at 10:27 AM, Terry Jones <terry at jon.es> wrote:

> >>>>> "JP" == exarkun  <exarkun at twistedmatrix.com> writes:
>
> I don't need it committed, I was just wondering why something like that
> doesn't already exist. Re patterns: it would be great to have a series of
> diagrams illustrating situations one might want to deal with and showing
> how these can be done with Deferred code. Your Epsilon class could be shown
> as a hub with new listeners arriving, ready for the triggering of the
> callback. The tee diagram would show a T (or multiple Ts on the same
> callback chain) in the obvious way. add{Callback,Errback} is like a normal
> UNIX pipe and, stretching things a little, chainDeferred reminds me a bit
> of UNIX exec (though with real differences).
>
> There's a PyCon talk in there somewhere. Like Patterns of Asynchronous Flow
> of Control using Twisted Deferreds. It often feels to me like there's a
> lurking taxonomy of Deferred use cases or building blocks that's just
> waiting for someone to come along and make really clear to the world. I'd
> really love to do it, but I just don't have the time.
>
>
I would so love to see that talk...or read that paper...or whatever.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/934f2d30/attachment.htm 

From exarkun at twistedmatrix.com  Tue Nov 17 14:16:44 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Nov 2009 19:16:44 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
	<562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
Message-ID: <20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>

On 06:00 pm, kevin.horn at gmail.com wrote:
>On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com> 
>wrote:
>>2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
>> >
>> > I have written up a proposal here:
>> >
>> > http://twistedsphinx.funsize.net/proposal.html
>> >
>>
>>In this proposal you say:
>>
>>Development Work
>>  * fabric fabfile for automation of docs workflow
>>
>>Future Work
>>  * This page has some stuff on using cog in RestructuredText comments
>>to generate the output of sample scripts.
>>
>>The second point (in Future Work) uses cog that is integrated in 
>>paver:
>>  * Paver allow automation of docs workflow (fabric is not needed).
>>  * With paver you can create an bootstraped instalation:
>>
>>http://www.blueskyonmars.com/projects/paver/getting_started.html#but- 
>>people-don-t-have-paver-yet
>>  * Paver is compatible with setuptools and distutils.
>>
>>I think that fabric is great for cluster distributions, but paver is
>>better for manage docs.
>>
>>Regards,
>>  Javi
>For the moment, I plan to continue using fabric, for the following 
>reasons:
>
>- I'm already familiar with it
>- it does what I need (run local commands, and send stuff over SSH)
>
>I think Paver might be very useful down the road, though.  I'll 
>definitely
>check into it more as this project progresses.

Paver and fabric and such are only significant for the conversion, 
though, right?

Jean-Paul


From kevin.horn at gmail.com  Tue Nov 17 14:42:57 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 13:42:57 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
	<562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
	<20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>
Message-ID: <562bcc10911171142m2b5f0a58i8e9fc9c18150b01b@mail.gmail.com>

On Tue, Nov 17, 2009 at 1:16 PM, <exarkun at twistedmatrix.com> wrote:

> On 06:00 pm, kevin.horn at gmail.com wrote:
> >On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com>
> >wrote:
> >>2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
> >> >
> >> > I have written up a proposal here:
> >> >
> >> > http://twistedsphinx.funsize.net/proposal.html
> >> >
> >>
> >>In this proposal you say:
> >>
> >>Development Work
> >>  * fabric fabfile for automation of docs workflow
> >>
> >>Future Work
> >>  * This page has some stuff on using cog in RestructuredText comments
> >>to generate the output of sample scripts.
> >>
> >>The second point (in Future Work) uses cog that is integrated in
> >>paver:
> >>  * Paver allow automation of docs workflow (fabric is not needed).
> >>  * With paver you can create an bootstraped instalation:
> >>
> >>http://www.blueskyonmars.com/projects/paver/getting_started.html#but-
> >>people-don-t-have-paver-yet
> >>  * Paver is compatible with setuptools and distutils.
> >>
> >>I think that fabric is great for cluster distributions, but paver is
> >>better for manage docs.
> >>
> >>Regards,
> >>  Javi
> >For the moment, I plan to continue using fabric, for the following
> >reasons:
> >
> >- I'm already familiar with it
> >- it does what I need (run local commands, and send stuff over SSH)
> >
> >I think Paver might be very useful down the road, though.  I'll
> >definitely
> >check into it more as this project progresses.
>
> Paver and fabric and such are only significant for the conversion,
> though, right?
>
> Jean-Paul
>
>
Yes.  For right now at least, this is the case.

I think one or the other should probably be used in the future to
automate/streamline Twisted releases, since this has been a long-standing
desire of the development team (at least that's my perception...and there
are a couple of tickets in Trac about it).  This would prevent maintenance
of yet another homegrown Twisted tool to perform said automation.

But that's a discussion for another day.  Or at least another thread.

Right now I'm using fabric strictly as a (mostly) platform-neutral
alternative to shell scripts (or some other solution) to be able to convert
docs to ReST, build the Sphinx project, and deploy them to the server (sort
of...still working out some kinks) with a single command.  Once the
conversion takes place (assuming this project is successful) much of my
current need for it will go away, though it still might be useful for other
things (as I mentioned above).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091117/95e21f4b/attachment.htm 

From lvh at laurensvh.be  Tue Nov 17 15:58:42 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 17 Nov 2009 21:58:42 +0100
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
Message-ID: <cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>

> Actually, I think that this particular often-touted advantage is a wash.
> ?The "approachableness" of ReST is questionable, especially once you get
> into the weird corner cases where the syntax just completely falls apart and
> turns into an incomprehensible line-noise jumble. ?I mean, the syntax for
> tables reads like a joke about how trying to make the plain-text input look
> like the output is a bad idea:
> <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.
> ?Consider trying to re-flow the contents of a table cell after adding text
> to it, for example. ?Plus, a _lot_ of people know HTML -- still many more
> than know ReST, I would argue -- and lore adds relatively little to HTML.
> However, the motivation for choosing HTML was that "any day now" there would
> be a good, commonly used, GUI editor for HTML documents and we could easily
> annotate the output of one of those with the extra metadata that lore
> wanted. ?That hasn't happened. ?What *has* happened is that despite the
> difficulty involved in parsing and emitting ReST as compared to something
> fairly regular like HTML or XML, tools like these have been emerging:
> ?? ?http://kib2.free.fr/reSTinPeace/
> ?? ?http://blog.enthought.com/?p=127

Not to detract from any of the points you've made regarding reST's
table syntax, but I've found it to be quite livable-with using
table.el. Emacs users might be interested:
http://table.sourceforge.net/

Laurens


From vitaly at synapticvision.com  Tue Nov 17 16:07:20 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 17 Nov 2009 16:07:20 -0500
Subject: [Twisted-Python] server push data to client
Message-ID: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>

hi,
what could be the way(Producer/Consumer?) and simple,basic example to  
push data(~10Kb) from Twisted based server(that listening for incoming  
requests) into  client side(for example FLEX) not as a response to the  
incoming request, but occasionally, triggered by server side???

In traditional client/server arch, the server is listening, accepting  
and responding to the client's requests, but here I'm looking for  
something that initiated from server itself and pushing data to client.

Appreciate the help.




From wolfgang at rohdewald.de  Tue Nov 17 19:12:51 2009
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Wed, 18 Nov 2009 01:12:51 +0100
Subject: [Twisted-Python] pb, viewable,
	avatars: The example chatserver is buggy
Message-ID: <200911180112.51332.wolfgang@rohdewald.de>

I tried this example:
http://twistedmatrix.com/projects/core/documentation/howto/pb-cred.html#auto18

(scripts chatserver.py and chatclient.py)

but they do not work with python 2.6.4 (twisted 8.2.0).

Before the client can do much, the server function
User.detached is called resulting in an exception later
when User.send is called but self.remote is None.

I can fix this by changing chatclient.py:

def connected(self, perspective):
   self.perspective = perspective  
   ... and continue as in the original script

it seems that otherwise the perspective is destroyed
too early.

also the documentation should perhaps mention that the
client can only connect to the server once because the
server code does not remove a user from her group when
she detaches.

Is there any more complete example anywhere with better
error handling?

-- 
Wolfgang


From lasizoillo at gmail.com  Tue Nov 17 22:29:45 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Wed, 18 Nov 2009 04:29:45 +0100
Subject: [Twisted-Python] server push data to client
In-Reply-To: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
References: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
Message-ID: <49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>

2009/11/17  <vitaly at synapticvision.com>:
> hi,
> what could be the way(Producer/Consumer?) and simple,basic example to
> push data(~10Kb) from Twisted based server(that listening for incoming
> requests) into ?client side(for example FLEX) not as a response to the
> incoming request, but occasionally, triggered by server side???
>
> In traditional client/server arch, the server is listening, accepting
> and responding to the client's requests, but here I'm looking for
> something that initiated from server itself and pushing data to client.
>

In HTTP, the client can't open server sockets. The workaround is poll
to the server or open a persistent connection to the server. Some
clients can't open server sockets (they are behind a firewall) and you
need make the same tricks.

Orbited is a comet (server push) framework based on Twisted.
http://orbited.org/

Cometd (the twisted version) can be another example:
http://svn.cometd.com/trunk/cometd-twisted/
http://cometdproject.dojotoolkit.org/

Regards,
Javi


From glyph at twistedmatrix.com  Wed Nov 18 00:03:32 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Nov 2009 00:03:32 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
	<cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>
Message-ID: <37BFD9A3-975D-4CCF-8D09-9E7A85FE7954@twistedmatrix.com>

On Nov 17, 2009, at 3:58 PM, Laurens Van Houtven wrote:

> Not to detract from any of the points you've made regarding reST's
> table syntax, but I've found it to be quite livable-with using
> table.el. Emacs users might be interested:
> http://table.sourceforge.net/

Wow.  Uh, erm.  This does detract significantly.  Docutils' API for parsing it mitigates my parsing concerns, and this now mitigates my UI concerns.

Although... I've been using it and editing text inside of tables, resize and reformat them for the last 20 minutes or so and it is both mesmerising and disturbing.  I thought artist-mode would be the weirdest thing I'd ever see in Emacs, but this tops it easily.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091118/bde19e9b/attachment.htm 

From tommaso.mazzafico at yahoo.com  Wed Nov 18 09:03:45 2009
From: tommaso.mazzafico at yahoo.com (Tommaso Mazzafico)
Date: Wed, 18 Nov 2009 06:03:45 -0800 (PST)
Subject: [Twisted-Python] A non-blocking socket operation could not be
	completed immediately
Message-ID: <594365.55357.qm@web113815.mail.gq1.yahoo.com>

I tried this code:

-----------------------------------------
from twisted.spread import pb
from twisted.internet import reactor

class Echoer(pb.Root):
   def remote_echo(self, s):
      return s
if __name__ == "__main__":
   reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
   reactor.run()
-----------------------------------------

On Windows XP all is ok.
On Windows 7 64 I receive this error message:

-----------------------------------------
C:\Program Files (x86)\Python\lib\site-packages\twisted\spread\pb.py:30: DeprecationWarning: the md5 module is deprecated; use hashlib instead
  import md5
Traceback (most recent call last):
  File "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in <module>
    reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
  File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\posixbase.py", line 356, in listenTCP
    p.startListening()
  File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\tcp.py", line 862, in startListening
    self._realPortNumber = skt.getsockname()[1]
  File "<string>", line 1, in getsockname
socket.error: [Errno 10035] A non-blocking socket operation could not be completed immediately
-----------------------------------------

What can I do?


      


From vitaly at synapticvision.com  Wed Nov 18 10:09:58 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Wed, 18 Nov 2009 10:09:58 -0500
Subject: [Twisted-Python] server push data to client
In-Reply-To: <49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>
References: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
	<49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>
Message-ID: <20091118100958.2319134docg71vtw@216.129.205.5>


Thank you.

Did anyone tried AmFast: http://code.google.com/p/amfast/ ???

Quoting lasizoillo <lasizoillo at gmail.com>:

> 2009/11/17  <vitaly at synapticvision.com>:
>> hi,
>> what could be the way(Producer/Consumer?) and simple,basic example to
>> push data(~10Kb) from Twisted based server(that listening for incoming
>> requests) into ?client side(for example FLEX) not as a response to the
>> incoming request, but occasionally, triggered by server side???
>>
>> In traditional client/server arch, the server is listening, accepting
>> and responding to the client's requests, but here I'm looking for
>> something that initiated from server itself and pushing data to client.
>>
>
> In HTTP, the client can't open server sockets. The workaround is poll
> to the server or open a persistent connection to the server. Some
> clients can't open server sockets (they are behind a firewall) and you
> need make the same tricks.
>
> Orbited is a comet (server push) framework based on Twisted.
> http://orbited.org/
>
> Cometd (the twisted version) can be another example:
> http://svn.cometd.com/trunk/cometd-twisted/
> http://cometdproject.dojotoolkit.org/
>
> Regards,
> Javi
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Wed Nov 18 10:55:56 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Wed, 18 Nov 2009 10:55:56 -0500
Subject: [Twisted-Python] A non-blocking socket operation could not be
 completed immediately
In-Reply-To: <594365.55357.qm@web113815.mail.gq1.yahoo.com>
References: <594365.55357.qm@web113815.mail.gq1.yahoo.com>
Message-ID: <1258559756.20810.78.camel@pintsize>

On Wed, 2009-11-18 at 06:03 -0800, Tommaso Mazzafico wrote:
> I tried this code:
> 
> -----------------------------------------
> from twisted.spread import pb
> from twisted.internet import reactor
> 
> class Echoer(pb.Root):
>    def remote_echo(self, s):
>       return s
> if __name__ == "__main__":
>    reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
>    reactor.run()
> -----------------------------------------
> 
> On Windows XP all is ok.
> On Windows 7 64 I receive this error message:
> 
> -----------------------------------------
> C:\Program Files (x86)\Python\lib\site-packages\twisted\spread\pb.py:30: DeprecationWarning: the md5 module is deprecated; use hashlib instead
>   import md5
> Traceback (most recent call last):
>   File "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in <module>
>     reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
>   File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\posixbase.py", line 356, in listenTCP
>     p.startListening()
>   File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\tcp.py", line 862, in startListening
>     self._realPortNumber = skt.getsockname()[1]
>   File "<string>", line 1, in getsockname
> socket.error: [Errno 10035] A non-blocking socket operation could not be completed immediately
> -----------------------------------------
> 
> What can I do?

1. Please file a bug at http://twistedmatrix.com/ - include version of
Twisted, whether you have firewall of some sort, etc., so we can make
sure this gets fixed.

2. Try patching the code so it does:
    
    from twisted.internet.util import untilConcludes
    self._realPortNumber = untilConcludes(lambda: skt.getsockname()[1])

Does this fix it? If it does, add this info to the bug.

3. Another thing to try is the IOCP reactor.

-Itamar



From tommaso.mazzafico at yahoo.com  Wed Nov 18 13:53:03 2009
From: tommaso.mazzafico at yahoo.com (Tommaso Mazzafico)
Date: Wed, 18 Nov 2009 10:53:03 -0800 (PST)
Subject: [Twisted-Python] A non-blocking socket operation could not be
	completed immediately
In-Reply-To: <1258559756.20810.78.camel@pintsize>
Message-ID: <35113.61945.qm@web113818.mail.gq1.yahoo.com>

--- On Wed, 11/18/09, Itamar Turner-Trauring (aka Shtull-Trauring) <itamar at itamarst.org> wrote:

> On Wed, 2009-11-18 at 06:03 -0800,
> Tommaso Mazzafico wrote:
> > I tried this code:
> > 
> > -----------------------------------------
> > from twisted.spread import pb
> > from twisted.internet import reactor
> > 
> > class Echoer(pb.Root):
> >    def remote_echo(self, s):
> >       return s
> > if __name__ == "__main__":
> >    reactor.listenTCP(8001,
> pb.PBServerFactory(Echoer()))
> >    reactor.run()
> > -----------------------------------------
> > 
> > On Windows XP all is ok.
> > On Windows 7 64 I receive this error message:
> > 
> > -----------------------------------------
> > C:\Program Files
> (x86)\Python\lib\site-packages\twisted\spread\pb.py:30:
> DeprecationWarning: the md5 module is deprecated; use
> hashlib instead
> >   import md5
> > Traceback (most recent call last):
> >   File
> "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in
> <module>
> >     reactor.listenTCP(8001,
> pb.PBServerFactory(Echoer()))
> >   File "C:\Program Files
> (x86)\Python\lib\site-packages\twisted\internet\posixbase.py",
> line 356, in listenTCP
> >     p.startListening()
> >   File "C:\Program Files
> (x86)\Python\lib\site-packages\twisted\internet\tcp.py",
> line 862, in startListening
> >     self._realPortNumber =
> skt.getsockname()[1]
> >   File "<string>", line 1, in
> getsockname
> > socket.error: [Errno 10035] A non-blocking socket
> operation could not be completed immediately
> > -----------------------------------------
> > 
> > What can I do?
> 
> 1. Please file a bug at http://twistedmatrix.com/ - include
> version of
> Twisted, whether you have firewall of some sort, etc., so
> we can make
> sure this gets fixed.
> 
> 2. Try patching the code so it does:
>     
>     from twisted.internet.util import
> untilConcludes
>     self._realPortNumber = untilConcludes(lambda:
> skt.getsockname()[1])
> 
> Does this fix it? If it does, add this info to the bug.

I tried patching like that:

from twisted.python.util import untilConcludes # I think you mean this, because twisted.internet.util does not exist
self._realPortNumber = untilConcludes(lambda: skt.getsockname()[1])

but without luck. It seems to change nothing, it crashes at once with the same stack trace. I'm on Windows 7 64, Python 2.6.4, Twisted 8.2.0

I'm quite new to Python and very new to Twisted. I will look for "IOCP reactor"
I'm going to file a bug on Trac, thank you for the help.


      


From ted.pederson at gmail.com  Wed Nov 18 14:38:38 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Wed, 18 Nov 2009 11:38:38 -0800
Subject: [Twisted-Python] Farming off work to other web services
Message-ID: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>

How can my server utilize other web services? Is there part of the framework
to do this, or should I just write a mini-client?

Basically, I want to use a very simple web service, a url with a couple of
params, and I get back xml or json data.

Sorry for fundamental nature of this question. Perhaps I should be
redirected to a book or docs, but the docs are pretty large and I am just
getting my feet wet.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091118/2f6b94da/attachment.htm 

From exarkun at twistedmatrix.com  Wed Nov 18 14:46:32 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Nov 2009 19:46:32 -0000
Subject: [Twisted-Python] Farming off work to other web services
In-Reply-To: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>
References: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>
Message-ID: <20091118194632.27565.288803469.divmod.xquotient.309@localhost.localdomain>

On 07:38 pm, ted.pederson at gmail.com wrote:
>How can my server utilize other web services? Is there part of the 
>framework
>to do this, or should I just write a mini-client?
>
>Basically, I want to use a very simple web service, a url with a couple 
>of
>params, and I get back xml or json data.
>
>Sorry for fundamental nature of this question. Perhaps I should be
>redirected to a book or docs, but the docs are pretty large and I am 
>just
>getting my feet wet.

http://twistedmatrix.com/documents/current/api/twisted.web.client.getPage.html 
is probably what you're looking for.

http://twistedmatrix.com/projects/web/documentation/examples/getpage.py 
demonstrates its usage.

Jean-Paul


From don at delphexonline.com  Wed Nov 18 15:01:46 2009
From: don at delphexonline.com (Don Schoeman)
Date: Wed, 18 Nov 2009 22:01:46 +0200
Subject: [Twisted-Python] Passing messages from HTTP Request to another
	factory or protocol
Message-ID: <4B0452AA.50709@delphexonline.com>

Hi guys,

I am busy developing a gateway of some sort and have the following
running so far on the reactor:
- HTTP Server listening for incoming connections and HTTP requests.
- LineReceiver client permanently connected to another server.
(Connection is established at startup)

What I need to do is to first translate and then pass messages received
at the HTTP listening end - over to the LineReceiver client. The client
in turn will pass it on to a server using a custom protocol called SSMI,
for example:

Web Browser Requests -> HTTPServer -> SSMIClient -> ServerXYZ

For the HTTPServer I'm using the classic design where you inherit from
twisted.web.http.Request for the Protocol, while having
twisted.web.http.HTTPChannel and twisted.web.http.HTTPFactory inherited
classes to support it.

Also, there will only ever be one SSMIClient protocol instance whereas
the HTTPServer needs to process multiple requests at a time, so it will
be a many-to-one design.

What I need to know is how to pass the "packets" received by the
HTTPServer onto the SSMIClient protocol..? I am assuming one would use
deferreds, but the twisted.web.http.Request derived class seemingly does
not have "access" to the Reactor or it's Factory object. But to be
honest, I'm a little in over my head on this and don't even know how to
approach this. I don't know whether I should use a FIFO queue to store
the messages and I don't even know where to keep such a queue. If anyone
have done something even remotely like this I'd love to get some input
from you. It will be greatly appreciated!

Kind Regards,
Don Schoeman


From don at delphexonline.com  Wed Nov 18 16:46:48 2009
From: don at delphexonline.com (Don Schoeman)
Date: Wed, 18 Nov 2009 23:46:48 +0200
Subject: [Twisted-Python] Passing messages from HTTP Request to another
 factory or protocol
In-Reply-To: <4B0452AA.50709@delphexonline.com>
References: <4B0452AA.50709@delphexonline.com>
Message-ID: <4B046B48.8070404@delphexonline.com>

Here is what I have done so far...

I have a dequeued collection that can be accessed by all the relevant
classes. On the one end the HTTP Server appends items to this queue when
it receives a valid HTTP request. On the other end, the SSMI client pops
these items from the queue on a 5 seconds "callLater" based deferred and
sends it out over the existing TCP connection.

Now this works, but I'm wondering if there is not a better way.

Kind Regards,
Don Schoeman





Don Schoeman wrote:
> Hi guys,
> 
> I am busy developing a gateway of some sort and have the following
> running so far on the reactor:
> - HTTP Server listening for incoming connections and HTTP requests.
> - LineReceiver client permanently connected to another server.
> (Connection is established at startup)
> 
> What I need to do is to first translate and then pass messages received
> at the HTTP listening end - over to the LineReceiver client. The client
> in turn will pass it on to a server using a custom protocol called SSMI,
> for example:
> 
> Web Browser Requests -> HTTPServer -> SSMIClient -> ServerXYZ
> 
> For the HTTPServer I'm using the classic design where you inherit from
> twisted.web.http.Request for the Protocol, while having
> twisted.web.http.HTTPChannel and twisted.web.http.HTTPFactory inherited
> classes to support it.
> 
> Also, there will only ever be one SSMIClient protocol instance whereas
> the HTTPServer needs to process multiple requests at a time, so it will
> be a many-to-one design.
> 
> What I need to know is how to pass the "packets" received by the
> HTTPServer onto the SSMIClient protocol..? I am assuming one would use
> deferreds, but the twisted.web.http.Request derived class seemingly does
> not have "access" to the Reactor or it's Factory object. But to be
> honest, I'm a little in over my head on this and don't even know how to
> approach this. I don't know whether I should use a FIFO queue to store
> the messages and I don't even know where to keep such a queue. If anyone
> have done something even remotely like this I'd love to get some input
> from you. It will be greatly appreciated!
> 
> Kind Regards,
> Don Schoeman
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


From exarkun at twistedmatrix.com  Wed Nov 18 17:09:33 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Nov 2009 22:09:33 -0000
Subject: [Twisted-Python] Passing messages from HTTP Request to
	another	factory or protocol
In-Reply-To: <4B046B48.8070404@delphexonline.com>
References: <4B0452AA.50709@delphexonline.com>
	<4B046B48.8070404@delphexonline.com>
Message-ID: <20091118220933.27565.1854150136.divmod.xquotient.331@localhost.localdomain>

On 09:46 pm, don at delphexonline.com wrote:
>Here is what I have done so far...
>
>I have a dequeued collection that can be accessed by all the relevant
>classes. On the one end the HTTP Server appends items to this queue 
>when
>it receives a valid HTTP request. On the other end, the SSMI client 
>pops
>these items from the queue on a 5 seconds "callLater" based deferred 
>and
>sends it out over the existing TCP connection.
>
>Now this works, but I'm wondering if there is not a better way.

If you use twisted.internet.defer.DeferredQueue (or any other "push" 
event-driven mechanism) then you can eliminate the 5 second polling 
loop.

Jean-Paul


From vitaly at synapticvision.com  Wed Nov 18 18:22:07 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Wed, 18 Nov 2009 18:22:07 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
Message-ID: <20091118182207.92495fhonzg8nucc@216.129.205.5>

hi,
is there any example how to implement long-polling channel with  
Twisted while using reactor()?

Thank you.



From itamar at itamarst.org  Thu Nov 19 08:01:12 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Thu, 19 Nov 2009 08:01:12 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <1258635673.20810.85.camel@pintsize>

On Wed, 2009-11-18 at 18:22 -0500, vitaly at synapticvision.com wrote:
> hi,
> is there any example how to implement long-polling channel with  
> Twisted while using reactor()?

What is a "long-polling channel"?



From rlotun at gmail.com  Thu Nov 19 08:38:44 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 19 Nov 2009 13:38:44 +0000
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>

Hi,

> is there any example how to implement long-polling channel with
> Twisted while using reactor()?

I'm not sure what you mean either, but perhaps you're talking about an
HTTP long polling/comet thing? You might want to check out orbited
(http://orbited.org/) which is a server-side comet implementation
using Twisted.

I've been interested in a plugin for nginx called nginx_http_push
(http://pushmodule.slact.net/) that could allow for a more efficient
implementation of long-polling/push over HTTP. All you need to do is
POST to a resource server-side (say, using Twisted) and nginx and the
plugin take care of pushing out the message to clients.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From wthie at thiengineering.ch  Thu Nov 19 12:04:28 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 19 Nov 2009 18:04:28 +0100
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <4B057A9C.6020808@thiengineering.ch>

If you're referring to something like XEP-0124 (BOSH)

http://xmpp.org/extensions/xep-0124.html

then the short answer is, I did only find a BOSH implementation done 
with Twisted as part of an XMPP over BOSH connection manager 
implementation called punjab.

http://code.stanziq.com/punjab

Interesting in this particular context could be strophe

http://code.stanziq.com/strophe/

I'm currently tinkering with a minimal BOSH sample providing a delayed 
echo server which allows me to test the behavior of mobile 3G apps

Cheers, Werner

vitaly at synapticvision.com wrote:
> hi,
> is there any example how to implement long-polling channel with  
> Twisted while using reactor()?
> 
> Thank you.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From vitaly at synapticvision.com  Thu Nov 19 12:46:13 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 12:46:13 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <1258635673.20810.85.camel@pintsize>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
	<1258635673.20810.85.camel@pintsize>
Message-ID: <20091119124613.79105ovreop59t0k@216.129.205.5>



Long-polling/push over HTTP from server to clients.


Quoting "Itamar Turner-Trauring (aka Shtull-Trauring)" <itamar at itamarst.org>:

> On Wed, 2009-11-18 at 18:22 -0500, vitaly at synapticvision.com wrote:
>> hi,
>> is there any example how to implement long-polling channel with
>> Twisted while using reactor()?
>
> What is a "long-polling channel"?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From vitaly at synapticvision.com  Thu Nov 19 13:39:43 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 13:39:43 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
	<95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>
Message-ID: <20091119133943.2400326bf2hyzyuc@216.129.205.5>


Found this one easily to suite in current environment:
http://code.google.com/p/amfast/wiki/MessagingServer#Producer/Consumer_Messaging

Quoting "Reza Lotun" <rlotun at gmail.com>:

> Hi,
>
>> is there any example how to implement long-polling channel with
>> Twisted while using reactor()?
>
> I'm not sure what you mean either, but perhaps you're talking about an
> HTTP long polling/comet thing? You might want to check out orbited
> (http://orbited.org/) which is a server-side comet implementation
> using Twisted.
>
> I've been interested in a plugin for nginx called nginx_http_push
> (http://pushmodule.slact.net/) that could allow for a more efficient
> implementation of long-polling/push over HTTP. All you need to do is
> POST to a resource server-side (say, using Twisted) and nginx and the
> plugin take care of pushing out the message to clients.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From cole.tuininga at gmail.com  Thu Nov 19 16:39:16 2009
From: cole.tuininga at gmail.com (Cole Tuininga)
Date: Thu, 19 Nov 2009 16:39:16 -0500
Subject: [Twisted-Python] Grabbing HTTP Headers with
	twisted.web.soap.SOAPPublisher
Message-ID: <1a9dea7f0911191339v3c83819bk5c245eb6b65b9371@mail.gmail.com>

Hopefully quick question.  Is there an existing way to easily get at
the HTTP headers in an incoming SOAP request being handled by
twisted.web.soap.SOAPPublisher?  Or do I need to override the render
method to keep/return it?  Thanks in advance...

-- 
Cole Tuininga
http://www.tuininga.org/


From vitaly at synapticvision.com  Thu Nov 19 19:20:10 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 19:20:10 -0500
Subject: [Twisted-Python] TwistedGateway instead of TwistedChannelSet
Message-ID: <20091119192010.71762dru9z4biajo@216.129.205.5>

hi guys,

how the following example could be re-created using TwistedGateway,  
reactor.listenSSL and reactor.run instead of TwistedChannel?

Appreciate the help.

# ------------------------------------------

import logging
import sys

from twisted.application import service, strports
from twisted.web import static, server, resource, vhost

import amfast
from amfast.remoting.twisted_channel import TwistedChannelSet, TwistedChannel

amfast.log_debug = True
handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.DEBUG)
amfast.logger.addHandler(handler)

# Setup domain
root = vhost.NameVirtualHost()
root.default = static.File("../flex/deploy")
domain = "localhost"
root.addHost(domain, static.File("../flex/deploy"))

# If the code is completely asynchronous,
# you can use the dummy_threading module
# to avoid RLock overhead.
import dummy_threading
amfast.mutex_cls = dummy_threading.RLock

# Setup ChannelSet
channel_set = TwistedChannelSet(notify_connections=True)

# Clients connect every x seconds
# to polling channels to check for messages.
# If messages are available, they are
# returned to the client.
polling_channel = TwistedChannel('amf-polling-channel')
channel_set.mapChannel(polling_channel)

# Long-poll channels do not return
# a response to the client until
# a message is available, or channel.max_interval
# is reached.
long_poll_channel = TwistedChannel('long-poll-channel', wait_interval=90)
channel_set.mapChannel(long_poll_channel)

# Setup channels
root.putChild('amf', polling_channel)
root.putChild('longPoll', long_poll_channel)

# Setup server
port = 8000
application = service.Application('AmFast Example')
server = strports.service('tcp:%s' % port, server.Site(root))
server.setServiceParent(application)

print "serving on %s:%s" % (domain, port)
print "Press ctrl-c to halt."



From radix at twistedmatrix.com  Thu Nov 19 22:13:46 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Nov 2009 22:13:46 -0500
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
Message-ID: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>

Hey guys. I've done an initial cut of Twisted 9. Please check out
these tarballs and tell me whether or not you find any regressions or
other release-related problems.

The release notes are here:

http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt

The tarballs are here:

http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/

Please post a message even if you don't have any problems.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From namanvit at gmail.com  Fri Nov 20 03:00:03 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 20 Nov 2009 09:00:03 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911200000w11a4e7d0w4282d525aef5543f@mail.gmail.com>

Hi,

Thanks for the reply.
I actually came across Process documentation for twisted; but in my case my
the script which calls the twisted client is not implemented in Twisted
It is just a controller program which instantiates a central repository and
spawns off 2 threads and then the threads update to that repository
periodically (so I did not feel the need to run a reactor loop as in Twisted
).

Is there any way to call a Twisted client in a Process or a thread without
using the reactor?


To explain better:
master.py spawns 2 threads to update a central repository.
build_worker_t : launches a Twisted client to connect to a Twisted server
running on a build machine
test_worker_t   : launches a Twisted client to connect to a Twisted server
running on a Test Machine

master.py:
___________________________________________________________________
// make a central repository for the threads to update
class Globals:
    repo = []
    lock = threading.Lock()


def main():
    build_worker_t = threading.Thread( target=dispatch_build_worker)
    build_worker_t.start()

    test_worker_t = threading.Thread( target=dispatch_test_worker)
    test_worker_t.start()

    build_worker_t.join()
    test_worker_t.join()


def dispatch_build_worker():

    # build_worker.main is a twisted client
     foo = Process(target=build_worker.main, args=(build_q,uid,))
     foo.start()
     foo.join()    //wait for the process(ie. client-server communication to
finish)
     //get status from build_q and update repo

def dispatch_test_worker():



Regards
Naman



On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091120/2a821804/attachment.htm 

From namanvit at gmail.com  Fri Nov 20 03:05:57 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 20 Nov 2009 09:05:57 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911200005n717312d3gd5e3fd2e80bde8c@mail.gmail.com>

Just to add to the previous post:

>>foo = Process(target=build_worker.main, args=(build_q,uid,))

is the statement I want to replace (because it is unreliable), with
something other that reactor.spawnprocess as there is no reactor in the
calling script.

Thanks
Naman

On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091120/09e9621e/attachment-0001.htm 

From landreville at deadtreepages.com  Fri Nov 20 11:38:42 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 20 Nov 2009 11:38:42 -0500
Subject: [Twisted-Python] Storm ORM
Message-ID: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>

Hello,

Does anyone use a good ORM with twisted? I'm looking for something very
simple, but works with twisted easily.

I saw this possible approach to using Storm with twisted
http://divmod.org/trac/wiki/NevowStormApproach but has any progress been
made to put this in place?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091120/f9fce7f2/attachment.htm 

From jml at mumak.net  Fri Nov 20 12:23:08 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 20 Nov 2009 11:23:08 -0600
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
Message-ID: <d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>

On Thu, Nov 19, 2009 at 9:13 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hey guys. I've done an initial cut of Twisted 9. Please check out
> these tarballs and tell me whether or not you find any regressions or
> other release-related problems.
>
> The release notes are here:
>
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
>
> The tarballs are here:
>
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
>
> Please post a message even if you don't have any problems.
>

Woot!

jml


From glyph at twistedmatrix.com  Fri Nov 20 15:59:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Nov 2009 15:59:47 -0500
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
	<d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>
Message-ID: <7C153FF9-CCD1-42F0-9ECF-51019318FE3D@twistedmatrix.com>


On Nov 20, 2009, at 12:23 PM, Jonathan Lange wrote:

> On Thu, Nov 19, 2009 at 9:13 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> Hey guys. I've done an initial cut of Twisted 9. Please check out
>> these tarballs and tell me whether or not you find any regressions or
>> other release-related problems.
>> 
>> The release notes are here:
>> 
>> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
>> 
>> The tarballs are here:
>> 
>> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
>> 
>> Please post a message even if you don't have any problems.
> 
> Woot!

I have many problems, but none of them seem to be related to this release.  Hooray!!!

From dripton at ripton.net  Fri Nov 20 16:33:24 2009
From: dripton at ripton.net (David Ripton)
Date: Fri, 20 Nov 2009 13:33:24 -0800
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
Message-ID: <20091120213324.GB22650@vidar.dreamhost.com>

On 2009.11.19 22:13:46 -0500, Christopher Armstrong wrote:
> Hey guys. I've done an initial cut of Twisted 9. Please check out
> these tarballs and tell me whether or not you find any regressions or
> other release-related problems.
> 
> The release notes are here:
> 
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
> 
> The tarballs are here:
> 
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
> 
> Please post a message even if you don't have any problems.

I just replaced Twisted 8.2.0 with 9.0.0pre1 in my local Git repo at
work, and did a full build of our product, and then ran the bits that
use Twisted (we use the core and the gtk2 reactor and AMP, on RHEL), and
nothing obviously weird or bad happened.  Bor-ing!  Maybe try fewer unit
tests next time, to add more excitement to the upgrade process?

-- 
David Ripton    dripton at ripton.net


From vitaly at synapticvision.com  Sat Nov 21 12:08:55 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Sat, 21 Nov 2009 12:08:55 -0500
Subject: [Twisted-Python] twisted.web.server sessions
Message-ID: <20091121120855.12876nglbvwslsg8@216.129.205.5>

hi,
is the re any convenient way to get from twisted.web.server all non  
expired sessions in one single call?

Regards,
Vitaly.



From exarkun at twistedmatrix.com  Sun Nov 22 00:05:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Nov 2009 05:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1258866315.98.1359258556@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091122/c161636f/attachment.htm 

From hanooter at gmail.com  Sun Nov 22 00:42:40 2009
From: hanooter at gmail.com (Kyle Hanson)
Date: Sat, 21 Nov 2009 21:42:40 -0800
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
Message-ID: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>

Basically I want to create a personal HTTP proxy to add a javascript library
to every page I visit because the javascript contains several tools I wrote
and Chrome doesnt allow extensions.

So I have a basic proxy set up from here:
http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
logging and what not.

The first problem I have with this is that I cannot view Gmail due to HTTPS.
This is problematic since I would like to view my email and don't want to
turn off proxy settings everytime to do so. So is there a way to quitely
pass ALL HTTPS without doing anything to them so it doesnt just send blank
data?


The second problem is that I have no idea how to modify the page contents.
Do I modify the buffer in my extended ProxyClient class? Because I tried
that and it only worked on very few websites. Perhaps could someone just
show me by doing a simple word swap (switching all mentions of Python to
some other word?)

I would greatly appreciate it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091121/4b886592/attachment.htm 

From dripton at ripton.net  Sun Nov 22 12:51:32 2009
From: dripton at ripton.net (David Ripton)
Date: Sun, 22 Nov 2009 09:51:32 -0800
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <20091120213324.GB22650@vidar.dreamhost.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
	<20091120213324.GB22650@vidar.dreamhost.com>
Message-ID: <20091122175132.GA1594@vidar.dreamhost.com>

On 2009.11.20 13:33:24 -0800, David Ripton wrote:
> On 2009.11.19 22:13:46 -0500, Christopher Armstrong wrote:
> > Hey guys. I've done an initial cut of Twisted 9. Please check out
> > these tarballs and tell me whether or not you find any regressions or
> > other release-related problems.
> > 
> > The release notes are here:
> > 
> > http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
> > 
> > The tarballs are here:
> > 
> > http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
> > 
> > Please post a message even if you don't have any problems.
> 
> I just replaced Twisted 8.2.0 with 9.0.0pre1 in my local Git repo at
> work, and did a full build of our product, and then ran the bits that
> use Twisted (we use the core and the gtk2 reactor and AMP, on RHEL), and
> nothing obviously weird or bad happened.  Bor-ing!  Maybe try fewer unit
> tests next time, to add more excitement to the upgrade process?

It also installed effortlessly and worked perfectly on Gentoo x86 and
Ubuntu amd64.  The only difference I actually noticed from 8.2 was the
lack of deprecation warnings from Python 2.6.

(Skip to the bottom if you don't care about the detailed pain of
installing Twisted from source on Windows.)

Then I tried to install it on Windows XP.  "python setup.py install"
whines about a missing vcvars.bat.  I think that means I need to install
a C compiler.  I download Visual C++ 2008 Express Edition with Service
Pack 1 from microsoft.com.  Huge license agreement, tiny window, making
it almost impossible to actually read it all.  Fearing all that
legalese, I abort the install and fetch my seven-year-old daughter and
ask her to install it, thus preserving my right to someday publish
benchmarks of SQL Server without Microsoft's permission.  (Yes, it would
be cruel to preserve my own rights while sacrificing hers, but she's too
young to sign legally binding contracts.)  Then we wait forever for the
world's slowest installer.  (Express Edition.  Heh.)  It finally
finishes and then tells her to reboot.  I thank her and send her back to
playing.

I rerun Twisted's "python setup.py install"  I see some errors about
missing epoll.h, but the install continues. 

I finally start up my game server.  "To Help Protect My Computer,
Windows Firewall has blocked some features of this program."  (Funny, it
doesn't pop up that same warning if someone tries to use IE or Outlook.)
I unblock python.  I see deprecation warnings for md5, that I thought
were fixed in Twisted 9.  So maybe I'm still running 8.2.  I start
python, import twisted, and print twisted.version.  9.0.0pre1.  But I
might have a mixed version install, so I go to Add/Remove Programs and
uninstall Twisted 8.2, then run "python setup.py install" again to
reinstall Twisted 9.

I start my game server again, and get "No module named zope.interface" I
guess the Twisted 8.2 binary installer installed it for me and when I
uninstalled it I lost it, so now I need to install it myself.  I fetch a
zope interface tarball, gunzip it, untar it, and run "python setup.py
install" on it.

I start my game server again, and get "ImportError: No module named
pkg_resources."  I go back to the Twisted directory and redo "python
setup.py install"  Same error.  So I guess the zope interface install
failed in some odd way without warning.

I go back to the zope interface page, and see a note that says to just
use the .exe installer on Windows.  But there isn't one.  I hunt around
the zope site for several minutes and fail to find one.  (There's one
for all of zope, but that seems like overkill.)  I go to PyPI and find a
zope interface egg for Windows.  I double-click on the egg and Windows
has no idea what it is.  I go to PyPI and find a setuptools .exe
installer, install that, then use setuptools' ez_setup.py to install the
Zope Interface egg.  And then Twisted 9.0.0pre1 works fine.

So the moral of the story is that installing software from source on
Windows really is way too hard, and Windows users really do need binary
installers.  But Twisted 9 did eventually work for me on Windows.

-- 
David Ripton    dripton at ripton.net


From hugh.emberson at gmail.com  Sun Nov 22 22:55:16 2009
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Mon, 23 Nov 2009 14:55:16 +1100
Subject: [Twisted-Python] win32eventreactor freezing
Message-ID: <359778bc0911221955g6bbfc2buf0e3d30f9ad6f211@mail.gmail.com>

Hello,

I have a small windows GUI program based on win32eventreactor and win32gui
(from pywin32).  It pops up a small dialog, gathers some information from
the user, then makes an SSL connection to a server and sends the
information.

This program has been running on over 40 different systems (XP, Vista,
Windows Server, Windows 7) for a while now, without any problems.  Today I
had one potential customer tell me that he could enter text in the first
text field on the dialog, but could not change move focus to the next text
field, or any other control in the dialog, either by tabbing or clicking.
I've never seen anything like this.

I don't know if this is a twisted problem or a win32gui problem, or a
problem in my code and unfortunately I can't get any more information from
the customer.

Has anyone seen anything like this before?  Any ideas where to start?

I'm running Twisted 2.5.0 on python 2.5.1.  I'm aware these are old, but
I've never had any problems with them before.  Upgrading is on my todo list.

Thanks,
Hugh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091123/5f60b006/attachment.htm 

From drew.smathers at gmail.com  Mon Nov 23 16:36:27 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 23 Nov 2009 16:36:27 -0500
Subject: [Twisted-Python] Storm ORM
In-Reply-To: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>
References: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>
Message-ID: <368574aa0911231336l300b1e84kad2614730b772023@mail.gmail.com>

On Fri, Nov 20, 2009 at 11:38 AM, Landreville
<landreville at deadtreepages.com> wrote:
> Hello,
>
> Does anyone use a good ORM with twisted? I'm looking for something very
> simple, but works with twisted easily.
> I saw this possible approach to using Storm with twisted
> http://divmod.org/trac/wiki/NevowStormApproach but has any progress been
> made to put this in place?

There is a branch of storm which integrates Twisted:
https://code.launchpad.net/~therve/storm/twisted-integration.

-Drew


From landreville at deadtreepages.com  Mon Nov 23 16:53:35 2009
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 23 Nov 2009 16:53:35 -0500
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
In-Reply-To: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
References: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
Message-ID: <9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>

On Sun, Nov 22, 2009 at 12:42 AM, Kyle Hanson <hanooter at gmail.com> wrote:

> Basically I want to create a personal HTTP proxy to add a javascript
> library to every page I visit because the javascript contains several tools
> I wrote and Chrome doesnt allow extensions.
>
> So I have a basic proxy set up from here:
> http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
> logging and what not.
>
> The first problem I have with this is that I cannot view Gmail due to
> HTTPS. This is problematic since I would like to view my email and don't
> want to turn off proxy settings everytime to do so. So is there a way to
> quitely pass ALL HTTPS without doing anything to them so it doesnt just send
> blank data?
>
>
> The second problem is that I have no idea how to modify the page contents.
> Do I modify the buffer in my extended ProxyClient class? Because I tried
> that and it only worked on very few websites. Perhaps could someone just
> show me by doing a simple word swap (switching all mentions of Python to
> some other word?)
>
> I would greatly appreciate it.
>
>
>
If you just want to run a custom javascript library you might want to look
into greasemonkey scripts (supported in Chrome, Firefox, and Opera), they
won't do everything your Proxy could (or maybe they could?) but it would
probably be quicker/easier to implement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091123/c84fbc5a/attachment.htm 

From hanooter at gmail.com  Mon Nov 23 17:32:13 2009
From: hanooter at gmail.com (Kyle Hanson)
Date: Mon, 23 Nov 2009 14:32:13 -0800
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
In-Reply-To: <9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>
References: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
	<9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>
Message-ID: <611f47bd0911231432h6b662c37g1f149a649604a5c8@mail.gmail.com>

Thanks for the reply,

But, I wanted to so some other stuff like statistics from the sites I visit
and doing a few other things in the background without slowing down my
browser with javascript (automatically extracting flv's, etc.) as well as do
some MITM stuff (not for mischievous uses though) so that I can better
extend my web browsing. I found a Proxy in Python that does HTTPS through
HTTP through OpenSSL but lacks the performance of Twisted. I think I'll just
try looking more into enhancing the performance of that Proxy while I wait
for a response here since I would prefer to use Twisted.

On Mon, Nov 23, 2009 at 1:53 PM, Landreville
<landreville at deadtreepages.com>wrote:

>
>
> On Sun, Nov 22, 2009 at 12:42 AM, Kyle Hanson <hanooter at gmail.com> wrote:
>
>> Basically I want to create a personal HTTP proxy to add a javascript
>> library to every page I visit because the javascript contains several tools
>> I wrote and Chrome doesnt allow extensions.
>>
>> So I have a basic proxy set up from here:
>> http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
>> logging and what not.
>>
>> The first problem I have with this is that I cannot view Gmail due to
>> HTTPS. This is problematic since I would like to view my email and don't
>> want to turn off proxy settings everytime to do so. So is there a way to
>> quitely pass ALL HTTPS without doing anything to them so it doesnt just send
>> blank data?
>>
>>
>> The second problem is that I have no idea how to modify the page contents.
>> Do I modify the buffer in my extended ProxyClient class? Because I tried
>> that and it only worked on very few websites. Perhaps could someone just
>> show me by doing a simple word swap (switching all mentions of Python to
>> some other word?)
>>
>> I would greatly appreciate it.
>>
>>
>>
> If you just want to run a custom javascript library you might want to look
> into greasemonkey scripts (supported in Chrome, Firefox, and Opera), they
> won't do everything your Proxy could (or maybe they could?) but it would
> probably be quicker/easier to implement.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091123/a05a8493/attachment.htm 

From art at academ.org  Tue Nov 24 04:42:16 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 24 Nov 2009 15:42:16 +0600
Subject: [Twisted-Python] Quotient projects
Message-ID: <4B0BAA78.7090606@academ.org>

What is the relationship between these quotient projects?

http://freshmeat.net/projects/divmod
    last release 0.9.2 2005 22:27, has imap support, has tap server
    can somebody help to find the tarball of 0.9.2?

http://divmod.org/trac/wiki/DivmodQuotient
    starts 0.1.0 (2006-06-12), as I see it does not have imap support 
and tap


From namanvit at gmail.com  Tue Nov 24 05:59:03 2009
From: namanvit at gmail.com (naman jain)
Date: Tue, 24 Nov 2009 11:59:03 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>

Please could I get some help on this issue, if any one has some ideas.

Thanks
Naman

On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091124/4b2030ed/attachment.htm 

From exarkun at twistedmatrix.com  Tue Nov 24 08:48:08 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Nov 2009 13:48:08 -0000
Subject: [Twisted-Python] Quotient projects
In-Reply-To: <4B0BAA78.7090606@academ.org>
References: <4B0BAA78.7090606@academ.org>
Message-ID: <20091124134808.26747.1234596162.divmod.xquotient.16@localhost.localdomain>

On 09:42 am, art at academ.org wrote:
>What is the relationship between these quotient projects?
>
>http://freshmeat.net/projects/divmod
>    last release 0.9.2 2005 22:27, has imap support, has tap server
>    can somebody help to find the tarball of 0.9.2?
>
>http://divmod.org/trac/wiki/DivmodQuotient
>    starts 0.1.0 (2006-06-12), as I see it does not have imap support
>and tap

The latter is a from-scratch rewrite of the former.  The former is based 
on a database system with significant shortcomings and so will probably 
never see any further development.

If you're curious about where things are going with the latter, the 
divmod-dev mailing list or the #divmod channel on freenode are two 
places you might be able to find people with whom to discuss that.

Jean-Paul


From exarkun at twistedmatrix.com  Tue Nov 24 08:48:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Nov 2009 13:48:58 -0000
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
	<74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>
Message-ID: <20091124134858.26747.1216447171.divmod.xquotient.18@localhost.localdomain>

On 10:59 am, namanvit at gmail.com wrote:
>Please could I get some help on this issue, if any one has some ideas.

Can you produce a short, self-contained, correct example 
(<http://sscce.org/>) of the problem you're having?

Jean-Paul


From brandon.mcginty at gmail.com  Tue Nov 24 09:37:10 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Tue, 24 Nov 2009 09:37:10 -0500
Subject: [Twisted-Python] HTTP Gateway, Passing In Cookies Via URL
Message-ID: <4B0BEF96.7050309@gmail.com>

I hope someone can help me with this.
I have checked through the twisted web proxy and twisted http client, 
and I suppose I am just missing something.
I am trying to create a resource, inside a twisted web server, that will 
convert the arguments passed to it into an address, which is easy 
enough, and then act as a proxy between the actual client, and the 
server specified in the arguments. I would also like to set cookies 
based on the arguments.

An example might be useful:
client a accesses webserver b with something like:
get 
/cookieGateway?address=http%3A//www.google.com/search%3Fq%3Dtest&cookies=uid%3D123456%3B%20authToken%3Dabcdef
webserver b accesses address, and sends cookies specified in "cookies" 
parameter, and passess all headers from client a to address.
Each byte of data sent from "address" back to server b is returned 
immediately to client a, including response, headers, body, etc.

If anyone can give me a hand with this, I would greatly appreciate it.
I hope I have been clear enough.

Sincerely,
Brandon McGinty




From olivier.parisy at free.fr  Tue Nov 24 16:26:19 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Tue, 24 Nov 2009 22:26:19 +0100
Subject: [Twisted-Python] Transfering a transport between DatagramProtocols
Message-ID: <4B0C4F7B.2010404@free.fr>

I am implementing a protocol where a DatagramProtocol "handshaking" 
subclass get an arbitrary port (by calling "self.udpPort = 
reactor.listenUDP(0, self)") and communicate it to a remote host.

Once this is done, I would like to "switch" to another DatagramProtocol 
which would use the same port. To avoid a race condition, I would like 
to "transfert" self.transport from the first DatagramProtocol to the 
second without calling self.udpPort.stopListening().

Is this the "twisted" way to analyse this? Or should I use some kind of 
"proxy" DatagramProtocol which would relay datagramReceived calls to the 
proper DatagramProtocol, depending on the current protocol state 
(handshaking or data exchange)?

Regards.



From glyph at twistedmatrix.com  Tue Nov 24 18:13:52 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Nov 2009 18:13:52 -0500
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <4B0C4F7B.2010404@free.fr>
References: <4B0C4F7B.2010404@free.fr>
Message-ID: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>

On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:

> Is this the "twisted" way to analyse this? Or should I use some kind of 
> "proxy" DatagramProtocol which would relay datagramReceived calls to the 
> proper DatagramProtocol, depending on the current protocol state 
> (handshaking or data exchange)?

Currently, the right way to do this is to do as you suggest, and have two DatagramProtocol instances, and a third which switches between them.

Now, it just so happens that there is an accidental feature of udp.Port, whereby you can do self.udpPort.protocol = someOtherProtocol, and it will work.  However, this feature is not supported and may break in a future version of Twisted.

In the future, however, it would be reasonable and useful to have an explicit "switch protocol" method, which would tear down one protocol/transport relationship and set up another.  If you would like to open a ticket and contribute a patch to do this, that would be great :).




From olivier.parisy at free.fr  Wed Nov 25 16:26:45 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Wed, 25 Nov 2009 22:26:45 +0100
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
References: <4B0C4F7B.2010404@free.fr>
	<10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
Message-ID: <4B0DA115.7080208@free.fr>

Glyph Lefkowitz a ?crit :
> On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:
>
>   Currently, the right way to do this is to do as you suggest, and 
> have two DatagramProtocol instances, and a third which switches 
> between them.
>   
OK, that seems like a reasonable pattern. Thanks for the confirmation.

> In the future, however, it would be reasonable and useful to have an 
> explicit "switch protocol" method, which would tear down one 
> protocol/transport relationship and set up another.  If you would like 
> to open a ticket and contribute a patch to do this, that would be 
> great :) .
>   
I am not sure I would know where to start :-) But I'll give a look to 
DatagramProtocol source code.

Regards,
Olivier.





From radix at twistedmatrix.com  Wed Nov 25 17:46:00 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 25 Nov 2009 17:46:00 -0500
Subject: [Twisted-Python] Who can create an OS X package for Twisted 9?
Message-ID: <60ed19d40911251446n3b512694m21b21704586c90b8@mail.gmail.com>

I can't remember who did it last time.

I know a couple of people who work at Apple and surely know lots and
lots about OS X technology, but I will refrain from naming names until
I've waited too long for a package :-)

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From godson.g at gmail.com  Thu Nov 26 13:48:58 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Nov 2009 00:18:58 +0530
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
Message-ID: <f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>

Twisted is used for writing StreamHarvester's network functionality.

StreamHarvester is a cross-platform internet radio and TV
recoder.StreamHarverster works with Shoutcast and Icecast streams. You can
record multiple streams simultaneously, also you can relay a stream locally
while recording it. So that you can listen to the stream in an external
media player like VLC , Windows media player.
Features

   - Record multiple streams at a time.
   - Relay multiple streams on different ports.
   - Each job can be recorded and relayed at the same time.
   - Support for playlist formats pls and m3u.
   - Support various media formats mp3,ogg,nsv.
   - Automatic fallback to next URL in playlist.
   - Store stream in a single file or multiple files.
   - Works with shout cast and icecast streams.
   - Works on Windows and Linux. Should work on Mac (not tested).
   - Easy to use interface ;)


Please visit the project page to download and try it
http://code.google.com/p/streamharvester/
-- 
Thanks & Regards,
Godson Gera
http://blog.godson.in
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091127/ab207d7a/attachment.htm 

From olivier.parisy at free.fr  Thu Nov 26 14:50:38 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Thu, 26 Nov 2009 20:50:38 +0100
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
	<f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
Message-ID: <4B0EDC0E.5020903@free.fr>

Godson Gera a ?crit :
>
> Twisted is used for writing StreamHarvester's network functionality.
>
Hearing about full-fledged twisted applications is always nice!

How did you package the Windows version? Was there any gotcha?

Regards,
Olivier.




From godson.g at gmail.com  Thu Nov 26 15:14:13 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Nov 2009 01:44:13 +0530
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <4B0EDC0E.5020903@free.fr>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
	<f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
	<4B0EDC0E.5020903@free.fr>
Message-ID: <f9822b400911261214y495f2ce2t4c4cb014c336b3c1@mail.gmail.com>

On Fri, Nov 27, 2009 at 1:20 AM, Olivier Parisy <olivier.parisy at free.fr>wrote:

> Godson Gera a ?crit :
> >
> > Twisted is used for writing StreamHarvester's network functionality.
> >
> Hearing about full-fledged twisted applications is always nice!
>
> How did you package the Windows version? Was there any gotcha?
>
> Regards,
> Olivier.
>

I've used py2exe for making exe application. Initially there were some
issues like required data files were left out. And some python modules were
not automatically included, for which I've used 'includes' option of py2exe.
After initial package the look&feel of  app was like a old MFC application,
solution was to include correct manifest file. Once the exe was made I've
used Inno setup for creating a setup file.  ( wxPython is used to build GUI
)

Also there were some issues in using wxreactor. On windows if I call
reactor.stop() to close the application it works perfectly. But on linux it
hangs forever, work around was to call sys.exit()

You can use GUI2Exe which will give a easy start for packaging python
applications.


-- 
Thanks & Regards,
Godson Gera
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091127/ab0dd04e/attachment.htm 

From maris at chown.lv  Sat Nov 28 08:05:10 2009
From: maris at chown.lv (=?iso-8859-4?Q?M=E0risR?=)
Date: Sat, 28 Nov 2009 15:05:10 +0200
Subject: [Twisted-Python] Way to fix memory leaks of external c module
Message-ID: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>

Hello!
Currently I'm trying to write small xmlrpc server for html data processing. Processing is done by html tidy lib, but the problem is that it has massive memory leak. 
As processing is blocking operation I'm running it in thread, but after some time and huge html document processing daemon eats all memory.
I wondering if its possible to load utidylib in thread, do processing and after this kill thread and release memory? Or maybe something like deferToProcess?
Thanks in advance!



#!/usr/bin/env python
# -*- coding: utf-8 -*-

import utidylib

from twisted.internet import epollreactor
epollreactor.install()

from twisted.internet import protocol, defer, threads, reactor
from twisted.web import xmlrpc, server
from twisted.python import log, threadpool

import sys
reload(sys)
sys.setdefaultencoding('utf-8')

log.startLogging(sys.stdout)

import codecs

import gc
gc.enable()
gc.set_debug(gc.DEBUG_LEAK)
gc.set_threshold(1)

class TidyProtocol(xmlrpc.XMLRPC):

    def xmlrpc_tidify(self, data):
        defered = threads.deferToThread(self.tidyParse, data)
        defered.addCallback(self.returnToClient)
        return defered

    def tidyParse(self, data):
        options =  {
                        'drop-proprietary-attributes': '1',
                        'output-xhtml': '1',
                        'wrap': '0',
                        'bare': '0',
                        'clean': '1',
                        'doctype': 'omit',
                        'show-body-only': '1',
                        'word-2000': '0',
                        'escape-cdata': '0',
                        'hide-comments': '1',
                        'force-output': '1',
                        'alt-text': '',
                        'show-errors': '0',
                        'show-warnings': '0',
                        'tidy-mark': '0',
                        'char-encoding': 'utf8',
                    }

        if data['html'] == None:
            return None
        else:
            htmldata = data['html'].encode()
            print "Tidy start"
            return tidy.parseString(htmldata, **options)

    def returnToClient(self, data):
        gc.collect()
        print "Tidy end, retunring result"
        return data
        
if __name__ == '__main__':
    r = TidyProtocol()
    reactor.listenTCP(1100, server.Site(r))
    reactor.run()




From itamar at itamarst.org  Sat Nov 28 09:18:52 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Sat, 28 Nov 2009 09:18:52 -0500
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
Message-ID: <1259417932.21413.8.camel@pintsize>

On Sat, 2009-11-28 at 15:05 +0200, M?risR wrote:

> I wondering if its possible to load utidylib in thread, do processing
> and after this kill thread and release memory? Or maybe something like
> deferToProcess?

1. You should report the bug to the utidylib authors, so they can fix it
or pass it on to tidy authors.

2. A thread wouldn't help... but a process certainly would.
https://launchpad.net/ampoule may be helpful if you don't want to
implement your own process wrapper, or you could just run a sub-process
that takes input and output filenames on the command-line and pass data
around that way.




From exarkun at twistedmatrix.com  Sat Nov 28 09:43:26 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Nov 2009 14:43:26 -0000
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
Message-ID: <20091128144326.2549.468866991.divmod.xquotient.7@localhost.localdomain>

On 01:05 pm, maris at chown.lv wrote:
>Hello!
>Currently I'm trying to write small xmlrpc server for html data 
>processing. Processing is done by html tidy lib, but the problem is 
>that it has massive memory leak.
>As processing is blocking operation I'm running it in thread, but after 
>some time and huge html document processing daemon eats all memory.
>I wondering if its possible to load utidylib in thread, do processing 
>and after this kill thread and release memory? Or maybe something like 
>deferToProcess?
>Thanks in advance!
>
>
>
>#!/usr/bin/env python
># -*- coding: utf-8 -*-
>
>import utidylib
>
>from twisted.internet import epollreactor
>epollreactor.install()
>
>from twisted.internet import protocol, defer, threads, reactor
>from twisted.web import xmlrpc, server
>from twisted.python import log, threadpool
>
>import sys
>reload(sys)
>sys.setdefaultencoding('utf-8')
>
>log.startLogging(sys.stdout)
>
>import codecs
>
>import gc
>gc.enable()
>gc.set_debug(gc.DEBUG_LEAK)

Amongst other things, gc.set_debug(gc.DEBUG_LEAK) means "never free any 
object that is part of a cycle".  That is, it's a good way to introduce 
lots of new object leaks into your program.

Jean-Paul


From olivier.parisy at free.fr  Sat Nov 28 17:52:55 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 28 Nov 2009 23:52:55 +0100
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
References: <4B0C4F7B.2010404@free.fr>
	<10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
Message-ID: <4B11A9C7.4080307@free.fr>

Glyph Lefkowitz a ?crit :
> On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:
>
>   
>> Is this the "twisted" way to analyse this? Or should I use some kind of 
>> "proxy" DatagramProtocol which would relay datagramReceived calls to the 
>> proper DatagramProtocol, depending on the current protocol state 
>> (handshaking or data exchange)?
>>     
>
> Currently, the right way to do this is to do as you suggest, and have two DatagramProtocol instances, and a third which switches between them.
>   
I tried to implement such a "switching" class so that I could freely 
change the DatagramProtocol handling a given port without releasing it.

It is typically used in the following way :
        self.protocol = 
DelegatingDatagramProtocol(MyFirstDatagramProtocol())
        self.udpPort = reactor.listenUDP(0, self.protocol)

Then, later in the code :
       self.protocol.switchProtocol(MySecondDatagramProtocol())

Here is my current implementation :

# Breaks when inheriting from DatagramProtocol?
class DelegatingDatagramProtocol:
    def __init__(self, protocol):
        self._protocol = protocol

    def switchProtocol(self, protocol):
        self._protocol = protocol
        protocol.transport = self.transport
       
    def makeConnection(self, transport):
        self._protocol.makeConnection(transport)
        # Needed by switchProtocol
        self.transport = transport
       
    # Avoid an AssertionError (protocol.py:527 assert self.numPorts > 0)
    def doStop(self):
        pass
   
    # See 
http://www.python.org/workshops/1997-10/proceedings/savikko.html (Proxy 
pattern)
    def __getattr__(self, name):
        print 'Delegating to protocol: %s' % name
        return getattr(self._protocol, name)

It mostly works, but I have two issues with it :
- When doStop() is called by the reactor, an AssertionError is raised. I 
suppose this is due to my "sharing" of the transport in switchProtocol 
(which ensures that "transport.write" calls are directed to the proper 
transport), but how can I fix it?
- If my class extends DatagramProtocol, it stops working 
(transport.write calls seems honored, then nothing works... I suppose 
datagramReceived is never called). Why is it so?

Regards,
Olivier.




From exarkun at twistedmatrix.com  Sun Nov 29 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Nov 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1259471111.58.864515814@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091129/5bd58fc4/attachment.htm 

From maris at chown.lv  Mon Nov 30 11:22:29 2009
From: maris at chown.lv (Maris Ruskulis)
Date: Mon, 30 Nov 2009 18:22:29 +0200
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <1259417932.21413.8.camel@pintsize>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
	<1259417932.21413.8.camel@pintsize>
Message-ID: <4B13F145.5000402@chown.lv>

Itamar Turner-Trauring (aka Shtull-Trauring) wrote:
> On Sat, 2009-11-28 at 15:05 +0200, M?risR wrote:
>
>   
>> I wondering if its possible to load utidylib in thread, do processing
>> and after this kill thread and release memory? Or maybe something like
>> deferToProcess?
>>     
>
> 1. You should report the bug to the utidylib authors, so they can fix it
> or pass it on to tidy authors.
>
> 2. A thread wouldn't help... but a process certainly would.
> https://launchpad.net/ampoule may be helpful if you don't want to
> implement your own process wrapper, or you could just run a sub-process
> that takes input and output filenames on the command-line and pass data
> around that way.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   
Thanks for replay!
I tried pytidylib, and have same issue with memory leak, unfortunately I 
couldn't report bug to, because, tidylib is self patched by one c 
programmer, but problem, is that he have no more time for it.
After day on playing with ampoule, I got it working :) But I run into 
another problem, AMP value length is limited to 64kb. Seems its a struct 
pack limitation. Probably I could split message into chunks <64kb each 
and feed to amp something like: pp.doWork(Tidy, html={'chunk1':  data1, 
'chunk2':  data2...} )
or maybe there is more easy/clean way?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091130/b4f2d588/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: maris.vcf
Type: text/x-vcard
Size: 216 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20091130/b4f2d588/attachment.vcf 

From maris at chown.lv  Mon Nov 30 14:10:58 2009
From: maris at chown.lv (=?iso-8859-4?Q?M=E0risR?=)
Date: Mon, 30 Nov 2009 21:10:58 +0200
Subject: [Twisted-Python] is there way to baypass value limit of 64kb in
	twisted.protocols.amp
Message-ID: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>

Hello!
I'm currently trying to figure out, how to bypass amp value limit of 64kb. First tought was to split string into chunks <64kb, then join before processing. Problem is, how to dinamicaly generate amp.Command argument list. Maybe there is other well known method how to achieve this?
Thank You!

From glyph at twistedmatrix.com  Mon Nov 30 14:23:48 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Nov 2009 14:23:48 -0500
Subject: [Twisted-Python] is there way to baypass value limit of 64kb in
	twisted.protocols.amp
In-Reply-To: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>
References: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>
Message-ID: <B878DEA1-EC54-4D00-ADE2-129216EEA48F@twistedmatrix.com>

On Nov 30, 2009, at 2:10 PM, M?risR wrote:

> I'm currently trying to figure out, how to bypass amp value limit of 64kb. First tought was to split string into chunks <64kb, then join before processing. Problem is, how to dinamicaly generate amp.Command argument list. Maybe there is other well known method how to achieve this?


You can define your own Argument which reads multiple values, rather than dynamically generating the arguments list.  This is what you want anyway, because your application code wants to receive one value; the fact that you are splitting/joining at the protocol level should not be important.

There's an example of this implemented here:

http://bazaar.launchpad.net/%7Eglyph/%2Bjunk/amphacks/annotate/head%3A/python/amphacks/mediumbox.py

The reason that this isn't currently included in the core AMP implementation is that if you need to transfer values larger than this limit, perhaps you should be doing the transfer in some other way. Streaming the result?  Doing the transfer out-of-band as (for example) an HTTP request?

I think this might be an unhelpful way to ask people to consider this problem, so we may end up packaging something similar in Twisted eventually.  One way to do this might be by doing this: <http://twistedmatrix.com/trac/ticket/2529>, another might be bundling the contents of mediumbox.py (or something like it) into amp.py.



From kevin.horn at gmail.com  Mon Nov 30 16:05:30 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 30 Nov 2009 15:05:30 -0600
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report
Message-ID: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>

The previous thread was getting a little long, so I thought I'd start a new
one...

I haven't made as much headway on this as I would have liked, but I'm just
going to blame the US Thanksgiving holiday and hope no one looks too closely
at the dates of the previous emails. ;)

Here's what I've done lately:

- The proposal [1] has been updated, with a number of minor spelling
formatting fixes, and a detailed timeline for each phase of the project.
Please give feedback if you see anything missing from the timelines,
anything you think should be done in a different order, or any other
unaddressed issues.

- I've done a small amount of work on the lore2sphinx tool, and the new
output of the conversion process is now online [2].  Not a lot changes, the
only obviosu thing is that <img> tags are now handled.  The rest has been
mostly refactoring and generally making the code easier to work with.

- I also did a bit of digging around in the Divmod SVN repository, and it
looks like Nevow, Mantissa, and Epsilon are the only projects that have Lore
source docs.  Can anyone out there verify that this is correct?  Did I miss
anything?

I'll try to send out a progress report like this every week or so in order
to avoid people thinking that I've lost interest or gotten hit by a bus.

Thanks for "listening"!

Kevin Horn



[1] http://twistedsphinx.funsize.net/proposal.html
[2] http://twistedsphinx.funsize.net/index.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20091130/6fc72829/attachment.htm 

From marco.giusti at gmail.com  Mon Nov 30 17:39:47 2009
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 30 Nov 2009 23:39:47 +0100
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report
In-Reply-To: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>
References: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>
Message-ID: <20091130223947.GA5898@murdoc.net>

On Mon, Nov 30, 2009 at 03:05:30PM -0600, Kevin Horn wrote:
> [...]
> Thanks for "listening"!

some notices about what i get[1]. mainly i'd like if you could make the
documentation more readable when the browser's window is not really big.
usually i do not use the browser with the window maximized so will be
really helpful if you can check the following points:

* in the navigation bar "twisted web documentation" is repeated twice
and is breaked in two lines.

* the table of contents steals a lot of vertical space while it is
visible only at the top of the page. in this circumstances i prefer "the
lore way", ie. showing the table of contents in the normal content flow
at the top and not in a side column.

* again the left blue column steal vertical space an maybe can be
reduced.

* would be great if the layout will fit in the page width: as you can
see the index link is half hidden.

obiviusly with a bigger window all the aboves are not more valid and all
looks pretty.

ciao
m.


[1] http://img44.imageshack.us/img44/1953/sphinx.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20091130/a2ad200e/attachment.pgp 

From jonathan at garetjax.info  Sun Nov  1 03:45:31 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Sun, 1 Nov 2009 11:45:31 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
Message-ID: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>

Hi All,
I just set up a script to do a video recording from my iSight using
the pyobjc bridge and the QTKit framework.
This script uses the AppHelper.runConsoleEventLoop (not the
AppHelper.runEventLoop) function to start his main event loop.

I'd like to integrate this script with an existing twisted application
but I have trouble to bring it to work.

The application is a command line based twisted application managed
via AMQP (no user interaction is needed) and started using the twistd
command.

I tried to install the cfreactor but without success as I have to use
the runConsoleEventLoop.

Any insights on this?

Thanks in advance,
~Jonathan

-- 
Best Regards,
Jonathan Stoppani



From ronaldoussoren at mac.com  Sun Nov  1 04:02:20 2009
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Sun, 01 Nov 2009 12:02:20 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
Message-ID: <CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>

The pyobjc website contains a number of examples using twisted.

Ronald



On 1 nov 2009, at 11:45, Jonathan Stoppani <jonathan at garetjax.info>  
wrote:

> Hi All,
> I just set up a script to do a video recording from my iSight using
> the pyobjc bridge and the QTKit framework.
> This script uses the AppHelper.runConsoleEventLoop (not the
> AppHelper.runEventLoop) function to start his main event loop.
>
> I'd like to integrate this script with an existing twisted application
> but I have trouble to bring it to work.
>
> The application is a command line based twisted application managed
> via AMQP (no user interaction is needed) and started using the twistd
> command.
>
> I tried to install the cfreactor but without success as I have to use
> the runConsoleEventLoop.
>
> Any insights on this?
>
> Thanks in advance,
> ~Jonathan
>
> -- 
> Best Regards,
> Jonathan Stoppani
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jonathan at garetjax.info  Sun Nov  1 04:37:07 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Sun, 1 Nov 2009 12:37:07 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com> 
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
Message-ID: <c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com>

Hi Ronald,
thanks for the response. I already saw the examples on the pyobjc
website, but they (two) are all using Cocoa to do some GUI related
work.

I don't have a gui and I use the console loop instead.

I'm now trying to use the code attached to this ticket and it seems to
work, but I have to test it a little more.

Cheers,
~Jonathan

On Sun, Nov 1, 2009 at 12:02 PM, Ronald Oussoren <ronaldoussoren at mac.com> wrote:
> The pyobjc website contains a number of examples using twisted.
>
> Ronald



From terry at jon.es  Sun Nov  1 09:53:31 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 1 Nov 2009 17:53:31 +0100
Subject: [Twisted-Python] Retrying function calls
Message-ID: <19181.48395.307806.958549@jon.es>

These days I often find myself writing code to talk to services that are
periodically briefly unavailable. An error of some kind occurs and the
correct (and documented) action to take is just to retry the original call.
Examples include using Amazon's S3 service and the Twitter API. In both of
these services, transient failures happen fairly frequently.

So I wrote the class below to retry calls, and tried to make it fairly
general. I'd be happy to hear comments on it, because it's pretty simple
and if it can be made bullet proof I imagine others will use it too.

First off, here's the class that handles the calling:

from twisted.internet import reactor, defer, task
from twisted.python import log, failure


class RetryingCall(object):
    """Calls a function repeatedly, passing it args and kw args. Failures
    are passed to a user-supplied failure testing function. If the failure
    is ignored, the function is called again after a delay whose duration
    is obtained from a user-supplied iterator. The start method (below)
    returns a deferred that fires with the eventual non-error result of
    calling the supplied function, or fires its errback if no successful
    result can be obtained before the delay backoff iterator raises
    StopIteration.
    """
    def __init__(self, f, *args, **kw):
        self._f = f
        self._args = args
        self._kw = kw
        
    def _err(self, fail):
        try:
            fail = self._failureTester(fail)
        except:
            self._deferred.errback()
        else:
            if isinstance(fail, failure.Failure):
                self._deferred.errback(fail)
            else:
                log.msg('RetryingCall: Ignoring %r' % (fail,))
                self._call()

    def _call(self):
        try:
            delay = self._backoffIterator.next()
        except StopIteration:
            log.msg('StopIteration in RetryingCall: ran out of attempts.')
            self._deferred.errback()
        else:
            d = task.deferLater(reactor, delay,
                                self._f, *self._args, **self._kw)
            d.addCallbacks(self._deferred.callback, self._err)

    def start(self, backoffIterator=None, failureTester=None):
        self._backoffIterator = backoffIterator or simpleBackoffIterator()
        self._failureTester = failureTester or (lambda f: f)
        self._deferred = defer.Deferred()
        self._call()
        return self._deferred


You call the constructor with function and its args. When you call start()
you get back a deferred that eventually fires with the result of the call,
or an error. BTW, I called it "start" to mirror task.LoopingCall.

There's a helper function for producing successive inter-call delays:

from operator import mul
from functools import partial

def simpleBackoffIterator(maxResults=10, maxDelay=5.0, now=True,
                          initDelay=0.01, incFunc=None):
    assert maxResults > 0
    remaining = maxResults
    delay = initDelay
    incFunc = incFunc or partial(mul, 2.0)
    
    if now:
        yield 0.0
        remaining -= 1
    while True:
        if remaining == 0:
            raise StopIteration
        yield (delay if delay < maxDelay else maxDelay)
        delay = incFunc(delay)
        remaining -= 1

By default this will generate the sequence of inter-call delays 0.0, 0.01,
0.02, 0.04, 0.08, 0.16, 0.32, 0.64, 1.28, 2.56 and it should be easy to see
how you could write your own. Or you can just supply a list, etc.  When the
backoff iterator finishes, the RetryingCall class gives up on trying to get
a non-error result from the function. In that case you just get a
StopIteration exception in the failure that start() deferred returns (I was
originally returning the original failure, but decided to simplify. If you
want that, you can keep it yourself in an error tracking class, see below).

You get to specify a function for testing failures. If it ever raises or
returns a failure, the start() deferred's errback is called. The failure
tester can just ignore whatever failures should be considered transient.

So, for example, if you were calling S3 and wanted to ignore 504 errors,
you could supply a failureTester arg like this:

    from twisted.web import error, http

    def test(self, failure):
        failure.trap(error.Error)
        if int(failure.value.status) != http.GATEWAY_TIMEOUT:
            return failure

As another example, while using the Twitter API you might want to allow a
range of HTTP errors and also exactly one 404 error, seeing as a 404
*might* be an error on the part of Twitter (I don't mean to suggest that
actually happens). It's probably definitive - but, why not try it once
again just to be more sure?  So, pass RetryingCall a failureTester that's
an instance of a class like this:

class TwitterFailureTester(object):
    okErrs = (http.INTERNAL_SERVER_ERROR,
              http.BAD_GATEWAY,
              http.SERVICE_UNAVAILABLE)

    def __init__(self):
        self.seen404 = False
        
    def __call__(self, failure):
        failure.trap(error.Error)
        status = int(failure.value.status)
        if status == http.NOT_FOUND:
            if self.seen404:
                return failure
            else:
                self.seen404 = True
        elif status not in self.okErrs:
            return failure

Changing existing code to use RetryingCall is pretty trivial. Take something like this

from twisted.web import client

def getUserByScreenname(screenname):
    d = client.getPage(
        'http://twitter.com/users/show.json?screen_name=glyf')
    return d

and change it to look like this:

def getUserByScreenname(screenname):
    r = RetryingCall(client.getPage,
        'http://twitter.com/users/show.json?screen_name=glyf')
    d = r.start(failureTester=TwitterFailureTester())
    return d


I wrote the above last night, so I don't know if it's fully robust. But I
dropped it into some of my own stuff last night and it seems to work. I
also have a small test suite in case anyone wants it.

My questions are: Is this robust? Can/should it be improved?  Any criticism
of the code (especially wrt Twisted best practices) would be very welcome.

Thanks!

Terry



From terry at jon.es  Sun Nov  1 12:09:15 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 1 Nov 2009 20:09:15 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 17:53:31 on Sunday, 1 November 2009
References: <19181.48395.307806.958549@jon.es>
Message-ID: <19181.56539.324819.274798@jon.es>

Following up on my own post:

> When the backoff iterator finishes, the RetryingCall class gives up on
> trying to get a non-error result from the function. In that case you just
> get a StopIteration exception in the failure that start() deferred
> returns (I was originally returning the original failure, but decided to
> simplify. If you want that, you can keep it yourself in an error tracking
> class, see below).

Thinking about it a bit more it seems more sensible that the start method's
default failureTester function ignores all failures, and that in the case
of an eventual failure, you get the first ever (or last ever) failure back.
Those changes would make the RetryingCall class more useful (as it stands
with the defaults you get a failure back the first time something goes
wrong, so in the default case the class doesn't even do what it says).

I wont post the changes here, as I don't even know if anyone else is
interested.  Contact me if you want an updated version.

Terry



From blair.bethwaite at gmail.com  Sun Nov  1 16:46:38 2009
From: blair.bethwaite at gmail.com (Blair Bethwaite)
Date: Sun, 1 Nov 2009 23:46:38 +0000
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <19181.48395.307806.958549@jon.es>
References: <19181.48395.307806.958549@jon.es>
Message-ID: <ab42a7c0911011546h265efab2je3cd9e9da19c3363@mail.gmail.com>

Hi Terry,

2009/11/1 Terry Jones <terry at jon.es>:
<SNIP>
> My questions are: Is this robust? Can/should it be improved?  Any criticism
> of the code (especially wrt Twisted best practices) would be very welcome.

Looks pretty good. To streamline the usage and make the intent more
apparent from a brief glance at the header you might consider turning
it into a decorator, like
http://wiki.python.org/moin/PythonDecoratorLibrary#Retry - the retry
method there is simpler than yours but easy to extend beyond the
flip-flop scenario it currently caters for. I have also been doing
some work using the AWS query APIs and a minor variant of that
decorator now holds a high position in my Python tool belt module.

Regards,
~Blair

-- 
In science one tries to tell people, in such a way
as to be understood by everyone, something that
no one ever knew before. But in poetry, it's the
exact opposite.
 - Paul Dirac



From terry at jon.es  Sun Nov  1 17:05:22 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 2 Nov 2009 01:05:22 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 23:46:38 on Sunday, 1 November 2009
References: <19181.48395.307806.958549@jon.es>
	<ab42a7c0911011546h265efab2je3cd9e9da19c3363@mail.gmail.com>
Message-ID: <19182.8770.622615.682426@jon.es>

Hi Blair

> Looks pretty good. To streamline the usage and make the intent more
> apparent from a brief glance at the header you might consider turning it
> into a decorator, like

Thanks for the suggestion & the pointer. I'd not seen that page.

I don't think this is well suited to decorators, at least not with the
kinds of usages I am imagining. If you decorate a function, it's done once
and for all. So anyone who calls the function gets the single
one-size-fits-all decorated behavior. I'd rather the behavior was left in
the hands of the caller. That's kind of the point: give the caller flexible
control over what happens if something goes wrong, including passing in
your custom failure handler, etc.

Maybe a hybrid approach would be more useful: write a function which,
passed a function, returns a retrying version of that function that returns
a deferred that fires when the original function has succeeded (or
ultimately failed). The result could then be passed around, called by
multiple pieces of code, etc. Hmmm...

Thanks again.

Terry



From screwtape at froup.com  Sun Nov  1 17:11:32 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 2 Nov 2009 11:11:32 +1100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <19181.48395.307806.958549@jon.es>
References: <19181.48395.307806.958549@jon.es>
Message-ID: <20091102001132.GB15241@thristian.org>

On Sun, Nov 01, 2009 at 05:53:31PM +0100, Terry Jones wrote:
> def simpleBackoffIterator(maxResults=10, maxDelay=5.0, now=True,
>                           initDelay=0.01, incFunc=None):
>     assert maxResults > 0
>     remaining = maxResults
>     delay = initDelay
>     incFunc = incFunc or partial(mul, 2.0)
>     
>     if now:
>         yield 0.0
>         remaining -= 1
>     while True:
>         if remaining == 0:
>             raise StopIteration
>         yield (delay if delay < maxDelay else maxDelay)
>         delay = incFunc(delay)
>         remaining -= 1

Since this is a generator function, it will automatically raise
StopIteration once control-flow falls off the end of the function, so
your while-loop could just be written:

    while remaining > 0:
	yield (delay if delay < maxDelay else maxDelay)
	delay = incFunc(delay)
	remaining -= 1

...making the function of the "remaining" counter just a little more
explicit.



From db3l.net at gmail.com  Sun Nov  1 18:00:16 2009
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 01 Nov 2009 20:00:16 -0500
Subject: [Twisted-Python] PyObjC and Twisted command line script
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com>
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
	<c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com>
Message-ID: <m2bpjlaggv.fsf@valheru.db3l.homeip.net>

Jonathan Stoppani <jonathan at garetjax.info> writes:

> Hi Ronald,
> thanks for the response. I already saw the examples on the pyobjc
> website, but they (two) are all using Cocoa to do some GUI related
> work.
>
> I don't have a gui and I use the console loop instead.
>
> I'm now trying to use the code attached to this ticket and it seems to
> work, but I have to test it a little more.

Not sure which ticket is being referenced but which Twisted reactor
are you using?  I've had very good luck with the threadedselect
reactor, which shouldn't care if your main loop is a GUI or not.  You
interleave with AppHelper.callAfter, which I think should work fine
with both runConsoleEventLoopas well as the GUI runEventLoop

For my part, any OSX console apps I've had to do could just be pure
Twisted, with no need to integrate with an NSRunLoop, so I'm not that
familiar with how you best track startup/shutdown in those cases.

But fundamentally, you install the threadedselect reactor (do that
before any other code uses "from twisted.internet import reactor"),
then use "reactor.interleave(AppHelper.callAfter)" to tie the reactor
in to the normal event loop.  In the Cocoa/NSApplication scenario, I
use the applicationDidFinishLaunching notification to trigger this.

During shutdown, wait for the reactor to perform its shutdown so it
can close things down cleanly, using a reactor trigger to finalize the
event loop with "AppHelper.stopEventLoop".  Again, presumably you'll
have some way to determine when this is appropriate in your console
event loop - in a Cocoa/NSApplication scenario, I use the
applicationShouldTerminate notification.  (I've tended to install the
trigger right at that point too, although it could also be done
earlier)

Here's a trivial example, where I kluge a startup event.  Presumably
the reason you are using runConsoleEventLoop is to use other native
event/input sources based operations, so you might have a more logical
place or event to identify when to start the twisted integration - all
that's required is that it be done after the main event loop is
running.  If not, while I chose a 1s startup delay in this example, it
was mostly to see the difference in timestamps - you can make the
initial callLater a timeout of 0, and it'll just run as soon as the
event loop gets started.

This example also just terminates after two Twisted-based delayed
events, but that would also be determined by your own application:

    """Test console event loop app with Twisted threadedselect reactor"""

    import time

    from PyObjCTools import AppHelper

    from twisted.internet._threadedselect import install
    reactor = install()

    class Main(object):

        def startup(self):
            print time.ctime(), 'Main starting'
            reactor.callLater(1, self.callback)
            reactor.interleave(AppHelper.callAfter)

        def terminate(self):
            print time.ctime(), 'Shutting down reactor'
            reactor.addSystemEventTrigger('after', 'shutdown',
                                          AppHelper.stopEventLoop)
            reactor.stop()

        def callback(self):
            print time.ctime(), 'I was called by the reactor'
            reactor.callLater(1, self.terminate)


    if __name__ == "__main__":

        main = Main()
        AppHelper.callLater(1, main.startup)

        print time.ctime(), 'Starting Event Loop'
        AppHelper.runConsoleEventLoop()
        print time.ctime(), 'Terminating'

When running, this produces:

    Sun Nov  1 19:53:16 2009 Starting Event Loop
    Sun Nov  1 19:53:17 2009 Main starting
    Sun Nov  1 19:53:18 2009 I was called by the reactor
    Sun Nov  1 19:53:19 2009 Shutting down reactor
    Sun Nov  1 19:53:19 2009 Terminating

-- David




From terry at jon.es  Sun Nov  1 18:03:59 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 2 Nov 2009 02:03:59 +0100
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: Your message at 11:11:32 on Monday, 2 November 2009
References: <19181.48395.307806.958549@jon.es>
	<20091102001132.GB15241@thristian.org>
Message-ID: <19182.12287.940497.101383@jon.es>

Hi Tim

> Since this is a generator function, it will automatically raise
> StopIteration once control-flow falls off the end of the function, so your
> while-loop could just be written:

Ah yes, thanks a lot.

Terry



From cwellington at ccg.murdoch.edu.au  Sun Nov  1 21:17:41 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 12:17:41 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test	cases?
In-Reply-To: <20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
Message-ID: <1257135461.4197.4.camel@wolfwood>

On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
> It looks like your custom reactor is mainly in charge of making sure 
> stackless.schedule() gets called at least once every 0.1 seconds.  Is 
> that right?  If so, a much better approach would be to use 
> twisted.internet.task.LoopingCall rather than implementing a custom 
> reactor.
> 
> Is there something undesirable about that (much simpler, less fragile) 
> approach?

I tried using LoopingCall, but it does not work. It only calls the
scheduler once. I think this has to do with the fact that the stackless
scheduler needs to be interwoven with the twisted reactor pump. There is
more info about why it has to be done like this here:
http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

> As for your actual question, if you want a new reactor to be as usable 
> as one of the existing ones, you need to write a plugin declaring its 
> available.  Take a look at twisted/plugins/twisted_reactors.py for some 
> examples.

I shall have a look at that approach. Thanks.

Crispin




From cwellington at ccg.murdoch.edu.au  Sun Nov  1 21:31:59 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 12:31:59 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test	cases?
In-Reply-To: <20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
Message-ID: <1257136319.4197.8.camel@wolfwood>

On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
> As for your actual question, if you want a new reactor to be as usable 
> as one of the existing ones, you need to write a plugin declaring its 
> available.  Take a look at twisted/plugins/twisted_reactors.py for some 
> examples.

So if I make a 'plugin' that declares a
twisted.application.reactors.Reactor in the way done so inside
twisted/plugins/twisted_reactors.py, how do I make twisted trial pick it
up? Or do I actually have to add it into
twisted/plugins/twisted_reactors.py? Or monkey punch it in? If so, where
do I bootstap it in? Trial seems to need the reactor before TestCases
are even loaded.

Thanks again for any help

Crispin




From glyph at twistedmatrix.com  Sun Nov  1 23:12:27 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 2 Nov 2009 01:12:27 -0500
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <1257135461.4197.4.camel@wolfwood>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
Message-ID: <DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>

On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:

> On Fri, 2009-10-30 at 14:06 +0000, exarkun at twistedmatrix.com wrote:
>> It looks like your custom reactor is mainly in charge of making sure
>> stackless.schedule() gets called at least once every 0.1 seconds.  Is
>> that right?  If so, a much better approach would be to use
>> twisted.internet.task.LoopingCall rather than implementing a custom
>> reactor.
>>
>> Is there something undesirable about that (much simpler, less  
>> fragile)
>> approach?
>
> I tried using LoopingCall, but it does not work. It only calls the
> scheduler once. I think this has to do with the fact that the  
> stackless
> scheduler needs to be interwoven with the twisted reactor pump.

LoopingCall does "interweave" the function that you pass to it with  
the "twisted reactor pump".  If you were using it correctly, it would  
work, as the page that you link to indicates :).

What do you mean "does not work"?

> There is
> more info about why it has to be done like this here:
> http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

This example, linked from that page:
<http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/TwistedTimerReactorControl.py 
 >
is roughly the same as what exarkun recommended.

These examples aren't the greatest, because they tend to assume that  
you _always_ have Stackless code that's ready to run, and you want to  
run at some number of "frames per second".  For simple examples this  
makes sense, but for a system architecture this is a limiting  
approach.  If your stackless application wants to sit idle and wait  
for input, you're still going to wake up once every 1/30 second and  
checking to see if there's anything to do, burning CPU cycles and  
battery life.  Also, if you want to run *faster* than the arbitrary  
timeout you've selected (1/30 second can be a very long time,  
especially if you're doing something pseudo-realtime, like audio  
playback) you're out of luck.

Better would be to have tasklets schedule *themselves* for when they  
want to run.  If you just want to allow the rest of the reactor a time- 
slice, twisted.internet.task.cooperate() will allow you to schedule a  
potentially arbitrary number of tasks which want to run "as often as  
possible" without completely swamping the reactor; you can suspend  
that task by returning a Deferred which only fires when more stackless  
stuff is actually ready to run.




From cwellington at ccg.murdoch.edu.au  Mon Nov  2 00:22:46 2009
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Mon, 02 Nov 2009 15:22:46 +0800
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
 test cases?
In-Reply-To: <DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
	<DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
Message-ID: <1257146566.4197.16.camel@wolfwood>

On Mon, 2009-11-02 at 01:12 -0500, Glyph Lefkowitz wrote:
> On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:

> > I tried using LoopingCall, but it does not work. It only calls the
> > scheduler once. I think this has to do with the fact that the  
> > stackless
> > scheduler needs to be interwoven with the twisted reactor pump.

> What do you mean "does not work"?

OK. Having a closer look, its not that looping call doesn't work, its
that there is some unknown number of "reactor pumps" between starting
the test, and finishing it. What I need is a way for the reactor to be
pumping away while a particular test function of a testcase continues
working. As an example, here is a non-working test case. Notice the
comment "#what to do here to pump the reactor?".

------------------
from twisted.trial import unittest, reporter, runner
import os, time
import stackless

from twisted.internet import reactor, task

def example_func(t=10.0):
    """wait for t seconds then return"""
    exit_time = time.time()+t
    while time.time()<exit_time:
        stackless.schedule()

t = task.LoopingCall(stackless.schedule)
t.start(0.1)

class StacklessTest(unittest.TestCase):
    def setUpClass(self):
        pass
        
    def test_stackless(self):
        """Test that we can successfuly create a user proxy cert"""
        # get the time now...
        start = time.time()
        
        task = stackless.tasklet(example_func)
        task.setup(10.0)
        task.run()
            
        while task.alive:
            pass            #what to do here to pump the reactor?
            
        # end time
        end = time.time()
            
        self.assert_( endtime - starttime >= 10.0 )
        
---------------------

Running this under trial, it just hangs, inside the while task.alive:
loop.

So I guess my problem is my approach. How do I test long running
"tasklets" that use twisted calls (unlike this contrived example that
only sleeps) within the twisted trial framework?

How would the Twisted experts write test code for a case like this? Any
help is much appreciated!

Kind Regards

Crispin Wellington




From spongelavapaul at googlemail.com  Mon Nov  2 06:14:37 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Mon, 2 Nov 2009 13:14:37 +0000
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <1257146566.4197.16.camel@wolfwood>
References: <1256895492.4200.9.camel@wolfwood>
	<20091030140621.12668.2112281336.divmod.xquotient.76@localhost.localdomain>
	<1257135461.4197.4.camel@wolfwood>
	<DB84F181-80F5-45AC-835E-8F9C3ECD2FE3@twistedmatrix.com>
	<1257146566.4197.16.camel@wolfwood>
Message-ID: <EFAE6701-D102-4FCA-84D6-65CAD1A48893@googlemail.com>


On 2 Nov 2009, at 07:22, Crispin Wellington wrote:

> On Mon, 2009-11-02 at 01:12 -0500, Glyph Lefkowitz wrote:
>> On Nov 1, 2009, at 11:17 PM, Crispin Wellington wrote:
>
>>> I tried using LoopingCall, but it does not work. It only calls the
>>> scheduler once. I think this has to do with the fact that the
>>> stackless
>>> scheduler needs to be interwoven with the twisted reactor pump.
>
>> What do you mean "does not work"?
>
> OK. Having a closer look, its not that looping call doesn't work, its
> that there is some unknown number of "reactor pumps" between starting
> the test, and finishing it. What I need is a way for the reactor to be
> pumping away while a particular test function of a testcase continues
> working.
[snip]
> Running this under trial, it just hangs, inside the while task.alive:
> loop.
>
> So I guess my problem is my approach. How do I test long running
> "tasklets" that use twisted calls (unlike this contrived example that
> only sleeps) within the twisted trial framework?

I'm no expert, but I have some tests against objects that use  
spawnProcess() which has the similar problem that I need to pump the  
reactor. The key is to return a deferred from the trial test method -  
then trial does the pump for you. I'm actually using @inlineCallbacks  
and the sleep() function mentioned in a previous post - you'll  
probably want task.deferLater() or similar.



From piu.alberto at gmail.com  Mon Nov  2 07:24:56 2009
From: piu.alberto at gmail.com (Alberto Piu)
Date: Mon, 2 Nov 2009 15:24:56 +0100
Subject: [Twisted-Python] Connect to an IRC server, modules.
Message-ID: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>

Greetings,

first of all, I apologize for bad english. I am new with Twisted, and  
although it seems very powerful, I'm having some problems in using it.
I'm trying to create an IRC bot, which basically does nothing. My idea  
is to write a skeleton that's improved by modules, which do different  
things in an IRC channel.
When some events happen some modules become active, so that they can  
send messages, or notices, or private messages, and all what an IRC  
bot can do; so, every module has to have complete access to the  
methods of the bot class, but in the same time I need to keep the two  
things separated, to improve modularity.

I used an example, called LogBot example. I have a .py file (I'll call  
it "mainfile), in which the LogBot class is located, where the reactor  
is set up etc, then I have a dir called modules, where modules are.

- mainfile.py
- modules
	- modulea
		- modulea.py
	- moduleb
		- moduleb.py

(I omitted __init__.py files).

Now the question is: how I can make accessible all the methods of the  
LogBot class from EVERY .py inside the modules directory? I tried to  
do the following:
In the mainfile, inside the LogBot class, I have

def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)

This method is called when the bot joins the channel "channel".
Know, if I want to use modulea to greet user "x" when I enter the  
channel, I would write:

def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)
	modulea.greet("x", "Hi, user x")

where greet is a function inside the module modulea (imported  
somewhere in my mainfile).
Anyway, modulea is defined as following:

def greet(who, message):
	## But here, how can the function know the method to use?

The solution can be...

##In mainfile.py
def joined(self, channel):
         """This will get called when the bot joins the channel."""
         self.logger.log("[I have joined %s]" % channel)
	modulea.greet(self, "x", "Hi, user x")

##In module a:
def greet(bot, who, message):
	bot.msg(who, message)

But this does not work.
I tried to explain as better as I could. If you can, please use  
examples and speak easy (can't understand very well).
Hope you can help me!

Thank you, in advance.
--Alberto Piu



From art at academ.org  Mon Nov  2 08:11:50 2009
From: art at academ.org (Artem Bokhan)
Date: Mon, 02 Nov 2009 21:11:50 +0600
Subject: [Twisted-Python] reverse web proxy & threads
Message-ID: <4AEEF6B6.7030107@academ.org>

Hello!

I'm playing with reverse proxy from examples
(Twisted-8.2.0/doc/web/examples/proxy.py). May somebody explain what
part of code uses threads there?

pstree -p | grep python

-python(12786)-+-{python}(12795)
                |-{python}(13050)
                |-{python}(15547)
                `-{python}(20767)






From ssteinerx at gmail.com  Mon Nov  2 08:20:51 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 2 Nov 2009 10:20:51 -0500
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
Message-ID: <18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>

On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:

>> Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>> also with 3987.
>>
>> While there is some very nice stuff in there, I'm really not sure how
>> one would actually put it to use since the back-end and the front-end
>> seem to have been split into separate branches.
>
> They're not really split.  The 3987 branch is complete and usable on  
> its
> own.  You don't need a checkout of the 886 branch.

Ok, I have re-checked out just the 3987 branch without messing with 886.

Using it as a direct substitution in a Django application using  
Twisted's WSGI, it completely breaks my application in ways that look  
suspiciously like the 8.2.0 release's WSGI problems that have since  
been fixed in Twisted trunk.

Is 3987 based on 8.2.0 and, if so, what is the procedure for merging  
the trunk back to this branch (or visa versa, if that would be better).

If 3987 is supposed to be in sync with trunk, I'll have to hunt down  
the WSGI problems I'm having because it's definitely not working in an  
application that works just fine with Twisted trunk.

S





From andrewfr_ice at yahoo.com  Mon Nov  2 10:27:37 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Nov 2009 09:27:37 -0800 (PST)
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
In-Reply-To: <mailman.1.1257181201.4560.twisted-python@twistedmatrix.com>
Message-ID: <468264.24736.qm@web112412.mail.gq1.yahoo.com>

Crispin:

>OK. Having a closer look, its not that looping call doesn't work, its
>that there is some unknown number of "reactor pumps" between starting
>the test, and finishing it. What I need is a way for the reactor to be
>pumping away while a particular test function of a testcase continues
>working. As an example, here is a non-working test case. Notice the
>comment "#what to do here to pump the reactor?".

...

>        while task.alive:
>            pass            #what to do here to pump the reactor?
          
This won't work because as long as the tasklet is alive (scheduled, paused,  or blocked), you will be in a tight loop. And if that function
is not running in the reactor, then the reactor will starve. If you 
are waiting to see if the tasklet finished, write a synchronizer.

Cheers,
Andrew



      



From andrewfr_ice at yahoo.com  Mon Nov  2 10:39:39 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Nov 2009 09:39:39 -0800 (PST)
Subject: [Twisted-Python] Using a custom reactor in twisted trial for
	test cases?
Message-ID: <225230.47609.qm@web112417.mail.gq1.yahoo.com>

Hello Glyph:

>These examples aren't the greatest, because they tend to assume that 
>you _always_ have Stackless code that's ready to run, and you want to 
>run at some number of "frames per second". 

In 2007, folks (especially myself) are still trying to figure out if
Stackless can play with Twisted correctly. I know my stuff in the
repository is old.

> For simple examples this makes sense, but for a system architecture 
>this is a limiting approach.  If your stackless application wants to 
>sit idle and wait for input, you're still going to wake up once every >1/30 second and checking to see if there's anything to do, burning CPU >cycles and battery life.  

An approach would be for the reactor tasklet to look at the runnable 
list to see if there are any entries. If there are no entries 
(i.e., tasklets are blocked and dependent on the reactor tasklet), 
then the reactor tasklet can stop the loopingCall. This is easy enough 
to do. However I suspect one starts to get into custom reactor land. 

>Also, if you want to run *faster* than the arbitrary timeout you've
>selected (1/30 second can be a very long time, especially if you're 
>doing something pseudo-realtime, like audio playback) you're out of luck.

I believe there are two scenarios here:

1) no blocked tasklets and only runnable ones. If the runnable tasklets make no IO requests, it should be possible to put the reactor tasklet to sleep. Let the system run as fast as it can.

2) There is a mix of runnable (scheduled) and blocked tasklets. This
scenario requires a more sophisticated scheduler that is trying to
compute an optimal loopingCall value. This scenario is tricky.

>Better would be to have tasklets schedule *themselves* for when they 
>want to run.  

In the Stackless world,  tasklets start running from the moment
they are created/inserted into the runnable list. Stackless in
non-preemptive mode is more about knowing when to make a tasklet 
yield to the scheduler. 

Cheers,
Andrew







      



From exarkun at twistedmatrix.com  Mon Nov  2 16:07:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 02 Nov 2009 23:07:16 -0000
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
	<18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
Message-ID: <20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>

On 03:20 pm, ssteinerx at gmail.com wrote:
>On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:
>>>Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>>>also with 3987.
>>>
>>>While there is some very nice stuff in there, I'm really not sure how
>>>one would actually put it to use since the back-end and the front-end
>>>seem to have been split into separate branches.
>>
>>They're not really split.  The 3987 branch is complete and usable on
>>its
>>own.  You don't need a checkout of the 886 branch.
>
>Ok, I have re-checked out just the 3987 branch without messing with 
>886.
>
>Using it as a direct substitution in a Django application using
>Twisted's WSGI, it completely breaks my application in ways that look
>suspiciously like the 8.2.0 release's WSGI problems that have since
>been fixed in Twisted trunk.
>
>Is 3987 based on 8.2.0 and, if so, what is the procedure for merging
>the trunk back to this branch (or visa versa, if that would be better).
>
>If 3987 is supposed to be in sync with trunk, I'll have to hunt down
>the WSGI problems I'm having because it's definitely not working in an
>application that works just fine with Twisted trunk.

It's not based on 8.2.0, but neither is it in "sync" with trunk.  It is 
a copy of trunk from r27271.  You may indeed find that there are a 
number of bug fixes or feature additions which are present in trunk at HEAD 
which are not present in the #3987 branch.

If you want everything from trunk at HEAD and the #3987 branch, then you 
may now be happy you did all that stuff with git.  Merge the #3987 
branch into trunk at HEAD and you'll get everything from trunk at HEAD and 
everything from the branch (that's tautological, sorry, I hope you know 
what I mean).

If you're not sure what to do with git, then here's what to do with svn:

    BRANCHES=svn://svn.twistedmatrix.com/svn/Twisted/branches
    EXPRESSIVE=$BRANCHES/expressive-http-client-886-4
    HIGHLEVEL=$BRANCHES/high-level-web-client-3987/
    cd path/to/Twisted/trunk
    svn merge $EXPRESSIVE at 27272 EXPRESSIVE at HEAD
    svn merge $HIGHLEVEL at 27275 $HIGHLEVEL at HEAD

Or using Combinator:

    chbranch Twisted expressive-http-client-886-4
    unbranch Twisted
    chbranch Twisted high-level-web-client-3987
    unbranch Twisted --force

Jean-Paul



From ssteinerx at gmail.com  Mon Nov  2 20:53:53 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 2 Nov 2009 22:53:53 -0500
Subject: [Twisted-Python] Ticket #3987 Review
In-Reply-To: <20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>
References: <b460e9630910060747r541af190j1e160b1353f58d4b@mail.gmail.com>
	<20091008121547.24460.166029432.divmod.xquotient.219@boson>
	<b460e9630910080708v4d282c4cmc25156420d8bf657@mail.gmail.com>
	<5F4EEF56-D482-475D-8D97-3AB362ADD944@integrateddevcorp.com>
	<95bb10690910090253j5c2a734ch364009f7d09864fe@mail.gmail.com>
	<2EB5AC14-5489-4CBB-ADA4-2900914A1D10@integrateddevcorp.com>
	<95bb10690910100434y7808a2a4v1955b9f4e58efd83@mail.gmail.com>
	<C86E331F-76A9-4EFC-8737-FDF8D344645B@integrateddevcorp.com>
	<20091010211542.13824.1597743213.divmod.xquotient.9@localhost.localdomain>
	<58037725-E7CB-4E10-B970-EFD37F5A6AC7@integrateddevcorp.com>
	<20091030030539.12668.1881055704.divmod.xquotient.64@localhost.localdomain>
	<18A41449-B37C-472D-9B84-3C8A3D6BFD45@gmail.com>
	<20091102230716.3229.372568997.divmod.xquotient.13@localhost.localdomain>
Message-ID: <82EA1F62-940B-4D6F-92D2-0553A2D79D5F@gmail.com>


On Nov 2, 2009, at 6:07 PM, exarkun at twistedmatrix.com wrote:

> On 03:20 pm, ssteinerx at gmail.com wrote:
>> On Oct 29, 2009, at 11:05 PM, exarkun at twistedmatrix.com wrote:
>>>> Well...I've now spent some actual time with 886 (-2,-3,and -4), and
>>>> also with 3987.
>>>>
>>>> While there is some very nice stuff in there, I'm really not sure  
>>>> how
>>>> one would actually put it to use since the back-end and the front- 
>>>> end
>>>> seem to have been split into separate branches.
>>>
>>> They're not really split.  The 3987 branch is complete and usable on
>>> its
>>> own.  You don't need a checkout of the 886 branch.
>>
>> Ok, I have re-checked out just the 3987 branch without messing with
>> 886.
>>
>> Using it as a direct substitution in a Django application using
>> Twisted's WSGI, it completely breaks my application in ways that look
>> suspiciously like the 8.2.0 release's WSGI problems that have since
>> been fixed in Twisted trunk.
>>
>> Is 3987 based on 8.2.0 and, if so, what is the procedure for merging
>> the trunk back to this branch (or visa versa, if that would be  
>> better).
>>
>> If 3987 is supposed to be in sync with trunk, I'll have to hunt down
>> the WSGI problems I'm having because it's definitely not working in  
>> an
>> application that works just fine with Twisted trunk.
>
> It's not based on 8.2.0, but neither is it in "sync" with trunk.  It  
> is
> a copy of trunk from r27271.  You may indeed find that there are a
> number of bug fixes or feature additions which are present in  
> trunk at HEAD
> which are not present in the #3987 branch.
>
> If you want everything from trunk at HEAD and the #3987 branch, then you
> may now be happy you did all that stuff with git.  Merge the #3987
> branch into trunk at HEAD and you'll get everything from trunk at HEAD and
> everything from the branch (that's tautological, sorry, I hope you  
> know
> what I mean).
>
> If you're not sure what to do with git, then here's what to do with  
> svn:
>
>    BRANCHES=svn://svn.twistedmatrix.com/svn/Twisted/branches
>    EXPRESSIVE=$BRANCHES/expressive-http-client-886-4
>    HIGHLEVEL=$BRANCHES/high-level-web-client-3987/
>    cd path/to/Twisted/trunk
>    svn merge $EXPRESSIVE at 27272 EXPRESSIVE at HEAD
>    svn merge $HIGHLEVEL at 27275 $HIGHLEVEL at HEAD
>
> Or using Combinator:
>
>    chbranch Twisted expressive-http-client-886-4
>    unbranch Twisted
>    chbranch Twisted high-level-web-client-3987
>    unbranch Twisted --force

Wow.  That's quite a lot of stuff.

Now I have an @HEAD.ache ;-) .

I'll see if I can get this whacked together in any meaningful way and  
maybe publish my resultant branch to Github or something.

Meanwhile...





From itamar at itamarst.org  Mon Nov  2 21:33:27 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Mon, 02 Nov 2009 23:33:27 -0500
Subject: [Twisted-Python] reverse web proxy & threads
In-Reply-To: <4AEEF6B6.7030107@academ.org>
References: <4AEEF6B6.7030107@academ.org>
Message-ID: <1257222807.3814.681.camel@pintsize>

On Mon, 2009-11-02 at 21:11 +0600, Artem Bokhan wrote:
> Hello!
> 
> I'm playing with reverse proxy from examples
> (Twisted-8.2.0/doc/web/examples/proxy.py). May somebody explain what
> part of code uses threads there?
> 
> pstree -p | grep python
> 
> -python(12786)-+-{python}(12795)
>                 |-{python}(13050)
>                 |-{python}(15547)
>                 `-{python}(20767)

DNS lookups, probably: gethostbyname blocks your process, otherwise.




From tw.1 at pyxos.com  Tue Nov  3 11:52:45 2009
From: tw.1 at pyxos.com (Dan)
Date: Tue, 03 Nov 2009 12:52:45 -0600
Subject: [Twisted-Python] The case of the missing Traceback
Message-ID: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>


I was playing around with Twisted today and ran into a problem where 
Tracebacks aren't emitted on stderr after a deferred callback from a 
process called launched by reactor.spawnProcess.  The simplified test 
case is below.  I put "x = y" in the  callback function to generate 
an exception, y doesn't exist.  Uncomment "x = z" right before the 
callback and it produces the traceback on stderr just fine.

System is Linux, Python 2.6 and Twisted 8.2.



from twisted.internet import reactor, protocol, defer
import sys


def err(s):
     sys.stderr.write(s+'\n')
     sys.stderr.flush()


def test():
     err('test')
     cat = MyPP()
     reactor.spawnProcess(cat, "/bin/cat", ["cat", "-"], {})
     d = cat.send("Hello world")
     d.addCallback(response)


def response(resp):
     err('response called')
     x = y
     err(resp)


class MyPP(protocol.ProcessProtocol):
     def __init__(self):
         self.defer = defer.Deferred()

     def outReceived(self, data):
         err("outReceived! with %d bytes" % len(data))
         err("    %s" % data)
         self.defer.callback(data)

     def send(self, c):
         self.transport.write("%s\n" % c)
         #x = z
         return self.defer


if(__name__=='__main__'):
     reactor.callWhenRunning(test)
     reactor.run()






From terry at jon.es  Tue Nov  3 13:11:04 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 3 Nov 2009 21:11:04 +0100
Subject: [Twisted-Python] The case of the missing Traceback
In-Reply-To: Your message at 12:52:45 on Tuesday, 3 November 2009
References: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>
Message-ID: <19184.36440.926165.16119@jon.es>

>>>>> "Dan" == Dan  <tw.1 at pyxos.com> writes:
Dan> I was playing around with Twisted today and ran into a problem where
Dan> Tracebacks aren't emitted on stderr after a deferred callback from a
Dan> process called launched by reactor.spawnProcess.  The simplified test
Dan> case is below.  I put "x = y" in the callback function to generate an
Dan> exception, y doesn't exist.  Uncomment "x = z" right before the
Dan> callback and it produces the traceback on stderr just fine.

Hi Dan

The callback function raises an exception, which Twisted converts to
failure and stores in the deferred. But seeing as there are no errback
functions in the deferred *and you leave the reactor running*, the failure
just sits there (just as it should). If you do a 'from twisted.python
import log' and Change the addCallback line in test() to look like this

     d.addCallback(response).addErrback(log.err)

You'll see the expected NameError just fine.

Terry



From tw.1 at pyxos.com  Tue Nov  3 13:45:30 2009
From: tw.1 at pyxos.com (Dan)
Date: Tue, 03 Nov 2009 14:45:30 -0600
Subject: [Twisted-Python] The case of the missing Traceback
In-Reply-To: <19184.36440.926165.16119@jon.es>
References: <6.2.5.6.2.20091103041258.0446bec8@wishbone.com>
	<19184.36440.926165.16119@jon.es>
Message-ID: <6.2.5.6.2.20091103144440.044097f0@wishbone.com>


Awesome!  Thanks for helping out a noob Terry! :)


At 02:11 PM 11/3/2009, you wrote:
> >>>>> "Dan" == Dan  <tw.1 at pyxos.com> writes:
>Dan> I was playing around with Twisted today and ran into a problem where
>Dan> Tracebacks aren't emitted on stderr after a deferred callback from a
>Dan> process called launched by reactor.spawnProcess.  The simplified test
>Dan> case is below.  I put "x = y" in the callback function to generate an
>Dan> exception, y doesn't exist.  Uncomment "x = z" right before the
>Dan> callback and it produces the traceback on stderr just fine.
>
>Hi Dan
>
>The callback function raises an exception, which Twisted converts to
>failure and stores in the deferred. But seeing as there are no errback
>functions in the deferred *and you leave the reactor running*, the failure
>just sits there (just as it should). If you do a 'from twisted.python
>import log' and Change the addCallback line in test() to look like this
>
>      d.addCallback(response).addErrback(log.err)
>
>You'll see the expected NameError just fine.
>
>Terry
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From gkistanova at accesssoftek.com  Tue Nov  3 14:23:01 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Tue, 3 Nov 2009 13:23:01 -0800
Subject: [Twisted-Python] twisted.internet.error.ProcessTerminated,
	exit code 1?
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD503@mail.accesssoftek.com>

Hello all,

I ran into issue with Twisted, could anybody help me?
I have Twisted 8.2.0 on Ubuntu 9.04.
I run tests for Buildbot 0.7.11p3 and one of the tests completed with the next error:

[ERROR]: buildbot.test.test_locks.Locks.testLock3

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1.

Cannot find any information what could cause this.
What “exit code 1 “ means? I tried to stop MsAfee, but this did not help.

Thanks
 Gal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091103/6cac7440/attachment.html>

From rroberts at adobe.com  Tue Nov  3 16:55:42 2009
From: rroberts at adobe.com (Read Roberts)
Date: Tue, 3 Nov 2009 15:55:42 -0800
Subject: [Twisted-Python] Need replacement for subprocess.call within a
 pyAMF method - any suggestions?
Message-ID: <C71602FE.5CB7%rroberts@adobe.com>

I am trying to use the twisted reactor as a basis for a Python server for a
Flex app, using pyAMF.  My problem is that one  of the server methods
requires me to run a series of command-line tools to complete parsing data
from a file into an XML object, with lots of Python processing on the
results of one command-line tool to provide the input to the next one. I
have been using  subprocess.call  to invoke the command-line tools, but
these intermittently - and frequently -  fail with an error "IOError: [Errno
4] Interrupted system call".

I do know that this was supposed to be fixed in twisted for Python 2.6, but
it doesn't seem to be. I have python 2.6.3 under Mac OSX 10.5.8, and twisted
8.2.0. Is there a work-around for this problem, or a better way to do this
with twisted? I do know that I can make a command-line call with
reactor.callLater, and that I can return a deferred from my server method,
but I don't see how to easily accomplish the chain of calls that I need,
short of breaking up my serverMethod1 into the several sequential parts, and
calling each from the result handler of the previous one. I'd rather not go
that route, as the logic of which command-line call gets made when is
actually quite complicated.

What I have now looks like (enormously simplified):
class MyPythonServer:

    def serverMethod1(self, dummyPost, inputFilePath):
        # Open inputFilePath, do stuff, save results to file2
        subprocess.call(["command1", "file2", "file3"])
        # Open file3, do stuff to the data, save results to file4
        subprocess.call(["command2", "file4", "file5"])
        # Open file5, convert data to a large string containing XML.
        return xmlString
 
- Read Roberts




From exarkun at twistedmatrix.com  Tue Nov  3 17:08:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Nov 2009 00:08:24 -0000
Subject: [Twisted-Python] Need replacement for subprocess.call within
	a	pyAMF method - any suggestions?
In-Reply-To: <C71602FE.5CB7%rroberts@adobe.com>
References: <C71602FE.5CB7%rroberts@adobe.com>
Message-ID: <20091104000824.3229.1269878260.divmod.xquotient.121@localhost.localdomain>

On 3 Nov, 11:55 pm, rroberts at adobe.com wrote:
>I am trying to use the twisted reactor as a basis for a Python server 
>for a
>Flex app, using pyAMF.  My problem is that one  of the server methods
>requires me to run a series of command-line tools to complete parsing 
>data
>from a file into an XML object, with lots of Python processing on the
>results of one command-line tool to provide the input to the next one. 
>I
>have been using  subprocess.call  to invoke the command-line tools, but
>these intermittently - and frequently -  fail with an error "IOError: 
>[Errno
>4] Interrupted system call".
>
>I do know that this was supposed to be fixed in twisted for Python 2.6, 
>but
>it doesn't seem to be.

I'm not sure why you know this.  I sure would be great if that were the 
case, but it's not.  More changes in Twisted are necessary to let things 
like subprocess.call work properly alongside Twisted's process API.
>I have python 2.6.3 under Mac OSX 10.5.8, and twisted
>8.2.0. Is there a work-around for this problem, or a better way to do 
>this
>with twisted? I do know that I can make a command-line call with
>reactor.callLater, and that I can return a deferred from my server 
>method,
>but I don't see how to easily accomplish the chain of calls that I 
>need,
>short of breaking up my serverMethod1 into the several sequential 
>parts, and
>calling each from the result handler of the previous one. I'd rather 
>not go
>that route, as the logic of which command-line call gets made when is
>actually quite complicated.

Are you aware that this means your server will only be able to handle 
one request at a time?  If so and that's what you're shooting for, then 
you can fix this easily, by passing False to reactor.run.  This 
disable's Twisted's own process support and lets things like 
subprocess.call work (blockingly, of course).
>What I have now looks like (enormously simplified):
>class MyPythonServer:
>
>    def serverMethod1(self, dummyPost, inputFilePath):
>        # Open inputFilePath, do stuff, save results to file2
>        subprocess.call(["command1", "file2", "file3"])
>        # Open file3, do stuff to the data, save results to file4
>        subprocess.call(["command2", "file4", "file5"])
>        # Open file5, convert data to a large string containing XML.
>        return xmlString

Of course, you can still have methods that look like this if you use 
things like inlineCallbacks (which you can, since you said you're using 
Python 2.6).  That way you preserve the style you seem to prefer and 
avoid blocking your server any time you need to launch a child process.

Jean-Paul



From glyph at twistedmatrix.com  Tue Nov  3 23:29:25 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Nov 2009 01:29:25 -0500
Subject: [Twisted-Python] Connect to an IRC server, modules.
In-Reply-To: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>
References: <9BC87E69-133E-432C-B20A-888A5AA1FAF1@gmail.com>
Message-ID: <77FBAF36-27B1-4C22-9FFE-FA2C28B7AF47@twistedmatrix.com>


On Nov 2, 2009, at 9:24 AM, Alberto Piu wrote:

> first of all, I apologize for bad english. I am new with Twisted, and
> although it seems very powerful, I'm having some problems in using it.
> I'm trying to create an IRC bot, which basically does nothing. My idea
> is to write a skeleton that's improved by modules, which do different
> things in an IRC channel.

It's OK.  Your english is not so bad.  I think I understand your  
question :).  I will try to use very simple english in my answer.

> I tried to explain as better as I could. If you can, please use
> examples and speak easy (can't understand very well).
> Hope you can help me!

Your explanation is not bad.  But, the fix that you describe looks  
basically right to me.

It is hard to fix a program that I cannot see.

Can you attach a *complete*, but *simple* example, as described here: <http://sscce.org/ 
 >, and ask the question again?

Do not attach your whole IRC bot.  Remove all the parts which are not  
a part of your problem, but make sure that, if I do 'python your-irc- 
bot.py', it will run and do something.

Thanks, and good luck!




From namanvit at gmail.com  Tue Nov  3 23:43:14 2009
From: namanvit at gmail.com (naman jain)
Date: Wed, 4 Nov 2009 07:43:14 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <m2r5skaau5.fsf@valheru.db3l.homeip.net>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
Message-ID: <74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>

Hi,

Using  log.startLogging(open(logname, 'w'), setStdout=False)
very well solves the issue.. of stdout remaining untouched and log.msg()
calls going to log

Can we do this ?:
Log file gets -> both the log.msg() calls , the stdout +stderr
console -> gets stdout +stderr as usual

Regards
Naman


On Fri, Oct 30, 2009 at 9:25 PM, David Bolen <db3l.net at gmail.com> wrote:

> naman jain <namanvit at gmail.com> writes:
>
> > I wanted to log in a file and keep the console also going with it.
>
> I can read this as either:
>
>  * Keep file logs and stdout/console completely separate, or
>  * File gets explicit logs and copies of stdout, but stdout also goes to
>    console as well.
>
> The latter is something I'd more commonly do, but the former is what
> you explain further below with your rules.
>
> > I am using
> > log.startLogging(open(logname, 'w'))
> >
> > whatever documentation I could find about this API, it suggested me to
> pass
> > setStdout=False(in order to keep stdout away from putting into log)
> > somewhere in the startlogging function.
> >
> > Something like this I tried:
> > log.startLogging(sys.stdout,setStdout=False)
>
> Why did you switch to sys.stdout here?  While this will prevent
> sys.stdout and sys.stderr from being redirected, it will use
> sys.stdout for any log.msg() calls, so nothing would end up in your
> log file.
>
> > Doesnt help in solving the problem of getting both things:
> >
> > Requirement:
> > log.msg("messageforlog")    -> goes to log
> > print "message for console" -> goes to console
> >
> > Could anyone give some ideas on this?
>
> I think you had the right idea with setStdout, but changed more than
> just that when you tested it.  If you use a call like
> log.startLogging(open(logname, 'w'), setStdout=False) I believe you'll
> get what you want.  Only calls to log.msg() will go to the file, and
> stdout/stderr will be left unchanged.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091104/8f821d73/attachment.html>

From namanvit at gmail.com  Tue Nov  3 23:58:53 2009
From: namanvit at gmail.com (naman jain)
Date: Wed, 4 Nov 2009 07:58:53 +0100
Subject: [Twisted-Python] Unpedictable behaviour of transport.write call:
	Problem with return the control to reactor
Message-ID: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>

Hi,

I was trying this out:


Server code:

def dataReceived(self, data):
    if (args["cmd"] == "CHECK_IN"):
        foo = subprocess.Popen('python master.py',shell = True)
        *# this ACK notifies the client to close the connection*
        self.transport.write( self.create_message("CHECK_IN","ACK") )

I use the subprocess call , as I want to avoid threads here, and
independently launch my master.py without blocking this code.
I dont aim to have any interaction with the master.py once it is launched

Now, I see unpredictable behaviour here..
I have been trying many times, but the subprocess call does not happen
everytime !
The connection is closed by the client without the master getting launched
in some cases.

How does the transport.write behave in such cases.. Do you people see a
structural problem here.. Or adding some small delay of 2 sec before
transport.write might help?

Regards
Naman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091104/004eab79/attachment-0001.html>

From p.mayers at imperial.ac.uk  Wed Nov  4 06:13:36 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 04 Nov 2009 13:13:36 +0000
Subject: [Twisted-Python] Unpedictable behaviour of transport.write
 call: Problem with return the control to reactor
In-Reply-To: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>
References: <74b1256b0911032258y794eeb84r40c04d0b97992a6e@mail.gmail.com>
Message-ID: <4AF17E00.4070203@imperial.ac.uk>

naman jain wrote:
> Hi,
> 
> I was trying this out:
> 
> 
> Server code:
> 
> def dataReceived(self, data):
>     if (args["cmd"] == "CHECK_IN"):
>         foo = subprocess.Popen('python master.py',shell = True)
>         /# this ACK notifies the client to close the connection/
>         self.transport.write( self.create_message("CHECK_IN","ACK") )
> 
> I use the subprocess call , as I want to avoid threads here, and 
> independently launch my master.py without blocking this code.
> I dont aim to have any interaction with the master.py once it is launched

Don't do that. Use:

twisted.python.utils.getProcess*

...which return a deferred and work with the reactor, rather than 
against or outside it.



From piemail at tiscali.it  Wed Nov  4 13:54:11 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Wed, 4 Nov 2009 13:54:11 -0700
Subject: [Twisted-Python]  ProducerConsumerProxy problem
Message-ID: <003501ca5d90$f66b2050$d802010a@porcatile>

Hi,
I'm trying to write a simple echo server but with control flow. The program
should send back all the data it receives from a client, but if one of the
clients that are connected stop accepting the data that is sent back, my
program should tell it to stop sending data too, for preventing to run out
of memory. 
I've seen that twisted offers an iConsumer and iProducer classes, so my
class should implement both of them. I know how to write the producer part,
but I still having trouble in telling twisted that my class is a consumer
for the transport. This is because usually in a program, whenever there is
data available, the dataRecived function of the program is called, passing
the data to it, so I don't know who I can pass as a producer for my echo
class.
I know that there's a class called BasicProducerConsumerProxy in pcp that
seems to do my job, but I'm stuck in making it understand that "transport"
is both a consumer and a producer.
The code should be something like this:

Echo = protocols.pcp.BasicProducerConsumerProxy(self.transport) #register
transport as a consumer Echo.registerProducer(self.transport, True)
#register transport as a producer

But it doesn't work. Can you help me? An example will be greatly
appreciated. Thanks.

Pietro




From general at vultaire.net  Wed Nov  4 18:50:05 2009
From: general at vultaire.net (Paul Goins)
Date: Thu, 05 Nov 2009 10:50:05 +0900
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
Message-ID: <4AF22F4D.2010405@vultaire.net>

My project has 160 or so test functions spread across 29 test modules.
The layout is something like this:

project_root/
  <project>/
    <module>.py
    <module>.py
    ...
  tests/
    <test_module>.py
    <test_module>.py
    ...
    unit_tests.py

Running tests one-by-one ("trial tests.<test_module>") works perfectly.
 However, I want to test them all in one go, and can't find a "proper"
way to do it.

Currently to test it, I have a module, tests.unit_tests, which imports
all the tests from all other modules in the tests namespace via:

  from tests.<test_module_1> import *
  from tests.<test_module_2> import *
  ...

However, this is less than ideal, since if someone makes a unit test
class with the same name as one in another module, they overlap and one
ends up untested.  (We just got blindsided by this to some degree, hence
the e-mail.)

I'll probably end up just attaching the test module's name as a prefix
to each test class, but I wanted to ask, is there a better, "proper" way
of doing this?

Thanks.

- Paul Goins




From tim at commsecure.com.au  Wed Nov  4 19:02:39 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 5 Nov 2009 13:02:39 +1100
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
In-Reply-To: <4AF22F4D.2010405@vultaire.net>
References: <4AF22F4D.2010405@vultaire.net>
Message-ID: <20091105130239.788a51af@ws35.commsecure.com.au>

Paul Goins <general at vultaire.net> wrote:
> My project has 160 or so test functions spread across 29 test modules.
> The layout is something like this:
> 
> project_root/
>   <project>/
>     <module>.py
>     <module>.py
>     ...
>   tests/
>     <test_module>.py
>     <test_module>.py
>     ...
>     unit_tests.py
> 
> Running tests one-by-one ("trial tests.<test_module>") works perfectly.
>  However, I want to test them all in one go, and can't find a "proper"
> way to do it.

Does "trial tests" not work? (you probably need a tests/__init__.py)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20091105/4d1c1c85/attachment.sig>

From general at vultaire.net  Wed Nov  4 22:17:30 2009
From: general at vultaire.net (Paul Goins)
Date: Thu, 05 Nov 2009 14:17:30 +0900
Subject: [Twisted-Python] Trial: testing multiple test modules in one go?
In-Reply-To: <20091105144102.7f488522@ws35.commsecure.com.au>
References: <4AF22F4D.2010405@vultaire.net>	<20091105130239.788a51af@ws35.commsecure.com.au>	<4AF2444A.1040703@vultaire.net>
	<20091105144102.7f488522@ws35.commsecure.com.au>
Message-ID: <4AF25FEA.2020502@vultaire.net>

Tim Allen wrote:
> Paul Goins <general at vultaire.net> wrote:
>>> Does "trial tests" not work? (you probably need a tests/__init__.py)
>> Nope:
>>
>>   $ trial tests
>>
>>
>> -------------------------------------------------------------------------------
>>
>>   PASSED
>>
>> Nothing executes if I run it that way.  And I do have the
>> tests/__init__.py.  It's totally empty, in case it matters.
> 
> Just to be sure, your test modules are named "tests/test_foo.py",
> "tests/test_bar.py" and so forth?

That appears to be it.  I thought it was just the function names that
needed to follow the test_<foo> pattern.

I don't seem to see this documented, either...  Guess I'll add a comment
to #2443.

Thanks for the help!




From namanvit at gmail.com  Thu Nov  5 01:59:29 2009
From: namanvit at gmail.com (naman jain)
Date: Thu, 5 Nov 2009 09:59:29 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
Message-ID: <74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>

People,

Can anyone help me with this issue?

log.startLogging(open(logname,'w')
or
log.startLogging(open(logname,'w'), setStdout=True)

Both print the console output in the log. But nothing is displayed on
console! So I get a empty console
I would like to keep the console going also:

Precisely:
Console -> gets the print calls                             Not Happening
Log       -> gets the print calls + log.msg calls      Happening

I understand that this might be a trivial issue, but I am not able to figure
it out in the documentation available :(

Thanks for any help

Regards
Naman

On Wed, Nov 4, 2009 at 7:43 AM, naman jain <namanvit at gmail.com> wrote:

> Hi,
>
> Using  log.startLogging(open(logname, 'w'), setStdout=False)
> very well solves the issue.. of stdout remaining untouched and log.msg()
> calls going to log
>
> Can we do this ?:
> Log file gets -> both the log.msg() calls , the stdout +stderr
> console -> gets stdout +stderr as usual
>
> Regards
> Naman
>
>
>
> On Fri, Oct 30, 2009 at 9:25 PM, David Bolen <db3l.net at gmail.com> wrote:
>
>> naman jain <namanvit at gmail.com> writes:
>>
>> > I wanted to log in a file and keep the console also going with it.
>>
>> I can read this as either:
>>
>>  * Keep file logs and stdout/console completely separate, or
>>  * File gets explicit logs and copies of stdout, but stdout also goes to
>>    console as well.
>>
>> The latter is something I'd more commonly do, but the former is what
>> you explain further below with your rules.
>>
>> > I am using
>> > log.startLogging(open(logname, 'w'))
>> >
>> > whatever documentation I could find about this API, it suggested me to
>> pass
>> > setStdout=False(in order to keep stdout away from putting into log)
>> > somewhere in the startlogging function.
>> >
>> > Something like this I tried:
>> > log.startLogging(sys.stdout,setStdout=False)
>>
>> Why did you switch to sys.stdout here?  While this will prevent
>> sys.stdout and sys.stderr from being redirected, it will use
>> sys.stdout for any log.msg() calls, so nothing would end up in your
>> log file.
>>
>> > Doesnt help in solving the problem of getting both things:
>> >
>> > Requirement:
>> > log.msg("messageforlog")    -> goes to log
>> > print "message for console" -> goes to console
>> >
>> > Could anyone give some ideas on this?
>>
>> I think you had the right idea with setStdout, but changed more than
>> just that when you tested it.  If you use a call like
>> log.startLogging(open(logname, 'w'), setStdout=False) I believe you'll
>> get what you want.  Only calls to log.msg() will go to the file, and
>> stdout/stderr will be left unchanged.
>>
>> -- David
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/a4526509/attachment.html>

From exarkun at twistedmatrix.com  Thu Nov  5 05:29:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 12:29:24 -0000
Subject: [Twisted-Python] Logging to both console and file (using
	twisted	logging API)?
In-Reply-To: <74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
Message-ID: <20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>

On 08:59 am, namanvit at gmail.com wrote:
>People,
>
>Can anyone help me with this issue?
>
>log.startLogging(open(logname,'w')
>or
>log.startLogging(open(logname,'w'), setStdout=True)
>
>Both print the console output in the log. But nothing is displayed on
>console! So I get a empty console
>I would like to keep the console going also:
>
>Precisely:
>Console -> gets the print calls                             Not 
>Happening
>Log       -> gets the print calls + log.msg calls      Happening
>
>I understand that this might be a trivial issue, but I am not able to 
>figure
>it out in the documentation available :(

Asking the same thing over and over again isn't going to get you an 
answer.  Try making your question more clear.  I haven't answered 
because I don't understand what you're trying to achieve.

Jean-Paul



From namanvit at gmail.com  Thu Nov  5 06:20:41 2009
From: namanvit at gmail.com (naman jain)
Date: Thu, 5 Nov 2009 14:20:41 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
Message-ID: <74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>

I ll try to rephrase it better:

I simply want the print statement to appear in both the log file and the
console.
print("goes in both") -> the log also gets this and the console also.

Thanks




On Thu, Nov 5, 2009 at 1:29 PM, <exarkun at twistedmatrix.com> wrote:

> On 08:59 am, namanvit at gmail.com wrote:
> >People,
> >
> >Can anyone help me with this issue?
> >
> >log.startLogging(open(logname,'w')
> >or
> >log.startLogging(open(logname,'w'), setStdout=True)
> >
> >Both print the console output in the log. But nothing is displayed on
> >console! So I get a empty console
> >I would like to keep the console going also:
> >
> >Precisely:
> >Console -> gets the print calls                             Not
> >Happening
> >Log       -> gets the print calls + log.msg calls      Happening
> >
> >I understand that this might be a trivial issue, but I am not able to
> >figure
> >it out in the documentation available :(
>
> Asking the same thing over and over again isn't going to get you an
> answer.  Try making your question more clear.  I haven't answered
> because I don't understand what you're trying to achieve.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/4001a719/attachment.html>

From piemail at tiscali.it  Thu Nov  5 10:52:55 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Thu, 5 Nov 2009 10:52:55 -0700
Subject: [Twisted-Python] help needed with flow-control for push protocol
Message-ID: <002101ca5e40$ce8019a0$74d56c81@porcatile>

Hi,

I need assistance figuring out how to create a push protocol that implements
flow control.

To keep things simple, I'm trying to build a push-based echo server.  It
should
(1) accept incoming tcp connections
(2) on each connection, all data rec'd should be echo'd unchanged.
(3) should the output transport request that transmission be "paused,"
the input transport (in this case, the same socket) should be similarly
blocked.


This would seem to be a simple problem.  I think my "PushEcho" class
should implement both IConsumer and IProducer interfaces; As a consumer,
its dataRecieved method would cause it to act like a producer and call
the transport's dataReceived method.  Similarly, as a producer, it's
pause, and resume methods would be called, and they would (as a
consumer) just call the same functions in the transport.

However, I can't get the plumbing right.

Can someone help by providing pointers or some sample code?

Thanks.




From jonmills at moosesoup.com  Thu Nov  5 11:14:57 2009
From: jonmills at moosesoup.com (Jon Mills)
Date: Thu, 5 Nov 2009 18:14:57 +0000
Subject: [Twisted-Python] Twisted and wxPython
Message-ID: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>

Can anybody point me towards a nice up-to-date example of the use of
Twisted with wxPython?

I assume (hope) there's some way to bind the wx event loop into
Twisted's Reactor? Or do they need to run in separate
threads/processes?

Thanks in advance,

Jon Mills



From exarkun at twistedmatrix.com  Thu Nov  5 11:18:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 18:18:16 -0000
Subject: [Twisted-Python] Logging to both console and file (using
	twisted	logging API)?
In-Reply-To: <74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
	<74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
Message-ID: <20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>

On 01:20 pm, namanvit at gmail.com wrote:
>I ll try to rephrase it better:
>
>I simply want the print statement to appear in both the log file and 
>the
>console.
>print("goes in both") -> the log also gets this and the console also.
>
>Thanks

How about installing two log observers?

    from sys import stdout
    from twisted.python.log import FileLogObserver, startLogging, 
addObserver, msg

    # First, startLogging to capture stdout
    startLogging(stdout)

    # Now add an observer that logs to a file
    addObserver(FileLogObserver(file("foo.log")).emit)

    msg("Hello, world")
    print "Goodbye, world"

Jean-Paul



From rroberts at adobe.com  Thu Nov  5 11:19:54 2009
From: rroberts at adobe.com (Read Roberts)
Date: Thu, 5 Nov 2009 10:19:54 -0800
Subject: [Twisted-Python] Need replacement for subprocess.call within a
 pyAMF method - any suggestions?
In-Reply-To: <20091104000824.3229.1269878260.divmod.xquotient.121@localhost.localdomain>
Message-ID: <C718574A.5D2E%rroberts@adobe.com>

Hello Jean-Paul ;

Thank you very much! For my simply workflow, blocking during a reactor call is acceptable, and simply calling reactor.run with installSignalHandlers=False does allow subprocess.Popen to work.  My application is working, and I can continue development - I was totally blocked until I had this problem solved.

I have not yet learned how to use inlineCallbacks,  and will study up in this, as in the long run, I would like  to server  side to be able to handle multiple calls.

Much appreciated,
  Read Roberts

On 11/3/09 4:08 PM, "exarkun at twistedmatrix.com" <exarkun at twistedmatrix.com> wrote:

On 3 Nov, 11:55 pm, rroberts at adobe.com wrote:
>I am trying to use the twisted reactor as a basis for a Python server
>for a
>Flex app, using pyAMF.  My problem is that one  of the server methods
>requires me to run a series of command-line tools to complete parsing
>data
>from a file into an XML object, with lots of Python processing on the
>results of one command-line tool to provide the input to the next one.
>I
>have been using  subprocess.call  to invoke the command-line tools, but
>these intermittently - and frequently -  fail with an error "IOError:
>[Errno
>4] Interrupted system call".
>
>I do know that this was supposed to be fixed in twisted for Python 2.6,
>but
>it doesn't seem to be.

I'm not sure why you know this.  I sure would be great if that were the
case, but it's not.  More changes in Twisted are necessary to let things
like subprocess.call work properly alongside Twisted's process API.
>I have python 2.6.3 under Mac OSX 10.5.8, and twisted
>8.2.0. Is there a work-around for this problem, or a better way to do
>this
>with twisted? I do know that I can make a command-line call with
>reactor.callLater, and that I can return a deferred from my server
>method,
>but I don't see how to easily accomplish the chain of calls that I
>need,
>short of breaking up my serverMethod1 into the several sequential
>parts, and
>calling each from the result handler of the previous one. I'd rather
>not go
>that route, as the logic of which command-line call gets made when is
>actually quite complicated.

Are you aware that this means your server will only be able to handle
one request at a time?  If so and that's what you're shooting for, then
you can fix this easily, by passing False to reactor.run.  This
disable's Twisted's own process support and lets things like
subprocess.call work (blockingly, of course).
>What I have now looks like (enormously simplified):
>class MyPythonServer:
>
>    def serverMethod1(self, dummyPost, inputFilePath):
>        # Open inputFilePath, do stuff, save results to file2
>        subprocess.call(["command1", "file2", "file3"])
>        # Open file3, do stuff to the data, save results to file4
>        subprocess.call(["command2", "file4", "file5"])
>        # Open file5, convert data to a large string containing XML.
>        return xmlString

Of course, you can still have methods that look like this if you use
things like inlineCallbacks (which you can, since you said you're using
Python 2.6).  That way you preserve the style you seem to prefer and
avoid blocking your server any time you need to launch a child process.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/90f56d67/attachment.html>

From kevin.horn at gmail.com  Thu Nov  5 11:43:47 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 5 Nov 2009 12:43:47 -0600
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
Message-ID: <562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>

On Thu, Nov 5, 2009 at 12:14 PM, Jon Mills <jonmills at moosesoup.com> wrote:

> Can anybody point me towards a nice up-to-date example of the use of
> Twisted with wxPython?
>
> I assume (hope) there's some way to bind the wx event loop into
> Twisted's Reactor? Or do they need to run in separate
> threads/processes?
>
> Thanks in advance,
>
> Jon Mills
>
>
I typically base my code the example that comes with Twisted.
http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py

Is this not working for you, or had you just not seen it? (It took me quite
a while to find... ;) )

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/7999fe19/attachment.html>

From jonmills at moosesoup.com  Thu Nov  5 13:06:19 2009
From: jonmills at moosesoup.com (Jon Mills)
Date: Thu, 5 Nov 2009 20:06:19 +0000
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
	<562bcc10911051043q3da93d5cs405853c7017dacd1@mail.gmail.com>
Message-ID: <4ae373fe0911051206w20f430b1hc10be1268b8d3d38@mail.gmail.com>

Thanks Kevin,

I often find it difficult to know which Twisted examples to follow.
Googling around gives several different approaches to Twisted and wx
integration - and the recommended solution seems to have evolved over
time.

I'll take a look at the example in your link.

Thanks again

On Thu, Nov 5, 2009 at 6:43 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> On Thu, Nov 5, 2009 at 12:14 PM, Jon Mills <jonmills at moosesoup.com> wrote:
>>
>> Can anybody point me towards a nice up-to-date example of the use of
>> Twisted with wxPython?
>>
>> I assume (hope) there's some way to bind the wx event loop into
>> Twisted's Reactor? Or do they need to run in separate
>> threads/processes?
>>
>> Thanks in advance,
>>
>> Jon Mills
>>
>
> I typically base my code the example that comes with Twisted.
> http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py
>
> Is this not working for you, or had you just not seen it? (It took me quite
> a while to find... ;) )
>
> Kevin Horn
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Jon Mills
jonmills at moosesoup.com



From dripton at ripton.net  Thu Nov  5 13:14:23 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 5 Nov 2009 12:14:23 -0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
References: <4ae373fe0911051014v13c5460bif3d3eabc2c013092@mail.gmail.com>
Message-ID: <20091105201423.GA26492@vidar.dreamhost.com>

On 2009.11.05 18:14:57 +0000, Jon Mills wrote:
> Can anybody point me towards a nice up-to-date example of the use of
> Twisted with wxPython?
> 
> I assume (hope) there's some way to bind the wx event loop into
> Twisted's Reactor? Or do they need to run in separate
> threads/processes?

wx has multiple event loops so reactor integration isn't as easy as it
should be.

Longer version of that answer here:

http://wiki.wxpython.org/wxPythonAndTwisted

Here's an example of doing it with threads:

https://pangalactic.us/repo/ampchat

-- 
David Ripton    dripton at ripton.net



From exarkun at twistedmatrix.com  Thu Nov  5 13:42:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Nov 2009 20:42:12 -0000
Subject: [Twisted-Python] help needed with flow-control for push protocol
In-Reply-To: <002101ca5e40$ce8019a0$74d56c81@porcatile>
References: <002101ca5e40$ce8019a0$74d56c81@porcatile>
Message-ID: <20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>

On 05:52 pm, piemail at tiscali.it wrote:
>Hi,
>
>I need assistance figuring out how to create a push protocol that 
>implements
>flow control.
>
>To keep things simple, I'm trying to build a push-based echo server. 
>It
>should
>(1) accept incoming tcp connections
>(2) on each connection, all data rec'd should be echo'd unchanged.
>(3) should the output transport request that transmission be "paused,"
>the input transport (in this case, the same socket) should be similarly
>blocked.
>
>This would seem to be a simple problem.  I think my "PushEcho" class
>should implement both IConsumer and IProducer interfaces;

It doesn't need to implement IConsumer.  Protocols are hooked up to 
transports via the protocol's dataReceived method.  The protocol does 
not also need to be an IConsumer implementation with a write method.
>As a consumer,
>its dataRecieved method would cause it to act like a producer and call
>the transport's dataReceived method.

TCP transports, on the other hand, are IConsumer implementations.  So 
you meant the transport's write method (it has no dataReceived method). 
So, yes, the protocol should pass all data it receives back to the 
transport.
>Similarly, as a producer, it's
>pause, and resume methods would be called, and they would (as a
>consumer) just call the same functions in the transport.

This sounds right.
>However, I can't get the plumbing right.
>
>Can someone help by providing pointers or some sample code?

Here's some untested code:

    class SmartEcho(Protocol):
        implements(IProducer)

        def pauseProducing(self):
            self.transport.pauseProducing()

        def resumeProducing(self):
            self.transport.resumeProducing()

        def stopProducing(self):
            self.transport.stopProducing()

        def connectionMade(self):
            self.transport.registerProducer(self, True)

        def dataReceived(self, bytes):
            self.transport.write(bytes)

A careful examination of this code should also reveal the fact that it 
can be shortened to a more obscure form:

    class SmartEcho(Protocol):
        def connectionMade(self):
            self.transport.registerProducer(self.transport, True)

        def dataReceived(self, bytes):
            self.transport.write(bytes)

Hope this helps,
Jean-Paul



From piemail at tiscali.it  Thu Nov  5 15:28:22 2009
From: piemail at tiscali.it (Pietro Niccoli)
Date: Thu, 5 Nov 2009 15:28:22 -0700
Subject: [Twisted-Python] R: help needed with flow-control for push protocol
In-Reply-To: <20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>
References: <002101ca5e40$ce8019a0$74d56c81@porcatile>
	<20091105204212.3229.1317796294.divmod.xquotient.178@localhost.localdomain>
Message-ID: <004f01ca5e67$49ad3150$74d56c81@porcatile>

> Here's some untested code:
> 
>     class SmartEcho(Protocol):
>         implements(IProducer)
> 
>         def pauseProducing(self):
>             self.transport.pauseProducing()
> 
>         def resumeProducing(self):
>             self.transport.resumeProducing()
> 
>         def stopProducing(self):
>             self.transport.stopProducing()
> 
>         def connectionMade(self):
>             self.transport.registerProducer(self, True)
> 
>         def dataReceived(self, bytes):
>             self.transport.write(bytes)
> 
> A careful examination of this code should also reveal the 
> fact that it can be shortened to a more obscure form:
> 
>     class SmartEcho(Protocol):
>         def connectionMade(self):
>             self.transport.registerProducer(self.transport, True)
> 
>         def dataReceived(self, bytes):
>             self.transport.write(bytes)
> 
> Hope this helps,
> Jean-Paul
> 
Thanks a lot. It definitely helped me. I knew how to set up a producer, I
just didn't know that my class was automatically going to be registered as a
consumer for transport. And I didn't know that i could call
transport.registerProducer(self.transport)! Unfortunately twisted is as
powerful as poorly documented sometimes.

Pietro




From radix at twistedmatrix.com  Thu Nov  5 21:00:26 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 5 Nov 2009 23:00:26 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
Message-ID: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>

I'm working on it. The core NEWS file is done I think. NEWS for other
projects will be worked on tomorrow.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From glyph at twistedmatrix.com  Thu Nov  5 21:05:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Nov 2009 23:05:42 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <d9047f780911052005w35380335q14cc5e48a69c9dc4@mail.gmail.com>

On Thu, Nov 5, 2009 at 11:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> Subject: Twisted 9, do you want it


YES


> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>

WOOOOOO
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/e50f7e36/attachment.html>

From clemesha at gmail.com  Thu Nov  5 21:07:16 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Thu, 5 Nov 2009 20:07:16 -0800
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <d272f0690911052007p7688254dh32585cc21972ce85@mail.gmail.com>

Yes, do want! Thanks for doing this.

On Thu, Nov 5, 2009 at 8:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/b26dccda/attachment.html>

From nathan.stocks at gmail.com  Thu Nov  5 22:36:46 2009
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Nov 2009 22:36:46 -0700
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>

On Thu, Nov 5, 2009 at 9:00 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.

For those of us who don't know, where's the new core NEWS file
located?  I checked trunk/, tags/, and branches/ on the trac source
browser and couldn't a 9.0 NEWS file...

~ Nathan



From radix at twistedmatrix.com  Thu Nov  5 22:54:08 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 6 Nov 2009 00:54:08 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<96c9d6a80911052136s151bf684t3746b607a8d24453@mail.gmail.com>
Message-ID: <60ed19d40911052154o4cd822a5mac5aaa9cc4ccc1a3@mail.gmail.com>

It's here:

http://twistedmatrix.com/trac/browser/branches/releases/release-9.0.x-3860-2/twisted/topfiles/NEWS

On Fri, Nov 6, 2009 at 12:36 AM, Nathan <nathan.stocks at gmail.com> wrote:
> On Thu, Nov 5, 2009 at 9:00 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> I'm working on it. The core NEWS file is done I think. NEWS for other
>> projects will be worked on tomorrow.
>
> For those of us who don't know, where's the new core NEWS file
> located?  I checked trunk/, tags/, and branches/ on the trac source
> browser and couldn't a 9.0 NEWS file...
>
> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From cary.hull at gmail.com  Thu Nov  5 22:57:50 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Thu, 5 Nov 2009 21:57:50 -0800
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <3fce0ae70911052157v5d6b6f1fs6a05975e7510c642@mail.gmail.com>

Yes. (thanks!)

On Thu, Nov 5, 2009 at 8:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091105/a99e53d7/attachment.html>

From leyssw at ihug.co.nz  Fri Nov  6 00:12:17 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Fri, 06 Nov 2009 20:12:17 +1300
Subject: [Twisted-Python] Gridspy - a new project using Twisted
In-Reply-To: <4AE54690.9030907@ihug.co.nz>
References: <4AE54690.9030907@ihug.co.nz>
Message-ID: <4AF3CC51.7050107@ihug.co.nz>

Just a quick update, since the last time I mentioned our system the 
dashboard was still rather rough. Since then I have added a better UI, 
exposed the live data more, added little JQuery graphs along with 
history and CSV export. All that in 1 week worth of evenings - isn't 
Python great?

Please check out the dashboard and drop me an email if your company 
wants to cut its power bill by 10 - 20% through monitoring its power usage:
http://your.gridspy.co.nz/powertech

Could someone add me to the projects page? You could use the above link 
and the following text
Gridspy - Live power monitoring and analysis

The Nexus costs $685 USD, monitors 3 different circuits and uplinks 
collected data to the site via ethernet. We also have a wireless device 
called the Gridspy that costs $495 USD, monitors 6 circuits (or a 
variety of other things) and talks to the Nexus wirelessly to upload data.

More info on the devices here:
http://www.gridspy.co.nz/nexus-and-gridspy-our-sensor-solution.html

Any comments, questions or suggestions are welcome.

Thanks!

-Tom

> My previous email:
>
> Hi Everyone
>
> I would like to introduce my project for the 
> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted page. We use 
> twisted as the central server that talks to many power measurement 
> sensors in the field.
>
> "
> Gridspy provides you with an interactive view of resource usage in 
> your building. It gives you hard data on your consumption patterns and 
> helps you to make informed decisions.
> ...
> The Gridspy allows you to access and monitor your consumption patterns 
> in real-time using a standard web browser on your PC, laptop or mobile 
> phone. The data is presented in high resolution and updated each 
> second as you watch. The moment a light is turned on in your house, 
> you can see the change on your Gridspy dashboard from across the room 
> or across the planet.
> "
> Our homepage is here http://www.gridspy.co.nz/
> a running demo is here http://your.gridspy.co.nz/powertech
>
> And you can read more about the role of our twisted backend here: 
> http://blog.gridspy.co.nz/2009/10/realtime-data-from-sensors-to-browsers.html
>
> "
> ... The nexus then collects those sensor samples from the nearby 
> Gridspies, bundles it up with its own data and uploads it to our 
> central servers. To collect the data we use a custom application 
> written using the excellent Twisted framework 
> <http://twistedmatrix.com/>. Every single reading gets instant 
> attention: it is evaluated for real-time events, queued to be stored 
> in the database and finally forwarded to watching dashboard users. 
> Processing the data stream live on the server opens up many exciting 
> possible features that I look forward to discussing in future blog 
> posts. By the time that the sample reaches the server, it is about 0.2 
> seconds old. ...
> "
>
> It has been a great framework to work with. My sincere thanks goes to 
> everyone who has ever contributed to this project. Job very well done!
>
> -Tom
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091106/5a052196/attachment.html>

From josef.robert.novak at gmail.com  Fri Nov  6 00:28:05 2009
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Fri, 6 Nov 2009 16:28:05 +0900
Subject: [Twisted-Python] twisted server for recording streaming audio
Message-ID: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>

Hi,

  I'm interested  in using twisted to build a server for recording streaming
audio.  I've spent some time googling and looking through the archives but
haven't been able to find much in the way of examples for this sort of
usage.  To be clear, I'm not trying to stream media from the server to the
client, but want to stream the audio from (potentially multiple) clients to
the server, where it will be recorded and possibly later annotated for
reference.

  The closest possible example of this sort of usage scenario that I was
able to find was shtoom, but I wasn't able to get very far with that, as the
source does not seem to be available, despite the site still being up
(perhaps I just couldn't find it ).

   Does anyone know of any working examples of such usage that might be
easily adapted.  I'm really only looking for the simplest possible base
example that would allow me to connect one or more clients over localhost
and stream the audio to the server.
   On the other hand, perhaps it is better to just go with the bundled
SocketServer module to start with?

Cheers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091106/53bc1320/attachment.html>

From namanvit at gmail.com  Fri Nov  6 00:58:32 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 6 Nov 2009 08:58:32 +0100
Subject: [Twisted-Python] Logging to both console and file (using
	twisted logging API)?
In-Reply-To: <20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>
References: <74b1256b0910290537n6ae1a672g8b2663a48757b4a1@mail.gmail.com>
	<m2r5skaau5.fsf@valheru.db3l.homeip.net>
	<74b1256b0911032243y32732832s5db17fd0c1dd65f5@mail.gmail.com>
	<74b1256b0911050059o29bff809kd1a73fc2fa90e660@mail.gmail.com>
	<20091105122924.3229.1736721612.divmod.xquotient.125@localhost.localdomain>
	<74b1256b0911050520s79bf235bj7fc81be47a9dbeb4@mail.gmail.com>
	<20091105181816.3229.1249305052.divmod.xquotient.139@localhost.localdomain>
Message-ID: <74b1256b0911052358h70f31a93s4d789a094bdfa9ce@mail.gmail.com>

Thanks. that does the job for me very well.

On Thu, Nov 5, 2009 at 7:18 PM, <exarkun at twistedmatrix.com> wrote:

> On 01:20 pm, namanvit at gmail.com wrote:
> >I ll try to rephrase it better:
> >
> >I simply want the print statement to appear in both the log file and
> >the
> >console.
> >print("goes in both") -> the log also gets this and the console also.
> >
> >Thanks
>
> How about installing two log observers?
>
>    from sys import stdout
>    from twisted.python.log import FileLogObserver, startLogging,
> addObserver, msg
>
>    # First, startLogging to capture stdout
>    startLogging(stdout)
>
>    # Now add an observer that logs to a file
>    addObserver(FileLogObserver(file("foo.log")).emit)
>
>    msg("Hello, world")
>    print "Goodbye, world"
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091106/d47707d9/attachment-0001.html>

From david.lyon at preisshare.net  Fri Nov  6 03:10:22 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Fri, 06 Nov 2009 05:10:22 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
Message-ID: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>


Hi All,

Glyph mentioned on python-dev that he was after assistance with
code reviews.

I would like to offer some assistance. I've been developing python
for some time and I have a knowledge of prior C++ async patterns
such as ACE. More currently I have a reasonable knowledge of
protocols such as jabber and so forth.

If there is any way that I might be of assistance, please don't
hesitate to ask.

David




From exarkun at twistedmatrix.com  Fri Nov  6 05:57:57 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 12:57:57 -0000
Subject: [Twisted-Python] Gridspy - a new project using Twisted
In-Reply-To: <4AF3CC51.7050107@ihug.co.nz>
References: <4AE54690.9030907@ihug.co.nz>
	<4AF3CC51.7050107@ihug.co.nz>
Message-ID: <20091106125757.3229.101814281.divmod.xquotient.181@localhost.localdomain>

On 07:12 am, leyssw at ihug.co.nz wrote:
>Just a quick update, since the last time I mentioned our system the 
>dashboard was still rather rough. Since then I have added a better UI, 
>exposed the live data more, added little JQuery graphs along with 
>history and CSV export. All that in 1 week worth of evenings - isn't 
>Python great?

Awesome :)
>Please check out the dashboard and drop me an email if your company 
>wants to cut its power bill by 10 - 20% through monitoring its power 
>usage:
>http://your.gridspy.co.nz/powertech
>
>Could someone add me to the projects page? You could use the above link 
>and the following text
>Gridspy - Live power monitoring and analysis

Added!

Jean-Paul
>The Nexus costs $685 USD, monitors 3 different circuits and uplinks 
>collected data to the site via ethernet. We also have a wireless device 
>called the Gridspy that costs $495 USD, monitors 6 circuits (or a 
>variety of other things) and talks to the Nexus wirelessly to upload 
>data.
>
>More info on the devices here:
>http://www.gridspy.co.nz/nexus-and-gridspy-our-sensor-solution.html
>
>Any comments, questions or suggestions are welcome.
>
>Thanks!
>
>-Tom



From exarkun at twistedmatrix.com  Fri Nov  6 06:01:33 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 13:01:33 -0000
Subject: [Twisted-Python] twisted server for recording streaming audio
In-Reply-To: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>
References: <710ff8630911052328t4b886b01p28846fe1a17f1148@mail.gmail.com>
Message-ID: <20091106130133.3229.1083851406.divmod.xquotient.187@localhost.localdomain>

On 07:28 am, josef.robert.novak at gmail.com wrote:
>Hi,
>
>  I'm interested  in using twisted to build a server for recording 
>streaming
>audio.  I've spent some time googling and looking through the archives 
>but
>haven't been able to find much in the way of examples for this sort of
>usage.  To be clear, I'm not trying to stream media from the server to 
>the
>client, but want to stream the audio from (potentially multiple) 
>clients to
>the server, where it will be recorded and possibly later annotated for
>reference.
>
>  The closest possible example of this sort of usage scenario that I was
>able to find was shtoom, but I wasn't able to get very far with that, 
>as the
>source does not seem to be available, despite the site still being up
>(perhaps I just couldn't find it ).
>
>   Does anyone know of any working examples of such usage that might be
>easily adapted.  I'm really only looking for the simplest possible base
>example that would allow me to connect one or more clients over 
>localhost
>and stream the audio to the server.
>   On the other hand, perhaps it is better to just go with the bundled
>SocketServer module to start with?

"Stream" doesn't mean a whole lot - at least not specifically.  The only 
interesting thing it really implies, I think, is that the data you're 
sending only comes into existence shortly before you send it.

The way to stream audio with Twisted is just like the way you would send 
any other data with Twisted.  Open a connection and start writing to it. 
For documentation about how to do this, see the client and server 
howtos:

  http://twistedmatrix.com/projects/core/documentation/howto/clients.html
  http://twistedmatrix.com/projects/core/documentation/howto/servers.html

If you run into specific problems or have any more specific questions, 
don't hesitate to ask. :)

Jean-Paul



From kevin.horn at gmail.com  Fri Nov  6 08:16:14 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 6 Nov 2009 09:16:14 -0600
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <562bcc10911060716l77297472p4c346ec93d26ad98@mail.gmail.com>

On Thu, Nov 5, 2009 at 10:00 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
>
Huzzah!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091106/ab271f29/attachment.html>

From exarkun at twistedmatrix.com  Fri Nov  6 15:49:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 06 Nov 2009 22:49:53 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
Message-ID: <20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>

On 10:10 am, david.lyon at preisshare.net wrote:
>
>Hi All,
>
>Glyph mentioned on python-dev that he was after assistance with
>code reviews.
>
>I would like to offer some assistance. I've been developing python
>for some time and I have a knowledge of prior C++ async patterns
>such as ACE. More currently I have a reasonable knowledge of
>protocols such as jabber and so forth.
>
>If there is any way that I might be of assistance, please don't
>hesitate to ask.

Hi David,

Thanks for the offer!  Twisted would absolutely benefit from more 
assistance. :)  There are quite a few things that you could do which 
would help out immensely:

  - Ticket reviews, as Glyph mentioned.  Until you get more familiar with 
various parts of Twisted, you probably want to avoid giving a proposed 
change (ie a branch or a patch) a thumbs up - but it's rare that the 
first time a change is submitted for review it's ready for a thumbs up 
anyway, so reviews you can do of tickets to point out what additional 
work is necessary would be super useful.  This lets the contributor get 
on with doing useful work (instead of waiting and waiting for a review) 
and lets people with more Twisted experience focus on things that their 
experience is actually necessary for.

  - Development, either on tickets with the "easy" keyword (at least 
initially), or, even better, on tickets which have already been reviewed 
one or more times and still require some work to be acceptable.  There 
are unfortunately quite a few tickets which have a proposed change which 
has been reviewed but for which the original contributor has 
disappeared.  These are often pretty straightforward to get into 
acceptable shape, so this is a high impact area in which to do work.

  - Triage.  Lots of duplicates are filed in the issue tracker.  Closing 
these as such (with a link to the existing ticket, and another link on 
the existing ticket to the duplicate) makes it that much easier to make 
sense of all the other open tickets (of which there are too many even 
without counting duplicates).

  - Website.  Our front page needs an overhaul.  It's too hard for people 
new to Twisted to get the information they need from the current front 
page.  We should have a goal-oriented page that makes it easy for 
someone who just knows "I want to write a jabber client" to get to the 
Twisted Words page, the jabber/xmpp examples, the Twisted Words 
examples, etc.

If any of these sound interesting to you, dive in!  You might want to 
hop on IRC, #twisted on irc.freenode.net, to talk about things in more 
detail, too.

Jean-Paul



From ssteinerx at gmail.com  Fri Nov  6 17:48:14 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Fri, 6 Nov 2009 19:48:14 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
Message-ID: <94E343C9-EE60-422A-947F-DE422320181B@gmail.com>


On Nov 6, 2009, at 5:49 PM, exarkun at twistedmatrix.com wrote:

>  - Website.  Our front page needs an overhaul.  It's too hard for  
> people
> new to Twisted to get the information they need from the current front
> page.  We should have a goal-oriented page that makes it easy for
> someone who just knows "I want to write a jabber client" to get to the
> Twisted Words page, the jabber/xmpp examples, the Twisted Words
> examples, etc.

I wonder whether I could offer anything in terms of getting the  
Twisted site onto better hosting.  I
t's often unreachable, and also often unusably slow but I'm not sure  
whether that's a horsepower or software issue, or both.

I have lots of server space in good quarters so if that's of interest  
please have whoever would be in charge of that contact me off-list.

S




From exarkun at twistedmatrix.com  Fri Nov  6 17:54:38 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 00:54:38 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
Message-ID: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>

On 12:48 am, ssteinerx at gmail.com wrote:
>
>On Nov 6, 2009, at 5:49 PM, exarkun at twistedmatrix.com wrote:
>>  - Website.  Our front page needs an overhaul.  It's too hard for
>>people
>>new to Twisted to get the information they need from the current front
>>page.  We should have a goal-oriented page that makes it easy for
>>someone who just knows "I want to write a jabber client" to get to the
>>Twisted Words page, the jabber/xmpp examples, the Twisted Words
>>examples, etc.
>
>I wonder whether I could offer anything in terms of getting the
>Twisted site onto better hosting.  I
>t's often unreachable, and also often unusably slow but I'm not sure
>whether that's a horsepower or software issue, or both.
>
>I have lots of server space in good quarters so if that's of interest
>please have whoever would be in charge of that contact me off-list.

As far as I can tell, these problems are due solely to the quality of 
trac.  There is no indication that they will disappear through only an 
improvement of the hardware the site is hosted on (unless we consider a 
really amazing improvement, something on the order of 10x faster CPU and 
disk than what we have now, a 3GHz P4 and contemporary disks).

I would be happy to be mistaken in this, though.

Jean-Paul



From ssteinerx at gmail.com  Fri Nov  6 18:11:05 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Fri, 6 Nov 2009 20:11:05 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>


On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
> As far as I can tell, these problems are due solely to the quality of
> trac.  There is no indication that they will disappear through only an
> improvement of the hardware the site is hosted on (unless we  
> consider a
> really amazing improvement, something on the order of 10x faster CPU  
> and
> disk than what we have now, a 3GHz P4 and contemporary disks).

Not to be overly blunt, but there are other trac installations running  
on far less capable hardware that don't suck anywhere near as hard.   
That's not to say trac is great, but it isn't near this bad in many,  
many other places.

I don't know anything about the history of this particular  
installation, what else is running on the server etc. but I don't  
think it's trac as trac.  It may be trac as installed in this  
particular situation, with whatever historical mutilations have been  
performed on it, with the particular versions of this and that.

Dunno, just trying to find a way to help with my very, very limited  
time.

S






From exarkun at twistedmatrix.com  Fri Nov  6 19:59:19 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 02:59:19 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
Message-ID: <20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>

On 01:11 am, ssteinerx at gmail.com wrote:
>
>On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
>>As far as I can tell, these problems are due solely to the quality of
>>trac.  There is no indication that they will disappear through only an
>>improvement of the hardware the site is hosted on (unless we
>>consider a
>>really amazing improvement, something on the order of 10x faster CPU
>>and
>>disk than what we have now, a 3GHz P4 and contemporary disks).
>
>Not to be overly blunt, but there are other trac installations running
>on far less capable hardware that don't suck anywhere near as hard.
>That's not to say trac is great, but it isn't near this bad in many,
>many other places.

Do you know roughly how much traffic any of those installations deal 
with?  We do around 50k hits per day, which is basically maxing out our 
hardware.  I have the sense that most trac sites don't handle this much 
traffic.
>I don't know anything about the history of this particular
>installation, what else is running on the server etc. but I don't
>think it's trac as trac.  It may be trac as installed in this
>particular situation, with whatever historical mutilations have been
>performed on it, with the particular versions of this and that.
>
>Dunno, just trying to find a way to help with my very, very limited
>time.

Several people have spent non-trivial amounts of time looking at this. 
I'm not sure what improvements can be made with only limited additional 
input.

Do you know of any relevant resources which we may have overlooked?  Are 
there guides to running a working trac site?  Tips about special indexes 
to create in the database?  Something?

Jean-Paul



From david.lyon at preisshare.net  Fri Nov  6 21:43:24 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Fri, 06 Nov 2009 23:43:24 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>

On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
> On 12:48 am, ssteinerx at gmail.com wrote:
> As far as I can tell, these problems are due solely to the quality of 
> trac.  There is no indication that they will disappear through only an 
> improvement of the hardware the site is hosted on (unless we consider a 
> really amazing improvement, something on the order of 10x faster CPU and 
> disk than what we have now, a 3GHz P4 and contemporary disks).

I suspect that Steve has access to a server farm that has processing power 
several orders of magnitude above the single machine you have.

It might be worth following it up.

David




From exarkun at twistedmatrix.com  Sat Nov  7 06:32:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 13:32:28 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
Message-ID: <20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>

On 04:43 am, david.lyon at preisshare.net wrote:
>On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
>>On 12:48 am, ssteinerx at gmail.com wrote:
>>As far as I can tell, these problems are due solely to the quality of
>>trac.  There is no indication that they will disappear through only an
>>improvement of the hardware the site is hosted on (unless we consider 
>>a
>>really amazing improvement, something on the order of 10x faster CPU 
>>and
>>disk than what we have now, a 3GHz P4 and contemporary disks).
>
>I suspect that Steve has access to a server farm that has processing 
>power
>several orders of magnitude above the single machine you have.
>
>It might be worth following it up.

A server farm doesn't buy us anything, as trac can't be scaled up across 
multiple hosts (or even multiple CPUs on a single host).

Jean-Paul



From david.lyon at preisshare.net  Sat Nov  7 06:51:36 2009
From: david.lyon at preisshare.net (David Lyon)
Date: Sat, 07 Nov 2009 08:51:36 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
Message-ID: <851631c21c9bb89c1b3fda303e176086@preisshare.net>

Hi Jean-Paul,

On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:

> A server farm doesn't buy us anything, as trac can't be scaled up across 
> multiple hosts (or even multiple CPUs on a single host).

I'm surprised to hear that.

Usually replication of servers for read requests works well
with dns sharing. 

Does Trac not run a database? that can go on another machine and
lighten the load.

Anyway, it's your call. Keep up the good work.

David



From exarkun at twistedmatrix.com  Sat Nov  7 07:07:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 14:07:23 -0000
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <851631c21c9bb89c1b3fda303e176086@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
	<851631c21c9bb89c1b3fda303e176086@preisshare.net>
Message-ID: <20091107140723.3229.733434702.divmod.xquotient.291@localhost.localdomain>

On 01:51 pm, david.lyon at preisshare.net wrote:
>Hi Jean-Paul,
>
>On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>>A server farm doesn't buy us anything, as trac can't be scaled up 
>>across
>>multiple hosts (or even multiple CPUs on a single host).
>
>I'm surprised to hear that.
>
>Usually replication of servers for read requests works well
>with dns sharing.
>
>Does Trac not run a database? that can go on another machine and
>lighten the load.
>
>Anyway, it's your call. Keep up the good work.

Part of the trouble is that there are no trac requests which are read- 
only.  Even anonymous view requests do things to the session table. 
That could probably be overcome with some coding.  Perhaps someone would 
like to work on that?  It would be useful, although there may be better 
ways to spend trac maintenance time (but maybe not, who knows!).

Jean-Paul



From ssteinerx at gmail.com  Sat Nov  7 07:43:36 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:43:36 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<BED65936-44DD-418D-8AAB-253B7D5D6903@gmail.com>
	<20091107025919.3229.959557135.divmod.xquotient.279@localhost.localdomain>
Message-ID: <EC4656B4-5389-4150-AB28-E9517DDC4D00@gmail.com>


On Nov 6, 2009, at 9:59 PM, exarkun at twistedmatrix.com wrote:

> On 01:11 am, ssteinerx at gmail.com wrote:
>>
>> On Nov 6, 2009, at 7:54 PM, exarkun at twistedmatrix.com wrote:
>>> As far as I can tell, these problems are due solely to the quality  
>>> of
>>> trac.  There is no indication that they will disappear through  
>>> only an
>>> improvement of the hardware the site is hosted on (unless we
>>> consider a
>>> really amazing improvement, something on the order of 10x faster CPU
>>> and
>>> disk than what we have now, a 3GHz P4 and contemporary disks).
>>
>> Not to be overly blunt, but there are other trac installations  
>> running
>> on far less capable hardware that don't suck anywhere near as hard.
>> That's not to say trac is great, but it isn't near this bad in many,
>> many other places.
>
> Do you know roughly how much traffic any of those installations deal
> with?  We do around 50k hits per day, which is basically maxing out  
> our
> hardware.  I have the sense that most trac sites don't handle this  
> much
> traffic.

I'm not sure.  That sounds like a lot for trac but I don't really know
.

>> Dunno, just trying to find a way to help with my very, very limited
>> time.
>
> Several people have spent non-trivial amounts of time looking at this.
> I'm not sure what improvements can be made with only limited  
> additional
> input.

I know, and I'm not trying to be flip or anything like it.  I hate to  
ask, but how much memory is in the box?  If it's memory bound with  
that many hits, another couple of gigs could work wonders.  Hell, I'll  
even buy them send them to the hosting company if it comes down to it.

> Do you know of any relevant resources which we may have overlooked?   
> Are
> there guides to running a working trac site?  Tips about special  
> indexes
> to create in the database?  Something?

Sorry to say, my early experiences with Trac were so bad, I just quit.

Maybe the thing to do is pull together the statistics (is there a  
module for this), and just ask the trac devs for some help.   I'd be  
happy to spearhead that if I could be of some help in that capacity.

S






From ssteinerx at gmail.com  Sat Nov  7 07:47:20 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:47:20 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <a283fc5161002259d6e982b714bf0bf0@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
Message-ID: <99848275-3E81-4576-9B86-5609ED81BD2F@gmail.com>


On Nov 6, 2009, at 11:43 PM, David Lyon wrote:

> On Sat, 07 Nov 2009 00:54:38 -0000, exarkun at twistedmatrix.com wrote:
>> On 12:48 am, ssteinerx at gmail.com wrote:
>> As far as I can tell, these problems are due solely to the quality of
>> trac.  There is no indication that they will disappear through only  
>> an
>> improvement of the hardware the site is hosted on (unless we  
>> consider a
>> really amazing improvement, something on the order of 10x faster  
>> CPU and
>> disk than what we have now, a 3GHz P4 and contemporary disks).
>
> I suspect that Steve has access to a server farm that has processing  
> power
> several orders of magnitude above the single machine you have.

Uh, I have access to all of Rackspace, Amazon, Elastic Cloud etc.,  
just like anyone else and also some servers of our own, the smallest  
of which is a dual quad-core beast with 16gb of memory and 500gb of  
Raid 10 storage constantly mirrored to a SAN.  It isn't all dedicated  
to a single job (obviously) but there's some horsepower to spare ;-).

S




From ssteinerx at gmail.com  Sat Nov  7 07:48:25 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 09:48:25 -0500
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
In-Reply-To: <851631c21c9bb89c1b3fda303e176086@preisshare.net>
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
	<a283fc5161002259d6e982b714bf0bf0@preisshare.net>
	<20091107133228.3229.846231032.divmod.xquotient.281@localhost.localdomain>
	<851631c21c9bb89c1b3fda303e176086@preisshare.net>
Message-ID: <C38535FC-8267-4162-B67C-1F27822CBC8D@gmail.com>


On Nov 7, 2009, at 8:51 AM, David Lyon wrote:

> Hi Jean-Paul,
>
> On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>
>> A server farm doesn't buy us anything, as trac can't be scaled up  
>> across
>> multiple hosts (or even multiple CPUs on a single host).
>
> I'm surprised to hear that.
>
> Usually replication of servers for read requests works well
> with dns sharing.
>
> Does Trac not run a database? that can go on another machine and
> lighten the load.
>
> Anyway, it's your call. Keep up the good work.

I think the best option may just be to collect machine, database, and  
usage stats and ask the trac guys for help.

S




From leyssw at ihug.co.nz  Sat Nov  7 15:41:18 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 11:41:18 +1300
Subject: [Twisted-Python] Twisted webserver performance issues (was
	volunteer...)
In-Reply-To: <mailman.5.1257613202.4566.twisted-python@twistedmatrix.com>
References: <mailman.5.1257613202.4566.twisted-python@twistedmatrix.com>
Message-ID: <4AF5F78E.7050602@ihug.co.nz>


Isn't the simplest option to place a decent reverse proxy between the 
webserver and our clients?

For example, varnish will cache and proxy simple GETs, so simple views 
of the front page and docs (which I imagine is a large chunk of the 
traffic) will be offloaded from the webserver:
http://varnish.projects.linpro.no/wiki/VarnishFeatures

Also, is the current installation (Db, apache + trac) all on one machine 
or are the DB and the webserver split already?

These would be easy ways to throw more hardware at the problem.

What is the current web-server configuration?
Can you share traffic stats for the top 20 pages, so we get an idea of 
where the load is?

-Tom

> From: "ssteinerX at gmail.com" <ssteinerx at gmail.com>
> Subject: Re: [Twisted-Python] Volunteer for twisted code Reviews and
> 	Commits
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <C38535FC-8267-4162-B67C-1F27822CBC8D at gmail.com>
> Content-Type: text/plain; charset=us-ascii; format=flowed; delsp=yes
>
>
> On Nov 7, 2009, at 8:51 AM, David Lyon wrote:
>
>   
>> Hi Jean-Paul,
>>
>> On Sat, 07 Nov 2009 13:32:28 -0000, exarkun at twistedmatrix.com wrote:
>>
>>     
>>> A server farm doesn't buy us anything, as trac can't be scaled up  
>>> across
>>> multiple hosts (or even multiple CPUs on a single host).
>>>       
>> I'm surprised to hear that.
>>
>> Usually replication of servers for read requests works well
>> with dns sharing.
>>
>> Does Trac not run a database? that can go on another machine and
>> lighten the load.
>>
>> Anyway, it's your call. Keep up the good work.
>>     
>
> I think the best option may just be to collect machine, database, and  
> usage stats and ask the trac guys for help.
>
> S
>
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 68, Issue 12
> **********************************************
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/44fcd2b7/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov  7 16:05:51 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 07 Nov 2009 23:05:51 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
Message-ID: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>

On 10:41 pm, leyssw at ihug.co.nz wrote:
>
>Isn't the simplest option to place a decent reverse proxy between the 
>webserver and our clients?

Possibly so!  I gave this a half-hearted attempted a few weeks ago but 
quickly gave up.  If someone who is familiar with configuring such a 
proxy would like to help out, perhaps we can get something useful up and 
running.
>
>For example, varnish will cache and proxy simple GETs, so simple views 
>of the front page and docs (which I imagine is a large chunk of the 
>traffic) will be offloaded from the webserver:
>http://varnish.projects.linpro.no/wiki/VarnishFeatures
>
>Also, is the current installation (Db, apache + trac) all on one 
>machine or are the DB and the webserver split already?

They're all on one machine.  Changing this is an expensive proposition 
with a hard to predict payoff, so it's rather low on the list of ideas 
to try.
>These would be easy ways to throw more hardware at the problem.
>
>What is the current web-server configuration?

Can you be more specific about which configuration you're interested in?
>Can you share traffic stats for the top 20 pages, so we get an idea of 
>where the load is?

Yep.  Here are counts for the last few days.  Rank, request count, URL.

1)      22058   /trac/
2)      8742 
/trac/attachment/wiki/TSF/SponsorLogos/seomoves.png?format=raw
3)      8646 
/trac/attachment/wiki/TSF/SponsorLogos/zenoss.2.png?format=raw
4)      8550    /trac/attachment/wiki/TSF/SponsorLogos/Appropriate- 
Solutions-Inc.gif?format=raw
5)      8499 
/trac/attachment/wiki/TSF/SponsorLogos/securitymetrics.png?format=raw
6)      3075    /trac/wiki/Documentation
7)      2615 /trac/timeline?changeset=on&max=100&daysback=10&format=rss
8)      2448    /trac/wiki/Downloads
9)      1788    /trac/wiki/FrequentlyAskedQuestions
10)     1356    /trac/wiki
11)     1019    /trac/wiki/TwistedProject
12)     966     /trac/wiki/TracGuide
13)     828     /trac/wiki/TwistedWeb
14)     814     /trac/robots.txt
15)     781     /trac/search
16)     710     /trac/wiki/TwistedProjects
17)     662     /trac/wiki/WikiStart?format=txt
18)     605     /trac/wiki/TwistedAdvantage
19)     595     /trac/report/9
20)     590 
/trac/timeline?milestone=on&ticket=on&changeset=on&wiki=on&max=50&daysback=90&format=rss

Looking at this, I'm reminded that we should try moving the sponsor 
logos to somewhere else

Unfortunately one thing we don't know is the relative cost of serving 
each of these URLs.  The sponsor logos, while accounting for a 
significant number requests, may actually be a very small contribution 
to overall load.

Anyhow, thanks!

Jean-Paul



From ssteinerx at gmail.com  Sat Nov  7 16:56:07 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sat, 7 Nov 2009 18:56:07 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
Message-ID: <320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>


On Nov 7, 2009, at 6:05 PM, exarkun at twistedmatrix.com wrote:
> Looking at this, I'm reminded that we should try moving the sponsor
> logos to somewhere else

1> Move any images to CDN of any description (Cloud Files @ rackspace  
does this for free, if I remember correctly, included in the cost of  
storage; I'd be happy to give you some of mine)

2> None of your main content has expires headers on it -- without  
that, they're not really cacheable, so images, css, etc are getting  
loaded every time.

S




From ellisonbg.net at gmail.com  Sat Nov  7 18:18:41 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sat, 7 Nov 2009 17:18:41 -0800
Subject: [Twisted-Python] Daemon processes on windows
Message-ID: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>

Hi,

I have a server-like process that uses twisted.  I need it to daemonize
itself and on linux/os x I am simply
using the daemonize function from twistd.  This works fine.  What about
Windows though....I saw that the
win32 version of twistd doesn't have (unless I am missing it) the ability to
daemonize a process.

Is is simply impossible to daemonize a process on windows?  If so, is there
any way to have a child
process on windows ignore SIGINT send to the parent?

Cheers and thanks,

Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091107/7d485d4b/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov  7 18:23:34 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 01:23:34 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
	<320B3BDC-CA69-4563-8BD9-ACB38E634D86@gmail.com>
Message-ID: <20091108012334.3229.1450763599.divmod.xquotient.340@localhost.localdomain>

On 7 Nov, 11:56 pm, ssteinerx at gmail.com wrote:
>
>On Nov 7, 2009, at 6:05 PM, exarkun at twistedmatrix.com wrote:
>>Looking at this, I'm reminded that we should try moving the sponsor
>>logos to somewhere else
>
>1> Move any images to CDN of any description (Cloud Files @ rackspace
>does this for free, if I remember correctly, included in the cost of
>storage; I'd be happy to give you some of mine)

Moving them to somewhere on twistedmatrix.com where they might be cached 
and don't need to involve trac to be served would probably be a good 
enough start.  That's where most of the effort is anyway (as URLs will 
need changing on various pages).
>2> None of your main content has expires headers on it -- without
>that, they're not really cacheable, so images, css, etc are getting
>loaded every time.

Yes.  That's one of trac's problems.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Nov  7 18:25:47 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 01:25:47 -0000
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
Message-ID: <20091108012547.3229.54103218.divmod.xquotient.344@localhost.localdomain>

On 01:18 am, ellisonbg.net at gmail.com wrote:
>Hi,
>
>I have a server-like process that uses twisted.  I need it to daemonize
>itself and on linux/os x I am simply
>using the daemonize function from twistd.  This works fine.  What about
>Windows though....I saw that the
>win32 version of twistd doesn't have (unless I am missing it) the 
>ability to
>daemonize a process.
>
>Is is simply impossible to daemonize a process on windows?  If so, is 
>there
>any way to have a child
>process on windows ignore SIGINT send to the parent?

Windows doesn't really have daemons the same way POSIX does.  It has, 
instead, "NT services".  It would be super excellent for twistd to 
support these somehow.  Cory Dodt did some work on this years back, I 
think, but it never reached a point where it was suitable for inclusion. 
It might be interesting to review that work and see if someone can pick 
up where he left off.  You can find his code in svn in 
/sandbox/moonfallen/ntsvc.

Jean-Paul



From ziga.seilnacht at gmail.com  Sat Nov  7 19:21:57 2009
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sun, 08 Nov 2009 03:21:57 +0100
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
Message-ID: <4AF62B45.8030105@gmail.com>

Brian Granger wrote:
> Hi,
> 
> I have a server-like process that uses twisted.  I need it to daemonize
> itself and on linux/os x I am simply
> using the daemonize function from twistd.  This works fine.  What about
> Windows though....I saw that the
> win32 version of twistd doesn't have (unless I am missing it) the ability to
> daemonize a process.
> 
> Is is simply impossible to daemonize a process on windows?  If so, is there
> any way to have a child
> process on windows ignore SIGINT send to the parent?
> 
> Cheers and thanks,
> 
> Brian
> 

It is possible to daemonize a process on Windows. I experimented with 
adding that support to the twistd script, but got swamped with other 
work and couldn't finish it. Below is the code that I have so far. You 
can save it in a module and call the daemonize() function from your script.

The process of daemonization is similar to the one on UNIX -- you have 
to spawn a child process twice, the first child is responsible for 
breaking away from any job objects (somewhat similar to becoming a 
session leader on UNIX), becoming a new process group leader and closing 
all handles (file descriptors) that might have been inherited.

The second child has to open dummy std* files and a new (hidden) 
console, otherwise the signals stop working. There is a slight 
complication with window stations and desktops. Each console creates at 
least one window and some other user objects, so we have to create
a separate desktop, or other processes would be able to manipulate them 
  and send us arbitrary (Windows) messages.

Regards,
Ziga



import os
import sys
import msvcrt

import win32con
import win32process
import win32security
import win32service

from twisted.python import win32



def getPythonArgs():
     """
     Return the list of command line args that were used to start
     the current Python interpreter and were not stored in C{sys.argv}.

     These are the options that control the Python interpreter itself,
     like the Python executable, optimization level, warning filters,
     division behaviour and literal string handling.
     """
     args = [sys.executable]
     for warnoption in sys.warnoptions:
         args.append("-W")
         args.append(warnoption)
     if type(1 / 2) is not int:
         args.append("-Qnew")
     if type("") is not str:
         args.append("-U")
     if not __debug__:
         if getPythonArgs.__doc__ is None:
             args.append("-OO")
         else:
             args.append("-O")
     return args



def daemonize():
     args = [os.path.abspath(__file__)] + sys.argv
     executable = sys.executable
     cmdline = win32.quoteArguments(getPythonArgs() + args)
     inherit = False

     flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
              win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
              win32process.DETACHED_PROCESS) # no controlling terminal

     info = win32process.STARTUPINFO()
     win32process.CreateProcess(executable, cmdline, None, None,
                                inherit, flags, None, None, info)
     # Do what exec* functions do, let the OS do the cleanup.
     os._exit(0)



def daemonize2():
     args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
     executable = sys.executable
     cmdline = win32.quoteArguments(getPythonArgs() + args)
     inherit = True
     # create an invisible console
     flags = (win32process.CREATE_NO_WINDOW
     attributes = win32security.SECURITY_ATTRIBUTES()
     attributes.bInheritHandle = True
     station = win32service.CreateWindowStation(None, 0,
                                                win32con.GENERIC_READ |
                                                win32con.GENERIC_WRITE,
                                                attributes)
     station.SetProcessWindowStation()
     sname = win32service.GetUserObjectInformation(station,
                                                   win32service.UOI_NAME)
     dname = str(os.getpid())
     desktop = win32service.CreateDesktop(dname, 0,
                                          win32con.GENERIC_READ |
                                          win32con.GENERIC_WRITE,
                                          attributes)
     desktop.SetThreadDesktop()
     null = os.open("NUL", os.O_RDWR)
     handle = msvcrt.get_osfhandle(null)
     info = win32process.STARTUPINFO()
     info.lpDesktop = "%s\\%s" % (sname, dname)
     info.dwFlags = win32process.STARTF_USESTDHANDLES
     info.hStdInput = info.hStdOutput = info.hStdError = handle
     win32process.CreateProcess(executable, cmdline, None, None,
                                inherit, flags, None, None, info)
     # Same as above, exit as fast as possible.
     os._exit(0)



if __name__ == "__main__":
     daemonize2()



From exarkun at twistedmatrix.com  Sat Nov  7 19:38:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 02:38:23 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
	(was	volunteer...)
In-Reply-To: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
References: <20091107230551.3229.701882086.divmod.xquotient.330@localhost.localdomain>
Message-ID: <20091108023823.3229.1912283154.divmod.xquotient.353@localhost.localdomain>

On 7 Nov, 11:05 pm, exarkun at twistedmatrix.com wrote:
>On 10:41 pm, leyssw at ihug.co.nz wrote:
>>
>>Isn't the simplest option to place a decent reverse proxy between the
>>webserver and our clients?
>
>Possibly so!  I gave this a half-hearted attempted a few weeks ago but
>quickly gave up.  If someone who is familiar with configuring such a
>proxy would like to help out, perhaps we can get something useful up 
>and
>running.

Actually, I just looked at Varnish again and remembered that because of 
the way trac sessions work, it's really hard to figure out what may and 
may not be correctly cached.  I don't know how to resolve this without 
serious changes to trac itself.

Jean-Paul



From leyssw at ihug.co.nz  Sat Nov  7 19:55:49 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 15:55:49 +1300
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AF63335.9060100@ihug.co.nz>

Thanks for the link info.

I literally just set up Varnish for the first time on my web host, so I 
am no pro. However, varnish uses a c like scripting language that can 
run regexps on the incoming urls and apply rules to them.

What this means is that we can (as a starting point) choose caching 
times for each of those high traffic urls in the varnish script without 
touching trac. In the script, we match the front page (with a regexp) 
and add a max-cache time to 86400, cache it, etc.

See http://www.catalystframework.org/calendar/2008/14
for a great varnish tutorial

By doing that for each of the urls you listed (bar the timeline, which 
should be cached for 1 hour or perhaps 30 minutes instead) we will 
seriously lighten the load on the database and the webserver, even if 
varnish runs on the same machine (as a start).

Every other url (which doesn't have caching set) we could just cache for 
30 minutes (perhaps even a day), but only for anon users (no cookies set 
in browser)

-Tom

>> On 10:41 pm, leyssw at ihug.co.nz wrote:
>>     
>>> Isn't the simplest option to place a decent reverse proxy between the
>>> webserver and our clients?
>>>       
>> Possibly so!  I gave this a half-hearted attempted a few weeks ago but
>> quickly gave up.  If someone who is familiar with configuring such a
>> proxy would like to help out, perhaps we can get something useful up 
>> and
>> running.
>>     
>
> Actually, I just looked at Varnish again and remembered that because of 
> the way trac sessions work, it's really hard to figure out what may and 
> may not be correctly cached.  I don't know how to resolve this without 
> serious changes to trac itself.
>
> Jean-Paul
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 68, Issue 13
> **********************************************
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/c31361aa/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov  7 20:07:55 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 03:07:55 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <4AF63335.9060100@ihug.co.nz>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
Message-ID: <20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>

On 02:55 am, leyssw at ihug.co.nz wrote:
>Thanks for the link info.
>
>I literally just set up Varnish for the first time on my web host, so I 
>am no pro. However, varnish uses a c like scripting language that can 
>run regexps on the incoming urls and apply rules to them.
>
>What this means is that we can (as a starting point) choose caching 
>times for each of those high traffic urls in the varnish script without 
>touching trac. In the script, we match the front page (with a regexp) 
>and add a max- cache time to 86400, cache it, etc.
>
>See http://www.catalystframework.org/calendar/2008/14
>for a great varnish tutorial
>
>By doing that for each of the urls you listed (bar the timeline, which 
>should be cached for 1 hour or perhaps 30 minutes instead) we will 
>seriously lighten the load on the database and the webserver, even if 
>varnish runs on the same machine (as a start).
>
>Every other url (which doesn't have caching set) we could just cache 
>for 30 minutes (perhaps even a day), but only for anon users (no 
>cookies set in browser)

Where this gets hard is that the front page looks different depending on 
whether the person requesting it is anonymous or authenticated.  If 
they're anonymous, various links are not presented.  If they're 
authenticated, they get the extra links and their username is part of 
the page.

Jean-Paul



From foom at fuhm.net  Sat Nov  7 21:26:40 2009
From: foom at fuhm.net (James Y Knight)
Date: Sat, 7 Nov 2009 23:26:40 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
Message-ID: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>

When I last looked into the performance issues, I found that sometimes  
trac appears to block for long periods of time without releasing the  
GIL. That seems to be the core of the performance issues, currently.  
When it's responding normally, it's perfectly snappy. But, sometimes,  
it blocks for 10sec at a time.

My next attempt to improve performance was going to be to run trac in  
subprocesses instead of threads. That would hopefully substantially  
fix the delay problem.

James



From exarkun at twistedmatrix.com  Sat Nov  7 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1257656711.63.1466971914@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/380cbe3c/attachment.html>

From ellisonbg.net at gmail.com  Sat Nov  7 22:22:15 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sat, 7 Nov 2009 21:22:15 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <4AF62B45.8030105@gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
Message-ID: <6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>

Fantastic, thanks for sharing this code.  I will definitely have a look.  If
it turns out to
work for us, would you mind releasing this under a BSD license so we can
include
it in IPython (BSD open source project)?  In either case, the ideas will be
very helpful to us.

Cheers,

Brian

It is possible to daemonize a process on Windows. I experimented with
> adding that support to the twistd script, but got swamped with other
> work and couldn't finish it. Below is the code that I have so far. You
> can save it in a module and call the daemonize() function from your script.
>
> The process of daemonization is similar to the one on UNIX -- you have
> to spawn a child process twice, the first child is responsible for
> breaking away from any job objects (somewhat similar to becoming a
> session leader on UNIX), becoming a new process group leader and closing
> all handles (file descriptors) that might have been inherited.
>
> The second child has to open dummy std* files and a new (hidden)
> console, otherwise the signals stop working. There is a slight
> complication with window stations and desktops. Each console creates at
> least one window and some other user objects, so we have to create
> a separate desktop, or other processes would be able to manipulate them
>  and send us arbitrary (Windows) messages.
>
> Regards,
> Ziga
>
>
>
> import os
> import sys
> import msvcrt
>
> import win32con
> import win32process
> import win32security
> import win32service
>
> from twisted.python import win32
>
>
>
> def getPythonArgs():
>     """
>     Return the list of command line args that were used to start
>     the current Python interpreter and were not stored in C{sys.argv}.
>
>     These are the options that control the Python interpreter itself,
>     like the Python executable, optimization level, warning filters,
>     division behaviour and literal string handling.
>     """
>     args = [sys.executable]
>     for warnoption in sys.warnoptions:
>         args.append("-W")
>         args.append(warnoption)
>     if type(1 / 2) is not int:
>         args.append("-Qnew")
>     if type("") is not str:
>         args.append("-U")
>     if not __debug__:
>         if getPythonArgs.__doc__ is None:
>             args.append("-OO")
>         else:
>             args.append("-O")
>     return args
>
>
>
> def daemonize():
>     args = [os.path.abspath(__file__)] + sys.argv
>     executable = sys.executable
>     cmdline = win32.quoteArguments(getPythonArgs() + args)
>     inherit = False
>
>     flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
>              win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
>              win32process.DETACHED_PROCESS) # no controlling terminal
>
>     info = win32process.STARTUPINFO()
>     win32process.CreateProcess(executable, cmdline, None, None,
>                                inherit, flags, None, None, info)
>     # Do what exec* functions do, let the OS do the cleanup.
>     os._exit(0)
>
>
>
> def daemonize2():
>     args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
>     executable = sys.executable
>     cmdline = win32.quoteArguments(getPythonArgs() + args)
>     inherit = True
>     # create an invisible console
>     flags = (win32process.CREATE_NO_WINDOW
>     attributes = win32security.SECURITY_ATTRIBUTES()
>     attributes.bInheritHandle = True
>     station = win32service.CreateWindowStation(None, 0,
>                                                win32con.GENERIC_READ |
>                                                win32con.GENERIC_WRITE,
>                                                attributes)
>     station.SetProcessWindowStation()
>     sname = win32service.GetUserObjectInformation(station,
>                                                   win32service.UOI_NAME)
>     dname = str(os.getpid())
>     desktop = win32service.CreateDesktop(dname, 0,
>                                          win32con.GENERIC_READ |
>                                          win32con.GENERIC_WRITE,
>                                          attributes)
>     desktop.SetThreadDesktop()
>     null = os.open("NUL", os.O_RDWR)
>     handle = msvcrt.get_osfhandle(null)
>     info = win32process.STARTUPINFO()
>     info.lpDesktop = "%s\\%s" % (sname, dname)
>     info.dwFlags = win32process.STARTF_USESTDHANDLES
>     info.hStdInput = info.hStdOutput = info.hStdError = handle
>     win32process.CreateProcess(executable, cmdline, None, None,
>                                inherit, flags, None, None, info)
>     # Same as above, exit as fast as possible.
>     os._exit(0)
>
>
>
> if __name__ == "__main__":
>     daemonize2()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091107/a17e106f/attachment.html>

From leyssw at ihug.co.nz  Sat Nov  7 23:26:22 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sun, 08 Nov 2009 19:26:22 +1300
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
References: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AF6648E.8000406@ihug.co.nz>

Neither of the below issues will be a problem

Jean-Paul
Logged in users have a cookie set (I imagine). by default Varnish will not present cached results to users with a cookie, nor will it cache their results for others to see. So the 10% of hits (totally my guess) that are for authenticated users will not be cached. However, some more static assets could be cached regardless of cookies if we so desire.

James:
Varnish has an option to serve an old result out of cache if the server is being non-responsive, it is a feature they call "Grace"

-Tom



Where this gets hard is that the front page looks different depending on 
whether the person requesting it is anonymous or authenticated.  If 
they're anonymous, various links are not presented.  If they're 
authenticated, they get the extra links and their username is part of 
the page.

Jean-Paul

------------------------------


When I last looked into the performance issues, I found that sometimes  
trac appears to block for long periods of time without releasing the  
GIL. That seems to be the core of the performance issues, currently.  
When it's responding normally, it's perfectly snappy. But, sometimes,  
it blocks for 10sec at a time.

My next attempt to improve performance was going to be to run trac in  
subprocesses instead of threads. That would hopefully substantially  
fix the delay problem.

James




From ssteinerx at gmail.com  Sun Nov  8 05:57:33 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Sun, 8 Nov 2009 07:57:33 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <3D94E7DC-AB45-483E-9286-30B6A49A265D@gmail.com>


On Nov 7, 2009, at 11:26 PM, James Y Knight wrote:

> When I last looked into the performance issues, I found that sometimes
> trac appears to block for long periods of time without releasing the
> GIL. That seems to be the core of the performance issues,

Any Earthly idea which part of trak is responsible or is just a  
general malaise?

> When it's responding normally, it's perfectly snappy. But, sometimes,
> it blocks for 10sec at a time.
>
> My next attempt to improve performance was going to be to run trac in
> subprocesses instead of threads. That would hopefully substantially
> fix the delay problem.

I don't mean to restate the obvious, but have you asked the track guys  
for help?  I don't know them at all, or really anything about them so  
excuse me if there's some feud or something.

S




From exarkun at twistedmatrix.com  Sun Nov  8 06:55:05 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 13:55:05 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <4AF6648E.8000406@ihug.co.nz>
References: <mailman.97643.1257657741.23374.twisted-python@twistedmatrix.com>
	<4AF6648E.8000406@ihug.co.nz>
Message-ID: <20091108135505.3229.1923845022.divmod.xquotient.364@localhost.localdomain>

On 06:26 am, leyssw at ihug.co.nz wrote:
>Neither of the below issues will be a problem
>
>Jean-Paul
>Logged in users have a cookie set (I imagine). by default Varnish will 
>not present cached results to users with a cookie, nor will it cache 
>their results for others to see. So the 10% of hits (totally my guess) 
>that are for authenticated users will not be cached. However, some more 
>static assets could be cached regardless of cookies if we so desire.

Nope.  All users have cookies, so Varnish won't present cached results 
to any of them.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Nov  8 07:02:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Nov 2009 14:02:13 -0000
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>

On 04:26 am, foom at fuhm.net wrote:
>When I last looked into the performance issues, I found that sometimes
>trac appears to block for long periods of time without releasing the
>GIL. That seems to be the core of the performance issues, currently.
>When it's responding normally, it's perfectly snappy. But, sometimes,
>it blocks for 10sec at a time.

How were you detecting these times?  Can we attach gdb to the process 
and trigger an all-threads stack dump when it happens?
>My next attempt to improve performance was going to be to run trac in
>subprocesses instead of threads. That would hopefully substantially
>fix the delay problem.

That would be interesting.  I thought it would be easy to add 
multiprocess support to the Twisted Web WSGI container, but I have since 
realized that was a pretty stupidly naive belief. :/  Still, perhaps it 
won't be impossible.

Could we start off just running multiple twistds, though?

Jean-Paul



From maarten at treewalker.org  Sun Nov  8 07:54:29 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 8 Nov 2009 15:54:29 +0100
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
Message-ID: <200911081554.29894.maarten@treewalker.org>

On Sunday 08 November 2009, James Y Knight wrote:

> When I last looked into the performance issues, I found that sometimes
> trac appears to block for long periods of time without releasing the
> GIL. That seems to be the core of the performance issues, currently.
> When it's responding normally, it's perfectly snappy. But, sometimes,
> it blocks for 10sec at a time.

How much memory does Trac use? Python garbage collection works in 
generations, which leads to recently allocated objects to be checked for 
garbage more often than older objects.

http://docs.python.org/library/gc.html

When collecting the oldest generation (2), we saw the Python VM freeze for 
several minutes. This was on a process that had several GB of allocated 
memory though. There was enough RAM to contain all data, but it's still 
possible the OS (Linux) swapped out pages there were not used for a long 
time to get more memory for caching.

We decided to work around the issue by disabling mark-and-sweep collection 
and relying on reference counting only. We had to add some code to forcably 
break reference cycles, but this was only needed for a small number cases.

Bye,
		Maarten



From ziga.seilnacht at gmail.com  Sun Nov  8 08:53:05 2009
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sun, 08 Nov 2009 16:53:05 +0100
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>	<4AF62B45.8030105@gmail.com>
	<6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
Message-ID: <4AF6E961.1060909@gmail.com>

Brian Granger wrote:
> Fantastic, thanks for sharing this code.  I will definitely have a look.  If
> it turns out to
> work for us, would you mind releasing this under a BSD license so we can
> include
> it in IPython (BSD open source project)?  In either case, the ideas will be
> very helpful to us.
> 
> Cheers,
> 
> Brian
> 

Sure, you can find a slightly updated version of the code in the 
attachment, licensed under the two clause BSD license and without the 
syntax error.

It would be even better if you could try to integrate the functionality 
into Twisted itself, if the core developers agree that it would be 
useful. I opened a ticket for this:

http://twistedmatrix.com/trac/ticket/4073

Regards,
Ziga
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: win32daemon.py
URL: </pipermail/twisted-python/attachments/20091108/ef3ebd0f/attachment-0001.ksh>

From ellisonbg.net at gmail.com  Sun Nov  8 10:35:57 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 09:35:57 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <4AF6E961.1060909@gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
	<6ce0ac130911072122s475d1e19pa11868b1b964ad26@mail.gmail.com>
	<4AF6E961.1060909@gmail.com>
Message-ID: <6ce0ac130911080935r267b59f9mfd9defbcde303ac6@mail.gmail.com>

Sure, you can find a slightly updated version of the code in the attachment,
licensed under the two clause BSD license and without the syntax error.

Thank you very much for being willing to share this code under the BSD
license.  I will try this out and see if it does the job for us.



> It would be even better if you could try to integrate the functionality
> into Twisted itself, if the core developers agree that it would be useful. I
> opened a ticket for this:
>
> http://twistedmatrix.com/trac/ticket/4073
>
>
Yes, it would be nice if this was in twisted itself.  I will probably
include it in IPython for now and see how it works for us - use that as a
medium term test of the approach.  I will provide feeback and any changes to
the twisted ticket as appropriate.

Thanks again,

Brian


> Regards,
> Ziga
>
> # Copyright (c) 2009 Ziga Seilnacht. All rights reserved.
> #
> # Redistribution and use in source and binary forms, with or without
> # modification, are permitted provided that the following conditions are
> met:
> #
> # 1. Redistributions of source code must retain the above copyright notice,
> #    this list of conditions and the following disclaimer.
> # 2. Redistributions in binary form must reproduce the above copyright
> notice,
> #    this list of conditions and the following disclaimer in the
> documentation
> #    and/or other materials provided with the distribution.
> #
> # THIS SOFTWARE IS PROVIDED BY THE FREEBSD PROJECT ''AS IS'' AND ANY
> EXPRESS OR
> # IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
> OF
> # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
> NO
> # EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
> # INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
> (INCLUDING,
> # BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
> USE,
> # DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
> THEORY OF
> # LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
> NEGLIGENCE
> # OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
> # ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
>
>
> import os
> import sys
> import msvcrt
>
> try:
>    import win32con
>    import win32process
>    import win32security
>    import win32service
> except ImportError:
>    win32process = None
>
> from twisted.python import win32
>
>
>
> def getPythonArgs():
>    """
>    Return the list of command line args that were used to start
>    the current Python interpreter and were not stored in C{sys.argv}.
>
>    These are the options that control the Python interpreter itself,
>    like the Python executable, optimization level, warning filters,
>    division behaviour and literal string handling.
>    """
>    args = [sys.executable]
>    for warnoption in sys.warnoptions:
>        args.append("-W")
>        args.append(warnoption)
>    if type(1 / 2) is not int:
>        args.append("-Qnew")
>    if type("") is not str:
>        args.append("-U")
>    if not __debug__:
>        if getPythonArgs.__doc__ is None:
>            args.append("-OO")
>        else:
>            args.append("-O")
>    return args
>
>
>
> def daemonize():
>    args = [os.path.abspath(__file__)] + sys.argv
>    executable = sys.executable
>    cmdline = win32.quoteArguments(getPythonArgs() + args)
>    inherit = False
>    priority =
> win32process.GetPriorityClass(win32process.GetCurrentProcess())
>    flags = (win32process.CREATE_BREAKAWAY_FROM_JOB | # session leader
>             win32process.CREATE_NEW_PROCESS_GROUP |  # group leader
>             win32process.DETACHED_PROCESS |          # no controlling
> terminal
>             priority)
>    info = win32process.STARTUPINFO()
>    win32process.CreateProcess(executable, cmdline, None, None,
>                               inherit, flags, None, None, info)
>    # Do what exec* functions do, let the OS do the cleanup.
>    os._exit(0)
>
>
>
> def daemonize2():
>    args = [sys.argv[1], "--nodaemon"] + sys.argv[2:]
>    executable = sys.executable
>    cmdline = win32.quoteArguments(getPythonArgs() + args)
>    inherit = True
>    priority =
> win32process.GetPriorityClass(win32process.GetCurrentProcess())
>    flags = (win32process.CREATE_NO_WINDOW | # create an invisible console
>             win32process.CREATE_NEW_PROCESS_GROUP | # group leader
>             priority)
>    attributes = win32security.SECURITY_ATTRIBUTES()
>    attributes.bInheritHandle = True
>    station = win32service.CreateWindowStation(None, 0,
>                                               win32con.GENERIC_READ |
>                                               win32con.GENERIC_WRITE,
>                                               attributes)
>    station.SetProcessWindowStation()
>    sname = win32service.GetUserObjectInformation(station,
>                                                  win32service.UOI_NAME)
>    dname = str(os.getpid())
>    desktop = win32service.CreateDesktop(dname, 0,
>                                         win32con.GENERIC_READ |
>                                         win32con.GENERIC_WRITE,
>                                         attributes)
>    desktop.SetThreadDesktop()
>    null = os.open("NUL", os.O_RDWR)
>    handle = msvcrt.get_osfhandle(null)
>    info = win32process.STARTUPINFO()
>    info.lpDesktop = "%s\\%s" % (sname, dname)
>    info.dwFlags = win32process.STARTF_USESTDHANDLES
>    info.hStdInput = info.hStdOutput = info.hStdError = handle
>    win32process.CreateProcess(executable, cmdline, None, None,
>                               inherit, flags, None, None, info)
>    # Same as above, exit as fast as posible.
>    os._exit(0)
>
>
>
> if __name__ == "__main__":
>    daemonize2()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/cbd6bfb3/attachment.html>

From nitro at dr-code.org  Sun Nov  8 10:39:49 2009
From: nitro at dr-code.org (Nitro)
Date: Sun, 08 Nov 2009 18:39:49 +0100
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <200911081554.29894.maarten@treewalker.org>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<200911081554.29894.maarten@treewalker.org>
Message-ID: <op.u227cn1cz3pzfc@nitrogenycs2>

Am 08.11.2009, 15:54 Uhr, schrieb Maarten ter Huurne  
<maarten at treewalker.org>:

> On Sunday 08 November 2009, James Y Knight wrote:
>
>> When I last looked into the performance issues, I found that sometimes
>> trac appears to block for long periods of time without releasing the
>> GIL. That seems to be the core of the performance issues, currently.
>> When it's responding normally, it's perfectly snappy. But, sometimes,
>> it blocks for 10sec at a time.

Some general documents about track + performance issues:

http://trac.edgewall.org/ticket/7490
http://trac.edgewall.org/wiki/TracPerformance

Lots of people experienced slow trac performance it seems. Reading through  
the #7490 ticket it seems there's a multitude of reasons for this. Maybe  
the twisted webserver suffers from one of them.

-Matthias



From foom at fuhm.net  Sun Nov  8 11:08:32 2009
From: foom at fuhm.net (James Y Knight)
Date: Sun, 8 Nov 2009 13:08:32 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
Message-ID: <6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>


On Nov 8, 2009, at 9:02 AM, exarkun at twistedmatrix.com wrote:

> On 04:26 am, foom at fuhm.net wrote:
>> When I last looked into the performance issues, I found that  
>> sometimes
>> trac appears to block for long periods of time without releasing the
>> GIL. That seems to be the core of the performance issues, currently.
>> When it's responding normally, it's perfectly snappy. But, sometimes,
>> it blocks for 10sec at a time.
>
> How were you detecting these times?

I first saw it while reloading the website and watching the resource  
loading timeline in Safari. And then after I pulled out the static  
resources from Trac's threads (which seems to have helped  
substantially for the /usual/ case), sometimes even those would hang  
for 10 seconds unresponsive. So then I had a loop running curl; sleep  
2 on Cube, and noticed it happening periodically.

I don't know for sure it's a GIL-releasing issue, it might be that  
something actually hung up the twisted mainloop thread, but I'd bet 5  
cookies it was one of the trac threads blocking doing something with  
the GIL held.

I didn't get farther in the investigation than this.

> Can we attach gdb to the process and trigger an all-threads stack  
> dump when it happens?

That's a good idea. Unfortunately, currently it seems to be working  
quite smoothly. :)

James



From glyph at twistedmatrix.com  Sun Nov  8 17:57:26 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 8 Nov 2009 19:57:26 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
Message-ID: <134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>

On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:

> I'm working on it. The core NEWS file is done I think. NEWS for other
> projects will be worked on tomorrow.

How's this coming along?




From db3l.net at gmail.com  Sun Nov  8 19:45:28 2009
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 08 Nov 2009 21:45:28 -0500
Subject: [Twisted-Python] Daemon processes on windows
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
Message-ID: <m2my2w8lh3.fsf@valheru.db3l.homeip.net>

Žiga Seilnacht <ziga.seilnacht at gmail.com> writes:

> It is possible to daemonize a process on Windows. I experimented with 
> adding that support to the twistd script, but got swamped with other 
> work and couldn't finish it. Below is the code that I have so far. You 
> can save it in a module and call the daemonize() function from your script.

While this process is certainly doable, I'll also point out that on
Windows, the more "natural" approach to this is to implement the
process as a service.  That also buys you some regular Windows
approaches to management (net stop/start from command line, services
UI from the control panel) and status inquiry (sc query from command
line).  So while it may be a little platform-specific code you're
final result will integrate more naturally into that environment for
any system administrators.

While I haven't done this with a twistd based Twisted service, I've
done it with a lot of Twisted code in general.  It's easiest if you have
pywin32 installed and can use it's utility service wrappers, for which
the pywin32 package has examples.

I've tended to offload the service definition to its own module, and
have it just import and execute the main code (with the twisted
reactor.run call) after the service gets started - that way you can
also manually run the twisted code without involving any of the
service support, or to support execution on non-Windows platforms.

Here's one example of a service object that invoices Twisted-based
code.  When stopping, you use callFromThread because the thread that
handles the request from the Windows service manager is separate from
the thread executing the main code (which is a thread created during
the startup process).

That's also why you start the reactor without signal initialization,
since it'll be in a secondary thread.  In SvcDoRun is where you could
import platform-generic modules to set up your twisted code, and then
this code starts the reactor.

Oh, and I left some code in that shows retrieving service-specific
parameters from the registry as is typical for Windows services
(stored in HKLM/System/CurrentControlSet/Services/<svc_name>/Parameters
if I recall corrrectly):

                              - - - - -

class DataImportService(win32serviceutil.ServiceFramework):

    __version__ = '1.0.0'

    _svc_name_ = 'fdi'
    _svc_display_name_ = 'SomeCompany Data Integration'

    stopping = False
    debug = False

    def __init__(self, *args, **kwargs):
        win32serviceutil.ServiceFramework.__init__(self, *args, **kwargs)
        self.initialize()
        self._stopped = threading.Event()
        self.log = None

    def initialize(self):
        # This is separate from __init__ so during debugging the bootstrap
        # code can override __init__ but still finish initialization.

    def _getOption(self, option, default):
        return win32serviceutil.GetServiceCustomOption(self._svc_name_,
                                                       option,
                                                       default)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        print '%s Service stopping' % self._svc_display_name_
        reactor.callFromThread(reactor.stop)
        self._stopped.wait(5)
        print '%s Service stopped' % self._svc_display_name_
        if self.log:
            self.log.close()

    def SvcDoRun(self):
        """Main entry point for service execution"""

        if hasattr(sys, 'frozen'):
            home_dir = os.path.dirname(sys.executable)
        else:
            home_dir = os.path.dirname(__file__)

        # First, let's set up some logging
        if self.debug:
            dupstdout = True
            logprefix = None
        else:
            dupstdout = False
            logprefix = os.path.join(home_dir, 'logs', 'dataimport.log')

        self.log = LogClass(logprefix, dupstdout)

        # And then reroute stdout/stderr to that file object
        sys.stdout = self.log
        sys.stderr = self.log

        print '%s Service %s starting' % (self._svc_display_name_,
                                          self.__version__)

        try:

            # Process config file
            config_file = self._getOption('config',
                                          os.path.join(home_dir, 'data',
                                                       'dataimport.ini'))

            # ... other service-related initialization ...

            # ... do any Twisted related initialization ...

            # Start everything up
            reactor.callLater(0, self.log.write,
                              '%s Service operational\n' %
                              self._svc_display_name_)
            reactor.run(installSignalHandlers=False)

            # We're shutting down.
            
            # ... do any shutdown processing ...

            # Flag that we're exiting so service thread can be more
            # accurate in terms of declaring shutdown.
            self._stopped.set()

        except:

            # For right now just log a traceback and abort
            log.err()
            # But try to gracefully close down log to let final traceback
            # information make it out to the log file.
            if self.log:
                self.log.close()

                              - - - - -

Your main startup code in the service wrapper module can use helper
functions from win32serviceutil for startup (see the pywin32 examples)
which provides some automatic support for installing/uninstalling the
service, or you can implement your own startup if you want to support
different options and what not.  This all works under py2exe as well
if you want to package things up and have a nice self-contained exe as
a Windows service.

-- David




From radix at twistedmatrix.com  Sun Nov  8 20:14:29 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 8 Nov 2009 22:14:29 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
Message-ID: <60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>

On Sun, Nov 8, 2009 at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:
>
>> I'm working on it. The core NEWS file is done I think. NEWS for other
>> projects will be worked on tomorrow.
>
> How's this coming along?

Hi! I've done the web NEWS file as well, which was about as huge as
the core NEWS file. That was yesterday.

Today, Jean-Paul and I got together to work on getting the new
HTTP/1.1 + high-level client API branches merged, which I am glad to
report we have done. I basically sat on his couch shouting out review
comments and proposed fixes and he hacked it out.

The only significant NEWS files left to write now are the ones for
conch and probably mail. There weren't many changes to the other
projects over the last release interval. I should get those done early
this week.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From ellisonbg.net at gmail.com  Sun Nov  8 20:54:11 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 19:54:11 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com> <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
Message-ID: <6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>

David,


While this process is certainly doable, I'll also point out that on
> Windows, the more "natural" approach to this is to implement the
> process as a service.  That also buys you some regular Windows
> approaches to management (net stop/start from command line, services
> UI from the control panel) and status inquiry (sc query from command
> line).  So while it may be a little platform-specific code you're
> final result will integrate more naturally into that environment for
> any system administrators.
>
>
It is very possible I might have to go this route.  We have some odd
requrements,
such as needing to run the server using the Windows Server 2008 HPC job
scheduler.
the job scheduler does some funky things and I am finding that some of the
"usual"
assumptions you make on Windows don't hold.  So at this point, I need all
the tricks
in my bad that I can get.  Thanks for the example!


> While I haven't done this with a twistd based Twisted service, I've
> done it with a lot of Twisted code in general.  It's easiest if you have
> pywin32 installed and can use it's utility service wrappers, for which
> the pywin32 package has examples.
>

OK, nice to know about these examples.


> I've tended to offload the service definition to its own module, and
> have it just import and execute the main code (with the twisted
> reactor.run call) after the service gets started - that way you can
> also manually run the twisted code without involving any of the
> service support, or to support execution on non-Windows platforms.
>
> Here's one example of a service object that invoices Twisted-based
> code.  When stopping, you use callFromThread because the thread that
> handles the request from the Windows service manager is separate from
> the thread executing the main code (which is a thread created during
> the startup process).
>
> That's also why you start the reactor without signal initialization,
> since it'll be in a secondary thread.  In SvcDoRun is where you could
> import platform-generic modules to set up your twisted code, and then
> this code starts the reactor.
>

Bummer, then I can't use this approach.  My "server" uses
reactor.spawnProcess
which needs the signal handlers to be installed (SIGCHLD specifically) to
work
properly... do you know if it can be done without the dual thread trick.

Thanks,

Brian

Oh, and I left some code in that shows retrieving service-specific
> parameters from the registry as is typical for Windows services
> (stored in HKLM/System/CurrentControlSet/Services/<svc_name>/Parameters
> if I recall corrrectly):
>
>                              - - - - -
>
> class DataImportService(win32serviceutil.ServiceFramework):
>
>    __version__ = '1.0.0'
>
>    _svc_name_ = 'fdi'
>    _svc_display_name_ = 'SomeCompany Data Integration'
>
>    stopping = False
>    debug = False
>
>    def __init__(self, *args, **kwargs):
>        win32serviceutil.ServiceFramework.__init__(self, *args, **kwargs)
>        self.initialize()
>        self._stopped = threading.Event()
>        self.log = None
>
>    def initialize(self):
>        # This is separate from __init__ so during debugging the bootstrap
>        # code can override __init__ but still finish initialization.
>
>    def _getOption(self, option, default):
>        return win32serviceutil.GetServiceCustomOption(self._svc_name_,
>                                                       option,
>                                                       default)
>
>    def SvcStop(self):
>        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
>        print '%s Service stopping' % self._svc_display_name_
>        reactor.callFromThread(reactor.stop)
>        self._stopped.wait(5)
>        print '%s Service stopped' % self._svc_display_name_
>        if self.log:
>            self.log.close()
>
>    def SvcDoRun(self):
>        """Main entry point for service execution"""
>
>        if hasattr(sys, 'frozen'):
>            home_dir = os.path.dirname(sys.executable)
>        else:
>            home_dir = os.path.dirname(__file__)
>
>        # First, let's set up some logging
>        if self.debug:
>            dupstdout = True
>            logprefix = None
>        else:
>            dupstdout = False
>            logprefix = os.path.join(home_dir, 'logs', 'dataimport.log')
>
>        self.log = LogClass(logprefix, dupstdout)
>
>        # And then reroute stdout/stderr to that file object
>        sys.stdout = self.log
>        sys.stderr = self.log
>
>        print '%s Service %s starting' % (self._svc_display_name_,
>                                          self.__version__)
>
>        try:
>
>            # Process config file
>            config_file = self._getOption('config',
>                                          os.path.join(home_dir, 'data',
>                                                       'dataimport.ini'))
>
>            # ... other service-related initialization ...
>
>            # ... do any Twisted related initialization ...
>
>            # Start everything up
>            reactor.callLater(0, self.log.write,
>                              '%s Service operational\n' %
>                              self._svc_display_name_)
>            reactor.run(installSignalHandlers=False)
>
>            # We're shutting down.
>
>            # ... do any shutdown processing ...
>
>            # Flag that we're exiting so service thread can be more
>            # accurate in terms of declaring shutdown.
>            self._stopped.set()
>
>        except:
>
>            # For right now just log a traceback and abort
>            log.err()
>            # But try to gracefully close down log to let final traceback
>            # information make it out to the log file.
>            if self.log:
>                self.log.close()
>
>                              - - - - -
>
> Your main startup code in the service wrapper module can use helper
> functions from win32serviceutil for startup (see the pywin32 examples)
> which provides some automatic support for installing/uninstalling the
> service, or you can implement your own startup if you want to support
> different options and what not.  This all works under py2exe as well
> if you want to package things up and have a nice self-contained exe as
> a Windows service.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/985180fe/attachment.html>

From foom at fuhm.net  Sun Nov  8 22:55:32 2009
From: foom at fuhm.net (James Y Knight)
Date: Mon, 9 Nov 2009 00:55:32 -0500
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com>
	<m2my2w8lh3.fsf@valheru.db3l.homeip.net>
	<6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
Message-ID: <598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>

On Nov 8, 2009, at 10:54 PM, Brian Granger wrote:
> Bummer, then I can't use this approach.  My "server" uses  
> reactor.spawnProcess
> which needs the signal handlers to be installed (SIGCHLD  
> specifically) to work
> properly... do you know if it can be done without the dual thread  
> trick.

...On windows? I don't think Windows has SIGCHLD.

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/bc93b365/attachment.html>

From ellisonbg.net at gmail.com  Sun Nov  8 23:32:24 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Sun, 8 Nov 2009 22:32:24 -0800
Subject: [Twisted-Python] Daemon processes on windows
In-Reply-To: <598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>
References: <6ce0ac130911071718q713f4be3o97c3dfc499c00c4a@mail.gmail.com>
	<4AF62B45.8030105@gmail.com> <m2my2w8lh3.fsf@valheru.db3l.homeip.net>
	<6ce0ac130911081954y7e162984r9003b1ee05bcb0db@mail.gmail.com>
	<598F3021-2D78-4D74-8FF0-D6DE61BF99AA@fuhm.net>
Message-ID: <6ce0ac130911082232j7273c1d1vc2b9d2cc0d9617e9@mail.gmail.com>

Bummer, then I can't use this approach.  My "server" uses
reactor.spawnProcess

> which needs the signal handlers to be installed (SIGCHLD specifically) to
> work
> properly... do you know if it can be done without the dual thread trick.
>
>
> ...On windows? I don't think Windows has SIGCHLD.
>
>
Yes, that may be.  I will look into this...I may have some hope yet.

Cheers,

Brian


> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091108/3da9632f/attachment.html>

From sipickles at googlemail.com  Mon Nov  9 00:50:58 2009
From: sipickles at googlemail.com (Simon Pickles)
Date: Mon, 09 Nov 2009 07:50:58 +0000
Subject: [Twisted-Python] Twisted web
Message-ID: <4AF7C9E2.4040901@googlemail.com>

Hi all,

I am returning to twisted after an extended absence, and was wondering 
what the status is with twisted's web framework? Is this an active area 
of development?

Also looking forward to Twisted9..... :)

Many thanks

Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/86f7a5ef/attachment.html>

From rlotun at gmail.com  Mon Nov  9 04:11:58 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 9 Nov 2009 11:11:58 +0000
Subject: [Twisted-Python] Twisted web
In-Reply-To: <4AF7C9E2.4040901@googlemail.com>
References: <4AF7C9E2.4040901@googlemail.com>
Message-ID: <95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>

Hi Simon,

> I am returning to twisted after an extended absence, and was wondering what
> the status is with twisted's web framework? Is this an active area of
> development?

The twisted.web framework is absolutely an active area of development,
with the most activity recently being on the http 1.1 web client
stuff, which was recently merged into trunk (yay!). That means it'll
be in Twisted 9.

You're probably talking about the web/web2 dichotomy?  Take a look at this page:
http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted

In short, web2 is being phased out and web is *the* web project of
twisted (as it should be ;-).

Cheers,
Reza



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From termim at gmail.com  Mon Nov  9 08:06:48 2009
From: termim at gmail.com (Mikhail)
Date: Mon, 9 Nov 2009 15:06:48 +0000 (UTC)
Subject: [Twisted-Python] Volunteer for twisted code Reviews and Commits
References: <5a39e30f41d5ff681cb6967c05c2c484@preisshare.net>
	<20091106224953.3229.1687146688.divmod.xquotient.259@localhost.localdomain>
	<94E343C9-EE60-422A-947F-DE422320181B@gmail.com>
	<20091107005438.3229.1783622980.divmod.xquotient.271@localhost.localdomain>
Message-ID: <loom.20091109T160637-329@post.gmane.org>

 <exarkun <at> twistedmatrix.com> writes:

> As far as I can tell, these problems are due solely to the quality of 
> trac.  There is no indication that they will disappear through only an 
> improvement of the hardware the site is hosted on (unless we consider a 
> really amazing improvement, something on the order of 10x faster CPU and 
> disk than what we have now, a 3GHz P4 and contemporary disks).
> 

You've probably checked this already but just in case:

 - What kind of database it uses? If it is SQLite then Postgres will 
   improve things for sure.

 - The about page shows that you are using 0.11dev - this is not good.
   During 0.11 development they fixed a lot of performance/memory problems.
   The current version is 0.11.5. You definitely should upgrade.

Regards,
Mikhail




From glyph at twistedmatrix.com  Mon Nov  9 10:29:33 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Nov 2009 12:29:33 -0500
Subject: [Twisted-Python] Twisted web
In-Reply-To: <95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>
References: <4AF7C9E2.4040901@googlemail.com>
	<95bb10690911090311r40f9036yfc0e11019eba4af8@mail.gmail.com>
Message-ID: <50BFE6B1-1638-4522-AF5D-FC90E6B67335@twistedmatrix.com>


On Nov 9, 2009, at 6:11 AM, Reza Lotun wrote:

> You're probably talking about the web/web2 dichotomy?  Take a look  
> at this page:
> http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted
>
> In short, web2 is being phased out and web is *the* web project of
> twisted (as it should be ;-).

More specifically, we need *help* phasing out web2, and moving all its  
good bits into twisted.web :).  There are many tickets in the tracker  
related to this.  If you're interested in participating this is a  
great place to help out!



From vitaly at synapticvision.com  Mon Nov  9 10:41:29 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 12:41:29 -0500
Subject: [Twisted-Python] Caching mechanism
Message-ID: <20091109124129.82497icy7guj7f8c@216.129.205.5>

hi,
is there any cache mechanism for twisted? Could one point me please to  
that docs?

Thank you.




From jonathan at garetjax.info  Mon Nov  9 10:43:15 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Mon, 9 Nov 2009 18:43:15 +0100
Subject: [Twisted-Python] PyObjC and Twisted command line script
In-Reply-To: <m2bpjlaggv.fsf@valheru.db3l.homeip.net>
References: <c50d9eb70911010245wdcb91cdo23eb328ea46a380e@mail.gmail.com> 
	<CE94F2DD-DD57-429A-927F-659DDCEE29E8@mac.com>
	<c50d9eb70911010337v599297b0t306f7b2411899f14@mail.gmail.com> 
	<m2bpjlaggv.fsf@valheru.db3l.homeip.net>
Message-ID: <c50d9eb70911090943r68b17008y8014081749a5c371@mail.gmail.com>

Hi David,
I discovered this message in my "sent" (???) mailbox only today, sorry for
the delay...

Anyway, thanks for the response, very clear.
The ticket I was referencing to (I forgot to paste the link) is this
one: http://twistedmatrix.com/trac/ticket/2812

ATM I'm communicating with a separate Cocoa application using
notifications and looking forward to use Cocoa Distributed Objects for
greater flexibility, but I'll consider your approach for
future developments.

Thanks,
Jonathan


On Mon, Nov 2, 2009 at 2:00 AM, David Bolen <db3l.net at gmail.com> wrote:
> Not sure which ticket is being referenced but which Twisted reactor
> are you using?  I've had very good luck with the threadedselect
> reactor, which shouldn't care if your main loop is a GUI or not.  You
> interleave with AppHelper.callAfter, which I think should work fine
> with both runConsoleEventLoopas well as the GUI runEventLoop
>
> For my part, any OSX console apps I've had to do could just be pure
> Twisted, with no need to integrate with an NSRunLoop, so I'm not that
> familiar with how you best track startup/shutdown in those cases.
>
> But fundamentally, you install the threadedselect reactor (do that
> before any other code uses "from twisted.internet import reactor"),
> then use "reactor.interleave(AppHelper.callAfter)" to tie the reactor
> in to the normal event loop.  In the Cocoa/NSApplication scenario, I
> use the applicationDidFinishLaunching notification to trigger this.
>
> During shutdown, wait for the reactor to perform its shutdown so it
> can close things down cleanly, using a reactor trigger to finalize the
> event loop with "AppHelper.stopEventLoop".  Again, presumably you'll
> have some way to determine when this is appropriate in your console
> event loop - in a Cocoa/NSApplication scenario, I use the
> applicationShouldTerminate notification.  (I've tended to install the
> trigger right at that point too, although it could also be done
> earlier)
>
> Here's a trivial example, where I kluge a startup event.  Presumably
> the reason you are using runConsoleEventLoop is to use other native
> event/input sources based operations, so you might have a more logical
> place or event to identify when to start the twisted integration - all
> that's required is that it be done after the main event loop is
> running.  If not, while I chose a 1s startup delay in this example, it
> was mostly to see the difference in timestamps - you can make the
> initial callLater a timeout of 0, and it'll just run as soon as the
> event loop gets started.
>
> This example also just terminates after two Twisted-based delayed
> events, but that would also be determined by your own application:
>
>    """Test console event loop app with Twisted threadedselect reactor"""
>
>    import time
>
>    from PyObjCTools import AppHelper
>
>    from twisted.internet._threadedselect import install
>    reactor = install()
>
>    class Main(object):
>
>        def startup(self):
>            print time.ctime(), 'Main starting'
>            reactor.callLater(1, self.callback)
>            reactor.interleave(AppHelper.callAfter)
>
>        def terminate(self):
>            print time.ctime(), 'Shutting down reactor'
>            reactor.addSystemEventTrigger('after', 'shutdown',
>                                          AppHelper.stopEventLoop)
>            reactor.stop()
>
>        def callback(self):
>            print time.ctime(), 'I was called by the reactor'
>            reactor.callLater(1, self.terminate)
>
>
>    if __name__ == "__main__":
>
>        main = Main()
>        AppHelper.callLater(1, main.startup)
>
>        print time.ctime(), 'Starting Event Loop'
>        AppHelper.runConsoleEventLoop()
>        print time.ctime(), 'Terminating'
>
> When running, this produces:
>
>    Sun Nov  1 19:53:16 2009 Starting Event Loop
>    Sun Nov  1 19:53:17 2009 Main starting
>    Sun Nov  1 19:53:18 2009 I was called by the reactor
>    Sun Nov  1 19:53:19 2009 Shutting down reactor
>    Sun Nov  1 19:53:19 2009 Terminating
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Best Regards,
Jonathan Stoppani



From exarkun at twistedmatrix.com  Mon Nov  9 11:09:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 18:09:28 -0000
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109124129.82497icy7guj7f8c@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
Message-ID: <20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>

On 05:41 pm, vitaly at synapticvision.com wrote:
>hi,
>is there any cache mechanism for twisted? Could one point me please to
>that docs?

What sort of caching are you interested in?  Caching the results of 
method calls?  A caching HTTP proxy?  Caching in the DNS client?  The 
total list of possibilities could run to many pages. :)

Jean-Paul



From gkistanova at accesssoftek.com  Mon Nov  9 11:56:07 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Mon, 9 Nov 2009 10:56:07 -0800
Subject: [Twisted-Python] Need help with Twisted. Please
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>

Dear Twisted developers,

I am not a developer, and definitely need you advice.

I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up Buildbot.
One of tests for Buildbot returns an error:

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1

I am getting the same error both on Ubunty and Leopard. Please advice what could be wrong here?
What does it mean “twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1”?

Thanks
Gal


________________________________
From: Galina Kistanova
Sent: Tuesday, November 03, 2009 1:23 PM
To: twisted-python at twistedmatrix.com
Subject: twisted.internet.error.ProcessTerminated, exit code 1?

Hello all,

I ran into issue with Twisted, could anybody help me?
I have Twisted 8.2.0 on Ubuntu 9.04.
I run tests for Buildbot 0.7.11p3 and one of the tests completed with the next error:

[ERROR]: buildbot.test.test_locks.Locks.testLock3

Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended with a probable error condition: process ended with exit code 1.

Cannot find any information what could cause this.
What “exit code 1 “ means? I tried to stop MsAfee, but this did not help.

Thanks
 Gal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/f7f8046e/attachment.html>

From vitaly at synapticvision.com  Mon Nov  9 12:28:35 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 14:28:35 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
Message-ID: <20091109142835.125276qyl0o7jsco@216.129.205.5>



Caching the results of some particular method calls, so other server  
side methods can access those results (I'm thinking about example of  
global variable per entire server, so once imported, such variable  
content could be access).



Quoting exarkun at twistedmatrix.com:

> On 05:41 pm, vitaly at synapticvision.com wrote:
>> hi,
>> is there any cache mechanism for twisted? Could one point me please to
>> that docs?
>
> What sort of caching are you interested in?  Caching the results of
> method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> total list of possibilities could run to many pages. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>






From foom at fuhm.net  Mon Nov  9 13:22:36 2009
From: foom at fuhm.net (James Y Knight)
Date: Mon, 9 Nov 2009 15:22:36 -0500
Subject: [Twisted-Python] Twisted webserver performance issues
In-Reply-To: <6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>
References: <mailman.97597.1257647916.23374.twisted-python@twistedmatrix.com>
	<4AF63335.9060100@ihug.co.nz>
	<20091108030755.3229.1533062650.divmod.xquotient.355@localhost.localdomain>
	<7137DDF4-402F-4967-B0B4-E7FAB8267A28@fuhm.net>
	<20091108140213.3229.1141763752.divmod.xquotient.376@localhost.localdomain>
	<6952A61F-1F70-4EFA-BF69-07A877318839@fuhm.net>
Message-ID: <4E2C846C-069A-4671-A6E4-508E5526FA46@fuhm.net>


On Nov 8, 2009, at 1:08 PM, James Y Knight wrote:

>>
>> Can we attach gdb to the process and trigger an all-threads stack
>> dump when it happens?
>
> That's a good idea. Unfortunately, currently it seems to be working
> quite smoothly. :)

The intermittent long pauses were happening again, so I got a gdb  
"thread apply all bt". I discovered that there were two threads not in  
sem_wait waiting for GIL to be released. And both were waiting in  
nanosleep. One had the GIL held, the other had released it. The one  
with the GIL held was sleeping inside of sqlite3_prepare, called from  
pysqlite_statement_create.

We were using the pysqlite shipped with python 2.5. Fortunately, the  
latest version of pysqlite standalone has already corrected that  
function to release the GIL around the call to sqlite3, so I  
downloaded and installed it. Hopefully that'll fix the remaining issues.

I also added an Expires header to the static content (of 24hours),  
although I think web browsers are pretty good at not reloading  
referenced content frequently even without an explicit expires, so I  
doubt that it really matters.

James



From exarkun at twistedmatrix.com  Mon Nov  9 15:06:31 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 22:06:31 -0000
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <20091109220631.3229.38019532.divmod.xquotient.571@localhost.localdomain>

On 07:28 pm, vitaly at synapticvision.com wrote:
>
>
>Caching the results of some particular method calls, so other server
>side methods can access those results (I'm thinking about example of
>global variable per entire server, so once imported, such variable
>content could be access).

There's not really anything in Twisted for this.  There are a lot of 
general Python solutions, though:

http://www.google.com/search?q=python+caching&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu 
:en-US:official&client=firefox-a

Jean-Paul



From exarkun at twistedmatrix.com  Mon Nov  9 15:07:46 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Nov 2009 22:07:46 -0000
Subject: [Twisted-Python] Need help with Twisted. Please
In-Reply-To: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>
References: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>
Message-ID: <20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>

On 06:56 pm, gkistanova at accesssoftek.com wrote:
>Dear Twisted developers,
>
>I am not a developer, and definitely need you advice.
>
>I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up 
>Buildbot.
>One of tests for Buildbot returns an error:
>
>Traceback (most recent call last):
>Failure: twisted.internet.error.ProcessTerminated: A process has ended 
>with a probable error condition: process ended with exit code 1
>
>I am getting the same error both on Ubunty and Leopard. Please advice 
>what could be wrong here?
>What does it mean  1Ctwisted.internet.error.ProcessTerminated: A process 
>has ended with a probable error condition: process ended with exit code 
>1 1D?

You may want to ask on the BuildBot list instead.  This seems to be a 
BuildBot specific problem, not something that's directly Twisted 
related.  BuildBot developers should have a better idea about the 
problem and its solution than the people following this list.

Jean-Paul



From Andy at NewWorldElectric.com  Mon Nov  9 15:42:27 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 17:42:27 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>

Part of the beauty of twisted is that you don't actually need to do anything
special to achieve that, just create a global dict or other object of your
choice and access it as needed.  More likely what you need to look for is a
cache expiration mechanism, I've linked in lrucache (
http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
write my own constraints as appropriate.

It's often misunderstood, but in twisted you are writing an actual server
rather than just some methods for servicing requests.  The server will run
until stopped and all global or even local variables will remain in memory
unless deleted or dereferenced and garbage collected.  Rather than doing
something special to get a persistent variable you need to do something
special when you want a non-persistent one.

-Andy

On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:

>
>
> Caching the results of some particular method calls, so other server
> side methods can access those results (I'm thinking about example of
> global variable per entire server, so once imported, such variable
> content could be access).
>
>
>
> Quoting exarkun at twistedmatrix.com:
>
> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> hi,
> >> is there any cache mechanism for twisted? Could one point me please to
> >> that docs?
> >
> > What sort of caching are you interested in?  Caching the results of
> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> > total list of possibilities could run to many pages. :)
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/2fc33294/attachment.html>

From hubbard at sdsc.edu  Mon Nov  9 15:47:09 2009
From: hubbard at sdsc.edu (Paul Hubbard)
Date: Mon, 9 Nov 2009 14:47:09 -0800
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
Message-ID: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>


Both of the links from pypi are dead, alas. Do you know if that  
project is alive somewhere else?

Cheers,
Paul


On Nov 9, 2009, at 2:42 PM, Andy Fundinger wrote:

> Part of the beauty of twisted is that you don't actually need to do  
> anything
> special to achieve that, just create a global dict or other object  
> of your
> choice and access it as needed.  More likely what you need to look  
> for is a
> cache expiration mechanism, I've linked in lrucache (
> http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I  
> just
> write my own constraints as appropriate.
>
> It's often misunderstood, but in twisted you are writing an actual  
> server
> rather than just some methods for servicing requests.  The server  
> will run
> until stopped and all global or even local variables will remain in  
> memory
> unless deleted or dereferenced and garbage collected.  Rather than  
> doing
> something special to get a persistent variable you need to do  
> something
> special when you want a non-persistent one.
>
> -Andy
>
> On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
>
>>
>>
>> Caching the results of some particular method calls, so other server
>> side methods can access those results (I'm thinking about example of
>> global variable per entire server, so once imported, such variable
>> content could be access).
>>
>>
>>
>> Quoting exarkun at twistedmatrix.com:
>>
>>> On 05:41 pm, vitaly at synapticvision.com wrote:
>>>> hi,
>>>> is there any cache mechanism for twisted? Could one point me  
>>>> please to
>>>> that docs?
>>>
>>> What sort of caching are you interested in?  Caching the results of
>>> method calls?  A caching HTTP proxy?  Caching in the DNS client?   
>>> The
>>> total list of possibilities could run to many pages. :)
>>>
>>> Jean-Paul
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> -- 
> Blog:  http://channel3b.wordpress.com
>
> Drinking good coffee makes you wise, drinking bad coffee only makes  
> you
> awake.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From Andy at NewWorldElectric.com  Mon Nov  9 15:56:47 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 17:56:47 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
Message-ID: <37d49ed40911091456g26ba96d8pc259f4e8c1822db6@mail.gmail.com>

No, clue, but I've sent the code to you off list and if anyone else wants it
I'd be glad to do the same.

Andy

On Mon, Nov 9, 2009 at 5:47 PM, Paul Hubbard <hubbard at sdsc.edu> wrote:

>
> Both of the links from pypi are dead, alas. Do you know if that
> project is alive somewhere else?
>
> Cheers,
> Paul
>
>
> On Nov 9, 2009, at 2:42 PM, Andy Fundinger wrote:
>
> > Part of the beauty of twisted is that you don't actually need to do
> > anything
> > special to achieve that, just create a global dict or other object
> > of your
> > choice and access it as needed.  More likely what you need to look
> > for is a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I
> > just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual
> > server
> > rather than just some methods for servicing requests.  The server
> > will run
> > until stopped and all global or even local variables will remain in
> > memory
> > unless deleted or dereferenced and garbage collected.  Rather than
> > doing
> > something special to get a persistent variable you need to do
> > something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >>> On 05:41 pm, vitaly at synapticvision.com wrote:
> >>>> hi,
> >>>> is there any cache mechanism for twisted? Could one point me
> >>>> please to
> >>>> that docs?
> >>>
> >>> What sort of caching are you interested in?  Caching the results of
> >>> method calls?  A caching HTTP proxy?  Caching in the DNS client?
> >>> The
> >>> total list of possibilities could run to many pages. :)
> >>>
> >>> Jean-Paul
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> > --
> > Blog:  http://channel3b.wordpress.com
> >
> > Drinking good coffee makes you wise, drinking bad coffee only makes
> > you
> > awake.
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/8ca81c7d/attachment.html>

From kevin.horn at gmail.com  Mon Nov  9 16:02:45 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 9 Nov 2009 17:02:45 -0600
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<53884DA5-72A3-4ABE-8174-44FB20BA8E08@sdsc.edu>
Message-ID: <562bcc10911091502n118e3a12s272500cc175dd685@mail.gmail.com>

On Mon, Nov 9, 2009 at 4:47 PM, Paul Hubbard <hubbard at sdsc.edu> wrote:

>
> Both of the links from pypi are dead, alas. Do you know if that
> project is alive somewhere else?
>
> Cheers,
> Paul
>
>
There's something that's probably similar here:
http://code.activestate.com/recipes/498245/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/9a515b8c/attachment.html>

From vitaly at synapticvision.com  Mon Nov  9 16:24:20 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Mon, 09 Nov 2009 18:24:20 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
Message-ID: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>


Such global variable(lets say dictionary) will have any size limit?

Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:

> Part of the beauty of twisted is that you don't actually need to do anything
> special to achieve that, just create a global dict or other object of your
> choice and access it as needed.  More likely what you need to look for is a
> cache expiration mechanism, I've linked in lrucache (
> http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
> write my own constraints as appropriate.
>
> It's often misunderstood, but in twisted you are writing an actual server
> rather than just some methods for servicing requests.  The server will run
> until stopped and all global or even local variables will remain in memory
> unless deleted or dereferenced and garbage collected.  Rather than doing
> something special to get a persistent variable you need to do something
> special when you want a non-persistent one.
>
> -Andy
>
> On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
>
>>
>>
>> Caching the results of some particular method calls, so other server
>> side methods can access those results (I'm thinking about example of
>> global variable per entire server, so once imported, such variable
>> content could be access).
>>
>>
>>
>> Quoting exarkun at twistedmatrix.com:
>>
>> > On 05:41 pm, vitaly at synapticvision.com wrote:
>> >> hi,
>> >> is there any cache mechanism for twisted? Could one point me please to
>> >> that docs?
>> >
>> > What sort of caching are you interested in?  Caching the results of
>> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
>> > total list of possibilities could run to many pages. :)
>> >
>> > Jean-Paul
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Blog:  http://channel3b.wordpress.com
>
> Drinking good coffee makes you wise, drinking bad coffee only makes you
> awake.
>





From Andy at NewWorldElectric.com  Mon Nov  9 16:38:18 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 9 Nov 2009 18:38:18 -0500
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<20091109182420.89285p7g5wyxc6ck@216.129.205.5>
Message-ID: <37d49ed40911091538v51c59828v88a8e054e6079799@mail.gmail.com>

Twisted doesn't enforce any, that's part of the effect of you actually
writing the server, defining, enforcing, and adhering to those limits is
left to the developer.  Of course you have a limited amount of space in your
machine, and you probably don't want to use swap, but nothing twisted is
going to limit you on, it doesn't really do anything on that level of
abstraction.

Andy Fundinger

On Mon, Nov 9, 2009 at 6:24 PM, <vitaly at synapticvision.com> wrote:

>
> Such global variable(lets say dictionary) will have any size limit?
>
> Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:
>
> > Part of the beauty of twisted is that you don't actually need to do
> anything
> > special to achieve that, just create a global dict or other object of
> your
> > choice and access it as needed.  More likely what you need to look for is
> a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I
> just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual server
> > rather than just some methods for servicing requests.  The server will
> run
> > until stopped and all global or even local variables will remain in
> memory
> > unless deleted or dereferenced and garbage collected.  Rather than doing
> > something special to get a persistent variable you need to do something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> >> hi,
> >> >> is there any cache mechanism for twisted? Could one point me please
> to
> >> >> that docs?
> >> >
> >> > What sort of caching are you interested in?  Caching the results of
> >> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> >> > total list of possibilities could run to many pages. :)
> >> >
> >> > Jean-Paul
> >> >
> >> > _______________________________________________
> >> > Twisted-Python mailing list
> >> > Twisted-Python at twistedmatrix.com
> >> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >> >
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> > --
> > Blog:  http://channel3b.wordpress.com
> >
> > Drinking good coffee makes you wise, drinking bad coffee only makes you
> > awake.
> >
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com

Drinking good coffee makes you wise, drinking bad coffee only makes you
awake.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091109/6e1dc158/attachment-0001.html>

From doug.farrell at gmail.com  Mon Nov  9 20:24:08 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Mon, 9 Nov 2009 22:24:08 -0500
Subject: [Twisted-Python] Twisted synchronous and asynchronous db connections
Message-ID: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>

Hi all,

Our projects at work include synchronous applications (short lived)
and asynchronous Twisted applications (long lived). We're re-factoring
our database and are going to build an API module to decouple all of
the SQL in that module. I'd like to create that API so both
synchronous and asynchronous applications can use it. For the
synchronous applications I'd like calls to the database API to just
return data (blocking) just like using MySQLdb, but for the
asynchronous applications I'd like calls to the same API
functions/methods to be non-blocking, probably returning a deferred.
Anyone have any hints, suggestions or help they might offer me to do
this?

Thanks in advance,
Doug



From exarkun at twistedmatrix.com  Mon Nov  9 20:43:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Nov 2009 03:43:18 -0000
Subject: [Twisted-Python] Twisted synchronous and asynchronous
	db	connections
In-Reply-To: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
References: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
Message-ID: <20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>

On 03:24 am, doug.farrell at gmail.com wrote:
>Hi all,
>
>Our projects at work include synchronous applications (short lived)
>and asynchronous Twisted applications (long lived). We're re-factoring
>our database and are going to build an API module to decouple all of
>the SQL in that module. I'd like to create that API so both
>synchronous and asynchronous applications can use it. For the
>synchronous applications I'd like calls to the database API to just
>return data (blocking) just like using MySQLdb, but for the
>asynchronous applications I'd like calls to the same API
>functions/methods to be non-blocking, probably returning a deferred.
>Anyone have any hints, suggestions or help they might offer me to do
>this?

Chris Armstrong wrote a synchronous implementation of Deferred.  That 
might be an approach to investigate:

  http://radix.twistedmatrix.com/2007/12/supporting-both-asynchronous- 
and.html

Jean-Paul



From doug.farrell at gmail.com  Tue Nov 10 05:41:56 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Tue, 10 Nov 2009 07:41:56 -0500
Subject: [Twisted-Python] Twisted synchronous and asynchronous db
	connections
In-Reply-To: <20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>
References: <80c54aa0911091924v717d86f6s5d856915a1da98cc@mail.gmail.com>
	<20091110034318.3229.281386210.divmod.xquotient.580@localhost.localdomain>
Message-ID: <80c54aa0911100441jc949c6ci45c2e83342c41bc0@mail.gmail.com>

Jean-Paul,

Thanks for the link, I'm looking at it right now.

Doug

On Mon, Nov 9, 2009 at 10:43 PM,  <exarkun at twistedmatrix.com> wrote:
> On 03:24 am, doug.farrell at gmail.com wrote:
>>Hi all,
>>
>>Our projects at work include synchronous applications (short lived)
>>and asynchronous Twisted applications (long lived). We're re-factoring
>>our database and are going to build an API module to decouple all of
>>the SQL in that module. I'd like to create that API so both
>>synchronous and asynchronous applications can use it. For the
>>synchronous applications I'd like calls to the database API to just
>>return data (blocking) just like using MySQLdb, but for the
>>asynchronous applications I'd like calls to the same API
>>functions/methods to be non-blocking, probably returning a deferred.
>>Anyone have any hints, suggestions or help they might offer me to do
>>this?
>
> Chris Armstrong wrote a synchronous implementation of Deferred.  That
> might be an approach to investigate:
>
>  http://radix.twistedmatrix.com/2007/12/supporting-both-asynchronous-
> and.html
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From morbidux at free.fr  Tue Nov 10 06:25:37 2009
From: morbidux at free.fr (morbidux)
Date: Tue, 10 Nov 2009 14:25:37 +0100 (CET)
Subject: [Twisted-Python] Twisted Client
Message-ID: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>

Hi all,

I'm writing a simple client / server application, that uses a small
protocol to dialog.

I can't find in documentation any exemple that would correspond to what my
client is supposed to do.

Here is the basics :

 every X seconds, call a function that check a file
  if file is different, connect to server

When the client is connected, it immediatly sends data to server, using
the connectionMade method.

Do I need to use while(1) loop or loopingCall ? What is the best way to
write a daemon that connect to a server every X seconds ?

Many thanks.




From kevin.horn at gmail.com  Tue Nov 10 09:27:13 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 10 Nov 2009 10:27:13 -0600
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
Message-ID: <562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>

On Tue, Nov 10, 2009 at 7:25 AM, morbidux <morbidux at free.fr> wrote:

> Hi all,
>
> I'm writing a simple client / server application, that uses a small
> protocol to dialog.
>
> I can't find in documentation any exemple that would correspond to what my
> client is supposed to do.
>
> Here is the basics :
>
>  every X seconds, call a function that check a file
>  if file is different, connect to server
>
> When the client is connected, it immediatly sends data to server, using
> the connectionMade method.
>
> Do I need to use while(1) loop or loopingCall ? What is the best way to
> write a daemon that connect to a server every X seconds ?
>
> Many thanks.
>
>
>
A while loop will probably block your application.  Use loopingCall (or even
callLater, if you want).

Here's an example:
http://www.saltycrane.com/blog/2008/10/running-functions-periodically-using-twisteds-loopingcall/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091110/46173362/attachment.html>

From gkistanova at accesssoftek.com  Tue Nov 10 11:18:02 2009
From: gkistanova at accesssoftek.com (Galina Kistanova)
Date: Tue, 10 Nov 2009 10:18:02 -0800
Subject: [Twisted-Python] Need help with Twisted. Please
In-Reply-To: <20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>
References: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50A@mail.accesssoftek.com>,
	<20091109220746.3229.1032865206.divmod.xquotient.574@localhost.localdomain>
Message-ID: <6AE1604EE3EC5F4296C096518C6B77EEF99DD50C@mail.accesssoftek.com>

Thank you

Gal
________________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com [exarkun at twistedmatrix.com]
Sent: Monday, November 09, 2009 2:07 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Need help with Twisted. Please

On 06:56 pm, gkistanova at accesssoftek.com wrote:
>Dear Twisted developers,
>
>I am not a developer, and definitely need you advice.
>
>I use Twisted 8.2.0 on Ubuntu 9.04 and on MAX Snow Leopard to set up
>Buildbot.
>One of tests for Buildbot returns an error:
>
>Traceback (most recent call last):
>Failure: twisted.internet.error.ProcessTerminated: A process has ended
>with a probable error condition: process ended with exit code 1
>
>I am getting the same error both on Ubunty and Leopard. Please advice
>what could be wrong here?
>What does it mean  1Ctwisted.internet.error.ProcessTerminated: A process
>has ended with a probable error condition: process ended with exit code
>1 1D?

You may want to ask on the BuildBot list instead.  This seems to be a
BuildBot specific problem, not something that's directly Twisted
related.  BuildBot developers should have a better idea about the
problem and its solution than the people following this list.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From ltaylor.volks at gmail.com  Tue Nov 10 16:59:12 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 10 Nov 2009 16:59:12 -0700
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
Message-ID: <4AF9FE50.6000607@gmail.com>

On 11/10/09 6:25 AM, morbidux wrote:
> Hi all,
> 
> I'm writing a simple client / server application, that uses a small
> protocol to dialog.
> 
> I can't find in documentation any exemple that would correspond to what my
> client is supposed to do.
> 
> Here is the basics :
> 
>  every X seconds, call a function that check a file
>   if file is different, connect to server
> 
> When the client is connected, it immediatly sends data to server, using
> the connectionMade method.
> 
> Do I need to use while(1) loop or loopingCall ? What is the best way to
> write a daemon that connect to a server every X seconds ?
> 

You could setup a LoopingCall that calls your file checking function.
Your file checking function can then use
twisted.internet.protocol.ClientCreator to send your data.

A simple example:

import os
from twisted.internet import reactor
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.internet.task import LoopingCall
from twisted.python import log

def gotProtocol(p, data):
    p.transport.write(data)
    p.transport.loseConnection()

def errHandler(reason):
    log.err(reason)

def checkFile():
    if os.path.exists('sentry.file'):
        c = ClientCreator(reactor, Protocol)
        c.connectTCP("localhost", 1234).addCallback(gotProtocol, 'some
data').addErrback(errHandler)

lp = LoopingCall(checkFile)
lp.start(5, now=True)

reactor.run()

--

If you want to maintain state between protocol instances, then create a
ClientFactory. You could look at how ReconnectingClientFactory is
implemented for ideas.

The Writing Clients howto should help:
http://twistedmatrix.com/projects/core/documentation/howto/clients.html


Lucas Taylor



From jarrod at vertigrated.com  Tue Nov 10 19:30:31 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 10 Nov 2009 21:30:31 -0500
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
	<562bcc10911100827k390a039es6f2329216fddf29a@mail.gmail.com>
Message-ID: <fa3d0c740911101830t76100265pa6c5f6cd31b44356@mail.gmail.com>

On Tue, Nov 10, 2009 at 11:27 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Nov 10, 2009 at 7:25 AM, morbidux <morbidux at free.fr> wrote:
>
>> Hi all,
>>
>> I'm writing a simple client / server application, that uses a small
>> protocol to dialog.
>>
>> I can't find in documentation any exemple that would correspond to what my
>> client is supposed to do.
>>
>> Here is the basics :
>>
>>  every X seconds, call a function that check a file
>>  if file is different, connect to server
>>
>> When the client is connected, it immediatly sends data to server, using
>> the connectionMade method.
>>
>> Do I need to use while(1) loop or loopingCall ? What is the best way to
>> write a daemon that connect to a server every X seconds ?
>>
>> Many thanks.
>>
>
What platform? For linux you could do away with the polling and use the
python bindings to inotify.
On OSX there are bindings to FSEvent API. Much better than a polling
solution.

-- 
Jarrod Roberson
678.551.2852
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091110/f6c4608e/attachment-0001.html>

From radix at twistedmatrix.com  Tue Nov 10 20:02:36 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 10 Nov 2009 22:02:36 -0500
Subject: [Twisted-Python] Twisted 9, do you want it
In-Reply-To: <60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>
References: <60ed19d40911052000j553ae87and431653b970e593b@mail.gmail.com>
	<134244B7-2F7C-45CA-B008-D9F4CAA1C9F1@twistedmatrix.com>
	<60ed19d40911081914h6758f84cr34a913f316ecc411@mail.gmail.com>
Message-ID: <60ed19d40911101902s703c8b5bn2559e5324e1274e5@mail.gmail.com>

On Sun, Nov 8, 2009 at 10:14 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Sun, Nov 8, 2009 at 7:57 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> On Nov 5, 2009, at 11:00 PM, Christopher Armstrong wrote:
>>
>>> I'm working on it. The core NEWS file is done I think. NEWS for other
>>> projects will be worked on tomorrow.
>>
>> How's this coming along?
>
> Hi! I've done the web NEWS file as well, which was about as huge as
> the core NEWS file. That was yesterday.
>
> Today, Jean-Paul and I got together to work on getting the new
> HTTP/1.1 + high-level client API branches merged, which I am glad to
> report we have done. I basically sat on his couch shouting out review
> comments and proposed fixes and he hacked it out.
>
> The only significant NEWS files left to write now are the ones for
> conch and probably mail. There weren't many changes to the other
> projects over the last release interval. I should get those done early
> this week.

oh hey, it's early in the week and I've completed all the NEWS files
(though I'm sure I'll have to do one or two more tweaks). Anyway, I'll
start updating version numbers and generating tarballs and so forth in
the coming couple of days.



-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From morbidux at free.fr  Wed Nov 11 01:50:37 2009
From: morbidux at free.fr (morbidux)
Date: Wed, 11 Nov 2009 09:50:37 +0100 (CET)
Subject: [Twisted-Python] Twisted Client
In-Reply-To: <4AF9FE50.6000607@gmail.com>
References: <51855.213.11.125.118.1257859537.squirrel@privat.servux.homelinux.org>
	<4AF9FE50.6000607@gmail.com>
Message-ID: <43340.192.168.0.120.1257929437.squirrel@privat.servux.homelinux.org>

Many thanks for your solution.
I've implemented it with success.

Best regards.

| On 11/10/09 6:25 AM, morbidux wrote:
|> Hi all,
|>
|> I'm writing a simple client / server application, that uses a small
|> protocol to dialog.
|>
|> I can't find in documentation any exemple that would correspond to what
|> my
|> client is supposed to do.
|>
|> Here is the basics :
|>
|>  every X seconds, call a function that check a file
|>   if file is different, connect to server
|>
|> When the client is connected, it immediatly sends data to server, using
|> the connectionMade method.
|>
|> Do I need to use while(1) loop or loopingCall ? What is the best way to
|> write a daemon that connect to a server every X seconds ?
|>
|
| You could setup a LoopingCall that calls your file checking function.
| Your file checking function can then use
| twisted.internet.protocol.ClientCreator to send your data.
|
| A simple example:
|
| import os
| from twisted.internet import reactor
| from twisted.internet.protocol import Protocol, ClientCreator
| from twisted.internet.task import LoopingCall
| from twisted.python import log
|
| def gotProtocol(p, data):
|     p.transport.write(data)
|     p.transport.loseConnection()
|
| def errHandler(reason):
|     log.err(reason)
|
| def checkFile():
|     if os.path.exists('sentry.file'):
|         c = ClientCreator(reactor, Protocol)
|         c.connectTCP("localhost", 1234).addCallback(gotProtocol, 'some
| data').addErrback(errHandler)
|
| lp = LoopingCall(checkFile)
| lp.start(5, now=True)
|
| reactor.run()
|
| --
|
| If you want to maintain state between protocol instances, then create a
| ClientFactory. You could look at how ReconnectingClientFactory is
| implemented for ideas.
|
| The Writing Clients howto should help:
| http://twistedmatrix.com/projects/core/documentation/howto/clients.html
|
|
| Lucas Taylor
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|
|
|





From newptcai at gmail.com  Wed Nov 11 09:55:48 2009
From: newptcai at gmail.com (Peter Cai)
Date: Thu, 12 Nov 2009 00:55:48 +0800
Subject: [Twisted-Python] Using sqlalchemy in twisted.
Message-ID: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>

If you Google "sqlalchemy twisted", you can see my post is on the top:

http://groups.google.com/group/sqlalchemy/browse_thread/thread/c802749c9d0dd6

I've been busy for a long time so I didn't considered this question
anymore.  But occasionally, I got some new ideas today.

I was suggested to sandbox sqlalchemy into process contains a single thread.
At that time, I thought it was just the same as using deferToThread
and makes no scenes to have the overhead of IPC.

But now I see the benefits.

A single thread process makes it possible to use a sqlalchemy session
as a cache.  That would greatly reduce the chances to lookup database.
This could not be done with deferToThread because it uses thread pool.
 So there shall be more than one session and the state of cached
objects will conflict.

But there are still one problem : how to transfer a sqlalchemy object
between 2 process?  Some kind of serialization and de-serialization is
needed.  Without test, it's too early to tell if it works.

-- 
look to the things around you,the immediate world around you, if you
are alive,it will mean something to you ——Paul Strand



From kevin.horn at gmail.com  Wed Nov 11 15:52:15 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 11 Nov 2009 16:52:15 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
Message-ID: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>

Back in July, there was a long discussion thread regarding Twisted
Documentation, and the idea of switching to Sphinx came up.  Here's
probably the culmination of that thread:

http://twistedmatrix.com/pipermail/twisted-python/2009-July/020114.html

To summarize, Glyph laid out the following items that would need to happen
in
order for Twisted to move from Lore to another documentation system:

1. Someone would have to volunteer to maintain the documentation
   infrastructure and teach others to use it.

2. Submit a complete proposal outlining benefits for the move so that it
   could be discussed rationally without having to chase down lots of little

   bits in email, irc, etc.

3. Address the transition process.

So I went away and did some thinking, and some research and some
experimenting, and I decided that I really want this to happen.

So I am hereby volunteering to manage a Sphinx-based documentation
infrastructure (should there eventually be one) for the Twisted project
as well as the transition to said system.

I have written up a proposal here:

http://twistedsphinx.funsize.net/proposal.html

that I think addresses at least the main points of what should need to
happen
in order to move from Lore to Sphinx.  It's not quite finished, but I think
it's close enough for people to start discussing it.  In particular, there
are a few claims I've made about Lore and it's capabilities that I'm not
quite sure of (just search for the question marks).

I would very much like to get some feedback from the community (especially
the core developers) on this proposal. I'd especially like to hear about:

- things which are not addressed and should be.
- anything that is addressed in the proposal, but you think should be done
  in a different way.
- Lore's capabilities.

Please let me know what you think.

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091111/522a46cc/attachment.html>

From glyph at twistedmatrix.com  Wed Nov 11 16:56:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Nov 2009 18:56:49 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
Message-ID: <082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>


On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:

> Please let me know what you think.

Initial reaction: awesome!

I don't really care about the documentation format or tools, I'm just thrilled that someone is willing to step forward and maintain them in _any_ form.

Secondary reaction: automated testing of code and examples is great.  Necessary, even, especially for a new tool.  But doctests are not so much a testing plan as a disease that comes to infest your code.

(You are free to disagree with me about the utility or quality of doctest as a tool, but doing so on this mailing list is counterproductive, as my mind is pretty well made up.  Despite the fact that I have fond feelings towards lore's design, this is the *only* point I'd veto a migration over.)

Automated tests for documentation should look roughly like this:

    http://divmod.org/trac/browser/trunk/Nevow/nevow/test/test_howtolistings.py?rev=17299

but the stuff that does "sys.modules.clear()" and so on should be a lot further away from the actual test cases.

The only thing that is necessary for testing like that to work is the ability to reference an external .py file as a code listing.  This is also a good thing because then users can just run the Python files straight in the examples directory, rather than copying some stuff from a web browser into a text editor, mucking around with path variables for a while, trying to make sure they got the indentation right etc.

Can sphinx do that out of the box?

Tertiary reaction, since I had to go to divmod.org to dig up that example: a migration plan should include the Divmod projects, especially Nevow, since a lot of people use that.  But, if there's an automated tool that can handle the Twisted conversion, there really shouldn't be any additional effort to just run it over the Divmod codebase and just check in the result.  The only real work will be in adjusting the buildbot.  This is really just an argument for an automated, repeatable conversion process rather than manual editing.




From kevin.horn at gmail.com  Wed Nov 11 17:37:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 11 Nov 2009 18:37:01 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
Message-ID: <562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>

On Wed, Nov 11, 2009 at 5:56 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:
>
> > Please let me know what you think.
>
> Initial reaction: awesome!
>
>
Well, that's encouraging. :)


> I don't really care about the documentation format or tools, I'm just
> thrilled that someone is willing to step forward and maintain them in _any_
> form.
>
> Secondary reaction: automated testing of code and examples is great.
>  Necessary, even, especially for a new tool.  But doctests are not so much a
> testing plan as a disease that comes to infest your code.
>
> (You are free to disagree with me about the utility or quality of doctest
> as a tool, but doing so on this mailing list is counterproductive, as my
> mind is pretty well made up.  Despite the fact that I have fond feelings
> towards lore's design, this is the *only* point I'd veto a migration over.)
>

I never use doctests in my own projects...but the functionality comes with
Sphinx (as a "built-in extension"...which such a fantastic oxymoron it makes
me smile).

There's lot's of other work being done in the Sphinx testing arena, though,
notably:

Sphinxtest:
http://groups.google.com/group/sphinx-dev/browse_thread/thread/fd9fc42648fc306c#
Manuel: http://packages.python.org/manuel/

and something-I-read-about-the-other-day-but-can't-find-now.


> Automated tests for documentation should look roughly like this:
>
>
> http://divmod.org/trac/browser/trunk/Nevow/nevow/test/test_howtolistings.py?rev=17299
>
> but the stuff that does "sys.modules.clear()" and so on should be a lot
> further away from the actual test cases.
>
> The only thing that is necessary for testing like that to work is the
> ability to reference an external .py file as a code listing.  This is also a
> good thing because then users can just run the Python files straight in the
> examples directory, rather than copying some stuff from a web browser into a
> text editor, mucking around with path variables for a while, trying to make
> sure they got the indentation right etc.
>
> Can sphinx do that out of the box?
>

Yes.  The "literalinclude" directive pulls in an external file and sticks it
in a literal block (the ReST equivalent of a <pre> tag).  So you could use
whatever testing framework you wanted and just reference those files.


>
> Tertiary reaction, since I had to go to divmod.org to dig up that example:
> a migration plan should include the Divmod projects, especially Nevow, since
> a lot of people use that.  But, if there's an automated tool that can handle
> the Twisted conversion, there really shouldn't be any additional effort to
> just run it over the Divmod codebase and just check in the result.  The only
> real work will be in adjusting the buildbot.  This is really just an
> argument for an automated, repeatable conversion process rather than manual
> editing.
>
>
Hmmm...I hadn't considered the Divmod stuff, but you're right.

I think the automated conversion plan is the way to go...up to a point.  As
I laid out in the proposal, I think at some point, the Sphinx docs (and the
automated conversion process) will become "good enough", and then edits
should be done manually to the ReST/Sphinx source files, rather than the
Lore files.  Otherwise you just end up with another tool to maintain
forever.  And in my opinion, Twisted needs to get away from having it's own
collection of self-maintained tools as much as possible. :)

I have some basic code for the conversion process, but it's in a VERY
preliminary state, and needs a fair bit of work.  There's still several tags
it doesn't handle at all (including tables, which _might_ be a real beast),
and it needs to be refactored some.  I mostly wrote it as a proof-of-concept
for myself to prove (to myself) that automated conversion was feasible.
 That said, it _will_ generate a buildable Sphinx project (though it's
currently VERY ugly, and generates warning in the hundreds).

If there's interest, I can put up what I can generate to this point, though
it's awfully early days yet.


Also:
Were my claims/assumption about Lore pretty much correct?  Did I miss
anything?

Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091111/887bc52c/attachment.html>

From glyph at twistedmatrix.com  Wed Nov 11 22:22:19 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 Nov 2009 00:22:19 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
Message-ID: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>

On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:

> On Wed, Nov 11, 2009 at 5:56 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> On Nov 11, 2009, at 5:52 PM, Kevin Horn wrote:
> 
> > Please let me know what you think.
> 
> Initial reaction: awesome!
> 
> Well, that's encouraging. :)

Please!  Be encouraged!  And therefore maintain our documentation and documentation toolchain! :)

> There's lot's of other work being done in the Sphinx testing arena, though, notably: ...

It's great to see that the testing vibe is out there!

> Can sphinx do that out of the box?
> 
> Yes.  The "literalinclude" directive pulls in an external file and sticks it in a literal block (the ReST equivalent of a <pre> tag).  So you could use whatever testing framework you wanted and just reference those files.

Excellent.  In that case (modulo several weeks of work on your part), I'm sold.

> Hmmm...I hadn't considered the Divmod stuff, but you're right. 

I'm glad you think so.  I do tend to be, especially about Twisted ;-).

> I think the automated conversion plan is the way to go...up to a point.  As I laid out in the proposal, I think at some point, the Sphinx docs (and the automated conversion process) will become "good enough", and then edits should be done manually to the ReST/Sphinx source files, rather than the Lore files.  Otherwise you just end up with another tool to maintain forever.

Well, sure.  The goal of this process is to delete all the lore files and check in a bunch of sphinx files which replace them.  This should be done in a branch, and reviewed like usual; the automated tool is just to make the process easier and more reliable.

You have two options regarding the Divmod projects; either you can make the tool good enough that you just run it, or you can commit to putting the work into the minor edits to correct the tool's deficiencies on the Divmod lore docs _before_ you can remove / desupport twisted.lore.

Another thing to note in the migration plan: despite <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>, no deprecation period should be necessary for lore, it can just be removed.  It has no users that I'm aware of, and if anyone does still use it they can manually copy their 'twisted/lore' directory and 'lore' script into new installations until they have a chance to run your script.  It's not designed to be used as a library anyway; it's a bit of an accident that it's even present in the twisted/* tree.

One thing to note in the mig	ration plan is the closing of outstanding branches with lore changes in them.  This would be a good topic for a sprint.

> And in my opinion, Twisted needs to get away from having it's own collection of self-maintained tools as much as possible. :)

Not just your opinion :).

> I have some basic code for the conversion process, but it's in a VERY preliminary state, and needs a fair bit of work.  There's still several tags it doesn't handle at all (including tables, which _might_ be a real beast), and it needs to be refactored some.  I mostly wrote it as a proof-of-concept for myself to prove (to myself) that automated conversion was feasible.  That said, it _will_ generate a buildable Sphinx project (though it's currently VERY ugly, and generates warning in the hundreds).
> 
> If there's interest, I can put up what I can generate to this point, though it's awfully early days yet.

Release early, release often.  Most efforts like this end up moribund: you sound serious right now, but never underestimate the extent to which life will get in the way.  If you put up what you've got somewhere public ASAP, (A) some people will probably show up to egg you on, (B) it's possible for them to contribute (and those contributions will be a motivation on days when this seems like a ridiculous amount of effort just to make Twisted's docs look nicer), and (C) they can pick up the slack if you need to disappear, either temporarily or permanently.

*don't* try to get your migration tools to the state where they can get through Twisted code review, etc.  Hopefully we can throw these away quickly.

> Also:
> Were my claims/assumption about Lore pretty much correct?  Did I miss anything?

Your claim about highlighting only python is correct.  See twisted.lore.tree.munge (is it any wonder that we need to replace this thing), specifically the bit where it calls fontifyPython and there is no definition of fontifyAnythingElse.

The "docs errors throw build warnings" thing is an extremely confusing header, although I understand what you're saying.  I'd re-word the whole thing in terms of test integration.  But the important point has nothing to do with doctest, it's that sphinx has various bits of testing support, including "leave the examples outside the documentation so they're just regular python and don't need to be parsed".

There's a "*" for "requires plugin" - it's worth mentioning that Sphinx has a usable, and more importantly *actually used by some people*, extension API, whereas lore's extension mechanisms are... ahem.  Let's not talk about lore's extension mechanism.

You do need to address linking *from* sphinx documentation *to* API documentation, and ideally, vice versa.  Lore can do the former, via 'class="API"', although pydoctor still has no way to do the latter (see <http://twistedmatrix.com/trac/ticket/2801>).

I don't know of any other projects (besides the ones on divmod.org) which currently use lore.  The only other one I'm aware of that ever did is <https://launchpad.net/thinkcspy>, and they switched to using sphinx input a while ago.  Maybe you could bug Jeff Elkner and see if he did any automation which might help?

You're correct that lore cannot include partial external files.

In your description of 'phase 0', you say "once it has been verified": be specific here.  Nobody is going to want to be the one who actually pulls a trigger on a change this big, but it needs to get done.  Propose a specific mechanism for the verification.  Lay out a timeline which culminates in the ReST files being committed to trunk.  It's too early for specific dates, but you can say "first we will do X, then we will do Y".

In general though, your representation of Lore seems accurate.

Thanks again for taking this on.  Good luck!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091112/8d1a1f94/attachment.html>

From exarkun at twistedmatrix.com  Thu Nov 12 06:01:48 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Nov 2009 13:01:48 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
Message-ID: <20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>

On 05:22 am, glyph at twistedmatrix.com wrote:
>On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:
>
>You're correct that lore cannot include partial external files.

Actually, it has limited support for this.  The PB documentation relies 
on it (search for "skipLines" in doc/core/howto).  And if it were 
implemented better, I think I would find it a useful feature.

Jean-Paul



From eero.nevalainen at indagon.com  Thu Nov 12 06:44:12 2009
From: eero.nevalainen at indagon.com (Eero Nevalainen)
Date: Thu, 12 Nov 2009 15:44:12 +0200
Subject: [Twisted-Python] Using sqlalchemy in twisted.
In-Reply-To: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
References: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
Message-ID: <4AFC112C.50403@indagon.com>

Peter Cai wrote:
> If you Google "sqlalchemy twisted", you can see my post is on the top:
> 
> http://groups.google.com/group/sqlalchemy/browse_thread/thread/c802749c9d0dd6
> 
> I've been busy for a long time so I didn't considered this question
> anymore.  But occasionally, I got some new ideas today.
> 
> I was suggested to sandbox sqlalchemy into process contains a single thread.
> At that time, I thought it was just the same as using deferToThread
> and makes no scenes to have the overhead of IPC.
> 
> But now I see the benefits.
> 
> A single thread process makes it possible to use a sqlalchemy session
> as a cache.  That would greatly reduce the chances to lookup database.
> This could not be done with deferToThread because it uses thread pool.
>  So there shall be more than one session and the state of cached
> objects will conflict.
> 
> But there are still one problem : how to transfer a sqlalchemy object
> between 2 process?  Some kind of serialization and de-serialization is
> needed.  Without test, it's too early to tell if it works.
> 

Is there a reason why multiprocessing could not be used?

http://docs.python.org/library/multiprocessing.html#exchanging-objects-between-processes

-- 
Eero Nevalainen



From p.mayers at imperial.ac.uk  Thu Nov 12 08:10:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 12 Nov 2009 15:10:30 +0000
Subject: [Twisted-Python] Using sqlalchemy in twisted.
In-Reply-To: <4AFC112C.50403@indagon.com>
References: <befee6d80911110855w2fd93568xa44cd1216e5209cb@mail.gmail.com>
	<4AFC112C.50403@indagon.com>
Message-ID: <4AFC2566.5020105@imperial.ac.uk>

> Is there a reason why multiprocessing could not be used?
> 
> http://docs.python.org/library/multiprocessing.html#exchanging-objects-between-processes
> 

Yes


http://twistedmatrix.com/trac/ticket/3901



From koblas at extra.com  Thu Nov 12 10:10:59 2009
From: koblas at extra.com (David Koblas)
Date: Thu, 12 Nov 2009 09:10:59 -0800
Subject: [Twisted-Python] Thrift/Twisted reconnecting client .. code review?
Message-ID: <4AFC41A3.6060907@extra.com>

I just got done putting together a reconnecting client (with queuing) 
for twisted.  While it appears to work for me in practice, if anybody 
has a few minutes to do a quick code review that would be really handy.  
This is based on another thrift client, but in the end totally gutted 
and now hopefully works, though I have to say there are always enough 
edge cases with the twisted model that I'm never sure.

Code is available here..
    http://www.skitoy.com/p/twisted-code-review/261

Thanks,
--david




From kevin.horn at gmail.com  Thu Nov 12 10:36:23 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 11:36:23 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
Message-ID: <562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>

On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

Excellent.  In that case (modulo several weeks of work on your part), I'm
> sold.
>

Hooray!


> Hmmm...I hadn't considered the Divmod stuff, but you're right.
>
>
> I'm glad you think so.  I do tend to be, especially about Twisted ;-).
>
> I think the automated conversion plan is the way to go...up to a point.  As
> I laid out in the proposal, I think at some point, the Sphinx docs (and the
> automated conversion process) will become "good enough", and then edits
> should be done manually to the ReST/Sphinx source files, rather than the
> Lore files.  Otherwise you just end up with another tool to maintain
> forever.
>
>
> Well, sure.  The goal of this process is to delete all the lore files and
> check in a bunch of sphinx files which replace them.  This should be done in
> a branch, and reviewed like usual; the automated tool is just to make the
> process easier and more reliable.
>
> You have two options regarding the Divmod projects; either you can make the
> tool good enough that you just run it, or you can commit to putting the work
> into the minor edits to correct the tool's deficiencies on the Divmod lore
> docs _before_ you can remove / desupport twisted.lore.
>

I think the second option is probably what will end up happening, though it
may not be necessary to do too much of this.  So far, I've only got 3 files
in the Twisted Lore docs that wil definitely need reworking before they can
be processed.  And they have some really strange markup.  So maybe there
won't be too much of this in the Divmod stuff. (crossing fingers!)


> Another thing to note in the migration plan: despite <
> http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>, no deprecation
> period should be necessary for lore, it can just be removed.  It has no
> users that I'm aware of, and if anyone does still use it they can manually
> copy their 'twisted/lore' directory and 'lore' script into new installations
> until they have a chance to run your script.  It's not designed to be used
> as a library anyway; it's a bit of an accident that it's even present in the
> twisted/* tree.
>
> One thing to note in the migration plan is the closing of outstanding
> branches with lore changes in them.  This would be a good topic for a
> sprint.
>

Yikes.  Another thing I hadn't considered.  Depending on how many branches
there, this could get nasty.  I'll have to do some thinking on this.


> And in my opinion, Twisted needs to get away from having it's own
> collection of self-maintained tools as much as possible. :)
>
> Not just your opinion :).
>

Glad to hear it :).

I have some basic code for the conversion process, but it's in a VERY
preliminary state, and needs a fair bit of work.  There's still several tags
it doesn't handle at all (including tables, which _might_ be a real beast),
and it needs to be refactored some.  I mostly wrote it as a proof-of-concept
for myself to prove (to myself) that automated conversion was feasible.
 That said, it _will_ generate a buildable Sphinx project (though it's
currently VERY ugly, and generates warning in the hundreds).

If there's interest, I can put up what I can generate to this point, though
it's awfully early days yet.

Release early, release often.  Most efforts like this end up moribund: you
> sound serious right now, but never underestimate the extent to which life
> will get in the way.  If you put up what you've got somewhere public ASAP,
> (A) some people will probably show up to egg you on, (B) it's possible for
> them to contribute (and those contributions will be a motivation on days
> when this seems like a ridiculous amount of effort just to make Twisted's
> docs look nicer), and (C) they can pick up the slack if you need to
> disappear, either temporarily or permanently.
>

I'll try to put up what I've got later today.



> *don't* try to get your migration tools to the state where they can get
> through Twisted code review, etc.  Hopefully we can throw these away
> quickly.
>

Roger that.

Also:
> Were my claims/assumption about Lore pretty much correct?  Did I miss
> anything?
>
> Your claim about highlighting only python is correct.  See
> twisted.lore.tree.munge (is it any wonder that we need to replace this
> thing), specifically the bit where it calls fontifyPython and there is no
> definition of fontifyAnythingElse.
>

Noted.



> The "docs errors throw build warnings" thing is an extremely confusing
> header, although I understand what you're saying.  I'd re-word the whole
> thing in terms of test integration.  But the important point has nothing to
> do with doctest, it's that sphinx has various bits of testing support,
> including "leave the examples outside the documentation so they're just
> regular python and don't need to be parsed".
>

I've just removed this whole section, as it _was_ confusing, and also mostly
redundant.



> There's a "*" for "requires plugin" - it's worth mentioning that Sphinx has
> a usable, and more importantly *actually used by some people*, extension
> API, whereas lore's extension mechanisms are... ahem.  Let's not talk about
> lore's extension mechanism.
>

I've added something about this.



> You do need to address linking *from* sphinx documentation *to* API
> documentation, and ideally, vice versa.  Lore can do the former, via
> 'class="API"', although pydoctor still has no way to do the latter (see <
> http://twistedmatrix.com/trac/ticket/2801>).
>

This should be doable.  Right now I'm thinking of doing something similar to
an existing extension, which creates links to generated Epydoc API docs.
Shouldn't be too hard to do something similar for pyDoctor.  I'll get
something in the proposal.



> I don't know of any other projects (besides the ones on divmod.org) which
> currently use lore.  The only other one I'm aware of that ever did is <
> https://launchpad.net/thinkcspy>, and they switched to using sphinx input
> a while ago.  Maybe you could bug Jeff Elkner and see if he did any
> automation which might help?
>
>
> In your description of 'phase 0', you say "once it has been verified": be
> specific here.  Nobody is going to want to be the one who actually pulls a
> trigger on a change this big, but it needs to get done.  Propose a specific
> mechanism for the verification.  Lay out a timeline which culminates in the
> ReST files being committed to trunk.  It's too early for specific dates, but
> you can say "first we will do X, then we will do Y".
>

I'll try to get this updated a bit later.



> In general though, your representation of Lore seems accurate.
>
> Thanks again for taking this on.  Good luck!
>

Thanks.  I have a feeling I'll need it :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091112/44ed29ee/attachment.html>

From kevin.horn at gmail.com  Thu Nov 12 10:36:59 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 11:36:59 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<20091112130148.3229.1413135855.divmod.xquotient.651@localhost.localdomain>
Message-ID: <562bcc10911120936u20b5b6a3v62283ee70485093@mail.gmail.com>

On Thu, Nov 12, 2009 at 7:01 AM, <exarkun at twistedmatrix.com> wrote:

> On 05:22 am, glyph at twistedmatrix.com wrote:
> >On Nov 11, 2009, at 7:37 PM, Kevin Horn wrote:
> >
> >You're correct that lore cannot include partial external files.
>
> Actually, it has limited support for this.  The PB documentation relies
> on it (search for "skipLines" in doc/core/howto).  And if it were
> implemented better, I think I would find it a useful feature.
>
> Jean-Paul
>
>
>
Updated in the proposal.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091112/45201f36/attachment.html>

From vitaly at synapticvision.com  Thu Nov 12 10:47:29 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 12:47:29 -0500
Subject: [Twisted-Python] Amount of concurrent connections
Message-ID: <20091112124729.17252ovrg3xl396o@216.129.205.5>

hi,
what would be expected amount(+-) of concurrent connections for  
twisted reactor if single request to gateway eq 1Kb and response back  
30Kb (I mean response data much more bigger than request)? (1Gb  
network card on twisted machine)

Appreciate the help.




From vitaly at synapticvision.com  Thu Nov 12 10:50:06 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 12:50:06 -0500
Subject: [Twisted-Python] Multi-reactor architecture
Message-ID: <20091112125006.24731mma3lcylakg@216.129.205.5>

hi,
what would be the right thing to start from in order to build  
multi-reactor arch to handle thousands of concurrent connections?

Appreciate the help.




From art at academ.org  Thu Nov 12 10:58:15 2009
From: art at academ.org (Bokhan Artem)
Date: Thu, 12 Nov 2009 23:58:15 +0600
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <20091112124729.17252ovrg3xl396o@216.129.205.5>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
Message-ID: <4AFC4CB7.1000702@academ.org>

vitaly at synapticvision.com пишет:
> hi,
> what would be expected amount(+-) of concurrent connections

Why this should depend on size of responses/requests?

  for
> twisted reactor if single request to gateway eq 1Kb and response back  
> 30Kb (I mean response data much more bigger than request)? (1Gb  
> network card on twisted machine)
> 
> Appreciate the help.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From vitaly at synapticvision.com  Thu Nov 12 11:03:19 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:03:19 -0500
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <4AFC4CB5.4080300@indagon.com>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
	<4AFC4CB5.4080300@indagon.com>
Message-ID: <20091112130319.235560hb2w5qft0k@216.129.205.5>


Sorry, forgot to mention, per second.
Amount of concurrent connections per second.

Quoting "Eero Nevalainen" <eero.nevalainen at indagon.com>:

> vitaly at synapticvision.com wrote:
>> hi,
>> what would be expected amount(+-) of concurrent connections for    
>> twisted reactor if single request to gateway eq 1Kb and response   
>> back  30Kb (I mean response data much more bigger than request)?   
>> (1Gb  network card on twisted machine)
>>
>> Appreciate the help.
>
> If a connection arrives once a day, I'd say a very low amount.
>
> Be more specific...
>
> -- 
> Eero Nevalainen
>






From vitaly at synapticvision.com  Thu Nov 12 11:05:45 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:05:45 -0500
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <4AFC4CB7.1000702@academ.org>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>
	<4AFC4CB7.1000702@academ.org>
Message-ID: <20091112130545.627250r7km4jmd0c@216.129.205.5>


Of course its also depend on frequency of r/r, but also on size of  
data. Or am I missing something?

Quoting "Bokhan Artem" <art at academ.org>:

> vitaly at synapticvision.com пишет:
>> hi,
>> what would be expected amount(+-) of concurrent connections
>
> Why this should depend on size of responses/requests?
>
>   for
>> twisted reactor if single request to gateway eq 1Kb and response back
>> 30Kb (I mean response data much more bigger than request)? (1Gb
>> network card on twisted machine)
>>
>> Appreciate the help.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From rlotun at gmail.com  Thu Nov 12 11:09:27 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 12 Nov 2009 18:09:27 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112125006.24731mma3lcylakg@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
Message-ID: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>

> hi,
> what would be the right thing to start from in order to build
> multi-reactor arch to handle thousands of concurrent connections?

Why would you want multiple reactors? The only reason would be to have
one per CPU core. For that the simplest thing would be to manually
start n twistd processes, one per core and have a reverse proxy
process listening on a port and distributing connections to each
twistd process. Of course, you can extend this architecture to
multiple machines.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From vitaly at synapticvision.com  Thu Nov 12 11:23:30 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:23:30 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
Message-ID: <20091112132330.154810f35jpqlz1c@216.129.205.5>


How reverse proxy knows to balance between couple of twistd processes?
Do you have may be an example(or doc link) of such proxy that can  
distributing connections to each twistd process?


Quoting "Reza Lotun" <rlotun at gmail.com>:

>> hi,
>> what would be the right thing to start from in order to build
>> multi-reactor arch to handle thousands of concurrent connections?
>
> Why would you want multiple reactors? The only reason would be to have
> one per CPU core. For that the simplest thing would be to manually
> start n twistd processes, one per core and have a reverse proxy
> process listening on a port and distributing connections to each
> twistd process. Of course, you can extend this architecture to
> multiple machines.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From art at academ.org  Thu Nov 12 11:37:40 2009
From: art at academ.org (Bokhan Artem)
Date: Fri, 13 Nov 2009 00:37:40 +0600
Subject: [Twisted-Python] Amount of concurrent connections
In-Reply-To: <20091112130319.235560hb2w5qft0k@216.129.205.5>
References: <20091112124729.17252ovrg3xl396o@216.129.205.5>	<4AFC4CB5.4080300@indagon.com>
	<20091112130319.235560hb2w5qft0k@216.129.205.5>
Message-ID: <4AFC55F4.2040300@academ.org>

vitaly at synapticvision.com пишет:
> Sorry, forgot to mention, per second.
> Amount of concurrent connections per second.

Just for example, in my tests standard twisted http server can do about 1k dummy 
req/resp per second on one modern cpu core.

> 
> Quoting "Eero Nevalainen" <eero.nevalainen at indagon.com>:
> 
>> vitaly at synapticvision.com wrote:
>>> hi,
>>> what would be expected amount(+-) of concurrent connections for    
>>> twisted reactor if single request to gateway eq 1Kb and response   
>>> back  30Kb (I mean response data much more bigger than request)?   
>>> (1Gb  network card on twisted machine)
>>>
>>> Appreciate the help.
>> If a connection arrives once a day, I'd say a very low amount.
>>
>> Be more specific...
>>
>> -- 
>> Eero Nevalainen
>>
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From rlotun at gmail.com  Thu Nov 12 11:40:43 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 12 Nov 2009 18:40:43 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112132330.154810f35jpqlz1c@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
Message-ID: <95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>

> How reverse proxy knows to balance between couple of twistd processes?
> Do you have may be an example(or doc link) of such proxy that can
> distributing connections to each twistd process?

This is a classic distributed systems architecture. A reverse proxy
can either something like haproxy, nginx, apache, perlbal or whatever
(even another twisted process). The twistd processes can be seen as
simply other machines on a LAN - instead they all have the
127.0.0.1:<port> where the port is different for each process. I don't
have a more comprehensive example, but there are many many examples of
reverse proxying servers all over the place - google "nginx reverse
proxy" for many examples.

Hope that helps.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From vitaly at synapticvision.com  Thu Nov 12 11:53:54 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 12 Nov 2009 13:53:54 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
	<95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
Message-ID: <20091112135354.42144z676sugzqo8@216.129.205.5>


You right, distributed systems architecture.

Probably I need to rephrase my question more precisely: how to build  
distributed system architecture with Twisted technology only ?

As you mentioned, even reverse proxy could be a another twisted process.

Quoting "Reza Lotun" <rlotun at gmail.com>:

>> How reverse proxy knows to balance between couple of twistd processes?
>> Do you have may be an example(or doc link) of such proxy that can
>> distributing connections to each twistd process?
>
> This is a classic distributed systems architecture. A reverse proxy
> can either something like haproxy, nginx, apache, perlbal or whatever
> (even another twisted process). The twistd processes can be seen as
> simply other machines on a LAN - instead they all have the
> 127.0.0.1:<port> where the port is different for each process. I don't
> have a more comprehensive example, but there are many many examples of
> reverse proxying servers all over the place - google "nginx reverse
> proxy" for many examples.
>
> Hope that helps.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From kevin.horn at gmail.com  Thu Nov 12 12:11:52 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 12 Nov 2009 13:11:52 -0600
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091112135354.42144z676sugzqo8@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091112132330.154810f35jpqlz1c@216.129.205.5>
	<95bb10690911121040h1dd290e2vceca30c05d7bfe2b@mail.gmail.com>
	<20091112135354.42144z676sugzqo8@216.129.205.5>
Message-ID: <562bcc10911121111s2b9cc223tf323155d08195dad@mail.gmail.com>

On Thu, Nov 12, 2009 at 12:53 PM, <vitaly at synapticvision.com> wrote:

>
> You right, distributed systems architecture.
>
> Probably I need to rephrase my question more precisely: how to build
> distributed system architecture with Twisted technology only ?
>
> As you mentioned, even reverse proxy could be a another twisted process.
>
>
You might look at txLoadBalancer: https://launchpad.net/txloadbalancer

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091112/0e1c762e/attachment.html>

From doug.farrell at gmail.com  Fri Nov 13 07:32:25 2009
From: doug.farrell at gmail.com (Doug Farrell)
Date: Fri, 13 Nov 2009 09:32:25 -0500
Subject: [Twisted-Python] synchronous/asynchronous api: possible interface
Message-ID: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>

Hi all,

I'd like to get some comments on the code below (including, "don't be
a bonehead!" <g>). I'm trying to write a API library for database
access that can be used by both synchronous (non-twisted, no reactor)
code and asynchronous (twisted, with reactor) code where the methods
of the library can called in either environment. What I'd like is the
method to return the results of the call (database query results) when
in synchronous mode, and a deferred that is a result of the database
call in asynchronous mode.

What I've done below is create a decorator class called CallerMode
that is used to decorate a function/method that normally returns a
deferred. If the CallerMode class is in synchronous mode it starts a
reactor to get the default callbacks to get called, which gets the
results or exceptions, and stops the reactor.

Am I being a dunce doing this kind of thing? Any suggestions,
comments, etc. are welcome.

Thanks!
Doug


import sys
from functools import wraps
from twisted.internet import reactor
from twisted.python import log
from twisted.web.client import getPage


class CallerMode(object):
    '''This is a decorator class to make calls to an api play nice
    in synchronous or asynchronous mode'''
    ASYNCH = 'asynch'
    SYNCH  = 'synch'
    STATE  = SYNCH

    def __init__(self):
        self.retval = None

    def __call__(self, f):
        '''This provides the decorator function wrapper, which will return
        a deferred for asynchronous mode and the results of the wrapped
        function in synchronous mode'''
        def CB(result):
            self.retval = result
            reactor.stop()
        def EB(failure):
            reactor.stop()
            failure.raiseException()
        @wraps(f)
        def func(*args, **kwargs):
            d = f(*args, **kwargs)
            if CallerMode.STATE == CallerMode.SYNCH:
                d.addCallback(CB).addErrback(EB)
                reactor.run()
            return self.retval if CallerMode.STATE == CallerMode.SYNCH else d
        return func


class Library(object):
    '''This is just a class to provide an API to call for data,
    in this case just using getPage() to get a deferred that gets some
    data, vs. having to set up a database for this test program
    '''
    def __init__(self):
        log.msg('MyLib has been initialized')
        self._retval = None

    @CallerMode()
    def page(self):
        return getPage('http://www.google.com')


def doSomethingWithData(data):
    log.msg(data)


log.FileLogObserver.timeFormat = '%Y-%m-%d %H:%M:%S'
log.startLogging(sys.stdout)

lib = Library()

#CallerMode.STATE = CallerMode.ASYNCH
CallerMode.STATE = CallerMode.SYNCH

# call the library API method
result = lib.page()

# depending on the CallerMode, handle the results differently
if CallerMode.STATE == CallerMode.SYNCH:
    doSomethingWithData(result)
elif CallerMode.STATE == CallerMode.ASYNCH:
    result.addCallback(doSomethingWithData)
    reactor.run()



From landreville at deadtreepages.com  Fri Nov 13 07:52:36 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 09:52:36 -0500
Subject: [Twisted-Python] Deferred SOAP methods
Message-ID: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>

I am making a SOAP server and all (or at least the vast majority) will be
returning a deferred. The whole SOAP method is encapsulated in a deferred in
most of my cases (I havent implemented this part yet.) Then I got the idea
that twisted.web.soap could just wrap my SOAP method (retrieved with
lookupFunction) in a deferred and return that deferred right away.

For instance I would change twisted.web.soap.render  where it says d =
defer.maybeDeferred to  d = threads.deferToThread

I could also use an attribute to specify if I do not want it deferred (kinda
the same way to determine whether to use keywords or not)

Is this actually a good idea? I figured there might be a reason this wasn't
done already considering everything in twisted is pretty well thought out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091113/548461a0/attachment.html>

From exarkun at twistedmatrix.com  Fri Nov 13 08:21:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 15:21:11 -0000
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
In-Reply-To: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>
References: <80c54aa0911130632l63cad82aq54a93cff139c8b02@mail.gmail.com>
Message-ID: <20091113152111.3229.82963453.divmod.xquotient.699@localhost.localdomain>

On 02:32 pm, doug.farrell at gmail.com wrote:
>Hi all,
>
>I'd like to get some comments on the code below (including, "don't be
>a bonehead!" <g>). I'm trying to write a API library for database
>access that can be used by both synchronous (non-twisted, no reactor)
>code and asynchronous (twisted, with reactor) code where the methods
>of the library can called in either environment. What I'd like is the
>method to return the results of the call (database query results) when
>in synchronous mode, and a deferred that is a result of the database
>call in asynchronous mode.
>
>What I've done below is create a decorator class called CallerMode
>that is used to decorate a function/method that normally returns a
>deferred. If the CallerMode class is in synchronous mode it starts a
>reactor to get the default callbacks to get called, which gets the
>results or exceptions, and stops the reactor.
>
>Am I being a dunce doing this kind of thing? Any suggestions,
>comments, etc. are welcome.

If you add a second call to your example function in synchronous mode, I 
think you'll notice there's a problem - you can only start and stop the 
reactor once.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Nov 13 08:25:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 15:25:25 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
Message-ID: <20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>

On 02:52 pm, landreville at deadtreepages.com wrote:
>I am making a SOAP server and all (or at least the vast majority) will 
>be
>returning a deferred. The whole SOAP method is encapsulated in a 
>deferred in
>most of my cases (I havent implemented this part yet.) Then I got the 
>idea
>that twisted.web.soap could just wrap my SOAP method (retrieved with
>lookupFunction) in a deferred and return that deferred right away.
>
>For instance I would change twisted.web.soap.render  where it says d =
>defer.maybeDeferred to  d = threads.deferToThread

It sounds like you're conflating Deferreds and threads a little bit.

The reason Twisted doesn't use deferToThread on any method it calls by 
default is that threads are a really bummer.  You have to worry about 
thread safety, you generally lose repeatability and determinism, your 
unit tests become a lot harder to write, if it's still possible to write 
them at all.  Then there are the performance considerations.  There are 
many kinds of code that CPython threads don't make any faster (and many 
kinds which it makes slower).

On the other hand, sometimes you really do want to do your work in a 
thread.  That's why deferToThread exists, after all - to make your life 
a little bit simpler when those cases do arise. :)

What is it that you're going to be doing in these SOAP methods?

Jean-Paul



From landreville at deadtreepages.com  Fri Nov 13 08:42:50 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 10:42:50 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
Message-ID: <9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>

On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:52 pm, landreville at deadtreepages.com wrote:
> >I am making a SOAP server and all (or at least the vast majority) will
> >be
> >returning a deferred. The whole SOAP method is encapsulated in a
> >deferred in
> >most of my cases (I havent implemented this part yet.) Then I got the
> >idea
> >that twisted.web.soap could just wrap my SOAP method (retrieved with
> >lookupFunction) in a deferred and return that deferred right away.
> >
> >For instance I would change twisted.web.soap.render  where it says d =
> >defer.maybeDeferred to  d = threads.deferToThread
>
> It sounds like you're conflating Deferreds and threads a little bit.
>
> The reason Twisted doesn't use deferToThread on any method it calls by
> default is that threads are a really bummer.  You have to worry about
> thread safety, you generally lose repeatability and determinism, your
> unit tests become a lot harder to write, if it's still possible to write
> them at all.  Then there are the performance considerations.  There are
> many kinds of code that CPython threads don't make any faster (and many
> kinds which it makes slower).
>
> On the other hand, sometimes you really do want to do your work in a
> thread.  That's why deferToThread exists, after all - to make your life
> a little bit simpler when those cases do arise. :)
>
> What is it that you're going to be doing in these SOAP methods?
>
> Jean-Paul
>
>
They are doing a bunch of setting and retrieving information from databases.
There are a couple that load more modules which add more SOAP methods for
interacting with a different database.

 None of the calls depend on eachother, so I don't want/need any of them to
block the application from processing the next soap call. Is there other
ways of generating deferreds without threads that I haven't seen?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091113/b734857d/attachment-0001.html>

From vitaly at synapticvision.com  Fri Nov 13 08:59:15 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 10:59:15 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
Message-ID: <20091113105915.137049kjp09yvo8w@216.129.205.5>


Doesn't the event loop have a limit of connections it could handle?

Quoting "Reza Lotun" <rlotun at gmail.com>:

>> hi,
>> what would be the right thing to start from in order to build
>> multi-reactor arch to handle thousands of concurrent connections?
>
> Why would you want multiple reactors? The only reason would be to have
> one per CPU core. For that the simplest thing would be to manually
> start n twistd processes, one per core and have a reverse proxy
> process listening on a port and distributing connections to each
> twistd process. Of course, you can extend this architecture to
> multiple machines.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>






From exarkun at twistedmatrix.com  Fri Nov 13 09:04:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 16:04:28 -0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113105915.137049kjp09yvo8w@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
Message-ID: <20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>

On 03:59 pm, vitaly at synapticvision.com wrote:
>
>Doesn't the event loop have a limit of connections it could handle?

Multiple reactors isn't a realistic solution to this.  The solution is 
to switch to an event loop that has a higher limit.  "The" event loop is 
actually a choice of many possible event loops.

So connection limits aren't a good reason to want multiple reactors.

Jean-Paul



From vitaly at synapticvision.com  Fri Nov 13 09:44:06 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 11:44:06 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
Message-ID: <20091113114406.321133qjg0aaus8w@216.129.205.5>


I've get confused enough already :-))

Once there is a Site that serving many clients and  
reactor.listenSSL(), for example, that actually serving many TCP  
connections and all these going through TwistedGateway, my logic,  
please correct me if I wrong, says at some point there will be a limit  
on concurrent TCP connections, so how is it solved with Twisted?


Quoting exarkun at twistedmatrix.com:

> On 03:59 pm, vitaly at synapticvision.com wrote:
>>
>> Doesn't the event loop have a limit of connections it could handle?
>
> Multiple reactors isn't a realistic solution to this.  The solution is
> to switch to an event loop that has a higher limit.  "The" event loop is
> actually a choice of many possible event loops.
>
> So connection limits aren't a good reason to want multiple reactors.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From rlotun at gmail.com  Fri Nov 13 10:08:35 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 13 Nov 2009 17:08:35 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113114406.321133qjg0aaus8w@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
Message-ID: <95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>

> Once there is a Site that serving many clients and
> reactor.listenSSL(), for example, that actually serving many TCP
> connections and all these going through TwistedGateway, my logic,
> please correct me if I wrong, says at some point there will be a limit
> on concurrent TCP connections, so how is it solved with Twisted?

That's a good question and I'm not sure if there's a definite answer
to this (as far as I know). I think it depends on your application -
for example, if your server is performing a big computation then on
average client connections will last longer, meaning you'll have more
concurrent connections.

The best way to determine this is to *measure* it - for example, you
can do a load test with httperf and ramp up connections until this
start to break or become unresponsive.

You can mitigate the situation by tuning your platform a bit (assuming
you're using linux)
- use the epoll reactor, which is high performance
- make sure the number of open file descriptors is set to something
high (and *not* 1024) - see `ulimit -a`
- make sure you tune your tcp settings - see /etc/sysctl.conf, namely
fs.file-max and various net.ipv4 settings (google is your friend on
the best settings, coupled with testing)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From vitaly at synapticvision.com  Fri Nov 13 10:25:15 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 12:25:15 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
Message-ID: <20091113122515.10195h9xxugo2d0c@216.129.205.5>


thank you for such detailed response.
I feel, finally I've succeed to express my original question correctly.

So if I go one step forward, and lets assume that indeed there is such  
limit of concurrent connections, THAN:
should it be resolved by another architecture or another usage type of  
Twisted technology or something else?



Quoting "Reza Lotun" <rlotun at gmail.com>:

>> Once there is a Site that serving many clients and
>> reactor.listenSSL(), for example, that actually serving many TCP
>> connections and all these going through TwistedGateway, my logic,
>> please correct me if I wrong, says at some point there will be a limit
>> on concurrent TCP connections, so how is it solved with Twisted?
>
> That's a good question and I'm not sure if there's a definite answer
> to this (as far as I know). I think it depends on your application -
> for example, if your server is performing a big computation then on
> average client connections will last longer, meaning you'll have more
> concurrent connections.
>
> The best way to determine this is to *measure* it - for example, you
> can do a load test with httperf and ramp up connections until this
> start to break or become unresponsive.
>
> You can mitigate the situation by tuning your platform a bit (assuming
> you're using linux)
> - use the epoll reactor, which is high performance
> - make sure the number of open file descriptors is set to something
> high (and *not* 1024) - see `ulimit -a`
> - make sure you tune your tcp settings - see /etc/sysctl.conf, namely
> fs.file-max and various net.ipv4 settings (google is your friend on
> the best settings, coupled with testing)
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From rlotun at gmail.com  Fri Nov 13 10:44:45 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 13 Nov 2009 17:44:45 +0000
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <20091113122515.10195h9xxugo2d0c@216.129.205.5>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
	<20091113122515.10195h9xxugo2d0c@216.129.205.5>
Message-ID: <95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>

> thank you for such detailed response.
> I feel, finally I've succeed to express my original question correctly.
>
> So if I go one step forward, and lets assume that indeed there is such
> limit of concurrent connections, THAN:
> should it be resolved by another architecture or another usage type of
> Twisted technology or something else?

Again, I don't think there are any universal answers to this question.
It depends on what you're building. For example, say it's a REST api,
which by design is stateless (i.e. no sessions). Then you can stick a
load balancer in front (if you're on EC2 amazon has an "elastic load
balancer" service for this) and load balance amongst many machines. As
you find traffic increases you simply add more machines. This is
called "horizontal scalability" and, as you might imagine, its highly
desirable.

Another form is "vertical scalability" - that involves getting a
faster computer to run your server on. This might work for some cases,
but not in general - it seems to be the method applied to scaling
RDBMSs, before going down the road of master/slave setups, sharding
and denormalization.

Of course, you *could* use a different technology entirely when you
need to scale really high. This might make sense if your'e a small
company and growing - say you start out as a small team, and you need
something up quickly that's fairly decent. You happen to know python
so you roll the whole thing out in Twisted. As time progresses, you
may rewrite certain systems in, say, erlang or something and move
forward.

So, it's hard to say, really. At least, I'd like to know myself ;-)
That's what makes the wheel field so interesting - there's a certain
creative element to scalable systems.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From vitaly at synapticvision.com  Fri Nov 13 11:06:24 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Fri, 13 Nov 2009 13:06:24 -0500
Subject: [Twisted-Python] Multi-reactor architecture
In-Reply-To: <95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>
References: <20091112125006.24731mma3lcylakg@216.129.205.5>
	<95bb10690911121009nfed6abdk5b205edaf8892eda@mail.gmail.com>
	<20091113105915.137049kjp09yvo8w@216.129.205.5>
	<20091113160428.3229.396724410.divmod.xquotient.710@localhost.localdomain>
	<20091113114406.321133qjg0aaus8w@216.129.205.5>
	<95bb10690911130908s72f70004h15e1154cc3cee811@mail.gmail.com>
	<20091113122515.10195h9xxugo2d0c@216.129.205.5>
	<95bb10690911130944v569186behad2b6e96741d2da2@mail.gmail.com>
Message-ID: <20091113130624.75906t8gwqtgibwo@216.129.205.5>


So if I get stick to the "vertical scalability"(Site has sessions), is  
it gonna be helpful for performance to run Twisted reactor on a single  
core machine vs multi-core machine (after all Python itself has a  
Global Interpreter Lock)?
OR
the entire "TwsitedGateway+listenSSL+Site+reactor" USAGE should be  
re-designed for the project?

What about 64bit machine influence on Twisted?



Quoting "Reza Lotun" <rlotun at gmail.com>:

>> thank you for such detailed response.
>> I feel, finally I've succeed to express my original question correctly.
>>
>> So if I go one step forward, and lets assume that indeed there is such
>> limit of concurrent connections, THAN:
>> should it be resolved by another architecture or another usage type of
>> Twisted technology or something else?
>
> Again, I don't think there are any universal answers to this question.
> It depends on what you're building. For example, say it's a REST api,
> which by design is stateless (i.e. no sessions). Then you can stick a
> load balancer in front (if you're on EC2 amazon has an "elastic load
> balancer" service for this) and load balance amongst many machines. As
> you find traffic increases you simply add more machines. This is
> called "horizontal scalability" and, as you might imagine, its highly
> desirable.
>
> Another form is "vertical scalability" - that involves getting a
> faster computer to run your server on. This might work for some cases,
> but not in general - it seems to be the method applied to scaling
> RDBMSs, before going down the road of master/slave setups, sharding
> and denormalization.
>
> Of course, you *could* use a different technology entirely when you
> need to scale really high. This might make sense if your'e a small
> company and growing - say you start out as a small team, and you need
> something up quickly that's fairly decent. You happen to know python
> so you roll the whole thing out in Twisted. As time progresses, you
> may rewrite certain systems in, say, erlang or something and move
> forward.
>
> So, it's hard to say, really. At least, I'd like to know myself ;-)
> That's what makes the wheel field so interesting - there's a certain
> creative element to scalable systems.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From leyssw at ihug.co.nz  Fri Nov 13 12:18:48 2009
From: leyssw at ihug.co.nz (Tom Leys)
Date: Sat, 14 Nov 2009 08:18:48 +1300
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
In-Reply-To: <mailman.100916.1258123961.23374.twisted-python@twistedmatrix.com>
References: <mailman.100916.1258123961.23374.twisted-python@twistedmatrix.com>
Message-ID: <4AFDB118.1020903@ihug.co.nz>

Hi Doug.

I think that a decorator is a fairly nice idea, however you will 
probably run into the following issue:
http://twistedmatrix.com/trac/ticket/2066

Once a reactor has been started and stopped, starting the reactor again 
will crash your program. You will need to come up with a way to get 
around this problem if you plan to call your database code more than 
once without restarting the python process.

-Tom

------------------------------

Message: 9
Date: Fri, 13 Nov 2009 09:32:25 -0500
From: Doug Farrell <doug.farrell at gmail.com>
Subject: [Twisted-Python] synchronous/asynchronous api: possible
	interface
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<80c54aa0911130632l63cad82aq54a93cff139c8b02 at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

Hi all,

I'd like to get some comments on the code below (including, "don't be
a bonehead!" <g>). I'm trying to write a API library for database
access that can be used by both synchronous (non-twisted, no reactor)
code and asynchronous (twisted, with reactor) code where the methods
of the library can called in either environment. What I'd like is the
method to return the results of the call (database query results) when
in synchronous mode, and a deferred that is a result of the database
call in asynchronous mode.

What I've done below is create a decorator class called CallerMode
that is used to decorate a function/method that normally returns a
deferred. If the CallerMode class is in synchronous mode it starts a
reactor to get the default callbacks to get called, which gets the
results or exceptions, and stops the reactor.

Am I being a dunce doing this kind of thing? Any suggestions,
comments, etc. are welcome.

Thanks!





From exarkun at twistedmatrix.com  Fri Nov 13 13:46:47 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 20:46:47 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
Message-ID: <20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>

On 03:42 pm, landreville at deadtreepages.com wrote:
>On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:
>
>[snip]
>>
>>What is it that you're going to be doing in these SOAP methods?
>>
>>Jean-Paul
>They are doing a bunch of setting and retrieving information from 
>databases.
>There are a couple that load more modules which add more SOAP methods 
>for
>interacting with a different database.
>
>None of the calls depend on eachother, so I don't want/need any of them 
>to
>block the application from processing the next soap call. Is there 
>other
>ways of generating deferreds without threads that I haven't seen?

There are lots of ways.  Deferreds are just an approach to organizing 
callbacks.  If you're actually asking if there's a way to call blocking 
functions without blocking - no, threads are more or less it (there's 
processes too, but that's sort of the same thing).

Database access is definitely an area where you often have to deal with 
blocking APIs.  If that's why your methods block, then threads might be 
the right solution.  You might want to take a look at 
twisted.enterprise.adbapi, a thread-based wrapper for DB-API 2.0 
modules.

If you're blocking waiting for the network or other events, though, then 
you can probably find a Twisted API to deal with that without using 
threads.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Nov 13 13:52:39 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Nov 2009 20:52:39 -0000
Subject: [Twisted-Python] synchronous/asynchronous api:
	possible	interface
In-Reply-To: <000e0cd5c988fa5405047842cd35@google.com>
References: <20091113152111.3229.82963453.divmod.xquotient.699@localhost.localdomain>
	<000e0cd5c988fa5405047842cd35@google.com>
Message-ID: <20091113205239.27565.1439715987.divmod.xquotient.24@localhost.localdomain>

On 04:03 pm, doug.farrell at gmail.com wrote:
>Jean-Paul,
>
>Thanks for the "heads up", that certainly falls under the D'OH! 
>category. Would you have any suggestions for how I might do this kind 
>of thing?

I already mentioned SynchronousDeferred, so I guess you're not 
interested in that. :)

The main other idea that comes to mind is, in the synchronous case, to 
start the reactor in a separate thread and leave it running.  You can 
ask it to do things with reactor.callFromThread.  Or maybe you can use 
twisted.internet.threads.blockingCallFromThread.

Jean-Paul



From landreville at deadtreepages.com  Fri Nov 13 14:03:55 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 13 Nov 2009 16:03:55 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
Message-ID: <9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>

On Fri, Nov 13, 2009 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:

> On 03:42 pm, landreville at deadtreepages.com wrote:
> >On Fri, Nov 13, 2009 at 10:25 AM, <exarkun at twistedmatrix.com> wrote:
> >
> >[snip]
> >>
> >>What is it that you're going to be doing in these SOAP methods?
> >>
> >>Jean-Paul
> >They are doing a bunch of setting and retrieving information from
> >databases.
> >There are a couple that load more modules which add more SOAP methods
> >for
> >interacting with a different database.
> >
> >None of the calls depend on eachother, so I don't want/need any of them
> >to
> >block the application from processing the next soap call. Is there
> >other
> >ways of generating deferreds without threads that I haven't seen?
>
> There are lots of ways.  Deferreds are just an approach to organizing
> callbacks.  If you're actually asking if there's a way to call blocking
> functions without blocking - no, threads are more or less it (there's
> processes too, but that's sort of the same thing).
>
> Database access is definitely an area where you often have to deal with
> blocking APIs.  If that's why your methods block, then threads might be
> the right solution.  You might want to take a look at
> twisted.enterprise.adbapi, a thread-based wrapper for DB-API 2.0
> modules.
>
> If you're blocking waiting for the network or other events, though, then
> you can probably find a Twisted API to deal with that without using
> threads.
>
> Jean-Paul
>
>
Most of the time it is datbase access. I guess I shouldn't have chosen
probiscus using the greentrunk api instead of the dbapi. I haven't been
pleased by the postgres drivers in python, so I'm wary to change the db api
and use adbapi around it.

Sometimes the calls are blocking because it is calling another SOAP server
(or possibly itself over SOAP). My SOAP calls will all be blocking because
twisted.web.soap doesn't support WSDL.
Other than db access and accessing soap calls the rest is just formatting
the results.

I'm thinking maybe I could make an attribute of my soap method called
"deferred = True|False" and then if it's True render will wrap the call to
the soap method in a deferred thread, otherwise I will defer blocking
statements inside the SOAP method.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091113/a2bcd398/attachment.html>

From tuure.laurinolli at indagon.com  Sat Nov 14 07:15:33 2009
From: tuure.laurinolli at indagon.com (Tuure Laurinolli)
Date: Sat, 14 Nov 2009 16:15:33 +0200
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
Message-ID: <4AFEBB85.6040905@indagon.com>

Landreville wrote:

> Sometimes the calls are blocking because it is calling another SOAP 
> server (or possibly itself over SOAP). My SOAP calls will all be 
> blocking because twisted.web.soap doesn't support WSDL.

What are you using for your SOAP client calls, then? There is something 
called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can 
operate with Twisted and supports WSDL.

I once used it to write a server that could be used with an existing 
WSDL as its interface. IIRC its Twised integration has some problems 
(like not supporting asynchronous handling of requests) but they were 
relatively simple to overcome.



From olivier.parisy at free.fr  Sat Nov 14 08:02:50 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 14 Nov 2009 16:02:50 +0100
Subject: [Twisted-Python] Getting local UDP address/port
Message-ID: <4AFEC69A.3070702@free.fr>

I am implementing a UDP protocol where a request is sent to a server 
through a connected UDP transport.

I listen for the answer using reactor.listenUDP(0, myDatagramProtocol).

The local port is not in itself significant (hence the 0), but the 
protocol require that I get the local IP address and port of the socket 
used to send the request (so that I can properly process the answser).

How can I get this information ? datagramReceived only provides me with 
the source address and port of the answer (as can be expected).

Regards,
Olivier.




From exarkun at twistedmatrix.com  Sat Nov 14 08:11:50 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Nov 2009 15:11:50 -0000
Subject: [Twisted-Python] Getting local UDP address/port
In-Reply-To: <4AFEC69A.3070702@free.fr>
References: <4AFEC69A.3070702@free.fr>
Message-ID: <20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>

On 03:02 pm, olivier.parisy at free.fr wrote:
>I am implementing a UDP protocol where a request is sent to a server
>through a connected UDP transport.
>
>I listen for the answer using reactor.listenUDP(0, myDatagramProtocol).
>
>The local port is not in itself significant (hence the 0), but the
>protocol require that I get the local IP address and port of the socket
>used to send the request (so that I can properly process the answser).
>
>How can I get this information ? datagramReceived only provides me with
>the source address and port of the answer (as can be expected).

The protocol's transport will give you this information via the getHost 
method:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html

However, unless you're using connected UDP, the platform may not bother 
to give you a realistic local address (and perhaps sometimes even for 
connected UDP it won't).  And then there's always NAT.

Jean-Paul



From olivier.parisy at free.fr  Sat Nov 14 08:56:50 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 14 Nov 2009 16:56:50 +0100
Subject: [Twisted-Python] Getting local UDP address/port
In-Reply-To: <20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>
References: <4AFEC69A.3070702@free.fr>
	<20091114151150.27565.710311467.divmod.xquotient.113@localhost.localdomain>
Message-ID: <4AFED342.2010108@free.fr>

exarkun at twistedmatrix.com a écrit :
> The protocol's transport will give you this information via the getHost 
> method:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html
>   
I got confused by the method name and did not think it would provide me 
with the local port. This is exactly what I needed, thanks!

> However, unless you're using connected UDP, the platform may not bother 
> to give you a realistic local address (and perhaps sometimes even for 
> connected UDP it won't).  And then there's always NAT.
>   
Yes, I am aware of those issues. This is kind of the point of my test 
actually.

Thanks,
Olivier.





From landreville at deadtreepages.com  Sat Nov 14 10:21:31 2009
From: landreville at deadtreepages.com (Landreville)
Date: Sat, 14 Nov 2009 12:21:31 -0500
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <4AFEBB85.6040905@indagon.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
	<4AFEBB85.6040905@indagon.com>
Message-ID: <9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>

On Sat, Nov 14, 2009 at 9:15 AM, Tuure Laurinolli <
tuure.laurinolli at indagon.com> wrote:

> Landreville wrote:
>
> > Sometimes the calls are blocking because it is calling another SOAP
> > server (or possibly itself over SOAP). My SOAP calls will all be
> > blocking because twisted.web.soap doesn't support WSDL.
>
> What are you using for your SOAP client calls, then? There is something
> called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can
> operate with Twisted and supports WSDL.
>
> I once used it to write a server that could be used with an existing
> WSDL as its interface. IIRC its Twised integration has some problems
> (like not supporting asynchronous handling of requests) but they were
> relatively simple to overcome.
>
>
I'm using soappy for a client because that is what twisted uses for its soap
server. Twisted's implementation does not include WSDL support though (so
I'm using the normal soappy package for the client).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091114/aebe3cd2/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov 14 11:07:38 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Nov 2009 18:07:38 -0000
Subject: [Twisted-Python] Deferred SOAP methods
In-Reply-To: <9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>
References: <9d748c780911130652r3bdd17edlfe087f90fcc88e22@mail.gmail.com>
	<20091113152525.3229.1468585330.divmod.xquotient.707@localhost.localdomain>
	<9d748c780911130742w18ff1ec7sd1a303157a05eb12@mail.gmail.com>
	<20091113204647.27565.2135646134.divmod.xquotient.13@localhost.localdomain>
	<9d748c780911131303s6a5df51eyd5a7ceaec4d2eec@mail.gmail.com>
	<4AFEBB85.6040905@indagon.com>
	<9d748c780911140921x6a09f324w6a0f008983083758@mail.gmail.com>
Message-ID: <20091114180738.27565.519953300.divmod.xquotient.160@localhost.localdomain>

On 05:21 pm, landreville at deadtreepages.com wrote:
>On Sat, Nov 14, 2009 at 9:15 AM, Tuure Laurinolli <
>tuure.laurinolli at indagon.com> wrote:
>>Landreville wrote:
>>
>> > Sometimes the calls are blocking because it is calling another SOAP
>> > server (or possibly itself over SOAP). My SOAP calls will all be
>> > blocking because twisted.web.soap doesn't support WSDL.
>>
>>What are you using for your SOAP client calls, then? There is 
>>something
>>called "ZSI" (http://pywebsvcs.sourceforge.net/zsi.html) that can
>>operate with Twisted and supports WSDL.
>>
>>I once used it to write a server that could be used with an existing
>>WSDL as its interface. IIRC its Twised integration has some problems
>>(like not supporting asynchronous handling of requests) but they were
>>relatively simple to overcome.
>I'm using soappy for a client because that is what twisted uses for its 
>soap
>server. Twisted's implementation does not include WSDL support though 
>(so
>I'm using the normal soappy package for the client).

Twisted's SOAP support is definitely pretty pathetic.  This is probably 
a result of a few things:

  * None of the core developers is particularly interested in SOAP.  It's 
a bad protocol that people generally only use because they're forced to.

  * The Python story for SOAP is confusing.  For a while, SOAPpy was the 
only game in town.  Then ZSI came along and that was supposed to be 
great.  Last I heard, ZSI should be avoided and SUDS is the thing to 
use.  Without actually having a real SOAP-related problem to solve, it's 
hard to tell who to believe.

  * Various people are using ZSI with Twisted based on the support in ZSI 
for this.  This presumably reduces the motivation to add anything in 
Twisted to support such integration.  Likewise, people are using Twisted 
and SUDS together with some other custom integration code (I don't think 
this is part of SUDS proper, though).  Again, if it works for them, it's 
less likely that they'll bother trying to get something better included 
in Twisted.

I don't think that it is necessarily a bad thing that Twisted doesn't 
have a super awesome SOAP API built in, since it seems that other people 
are coming up with ways to solve the problem anyway.  The biggest 
drawback is perhaps that it is hard for someone to find all these 
disparate solutions and select the one that is most suited to solving 
their problem.

Jean-Paul



From timwylie at hotmail.com  Sat Nov 14 20:59:38 2009
From: timwylie at hotmail.com (tim wylie)
Date: Sat, 14 Nov 2009 21:59:38 -0600
Subject: [Twisted-Python] TCP Queued connections
Message-ID: <BAY112-W6E065F342247D3FC102BBD1A60@phx.gbl>


Hello,
   What is the best way to set up a queue of tcp connections?  I'm currently using perspective broker for authentication and communication.  I want the client to register with the server, and then the server send back a message telling them their place in line.  This is easy, but then how can I store the connections on the server to send the client a message when it's his turn?  I realize I could store IP addresses, but then you lose connections behind firewalls/etc.  I could also give the client a time estimate and he could run a deferred call after that time, but I was hoping there was a more elegant way.  Any thoughts?  Thanks.
Tim
 		 	   		  
_________________________________________________________________
Hotmail: Trusted email with Microsoft's powerful SPAM protection.
http://clk.atdmt.com/GBL/go/177141664/direct/01/
http://clk.atdmt.com/GBL/go/177141664/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091114/9ed79ce3/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov 14 22:05:14 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Nov 2009 05:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1258261514.8.1966653461@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091115/daf1dc2f/attachment.html>

From mardiros at laposte.net  Sun Nov 15 13:53:12 2009
From: mardiros at laposte.net (mardiros)
Date: Sun, 15 Nov 2009 21:53:12 +0100
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109142835.125276qyl0o7jsco@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
Message-ID: <4B006A38.4070204@laposte.net>


Hi,

you can couple a decorator with the maybeDeferred function.
this is a trivial example but it works.
This cache is not cleaned and if you write your decorator in
a class with a __call__ function, you can isolate the cache
dictionary and a configurable lifetime, with a
twisted.internet.task.LoopingCall for this.
In fact, I have already talk about it in a previous message,
too try talking about this technique with more advanced
users than me without answer. I supposed it was not so bad.
Well, I am using now this kind of code to cache sql select
request from a twisted.enterprise.adbapi.ConnectionPool.runQuery
and it's work fine.



from twisted.internet import defer
from twisted.internet import reactor
import types

cache = {}
def memoize(f):
    def g(*args, **kwargs):
        key = (tuple(args), frozenset(kwargs.items()))
       
        if key not in cache:
            return f(*args, **kwargs)
        else:
            print "from cache"
            return cache[key]
    return g

def saveInCache(result,key):
    print "saving to cache"
    cache[key] = result
    return result

@memoize
def asynchronousIsValidUser(user):
    print "Loading from network"
    d = defer.Deferred()
    reactor.callLater(2, d.callback, user in ["Alice", "Angus", "Agnes"])
    return d.addCallback(saveInCache, ( (user,), frozenset() ))

def printResult(result,user):
    if result:
        print "User", user ,"is authenticated"
    else:
        print "User", user ,"is not authenticated"

def authenticateUser(user):
    print "Authenticating user ", user
    d = defer.maybeDeferred(asynchronousIsValidUser, user)
    return d.addCallback(printResult,user)


reactor.callWhenRunning(authenticateUser,"Alice")
reactor.callLater(1,authenticateUser,"Alice")
reactor.callLater(3,authenticateUser,"Alice")
reactor.callLater(5,reactor.stop)
reactor.run()




vitaly at synapticvision.com a écrit :
>
> Caching the results of some particular method calls, so other server  
> side methods can access those results (I'm thinking about example of  
> global variable per entire server, so once imported, such variable  
> content could be access).
>
>
>
> Quoting exarkun at twistedmatrix.com:
>
>   
>> On 05:41 pm, vitaly at synapticvision.com wrote:
>>     
>>> hi,
>>> is there any cache mechanism for twisted? Could one point me please to
>>> that docs?
>>>       
>> What sort of caching are you interested in?  Caching the results of
>> method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
>> total list of possibilities could run to many pages. :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   





From mardiros at laposte.net  Mon Nov 16 02:28:24 2009
From: mardiros at laposte.net (mardiros)
Date: Mon, 16 Nov 2009 10:28:24 +0100 (CET)
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <4B006A38.4070204@laposte.net>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<4B006A38.4070204@laposte.net>
Message-ID: <23590079.406.1258363704530.JavaMail.www@wwinf8302>


Here is the main part of my code

class CacheCleanerBaseMixin:
def __init__(self, cachetimer,cachelifetime):
self._cache = {}
self._cachelifetime = timedelta(0,cachelifetime)
self._cleaner = task.LoopingCall(self.cleanCache)
self._cleaner.start(cachetimer,now=False)
self._cleanrun = False

def cleanCache(self):
if not self._cleanrun:
self._cleanrun = True
log.msg('Clean the cache...', logLevel=logging.DEBUG)
expire = datetime.today()
i = 0
for k,v in self._cache.items():
if v[0] < expire:
i+=1
del self._cache[k]
log.msg('%i items removed' % i, logLevel=logging.DEBUG)
self._cleanrun = False


class asyncmemoize(CacheCleanerBaseMixin):
def __init__(self, function,cachetimer=30,cachelifetime=60):
CacheCleanerBaseMixin.__init__(self, cachetimer,cachelifetime)
self.function = function

def __call__(self, *args, **kwargs):
key = (tuple(args), frozenset(kwargs.items()))
if key not in self._cache:
return self.function(SqlConnection(),*args, **kwargs).addCallback(self.callback,key)
else:
log.msg('Retrievieng the data from the cache',logLevel=logging.DEBUG)
return self._cache[key][1]

def callback(self,result,key):
try:
self._cache[key] = [datetime.today() + self._cachelifetime, result]
finally:
return result




class SqlConnection(object): 

_instance = None
def __new__(cls):
if cls._instance is None:
cls._instance = object.__new__(cls)
return cls._instance

def configure(self, dbdriver, dbdriverargs,
log_request=False,
cache_file='sqlcache.shelve',
pool_file='sqloperation.shelve',
pool_maxattempt=5,
pool_time=30):
self.log_request = log_request
self.pool = adbapi.ConnectionPool(dbdriver,**dbdriverargs) 

@asyncmemoize
def internal_runQuery(self,query,args=None):
rv = None
try:
if args:
rv = self.pool.runQuery(query,args)
else:
rv = self.pool.runQuery(query)
except:
log.err() 
return rv

def runQuery(self,query,args=None):
try:
d = defer.maybeDeferred(self.internal_runQuery, query,args)
return d
except:
log.err() 


---------------------------------------------------------------------------- 
Laposte.net fête ses 10 ans ! 

Gratuite, garantie à vie et déjà utilisée par des millions d'internautes... 
vous aussi, pour votre adresse e-mail, choisissez laposte.net. 

Laposte.net, bien + qu'une messagerie 
----------------------------------------------------------------------------




From marco.giusti at gmail.com  Mon Nov 16 04:18:40 2009
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 16 Nov 2009 12:18:40 +0100
Subject: [Twisted-Python] Caching mechanism
In-Reply-To: <20091109182420.89285p7g5wyxc6ck@216.129.205.5>
References: <20091109124129.82497icy7guj7f8c@216.129.205.5>
	<20091109180928.3229.2049513962.divmod.xquotient.569@localhost.localdomain>
	<20091109142835.125276qyl0o7jsco@216.129.205.5>
	<37d49ed40911091442i4e4634b6y29dfed4d03a61825@mail.gmail.com>
	<20091109182420.89285p7g5wyxc6ck@216.129.205.5>
Message-ID: <20091116111840.GA6794@murdoc.net>

On Mon, Nov 09, 2009 at 06:24:20PM -0500, vitaly at synapticvision.com wrote:
> 
> Such global variable(lets say dictionary) will have any size limit?

i don't know what kind of method calls do you need to cache, but what
about of memcached? twisted got a really handy client api for memcached
and, you should look deeper than i did, with a bit of work you can
refactor them as a decorator. memcached server also has got his policies
for size limits.

the drawback, but "bad luck often brings good luck", of this approach is
that your code must be "deferred aware".

m.

> Quoting "Andy Fundinger" <Andy at NewWorldElectric.com>:
> 
> > Part of the beauty of twisted is that you don't actually need to do anything
> > special to achieve that, just create a global dict or other object of your
> > choice and access it as needed.  More likely what you need to look for is a
> > cache expiration mechanism, I've linked in lrucache (
> > http://pypi.python.org/pypi/lrucache/0.2) in one case, but usually I just
> > write my own constraints as appropriate.
> >
> > It's often misunderstood, but in twisted you are writing an actual server
> > rather than just some methods for servicing requests.  The server will run
> > until stopped and all global or even local variables will remain in memory
> > unless deleted or dereferenced and garbage collected.  Rather than doing
> > something special to get a persistent variable you need to do something
> > special when you want a non-persistent one.
> >
> > -Andy
> >
> > On Mon, Nov 9, 2009 at 2:28 PM, <vitaly at synapticvision.com> wrote:
> >
> >>
> >>
> >> Caching the results of some particular method calls, so other server
> >> side methods can access those results (I'm thinking about example of
> >> global variable per entire server, so once imported, such variable
> >> content could be access).
> >>
> >>
> >>
> >> Quoting exarkun at twistedmatrix.com:
> >>
> >> > On 05:41 pm, vitaly at synapticvision.com wrote:
> >> >> hi,
> >> >> is there any cache mechanism for twisted? Could one point me please to
> >> >> that docs?
> >> >
> >> > What sort of caching are you interested in?  Caching the results of
> >> > method calls?  A caching HTTP proxy?  Caching in the DNS client?  The
> >> > total list of possibilities could run to many pages. :)
> >> >
> >> > Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20091116/5bc2acff/attachment.sig>

From filoufake-python at yahoo.fr  Mon Nov 16 07:14:49 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Mon, 16 Nov 2009 14:14:49 +0000 (GMT)
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client but
	not for windows client
Message-ID: <215990.78277.qm@web26103.mail.ukl.yahoo.com>

Hello,

Some month ago, exarkun helped me in the development of a very simplified
telnet server.

I observed that when I connect from a windows client, the LOCALECHO
is set to "OFF" after the authentication. I cannot set it "ON"
afterwards. Everything typed in the client console is hidden.
When I use a linux client, the "ECHO" is OFF just for typing the 
password and then ON again.

Does someone has an idea how to do with the windows client?
I tried to set the ECHO ON using self.transport.will(ECHO) but that
doesn't work.

Here is the code:

############################################################
import sys
from zope.interface import implements
from twisted.internet import protocol
from twisted.python import log
from twisted.cred import error
from twisted.cred import portal
from twisted.cred import checkers
from twisted.cred import credentials
from twisted.conch.telnet import AuthenticatingTelnetProtocol
from twisted.conch.telnet import StatefulTelnetProtocol
from twisted.conch.telnet import ITelnetProtocol
from twisted.conch.telnet import TelnetTransport
from twisted.conch.telnet import ECHO

class Realm:
  implements(portal.IRealm)

  def requestAvatar(self, avatarId, mind, *interfaces):
    if ITelnetProtocol in interfaces:
      av = MyTelnet()
      av.transport.will(ECHO)
      av.state = 'Command'
      return ITelnetProtocol, av, lambda:None
    raise NotImplementedError("Not supported by this realm")

class MyTelnet(StatefulTelnetProtocol):
  def telnet_Command(self, line):
    print "line received via telnet", line
    self.sendLine('coucou man, you send me %s' % line)

def main():
  r = Realm()
  p = portal.Portal(r)
  c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
  c.addUser("AA", "aa")
  p.registerChecker(c)
  p.registerChecker(checkers.AllowAnonymousAccess())
  f = protocol.ServerFactory()
  f.protocol = lambda: TelnetTransport(AuthenticatingTelnetProtocol, p)
  log.startLogging(sys.stdout)
  from twisted.internet import reactor
  reactor.listenTCP(4738, f)
  reactor.run()

if __name__ == '__main__':
  main()
############################################################

Best Regards,
Philippe


      



From kevin.horn at gmail.com  Mon Nov 16 10:19:44 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 11:19:44 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
Message-ID: <562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>

On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
> > wrote:
>
>
> Release early, release often.  Most efforts like this end up moribund: you
>> sound serious right now, but never underestimate the extent to which life
>> will get in the way.  If you put up what you've got somewhere public ASAP,
>> (A) some people will probably show up to egg you on, (B) it's possible for
>> them to contribute (and those contributions will be a motivation on days
>> when this seems like a ridiculous amount of effort just to make Twisted's
>> docs look nicer), and (C) they can pick up the slack if you need to
>> disappear, either temporarily or permanently.
>>
>
> I'll try to put up what I've got later today.
>

OK, finally got the current results of the conversion process up.  Sorry for
the delay, my weekend got hijacked by the Swine Flu.  Some of that "life
getting in the way", I guess.

I want to reiterate that this is _not_ even _close_ to finished.  But it's
what I've got so far.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/1df5f737/attachment.html>

From ssteinerx at gmail.com  Mon Nov 16 10:57:46 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 16 Nov 2009 12:57:46 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
Message-ID: <9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>


On Nov 16, 2009, at 12:19 PM, Kevin Horn wrote:

>
>
> On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com>  
> wrote:
> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <glyph at twistedmatrix.com 
> > wrote:
>
>
> Release early, release often.  Most efforts like this end up  
> moribund: you sound serious right now, but never underestimate the  
> extent to which life will get in the way.  If you put up what you've  
> got somewhere public ASAP, (A) some people will probably show up to  
> egg you on, (B) it's possible for them to contribute (and those  
> contributions will be a motivation on days when this seems like a  
> ridiculous amount of effort just to make Twisted's docs look nicer),  
> and (C) they can pick up the slack if you need to disappear, either  
> temporarily or permanently.
>
> I'll try to put up what I've got later today.
>
> OK, finally got the current results of the conversion process up.   
> Sorry for the delay, my weekend got hijacked by the Swine Flu.  Some  
> of that "life getting in the way", I guess.
>
> I want to reiterate that this is _not_ even _close_ to finished.   
> But it's what I've got so far.

Sorry, I seem to have missed something...where is "it" up to see?

Thanks,

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/fa9d4426/attachment.html>

From kevin.horn at gmail.com  Mon Nov 16 11:09:16 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 12:09:16 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
Message-ID: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>

On Mon, Nov 16, 2009 at 11:57 AM, ssteinerX at gmail.com
<ssteinerx at gmail.com>wrote:

>
> On Nov 16, 2009, at 12:19 PM, Kevin Horn wrote:
>
>
>
> On Thu, Nov 12, 2009 at 11:36 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Wed, Nov 11, 2009 at 11:22 PM, Glyph Lefkowitz <
>> glyph at twistedmatrix.com> wrote:
>>
>>
>> Release early, release often.  Most efforts like this end up moribund: you
>>> sound serious right now, but never underestimate the extent to which life
>>> will get in the way.  If you put up what you've got somewhere public ASAP,
>>> (A) some people will probably show up to egg you on, (B) it's possible for
>>> them to contribute (and those contributions will be a motivation on days
>>> when this seems like a ridiculous amount of effort just to make Twisted's
>>> docs look nicer), and (C) they can pick up the slack if you need to
>>> disappear, either temporarily or permanently.
>>>
>>
>> I'll try to put up what I've got later today.
>>
>
> OK, finally got the current results of the conversion process up.  Sorry
> for the delay, my weekend got hijacked by the Swine Flu.  Some of that "life
> getting in the way", I guess.
>
> I want to reiterate that this is _not_ even _close_ to finished.  But it's
> what I've got so far.
>
>
> Sorry, I seem to have missed something...where is "it" up to see?
>
> Thanks,
>
> S
>
>
er, sorry, forgot to post the link...

here it is:
http://twistedsphinx.funsize.net/

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/6875cbb0/attachment.html>

From ssteinerx at gmail.com  Mon Nov 16 11:36:37 2009
From: ssteinerx at gmail.com (ssteinerX@gmail.com)
Date: Mon, 16 Nov 2009 13:36:37 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
Message-ID: <88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>

On Nov 16, 2009, at 1:09 PM, Kevin Horn wrote:
>
> Sorry, I seem to have missed something...where is "it" up to see?
>
> Thanks,
>
> S
>
>
> er, sorry, forgot to post the link...
>
> here it is:
> http://twistedsphinx.funsize.net/

That gets an "awesome" first pass grade.

It sure does look different presented that way, now, doesn't it?

I know what a huge bunch'o'stuff the docs are as I looked into just  
collecting what there was in the docs, on the Trac, and in the wild a  
while ago.

Great start!

S


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/c27b4f48/attachment.html>

From clemesha at gmail.com  Mon Nov 16 12:44:06 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Mon, 16 Nov 2009 11:44:06 -0800
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<88A79764-C25F-481D-AF17-22FA95C01E6F@gmail.com>
Message-ID: <d272f0690911161144n6d2693eaiefd13173126227f0@mail.gmail.com>

On Mon, Nov 16, 2009 at 10:36 AM, ssteinerX at gmail.com
<ssteinerx at gmail.com>wrote:

> On Nov 16, 2009, at 1:09 PM, Kevin Horn wrote:
>
>
>> Sorry, I seem to have missed something...where is "it" up to see?
>>
>> Thanks,
>>
>> S
>>
>>
> er, sorry, forgot to post the link...
>
> here it is:
> http://twistedsphinx.funsize.net/
>
>
> That gets an "awesome" first pass grade.
>
> It sure does look different presented that way, now, doesn't it?
>
Yeah, they look great! So much more "approachable".


-Alex





>
> I know what a huge bunch'o'stuff the docs are as I looked into just
> collecting what there was in the docs, on the Trac, and in the wild a while
> ago.
>
> Great start!
>
> S
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/2ad5f1ec/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 16 14:11:56 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Nov 2009 21:11:56 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
Message-ID: <20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>

On 06:09 pm, kevin.horn at gmail.com wrote:
>>
>er, sorry, forgot to post the link...
>
>here it is:
>http://twistedsphinx.funsize.net/

Thanks.  It's good to be able to see (at least an early draft of) what 
the outcome of this proposal will be.

I'm glad the reactions have been good so far, but I want to be a wet 
blanket for a moment and suggest that we try to avoid being influenced 
excessively by the "new look" effect.  It would be easy to give the 
existing documentation a face lift without switching systems entirely - 
it's just a matter of editing the template and/or the css.  What are the 
other benefits of the Sphinx output, in particular, the ones which it 
would be difficult to achieve with Lore?

I'll start with one possibility - the index.  Am I right in thinking 
this is automatically generated?  This is something Lore isn't currently 
capable of (there's a branch which addresses this, but I suspect it is 
far too much of a mess to ever merge, so we can ignore it).  Going along 
with this, how much control do we have over how the index is generated? 
Some of what shows up here probably doesn't merit being displayed as 
prominently as this - for example, the historical documents are mostly 
of, well, historical interesting.  What options do we have for changing 
how these are presented?

Jean-Paul



From kevin.horn at gmail.com  Mon Nov 16 15:37:20 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 16 Nov 2009 16:37:20 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
Message-ID: <562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>

On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:

> On 06:09 pm, kevin.horn at gmail.com wrote:
> >>
> >er, sorry, forgot to post the link...
> >
> >here it is:
> >http://twistedsphinx.funsize.net/
>
> Thanks.  It's good to be able to see (at least an early draft of) what
> the outcome of this proposal will be.
>
> I'm glad the reactions have been good so far, but I want to be a wet
> blanket for a moment and suggest that we try to avoid being influenced
> excessively by the "new look" effect.


Wet blanket away!  Every project needs a good "devil's advocate".


> It would be easy to give the
> existing documentation a face lift without switching systems entirely -
> it's just a matter of editing the template and/or the css.  What are the
> other benefits of the Sphinx output, in particular, the ones which it
> would be difficult to achieve with Lore?
>

Well, IMO, the absolute #1 benefit of using Sphinx over Lore is simply not
having to maintain Lore, which has nothing at all to do with the actual
output.  The next "tier" of advantages (again IMO) also have nothing to do
with the output, those advantages being:

- a more approachable document format (in the sense that I think there are
probably more people familiar with the Sphinx dialect of RestructuredText
than are familiar with Lore's subset of XHTML...and the number of Sphinx
users is growing)
- a much larger user base, and clear extension API, which allows us to take
advantage of existing extensions, etc.

Now having said that, switching to Sphinx *output* does have some advantages
(though by themselves they might not be compelling enough to switch).

- better navigation (prev & next links, table of contents)
- JS-based full text search
- CHTML output (very nice for those of us who use Win32...though I realize
we're a minority here in the Twisted world)
- Direct PDF output (somewhat immature and provided by a 3rd party
extension, but mature enough that someone has actually "typeset" a printed
version of the Python Tutorial with it)

You're absolutely right that just giving the docs a "facelift" wouldn't
require nearly so much effort, but I don't think it would buy us as much
with regard to the ultimate maintainability of the documentation.

I'll start with one possibility - the index.  Am I right in thinking
> this is automatically generated?  This is something Lore isn't currently
> capable of (there's a branch which addresses this, but I suspect it is
> far too much of a mess to ever merge, so we can ignore it).  Going along
> with this, how much control do we have over how the index is generated?
> Some of what shows up here probably doesn't merit being displayed as
> prominently as this - for example, the historical documents are mostly
> of, well, historical interesting.  What options do we have for changing
> how these are presented?
>
> Jean-Paul
>
>
> Hmmm...this depends on what you mean by "index". :)

There are (at least) 3 meanings of index as it relates to Sphinx.

- general index - currently empty
- module index - currently empty and, in fact, missing
- search index - auto-generated and used for the JS-based full text search
feature

However from you comments above I think you probably meant what Sphinx calls
the "table of contents" (which shows up in the index.html, contents.html,
etc.).  Not trying to nitpick here, just trying to be clear.  If I'm
incorrect in assuming that's what you meant, then you can ignore the
following and correct me, and we'll go from there.

In the meantime, I'll assume we're talking about the table of contents
(TOC).

RestructuredText (in a plain vanilla docutils install) does not have any way
of connecting documents together other than hyperlinks.  Sphinx defines a
"toctree" directive to get around this limitation.  This is a directive that
goes into your Sphinx source documents that looks something like this:

| ..toctree:
|
|    projects/conch/index
|    projects/core/index
|    ..etc

Typically these would be created manually in your Sphinx source, but in this
instance I am creating them using my conversion script which generates ReST
source from Lore source.

At Sphinx build-time, Sphinx expects every ReST source file to show up
someplace in one of these toctree directives, and will generate warnings if
a file doesn't. Sphinx gathers up the connections defined by these toctree
directives throughout the project into  a tree-shaped data structure and
uses this to generate the handy navigation links (prev & next), and also to
display all or part of the tree as a series of hyperlinks in a table of
contents format.  The depth of the tree displayed (or even displaying it at
all) is easily configurable.  Right now I'm showing quite a lot, because it
makes it easier to test my toctree-generating code, and it makes browsing my
output a bit simpler.  There's no reason we'd need to do this in the final
product.

Of course, if you mean the "index" index, then the answer is entirely
different :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/31b49b4c/attachment.html>

From phil at bubblehouse.org  Mon Nov 16 19:56:03 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 16 Nov 2009 21:56:03 -0500
Subject: [Twisted-Python] exarkun changed [#4029 - Twisted Web's
	wsgi.input isn't sufficiently file-like in all cases]
In-Reply-To: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
References: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
Message-ID: <4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>



-phil

[sent from my phone]

On Nov 16, 2009, at 4:56 PM, trac at twistedmatrix.com wrote:

> Ticket [#4029 - Twisted Web's wsgi.input isn't sufficiently file- 
> like in all cases] changed by exarkun <exarkun at twistedmatrix.com>:
>
> (In [27518]) Merge wsgi-none-readline-4029
>
> Author: rikyu
> Reviewer: exarkun
> Fixes: #4029
> Refs: #4114
>
> Add a test for WSGI requests which end up with a  
> `tempfile.TemporaryFile`
> for `Request.content` and fix the implementation to deal with this  
> case
> by not passing `None` for the length argument to `readline` (which  
> temp
> files do not accept, unlike StringIOs).  WSGI applications can now  
> receive
> requests with large bodies.
>
> ---------
> status   : assigned -> closed
> resolution:  -> fixed
> ---------
> http://twistedmatrix.com/trac/ticket/4029



From phil at bubblehouse.org  Mon Nov 16 19:58:05 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 16 Nov 2009 21:58:05 -0500
Subject: [Twisted-Python] exarkun changed [#4029 - Twisted Web's
	wsgi.input isn't sufficiently file-like in all cases]
In-Reply-To: <4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>
References: <E1NA9Z7-0003Nf-VO@cube.twistedmatrix.com>
	<4ED2BF1A-C080-4A21-B917-CD3AC5EB71FD@bubblehouse.org>
Message-ID: <ACD52A62-3608-464F-A561-16A2223F2330@bubblehouse.org>

Uh, sorry about that. You know, working this crazy email nonsense is  
hard for old codgers like me.

-phil

On Nov 16, 2009, at 9:56 PM, Phil Christensen wrote:

>
>
> -phil
>
> [sent from my phone]
>
> O



From namanvit at gmail.com  Mon Nov 16 23:07:50 2009
From: namanvit at gmail.com (naman jain)
Date: Tue, 17 Nov 2009 07:07:50 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
Message-ID: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>

Hi ,

I have a twisted client server model running.
My requirement is to launch my client from another program based on some
event received by the master program.

I try to launch it as a Process:
  foo = Process( target=twisted_client.main, args=(q,uid,))
  foo.start()
  foo.join()
  status = q.get()

Launching the client in this manner, is not showing reliable results.
Frequently , I get this error:
"*Failure instance: Traceback (failure with no frames): <class
'twisted.internet.error.TimeoutError'>: User timeout caused connection
failure.* "

when on the other side using:
os.system("python twisted_client.py") runs perfectly, connecting everytime
to the server.


I found relevant discussion on the following thread but could not figure out
a solution.

http://twistedmatrix.com/pipermail/twisted-python/2007-December/016430.html

Thanks for any help!

Regards
Naman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/49e8601f/attachment.html>

From fred at bsdhost.net  Mon Nov 16 23:23:04 2009
From: fred at bsdhost.net (Fred C)
Date: Mon, 16 Nov 2009 22:23:04 -0800
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
Message-ID: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>


I have to write a quick and dirty ReverseProxy with Twisted, for one  
of our internal project. I never used Twisted before, and I was  
wondering of someone have an handy example of a ReverseProxy with  
Twisted to help that I can use as bootstrap.

Many thanks.
Fred

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091116/53d506af/attachment.html>

From art at academ.org  Tue Nov 17 00:41:25 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 17 Nov 2009 13:41:25 +0600
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
Message-ID: <4B0253A5.6060503@academ.org>

Fred C пишет:
>
> I have to write a quick and dirty ReverseProxy with Twisted, for one 
> of our internal project. I never used Twisted before, and I was 
> wondering of someone have an handy example of a ReverseProxy with 
> Twisted to help that I can use as bootstrap.
>
There is an example of reverse proxy in twisted-web.

> Many thanks.
> Fred
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From fred at bsdhost.net  Tue Nov 17 00:48:25 2009
From: fred at bsdhost.net (Fred C)
Date: Mon, 16 Nov 2009 23:48:25 -0800
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <4B0253A5.6060503@academ.org>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>
	<4B0253A5.6060503@academ.org>
Message-ID: <8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>


On Nov 16, 2009, at 11:41 PM, Artem Bokhan wrote:

> Fred C пишет:
>>
>> I have to write a quick and dirty ReverseProxy with Twisted, for one
>> of our internal project. I never used Twisted before, and I was
>> wondering of someone have an handy example of a ReverseProxy with
>> Twisted to help that I can use as bootstrap.
>>
> There is an example of reverse proxy in twisted-web.

Sorry for not being more specific but That example don't explain how  
to do thing like url rewriting for example. Or maybe we are not  
talking about the same one.

Fred




From art at academ.org  Tue Nov 17 01:06:44 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 17 Nov 2009 14:06:44 +0600
Subject: [Twisted-Python] ReverseProxy (http) using Twisted
In-Reply-To: <8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>
References: <1B068AD0-6513-4A9B-B463-C3A60AE56A2D@bsdhost.net>	<4B0253A5.6060503@academ.org>
	<8629B30E-660B-45F7-BEB3-702D63DF75A0@bsdhost.net>
Message-ID: <4B025994.3050606@academ.org>

Fred C пишет:
> On Nov 16, 2009, at 11:41 PM, Artem Bokhan wrote:
>
>   
>> Fred C пишет:
>>     
>>> I have to write a quick and dirty ReverseProxy with Twisted, for one
>>> of our internal project. I never used Twisted before, and I was
>>> wondering of someone have an handy example of a ReverseProxy with
>>> Twisted to help that I can use as bootstrap.
>>>
>>>       
>> There is an example of reverse proxy in twisted-web.
>>     
>
> Sorry for not being more specific but That example don't explain how  
> to do thing like url rewriting for example. Or maybe we are not  
> talking about the same one.
>   
I think you should look into the source of twisted.web and redefine 
classes you need.
> Fred
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From glyph at twistedmatrix.com  Tue Nov 17 01:13:17 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Nov 2009 03:13:17 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<082F5FC1-34CF-4C77-981F-F6ACBF35EEA3@twistedmatrix.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
Message-ID: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>


On Nov 16, 2009, at 5:37 PM, Kevin Horn wrote:

> On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:
> On 06:09 pm, kevin.horn at gmail.com wrote:
> >>
> >er, sorry, forgot to post the link...
> >
> >here it is:
> >http://twistedsphinx.funsize.net/
> 
> Thanks.  It's good to be able to see (at least an early draft of) what
> the outcome of this proposal will be.
> 
> I'm glad the reactions have been good so far, but I want to be a wet
> blanket for a moment and suggest that we try to avoid being influenced
> excessively by the "new look" effect.  
> 
> Wet blanket away!  Every project needs a good "devil's advocate".

Well!  If it's time for criticism I've got some ;-).

I'd really like to see the stylesheets on this site adjusted to look as much as possible like the current Twisted style.  Use the verbatim stylesheets from twistedmatrix.com as much as possible.  I realize you'll have to have some custom elements, but it should be possible to at least avoid creating any new images and to stitch together the existing styles rather than make new ones wholesale.

If we ever have the resources to do a site redesign again (and I hope we do, it would be nice to get a fresh look every few years) I want to be able to re-style the _entire_ site.

We could do this with the Lore documentation too, but if we're going to make the investment I'd rather it be on something easier to maintain, as your conversion project promises to be.  I also suspect that it would be a lot easier to style the output from sphinx, as it is explicitly designed to be themable, and has actually been modified to have multiple, radically different stylesheets already.  Actually integrating this with the L&F of the rest of the Twisted site would go a long way towards demonstrating Sphinx's superiority in this area :).

On the "things to do" side, while the mere presence of this page is itself unintentionally hilarious - <http://twistedsphinx.funsize.net/projects/lore/howto/lore.html> - and it will likely be removed from the final output, it does contain a good enumeration of all the things that need to be converted in one place.  I suspect that if you made all those UNHANDLED_TAG output warts go away, we'd be most of the way towards converting all of the documentation.

> It would be easy to give the
> existing documentation a face lift without switching systems entirely -
> it's just a matter of editing the template and/or the css.  What are the
> other benefits of the Sphinx output, in particular, the ones which it
> would be difficult to achieve with Lore?
> 
> Well, IMO, the absolute #1 benefit of using Sphinx over Lore is simply not having to maintain Lore, which has nothing at all to do with the actual output.

I agree.

> The next "tier" of advantages (again IMO) also have nothing to do with the output, those advantages being:
> 
> - a more approachable document format (in the sense that I think there are probably more people familiar with the Sphinx dialect of RestructuredText than are familiar with Lore's subset of XHTML...and the number of Sphinx users is growing)

Actually, I think that this particular often-touted advantage is a wash.  The "approachableness" of ReST is questionable, especially once you get into the weird corner cases where the syntax just completely falls apart and turns into an incomprehensible line-noise jumble.  I mean, the syntax for tables reads like a joke about how trying to make the plain-text input look like the output is a bad idea: <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.  Consider trying to re-flow the contents of a table cell after adding text to it, for example.  Plus, a _lot_ of people know HTML -- still many more than know ReST, I would argue -- and lore adds relatively little to HTML.

However, the motivation for choosing HTML was that "any day now" there would be a good, commonly used, GUI editor for HTML documents and we could easily annotate the output of one of those with the extra metadata that lore wanted.  That hasn't happened.  What *has* happened is that despite the difficulty involved in parsing and emitting ReST as compared to something fairly regular like HTML or XML, tools like these have been emerging:

    http://kib2.free.fr/reSTinPeace/
    http://blog.enthought.com/?p=127

which let users edit ReST documents in a sort-of-wsyiwyg way, so you get immediate feedback when you put a "|" or a "`" in some obscure spot that makes your entire document disappear, rather than trying to hunt it down after an hour of writing.  Plus, docutils provides a document model for ReST so you can transform it programmatically and ignore its syntactic peculiarities.

Which all comes down to the fact that I'm mainly just restating this point as the primary advantage:

> - a much larger user base, and clear extension API, which allows us to take advantage of existing extensions, etc.

The active user community means that not only is somebody else mantaining the basics, lots of other people are working on *tools* that we can use for more intense usage.  I am personally looking forward to using some of those GUI tools for actually editing the documentation; it's a much more streamlined workflow than running the 'lore' commandline and reloading in a browser.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/c3f6a947/attachment.html>

From lasizoillo at gmail.com  Tue Nov 17 03:00:36 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Tue, 17 Nov 2009 11:00:36 +0100
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
Message-ID: <49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>

2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
>
> I have written up a proposal here:
>
> http://twistedsphinx.funsize.net/proposal.html
>

In this proposal you say:

Development Work
 * fabric fabfile for automation of docs workflow

Future Work
 * This page has some stuff on using cog in RestructuredText comments
to generate the output of sample scripts.

The second point (in Future Work) uses cog that is integrated in paver:
 * Paver allow automation of docs workflow (fabric is not needed).
 * With paver you can create an bootstraped instalation:
    http://www.blueskyonmars.com/projects/paver/getting_started.html#but-people-don-t-have-paver-yet
 * Paver is compatible with setuptools and distutils.

I think that fabric is great for cluster distributions, but paver is
better for manage docs.

Regards,
 Javi



From dripton at ripton.net  Tue Nov 17 07:30:04 2009
From: dripton at ripton.net (David Ripton)
Date: Tue, 17 Nov 2009 06:30:04 -0800
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
Message-ID: <20091117143004.GA17404@vidar.dreamhost.com>

On 2009.11.17 07:07:50 +0100, naman jain wrote:
> I try to launch it as a Process:
>   foo = Process( target=twisted_client.main, args=(q,uid,))
>   foo.start()
>   foo.join()
>   status = q.get()

> Launching the client in this manner, is not showing reliable results.

You didn't give a long enough example to be certain, but that looks like
multiprocessing.Process syntax.  The multiprocessing module does not
work reliably with Twisted.  Neither does the subprocess module.

You should use the equivalent Twisted process functionality, shown at
http://twistedmatrix.com/projects/core/documentation/howto/process.html

There's also https://launchpad.net/ampoule, but for the small example
you show, the basic Twisted process stuff should be fine.

-- 
David Ripton    dripton at ripton.net



From james at tanis.us  Tue Nov 17 07:45:12 2009
From: james at tanis.us (James Tanis)
Date: Tue, 17 Nov 2009 09:45:12 -0500
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client
	but not for windows client
In-Reply-To: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
References: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
Message-ID: <9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>

I haven't worked with the telnet protocol since the 1.x series honestly and I remember having to add a good bit of code to support all the control functions in order to get things working as nicely as I wanted. That aside, echo (or lack thereof) did work fine, but "will" will not force a client to do anything. I believe you need to use "do"/"dont" to get the effect you desire.

--
James Tanis
Technical Coordinator
Computer Science Department
Monsignor Donovan Catholic High School



On Nov 16, 2009, at 9:14 AM, filoufake-python at yahoo.fr wrote:

> Hello,
> 
> Some month ago, exarkun helped me in the development of a very simplified
> telnet server.
> 
> I observed that when I connect from a windows client, the LOCALECHO
> is set to "OFF" after the authentication. I cannot set it "ON"
> afterwards. Everything typed in the client console is hidden.
> When I use a linux client, the "ECHO" is OFF just for typing the 
> password and then ON again.
> 
> Does someone has an idea how to do with the windows client?
> I tried to set the ECHO ON using self.transport.will(ECHO) but that
> doesn't work.
> 
> Here is the code:
> 
> ############################################################
> import sys
> from zope.interface import implements
> from twisted.internet import protocol
> from twisted.python import log
> from twisted.cred import error
> from twisted.cred import portal
> from twisted.cred import checkers
> from twisted.cred import credentials
> from twisted.conch.telnet import AuthenticatingTelnetProtocol
> from twisted.conch.telnet import StatefulTelnetProtocol
> from twisted.conch.telnet import ITelnetProtocol
> from twisted.conch.telnet import TelnetTransport
> from twisted.conch.telnet import ECHO
> 
> class Realm:
>  implements(portal.IRealm)
> 
>  def requestAvatar(self, avatarId, mind, *interfaces):
>    if ITelnetProtocol in interfaces:
>      av = MyTelnet()
>      av.transport.will(ECHO)
>      av.state = 'Command'
>      return ITelnetProtocol, av, lambda:None
>    raise NotImplementedError("Not supported by this realm")
> 
> class MyTelnet(StatefulTelnetProtocol):
>  def telnet_Command(self, line):
>    print "line received via telnet", line
>    self.sendLine('coucou man, you send me %s' % line)
> 
> def main():
>  r = Realm()
>  p = portal.Portal(r)
>  c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
>  c.addUser("AA", "aa")
>  p.registerChecker(c)
>  p.registerChecker(checkers.AllowAnonymousAccess())
>  f = protocol.ServerFactory()
>  f.protocol = lambda: TelnetTransport(AuthenticatingTelnetProtocol, p)
>  log.startLogging(sys.stdout)
>  from twisted.internet import reactor
>  reactor.listenTCP(4738, f)
>  reactor.run()
> 
> if __name__ == '__main__':
>  main()
> ############################################################
> 
> Best Regards,
> Philippe
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/6683c3e6/attachment.html>

From james at tanis.us  Tue Nov 17 08:02:54 2009
From: james at tanis.us (James Tanis)
Date: Tue, 17 Nov 2009 10:02:54 -0500
Subject: [Twisted-Python] Telnet server: localecho "ON" for linux client
	but not for windows client
In-Reply-To: <9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>
References: <215990.78277.qm@web26103.mail.ukl.yahoo.com>
	<9881CD24-C41C-4A1C-8453-D31F2D8CC10E@tanis.us>
Message-ID: <5AAFE915-8B31-4CF7-A263-63A25E359707@tanis.us>

I looked at your code a bit more, read below.


> 
> 
> 
> On Nov 16, 2009, at 9:14 AM, filoufake-python at yahoo.fr wrote:
> 
>> 
>>    raise NotImplementedError("Not supported by this realm")
>> 
>> class MyTelnet(StatefulTelnetProtocol):
>>  def telnet_Command(self, line):
>>    print "line received via telnet", line
>>    self.sendLine('coucou man, you send me %s' % line)

According to the documentation: the default telnet_User method returns 'Password' to go into Password mode, and the default telnet_Password method returns 'Command' to go into Command mode."

The problem, I'm guessing, is your reimplementing the telnet_Command method wherein you don't appropriately handle turning echo back on. My suggestion would be to look in Twisted's code to find the "default" command method, there should be something obvious there which performs the function that you need.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/491cefdf/attachment-0001.html>

From terry at jon.es  Tue Nov 17 08:33:06 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Nov 2009 16:33:06 +0100
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
Message-ID: <19202.49714.279135.98921@jon.es>

Is there a reason why the Deferred class doesn't have a tee method like the
following (untested)?

    def tee(self, d):
        def _cb(arg):
            d.callback(arg)
            return arg

        def _eb(arg):
            d.errback(arg)
            return arg

        return self.addCallbacks(_cb, _eb)

I suppose it could be called teeDeferred to correspond to chainDeferred.
And I guess it's clear what it does and why it's quite different from
chainDeferred. I at least would find it quite useful.

Terry



From landreville at deadtreepages.com  Tue Nov 17 08:35:09 2009
From: landreville at deadtreepages.com (Landreville)
Date: Tue, 17 Nov 2009 10:35:09 -0500
Subject: [Twisted-Python] Multiple deferreds that depend on each other
Message-ID: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>

I know people ask about deferreds all the time (and i've read through a
bunch of those questions), but there is still one thing I don't quite grasp.

If I want to do a number of actions in a row that each return a deferred but
depend on eachother, do I need to nest those callbacks?

Ie if i want to:
1. Call database function using adbabi
2. Call xmlrpc method using result from 1
3. Call database using result from 2

Would I just put 2 inside the callback for 1 and then put 3 inside the
callback for 2?

How would I do that in one function? All the examples I have seen have a
function calling one method returning a deferred and then placing the logic
(doing something with the result) in the callback, but do not deal with
multiple deferreds that depend on each other.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/3be69013/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov 17 08:45:01 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Nov 2009 15:45:01 -0000
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: <19202.49714.279135.98921@jon.es>
References: <19202.49714.279135.98921@jon.es>
Message-ID: <20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>

On 03:33 pm, terry at jon.es wrote:
>Is there a reason why the Deferred class doesn't have a tee method like 
>the
>following (untested)?
>
>    def tee(self, d):
>        def _cb(arg):
>            d.callback(arg)
>            return arg
>
>        def _eb(arg):
>            d.errback(arg)
>            return arg
>
>        return self.addCallbacks(_cb, _eb)
>
>I suppose it could be called teeDeferred to correspond to 
>chainDeferred.
>And I guess it's clear what it does and why it's quite different from
>chainDeferred. I at least would find it quite useful.

We implemented this 5 or 6 times at Divmod.  The most recent incarnation 
looks like this:

    http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py

I admit that I'd probably find it about as useful as I find explicit 
calls to Deferred.chainDeferred - perhaps even slightly more so.  Though 
that's a low bar, I can't remember the last time I explicitly called 
chainDeferred; it's probably been a couple years.

Not to say it's a bad idea, but I don't think it's _obviously_ a great 
idea.  If someone wanted to contribute a documented, tested 
implementation, particularly with examples of common patterns that it 
simplifies, then you could probably convince someone to commit it.

Jean-Paul



From rlotun at gmail.com  Tue Nov 17 09:08:22 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 17 Nov 2009 16:08:22 +0000
Subject: [Twisted-Python] Multiple deferreds that depend on each other
In-Reply-To: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
References: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
Message-ID: <95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>

Hi Landreville,

> If I want to do a number of actions in a row that each return a deferred but
> depend on eachother, do I need to nest those callbacks?
> Ie if i want to:
> 1. Call database function using adbabi
> 2. Call xmlrpc method using result from 1
> 3. Call database using result from 2
> Would I just put 2 inside the callback for 1 and then put 3 inside the
> callback for 2?

By multiple deferreds that depend on each other, you probably mean a
linear firing of actions based on callbacks of previous actions. The
only way to do that is to trigger actions in callbacks of the
deferreds in question, as you allude to.

Yeah, so roughly something like this would work:

def db_call(arg):
   dfr = make_db_call_in_thread(arg)
   return dfr

def xmlrpc_call(arg):
   dfr = make_call(arg)
   return dfr

dfr = db_call(some_initial_arg)
dfr.addCallback(xmlrpc)
dfr.addCallback(db_call)

> How would I do that in one function? All the examples I have seen have a
> function calling one method returning a deferred and then placing the logic
> (doing something with the result) in the callback, but do not deal with
> multiple deferreds that depend on each other.

To do it in one function, you could use something like:

def complex_call():
    def db_call(arg):
       dfr = make_db_call_in_thread(arg)
       return dfr

    def xmlrpc_call(arg):
       dfr = make_call(arg)
       return dfr

    dfr = db_call(some_initial_arg)
    dfr.addCallback(xmlrpc_call)
    dfr.addCallback(db_call)
    dfr.addErrback(my_errback_handler)
    return dfr

Or you can make each handler a method on a class. Another way to do it
is to use inlineCallbacks:

from twisted.internet import defer
@defer.inlineCallbacks
def example():
    res = yield db_call(some_initial_arg)
    rpc_res = yield xmlrpc_call(res)
    db_res = yield db_call(rpc_res)

In the above example, it's all still asynchronous (if not parallel),
but it looks like it's synchronous, using the magic of decorators and
Python 2.5+'s ability to retrieve results from yield statements.

Hope that makes sense.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From terry at jon.es  Tue Nov 17 09:27:57 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Nov 2009 17:27:57 +0100
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: Your message at 15:45:01 on Tuesday, 17 November 2009
References: <19202.49714.279135.98921@jon.es>
	<20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>
Message-ID: <19202.53005.747275.833925@jon.es>

>>>>> "JP" == exarkun  <exarkun at twistedmatrix.com> writes:
JP> We implemented this 5 or 6 times at Divmod.

I'm not surprised. Given that I'd have thought it would've made it into
defer.py at some point.

JP> The most recent incarnation looks like this:
JP> http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py

Thanks.

That's more of a radial / hub pattern. I'm dealing with the case of already
having a deferred around and wanting to tee off it without interfering with
its callback/errback chain. E.g., I have a class that's already passed a
deferred back to its caller, and I later need to arrange to do some more
stuff when the deferred fires. The caller of my class may in the meantime
have added callbacks to the deferred, I tee off it with no effect on my
original caller. That's just one example use.  I'm sure you'll have
implemented something for similar situations, too.

JP> Not to say it's a bad idea, but I don't think it's _obviously_ a great
JP> idea.  If someone wanted to contribute a documented, tested
JP> implementation, particularly with examples of common patterns that it
JP> simplifies, then you could probably convince someone to commit it.

I don't need it committed, I was just wondering why something like that
doesn't already exist. Re patterns: it would be great to have a series of
diagrams illustrating situations one might want to deal with and showing
how these can be done with Deferred code. Your Epsilon class could be shown
as a hub with new listeners arriving, ready for the triggering of the
callback. The tee diagram would show a T (or multiple Ts on the same
callback chain) in the obvious way. add{Callback,Errback} is like a normal
UNIX pipe and, stretching things a little, chainDeferred reminds me a bit
of UNIX exec (though with real differences).

There's a PyCon talk in there somewhere. Like Patterns of Asynchronous Flow
of Control using Twisted Deferreds. It often feels to me like there's a
lurking taxonomy of Deferred use cases or building blocks that's just
waiting for someone to come along and make really clear to the world. I'd
really love to do it, but I just don't have the time.

Terry



From landreville at deadtreepages.com  Tue Nov 17 10:15:02 2009
From: landreville at deadtreepages.com (Landreville)
Date: Tue, 17 Nov 2009 12:15:02 -0500
Subject: [Twisted-Python] Multiple deferreds that depend on each other
In-Reply-To: <95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>
References: <9d748c780911170735t5a81b4c5n51fb863ccd5b5abe@mail.gmail.com>
	<95bb10690911170808t42ab6526na0e5a350345295ab@mail.gmail.com>
Message-ID: <9d748c780911170915i7a0d408cpb75222d0d816b513@mail.gmail.com>

Oh I like the look of the inlineCallbacks. Is there a way that I can still
use inspect.getargspec to retrieve the arg names of my original method, as
opposed to the generator returned by inlineCallbacks.

I noticed it copies the __doc__ over, but is there an attribute where I can
still inspect my original method?

On Tue, Nov 17, 2009 at 11:08 AM, Reza Lotun <rlotun at gmail.com> wrote:

> Hi Landreville,
>
> > If I want to do a number of actions in a row that each return a deferred
> but
> > depend on eachother, do I need to nest those callbacks?
> > Ie if i want to:
> > 1. Call database function using adbabi
> > 2. Call xmlrpc method using result from 1
> > 3. Call database using result from 2
> > Would I just put 2 inside the callback for 1 and then put 3 inside the
> > callback for 2?
>
> By multiple deferreds that depend on each other, you probably mean a
> linear firing of actions based on callbacks of previous actions. The
> only way to do that is to trigger actions in callbacks of the
> deferreds in question, as you allude to.
>
> Yeah, so roughly something like this would work:
>
> def db_call(arg):
>   dfr = make_db_call_in_thread(arg)
>   return dfr
>
> def xmlrpc_call(arg):
>   dfr = make_call(arg)
>   return dfr
>
> dfr = db_call(some_initial_arg)
> dfr.addCallback(xmlrpc)
> dfr.addCallback(db_call)
>
> > How would I do that in one function? All the examples I have seen have a
> > function calling one method returning a deferred and then placing the
> logic
> > (doing something with the result) in the callback, but do not deal with
> > multiple deferreds that depend on each other.
>
> To do it in one function, you could use something like:
>
> def complex_call():
>    def db_call(arg):
>       dfr = make_db_call_in_thread(arg)
>       return dfr
>
>    def xmlrpc_call(arg):
>       dfr = make_call(arg)
>       return dfr
>
>    dfr = db_call(some_initial_arg)
>    dfr.addCallback(xmlrpc_call)
>    dfr.addCallback(db_call)
>    dfr.addErrback(my_errback_handler)
>    return dfr
>
> Or you can make each handler a method on a class. Another way to do it
> is to use inlineCallbacks:
>
> from twisted.internet import defer
> @defer.inlineCallbacks
> def example():
>    res = yield db_call(some_initial_arg)
>    rpc_res = yield xmlrpc_call(res)
>    db_res = yield db_call(rpc_res)
>
> In the above example, it's all still asynchronous (if not parallel),
> but it looks like it's synchronous, using the magic of decorators and
> Python 2.5+'s ability to retrieve results from yield statements.
>
> Hope that makes sense.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/6b2f4993/attachment.html>

From kevin.horn at gmail.com  Tue Nov 17 10:51:36 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 11:51:36 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
Message-ID: <562bcc10911170951s171a401h615e70c04f1d8fd4@mail.gmail.com>

On Tue, Nov 17, 2009 at 2:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Nov 16, 2009, at 5:37 PM, Kevin Horn wrote:
>
> On Mon, Nov 16, 2009 at 3:11 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 06:09 pm, kevin.horn at gmail.com wrote:
>> >>
>> >er, sorry, forgot to post the link...
>> >
>> >here it is:
>> >http://twistedsphinx.funsize.net/
>>
>> Thanks.  It's good to be able to see (at least an early draft of) what
>> the outcome of this proposal will be.
>>
>> I'm glad the reactions have been good so far, but I want to be a wet
>> blanket for a moment and suggest that we try to avoid being influenced
>> excessively by the "new look" effect.
>
>
> Wet blanket away!  Every project needs a good "devil's advocate".
>
>
> Well!  If it's time for criticism I've got some ;-).
>
> I'd really like to see the stylesheets on this site adjusted to look as
> much as possible like the current Twisted style.  Use the verbatim
> stylesheets from twistedmatrix.com as much as possible.  I realize you'll
> have to have some custom elements, but it should be possible to at least
> avoid creating any new images and to stitch together the existing styles
> rather than make new ones wholesale.
>
> If we ever have the resources to do a site redesign again (and I hope we
> do, it would be nice to get a fresh look every few years) I want to be able
> to re-style the _entire_ site.
>
> We could do this with the Lore documentation too, but if we're going to
> make the investment I'd rather it be on something easier to maintain, as
> your conversion project promises to be.  I also suspect that it would be a
> lot easier to style the output from sphinx, as it is explicitly designed to
> be themable, and has actually been modified to have multiple, radically
> different stylesheets already.  Actually integrating this with the L&F of
> the rest of the Twisted site would go a long way towards demonstrating
> Sphinx's superiority in this area :).
>

The current look is the "sphinxdoc" theme, that comes with Sphinx.  My
intention is to create a new one for the Twisted docs that will be very
similar to the Twisted site.  I haven't really even started on this yet,
though.


> On the "things to do" side, while the mere presence of this page is itself
> unintentionally hilarious - <
> http://twistedsphinx.funsize.net/projects/lore/howto/lore.html> - and it
> will likely be removed from the final output, it does contain a good
> enumeration of all the things that need to be converted in one place.  I
> suspect that if you made all those UNHANDLED_TAG output warts go away, we'd
> be most of the way towards converting all of the documentation.
>

Heh, that is pretty funny.  If you'll notice though, almost all the
UNHANDLED_TAG stuff (on that page anyway) is related to the table on that
page.  I haven't even touched tables yet.  I don't think they'll be too
difficult, as long as there aren't any nested tables (there aren't in the
Twisted docs...I haven't looked at the Divmod stuff yet).  Since I think
there's only 2 tables in the Twisted docs, there kind of low on the priority
list.

FYI, those UNHANDLED_TAG messages are intentionally ugly, to make it easier
to find things that haven't been handled yet.

As far as what still needs to be done on conversion, this falls into a
couple of main areas:

- handling unhandled tags
- fixing some whitespace handling issues (notice that nested lists are
totally borked at the moment)
- going back through the "Using Lore" document, making sure all the various
tags are being handled correctly, and fixing any     problems
- building a "twisteddocs" theme

After this stuff is done, then the real grunt-work begins...fixing the bits
manually that can't be easily converted.  So far, I think this only really
involves 3 pages of Lore XHTML, but I'm sure I'll find other problems. :)

> The next "tier" of advantages (again IMO) also have nothing to do with the
> output, those advantages being:
>
> - a more approachable document format (in the sense that I think there are
> probably more people familiar with the Sphinx dialect of RestructuredText
> than are familiar with Lore's subset of XHTML...and the number of Sphinx
> users is growing)
>
>
> Actually, I think that this particular often-touted advantage is a wash.
>  The "approachableness" of ReST is questionable, especially once you get
> into the weird corner cases where the syntax just completely falls apart and
> turns into an incomprehensible line-noise jumble.  I mean, the syntax for
> tables reads like a joke about how trying to make the plain-text input look
> like the output is a bad idea: <
> http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.
>  Consider trying to re-flow the contents of a table cell after adding text
> to it, for example.  Plus, a _lot_ of people know HTML -- still many more
> than know ReST, I would argue -- and lore adds relatively little to HTML.
>

I'm not sure I agree here.  While it's true that lots of people know HTML,
I'm not sure that that helps more than it hurts.  First of all, XHTML is
subtly different from HTML, but more importantly, everyone  who "knows" HTML
doesn't know it to the same level, and has different opinions about what
different elements should be used for.  The "Using Lore" page spells things
out pretty clearly, but even some of those clear rules aren't followed very
well in the actual Twisted docs.  I think because people "know" HTML, they
just use what they know instead of paying close attention to the actual Lore
rules.  (going way out on the opinion limb here, though)

I guess my point is that I think it takes about the same amount of effort to
really learn the Lore subset of XHTML as it does to learn Sphinx's dialect
of RestructuredText.  And more people know Sphinx-RestructuredText to the
level practically usable for documentation (from using it on other
projects).  There's arguments either way I guess.

On a personal level, having written docs in other XML/XHTML dialects and in
Sphinx/ReST, I know I can write them way faster and with much less thought
to format in ReST.  And, IMO, those corner cases are very much in the
corner.  They don't come up very often, at least for me.

There's no defending ReST tables though.  You're totally right there.  Yuck.


> However, the motivation for choosing HTML was that "any day now" there
> would be a good, commonly used, GUI editor for HTML documents and we could
> easily annotate the output of one of those with the extra metadata that lore
> wanted.  That hasn't happened.  What *has* happened is that despite the
> difficulty involved in parsing and emitting ReST as compared to something
> fairly regular like HTML or XML, tools like these have been emerging:
>
>     http://kib2.free.fr/reSTinPeace/
>     http://blog.enthought.com/?p=127
>
> which let users edit ReST documents in a sort-of-wsyiwyg way, so you get
> immediate feedback when you put a "|" or a "`" in some obscure spot that
> makes your entire document disappear, rather than trying to hunt it down
> after an hour of writing.  Plus, docutils provides a document model for ReST
> so you can transform it programmatically and ignore its syntactic
> peculiarities.
>

I think the underlying reason this has happened is that ReST is less
flexible than HTML, and therefore less ambiguous.  I couldn't tell you why I
think that, though.  Just a feeling.


> Which all comes down to the fact that I'm mainly just restating this point
> as the primary advantage:
>
> - a much larger user base, and clear extension API, which allows us to take
> advantage of existing extensions, etc.
>
>
> The active user community means that not only is somebody else mantaining
> the basics, lots of other people are working on *tools* that we can use for
> more intense usage.  I am personally looking forward to using some of those
> GUI tools for actually editing the documentation; it's a much more
> streamlined workflow than running the 'lore' commandline and reloading in a
> browser.
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/5a4e7e14/attachment.html>

From kevin.horn at gmail.com  Tue Nov 17 11:00:21 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 12:00:21 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
Message-ID: <562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>

On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com> wrote:

> 2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
> >
> > I have written up a proposal here:
> >
> > http://twistedsphinx.funsize.net/proposal.html
> >
>
> In this proposal you say:
>
> Development Work
>  * fabric fabfile for automation of docs workflow
>
> Future Work
>  * This page has some stuff on using cog in RestructuredText comments
> to generate the output of sample scripts.
>
> The second point (in Future Work) uses cog that is integrated in paver:
>  * Paver allow automation of docs workflow (fabric is not needed).
>  * With paver you can create an bootstraped instalation:
>
> http://www.blueskyonmars.com/projects/paver/getting_started.html#but-people-don-t-have-paver-yet
>  * Paver is compatible with setuptools and distutils.
>
> I think that fabric is great for cluster distributions, but paver is
> better for manage docs.
>
> Regards,
>  Javi
>
>
For the moment, I plan to continue using fabric, for the following reasons:

- I'm already familiar with it
- it does what I need (run local commands, and send stuff over SSH)

I think Paver might be very useful down the road, though.  I'll definitely
check into it more as this project progresses.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/96297c8c/attachment.html>

From kevin.horn at gmail.com  Tue Nov 17 11:20:39 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 12:20:39 -0600
Subject: [Twisted-Python] tee method in twisted.internet.defer.py ?
In-Reply-To: <19202.53005.747275.833925@jon.es>
References: <19202.49714.279135.98921@jon.es>
	<20091117154501.27565.1955490852.divmod.xquotient.252@localhost.localdomain>
	<19202.53005.747275.833925@jon.es>
Message-ID: <562bcc10911171020g3f0cabe7qdeb3e9b0f25369a5@mail.gmail.com>

On Tue, Nov 17, 2009 at 10:27 AM, Terry Jones <terry at jon.es> wrote:

> >>>>> "JP" == exarkun  <exarkun at twistedmatrix.com> writes:
>
> I don't need it committed, I was just wondering why something like that
> doesn't already exist. Re patterns: it would be great to have a series of
> diagrams illustrating situations one might want to deal with and showing
> how these can be done with Deferred code. Your Epsilon class could be shown
> as a hub with new listeners arriving, ready for the triggering of the
> callback. The tee diagram would show a T (or multiple Ts on the same
> callback chain) in the obvious way. add{Callback,Errback} is like a normal
> UNIX pipe and, stretching things a little, chainDeferred reminds me a bit
> of UNIX exec (though with real differences).
>
> There's a PyCon talk in there somewhere. Like Patterns of Asynchronous Flow
> of Control using Twisted Deferreds. It often feels to me like there's a
> lurking taxonomy of Deferred use cases or building blocks that's just
> waiting for someone to come along and make really clear to the world. I'd
> really love to do it, but I just don't have the time.
>
>
I would so love to see that talk...or read that paper...or whatever.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/934f2d30/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov 17 12:16:44 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Nov 2009 19:16:44 -0000
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
	<562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
Message-ID: <20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>

On 06:00 pm, kevin.horn at gmail.com wrote:
>On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com> 
>wrote:
>>2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
>> >
>> > I have written up a proposal here:
>> >
>> > http://twistedsphinx.funsize.net/proposal.html
>> >
>>
>>In this proposal you say:
>>
>>Development Work
>>  * fabric fabfile for automation of docs workflow
>>
>>Future Work
>>  * This page has some stuff on using cog in RestructuredText comments
>>to generate the output of sample scripts.
>>
>>The second point (in Future Work) uses cog that is integrated in 
>>paver:
>>  * Paver allow automation of docs workflow (fabric is not needed).
>>  * With paver you can create an bootstraped instalation:
>>
>>http://www.blueskyonmars.com/projects/paver/getting_started.html#but- 
>>people-don-t-have-paver-yet
>>  * Paver is compatible with setuptools and distutils.
>>
>>I think that fabric is great for cluster distributions, but paver is
>>better for manage docs.
>>
>>Regards,
>>  Javi
>For the moment, I plan to continue using fabric, for the following 
>reasons:
>
>- I'm already familiar with it
>- it does what I need (run local commands, and send stuff over SSH)
>
>I think Paver might be very useful down the road, though.  I'll 
>definitely
>check into it more as this project progresses.

Paver and fabric and such are only significant for the conversion, 
though, right?

Jean-Paul



From kevin.horn at gmail.com  Tue Nov 17 12:42:57 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 17 Nov 2009 13:42:57 -0600
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<49414f570911170200ha576b36vbd86d512db9fa42b@mail.gmail.com>
	<562bcc10911171000o1c56813o3c15b044b2f7a716@mail.gmail.com>
	<20091117191644.27565.1514572271.divmod.xquotient.268@localhost.localdomain>
Message-ID: <562bcc10911171142m2b5f0a58i8e9fc9c18150b01b@mail.gmail.com>

On Tue, Nov 17, 2009 at 1:16 PM, <exarkun at twistedmatrix.com> wrote:

> On 06:00 pm, kevin.horn at gmail.com wrote:
> >On Tue, Nov 17, 2009 at 4:00 AM, lasizoillo <lasizoillo at gmail.com>
> >wrote:
> >>2009/11/11 Kevin Horn <kevin.horn at gmail.com>:
> >> >
> >> > I have written up a proposal here:
> >> >
> >> > http://twistedsphinx.funsize.net/proposal.html
> >> >
> >>
> >>In this proposal you say:
> >>
> >>Development Work
> >>  * fabric fabfile for automation of docs workflow
> >>
> >>Future Work
> >>  * This page has some stuff on using cog in RestructuredText comments
> >>to generate the output of sample scripts.
> >>
> >>The second point (in Future Work) uses cog that is integrated in
> >>paver:
> >>  * Paver allow automation of docs workflow (fabric is not needed).
> >>  * With paver you can create an bootstraped instalation:
> >>
> >>http://www.blueskyonmars.com/projects/paver/getting_started.html#but-
> >>people-don-t-have-paver-yet
> >>  * Paver is compatible with setuptools and distutils.
> >>
> >>I think that fabric is great for cluster distributions, but paver is
> >>better for manage docs.
> >>
> >>Regards,
> >>  Javi
> >For the moment, I plan to continue using fabric, for the following
> >reasons:
> >
> >- I'm already familiar with it
> >- it does what I need (run local commands, and send stuff over SSH)
> >
> >I think Paver might be very useful down the road, though.  I'll
> >definitely
> >check into it more as this project progresses.
>
> Paver and fabric and such are only significant for the conversion,
> though, right?
>
> Jean-Paul
>
>
Yes.  For right now at least, this is the case.

I think one or the other should probably be used in the future to
automate/streamline Twisted releases, since this has been a long-standing
desire of the development team (at least that's my perception...and there
are a couple of tickets in Trac about it).  This would prevent maintenance
of yet another homegrown Twisted tool to perform said automation.

But that's a discussion for another day.  Or at least another thread.

Right now I'm using fabric strictly as a (mostly) platform-neutral
alternative to shell scripts (or some other solution) to be able to convert
docs to ReST, build the Sphinx project, and deploy them to the server (sort
of...still working out some kinks) with a single command.  Once the
conversion takes place (assuming this project is successful) much of my
current need for it will go away, though it still might be useful for other
things (as I mentioned above).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091117/95e21f4b/attachment.html>

From lvh at laurensvh.be  Tue Nov 17 13:58:42 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 17 Nov 2009 21:58:42 +0100
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
Message-ID: <cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>

> Actually, I think that this particular often-touted advantage is a wash.
>  The "approachableness" of ReST is questionable, especially once you get
> into the weird corner cases where the syntax just completely falls apart and
> turns into an incomprehensible line-noise jumble.  I mean, the syntax for
> tables reads like a joke about how trying to make the plain-text input look
> like the output is a bad idea:
> <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#tables>.
>  Consider trying to re-flow the contents of a table cell after adding text
> to it, for example.  Plus, a _lot_ of people know HTML -- still many more
> than know ReST, I would argue -- and lore adds relatively little to HTML.
> However, the motivation for choosing HTML was that "any day now" there would
> be a good, commonly used, GUI editor for HTML documents and we could easily
> annotate the output of one of those with the extra metadata that lore
> wanted.  That hasn't happened.  What *has* happened is that despite the
> difficulty involved in parsing and emitting ReST as compared to something
> fairly regular like HTML or XML, tools like these have been emerging:
>     http://kib2.free.fr/reSTinPeace/
>     http://blog.enthought.com/?p=127

Not to detract from any of the points you've made regarding reST's
table syntax, but I've found it to be quite livable-with using
table.el. Emacs users might be interested:
http://table.sourceforge.net/

Laurens



From vitaly at synapticvision.com  Tue Nov 17 14:07:20 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 17 Nov 2009 16:07:20 -0500
Subject: [Twisted-Python] server push data to client
Message-ID: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>

hi,
what could be the way(Producer/Consumer?) and simple,basic example to  
push data(~10Kb) from Twisted based server(that listening for incoming  
requests) into  client side(for example FLEX) not as a response to the  
incoming request, but occasionally, triggered by server side???

In traditional client/server arch, the server is listening, accepting  
and responding to the client's requests, but here I'm looking for  
something that initiated from server itself and pushing data to client.

Appreciate the help.





From wolfgang at rohdewald.de  Tue Nov 17 17:12:51 2009
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Wed, 18 Nov 2009 01:12:51 +0100
Subject: [Twisted-Python] pb, viewable,
	avatars: The example chatserver is buggy
Message-ID: <200911180112.51332.wolfgang@rohdewald.de>

I tried this example:
http://twistedmatrix.com/projects/core/documentation/howto/pb-cred.html#auto18

(scripts chatserver.py and chatclient.py)

but they do not work with python 2.6.4 (twisted 8.2.0).

Before the client can do much, the server function
User.detached is called resulting in an exception later
when User.send is called but self.remote is None.

I can fix this by changing chatclient.py:

def connected(self, perspective):
   self.perspective = perspective  
   ... and continue as in the original script

it seems that otherwise the perspective is destroyed
too early.

also the documentation should perhaps mention that the
client can only connect to the server once because the
server code does not remove a user from her group when
she detaches.

Is there any more complete example anywhere with better
error handling?

-- 
Wolfgang



From lasizoillo at gmail.com  Tue Nov 17 20:29:45 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Wed, 18 Nov 2009 04:29:45 +0100
Subject: [Twisted-Python] server push data to client
In-Reply-To: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
References: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
Message-ID: <49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>

2009/11/17  <vitaly at synapticvision.com>:
> hi,
> what could be the way(Producer/Consumer?) and simple,basic example to
> push data(~10Kb) from Twisted based server(that listening for incoming
> requests) into  client side(for example FLEX) not as a response to the
> incoming request, but occasionally, triggered by server side???
>
> In traditional client/server arch, the server is listening, accepting
> and responding to the client's requests, but here I'm looking for
> something that initiated from server itself and pushing data to client.
>

In HTTP, the client can't open server sockets. The workaround is poll
to the server or open a persistent connection to the server. Some
clients can't open server sockets (they are behind a firewall) and you
need make the same tricks.

Orbited is a comet (server push) framework based on Twisted.
http://orbited.org/

Cometd (the twisted version) can be another example:
http://svn.cometd.com/trunk/cometd-twisted/
http://cometdproject.dojotoolkit.org/

Regards,
Javi



From glyph at twistedmatrix.com  Tue Nov 17 22:03:32 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Nov 2009 00:03:32 -0500
Subject: [Twisted-Python] Proposal (almost) to switch from Lore to Sphinx
In-Reply-To: <cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>
References: <562bcc10911111452t1da938b4g49c76853effc9b2d@mail.gmail.com>
	<562bcc10911111637y3b414c47w5df0a0142355228d@mail.gmail.com>
	<0F386798-1D05-4C25-9FED-6D06A28B1149@twistedmatrix.com>
	<562bcc10911120936g48a85732u7c52e7ce6da468e1@mail.gmail.com>
	<562bcc10911160919i4c881719jf97c73a4aaaabc22@mail.gmail.com>
	<9A1B0B3A-F8AC-4211-9E10-15818EB28F23@gmail.com>
	<562bcc10911161009i5b5e71i6d8efcbe0de3656a@mail.gmail.com>
	<20091116211156.27565.1285414471.divmod.xquotient.227@localhost.localdomain>
	<562bcc10911161437m754b2204kff756d0a2d298be6@mail.gmail.com>
	<095351FC-BE8E-4742-8129-DB3C28B1AB03@twistedmatrix.com>
	<cedc0c090911171258s5a362b07p7b7b10cd83fd67ea@mail.gmail.com>
Message-ID: <37BFD9A3-975D-4CCF-8D09-9E7A85FE7954@twistedmatrix.com>

On Nov 17, 2009, at 3:58 PM, Laurens Van Houtven wrote:

> Not to detract from any of the points you've made regarding reST's
> table syntax, but I've found it to be quite livable-with using
> table.el. Emacs users might be interested:
> http://table.sourceforge.net/

Wow.  Uh, erm.  This does detract significantly.  Docutils' API for parsing it mitigates my parsing concerns, and this now mitigates my UI concerns.

Although... I've been using it and editing text inside of tables, resize and reformat them for the last 20 minutes or so and it is both mesmerising and disturbing.  I thought artist-mode would be the weirdest thing I'd ever see in Emacs, but this tops it easily.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091118/bde19e9b/attachment-0001.html>

From tommaso.mazzafico at yahoo.com  Wed Nov 18 07:03:45 2009
From: tommaso.mazzafico at yahoo.com (Tommaso Mazzafico)
Date: Wed, 18 Nov 2009 06:03:45 -0800 (PST)
Subject: [Twisted-Python] A non-blocking socket operation could not be
	completed immediately
Message-ID: <594365.55357.qm@web113815.mail.gq1.yahoo.com>

I tried this code:

-----------------------------------------
from twisted.spread import pb
from twisted.internet import reactor

class Echoer(pb.Root):
   def remote_echo(self, s):
      return s
if __name__ == "__main__":
   reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
   reactor.run()
-----------------------------------------

On Windows XP all is ok.
On Windows 7 64 I receive this error message:

-----------------------------------------
C:\Program Files (x86)\Python\lib\site-packages\twisted\spread\pb.py:30: DeprecationWarning: the md5 module is deprecated; use hashlib instead
  import md5
Traceback (most recent call last):
  File "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in <module>
    reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
  File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\posixbase.py", line 356, in listenTCP
    p.startListening()
  File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\tcp.py", line 862, in startListening
    self._realPortNumber = skt.getsockname()[1]
  File "<string>", line 1, in getsockname
socket.error: [Errno 10035] A non-blocking socket operation could not be completed immediately
-----------------------------------------

What can I do?


      



From vitaly at synapticvision.com  Wed Nov 18 08:09:58 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Wed, 18 Nov 2009 10:09:58 -0500
Subject: [Twisted-Python] server push data to client
In-Reply-To: <49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>
References: <20091117160720.32926h0kxz5b1ew4@216.129.205.5>
	<49414f570911171929q57942eecsa1bf8336bc2ebad4@mail.gmail.com>
Message-ID: <20091118100958.2319134docg71vtw@216.129.205.5>


Thank you.

Did anyone tried AmFast: http://code.google.com/p/amfast/ ???

Quoting lasizoillo <lasizoillo at gmail.com>:

> 2009/11/17  <vitaly at synapticvision.com>:
>> hi,
>> what could be the way(Producer/Consumer?) and simple,basic example to
>> push data(~10Kb) from Twisted based server(that listening for incoming
>> requests) into  client side(for example FLEX) not as a response to the
>> incoming request, but occasionally, triggered by server side???
>>
>> In traditional client/server arch, the server is listening, accepting
>> and responding to the client's requests, but here I'm looking for
>> something that initiated from server itself and pushing data to client.
>>
>
> In HTTP, the client can't open server sockets. The workaround is poll
> to the server or open a persistent connection to the server. Some
> clients can't open server sockets (they are behind a firewall) and you
> need make the same tricks.
>
> Orbited is a comet (server push) framework based on Twisted.
> http://orbited.org/
>
> Cometd (the twisted version) can be another example:
> http://svn.cometd.com/trunk/cometd-twisted/
> http://cometdproject.dojotoolkit.org/
>
> Regards,
> Javi
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From itamar at itamarst.org  Wed Nov 18 08:55:56 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Wed, 18 Nov 2009 10:55:56 -0500
Subject: [Twisted-Python] A non-blocking socket operation could not be
 completed immediately
In-Reply-To: <594365.55357.qm@web113815.mail.gq1.yahoo.com>
References: <594365.55357.qm@web113815.mail.gq1.yahoo.com>
Message-ID: <1258559756.20810.78.camel@pintsize>

On Wed, 2009-11-18 at 06:03 -0800, Tommaso Mazzafico wrote:
> I tried this code:
> 
> -----------------------------------------
> from twisted.spread import pb
> from twisted.internet import reactor
> 
> class Echoer(pb.Root):
>    def remote_echo(self, s):
>       return s
> if __name__ == "__main__":
>    reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
>    reactor.run()
> -----------------------------------------
> 
> On Windows XP all is ok.
> On Windows 7 64 I receive this error message:
> 
> -----------------------------------------
> C:\Program Files (x86)\Python\lib\site-packages\twisted\spread\pb.py:30: DeprecationWarning: the md5 module is deprecated; use hashlib instead
>   import md5
> Traceback (most recent call last):
>   File "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in <module>
>     reactor.listenTCP(8001, pb.PBServerFactory(Echoer()))
>   File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\posixbase.py", line 356, in listenTCP
>     p.startListening()
>   File "C:\Program Files (x86)\Python\lib\site-packages\twisted\internet\tcp.py", line 862, in startListening
>     self._realPortNumber = skt.getsockname()[1]
>   File "<string>", line 1, in getsockname
> socket.error: [Errno 10035] A non-blocking socket operation could not be completed immediately
> -----------------------------------------
> 
> What can I do?

1. Please file a bug at http://twistedmatrix.com/ - include version of
Twisted, whether you have firewall of some sort, etc., so we can make
sure this gets fixed.

2. Try patching the code so it does:
    
    from twisted.internet.util import untilConcludes
    self._realPortNumber = untilConcludes(lambda: skt.getsockname()[1])

Does this fix it? If it does, add this info to the bug.

3. Another thing to try is the IOCP reactor.

-Itamar




From tommaso.mazzafico at yahoo.com  Wed Nov 18 11:53:03 2009
From: tommaso.mazzafico at yahoo.com (Tommaso Mazzafico)
Date: Wed, 18 Nov 2009 10:53:03 -0800 (PST)
Subject: [Twisted-Python] A non-blocking socket operation could not be
	completed immediately
In-Reply-To: <1258559756.20810.78.camel@pintsize>
Message-ID: <35113.61945.qm@web113818.mail.gq1.yahoo.com>

--- On Wed, 11/18/09, Itamar Turner-Trauring (aka Shtull-Trauring) <itamar at itamarst.org> wrote:

> On Wed, 2009-11-18 at 06:03 -0800,
> Tommaso Mazzafico wrote:
> > I tried this code:
> > 
> > -----------------------------------------
> > from twisted.spread import pb
> > from twisted.internet import reactor
> > 
> > class Echoer(pb.Root):
> >    def remote_echo(self, s):
> >       return s
> > if __name__ == "__main__":
> >    reactor.listenTCP(8001,
> pb.PBServerFactory(Echoer()))
> >    reactor.run()
> > -----------------------------------------
> > 
> > On Windows XP all is ok.
> > On Windows 7 64 I receive this error message:
> > 
> > -----------------------------------------
> > C:\Program Files
> (x86)\Python\lib\site-packages\twisted\spread\pb.py:30:
> DeprecationWarning: the md5 module is deprecated; use
> hashlib instead
> >   import md5
> > Traceback (most recent call last):
> >   File
> "C:\Users\bob\Documents\Twisted\pbs.py", line 11, in
> <module>
> >     reactor.listenTCP(8001,
> pb.PBServerFactory(Echoer()))
> >   File "C:\Program Files
> (x86)\Python\lib\site-packages\twisted\internet\posixbase.py",
> line 356, in listenTCP
> >     p.startListening()
> >   File "C:\Program Files
> (x86)\Python\lib\site-packages\twisted\internet\tcp.py",
> line 862, in startListening
> >     self._realPortNumber =
> skt.getsockname()[1]
> >   File "<string>", line 1, in
> getsockname
> > socket.error: [Errno 10035] A non-blocking socket
> operation could not be completed immediately
> > -----------------------------------------
> > 
> > What can I do?
> 
> 1. Please file a bug at http://twistedmatrix.com/ - include
> version of
> Twisted, whether you have firewall of some sort, etc., so
> we can make
> sure this gets fixed.
> 
> 2. Try patching the code so it does:
>     
>     from twisted.internet.util import
> untilConcludes
>     self._realPortNumber = untilConcludes(lambda:
> skt.getsockname()[1])
> 
> Does this fix it? If it does, add this info to the bug.

I tried patching like that:

from twisted.python.util import untilConcludes # I think you mean this, because twisted.internet.util does not exist
self._realPortNumber = untilConcludes(lambda: skt.getsockname()[1])

but without luck. It seems to change nothing, it crashes at once with the same stack trace. I'm on Windows 7 64, Python 2.6.4, Twisted 8.2.0

I'm quite new to Python and very new to Twisted. I will look for "IOCP reactor"
I'm going to file a bug on Trac, thank you for the help.


      



From ted.pederson at gmail.com  Wed Nov 18 12:38:38 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Wed, 18 Nov 2009 11:38:38 -0800
Subject: [Twisted-Python] Farming off work to other web services
Message-ID: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>

How can my server utilize other web services? Is there part of the framework
to do this, or should I just write a mini-client?

Basically, I want to use a very simple web service, a url with a couple of
params, and I get back xml or json data.

Sorry for fundamental nature of this question. Perhaps I should be
redirected to a book or docs, but the docs are pretty large and I am just
getting my feet wet.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091118/2f6b94da/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Nov 18 12:46:32 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Nov 2009 19:46:32 -0000
Subject: [Twisted-Python] Farming off work to other web services
In-Reply-To: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>
References: <834bba420911181138u4c98ddc5k7259fdd6b9f96c41@mail.gmail.com>
Message-ID: <20091118194632.27565.288803469.divmod.xquotient.309@localhost.localdomain>

On 07:38 pm, ted.pederson at gmail.com wrote:
>How can my server utilize other web services? Is there part of the 
>framework
>to do this, or should I just write a mini-client?
>
>Basically, I want to use a very simple web service, a url with a couple 
>of
>params, and I get back xml or json data.
>
>Sorry for fundamental nature of this question. Perhaps I should be
>redirected to a book or docs, but the docs are pretty large and I am 
>just
>getting my feet wet.

http://twistedmatrix.com/documents/current/api/twisted.web.client.getPage.html 
is probably what you're looking for.

http://twistedmatrix.com/projects/web/documentation/examples/getpage.py 
demonstrates its usage.

Jean-Paul



From don at delphexonline.com  Wed Nov 18 13:01:46 2009
From: don at delphexonline.com (Don Schoeman)
Date: Wed, 18 Nov 2009 22:01:46 +0200
Subject: [Twisted-Python] Passing messages from HTTP Request to another
	factory or protocol
Message-ID: <4B0452AA.50709@delphexonline.com>

Hi guys,

I am busy developing a gateway of some sort and have the following
running so far on the reactor:
- HTTP Server listening for incoming connections and HTTP requests.
- LineReceiver client permanently connected to another server.
(Connection is established at startup)

What I need to do is to first translate and then pass messages received
at the HTTP listening end - over to the LineReceiver client. The client
in turn will pass it on to a server using a custom protocol called SSMI,
for example:

Web Browser Requests -> HTTPServer -> SSMIClient -> ServerXYZ

For the HTTPServer I'm using the classic design where you inherit from
twisted.web.http.Request for the Protocol, while having
twisted.web.http.HTTPChannel and twisted.web.http.HTTPFactory inherited
classes to support it.

Also, there will only ever be one SSMIClient protocol instance whereas
the HTTPServer needs to process multiple requests at a time, so it will
be a many-to-one design.

What I need to know is how to pass the "packets" received by the
HTTPServer onto the SSMIClient protocol..? I am assuming one would use
deferreds, but the twisted.web.http.Request derived class seemingly does
not have "access" to the Reactor or it's Factory object. But to be
honest, I'm a little in over my head on this and don't even know how to
approach this. I don't know whether I should use a FIFO queue to store
the messages and I don't even know where to keep such a queue. If anyone
have done something even remotely like this I'd love to get some input
from you. It will be greatly appreciated!

Kind Regards,
Don Schoeman



From don at delphexonline.com  Wed Nov 18 14:46:48 2009
From: don at delphexonline.com (Don Schoeman)
Date: Wed, 18 Nov 2009 23:46:48 +0200
Subject: [Twisted-Python] Passing messages from HTTP Request to another
 factory or protocol
In-Reply-To: <4B0452AA.50709@delphexonline.com>
References: <4B0452AA.50709@delphexonline.com>
Message-ID: <4B046B48.8070404@delphexonline.com>

Here is what I have done so far...

I have a dequeued collection that can be accessed by all the relevant
classes. On the one end the HTTP Server appends items to this queue when
it receives a valid HTTP request. On the other end, the SSMI client pops
these items from the queue on a 5 seconds "callLater" based deferred and
sends it out over the existing TCP connection.

Now this works, but I'm wondering if there is not a better way.

Kind Regards,
Don Schoeman





Don Schoeman wrote:
> Hi guys,
> 
> I am busy developing a gateway of some sort and have the following
> running so far on the reactor:
> - HTTP Server listening for incoming connections and HTTP requests.
> - LineReceiver client permanently connected to another server.
> (Connection is established at startup)
> 
> What I need to do is to first translate and then pass messages received
> at the HTTP listening end - over to the LineReceiver client. The client
> in turn will pass it on to a server using a custom protocol called SSMI,
> for example:
> 
> Web Browser Requests -> HTTPServer -> SSMIClient -> ServerXYZ
> 
> For the HTTPServer I'm using the classic design where you inherit from
> twisted.web.http.Request for the Protocol, while having
> twisted.web.http.HTTPChannel and twisted.web.http.HTTPFactory inherited
> classes to support it.
> 
> Also, there will only ever be one SSMIClient protocol instance whereas
> the HTTPServer needs to process multiple requests at a time, so it will
> be a many-to-one design.
> 
> What I need to know is how to pass the "packets" received by the
> HTTPServer onto the SSMIClient protocol..? I am assuming one would use
> deferreds, but the twisted.web.http.Request derived class seemingly does
> not have "access" to the Reactor or it's Factory object. But to be
> honest, I'm a little in over my head on this and don't even know how to
> approach this. I don't know whether I should use a FIFO queue to store
> the messages and I don't even know where to keep such a queue. If anyone
> have done something even remotely like this I'd love to get some input
> from you. It will be greatly appreciated!
> 
> Kind Regards,
> Don Schoeman
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From exarkun at twistedmatrix.com  Wed Nov 18 15:09:33 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Nov 2009 22:09:33 -0000
Subject: [Twisted-Python] Passing messages from HTTP Request to
	another	factory or protocol
In-Reply-To: <4B046B48.8070404@delphexonline.com>
References: <4B0452AA.50709@delphexonline.com>
	<4B046B48.8070404@delphexonline.com>
Message-ID: <20091118220933.27565.1854150136.divmod.xquotient.331@localhost.localdomain>

On 09:46 pm, don at delphexonline.com wrote:
>Here is what I have done so far...
>
>I have a dequeued collection that can be accessed by all the relevant
>classes. On the one end the HTTP Server appends items to this queue 
>when
>it receives a valid HTTP request. On the other end, the SSMI client 
>pops
>these items from the queue on a 5 seconds "callLater" based deferred 
>and
>sends it out over the existing TCP connection.
>
>Now this works, but I'm wondering if there is not a better way.

If you use twisted.internet.defer.DeferredQueue (or any other "push" 
event-driven mechanism) then you can eliminate the 5 second polling 
loop.

Jean-Paul



From vitaly at synapticvision.com  Wed Nov 18 16:22:07 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Wed, 18 Nov 2009 18:22:07 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
Message-ID: <20091118182207.92495fhonzg8nucc@216.129.205.5>

hi,
is there any example how to implement long-polling channel with  
Twisted while using reactor()?

Thank you.




From itamar at itamarst.org  Thu Nov 19 06:01:12 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Thu, 19 Nov 2009 08:01:12 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <1258635673.20810.85.camel@pintsize>

On Wed, 2009-11-18 at 18:22 -0500, vitaly at synapticvision.com wrote:
> hi,
> is there any example how to implement long-polling channel with  
> Twisted while using reactor()?

What is a "long-polling channel"?




From rlotun at gmail.com  Thu Nov 19 06:38:44 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 19 Nov 2009 13:38:44 +0000
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>

Hi,

> is there any example how to implement long-polling channel with
> Twisted while using reactor()?

I'm not sure what you mean either, but perhaps you're talking about an
HTTP long polling/comet thing? You might want to check out orbited
(http://orbited.org/) which is a server-side comet implementation
using Twisted.

I've been interested in a plugin for nginx called nginx_http_push
(http://pushmodule.slact.net/) that could allow for a more efficient
implementation of long-polling/push over HTTP. All you need to do is
POST to a resource server-side (say, using Twisted) and nginx and the
plugin take care of pushing out the message to clients.

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From wthie at thiengineering.ch  Thu Nov 19 10:04:28 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 19 Nov 2009 18:04:28 +0100
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <20091118182207.92495fhonzg8nucc@216.129.205.5>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
Message-ID: <4B057A9C.6020808@thiengineering.ch>

If you're referring to something like XEP-0124 (BOSH)

http://xmpp.org/extensions/xep-0124.html

then the short answer is, I did only find a BOSH implementation done 
with Twisted as part of an XMPP over BOSH connection manager 
implementation called punjab.

http://code.stanziq.com/punjab

Interesting in this particular context could be strophe

http://code.stanziq.com/strophe/

I'm currently tinkering with a minimal BOSH sample providing a delayed 
echo server which allows me to test the behavior of mobile 3G apps

Cheers, Werner

vitaly at synapticvision.com wrote:
> hi,
> is there any example how to implement long-polling channel with  
> Twisted while using reactor()?
> 
> Thank you.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From vitaly at synapticvision.com  Thu Nov 19 10:46:13 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 12:46:13 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <1258635673.20810.85.camel@pintsize>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
	<1258635673.20810.85.camel@pintsize>
Message-ID: <20091119124613.79105ovreop59t0k@216.129.205.5>



Long-polling/push over HTTP from server to clients.


Quoting "Itamar Turner-Trauring (aka Shtull-Trauring)" <itamar at itamarst.org>:

> On Wed, 2009-11-18 at 18:22 -0500, vitaly at synapticvision.com wrote:
>> hi,
>> is there any example how to implement long-polling channel with
>> Twisted while using reactor()?
>
> What is a "long-polling channel"?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>






From vitaly at synapticvision.com  Thu Nov 19 11:39:43 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 13:39:43 -0500
Subject: [Twisted-Python] long-polling channels with Twisted
In-Reply-To: <95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>
References: <20091118182207.92495fhonzg8nucc@216.129.205.5>
	<95bb10690911190538w6380550cpbb2f9ba09858087f@mail.gmail.com>
Message-ID: <20091119133943.2400326bf2hyzyuc@216.129.205.5>


Found this one easily to suite in current environment:
http://code.google.com/p/amfast/wiki/MessagingServer#Producer/Consumer_Messaging

Quoting "Reza Lotun" <rlotun at gmail.com>:

> Hi,
>
>> is there any example how to implement long-polling channel with
>> Twisted while using reactor()?
>
> I'm not sure what you mean either, but perhaps you're talking about an
> HTTP long polling/comet thing? You might want to check out orbited
> (http://orbited.org/) which is a server-side comet implementation
> using Twisted.
>
> I've been interested in a plugin for nginx called nginx_http_push
> (http://pushmodule.slact.net/) that could allow for a more efficient
> implementation of long-polling/push over HTTP. All you need to do is
> POST to a resource server-side (say, using Twisted) and nginx and the
> plugin take care of pushing out the message to clients.
>
> Cheers,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From cole.tuininga at gmail.com  Thu Nov 19 14:39:16 2009
From: cole.tuininga at gmail.com (Cole Tuininga)
Date: Thu, 19 Nov 2009 16:39:16 -0500
Subject: [Twisted-Python] Grabbing HTTP Headers with
	twisted.web.soap.SOAPPublisher
Message-ID: <1a9dea7f0911191339v3c83819bk5c245eb6b65b9371@mail.gmail.com>

Hopefully quick question.  Is there an existing way to easily get at
the HTTP headers in an incoming SOAP request being handled by
twisted.web.soap.SOAPPublisher?  Or do I need to override the render
method to keep/return it?  Thanks in advance...

-- 
Cole Tuininga
http://www.tuininga.org/



From vitaly at synapticvision.com  Thu Nov 19 17:20:10 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Thu, 19 Nov 2009 19:20:10 -0500
Subject: [Twisted-Python] TwistedGateway instead of TwistedChannelSet
Message-ID: <20091119192010.71762dru9z4biajo@216.129.205.5>

hi guys,

how the following example could be re-created using TwistedGateway,  
reactor.listenSSL and reactor.run instead of TwistedChannel?

Appreciate the help.

# ------------------------------------------

import logging
import sys

from twisted.application import service, strports
from twisted.web import static, server, resource, vhost

import amfast
from amfast.remoting.twisted_channel import TwistedChannelSet, TwistedChannel

amfast.log_debug = True
handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.DEBUG)
amfast.logger.addHandler(handler)

# Setup domain
root = vhost.NameVirtualHost()
root.default = static.File("../flex/deploy")
domain = "localhost"
root.addHost(domain, static.File("../flex/deploy"))

# If the code is completely asynchronous,
# you can use the dummy_threading module
# to avoid RLock overhead.
import dummy_threading
amfast.mutex_cls = dummy_threading.RLock

# Setup ChannelSet
channel_set = TwistedChannelSet(notify_connections=True)

# Clients connect every x seconds
# to polling channels to check for messages.
# If messages are available, they are
# returned to the client.
polling_channel = TwistedChannel('amf-polling-channel')
channel_set.mapChannel(polling_channel)

# Long-poll channels do not return
# a response to the client until
# a message is available, or channel.max_interval
# is reached.
long_poll_channel = TwistedChannel('long-poll-channel', wait_interval=90)
channel_set.mapChannel(long_poll_channel)

# Setup channels
root.putChild('amf', polling_channel)
root.putChild('longPoll', long_poll_channel)

# Setup server
port = 8000
application = service.Application('AmFast Example')
server = strports.service('tcp:%s' % port, server.Site(root))
server.setServiceParent(application)

print "serving on %s:%s" % (domain, port)
print "Press ctrl-c to halt."




From radix at twistedmatrix.com  Thu Nov 19 20:13:46 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 19 Nov 2009 22:13:46 -0500
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
Message-ID: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>

Hey guys. I've done an initial cut of Twisted 9. Please check out
these tarballs and tell me whether or not you find any regressions or
other release-related problems.

The release notes are here:

http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt

The tarballs are here:

http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/

Please post a message even if you don't have any problems.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From namanvit at gmail.com  Fri Nov 20 01:00:03 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 20 Nov 2009 09:00:03 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911200000w11a4e7d0w4282d525aef5543f@mail.gmail.com>

Hi,

Thanks for the reply.
I actually came across Process documentation for twisted; but in my case my
the script which calls the twisted client is not implemented in Twisted
It is just a controller program which instantiates a central repository and
spawns off 2 threads and then the threads update to that repository
periodically (so I did not feel the need to run a reactor loop as in Twisted
).

Is there any way to call a Twisted client in a Process or a thread without
using the reactor?


To explain better:
master.py spawns 2 threads to update a central repository.
build_worker_t : launches a Twisted client to connect to a Twisted server
running on a build machine
test_worker_t   : launches a Twisted client to connect to a Twisted server
running on a Test Machine

master.py:
___________________________________________________________________
// make a central repository for the threads to update
class Globals:
    repo = []
    lock = threading.Lock()


def main():
    build_worker_t = threading.Thread( target=dispatch_build_worker)
    build_worker_t.start()

    test_worker_t = threading.Thread( target=dispatch_test_worker)
    test_worker_t.start()

    build_worker_t.join()
    test_worker_t.join()


def dispatch_build_worker():

    # build_worker.main is a twisted client
     foo = Process(target=build_worker.main, args=(build_q,uid,))
     foo.start()
     foo.join()    //wait for the process(ie. client-server communication to
finish)
     //get status from build_q and update repo

def dispatch_test_worker():



Regards
Naman



On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091120/2a821804/attachment.html>

From namanvit at gmail.com  Fri Nov 20 01:05:57 2009
From: namanvit at gmail.com (naman jain)
Date: Fri, 20 Nov 2009 09:05:57 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911200005n717312d3gd5e3fd2e80bde8c@mail.gmail.com>

Just to add to the previous post:

>>foo = Process(target=build_worker.main, args=(build_q,uid,))

is the statement I want to replace (because it is unreliable), with
something other that reactor.spawnprocess as there is no reactor in the
calling script.

Thanks
Naman

On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091120/09e9621e/attachment.html>

From landreville at deadtreepages.com  Fri Nov 20 09:38:42 2009
From: landreville at deadtreepages.com (Landreville)
Date: Fri, 20 Nov 2009 11:38:42 -0500
Subject: [Twisted-Python] Storm ORM
Message-ID: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>

Hello,

Does anyone use a good ORM with twisted? I'm looking for something very
simple, but works with twisted easily.

I saw this possible approach to using Storm with twisted
http://divmod.org/trac/wiki/NevowStormApproach but has any progress been
made to put this in place?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091120/f9fce7f2/attachment-0001.html>

From jml at mumak.net  Fri Nov 20 10:23:08 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 20 Nov 2009 11:23:08 -0600
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
Message-ID: <d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>

On Thu, Nov 19, 2009 at 9:13 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> Hey guys. I've done an initial cut of Twisted 9. Please check out
> these tarballs and tell me whether or not you find any regressions or
> other release-related problems.
>
> The release notes are here:
>
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
>
> The tarballs are here:
>
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
>
> Please post a message even if you don't have any problems.
>

Woot!

jml



From glyph at twistedmatrix.com  Fri Nov 20 13:59:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 20 Nov 2009 15:59:47 -0500
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
	<d06a5cd30911200923k48861695xfd284221e41ca0aa@mail.gmail.com>
Message-ID: <7C153FF9-CCD1-42F0-9ECF-51019318FE3D@twistedmatrix.com>


On Nov 20, 2009, at 12:23 PM, Jonathan Lange wrote:

> On Thu, Nov 19, 2009 at 9:13 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
>> Hey guys. I've done an initial cut of Twisted 9. Please check out
>> these tarballs and tell me whether or not you find any regressions or
>> other release-related problems.
>> 
>> The release notes are here:
>> 
>> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
>> 
>> The tarballs are here:
>> 
>> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
>> 
>> Please post a message even if you don't have any problems.
> 
> Woot!

I have many problems, but none of them seem to be related to this release.  Hooray!!!


From dripton at ripton.net  Fri Nov 20 14:33:24 2009
From: dripton at ripton.net (David Ripton)
Date: Fri, 20 Nov 2009 13:33:24 -0800
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
Message-ID: <20091120213324.GB22650@vidar.dreamhost.com>

On 2009.11.19 22:13:46 -0500, Christopher Armstrong wrote:
> Hey guys. I've done an initial cut of Twisted 9. Please check out
> these tarballs and tell me whether or not you find any regressions or
> other release-related problems.
> 
> The release notes are here:
> 
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
> 
> The tarballs are here:
> 
> http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
> 
> Please post a message even if you don't have any problems.

I just replaced Twisted 8.2.0 with 9.0.0pre1 in my local Git repo at
work, and did a full build of our product, and then ran the bits that
use Twisted (we use the core and the gtk2 reactor and AMP, on RHEL), and
nothing obviously weird or bad happened.  Bor-ing!  Maybe try fewer unit
tests next time, to add more excitement to the upgrade process?

-- 
David Ripton    dripton at ripton.net



From vitaly at synapticvision.com  Sat Nov 21 10:08:55 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Sat, 21 Nov 2009 12:08:55 -0500
Subject: [Twisted-Python] twisted.web.server sessions
Message-ID: <20091121120855.12876nglbvwslsg8@216.129.205.5>

hi,
is the re any convenient way to get from twisted.web.server all non  
expired sessions in one single call?

Regards,
Vitaly.




From exarkun at twistedmatrix.com  Sat Nov 21 22:05:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Nov 2009 05:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1258866315.98.1359258556@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091122/c161636f/attachment-0001.html>

From hanooter at gmail.com  Sat Nov 21 22:42:40 2009
From: hanooter at gmail.com (Kyle Hanson)
Date: Sat, 21 Nov 2009 21:42:40 -0800
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
Message-ID: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>

Basically I want to create a personal HTTP proxy to add a javascript library
to every page I visit because the javascript contains several tools I wrote
and Chrome doesnt allow extensions.

So I have a basic proxy set up from here:
http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
logging and what not.

The first problem I have with this is that I cannot view Gmail due to HTTPS.
This is problematic since I would like to view my email and don't want to
turn off proxy settings everytime to do so. So is there a way to quitely
pass ALL HTTPS without doing anything to them so it doesnt just send blank
data?


The second problem is that I have no idea how to modify the page contents.
Do I modify the buffer in my extended ProxyClient class? Because I tried
that and it only worked on very few websites. Perhaps could someone just
show me by doing a simple word swap (switching all mentions of Python to
some other word?)

I would greatly appreciate it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091121/4b886592/attachment.html>

From dripton at ripton.net  Sun Nov 22 10:51:32 2009
From: dripton at ripton.net (David Ripton)
Date: Sun, 22 Nov 2009 09:51:32 -0800
Subject: [Twisted-Python] Twisted 9.0.0 prerelease 1
In-Reply-To: <20091120213324.GB22650@vidar.dreamhost.com>
References: <60ed19d40911191913v7d6a4646h8a6c417077d41919@mail.gmail.com>
	<20091120213324.GB22650@vidar.dreamhost.com>
Message-ID: <20091122175132.GA1594@vidar.dreamhost.com>

On 2009.11.20 13:33:24 -0800, David Ripton wrote:
> On 2009.11.19 22:13:46 -0500, Christopher Armstrong wrote:
> > Hey guys. I've done an initial cut of Twisted 9. Please check out
> > these tarballs and tell me whether or not you find any regressions or
> > other release-related problems.
> > 
> > The release notes are here:
> > 
> > http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/NEWS.txt
> > 
> > The tarballs are here:
> > 
> > http://twistedmatrix.com/users/radix/twisted-prereleases/9.0.0pre1/
> > 
> > Please post a message even if you don't have any problems.
> 
> I just replaced Twisted 8.2.0 with 9.0.0pre1 in my local Git repo at
> work, and did a full build of our product, and then ran the bits that
> use Twisted (we use the core and the gtk2 reactor and AMP, on RHEL), and
> nothing obviously weird or bad happened.  Bor-ing!  Maybe try fewer unit
> tests next time, to add more excitement to the upgrade process?

It also installed effortlessly and worked perfectly on Gentoo x86 and
Ubuntu amd64.  The only difference I actually noticed from 8.2 was the
lack of deprecation warnings from Python 2.6.

(Skip to the bottom if you don't care about the detailed pain of
installing Twisted from source on Windows.)

Then I tried to install it on Windows XP.  "python setup.py install"
whines about a missing vcvars.bat.  I think that means I need to install
a C compiler.  I download Visual C++ 2008 Express Edition with Service
Pack 1 from microsoft.com.  Huge license agreement, tiny window, making
it almost impossible to actually read it all.  Fearing all that
legalese, I abort the install and fetch my seven-year-old daughter and
ask her to install it, thus preserving my right to someday publish
benchmarks of SQL Server without Microsoft's permission.  (Yes, it would
be cruel to preserve my own rights while sacrificing hers, but she's too
young to sign legally binding contracts.)  Then we wait forever for the
world's slowest installer.  (Express Edition.  Heh.)  It finally
finishes and then tells her to reboot.  I thank her and send her back to
playing.

I rerun Twisted's "python setup.py install"  I see some errors about
missing epoll.h, but the install continues. 

I finally start up my game server.  "To Help Protect My Computer,
Windows Firewall has blocked some features of this program."  (Funny, it
doesn't pop up that same warning if someone tries to use IE or Outlook.)
I unblock python.  I see deprecation warnings for md5, that I thought
were fixed in Twisted 9.  So maybe I'm still running 8.2.  I start
python, import twisted, and print twisted.version.  9.0.0pre1.  But I
might have a mixed version install, so I go to Add/Remove Programs and
uninstall Twisted 8.2, then run "python setup.py install" again to
reinstall Twisted 9.

I start my game server again, and get "No module named zope.interface" I
guess the Twisted 8.2 binary installer installed it for me and when I
uninstalled it I lost it, so now I need to install it myself.  I fetch a
zope interface tarball, gunzip it, untar it, and run "python setup.py
install" on it.

I start my game server again, and get "ImportError: No module named
pkg_resources."  I go back to the Twisted directory and redo "python
setup.py install"  Same error.  So I guess the zope interface install
failed in some odd way without warning.

I go back to the zope interface page, and see a note that says to just
use the .exe installer on Windows.  But there isn't one.  I hunt around
the zope site for several minutes and fail to find one.  (There's one
for all of zope, but that seems like overkill.)  I go to PyPI and find a
zope interface egg for Windows.  I double-click on the egg and Windows
has no idea what it is.  I go to PyPI and find a setuptools .exe
installer, install that, then use setuptools' ez_setup.py to install the
Zope Interface egg.  And then Twisted 9.0.0pre1 works fine.

So the moral of the story is that installing software from source on
Windows really is way too hard, and Windows users really do need binary
installers.  But Twisted 9 did eventually work for me on Windows.

-- 
David Ripton    dripton at ripton.net



From hugh.emberson at gmail.com  Sun Nov 22 20:55:16 2009
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Mon, 23 Nov 2009 14:55:16 +1100
Subject: [Twisted-Python] win32eventreactor freezing
Message-ID: <359778bc0911221955g6bbfc2buf0e3d30f9ad6f211@mail.gmail.com>

Hello,

I have a small windows GUI program based on win32eventreactor and win32gui
(from pywin32).  It pops up a small dialog, gathers some information from
the user, then makes an SSL connection to a server and sends the
information.

This program has been running on over 40 different systems (XP, Vista,
Windows Server, Windows 7) for a while now, without any problems.  Today I
had one potential customer tell me that he could enter text in the first
text field on the dialog, but could not change move focus to the next text
field, or any other control in the dialog, either by tabbing or clicking.
I've never seen anything like this.

I don't know if this is a twisted problem or a win32gui problem, or a
problem in my code and unfortunately I can't get any more information from
the customer.

Has anyone seen anything like this before?  Any ideas where to start?

I'm running Twisted 2.5.0 on python 2.5.1.  I'm aware these are old, but
I've never had any problems with them before.  Upgrading is on my todo list.

Thanks,
Hugh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091123/5f60b006/attachment-0001.html>

From drew.smathers at gmail.com  Mon Nov 23 14:36:27 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 23 Nov 2009 16:36:27 -0500
Subject: [Twisted-Python] Storm ORM
In-Reply-To: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>
References: <9d748c780911200838qfac1f3bj5315b9ce3d3b708d@mail.gmail.com>
Message-ID: <368574aa0911231336l300b1e84kad2614730b772023@mail.gmail.com>

On Fri, Nov 20, 2009 at 11:38 AM, Landreville
<landreville at deadtreepages.com> wrote:
> Hello,
>
> Does anyone use a good ORM with twisted? I'm looking for something very
> simple, but works with twisted easily.
> I saw this possible approach to using Storm with twisted
> http://divmod.org/trac/wiki/NevowStormApproach but has any progress been
> made to put this in place?

There is a branch of storm which integrates Twisted:
https://code.launchpad.net/~therve/storm/twisted-integration.

-Drew



From landreville at deadtreepages.com  Mon Nov 23 14:53:35 2009
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 23 Nov 2009 16:53:35 -0500
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
In-Reply-To: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
References: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
Message-ID: <9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>

On Sun, Nov 22, 2009 at 12:42 AM, Kyle Hanson <hanooter at gmail.com> wrote:

> Basically I want to create a personal HTTP proxy to add a javascript
> library to every page I visit because the javascript contains several tools
> I wrote and Chrome doesnt allow extensions.
>
> So I have a basic proxy set up from here:
> http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
> logging and what not.
>
> The first problem I have with this is that I cannot view Gmail due to
> HTTPS. This is problematic since I would like to view my email and don't
> want to turn off proxy settings everytime to do so. So is there a way to
> quitely pass ALL HTTPS without doing anything to them so it doesnt just send
> blank data?
>
>
> The second problem is that I have no idea how to modify the page contents.
> Do I modify the buffer in my extended ProxyClient class? Because I tried
> that and it only worked on very few websites. Perhaps could someone just
> show me by doing a simple word swap (switching all mentions of Python to
> some other word?)
>
> I would greatly appreciate it.
>
>
>
If you just want to run a custom javascript library you might want to look
into greasemonkey scripts (supported in Chrome, Firefox, and Opera), they
won't do everything your Proxy could (or maybe they could?) but it would
probably be quicker/easier to implement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091123/c84fbc5a/attachment.html>

From hanooter at gmail.com  Mon Nov 23 15:32:13 2009
From: hanooter at gmail.com (Kyle Hanson)
Date: Mon, 23 Nov 2009 14:32:13 -0800
Subject: [Twisted-Python] Creating an HTTP Proxy.. 2 Problems: HTTPS &
	changing the outgoing contents
In-Reply-To: <9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>
References: <611f47bd0911212142j1f7a971dub1ff547401432fcd@mail.gmail.com>
	<9d748c780911231353o7c44c414y83c26e672da2fba4@mail.gmail.com>
Message-ID: <611f47bd0911231432h6b662c37g1f149a649604a5c8@mail.gmail.com>

Thanks for the reply,

But, I wanted to so some other stuff like statistics from the sites I visit
and doing a few other things in the background without slowing down my
browser with javascript (automatically extracting flv's, etc.) as well as do
some MITM stuff (not for mischievous uses though) so that I can better
extend my web browsing. I found a Proxy in Python that does HTTPS through
HTTP through OpenSSL but lacks the performance of Twisted. I think I'll just
try looking more into enhancing the performance of that Proxy while I wait
for a response here since I would prefer to use Twisted.

On Mon, Nov 23, 2009 at 1:53 PM, Landreville
<landreville at deadtreepages.com>wrote:

>
>
> On Sun, Nov 22, 2009 at 12:42 AM, Kyle Hanson <hanooter at gmail.com> wrote:
>
>> Basically I want to create a personal HTTP proxy to add a javascript
>> library to every page I visit because the javascript contains several tools
>> I wrote and Chrome doesnt allow extensions.
>>
>> So I have a basic proxy set up from here:
>> http://blog.somethingaboutcode.com/?p=155 and I expanded it to do some
>> logging and what not.
>>
>> The first problem I have with this is that I cannot view Gmail due to
>> HTTPS. This is problematic since I would like to view my email and don't
>> want to turn off proxy settings everytime to do so. So is there a way to
>> quitely pass ALL HTTPS without doing anything to them so it doesnt just send
>> blank data?
>>
>>
>> The second problem is that I have no idea how to modify the page contents.
>> Do I modify the buffer in my extended ProxyClient class? Because I tried
>> that and it only worked on very few websites. Perhaps could someone just
>> show me by doing a simple word swap (switching all mentions of Python to
>> some other word?)
>>
>> I would greatly appreciate it.
>>
>>
>>
> If you just want to run a custom javascript library you might want to look
> into greasemonkey scripts (supported in Chrome, Firefox, and Opera), they
> won't do everything your Proxy could (or maybe they could?) but it would
> probably be quicker/easier to implement.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091123/a05a8493/attachment.html>

From art at academ.org  Tue Nov 24 02:42:16 2009
From: art at academ.org (Artem Bokhan)
Date: Tue, 24 Nov 2009 15:42:16 +0600
Subject: [Twisted-Python] Quotient projects
Message-ID: <4B0BAA78.7090606@academ.org>

What is the relationship between these quotient projects?

http://freshmeat.net/projects/divmod
    last release 0.9.2 2005 22:27, has imap support, has tap server
    can somebody help to find the tarball of 0.9.2?

http://divmod.org/trac/wiki/DivmodQuotient
    starts 0.1.0 (2006-06-12), as I see it does not have imap support 
and tap



From namanvit at gmail.com  Tue Nov 24 03:59:03 2009
From: namanvit at gmail.com (naman jain)
Date: Tue, 24 Nov 2009 11:59:03 +0100
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <20091117143004.GA17404@vidar.dreamhost.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
Message-ID: <74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>

Please could I get some help on this issue, if any one has some ideas.

Thanks
Naman

On Tue, Nov 17, 2009 at 3:30 PM, David Ripton <dripton at ripton.net> wrote:

> On 2009.11.17 07:07:50 +0100, naman jain wrote:
> > I try to launch it as a Process:
> >   foo = Process( target=twisted_client.main, args=(q,uid,))
> >   foo.start()
> >   foo.join()
> >   status = q.get()
>
> > Launching the client in this manner, is not showing reliable results.
>
> You didn't give a long enough example to be certain, but that looks like
> multiprocessing.Process syntax.  The multiprocessing module does not
> work reliably with Twisted.  Neither does the subprocess module.
>
> You should use the equivalent Twisted process functionality, shown at
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> There's also https://launchpad.net/ampoule, but for the small example
> you show, the basic Twisted process stuff should be fine.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091124/4b2030ed/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov 24 06:48:08 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Nov 2009 13:48:08 -0000
Subject: [Twisted-Python] Quotient projects
In-Reply-To: <4B0BAA78.7090606@academ.org>
References: <4B0BAA78.7090606@academ.org>
Message-ID: <20091124134808.26747.1234596162.divmod.xquotient.16@localhost.localdomain>

On 09:42 am, art at academ.org wrote:
>What is the relationship between these quotient projects?
>
>http://freshmeat.net/projects/divmod
>    last release 0.9.2 2005 22:27, has imap support, has tap server
>    can somebody help to find the tarball of 0.9.2?
>
>http://divmod.org/trac/wiki/DivmodQuotient
>    starts 0.1.0 (2006-06-12), as I see it does not have imap support
>and tap

The latter is a from-scratch rewrite of the former.  The former is based 
on a database system with significant shortcomings and so will probably 
never see any further development.

If you're curious about where things are going with the latter, the 
divmod-dev mailing list or the #divmod channel on freenode are two 
places you might be able to find people with whom to discuss that.

Jean-Paul



From exarkun at twistedmatrix.com  Tue Nov 24 06:48:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Nov 2009 13:48:58 -0000
Subject: [Twisted-Python] Launching Twisted client using Process call
In-Reply-To: <74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>
References: <74b1256b0911162207p99981e8lc12ee98d38510c6f@mail.gmail.com>
	<20091117143004.GA17404@vidar.dreamhost.com>
	<74b1256b0911240259r7bb00f5xbeac6d4cd177c2ef@mail.gmail.com>
Message-ID: <20091124134858.26747.1216447171.divmod.xquotient.18@localhost.localdomain>

On 10:59 am, namanvit at gmail.com wrote:
>Please could I get some help on this issue, if any one has some ideas.

Can you produce a short, self-contained, correct example 
(<http://sscce.org/>) of the problem you're having?

Jean-Paul



From brandon.mcginty at gmail.com  Tue Nov 24 07:37:10 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Tue, 24 Nov 2009 09:37:10 -0500
Subject: [Twisted-Python] HTTP Gateway, Passing In Cookies Via URL
Message-ID: <4B0BEF96.7050309@gmail.com>

I hope someone can help me with this.
I have checked through the twisted web proxy and twisted http client, 
and I suppose I am just missing something.
I am trying to create a resource, inside a twisted web server, that will 
convert the arguments passed to it into an address, which is easy 
enough, and then act as a proxy between the actual client, and the 
server specified in the arguments. I would also like to set cookies 
based on the arguments.

An example might be useful:
client a accesses webserver b with something like:
get 
/cookieGateway?address=http%3A//www.google.com/search%3Fq%3Dtest&cookies=uid%3D123456%3B%20authToken%3Dabcdef
webserver b accesses address, and sends cookies specified in "cookies" 
parameter, and passess all headers from client a to address.
Each byte of data sent from "address" back to server b is returned 
immediately to client a, including response, headers, body, etc.

If anyone can give me a hand with this, I would greatly appreciate it.
I hope I have been clear enough.

Sincerely,
Brandon McGinty





From olivier.parisy at free.fr  Tue Nov 24 14:26:19 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Tue, 24 Nov 2009 22:26:19 +0100
Subject: [Twisted-Python] Transfering a transport between DatagramProtocols
Message-ID: <4B0C4F7B.2010404@free.fr>

I am implementing a protocol where a DatagramProtocol "handshaking" 
subclass get an arbitrary port (by calling "self.udpPort = 
reactor.listenUDP(0, self)") and communicate it to a remote host.

Once this is done, I would like to "switch" to another DatagramProtocol 
which would use the same port. To avoid a race condition, I would like 
to "transfert" self.transport from the first DatagramProtocol to the 
second without calling self.udpPort.stopListening().

Is this the "twisted" way to analyse this? Or should I use some kind of 
"proxy" DatagramProtocol which would relay datagramReceived calls to the 
proper DatagramProtocol, depending on the current protocol state 
(handshaking or data exchange)?

Regards.




From glyph at twistedmatrix.com  Tue Nov 24 16:13:52 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Nov 2009 18:13:52 -0500
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <4B0C4F7B.2010404@free.fr>
References: <4B0C4F7B.2010404@free.fr>
Message-ID: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>

On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:

> Is this the "twisted" way to analyse this? Or should I use some kind of 
> "proxy" DatagramProtocol which would relay datagramReceived calls to the 
> proper DatagramProtocol, depending on the current protocol state 
> (handshaking or data exchange)?

Currently, the right way to do this is to do as you suggest, and have two DatagramProtocol instances, and a third which switches between them.

Now, it just so happens that there is an accidental feature of udp.Port, whereby you can do self.udpPort.protocol = someOtherProtocol, and it will work.  However, this feature is not supported and may break in a future version of Twisted.

In the future, however, it would be reasonable and useful to have an explicit "switch protocol" method, which would tear down one protocol/transport relationship and set up another.  If you would like to open a ticket and contribute a patch to do this, that would be great :).





From olivier.parisy at free.fr  Wed Nov 25 14:26:45 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Wed, 25 Nov 2009 22:26:45 +0100
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
References: <4B0C4F7B.2010404@free.fr>
	<10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
Message-ID: <4B0DA115.7080208@free.fr>

Glyph Lefkowitz a écrit :
> On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:
>
>   Currently, the right way to do this is to do as you suggest, and 
> have two DatagramProtocol instances, and a third which switches 
> between them.
>   
OK, that seems like a reasonable pattern. Thanks for the confirmation.

> In the future, however, it would be reasonable and useful to have an 
> explicit "switch protocol" method, which would tear down one 
> protocol/transport relationship and set up another.  If you would like 
> to open a ticket and contribute a patch to do this, that would be 
> great :) .
>   
I am not sure I would know where to start :-) But I'll give a look to 
DatagramProtocol source code.

Regards,
Olivier.






From radix at twistedmatrix.com  Wed Nov 25 15:46:00 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 25 Nov 2009 17:46:00 -0500
Subject: [Twisted-Python] Who can create an OS X package for Twisted 9?
Message-ID: <60ed19d40911251446n3b512694m21b21704586c90b8@mail.gmail.com>

I can't remember who did it last time.

I know a couple of people who work at Apple and surely know lots and
lots about OS X technology, but I will refrain from naming names until
I've waited too long for a package :-)

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From godson.g at gmail.com  Thu Nov 26 11:48:58 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Nov 2009 00:18:58 +0530
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
Message-ID: <f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>

Twisted is used for writing StreamHarvester's network functionality.

StreamHarvester is a cross-platform internet radio and TV
recoder.StreamHarverster works with Shoutcast and Icecast streams. You can
record multiple streams simultaneously, also you can relay a stream locally
while recording it. So that you can listen to the stream in an external
media player like VLC , Windows media player.
Features

   - Record multiple streams at a time.
   - Relay multiple streams on different ports.
   - Each job can be recorded and relayed at the same time.
   - Support for playlist formats pls and m3u.
   - Support various media formats mp3,ogg,nsv.
   - Automatic fallback to next URL in playlist.
   - Store stream in a single file or multiple files.
   - Works with shout cast and icecast streams.
   - Works on Windows and Linux. Should work on Mac (not tested).
   - Easy to use interface ;)


Please visit the project page to download and try it
http://code.google.com/p/streamharvester/
-- 
Thanks & Regards,
Godson Gera
http://blog.godson.in
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091127/ab207d7a/attachment-0001.html>

From olivier.parisy at free.fr  Thu Nov 26 12:50:38 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Thu, 26 Nov 2009 20:50:38 +0100
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
	<f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
Message-ID: <4B0EDC0E.5020903@free.fr>

Godson Gera a écrit :
>
> Twisted is used for writing StreamHarvester's network functionality.
>
Hearing about full-fledged twisted applications is always nice!

How did you package the Windows version? Was there any gotcha?

Regards,
Olivier.





From godson.g at gmail.com  Thu Nov 26 13:14:13 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Nov 2009 01:44:13 +0530
Subject: [Twisted-Python] ANN: StreamHarvester-0.1 Beta
In-Reply-To: <4B0EDC0E.5020903@free.fr>
References: <f9822b400911261046n2ff1a497ubd56dbba942a7c88@mail.gmail.com>
	<f9822b400911261048qc305e43v1ed8e1bf87966b3d@mail.gmail.com>
	<4B0EDC0E.5020903@free.fr>
Message-ID: <f9822b400911261214y495f2ce2t4c4cb014c336b3c1@mail.gmail.com>

On Fri, Nov 27, 2009 at 1:20 AM, Olivier Parisy <olivier.parisy at free.fr>wrote:

> Godson Gera a écrit :
> >
> > Twisted is used for writing StreamHarvester's network functionality.
> >
> Hearing about full-fledged twisted applications is always nice!
>
> How did you package the Windows version? Was there any gotcha?
>
> Regards,
> Olivier.
>

I've used py2exe for making exe application. Initially there were some
issues like required data files were left out. And some python modules were
not automatically included, for which I've used 'includes' option of py2exe.
After initial package the look&feel of  app was like a old MFC application,
solution was to include correct manifest file. Once the exe was made I've
used Inno setup for creating a setup file.  ( wxPython is used to build GUI
)

Also there were some issues in using wxreactor. On windows if I call
reactor.stop() to close the application it works perfectly. But on linux it
hangs forever, work around was to call sys.exit()

You can use GUI2Exe which will give a easy start for packaging python
applications.


-- 
Thanks & Regards,
Godson Gera
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091127/ab0dd04e/attachment.html>

From maris at chown.lv  Sat Nov 28 06:05:10 2009
From: maris at chown.lv (=?iso-8859-4?Q?M=E0risR?=)
Date: Sat, 28 Nov 2009 15:05:10 +0200
Subject: [Twisted-Python] Way to fix memory leaks of external c module
Message-ID: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>

Hello!
Currently I'm trying to write small xmlrpc server for html data processing. Processing is done by html tidy lib, but the problem is that it has massive memory leak. 
As processing is blocking operation I'm running it in thread, but after some time and huge html document processing daemon eats all memory.
I wondering if its possible to load utidylib in thread, do processing and after this kill thread and release memory? Or maybe something like deferToProcess?
Thanks in advance!



#!/usr/bin/env python
# -*- coding: utf-8 -*-

import utidylib

from twisted.internet import epollreactor
epollreactor.install()

from twisted.internet import protocol, defer, threads, reactor
from twisted.web import xmlrpc, server
from twisted.python import log, threadpool

import sys
reload(sys)
sys.setdefaultencoding('utf-8')

log.startLogging(sys.stdout)

import codecs

import gc
gc.enable()
gc.set_debug(gc.DEBUG_LEAK)
gc.set_threshold(1)

class TidyProtocol(xmlrpc.XMLRPC):

    def xmlrpc_tidify(self, data):
        defered = threads.deferToThread(self.tidyParse, data)
        defered.addCallback(self.returnToClient)
        return defered

    def tidyParse(self, data):
        options =  {
                        'drop-proprietary-attributes': '1',
                        'output-xhtml': '1',
                        'wrap': '0',
                        'bare': '0',
                        'clean': '1',
                        'doctype': 'omit',
                        'show-body-only': '1',
                        'word-2000': '0',
                        'escape-cdata': '0',
                        'hide-comments': '1',
                        'force-output': '1',
                        'alt-text': '',
                        'show-errors': '0',
                        'show-warnings': '0',
                        'tidy-mark': '0',
                        'char-encoding': 'utf8',
                    }

        if data['html'] == None:
            return None
        else:
            htmldata = data['html'].encode()
            print "Tidy start"
            return tidy.parseString(htmldata, **options)

    def returnToClient(self, data):
        gc.collect()
        print "Tidy end, retunring result"
        return data
        
if __name__ == '__main__':
    r = TidyProtocol()
    reactor.listenTCP(1100, server.Site(r))
    reactor.run()





From itamar at itamarst.org  Sat Nov 28 07:18:52 2009
From: itamar at itamarst.org (Itamar Turner-Trauring (aka Shtull-Trauring))
Date: Sat, 28 Nov 2009 09:18:52 -0500
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
Message-ID: <1259417932.21413.8.camel@pintsize>

On Sat, 2009-11-28 at 15:05 +0200, MārisR wrote:

> I wondering if its possible to load utidylib in thread, do processing
> and after this kill thread and release memory? Or maybe something like
> deferToProcess?

1. You should report the bug to the utidylib authors, so they can fix it
or pass it on to tidy authors.

2. A thread wouldn't help... but a process certainly would.
https://launchpad.net/ampoule may be helpful if you don't want to
implement your own process wrapper, or you could just run a sub-process
that takes input and output filenames on the command-line and pass data
around that way.





From exarkun at twistedmatrix.com  Sat Nov 28 07:43:26 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Nov 2009 14:43:26 -0000
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
Message-ID: <20091128144326.2549.468866991.divmod.xquotient.7@localhost.localdomain>

On 01:05 pm, maris at chown.lv wrote:
>Hello!
>Currently I'm trying to write small xmlrpc server for html data 
>processing. Processing is done by html tidy lib, but the problem is 
>that it has massive memory leak.
>As processing is blocking operation I'm running it in thread, but after 
>some time and huge html document processing daemon eats all memory.
>I wondering if its possible to load utidylib in thread, do processing 
>and after this kill thread and release memory? Or maybe something like 
>deferToProcess?
>Thanks in advance!
>
>
>
>#!/usr/bin/env python
># -*- coding: utf-8 -*-
>
>import utidylib
>
>from twisted.internet import epollreactor
>epollreactor.install()
>
>from twisted.internet import protocol, defer, threads, reactor
>from twisted.web import xmlrpc, server
>from twisted.python import log, threadpool
>
>import sys
>reload(sys)
>sys.setdefaultencoding('utf-8')
>
>log.startLogging(sys.stdout)
>
>import codecs
>
>import gc
>gc.enable()
>gc.set_debug(gc.DEBUG_LEAK)

Amongst other things, gc.set_debug(gc.DEBUG_LEAK) means "never free any 
object that is part of a cycle".  That is, it's a good way to introduce 
lots of new object leaks into your program.

Jean-Paul



From olivier.parisy at free.fr  Sat Nov 28 15:52:55 2009
From: olivier.parisy at free.fr (Olivier Parisy)
Date: Sat, 28 Nov 2009 23:52:55 +0100
Subject: [Twisted-Python] Transfering a transport between
	DatagramProtocols
In-Reply-To: <10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
References: <4B0C4F7B.2010404@free.fr>
	<10BF0EFA-2F3F-4C1A-B0E8-98BC2C1B9B1D@twistedmatrix.com>
Message-ID: <4B11A9C7.4080307@free.fr>

Glyph Lefkowitz a écrit :
> On Nov 24, 2009, at 4:26 PM, Olivier Parisy wrote:
>
>   
>> Is this the "twisted" way to analyse this? Or should I use some kind of 
>> "proxy" DatagramProtocol which would relay datagramReceived calls to the 
>> proper DatagramProtocol, depending on the current protocol state 
>> (handshaking or data exchange)?
>>     
>
> Currently, the right way to do this is to do as you suggest, and have two DatagramProtocol instances, and a third which switches between them.
>   
I tried to implement such a "switching" class so that I could freely 
change the DatagramProtocol handling a given port without releasing it.

It is typically used in the following way :
        self.protocol = 
DelegatingDatagramProtocol(MyFirstDatagramProtocol())
        self.udpPort = reactor.listenUDP(0, self.protocol)

Then, later in the code :
       self.protocol.switchProtocol(MySecondDatagramProtocol())

Here is my current implementation :

# Breaks when inheriting from DatagramProtocol?
class DelegatingDatagramProtocol:
    def __init__(self, protocol):
        self._protocol = protocol

    def switchProtocol(self, protocol):
        self._protocol = protocol
        protocol.transport = self.transport
       
    def makeConnection(self, transport):
        self._protocol.makeConnection(transport)
        # Needed by switchProtocol
        self.transport = transport
       
    # Avoid an AssertionError (protocol.py:527 assert self.numPorts > 0)
    def doStop(self):
        pass
   
    # See 
http://www.python.org/workshops/1997-10/proceedings/savikko.html (Proxy 
pattern)
    def __getattr__(self, name):
        print 'Delegating to protocol: %s' % name
        return getattr(self._protocol, name)

It mostly works, but I have two issues with it :
- When doStop() is called by the reactor, an AssertionError is raised. I 
suppose this is due to my "sharing" of the transport in switchProtocol 
(which ensures that "transport.write" calls are directed to the proper 
transport), but how can I fix it?
- If my class extends DatagramProtocol, it stops working 
(transport.write calls seems honored, then nothing works... I suppose 
datagramReceived is never called). Why is it so?

Regards,
Olivier.





From exarkun at twistedmatrix.com  Sat Nov 28 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Nov 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1259471111.58.864515814@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091129/5bd58fc4/attachment-0001.html>

From maris at chown.lv  Mon Nov 30 09:22:29 2009
From: maris at chown.lv (Maris Ruskulis)
Date: Mon, 30 Nov 2009 18:22:29 +0200
Subject: [Twisted-Python] Way to fix memory leaks of external c module
In-Reply-To: <1259417932.21413.8.camel@pintsize>
References: <510C5A8D-FC8D-4DCE-8021-1F902D069ED5@chown.lv>
	<1259417932.21413.8.camel@pintsize>
Message-ID: <4B13F145.5000402@chown.lv>

Itamar Turner-Trauring (aka Shtull-Trauring) wrote:
> On Sat, 2009-11-28 at 15:05 +0200, MārisR wrote:
>
>   
>> I wondering if its possible to load utidylib in thread, do processing
>> and after this kill thread and release memory? Or maybe something like
>> deferToProcess?
>>     
>
> 1. You should report the bug to the utidylib authors, so they can fix it
> or pass it on to tidy authors.
>
> 2. A thread wouldn't help... but a process certainly would.
> https://launchpad.net/ampoule may be helpful if you don't want to
> implement your own process wrapper, or you could just run a sub-process
> that takes input and output filenames on the command-line and pass data
> around that way.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   
Thanks for replay!
I tried pytidylib, and have same issue with memory leak, unfortunately I 
couldn't report bug to, because, tidylib is self patched by one c 
programmer, but problem, is that he have no more time for it.
After day on playing with ampoule, I got it working :) But I run into 
another problem, AMP value length is limited to 64kb. Seems its a struct 
pack limitation. Probably I could split message into chunks <64kb each 
and feed to amp something like: pp.doWork(Tidy, html={'chunk1':  data1, 
'chunk2':  data2...} )
or maybe there is more easy/clean way?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091130/b4f2d588/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: maris.vcf
Type: text/x-vcard
Size: 216 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20091130/b4f2d588/attachment-0002.vcf>

From maris at chown.lv  Mon Nov 30 12:10:58 2009
From: maris at chown.lv (=?iso-8859-4?Q?M=E0risR?=)
Date: Mon, 30 Nov 2009 21:10:58 +0200
Subject: [Twisted-Python] is there way to baypass value limit of 64kb in
	twisted.protocols.amp
Message-ID: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>

Hello!
I'm currently trying to figure out, how to bypass amp value limit of 64kb. First tought was to split string into chunks <64kb, then join before processing. Problem is, how to dinamicaly generate amp.Command argument list. Maybe there is other well known method how to achieve this?
Thank You!


From glyph at twistedmatrix.com  Mon Nov 30 12:23:48 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Nov 2009 14:23:48 -0500
Subject: [Twisted-Python] is there way to baypass value limit of 64kb in
	twisted.protocols.amp
In-Reply-To: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>
References: <44752311-036A-4D43-B56C-0494753D86BF@chown.lv>
Message-ID: <B878DEA1-EC54-4D00-ADE2-129216EEA48F@twistedmatrix.com>

On Nov 30, 2009, at 2:10 PM, MārisR wrote:

> I'm currently trying to figure out, how to bypass amp value limit of 64kb. First tought was to split string into chunks <64kb, then join before processing. Problem is, how to dinamicaly generate amp.Command argument list. Maybe there is other well known method how to achieve this?


You can define your own Argument which reads multiple values, rather than dynamically generating the arguments list.  This is what you want anyway, because your application code wants to receive one value; the fact that you are splitting/joining at the protocol level should not be important.

There's an example of this implemented here:

http://bazaar.launchpad.net/%7Eglyph/%2Bjunk/amphacks/annotate/head%3A/python/amphacks/mediumbox.py

The reason that this isn't currently included in the core AMP implementation is that if you need to transfer values larger than this limit, perhaps you should be doing the transfer in some other way. Streaming the result?  Doing the transfer out-of-band as (for example) an HTTP request?

I think this might be an unhelpful way to ask people to consider this problem, so we may end up packaging something similar in Twisted eventually.  One way to do this might be by doing this: <http://twistedmatrix.com/trac/ticket/2529>, another might be bundling the contents of mediumbox.py (or something like it) into amp.py.




From kevin.horn at gmail.com  Mon Nov 30 14:05:30 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 30 Nov 2009 15:05:30 -0600
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report
Message-ID: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>

The previous thread was getting a little long, so I thought I'd start a new
one...

I haven't made as much headway on this as I would have liked, but I'm just
going to blame the US Thanksgiving holiday and hope no one looks too closely
at the dates of the previous emails. ;)

Here's what I've done lately:

- The proposal [1] has been updated, with a number of minor spelling
formatting fixes, and a detailed timeline for each phase of the project.
Please give feedback if you see anything missing from the timelines,
anything you think should be done in a different order, or any other
unaddressed issues.

- I've done a small amount of work on the lore2sphinx tool, and the new
output of the conversion process is now online [2].  Not a lot changes, the
only obviosu thing is that <img> tags are now handled.  The rest has been
mostly refactoring and generally making the code easier to work with.

- I also did a bit of digging around in the Divmod SVN repository, and it
looks like Nevow, Mantissa, and Epsilon are the only projects that have Lore
source docs.  Can anyone out there verify that this is correct?  Did I miss
anything?

I'll try to send out a progress report like this every week or so in order
to avoid people thinking that I've lost interest or gotten hit by a bus.

Thanks for "listening"!

Kevin Horn



[1] http://twistedsphinx.funsize.net/proposal.html
[2] http://twistedsphinx.funsize.net/index.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20091130/6fc72829/attachment.html>

From marco.giusti at gmail.com  Mon Nov 30 15:39:47 2009
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 30 Nov 2009 23:39:47 +0100
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report
In-Reply-To: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>
References: <562bcc10911301305x2217b2dsee313f6de1c19f7a@mail.gmail.com>
Message-ID: <20091130223947.GA5898@murdoc.net>

On Mon, Nov 30, 2009 at 03:05:30PM -0600, Kevin Horn wrote:
> [...]
> Thanks for "listening"!

some notices about what i get[1]. mainly i'd like if you could make the
documentation more readable when the browser's window is not really big.
usually i do not use the browser with the window maximized so will be
really helpful if you can check the following points:

* in the navigation bar "twisted web documentation" is repeated twice
and is breaked in two lines.

* the table of contents steals a lot of vertical space while it is
visible only at the top of the page. in this circumstances i prefer "the
lore way", ie. showing the table of contents in the normal content flow
at the top and not in a side column.

* again the left blue column steal vertical space an maybe can be
reduced.

* would be great if the layout will fit in the page width: as you can
see the index link is half hidden.

obiviusly with a bigger window all the aboves are not more valid and all
looks pretty.

ciao
m.


[1] http://img44.imageshack.us/img44/1953/sphinx.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20091130/a2ad200e/attachment.sig>

